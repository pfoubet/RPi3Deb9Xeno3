 RADICAL LONG
2FA8      ; [.8E42.0020.0004] # KANGXI RADICAL GATE
2FA9      ; [.8E45.0020.0004] # KANGXI RADICAL MOUND
2FAA      ; [.8E59.0020.0004] # KANGXI RADICAL SLAVE
2FAB      ; [.8E5A.0020.0004] # KANGXI RADICAL SHORT TAILED BIRD
2FAC      ; [.8E5C.0020.0004] # KANGXI RADICAL RAIN
2FAD      ; [.8E5D.0020.0004] # KANGXI RADICAL BLUE
2FAE      ; [.8E5F.0020.0004] # KANGXI RADICAL WRONG
2FAF      ; [.949C.0020.0004] # KANGXI RADICAL FACE
2FB0      ; [.949D.0020.0004] # KANGXI RADICAL LEATHER
2FB1      ; [.949E.0020.0004] # KANGXI RADICAL TANNED LEATHER
2FB2      ; [.94A0.0020.0004] # KANGXI RADICAL LEEK
2FB3      ; [.94A1.0020.0004] # KANGXI RADICAL SOUND
2FB4      ; [.94A2.0020.0004] # KANGXI RADICAL LEAF
32A0      ; [.AC44.0020.0006] # CIRCLED IDEOGRAPH ITEM
2FB5      ; [.94A7.0020.0004] # KANGXI RADICAL WIND
2FB6      ; [.94AB.0020.0004] # KANGXI RADICAL FLY
2FB7      ; [.94AD.0020.0004] # KANGXI RADICAL EAT
2FB8      ; [.94B7.0020.0004] # KANGXI RADICAL HEAD
2FB9      ; [.94B9.0020.0004] # KANGXI RADICAL FRAGRANT
2FBA      ; [.9BF9.0020.0004] # KANGXI RADICAL HORSE
2FBB      ; [.9C00.0020.0004] # KANGXI RADICAL BONE
2FBC      ; [.9C01.0020.0004] # KANGXI RADICAL TALL
2FBD      ; [.9C02.0020.0004] # KANGXI RADICAL HAIR
2FBE      ; [.9C03.0020.0004] # KANGXI RADICAL FIGHT
2FBF      ; [.9C04.0020.0004] # KANGXI RADICAL SACRIFICIAL WINE
2FC0      ; [.9C05.0020.0004] # KANGXI RADICAL CAULDRON
2FC1      ; [.9C06.0020.0004] # KANGXI RADICAL GHOST
2FC2      ; [.A408.0020.0004] # KANGXI RADICAL FISH
2FC3      ; [.A40A.0020.0004] # KANGXI RADICAL BIRD
2FC4      ; [.A414.0020.0004] # KANGXI RADICAL SALT
2FC5      ; [.A415.0020.0004] # KANGXI RADICAL DEER
2FC6      ; [.A416.0020.0004] # KANGXI RADICAL WHEAT
2FC7      ; [.A418.0020.0004] # KANGXI RADICAL HEMP
2FC8      ; [.AC78.0020.0004] # KANGXI RADICAL YELLOW
2FC9      ; [.AC7A.0020.0004] # KANGXI RADICAL MILLET
2FCA      ; [.AC7B.0020.0004] # KANGXI RADICAL BLACK
2FCB      ; [.AC7C.0020.0004] # KANGXI RADICAL EMBROIDERY
2FCC      ; [.B440.0020.0004] # KANGXI RADICAL FROG
2FCD      ; [.B442.0020.0004] # KANGXI RADICAL TRIPOD
2FCE      ; [.B443.0020.0004] # KANGXI RADICAL DRUM
2FCF      ; [.B445.0020.0004] # KANGXI RADICAL RAT
2FD0      ; [.BB56.0020.0004] # KANGXI RADICAL NOSE
2FD1      ; [.BB57.0020.0004] # KANGXI RADICAL EVEN
2FD2      ; [.C273.0020.0004] # KANGXI RADICAL TOOTH
2FD3      ; [.C85E.0020.0004] # KANGXI RADICAL DRAGON
2FD4      ; [.C85F.0020.0004] # KANGXI RADICAL TURTLE
2EF3      ; [.88F9.0020.0004] # CJK RADICAL C-SIMPLIFIED TURTLE
2FD5      ; [.CD3C.0020.0004] # KANGXI RADICAL FLUTE
F967      ; [.80BF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F967
FA70      ; [.88FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA70
F905      ; [.852F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F905
2F801     ; [.805D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F801
F95E      ; [.80CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95E
2F800     ; [.852D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F800
2F802     ; [.8006.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F802
F91B      ; [.AC80.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91B
F9BA      ; [.8028.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BA
F977      ; [.8E86.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F977
F9FD      ; [.80DC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FD
2F819     ; [.80E8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F819
F9A8      ; [.81C3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A8
2F804     ; [.856D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F804
FA73      ; [.8928.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA73
F92D      ; [.892E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92D
F9B5      ; [.8933.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B5
FA30      ; [.8E8B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA30
2F805     ; [.8E8B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F805
2F806     ; [.8E98.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F806
F965      ; [.8E9C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F965
2F807     ; [.94E6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F807
F9D4      ; [.950F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D4
2F808     ; [.9C54.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F808
2F809     ; [.A43E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F809
2F80B     ; [.B44E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80B
F9BB      ; [.B459.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BB
FA31      ; [.B466.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA31
2F80A     ; [.B466.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80A
FA0C      ; [.8070.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0C
FA74      ; [.81D0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA74
FA32      ; [.8578.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA32
2F80E     ; [.8578.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80E
2F80F     ; [.895B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80F
2F810     ; [.D692.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F810
2F814     ; [.80F3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F814
FA72      ; [.8350.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA72
F978      ; [.895F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F978
F9D1      ; [.80F5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D1
2F811     ; [.8961.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F811
FA75      ; [.C28C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA75
2F815     ; [.8356.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F815
2F8D2     ; [.8ED4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D2
2F8D3     ; [.9C63.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D3
2F817     ; [.80FF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F817
2F818     ; [.9535.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F818
2F81A     ; [.81DA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81A
FA71      ; [.8582.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA71
2F81B     ; [.8582.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81B
F92E      ; [.8584.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92E
F979      ; [.953F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F979
F955      ; [.9542.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F955
F954      ; [.BB7E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F954
FA15      ; [.C28F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA15
2F81D     ; [.8037.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81D
2F81E     ; [.8075.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81E
FA00      ; [.8107.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA00
2F850     ; [.8107.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F850
F99C      ; [.836E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99C
F9DD      ; [.8598.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DD
F9FF      ; [.897C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FF
2F820     ; [.897D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F820
2F821     ; [.8986.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F821
2F822     ; [.A45F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F822
2F823     ; [.ACB4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F823
F9C7      ; [.BB84.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C7
F98A      ; [.803C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98A
F99D      ; [.8373.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99D
2F992     ; [.85A7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F992
FA76      ; [.8EF2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA76
2F825     ; [.8EF2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F825
FA33      ; [.8EF4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA33
2F826     ; [.8EF4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F826
F952      ; [.9C76.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F952
F92F      ; [.A466.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92F
FA34      ; [.ACC2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA34
2F827     ; [.ACC2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F827
F97F      ; [.C879.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97F
FA77      ; [.8078.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA77
2F828     ; [.8078.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F828
2F829     ; [.81F1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F829
2F82A     ; [.81F2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82A
F963      ; [.81F4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F963
2F82B     ; [.81F4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82B
F9EB      ; [.9C89.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EB
2F82C     ; [.81F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82C
FA35      ; [.899A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA35
2F82D     ; [.899A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82D
2F82E     ; [.A46C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82E
2F82F     ; [.85B4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82F
F91C      ; [.85B6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91C
2F830     ; [.8F00.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F830
2F831     ; [.9569.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F831
2F832     ; [.9569.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F832
2F833     ; [.9569.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F833
F96B      ; [.9C93.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96B
2F836     ; [.8126.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F836
2F837     ; [.9570.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F837
F906      ; [.820E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F906
2F839     ; [.8214.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F839
2F83A     ; [.821A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83A
2F83B     ; [.8396.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83B
F9DE      ; [.839F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DE
F9ED      ; [.85C5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9ED
2F83D     ; [.85E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83D
F980      ; [.85EA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F980
2F83E     ; [.85F0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83E
2F83F     ; [.89C3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83F
2F83C     ; [.8F0F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83C
2F840     ; [.8F13.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F840
F99E      ; [.8F2E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99E
2F841     ; [.9589.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F841
2F842     ; [.95A2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F842
2F843     ; [.9CC4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F843
FA79      ; [.9CC6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA79
2F844     ; [.9CD2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F844
2F845     ; [.A485.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F845
2F846     ; [.A485.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F846
F90B      ; [.A488.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90B
FA7A      ; [.A499.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7A
2F847     ; [.A499.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F847
FA36      ; [.A49D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA36
FA78      ; [.A49D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA78
2F848     ; [.A4AB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F848
2F849     ; [.A4B3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F849
FA0D      ; [.ACD8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0D
2F84A     ; [.ACDA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84A
FA7B      ; [.ACF9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7B
FA37      ; [.B4AA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA37
2F84C     ; [.B4AA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84C
2F84E     ; [.B4CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84E
FA38      ; [.C2AA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA38
2F84F     ; [.BBCD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84F
F9A9      ; [.8A04.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A9
2F84B     ; [.B4DC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84B
2F84D     ; [.B4DD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84D
2F855     ; [.8F63.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F855
2F852     ; [.8F8E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F852
2F853     ; [.9D1E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F853
2F854     ; [.9D37.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F854
2F857     ; [.A4EB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F857
2F856     ; [.95F7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F856
FA39      ; [.A4F7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA39
FA10      ; [.AD39.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA10
FA7C      ; [.AD39.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7C
F96C      ; [.AD3D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96C
FA3A      ; [.C26D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3A
2F858     ; [.BBE8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F858
FA7D      ; [.BBEE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7D
F94A      ; [.CD66.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94A
F942      ; [.D106.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F942
2F851     ; [.83C5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F851
2F85A     ; [.864B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85A
2F85B     ; [.9D44.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85B
2F85C     ; [.864D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85C
2F85D     ; [.83C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85D
2F85E     ; [.B513.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85E
FA7E      ; [.8A41.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7E
F90C      ; [.8A45.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90C
F909      ; [.8F99.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F909
FA7F      ; [.8A4B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7F
2F85F     ; [.9D4E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85F
F981      ; [.8088.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F981
2F865     ; [.8FA7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F865
2F862     ; [.960A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F862
2F863     ; [.961C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F863
2F864     ; [.9628.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F864
FA80      ; [.9D80.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA80
2F866     ; [.9D84.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F866
2F986     ; [.AD61.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F986
2F869     ; [.BC16.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F869
FA81      ; [.C2FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA81
2F86A     ; [.D110.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86A
2F86B     ; [.D110.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86B
FA04      ; [.83EC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA04
2F86D     ; [.9DA6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86D
2F86E     ; [.AD8F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86E
F95F      ; [.B554.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95F
F9AA      ; [.B554.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AA
2F86F     ; [.B554.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86F
F9BC      ; [.BC2E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BC
2F870     ; [.D116.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F870
2F872     ; [.868E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F872
2F873     ; [.8FE9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F873
2F875     ; [.8092.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F875
F9BD      ; [.8695.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BD
2F877     ; [.9DB7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F877
F94B      ; [.B558.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94B
FA3B      ; [.BC33.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3B
F9DF      ; [.BC34.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DF
FA3C      ; [.8096.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3C
2F878     ; [.8096.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F878
2F87A     ; [.86B2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87A
2F879     ; [.8AD0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F879
F9D5      ; [.9DCB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D5
2F87C     ; [.A589.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87C
F921      ; [.A595.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F921
2F87F     ; [.A5A7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87F
2F87E     ; [.ADAD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87E
2F880     ; [.B563.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F880
2F9F4     ; [.C30C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F4
F9AB      ; [.C8D1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AB
2F881     ; [.88A4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F881
2F882     ; [.9DE6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F882
2F884     ; [.A5AA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F884
2F885     ; [.9681.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F885
2F886     ; [.A5AD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F886
2F887     ; [.BC5D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F887
F98E      ; [.8414.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98E
FA01      ; [.9036.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA01
2F88B     ; [.9038.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88B
2F88C     ; [.9DF7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88C
2F88D     ; [.9DFA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88D
F9A2      ; [.ADC4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A2
F928      ; [.A5C1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F928
2F88E     ; [.A5C1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88E
FA82      ; [.B587.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA82
FA0B      ; [.B588.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0B
FA83      ; [.B58E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA83
F982      ; [.D123.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F982
2F890     ; [.80A5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F890
F943      ; [.86D2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F943
2F894     ; [.8AF8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F894
2F895     ; [.8AF8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F895
2F874     ; [.8423.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F874
2F899     ; [.86D9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F899
FA84      ; [.9E0A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA84
2F89A     ; [.9E0B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89A
F9D8      ; [.904F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D8
2F89C     ; [.A5CB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89C
F966      ; [.A5D0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F966
FA85      ; [.ADD2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA85
2F89D     ; [.86E4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89D
2F89E     ; [.86E9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89E
F9A3      ; [.8B15.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A3
2F89F     ; [.8702.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89F
F960      ; [.9054.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F960
F9AC      ; [.8B2D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AC
FA6B      ; [.96BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA6B
2F8A0     ; [.96C6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A0
FA3D      ; [.96D5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3D
2F8A3     ; [.96D5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A3
2F8A5     ; [.9E43.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A5
FA86      ; [.9E4E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA86
F9B9      ; [.A5E1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B9
FA88      ; [.ADDF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA88
F9D9      ; [.ADFC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D9
2F8A6     ; [.B5A7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A6
2F8A7     ; [.AE01.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A7
2F8A9     ; [.AE01.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A9
FA87      ; [.AE03.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA87
2F8A8     ; [.AE03.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A8
FA8A      ; [.B5B4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8A
FA3E      ; [.A614.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3E
2F8AA     ; [.B5C3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AA
FA3F      ; [.BC8F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3F
FA89      ; [.BC8F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA89
2F8AB     ; [.BC8F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AB
F98F      ; [.BC91.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98F
2F8AD     ; [.BC9F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AD
2F8AE     ; [.BCA7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AE
2F8AC     ; [.C332.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AC
2F8AF     ; [.C8EF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AF
FA40      ; [.D12A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA40
FA8B      ; [.D12A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8B
2F8B0     ; [.D12A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B0
F90D      ; [.D12C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90D
2F8B1     ; [.D12C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B1
F990      ; [.D9A5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F990
2F8B2     ; [.8435.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B2
2F8B3     ; [.9E66.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B3
F9D2      ; [.BCAF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D2
FA8C      ; [.C8FA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8C
2F8B4     ; [.843C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B4
2F8B5     ; [.8B64.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B5
F925      ; [.8B7C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F925
F95B      ; [.9096.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95B
FA02      ; [.8B85.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA02
2F8B6     ; [.8B86.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B6
2F8BA     ; [.90AC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BA
F973      ; [.90AE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F973
2F8B9     ; [.970C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B9
2F8B7     ; [.971F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B7
2F8BB     ; [.9E77.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BB
F9A4      ; [.9E8A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A4
2F8BC     ; [.9E92.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BC
F975      ; [.9EAD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F975
2F8C1     ; [.9EB5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C1
FA8D      ; [.A62A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8D
2F8C0     ; [.AE5E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C0
2F8BD     ; [.9737.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BD
FA8E      ; [.AE2E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8E
2F8BF     ; [.AE34.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BF
FA8F      ; [.A667.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8F
2F8C3     ; [.BCB3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C3
2F8C6     ; [.B603.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C6
2F8C4     ; [.B609.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C4
F991      ; [.BCCE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F991
2F8C5     ; [.BCD1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C5
F930      ; [.C35E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F930
FA41      ; [.9ED2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA41
2F8C8     ; [.9ED2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C8
FA90      ; [.9ED9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA90
2F8C9     ; [.AE62.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C9
F969      ; [.BCF5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F969
F9BE      ; [.9745.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BE
F983      ; [.974C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F983
FA42      ; [.90EA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA42
2F8CB     ; [.9EF0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CB
F9E0      ; [.8BC4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E0
2F8CD     ; [.9758.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CD
FA12      ; [.A69D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA12
FA91      ; [.A69D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA91
F9C5      ; [.AE80.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C5
FA43      ; [.A6AC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA43
2F8CF     ; [.A6AC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CF
2F8D5     ; [.B627.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D5
FA06      ; [.BD0D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA06
F98B      ; [.C39E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98B
F901      ; [.875D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F901
2F8CC     ; [.976A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CC
2F8D4     ; [.A454.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D4
F929      ; [.9773.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F929
FA92      ; [.9773.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA92
2F8D8     ; [.9773.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D8
FA93      ; [.9F11.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA93
2F8D9     ; [.9F11.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D9
2F8DA     ; [.AE99.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DA
F9E1      ; [.876E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E1
2F8DC     ; [.8773.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DC
FA94      ; [.8776.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA94
2F8DB     ; [.877E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DB
F9C8      ; [.8BEC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C8
2F8E0     ; [.8BF5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E0
F9F4      ; [.8C07.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F4
F9C9      ; [.9164.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C9
2F8DF     ; [.9169.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DF
F9DA      ; [.978C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DA
2F8E5     ; [.9794.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E5
2F8E1     ; [.9181.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E1
F97A      ; [.9F37.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97A
FA44      ; [.9F3B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA44
2F8E2     ; [.9F3B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E2
2F8E4     ; [.9F44.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E4
F9E2      ; [.9F5E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E2
2F8E6     ; [.A716.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E6
2F8E8     ; [.AEAF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E8
2F8E9     ; [.B650.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E9
2F8EA     ; [.BD23.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EA
F914      ; [.BD3B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F914
F95C      ; [.BD3B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95C
F9BF      ; [.BD3B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BF
F94C      ; [.BD4B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94C
2F8EB     ; [.C959.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EB
F931      ; [.D157.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F931
2F8ED     ; [.C962.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8ED
F91D      ; [.D6D0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91D
2F8EF     ; [.846F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EF
2F8F1     ; [.C403.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F1
2F8F3     ; [.AF0A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F3
F98C      ; [.C40A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98C
FA95      ; [.8165.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA95
2F8F4     ; [.B6A0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F4
F9A5      ; [.C969.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A5
F970      ; [.9F8B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F970
FA96      ; [.9F8B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA96
2F8F5     ; [.9F8B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F5
2F8F6     ; [.9F8C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F6
2F8FA     ; [.847F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FA
2F8FE     ; [.879D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FE
F972      ; [.87BB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F972
2F8FC     ; [.8C58.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FC
F968      ; [.8C64.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F968
2F8FD     ; [.8C65.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FD
F9E3      ; [.8C7C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E3
2F8FF     ; [.980A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FF
F915      ; [.91C0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F915
FA05      ; [.91C2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA05
2F907     ; [.91D6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F907
2F900     ; [.91E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F900
F9CA      ; [.91E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CA
FA97      ; [.91E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA97
2F902     ; [.91E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F902
2F903     ; [.981E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F903
F92A      ; [.981F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92A
FA45      ; [.982C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA45
2F901     ; [.982C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F901
2F904     ; [.982D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F904
2F905     ; [.983A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F905
F9F5      ; [.9FBA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F5
F94D      ; [.9FC9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94D
F9D6      ; [.9FD9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D6
2F90E     ; [.9FE8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90E
FA46      ; [.A004.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA46
2F908     ; [.A777.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F908
2F909     ; [.A7B5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F909
F9CB      ; [.AF31.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CB
F9EC      ; [.AF4F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EC
2F90C     ; [.AF5C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90C
FA99      ; [.A7D3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA99
2F90B     ; [.A7D3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90B
F904      ; [.AF63.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F904
FA98      ; [.AF6B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA98
F94E      ; [.B6CF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94E
FA47      ; [.B6E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA47
FA9A      ; [.B6E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9A
F992      ; [.B6E1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F992
2F90F     ; [.BDAD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90F
2F912     ; [.BDE2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F912
F922      ; [.C98A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F922
F984      ; [.CDED.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F984
2F915     ; [.D17C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F915
FA9B      ; [.D17F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9B
2F914     ; [.D17F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F914
2F913     ; [.D488.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F913
2F917     ; [.D6DB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F917
2F835     ; [.8497.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F835
2F919     ; [.87E1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F919
2F918     ; [.87E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F918
F9FB      ; [.8CB0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FB
2F91A     ; [.920A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F91A
F99F      ; [.9864.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99F
F916      ; [.9875.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F916
2F91C     ; [.AF89.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F91C
F993      ; [.AF8D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F993
FA48      ; [.A80B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA48
FA9C      ; [.A80B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9C
2F91E     ; [.BDE7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F91E
F9C0      ; [.C477.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C0
F9EE      ; [.C479.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EE
F932      ; [.D496.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F932
F91E      ; [.D6E6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91E
2F920     ; [.DC4E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F920
FA49      ; [.8172.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA49
FA9E      ; [.C9BB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9E
2F921     ; [.C9BB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F921
2F922     ; [.AFC5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F922
F946      ; [.87ED.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F946
2F924     ; [.A81A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F924
2F925     ; [.B745.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F925
FA9F      ; [.82A0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9F
F9FA      ; [.8CCA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FA
F92B      ; [.98A1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92B
FA16      ; [.A066.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA16
FAA0      ; [.A066.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA0
F9A7      ; [.CE18.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A7
2F928     ; [.D1A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F928
F961      ; [.A067.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F961
F9DB      ; [.A067.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DB
2F929     ; [.817E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F929
2F92B     ; [.8CEB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92B
F9AD      ; [.924C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AD
F917      ; [.98BB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F917
F9E4      ; [.A07D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E4
F9CC      ; [.98D0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CC
FA4A      ; [.A852.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4A
2F92E     ; [.AFF3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92E
2F92F     ; [.B008.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92F
F9AE      ; [.BE24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AE
FAA1      ; [.B763.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA1
2F930     ; [.B763.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F930
2F931     ; [.BE35.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F931
F994      ; [.BE39.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F994
F9EF      ; [.C4A4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EF
2F932     ; [.D1B4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F932
FAA2      ; [.B77A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA2
2F934     ; [.A882.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F934
FAA3      ; [.8D01.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA3
2F936     ; [.8D03.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F936
F9CD      ; [.98E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CD
F976      ; [.A09D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F976
F962      ; [.A0A1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F962
2F938     ; [.A0A1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F938
F9E5      ; [.A8A0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E5
2F93A     ; [.B047.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F93A
FAA4      ; [.BE59.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA4
FAA5      ; [.BE52.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA5
F9C1      ; [.C9EA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C1
F90E      ; [.D6F3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90E
FA17      ; [.990E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA17
FAA6      ; [.990E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA6
FAA7      ; [.A0BF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA7
F933      ; [.C4E1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F933
FAA8      ; [.8D1E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA8
2F940     ; [.8D1E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F940
F96D      ; [.92B6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96D
2F945     ; [.9928.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F945
2F946     ; [.9929.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F946
2F947     ; [.9929.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F947
FAAA      ; [.A0D7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAA
FAA9      ; [.A8C2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA9
2F948     ; [.A8C2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F948
2F94A     ; [.BE77.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F94A
FA9D      ; [.CA05.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9D
2F94E     ; [.A0E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F94E
F9CE      ; [.A8DD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CE
F93B      ; [.B08B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93B
2F94F     ; [.B08B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F94F
FA4B      ; [.B090.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4B
F947      ; [.BE90.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F947
FAAB      ; [.BE92.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAB
2F950     ; [.BE92.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F950
F964      ; [.CA26.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F964
F985      ; [.D4C9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F985
FA18      ; [.84B3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA18
FA4C      ; [.8D2E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4C
FA4E      ; [.92EC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4E
FA4D      ; [.92ED.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4D
FA4F      ; [.9963.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4F
FA50      ; [.9969.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA50
2F953     ; [.9969.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F953
FA51      ; [.9970.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA51
FA19      ; [.9971.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA19
FA1A      ; [.A0F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1A
F93C      ; [.B0A4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93C
FA52      ; [.B7DB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA52
FA53      ; [.B7DC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA53
FA1B      ; [.B7DD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1B
2F956     ; [.B7DD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F956
F9B6      ; [.CE6D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B6
F995      ; [.8D3A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F995
2F957     ; [.998A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F957
F956      ; [.B0BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F956
FA54      ; [.BEBC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA54
2F959     ; [.BEBC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F959
2F95A     ; [.B7F7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F95A
2F95B     ; [.C523.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F95B
FA55      ; [.930C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA55
FAAC      ; [.BEC4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAC
F9F7      ; [.82C4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F7
2F95F     ; [.B805.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F95F
F9F8      ; [.A12C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F8
FA56      ; [.B101.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA56
FAAD      ; [.B101.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAD
2F962     ; [.BEEF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F962
2F963     ; [.C53D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F963
F9A6      ; [.D1F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A6
F944      ; [.D8B1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F944
FAAE      ; [.9327.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAE
F9F9      ; [.A14C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F9
FA1D      ; [.B84B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1D
2F966     ; [.C563.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F966
FA03      ; [.C567.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA03
2F969     ; [.CE97.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F969
F97B      ; [.CE9B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97B
2F968     ; [.CA8C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F968
2F96A     ; [.9332.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96A
F9CF      ; [.99CE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CF
F96A      ; [.99E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96A
F94F      ; [.A15F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94F
FAAF      ; [.B111.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAF
2F96C     ; [.A95F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96C
F93D      ; [.B85B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93D
F957      ; [.B879.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F957
2F96E     ; [.B882.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96E
F996      ; [.BF35.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F996
FA57      ; [.BF35.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA57
FAB0      ; [.BF35.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB0
2F96F     ; [.BF43.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96F
FA58      ; [.C56B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA58
F950      ; [.CA9B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F950
FA59      ; [.CAA5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA59
2F970     ; [.CAA9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F970
FAB1      ; [.A98D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB1
FA5A      ; [.B149.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5A
F9E6      ; [.C591.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E6
2F976     ; [.C592.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F976
F90F      ; [.D220.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90F
2F978     ; [.A19D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F978
F9AF      ; [.A19E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AF
FA1E      ; [.84CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1E
2F979     ; [.CEC9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F979
F934      ; [.84CB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F934
FA5B      ; [.8D66.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5B
FAB2      ; [.8D66.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB2
2F97A     ; [.8D66.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F97A
F9B0      ; [.A1BB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B0
2F97D     ; [.A9A9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F97D
F997      ; [.CAC6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F997
2F97F     ; [.CAC7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F97F
F945      ; [.D8C0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F945
F953      ; [.84D3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F953
2F8D6     ; [.8D78.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D6
2F982     ; [.8D7D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F982
2F983     ; [.9A39.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F983
2F985     ; [.A9B8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F985
F926      ; [.D22E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F926
F9F6      ; [.CAE3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F6
FA5C      ; [.9A4D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5C
2F893     ; [.9A50.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F893
2F98B     ; [.9A50.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98B
2F98C     ; [.A9E2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98C
FA6D      ; [.C5C0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA6D
F97C      ; [.885F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97C
FA5D      ; [.80B4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5D
FA5E      ; [.80B4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5E
2F990     ; [.8868.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F990
2F98F     ; [.886E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98F
2F991     ; [.8D9B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F991
2F993     ; [.8DAF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F993
2F994     ; [.8DB1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F994
2F995     ; [.8DBA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F995
F974      ; [.93A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F974
2F998     ; [.93A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F998
2F996     ; [.93A9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F996
2F999     ; [.A1FD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F999
2F99C     ; [.A1FE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99C
F9FE      ; [.9A84.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FE
FAB3      ; [.9A9C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB3
2F9A0     ; [.9ABD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A0
2F99A     ; [.9AAB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99A
2F99B     ; [.A24D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99B
2F99D     ; [.A249.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99D
F93E      ; [.A9FD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93E
2F9A1     ; [.A9FE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A1
2F9A2     ; [.AA00.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A2
2F9A3     ; [.AA0F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A3
2F99E     ; [.AA1A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99E
FAB4      ; [.AA22.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB4
F958      ; [.AA24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F958
F918      ; [.B1A9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F918
F96E      ; [.B1B5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96E
FA5F      ; [.AA5A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5F
2F99F     ; [.AA5A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99F
F999      ; [.BF9A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F999
2F9A8     ; [.B208.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A8
2F9A9     ; [.BF9E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A9
F9C2      ; [.BFA7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C2
2F9AA     ; [.BFC0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9AA
2F9AC     ; [.C5F0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9AC
F923      ; [.CF09.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F923
F9F0      ; [.D510.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F0
F935      ; [.D51C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F935
FA20      ; [.D52F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA20
F91F      ; [.D73C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91F
F910      ; [.D9F1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F910
2F9B3     ; [.93DD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B3
F936      ; [.B20A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F936
2F9B4     ; [.B20A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B4
2F9B5     ; [.CB2D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B5
2F9B6     ; [.CF14.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B6
2F9B8     ; [.AA6B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B8
2F9B7     ; [.9AE5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B7
2F9BA     ; [.AA7D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BA
2F9B9     ; [.B227.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B9
2F9BC     ; [.B95E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BC
2F9BD     ; [.B981.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BD
FAB5      ; [.C612.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB5
2F9BB     ; [.C612.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BB
2F9BE     ; [.C617.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BE
F911      ; [.CB41.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F911
2F9C0     ; [.C027.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C0
2F9C1     ; [.D264.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C1
F927      ; [.D748.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F927
FA08      ; [.84ED.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA08
2F9C3     ; [.C63E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C3
2F9C4     ; [.84EE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C4
F9A0      ; [.AAAA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A0
F9E7      ; [.B239.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E7
2F9C6     ; [.AAB2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C6
2F9C7     ; [.B247.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C7
F9E8      ; [.B24A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E8
F912      ; [.B995.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F912
2F9C9     ; [.B997.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C9
FA60      ; [.C03D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA60
FAB6      ; [.CB6A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB6
F924      ; [.D53F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F924
FAB7      ; [.CF49.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB7
FA0A      ; [.8878.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0A
FA61      ; [.A103.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA61
FAB8      ; [.A103.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB8
2F9CF     ; [.B289.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9CF
F96F      ; [.B9C9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96F
F9A1      ; [.B9C9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A1
FAB9      ; [.C06A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB9
FABB      ; [.C076.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABB
F97D      ; [.C07D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97D
F941      ; [.C081.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F941
FABE      ; [.C671.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABE
2F9D0     ; [.C671.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D0
FA22      ; [.C08B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA22
FABA      ; [.C08B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABA
F95D      ; [.C681.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95D
FABD      ; [.C681.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABD
FA62      ; [.C684.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA62
FABC      ; [.C684.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABC
FA63      ; [.CF67.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA63
FABF      ; [.CF67.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABF
F9FC      ; [.D2AB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FC
F95A      ; [.D8E4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95A
FAC0      ; [.DA06.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC0
2F9D1     ; [.DA06.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D1
F900      ; [.9B36.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F900
2F9D2     ; [.8893.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D2
2F9D4     ; [.A2FF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D4
2F9D5     ; [.AB15.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D5
F948      ; [.B2A0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F948
F903      ; [.B2A6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F903
FA64      ; [.B9E4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA64
FA65      ; [.D2BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA65
FAC1      ; [.D2BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC1
2F9D6     ; [.DADB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D6
2F9D7     ; [.9B4D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D7
2F9DB     ; [.B2C0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DB
2F9DA     ; [.AB38.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DA
F937      ; [.B2D1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F937
2F9DC     ; [.B2D2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DC
F902      ; [.889D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F902
2F9DE     ; [.9B5B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DE
F998      ; [.C0FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F998
F9D7      ; [.C0FF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D7
FAC2      ; [.C6C7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC2
2F9DF     ; [.C6C7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DF
FA07      ; [.C6CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA07
F98D      ; [.D8FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98D
2F98D     ; [.B2F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98D
F971      ; [.88A2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F971
FA66      ; [.818F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA66
F99A      ; [.A353.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99A
FA25      ; [.AB86.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA25
FA67      ; [.AB86.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA67
FAC3      ; [.C6D6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC3
F9C3      ; [.C6DE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C3
F913      ; [.DA18.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F913
2F9E2     ; [.850D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E2
F92C      ; [.945D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92C
FA2E      ; [.9B86.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2E
2F9E3     ; [.9465.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E3
FA26      ; [.A369.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA26
2F9E4     ; [.B321.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E4
2F9E6     ; [.BA32.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E6
F919      ; [.B32C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F919
FAC4      ; [.CBE1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC4
F9B7      ; [.D582.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B7
F9E9      ; [.88C7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E9
F97E      ; [.ABA9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97E
F90A      ; [.8E33.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90A
F9B1      ; [.B33B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B1
2F9E7     ; [.B33F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E7
FAC5      ; [.BA52.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC5
2F9EA     ; [.BA91.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EA
2F9E8     ; [.C154.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E8
2F9E9     ; [.C155.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E9
F93F      ; [.C705.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93F
F99B      ; [.CBF2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99B
2F9EB     ; [.D330.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EB
2F9EC     ; [.D5A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EC
2F9EE     ; [.ABFD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EE
F986      ; [.C18F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F986
2F9F0     ; [.CC4C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F0
F9C6      ; [.88DE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C6
F951      ; [.948F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F951
FA09      ; [.9491.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA09
F959      ; [.A3DD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F959
F9D3      ; [.A3E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D3
FAC6      ; [.A3E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC6
F9DC      ; [.AC1A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DC
F9F1      ; [.C19A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F1
FA2F      ; [.C776.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2F
F9B8      ; [.CC60.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B8
2F9F3     ; [.AC28.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F3
F9EA      ; [.D014.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EA
FA68      ; [.D345.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA68
FAC7      ; [.D345.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC7
F9B2      ; [.B3BD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B2
F949      ; [.B3BE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F949
2F9F5     ; [.D017.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F5
F938      ; [.D7AA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F938
F9B3      ; [.DAFA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B3
FA1C      ; [.B3C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1C
FAC8      ; [.B3C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC8
FAC9      ; [.D5DE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC9
2F9FA     ; [.D5DF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9FA
FA69      ; [.D5E2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA69
FACA      ; [.D5E2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACA
FACB      ; [.B3D9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACB
2F9FE     ; [.B3D9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9FE
2F9FF     ; [.B3D9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9FF
F9B4      ; [.BAE3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B4
2FA00     ; [.C1C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA00
FA6A      ; [.C7A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA6A
FACC      ; [.C7A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACC
F9D0      ; [.D369.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D0
2FA02     ; [.9BF0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA02
FA2A      ; [.AC59.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2A
FA2B      ; [.B3F7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2B
FA2C      ; [.C7C5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2C
2FA04     ; [.C7C6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA04
2FA05     ; [.D37A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA05
2FA06     ; [.BB13.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA06
F91A      ; [.C7DC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91A
2FA07     ; [.CCB3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA07
F987      ; [.DC56.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F987
FACD      ; [.D619.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACD
2FA0A     ; [.D619.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0A
F939      ; [.C225.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F939
2FA0B     ; [.D645.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0B
F9F2      ; [.DA5D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F2
2FA0C     ; [.C247.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0C
2FA0F     ; [.CD1A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0F
FA2D      ; [.D80D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2D
F93A      ; [.DB1F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93A
F920      ; [.DC69.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F920
F940      ; [.A415.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F940
F988      ; [.D407.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F988
F9F3      ; [.DA80.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F3
2FA15     ; [.A418.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA15
F989      ; [.C26C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F989
2FA17     ; [.AC7C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA17
2FA18     ; [.8E79.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA18
2FA19     ; [.D834.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA19
2FA1A     ; [.C26F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA1A
2FA1B     ; [.D0DA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA1B
2FA1C     ; [.BB56.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA1C
FAD8      ; [.DA8C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAD8
F9C4      ; [.C85E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C4
FAD9      ; [.D0E5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAD9
F907      ; [.C85F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F907
F908      ; [.C85F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F908
FACE      ; [.C85F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACE
2F81F     ; [.858A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81F
2F888     ; [.C311.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F888
2F8D0     ; [.AE77.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D0
2F8CE     ; [.C38A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CE
2F8DE     ; [.8BD3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DE
2F8EE     ; [.D879.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EE
2F90A     ; [.AF20.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90A
2F92C     ; [.98A9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92C
2F92D     ; [.98A9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92D
FAD4      ; [.A8B8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAD4
2F949     ; [.A8B8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F949
2F960     ; [.B808.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F960
2F96D     ; [.BF14.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96D
2F8D7     ; [.8D6B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D7
2FA0E     ; [.D64A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0E
2F8F9     ; [.B6A5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F9
FA6C      ; [.AFBE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA6C
2F93C     ; [.D6F7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F93C
ENTRY
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            use Unicode::Collate::CJK::Zhuyin;
+{
   locale_version => 1.14,
   overrideCJK => \&Unicode::Collate::CJK::Zhuyin::weightZhuyin,
   entry => <<'ENTRY', # for DUCET v7.0.0
02C9      ; [.0000.0199.0002] # MODIFIER LETTER MACRON
02CA      ; [.019A.0020.0002] # MODIFIER LETTER ACUTE ACCENT
02C7      ; [.019B.0020.0002] # CARON
02CB      ; [.019C.0020.0002] # MODIFIER LETTER GRAVE ACCENT
02D9      ; [.019D.0020.0002] # DOT ABOVE
02EA      ; [.019E.0020.0002] # MODIFIER LETTER YIN DEPARTING TONE MARK
02EB      ; [.019F.0020.0002] # MODIFIER LETTER YANG DEPARTING TONE MARK
0101      ; [.190C.001C.0002] # LATIN SMALL LETTER A WITH MACRON
0061 0304 ; [.190C.001C.0002] # LATIN SMALL LETTER A WITH MACRON
0100      ; [.190C.001C.0008] # LATIN CAPITAL LETTER A WITH MACRON
0041 0304 ; [.190C.001C.0008] # LATIN CAPITAL LETTER A WITH MACRON
00E1      ; [.190C.001D.0002] # LATIN SMALL LETTER A WITH ACUTE
0061 0301 ; [.190C.001D.0002] # LATIN SMALL LETTER A WITH ACUTE
0061 0341 ; [.190C.001D.0002] # LATIN SMALL LETTER A WITH ACUTE
00C1      ; [.190C.001D.0008] # LATIN CAPITAL LETTER A WITH ACUTE
0041 0301 ; [.190C.001D.0008] # LATIN CAPITAL LETTER A WITH ACUTE
0041 0341 ; [.190C.001D.0008] # LATIN CAPITAL LETTER A WITH ACUTE
01CE      ; [.190C.001E.0002] # LATIN SMALL LETTER A WITH CARON
0061 030C ; [.190C.001E.0002] # LATIN SMALL LETTER A WITH CARON
01CD      ; [.190C.001E.0008] # LATIN CAPITAL LETTER A WITH CARON
0041 030C ; [.190C.001E.0008] # LATIN CAPITAL LETTER A WITH CARON
00E0      ; [.190C.001F.0002] # LATIN SMALL LETTER A WITH GRAVE
0061 0300 ; [.190C.001F.0002] # LATIN SMALL LETTER A WITH GRAVE
0061 0340 ; [.190C.001F.0002] # LATIN SMALL LETTER A WITH GRAVE
00C0      ; [.190C.001F.0008] # LATIN CAPITAL LETTER A WITH GRAVE
0041 0300 ; [.190C.001F.0008] # LATIN CAPITAL LETTER A WITH GRAVE
0041 0340 ; [.190C.001F.0008] # LATIN CAPITAL LETTER A WITH GRAVE
0113      ; [.196E.001C.0002] # LATIN SMALL LETTER E WITH MACRON
0065 0304 ; [.196E.001C.0002] # LATIN SMALL LETTER E WITH MACRON
0112      ; [.196E.001C.0008] # LATIN CAPITAL LETTER E WITH MACRON
0045 0304 ; [.196E.001C.0008] # LATIN CAPITAL LETTER E WITH MACRON
00E9      ; [.196E.001D.0002] # LATIN SMALL LETTER E WITH ACUTE
0065 0301 ; [.196E.001D.0002] # LATIN SMALL LETTER E WITH ACUTE
0065 0341 ; [.196E.001D.0002] # LATIN SMALL LETTER E WITH ACUTE
00C9      ; [.196E.001D.0008] # LATIN CAPITAL LETTER E WITH ACUTE
0045 0301 ; [.196E.001D.0008] # LATIN CAPITAL LETTER E WITH ACUTE
0045 0341 ; [.196E.001D.0008] # LATIN CAPITAL LETTER E WITH ACUTE
011B      ; [.196E.001E.0002] # LATIN SMALL LETTER E WITH CARON
0065 030C ; [.196E.001E.0002] # LATIN SMALL LETTER E WITH CARON
011A      ; [.196E.001E.0008] # LATIN CAPITAL LETTER E WITH CARON
0045 030C ; [.196E.001E.0008] # LATIN CAPITAL LETTER E WITH CARON
00E8      ; [.196E.001F.0002] # LATIN SMALL LETTER E WITH GRAVE
0065 0300 ; [.196E.001F.0002] # LATIN SMALL LETTER E WITH GRAVE
0065 0340 ; [.196E.001F.0002] # LATIN SMALL LETTER E WITH GRAVE
00C8      ; [.196E.001F.0008] # LATIN CAPITAL LETTER E WITH GRAVE
0045 0300 ; [.196E.001F.0008] # LATIN CAPITAL LETTER E WITH GRAVE
0045 0340 ; [.196E.001F.0008] # LATIN CAPITAL LETTER E WITH GRAVE
00EA 0304 ; [.196E.0021.0002] # <LATIN SMALL LETTER E WITH CIRCUMFLEX, COMBINING MACRON>
00CA 0304 ; [.196E.0021.0008] # <LATIN CAPITAL LETTER E WITH CIRCUMFLEX, COMBINING MACRON>
0065 0302 0304 ; [.196E.0021.0002] # <LATIN SMALL LETTER E, COMBINING CIRCUMFLEX ACCENT, COMBINING MACRON>
0045 0302 0304 ; [.196E.0021.0008] # <LATIN CAPITAL LETTER E, COMBINING CIRCUMFLEX ACCENT, COMBINING MACRON>
1EBF      ; [.196E.0022.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE
0065 0302 0301 ; [.196E.0022.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE
0065 0302 0341 ; [.196E.0022.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE
1EBE      ; [.196E.0022.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE
0045 0302 0301 ; [.196E.0022.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE
0045 0302 0341 ; [.196E.0022.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE
00EA 0301 ; [.196E.0022.0002] # <LATIN SMALL LETTER E WITH CIRCUMFLEX, COMBINING ACUTE ACCENT>
00EA 0341 ; [.196E.0022.0002] # <LATIN SMALL LETTER E WITH CIRCUMFLEX, COMBINING ACUTE TONE MARK>
00CA 0301 ; [.196E.0022.0008] # <LATIN CAPITAL LETTER E WITH CIRCUMFLEX, COMBINING ACUTE ACCENT>
00CA 0341 ; [.196E.0022.0008] # <LATIN CAPITAL LETTER E WITH CIRCUMFLEX, COMBINING ACUTE TONE MARK>
00EA 030C ; [.196E.0023.0002] # <LATIN SMALL LETTER E WITH CIRCUMFLEX, COMBINING CARON>
00CA 030C ; [.196E.0023.0008] # <LATIN CAPITAL LETTER E WITH CIRCUMFLEX, COMBINING CARON>
0065 0302 030C ; [.196E.0023.0002] # <LATIN SMALL LETTER E, COMBINING CIRCUMFLEX ACCENT, COMBINING CARON>
0045 0302 030C ; [.196E.0023.0008] # <LATIN CAPITAL LETTER E, COMBINING CIRCUMFLEX ACCENT, COMBINING CARON>
1EC1      ; [.196E.0024.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE
0065 0302 0300 ; [.196E.0024.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE
0065 0302 0340 ; [.196E.0024.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE
1EC0      ; [.196E.0024.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE
0045 0302 0300 ; [.196E.0024.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE
0045 0302 0340 ; [.196E.0024.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE
00EA 0300 ; [.196E.0024.0002] # <LATIN SMALL LETTER E WITH CIRCUMFLEX, COMBINING GRAVE ACCENT>
00EA 0340 ; [.196E.0024.0002] # <LATIN SMALL LETTER E WITH CIRCUMFLEX, COMBINING GRAVE TONE MARK>
00CA 0300 ; [.196E.0024.0008] # <LATIN CAPITAL LETTER E WITH CIRCUMFLEX, COMBINING GRAVE ACCENT>
00CA 0340 ; [.196E.0024.0008] # <LATIN CAPITAL LETTER E WITH CIRCUMFLEX, COMBINING GRAVE TONE MARK>
00EA      ; [.196E.0025.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX
0065 0302 ; [.196E.0025.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX
00CA      ; [.196E.0025.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX
0045 0302 ; [.196E.0025.0008] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX
1EC5      ; [.196E.0025.0002][.0000.002D.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE
1EC4      ; [.196E.0025.0008][.0000.002D.0002] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE
1EC3      ; [.196E.0025.0002][.0000.003B.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE
1EC2      ; [.196E.0025.0008][.0000.003B.0002] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE
1EC7      ; [.196E.0025.0002][.0000.0042.0002] # LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW
1EC6      ; [.196E.0025.0008][.0000.0042.0002] # LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW
012B      ; [.19F6.001C.0002] # LATIN SMALL LETTER I WITH MACRON
0069 0304 ; [.19F6.001C.0002] # LATIN SMALL LETTER I WITH MACRON
012A      ; [.19F6.001C.0008] # LATIN CAPITAL LETTER I WITH MACRON
0049 0304 ; [.19F6.001C.0008] # LATIN CAPITAL LETTER I WITH MACRON
00ED      ; [.19F6.001D.0002] # LATIN SMALL LETTER I WITH ACUTE
0069 0301 ; [.19F6.001D.0002] # LATIN SMALL LETTER I WITH ACUTE
0069 0341 ; [.19F6.001D.0002] # LATIN SMALL LETTER I WITH ACUTE
00CD      ; [.19F6.001D.0008] # LATIN CAPITAL LETTER I WITH ACUTE
0049 0301 ; [.19F6.001D.0008] # LATIN CAPITAL LETTER I WITH ACUTE
0049 0341 ; [.19F6.001D.0008] # LATIN CAPITAL LETTER I WITH ACUTE
01D0      ; [.19F6.001E.0002] # LATIN SMALL LETTER I WITH CARON
0069 030C ; [.19F6.001E.0002] # LATIN SMALL LETTER I WITH CARON
01CF      ; [.19F6.001E.0008] # LATIN CAPITAL LETTER I WITH CARON
0049 030C ; [.19F6.001E.0008] # LATIN CAPITAL LETTER I WITH CARON
00EC      ; [.19F6.001F.0002] # LATIN SMALL LETTER I WITH GRAVE
0069 0300 ; [.19F6.001F.0002] # LATIN SMALL LETTER I WITH GRAVE
0069 0340 ; [.19F6.001F.0002] # LATIN SMALL LETTER I WITH GRAVE
00CC      ; [.19F6.001F.0008] # LATIN CAPITAL LETTER I WITH GRAVE
0049 0300 ; [.19F6.001F.0008] # LATIN CAPITAL LETTER I WITH GRAVE
0049 0340 ; [.19F6.001F.0008] # LATIN CAPITAL LETTER I WITH GRAVE
006D 0304 ; [.1A6E.001C.0002] # <LATIN SMALL LETTER M, COMBINING MACRON>
004D 0304 ; [.1A6E.001C.0008] # <LATIN CAPITAL LETTER M, COMBINING MACRON>
1E3F      ; [.1A6E.001D.0002] # LATIN SMALL LETTER M WITH ACUTE
006D 0301 ; [.1A6E.001D.0002] # LATIN SMALL LETTER M WITH ACUTE
006D 0341 ; [.1A6E.001D.0002] # LATIN SMALL LETTER M WITH ACUTE
1E3E      ; [.1A6E.001D.0008] # LATIN CAPITAL LETTER M WITH ACUTE
004D 0301 ; [.1A6E.001D.0008] # LATIN CAPITAL LETTER M WITH ACUTE
004D 0341 ; [.1A6E.001D.0008] # LATIN CAPITAL LETTER M WITH ACUTE
006D 030C ; [.1A6E.001E.0002] # <LATIN SMALL LETTER M, COMBINING CARON>
004D 030C ; [.1A6E.001E.0008] # <LATIN CAPITAL LETTER M, COMBINING CARON>
006D 0300 ; [.1A6E.001F.0002] # <LATIN SMALL LETTER M, COMBINING GRAVE ACCENT>
006D 0340 ; [.1A6E.001F.0002] # <LATIN SMALL LETTER M, COMBINING GRAVE TONE MARK>
004D 0300 ; [.1A6E.001F.0008] # <LATIN CAPITAL LETTER M, COMBINING GRAVE ACCENT>
004D 0340 ; [.1A6E.001F.0008] # <LATIN CAPITAL LETTER M, COMBINING GRAVE TONE MARK>
006E 0304 ; [.1A7D.001C.0002] # <LATIN SMALL LETTER N, COMBINING MACRON>
004E 0304 ; [.1A7D.001C.0008] # <LATIN CAPITAL LETTER N, COMBINING MACRON>
0144      ; [.1A7D.001D.0002] # LATIN SMALL LETTER N WITH ACUTE
006E 0301 ; [.1A7D.001D.0002] # LATIN SMALL LETTER N WITH ACUTE
006E 0341 ; [.1A7D.001D.0002] # LATIN SMALL LETTER N WITH ACUTE
0143      ; [.1A7D.001D.0008] # LATIN CAPITAL LETTER N WITH ACUTE
004E 0301 ; [.1A7D.001D.0008] # LATIN CAPITAL LETTER N WITH ACUTE
004E 0341 ; [.1A7D.001D.0008] # LATIN CAPITAL LETTER N WITH ACUTE
0148      ; [.1A7D.001E.0002] # LATIN SMALL LETTER N WITH CARON
006E 030C ; [.1A7D.001E.0002] # LATIN SMALL LETTER N WITH CARON
0147      ; [.1A7D.001E.0008] # LATIN CAPITAL LETTER N WITH CARON
004E 030C ; [.1A7D.001E.0008] # LATIN CAPITAL LETTER N WITH CARON
01F9      ; [.1A7D.001F.0002] # LATIN SMALL LETTER N WITH GRAVE
006E 0300 ; [.1A7D.001F.0002] # LATIN SMALL LETTER N WITH GRAVE
006E 0340 ; [.1A7D.001F.0002] # LATIN SMALL LETTER N WITH GRAVE
01F8      ; [.1A7D.001F.0008] # LATIN CAPITAL LETTER N WITH GRAVE
004E 0300 ; [.1A7D.001F.0008] # LATIN CAPITAL LETTER N WITH GRAVE
004E 0340 ; [.1A7D.001F.0008] # LATIN CAPITAL LETTER N WITH GRAVE
014D      ; [.1AA1.001C.0002] # LATIN SMALL LETTER O WITH MACRON
006F 0304 ; [.1AA1.001C.0002] # LATIN SMALL LETTER O WITH MACRON
014C      ; [.1AA1.001C.0008] # LATIN CAPITAL LETTER O WITH MACRON
004F 0304 ; [.1AA1.001C.0008] # LATIN CAPITAL LETTER O WITH MACRON
00F3      ; [.1AA1.001D.0002] # LATIN SMALL LETTER O WITH ACUTE
006F 0301 ; [.1AA1.001D.0002] # LATIN SMALL LETTER O WITH ACUTE
006F 0341 ; [.1AA1.001D.0002] # LATIN SMALL LETTER O WITH ACUTE
00D3      ; [.1AA1.001D.0008] # LATIN CAPITAL LETTER O WITH ACUTE
004F 0301 ; [.1AA1.001D.0008] # LATIN CAPITAL LETTER O WITH ACUTE
004F 0341 ; [.1AA1.001D.0008] # LATIN CAPITAL LETTER O WITH ACUTE
01D2      ; [.1AA1.001E.0002] # LATIN SMALL LETTER O WITH CARON
006F 030C ; [.1AA1.001E.0002] # LATIN SMALL LETTER O WITH CARON
01D1      ; [.1AA1.001E.0008] # LATIN CAPITAL LETTER O WITH CARON
004F 030C ; [.1AA1.001E.0008] # LATIN CAPITAL LETTER O WITH CARON
00F2      ; [.1AA1.001F.0002] # LATIN SMALL LETTER O WITH GRAVE
006F 0300 ; [.1AA1.001F.0002] # LATIN SMALL LETTER O WITH GRAVE
006F 0340 ; [.1AA1.001F.0002] # LATIN SMALL LETTER O WITH GRAVE
00D2      ; [.1AA1.001F.0008] # LATIN CAPITAL LETTER O WITH GRAVE
004F 0300 ; [.1AA1.001F.0008] # LATIN CAPITAL LETTER O WITH GRAVE
004F 0340 ; [.1AA1.001F.0008] # LATIN CAPITAL LETTER O WITH GRAVE
016B      ; [.1B77.001C.0002] # LATIN SMALL LETTER U WITH MACRON
0075 0304 ; [.1B77.001C.0002] # LATIN SMALL LETTER U WITH MACRON
016A      ; [.1B77.001C.0008] # LATIN CAPITAL LETTER U WITH MACRON
0055 0304 ; [.1B77.001C.0008] # LATIN CAPITAL LETTER U WITH MACRON
00FA      ; [.1B77.001D.0002] # LATIN SMALL LETTER U WITH ACUTE
0075 0301 ; [.1B77.001D.0002] # LATIN SMALL LETTER U WITH ACUTE
0075 0341 ; [.1B77.001D.0002] # LATIN SMALL LETTER U WITH ACUTE
00DA      ; [.1B77.001D.0008] # LATIN CAPITAL LETTER U WITH ACUTE
0055 0301 ; [.1B77.001D.0008] # LATIN CAPITAL LETTER U WITH ACUTE
0055 0341 ; [.1B77.001D.0008] # LATIN CAPITAL LETTER U WITH ACUTE
01D4      ; [.1B77.001E.0002] # LATIN SMALL LETTER U WITH CARON
0075 030C ; [.1B77.001E.0002] # LATIN SMALL LETTER U WITH CARON
01D3      ; [.1B77.001E.0008] # LATIN CAPITAL LETTER U WITH CARON
0055 030C ; [.1B77.001E.0008] # LATIN CAPITAL LETTER U WITH CARON
00F9      ; [.1B77.001F.0002] # LATIN SMALL LETTER U WITH GRAVE
0075 0300 ; [.1B77.001F.0002] # LATIN SMALL LETTER U WITH GRAVE
0075 0340 ; [.1B77.001F.0002] # LATIN SMALL LETTER U WITH GRAVE
00D9      ; [.1B77.001F.0008] # LATIN CAPITAL LETTER U WITH GRAVE
0055 0300 ; [.1B77.001F.0008] # LATIN CAPITAL LETTER U WITH GRAVE
0055 0340 ; [.1B77.001F.0008] # LATIN CAPITAL LETTER U WITH GRAVE
01D6      ; [.1B77.0021.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND MACRON
0075 0308 0304 ; [.1B77.0021.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND MACRON
01D5      ; [.1B77.0021.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON
0055 0308 0304 ; [.1B77.0021.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON
00FC 0304 ; [.1B77.0021.0002] # <LATIN SMALL LETTER U WITH DIAERESIS, COMBINING MACRON>
00DC 0304 ; [.1B77.0021.0008] # <LATIN CAPITAL LETTER U WITH DIAERESIS, COMBINING MACRON>
01D8      ; [.1B77.0022.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE
0075 0308 0301 ; [.1B77.0022.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE
0075 0308 0341 ; [.1B77.0022.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE
01D7      ; [.1B77.0022.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE
0055 0308 0301 ; [.1B77.0022.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE
0055 0308 0341 ; [.1B77.0022.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE
00FC 0301 ; [.1B77.0022.0002] # <LATIN SMALL LETTER U WITH DIAERESIS, COMBINING ACUTE ACCENT>
00FC 0341 ; [.1B77.0022.0002] # <LATIN SMALL LETTER U WITH DIAERESIS, COMBINING ACUTE TONE MARK>
00DC 0301 ; [.1B77.0022.0008] # <LATIN CAPITAL LETTER U WITH DIAERESIS, COMBINING ACUTE ACCENT>
00DC 0341 ; [.1B77.0022.0008] # <LATIN CAPITAL LETTER U WITH DIAERESIS, COMBINING ACUTE TONE MARK>
01DA      ; [.1B77.0023.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND CARON
0075 0308 030C ; [.1B77.0023.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND CARON
01D9      ; [.1B77.0023.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON
0055 0308 030C ; [.1B77.0023.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON
00FC 030C ; [.1B77.0023.0002] # <LATIN SMALL LETTER U WITH DIAERESIS, COMBINING CARON>
00DC 030C ; [.1B77.0023.0008] # <LATIN CAPITAL LETTER U WITH DIAERESIS, COMBINING CARON>
01DC      ; [.1B77.0024.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE
0075 0308 0300 ; [.1B77.0024.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE
0075 0308 0340 ; [.1B77.0024.0002] # LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE
01DB      ; [.1B77.0024.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE
0055 0308 0300 ; [.1B77.0024.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE
0055 0308 0340 ; [.1B77.0024.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE
00FC 0300 ; [.1B77.0024.0002] # <LATIN SMALL LETTER U WITH DIAERESIS, COMBINING GRAVE ACCENT>
00FC 0340 ; [.1B77.0024.0002] # <LATIN SMALL LETTER U WITH DIAERESIS, COMBINING GRAVE TONE MARK>
00DC 0300 ; [.1B77.0024.0008] # <LATIN CAPITAL LETTER U WITH DIAERESIS, COMBINING GRAVE ACCENT>
00DC 0340 ; [.1B77.0024.0008] # <LATIN CAPITAL LETTER U WITH DIAERESIS, COMBINING GRAVE TONE MARK>
00FC      ; [.1B77.0025.0002] # LATIN SMALL LETTER U WITH DIAERESIS
0075 0308 ; [.1B77.0025.0002] # LATIN SMALL LETTER U WITH DIAERESIS
00DC      ; [.1B77.0025.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS
0055 0308 ; [.1B77.0025.0008] # LATIN CAPITAL LETTER U WITH DIAERESIS
FDD0 3105 ; [.8000.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER B>
2E8A      ; [.80B5.0020.0002] # CJK RADICAL DIVINATION
FDD0 3106 ; [.83B1.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER P>
FDD0 3107 ; [.8626.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER M>
FDD0 3108 ; [.897F.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER F>
2ECF      ; [.8BC0.0020.0002] # CJK RADICAL CITY
2ED6      ; [.8BC1.0020.0002] # CJK RADICAL MOUND TWO
FDD0 3109 ; [.8C0D.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER D>
2E88      ; [.8C86.0020.0002] # CJK RADICAL KNIFE ONE
FDD0 310A ; [.901F.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER T>
FDD0 310B ; [.93D9.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER N>
2EA7      ; [.9525.0020.0002] # CJK RADICAL COW
FDD0 310C ; [.95D9.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER L>
3007      ; [.9A41.0020.0002] # IDEOGRAPHIC NUMBER ZERO
FDD0 310D ; [.9C5F.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER G>
2EE3      ; [.9E0A.0020.0002] # CJK RADICAL BONE
FDD0 310E ; [.9FD2.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER K>
FDD0 310F ; [.A223.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER H>
FDD0 3110 ; [.A697.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER J>
2E95      ; [.A762.0020.0002] # CJK RADICAL SNOUT TWO
2E86      ; [.AD18.0020.0002] # CJK RADICAL BOX
FDD0 3111 ; [.AD38.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER Q>
FDD0 3112 ; [.B164.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER X>
2E8C      ; [.B383.0020.0002] # CJK RADICAL SMALL ONE
2E8D      ; [.B384.0020.0002] # CJK RADICAL SMALL TWO
FDD0 3113 ; [.B6E9.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER ZH>
2EA5      ; [.B8AC.0020.0002] # CJK RADICAL PAW TWO
FDD0 3114 ; [.BBAC.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER CH>
2ECC      ; [.BE9D.0020.0002] # CJK RADICAL SIMPLIFIED WALK
2ECD      ; [.BE9E.0020.0002] # CJK RADICAL WALK ONE
FDD0 3115 ; [.BF5A.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER SH>
2EAC      ; [.BFBC.0020.0002] # CJK RADICAL SPIRIT ONE
2EAE      ; [.BFC1.0020.0002] # CJK RADICAL BAMBOO
FDD0 3116 ; [.C2A2.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER R>
2E9C      ; [.C2A3.0020.0002] # CJK RADICAL SUN
2EBC      ; [.C2D3.0020.0002] # CJK RADICAL MEAT
2EB6      ; [.C311.0020.0002] # CJK RADICAL SHEEP
FDD0 3117 ; [.C402.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER Z>
FDD0 3118 ; [.C630.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER C>
2EBE      ; [.C6CA.0020.0002] # CJK RADICAL GRASS ONE
FDD0 3119 ; [.C7F6.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER S>
FDD0 311A ; [.CA13.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER A>
FDD0 311B ; [.CA19.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER O>
FDD0 311C ; [.CA1E.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER E>
FDD0 311E ; [.CAA0.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER AI>
FDD0 311F ; [.CAE8.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER EI>
FDD0 3120 ; [.CAEB.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER AU>
FDD0 3121 ; [.CB2E.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER OU>
FDD0 3122 ; [.CB51.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER AN>
FDD0 3123 ; [.CB8B.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER EN>
FDD0 3124 ; [.CB94.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER ANG>
FDD0 3125 ; [.CBA0.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER ENG>
FDD0 3126 ; [.CBA2.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER ER>
FDD0 3127 ; [.CBDB.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER I>
2E84      ; [.CDB5.0020.0002] # CJK RADICAL SECOND THREE
2E80      ; [.CEDF.0020.0002] # CJK RADICAL REPEAT
FDD0 3128 ; [.D16F.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER U>
FDD0 3129 ; [.D403.0020.0002] # <noncharacter-FDD0, BOPOMOFO LETTER IU>
2ED7      ; [.D47E.0020.0002] # CJK RADICAL RAIN
2E9D      ; [.D53B.0020.0002] # CJK RADICAL MOON
3220      ; [*030A.0020.0004][.CBDC.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH ONE
3226      ; [*030A.0020.0004][.AD39.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH SEVEN
3222      ; [*030A.0020.0004][.C8DF.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH THREE
3228      ; [*030A.0020.0004][.A95D.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH NINE
3221      ; [*030A.0020.0004][.CBCD.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH TWO
3224      ; [*030A.0020.0004][.D1A9.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH FIVE
3239      ; [*030A.0020.0004][.8C57.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH REPRESENT
323D      ; [*030A.0020.0004][.ADC1.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH ENTERPRISE
3241      ; [*030A.0020.0004][.B3A8.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH REST
3227      ; [*030A.0020.0004][.8001.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH EIGHT
3225      ; [*030A.0020.0004][.9953.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH SIX
3238      ; [*030A.0020.0004][.969E.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH LABOR
3229      ; [*030A.0020.0004][.BF85.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH TEN
323F      ; [*030A.0020.0004][.B2BC.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH ALLIANCE
3234      ; [*030A.0020.0004][.892A.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH NAME
323A      ; [*030A.0020.0004][.A3B5.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH CALL
3223      ; [*030A.0020.0004][.C82E.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH FOUR
322F      ; [*030A.0020.0004][.92EA.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH EARTH
323B      ; [*030A.0020.0004][.B5F0.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH STUDY
3230      ; [*030A.0020.0004][.C2A4.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH SUN
322A      ; [*030A.0020.0004][.D53C.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH MOON
3232      ; [*030A.0020.0004][.CEC7.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH HAVE
322D      ; [*030A.0020.0004][.895F.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH WOOD
3231      ; [*030A.0020.0004][.BA36.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH STOCK
322C      ; [*030A.0020.0004][.C26E.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH WATER
322B      ; [*030A.0020.0004][.A48C.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH FIRE
3235      ; [*030A.0020.0004][.9060.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH SPECIAL
323C      ; [*030A.0020.0004][.A9B3.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH SUPERVISE
3233      ; [*030A.0020.0004][.C05E.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH SOCIETY
3237      ; [*030A.0020.0004][.BA90.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH CONGRATULATION
3240      ; [*030A.0020.0004][.A78C.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH FESTIVAL
3242      ; [*030A.0020.0004][.C457.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH SELF
3243      ; [*030A.0020.0004][.B766.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH REACH
3236      ; [*030A.0020.0004][.C69F.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH FINANCIAL
323E      ; [*030A.0020.0004][.C421.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH RESOURCE
322E      ; [*030A.0020.0004][.AA72.0020.0004][*030B.0020.0004] # PARENTHESIZED IDEOGRAPH METAL
3358      ; [.1902.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR ZERO
33E9      ; [.1903.0020.0004][.1902.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TEN
32C9      ; [.1903.0020.0004][.1902.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR OCTOBER
3362      ; [.1903.0020.0004][.1902.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TEN
33EA      ; [.1903.0020.0004][.1903.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY ELEVEN
32CA      ; [.1903.0020.0004][.1903.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR NOVEMBER
3363      ; [.1903.0020.0004][.1903.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR ELEVEN
33EB      ; [.1903.0020.0004][.1904.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWELVE
32CB      ; [.1903.0020.0004][.1904.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DECEMBER
3364      ; [.1903.0020.0004][.1904.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWELVE
33EC      ; [.1903.0020.0004][.1905.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THIRTEEN
3365      ; [.1903.0020.0004][.1905.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR THIRTEEN
33ED      ; [.1903.0020.0004][.1906.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FOURTEEN
3366      ; [.1903.0020.0004][.1906.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FOURTEEN
33EE      ; [.1903.0020.0004][.1907.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FIFTEEN
3367      ; [.1903.0020.0004][.1907.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FIFTEEN
33EF      ; [.1903.0020.0004][.1908.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SIXTEEN
3368      ; [.1903.0020.0004][.1908.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SIXTEEN
33F0      ; [.1903.0020.0004][.1909.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SEVENTEEN
3369      ; [.1903.0020.0004][.1909.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SEVENTEEN
33F1      ; [.1903.0020.0004][.190A.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY EIGHTEEN
336A      ; [.1903.0020.0004][.190A.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR EIGHTEEN
33F2      ; [.1903.0020.0004][.190B.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY NINETEEN
336B      ; [.1903.0020.0004][.190B.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR NINETEEN
33E0      ; [.1903.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY ONE
32C0      ; [.1903.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR JANUARY
3359      ; [.1903.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR ONE
33F3      ; [.1904.0020.0004][.1902.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY
336C      ; [.1904.0020.0004][.1902.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY
33F4      ; [.1904.0020.0004][.1903.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-ONE
336D      ; [.1904.0020.0004][.1903.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-ONE
33F5      ; [.1904.0020.0004][.1904.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-TWO
336E      ; [.1904.0020.0004][.1904.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-TWO
33F6      ; [.1904.0020.0004][.1905.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-THREE
336F      ; [.1904.0020.0004][.1905.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-THREE
33F7      ; [.1904.0020.0004][.1906.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-FOUR
3370      ; [.1904.0020.0004][.1906.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-FOUR
33F8      ; [.1904.0020.0004][.1907.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-FIVE
33F9      ; [.1904.0020.0004][.1908.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-SIX
33FA      ; [.1904.0020.0004][.1909.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-SEVEN
33FB      ; [.1904.0020.0004][.190A.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-EIGHT
33FC      ; [.1904.0020.0004][.190B.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-NINE
33E1      ; [.1904.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWO
32C1      ; [.1904.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR FEBRUARY
335A      ; [.1904.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWO
33FD      ; [.1905.0020.0004][.1902.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THIRTY
33FE      ; [.1905.0020.0004][.1903.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THIRTY-ONE
33E2      ; [.1905.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THREE
32C2      ; [.1905.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR MARCH
335B      ; [.1905.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR THREE
33E3      ; [.1906.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FOUR
32C3      ; [.1906.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR APRIL
335C      ; [.1906.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FOUR
33E4      ; [.1907.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FIVE
32C4      ; [.1907.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR MAY
335D      ; [.1907.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FIVE
33E5      ; [.1908.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SIX
32C5      ; [.1908.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR JUNE
335E      ; [.1908.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SIX
33E6      ; [.1909.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SEVEN
32C6      ; [.1909.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR JULY
335F      ; [.1909.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SEVEN
33E7      ; [.190A.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY EIGHT
32C7      ; [.190A.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR AUGUST
3360      ; [.190A.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR EIGHT
33E8      ; [.190B.0020.0004][.C2A4.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY NINE
32C8      ; [.190B.0020.0004][.D53C.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR SEPTEMBER
3361      ; [.190B.0020.0004][.8E99.0020.0004] # IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR NINE
1F241     ; [*036C.0020.0004][.C8DF.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-4E09
1F242     ; [*036C.0020.0004][.CBCD.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-4E8C
1F247     ; [*036C.0020.0004][.C1CC.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-52DD
1F243     ; [*036C.0020.0004][.CB52.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-5B89
1F245     ; [*036C.0020.0004][.8C38.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-6253
1F248     ; [*036C.0020.0004][.80CD.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-6557
1F240     ; [*036C.0020.0004][.819A.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-672C
1F244     ; [*036C.0020.0004][.8E99.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-70B9
1F246     ; [*036C.0020.0004][.8CA9.0020.0004][*036D.0020.0004] # TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-76D7
2F00      ; [.CBDC.0020.0004] # KANGXI RADICAL ONE
3192      ; [.CBDC.0020.0014] # IDEOGRAPHIC ANNOTATION ONE MARK
3280      ; [.CBDC.0020.0006] # CIRCLED IDEOGRAPH ONE
1F229     ; [.CBDC.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-4E00
319C      ; [.8EC1.0020.0014] # IDEOGRAPHIC ANNOTATION FOURTH MARK
3286      ; [.AD39.0020.0006] # CIRCLED IDEOGRAPH SEVEN
3194      ; [.C8DF.0020.0014] # IDEOGRAPHIC ANNOTATION THREE MARK
3282      ; [.C8DF.0020.0006] # CIRCLED IDEOGRAPH THREE
1F22A     ; [.C8DF.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-4E09
3196      ; [.C19C.0020.0014] # IDEOGRAPHIC ANNOTATION TOP MARK
32A4      ; [.C19C.0020.0006] # CIRCLED IDEOGRAPH HIGH
3198      ; [.B2A0.0020.0014] # IDEOGRAPHIC ANNOTATION BOTTOM MARK
32A6      ; [.B2A0.0020.0006] # CIRCLED IDEOGRAPH LOW
319B      ; [.8355.0020.0014] # IDEOGRAPHIC ANNOTATION THIRD MARK
2F01      ; [.9F64.0020.0004] # KANGXI RADICAL LINE
3197      ; [.BB6D.0020.0014] # IDEOGRAPHIC ANNOTATION MIDDLE MARK
32A5      ; [.BB6D.0020.0006] # CIRCLED IDEOGRAPH CENTRE
1F22D     ; [.BB6D.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-4E2D
2F02      ; [.BA6A.0020.0004] # KANGXI RADICAL DOT
2F03      ; [.8558.0020.0004] # KANGXI RADICAL SLASH
2F04      ; [.CC59.0020.0004] # KANGXI RADICAL SECOND
319A      ; [.CC59.0020.0014] # IDEOGRAPHIC ANNOTATION SECOND MARK
3288      ; [.A95D.0020.0006] # CIRCLED IDEOGRAPH NINE
2F05      ; [.AC3C.0020.0004] # KANGXI RADICAL HOOK
2F06      ; [.CBCD.0020.0004] # KANGXI RADICAL TWO
3193      ; [.CBCD.0020.0014] # IDEOGRAPHIC ANNOTATION TWO MARK
3281      ; [.CBCD.0020.0006] # CIRCLED IDEOGRAPH TWO
1F214     ; [.CBCD.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-4E8C
3284      ; [.D1A9.0020.0006] # CIRCLED IDEOGRAPH FIVE
2F07      ; [.90D4.0020.0004] # KANGXI RADICAL LID
1F218     ; [.A8BE.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-4EA4
2F08      ; [.C2EF.0020.0004] # KANGXI RADICAL MAN
319F      ; [.C2EF.0020.0014] # IDEOGRAPHIC ANNOTATION MAN MARK
32AD      ; [.ADC1.0020.0006] # CIRCLED IDEOGRAPH ENTERPRISE
32A1      ; [.B3A8.0020.0006] # CIRCLED IDEOGRAPH REST
329D      ; [.CE97.0020.0006] # CIRCLED IDEOGRAPH EXCELLENT
2F09      ; [.CBA3.0020.0004] # KANGXI RADICAL LEGS
2F0A      ; [.C376.0020.0004] # KANGXI RADICAL ENTER
2F0B      ; [.8001.0020.0004] # KANGXI RADICAL EIGHT
3287      ; [.8001.0020.0006] # CIRCLED IDEOGRAPH EIGHT
3285      ; [.9953.0020.0006] # CIRCLED IDEOGRAPH SIX
2F0C      ; [.AD19.0020.0004] # KANGXI RADICAL DOWN BOX
1F21E     ; [.C4C2.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-518D
2F0D      ; [.8867.0020.0004] # KANGXI RADICAL COVER
32A2      ; [.B2E9.0020.0006] # CIRCLED IDEOGRAPH COPY
2F0E      ; [.834E.0020.0004] # KANGXI RADICAL ICE
2F0F      ; [.A74C.0020.0004] # KANGXI RADICAL TABLE
2F10      ; [.AF59.0020.0004] # KANGXI RADICAL OPEN BOX
2F11      ; [.8C87.0020.0004] # KANGXI RADICAL KNIFE
1F220     ; [.BE3B.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-521D
1F21C     ; [.AF3B.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-524D
1F239     ; [.9C7B.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-5272
2F12      ; [.9804.0020.0004] # KANGXI RADICAL POWER
3298      ; [.969E.0020.0006] # CIRCLED IDEOGRAPH LABOR
2F13      ; [.811A.0020.0004] # KANGXI RADICAL WRAP
2F14      ; [.81FC.0020.0004] # KANGXI RADICAL SPOON
2F15      ; [.8A9F.0020.0004] # KANGXI RADICAL RIGHT OPEN BOX
2F16      ; [.B224.0020.0004] # KANGXI RADICAL HIDING ENCLOSURE
32A9      ; [.CBE1.0020.0006] # CIRCLED IDEOGRAPH MEDICINE
2F17      ; [.BF85.0020.0004] # KANGXI RADICAL TEN
3038      ; [.BF85.0020.0004] # HANGZHOU NUMERAL TEN
3289      ; [.BF85.0020.0006] # CIRCLED IDEOGRAPH TEN
3039      ; [.954F.0020.0004] # HANGZHOU NUMERAL TWENTY
303A      ; [.C861.0020.0004] # HANGZHOU NUMERAL THIRTY
32AF      ; [.B2BC.0020.0006] # CIRCLED IDEOGRAPH ALLIANCE
2F18      ; [.80B6.0020.0004] # KANGXI RADICAL DIVINATION
2F19      ; [.A84F.0020.0004] # KANGXI RADICAL SEAL
329E      ; [.D06B.0020.0006] # CIRCLED IDEOGRAPH PRINT
2F1A      ; [.BDC0.0020.0004] # KANGXI RADICAL CLIFF
2F1B      ; [.C7F7.0020.0004] # KANGXI RADICAL PRIVATE
2F1C      ; [.CEE0.0020.0004] # KANGXI RADICAL AGAIN
1F212     ; [.C28A.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-53CC
2F1D      ; [.A070.0020.0004] # KANGXI RADICAL MOUTH
1F251     ; [.A007.0020.0006] # CIRCLED IDEOGRAPH ACCEPT
32A8      ; [.CEE1.0020.0006] # CIRCLED IDEOGRAPH RIGHT
1F22E     ; [.CEE1.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-53F3
1F234     ; [.A232.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-5408
3294      ; [.892A.0020.0006] # CIRCLED IDEOGRAPH NAME
1F225     ; [.BEBE.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-5439
3244      ; [.D3B7.0020.0006] # CIRCLED IDEOGRAPH QUESTION
1F23A     ; [.D120.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-55B6
2F1E      ; [.D27D.0020.0004] # KANGXI RADICAL ENCLOSURE
3195      ; [.C82E.0020.0014] # IDEOGRAPHIC ANNOTATION FOUR MARK
3283      ; [.C82E.0020.0006] # CIRCLED IDEOGRAPH FOUR
2F1F      ; [.92EA.0020.0004] # KANGXI RADICAL EARTH
328F      ; [.92EA.0020.0006] # CIRCLED IDEOGRAPH EARTH
319E      ; [.8C4B.0020.0014] # IDEOGRAPHIC ANNOTATION EARTH MARK
2F20      ; [.BFB5.0020.0004] # KANGXI RADICAL SCHOLAR
1F224     ; [.C1A8.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-58F0
2F21      ; [.B740.0020.0004] # KANGXI RADICAL GO
2F22      ; [.C986.0020.0004] # KANGXI RADICAL GO SLOWLY
2F23      ; [.B165.0020.0004] # KANGXI RADICAL EVENING
1F215     ; [.8F35.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-591A
32B0      ; [.CDD7.0020.0006] # CIRCLED IDEOGRAPH NIGHT
2F24      ; [.8C39.0020.0004] # KANGXI RADICAL BIG
337D      ; [.8C39.0020.001C][.BA1E.0020.001C] # SQUARE ERA NAME TAISYOU
319D      ; [.923B.0020.0014] # IDEOGRAPHIC ANNOTATION HEAVEN MARK
1F217     ; [.923B.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-5929
2F25      ; [.95CC.0020.0004] # KANGXI RADICAL WOMAN
329B      ; [.95CC.0020.0006] # CIRCLED IDEOGRAPH FEMALE
2F26      ; [.C466.0020.0004] # KANGXI RADICAL CHILD
1F211     ; [.C456.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-5B57
32AB      ; [.B5F0.0020.0006] # CIRCLED IDEOGRAPH STUDY
2F27      ; [.88BF.0020.0004] # KANGXI RADICAL ROOF
32AA      ; [.C5ED.0020.0006] # CIRCLED IDEOGRAPH RELIGION
2F28      ; [.C7B4.0020.0004] # KANGXI RADICAL INCH
2F29      ; [.B385.0020.0004] # KANGXI RADICAL SMALL
2F2A      ; [.CE9E.0020.0004] # KANGXI RADICAL LAME
2F2B      ; [.BF5B.0020.0004] # KANGXI RADICAL CORPSE
2F2C      ; [.BC63.0020.0004] # KANGXI RADICAL SPROUT
2F2D      ; [.C0C5.0020.0004] # KANGXI RADICAL MOUNTAIN
2F2E      ; [.BED1.0020.0004] # KANGXI RADICAL RIVER
2F2F      ; [.9F9E.0020.0004] # KANGXI RADICAL WORK
32A7      ; [.C593.0020.0006] # CIRCLED IDEOGRAPH LEFT
1F22C     ; [.C593.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-5DE6
2F30      ; [.A74D.0020.0004] # KANGXI RADICAL ONESELF
2F31      ; [.AA6D.0020.0004] # KANGXI RADICAL TURBAN
2F32      ; [.9D7F.0020.0004] # KANGXI RADICAL DRY
337B      ; [.85BF.0020.001C][.BDFC.0020.001C] # SQUARE ERA NAME HEISEI
2F33      ; [.CE11.0020.0004] # KANGXI RADICAL SHORT THREAD
3245      ; [.CEE2.0020.0006] # CIRCLED IDEOGRAPH KINDERGARTEN
2F34      ; [.9F8F.0020.0004] # KANGXI RADICAL DOTTED CLIFF
2F35      ; [.D04E.0020.0004] # KANGXI RADICAL LONG STRIDE
2F36      ; [.9FBB.0020.0004] # KANGXI RADICAL TWO HANDS
2F37      ; [.CC86.0020.0004] # KANGXI RADICAL SHOOT
2F38      ; [.9F9F.0020.0004] # KANGXI RADICAL BOW
2F39      ; [.A763.0020.0004] # KANGXI RADICAL SNOUT
2F3A      ; [.C0C6.0020.0004] # KANGXI RADICAL BRISTLE
2F3B      ; [.BBF9.0020.0004] # KANGXI RADICAL STEP
1F21D     ; [.A30D.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-5F8C
1F250     ; [.8C4D.0020.0006] # CIRCLED IDEOGRAPH ADVANTAGE
2F3C      ; [.B4AB.0020.0004] # KANGXI RADICAL HEART
2F3D      ; [.9C6C.0020.0004] # KANGXI RADICAL HALBERD
2F3E      ; [.A40C.0020.0004] # KANGXI RADICAL DOOR
2F3F      ; [.C0AE.0020.0004] # KANGXI RADICAL HAND
1F210     ; [.C0AE.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-624B
1F231     ; [.8C38.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6253
1F227     ; [.90D6.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6295
1F22F     ; [.B753.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6307
1F228     ; [.838E.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6355
2F40      ; [.B6EB.0020.0004] # KANGXI RADICAL BRANCH
2F41      ; [.85EC.0020.0004] # KANGXI RADICAL RAP
2F42      ; [.D38D.0020.0004] # KANGXI RADICAL SCRIPT
3246      ; [.D38D.0020.0006] # CIRCLED IDEOGRAPH SCHOOL
2F43      ; [.8CCF.0020.0004] # KANGXI RADICAL DIPPER
1F21B     ; [.9905.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6599
2F44      ; [.AA6F.0020.0004] # KANGXI RADICAL AXE
1F21F     ; [.B4BC.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-65B0
2F45      ; [.8AA0.0020.0004] # KANGXI RADICAL SQUARE
2F46      ; [.D18A.0020.0004] # KANGXI RADICAL NOT
2F47      ; [.C2A4.0020.0004] # KANGXI RADICAL SUN
3290      ; [.C2A4.0020.0006] # CIRCLED IDEOGRAPH SUN
337E      ; [.892B.0020.001C][.B773.0020.001C] # SQUARE ERA NAME MEIZI
1F219     ; [.D15D.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6620
337C      ; [.B884.0020.001C][.A237.0020.001C] # SQUARE ERA NAME SYOUWA
2F48      ; [.D533.0020.0004] # KANGXI RADICAL SAY
2F49      ; [.D53C.0020.0004] # KANGXI RADICAL MOON
328A      ; [.D53C.0020.0006] # CIRCLED IDEOGRAPH MOON
1F237     ; [.D53C.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6708
3292      ; [.CEC7.0020.0006] # CIRCLED IDEOGRAPH HAVE
1F236     ; [.CEC7.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6709
2F4A      ; [.895F.0020.0004] # KANGXI RADICAL TREE
328D      ; [.895F.0020.0006] # CIRCLED IDEOGRAPH WOOD
3291      ; [.BA36.0020.0006] # CIRCLED IDEOGRAPH STOCK
337F      ; [.BA36.0020.001C][.BFBF.0020.001C][.A51A.0020.001C][.C05E.0020.001C] # SQUARE CORPORATION
2F4B      ; [.AF68.0020.0004] # KANGXI RADICAL LACK
2F4C      ; [.B741.0020.0004] # KANGXI RADICAL STOP
32A3      ; [.BA1E.0020.0006] # CIRCLED IDEOGRAPH CORRECT
2F4D      ; [.8C53.0020.0004] # KANGXI RADICAL DEATH
2F4E      ; [.C1D9.0020.0004] # KANGXI RADICAL WEAPON
2F4F      ; [.D18B.0020.0004] # KANGXI RADICAL DO NOT
2E9F      ; [.894D.0020.0004] # CJK RADICAL MOTHER
2F50      ; [.81FD.0020.0004] # KANGXI RADICAL COMPARE
2F51      ; [.8727.0020.0004] # KANGXI RADICAL FUR
2F52      ; [.BFB6.0020.0004] # KANGXI RADICAL CLAN
2F53      ; [.ADDA.0020.0004] # KANGXI RADICAL STEAM
2F54      ; [.C26E.0020.0004] # KANGXI RADICAL WATER
328C      ; [.C26E.0020.0006] # CIRCLED IDEOGRAPH WATER
329F      ; [.BA84.0020.0006] # CIRCLED IDEOGRAPH ATTENTION
1F235     ; [.8793.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6E80
1F226     ; [.CF75.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-6F14
2F55      ; [.A48C.0020.0004] # KANGXI RADICAL FIRE
328B      ; [.A48C.0020.0006] # CIRCLED IDEOGRAPH FIRE
1F21A     ; [.D19A.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-7121
2F56      ; [.B88D.0020.0004] # KANGXI RADICAL CLAW
2F57      ; [.8BC3.0020.0004] # KANGXI RADICAL FATHER
2F58      ; [.CE21.0020.0004] # KANGXI RADICAL DOUBLE X
2F59      ; [.8453.0020.0004] # KANGXI RADICAL HALF TREE TRUNK
2F5A      ; [.8593.0020.0004] # KANGXI RADICAL SLICE
2F5B      ; [.CD78.0020.0004] # KANGXI RADICAL FANG
2F5C      ; [.9526.0020.0004] # KANGXI RADICAL COW
3295      ; [.9060.0020.0006] # CIRCLED IDEOGRAPH SPECIAL
2F5D      ; [.B123.0020.0004] # KANGXI RADICAL DOG
2F5E      ; [.B63A.0020.0004] # KANGXI RADICAL PROFOUND
2F5F      ; [.D4A7.0020.0004] # KANGXI RADICAL JADE
2F60      ; [.9E4D.0020.0004] # KANGXI RADICAL MELON
2F61      ; [.D216.0020.0004] # KANGXI RADICAL TILE
2F62      ; [.9D4E.0020.0004] # KANGXI RADICAL SWEET
2F63      ; [.C1A6.0020.0004] # KANGXI RADICAL LIFE
1F222     ; [.C1A6.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-751F
2F64      ; [.D68B.0020.0004] # KANGXI RADICAL USE
2F65      ; [.9245.0020.0004] # KANGXI RADICAL FIELD
3199      ; [.A814.0020.0014] # IDEOGRAPHIC ANNOTATION FIRST MARK
1F238     ; [.C125.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-7533
329A      ; [.9459.0020.0006] # CIRCLED IDEOGRAPH MALE
2F66      ; [.852E.0020.0004] # KANGXI RADICAL BOLT OF CLOTH
2F67      ; [.93F9.0020.0004] # KANGXI RADICAL SICKNESS
2F68      ; [.8046.0020.0004] # KANGXI RADICAL DOTTED TENT
2F69      ; [.80BD.0020.0004] # KANGXI RADICAL WHITE
2F6A      ; [.8504.0020.0004] # KANGXI RADICAL SKIN
2F6B      ; [.890B.0020.0004] # KANGXI RADICAL DISH
32AC      ; [.A9B3.0020.0006] # CIRCLED IDEOGRAPH SUPERVISE
2F6C      ; [.8962.0020.0004] # KANGXI RADICAL EYE
2F6D      ; [.8728.0020.0004] # KANGXI RADICAL SPEAR
2F6E      ; [.BFA9.0020.0004] # KANGXI RADICAL ARROW
2F6F      ; [.BF87.0020.0004] # KANGXI RADICAL STONE
2F70      ; [.BFBD.0020.0004] # KANGXI RADICAL SPIRIT
3293      ; [.C05E.0020.0006] # CIRCLED IDEOGRAPH SOCIETY
3297      ; [.BA90.0020.0006] # CIRCLED IDEOGRAPH CONGRATULATION
1F232     ; [.AAB2.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-7981
2F71      ; [.C2BD.0020.0004] # KANGXI RADICAL TRACK
2F72      ; [.A231.0020.0004] # KANGXI RADICAL GRAIN
3299      ; [.8871.0020.0006] # CIRCLED IDEOGRAPH SECRET
2F73      ; [.B5ED.0020.0004] # KANGXI RADICAL CAVE
1F233     ; [.A211.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-7A7A
2F74      ; [.9808.0020.0004] # KANGXI RADICAL STAND
2F75      ; [.BA53.0020.0004] # KANGXI RADICAL BAMBOO
3247      ; [.BA0D.0020.0006] # CIRCLED IDEOGRAPH KOTO
2F76      ; [.8856.0020.0004] # KANGXI RADICAL RICE
2F77      ; [.8868.0020.0004] # KANGXI RADICAL SILK
1F221     ; [.BB7F.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-7D42
2F78      ; [.89F6.0020.0004] # KANGXI RADICAL JAR
2F79      ; [.D3D1.0020.0004] # KANGXI RADICAL NET
2F7A      ; [.D08F.0020.0004] # KANGXI RADICAL SHEEP
2F7B      ; [.D47D.0020.0004] # KANGXI RADICAL FEATHER
2F7C      ; [.96B7.0020.0004] # KANGXI RADICAL OLD
2F7D      ; [.CBA4.0020.0004] # KANGXI RADICAL AND
2F7E      ; [.966B.0020.0004] # KANGXI RADICAL PLOW
2F7F      ; [.CBBF.0020.0004] # KANGXI RADICAL EAR
2F80      ; [.D4AA.0020.0004] # KANGXI RADICAL BRUSH
2F81      ; [.C2D4.0020.0004] # KANGXI RADICAL MEAT
2F82      ; [.BD5B.0020.0004] # KANGXI RADICAL MINISTER
2F83      ; [.C457.0020.0004] # KANGXI RADICAL SELF
2F84      ; [.B766.0020.0004] # KANGXI RADICAL ARRIVE
2F85      ; [.A96D.0020.0004] # KANGXI RADICAL MORTAR
2F86      ; [.C053.0020.0004] # KANGXI RADICAL TONGUE
2F87      ; [.BEE4.0020.0004] # KANGXI RADICAL OPPOSE
2F88      ; [.B8B0.0020.0004] # KANGXI RADICAL BOAT
2F89      ; [.9D94.0020.0004] # KANGXI RADICAL STOPPING
2F8A      ; [.C870.0020.0004] # KANGXI RADICAL COLOR
2F8B      ; [.C6C2.0020.0004] # KANGXI RADICAL GRASS
2F8C      ; [.A3B4.0020.0004] # KANGXI RADICAL TIGER
2F8D      ; [.BF4A.0020.0004] # KANGXI RADICAL INSECT
2F8E      ; [.B604.0020.0004] # KANGXI RADICAL BLOOD
2F8F      ; [.B543.0020.0004] # KANGXI RADICAL WALK ENCLOSURE
2F90      ; [.CBE0.0020.0004] # KANGXI RADICAL CLOTHES
2F91      ; [.CD9C.0020.0004] # KANGXI RADICAL WEST
2F92      ; [.AA1C.0020.0004] # KANGXI RADICAL SEE
2F93      ; [.A8EB.0020.0004] # KANGXI RADICAL HORN
1F216     ; [.A898.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-89E3
2F94      ; [.CF21.0020.0004] # KANGXI RADICAL SPEECH
2F95      ; [.9E07.0020.0004] # KANGXI RADICAL VALLEY
2F96      ; [.8CD0.0020.0004] # KANGXI RADICAL BEAN
2F97      ; [.BFAB.0020.0004] # KANGXI RADICAL PIG
2F98      ; [.B76C.0020.0004] # KANGXI RADICAL BADGER
2F99      ; [.80EB.0020.0004] # KANGXI RADICAL SHELL
3296      ; [.C69F.0020.0006] # CIRCLED IDEOGRAPH FINANCIAL
1F223     ; [.8A4B.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-8CA9
32AE      ; [.C421.0020.0006] # CIRCLED IDEOGRAPH RESOURCE
2F9A      ; [.BBFE.0020.0004] # KANGXI RADICAL RED
2F9B      ; [.C50C.0020.0004] # KANGXI RADICAL RUN
1F230     ; [.C50C.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-8D70
2F9C      ; [.C571.0020.0004] # KANGXI RADICAL FOOT
2F9D      ; [.C129.0020.0004] # KANGXI RADICAL BODY
2F9E      ; [.BC58.0020.0004] # KANGXI RADICAL CART
2F9F      ; [.B4AE.0020.0004] # KANGXI RADICAL BITTER
2FA0      ; [.BD5F.0020.0004] # KANGXI RADICAL MORNING
2FA1      ; [.BEA0.0020.0004] # KANGXI RADICAL WALK
1F22B     ; [.CEBC.0020.001C] # SQUARED CJK UNIFIED IDEOGRAPH-904A
329C      ; [.BFFC.0020.0006] # CIRCLED IDEOGRAPH SUITABLE
2FA2      ; [.CC9C.0020.0004] # KANGXI RADICAL CITY
2FA3      ; [.CECA.0020.0004] # KANGXI RADICAL WINE
2FA4      ; [.8308.0020.0004] # KANGXI RADICAL DISTINGUISH
2FA5      ; [.97EB.0020.0004] # KANGXI RADICAL VILLAGE
2FA6      ; [.AA72.0020.0004] # KANGXI RADICAL GOLD
328E      ; [.AA72.0020.0006] # CIRCLED IDEOGRAPH METAL
2FA7      ; [.B9D1.0020.0004] # KANGXI RADICAL LONG
2FA8      ; [.87B7.0020.0004] # KANGXI RADICAL GATE
2FA9      ; [.8BCB.0020.0004] # KANGXI RADICAL MOUND
2FAA      ; [.9819.0020.0004] # KANGXI RADICAL SLAVE
2FAB      ; [.BAFD.0020.0004] # KANGXI RADICAL SHORT TAILED BIRD
2FAC      ; [.D47F.0020.0004] # KANGXI RADICAL RAIN
2FAD      ; [.B01B.0020.0004] # KANGXI RADICAL BLUE
2FAE      ; [.89A9.0020.0004] # KANGXI RADICAL WRONG
2FAF      ; [.88EB.0020.0004] # KANGXI RADICAL FACE
2FB0      ; [.9C8F.0020.0004] # KANGXI RADICAL LEATHER
2FB1      ; [.D288.0020.0004] # KANGXI RADICAL TANNED LEATHER
2FB2      ; [.A965.0020.0004] # KANGXI RADICAL LEEK
2FB3      ; [.CFF8.0020.0004] # KANGXI RADICAL SOUND
2FB4      ; [.CDDC.0020.0004] # KANGXI RADICAL LEAF
32A0      ; [.B520.0020.0006] # CIRCLED IDEOGRAPH ITEM
2FB5      ; [.8AD5.0020.0004] # KANGXI RADICAL WIND
2FB6      ; [.89AA.0020.0004] # KANGXI RADICAL FLY
2FB7      ; [.BF93.0020.0004] # KANGXI RADICAL EAT
2FB8      ; [.C0B1.0020.0004] # KANGXI RADICAL HEAD
2FB9      ; [.B4E1.0020.0004] # KANGXI RADICAL FRAGRANT
2FBA      ; [.8637.0020.0004] # KANGXI RADICAL HORSE
2FBB      ; [.9E10.0020.0004] # KANGXI RADICAL BONE
2FBC      ; [.9CEC.0020.0004] # KANGXI RADICAL TALL
2FBD      ; [.82AD.0020.0004] # KANGXI RADICAL HAIR
2FBE      ; [.8CD4.0020.0004] # KANGXI RADICAL FIGHT
2FBF      ; [.BDCE.0020.0004] # KANGXI RADICAL SACRIFICIAL WINE
2FC0      ; [.9C94.0020.0004] # KANGXI RADICAL CAULDRON
2FC1      ; [.9EF1.0020.0004] # KANGXI RADICAL GHOST
2FC2      ; [.D436.0020.0004] # KANGXI RADICAL FISH
2FC3      ; [.9519.0020.0004] # KANGXI RADICAL BIRD
2FC4      ; [.9AD5.0020.0004] # KANGXI RADICAL SALT
2FC5      ; [.9AFD.0020.0004] # KANGXI RADICAL DEER
2FC6      ; [.86CC.0020.0004] # KANGXI RADICAL WHEAT
2FC7      ; [.862D.0020.0004] # KANGXI RADICAL HEMP
2FC8      ; [.A607.0020.0004] # KANGXI RADICAL YELLOW
2FC9      ; [.C20C.0020.0004] # KANGXI RADICAL MILLET
2FCA      ; [.A2AD.0020.0004] # KANGXI RADICAL BLACK
2FCB      ; [.B762.0020.0004] # KANGXI RADICAL EMBROIDERY
2FCC      ; [.88E4.0020.0004] # KANGXI RADICAL FROG
2FCD      ; [.8ED2.0020.0004] # KANGXI RADICAL TRIPOD
2FCE      ; [.9E1D.0020.0004] # KANGXI RADICAL DRUM
2FCF      ; [.C210.0020.0004] # KANGXI RADICAL RAT
2FD0      ; [.81FB.0020.0004] # KANGXI RADICAL NOSE
2FD1      ; [.ADA1.0020.0004] # KANGXI RADICAL EVEN
2FD2      ; [.BBF7.0020.0004] # KANGXI RADICAL TOOTH
2FD3      ; [.9BE4.0020.0004] # KANGXI RADICAL DRAGON
2FD4      ; [.9ED7.0020.0004] # KANGXI RADICAL TURTLE
2EF3      ; [.9EB8.0020.0004] # CJK RADICAL C-SIMPLIFIED TURTLE
2FD5      ; [.D560.0020.0004] # KANGXI RADICAL FLUTE
F967      ; [.8392.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F967
FA70      ; [.836F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA70
F905      ; [.BEEB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F905
2F801     ; [.D334.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F801
F95E      ; [.8CEB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95E
2F800     ; [.980B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F800
2F802     ; [.CC07.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F802
F91B      ; [.9BA8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91B
F9BA      ; [.9615.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BA
F977      ; [.9A32.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F977
F9FD      ; [.C151.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FD
2F819     ; [.834F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F819
F9A8      ; [.9A9B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A8
2F804     ; [.94AF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F804
FA73      ; [.B546.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA73
F92D      ; [.9619.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92D
F9B5      ; [.9811.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B5
FA30      ; [.D1B4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA30
2F805     ; [.D1B4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F805
2F806     ; [.935A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F806
F965      ; [.830C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F965
2F807     ; [.8373.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F807
F9D4      ; [.9BB2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D4
2F808     ; [.C477.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F808
2F809     ; [.80FF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F809
2F80B     ; [.B522.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80B
F9BB      ; [.98D4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BB
FA31      ; [.C90E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA31
2F80A     ; [.C90E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80A
FA0C      ; [.D1CB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0C
FA74      ; [.BF37.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA74
FA32      ; [.88D2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA32
2F80E     ; [.88D2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80E
2F80F     ; [.92F0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F80F
2F810     ; [.A627.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F810
2F814     ; [.9422.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F814
FA72      ; [.B0F4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA72
F978      ; [.9A28.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F978
F9D1      ; [.9953.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D1
2F811     ; [.ABF3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F811
FA75      ; [.A7A9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA75
2F815     ; [.C4C2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F815
2F8D2     ; [.874F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D2
2F8D3     ; [.88DA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D3
2F817     ; [.C3F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F817
2F818     ; [.D571.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F818
2F81A     ; [.8FE3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81A
FA71      ; [.A1F5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA71
2F81B     ; [.A1F5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81B
F92E      ; [.9793.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92E
F979      ; [.9A18.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F979
F955      ; [.9A51.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F955
F954      ; [.99F8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F954
FA15      ; [.B1BC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA15
2F81D     ; [.AF59.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81D
2F81E     ; [.C305.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81E
FA00      ; [.AE24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA00
2F850     ; [.AE24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F850
F99C      ; [.98A1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99C
F9DD      ; [.980C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DD
F9FF      ; [.C66A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FF
2F820     ; [.A014.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F820
2F821     ; [.9B64.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F821
2F822     ; [.9C7B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F822
2F823     ; [.BD2E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F823
F9C7      ; [.9926.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C7
F98A      ; [.9804.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98A
F99D      ; [.98A2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99D
2F992     ; [.969D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F992
FA76      ; [.D671.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA76
2F825     ; [.D671.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F825
FA33      ; [.88D5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA33
2F826     ; [.88D5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F826
F952      ; [.964C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F952
F92F      ; [.96A5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92F
FA34      ; [.AFAD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA34
2F827     ; [.AFAD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F827
F97F      ; [.985C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97F
FA77      ; [.C096.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA77
2F828     ; [.C096.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F828
2F829     ; [.811B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F829
2F82A     ; [.C7B7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82A
F963      ; [.80E5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F963
2F82B     ; [.80E5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82B
F9EB      ; [.94CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EB
2F82C     ; [.A518.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82C
FA35      ; [.80D7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA35
2F82D     ; [.80D7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82D
2F82E     ; [.807E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82E
2F82F     ; [.A6FF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F82F
F91C      ; [.9BA5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91C
2F830     ; [.A70A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F830
2F831     ; [.B020.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F831
2F832     ; [.B020.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F832
2F833     ; [.B020.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F833
F96B      ; [.C6D2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96B
2F836     ; [.A6FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F836
2F837     ; [.C8D2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F837
F906      ; [.ABEE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F906
2F839     ; [.A922.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F839
2F83A     ; [.BBFA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83A
2F83B     ; [.CE13.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83B
F9DE      ; [.9809.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DE
F9ED      ; [.9A03.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9ED
2F83D     ; [.B16A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83D
F980      ; [.9C24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F980
2F83E     ; [.BDFE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83E
2F83F     ; [.B8B3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83F
2F83C     ; [.B473.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F83C
2F840     ; [.CA56.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F840
F99E      ; [.CF9A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99E
2F841     ; [.8891.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F841
2F842     ; [.9144.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F842
2F843     ; [.ADCE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F843
FA79      ; [.90B6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA79
2F844     ; [.B415.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F844
2F845     ; [.C100.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F845
2F846     ; [.C100.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F846
F90B      ; [.95E6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90B
FA7A      ; [.A52B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7A
2F847     ; [.A52B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F847
FA36      ; [.A22D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA36
FA78      ; [.A22D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA78
2F848     ; [.BBB6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F848
2F849     ; [.B7F6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F849
FA0D      ; [.A422.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0D
2F84A     ; [.CE34.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84A
FA7B      ; [.D21D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7B
FA37      ; [.912C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA37
2F84C     ; [.912C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84C
2F84E     ; [.A2BD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84E
FA38      ; [.ADFD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA38
2F84F     ; [.847B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84F
F9A9      ; [.9A44.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A9
2F84B     ; [.92DB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84B
2F84D     ; [.92DC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F84D
2F855     ; [.B548.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F855
2F852     ; [.BE03.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F852
2F853     ; [.B720.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F853
2F854     ; [.92F2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F854
2F857     ; [.8151.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F857
2F856     ; [.C642.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F856
FA39      ; [.85EA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA39
FA10      ; [.BB92.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA10
FA7C      ; [.BB92.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7C
F96C      ; [.C892.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96C
FA3A      ; [.86A0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3A
2F858     ; [.8E0D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F858
FA7D      ; [.8A7A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7D
F94A      ; [.9679.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94A
F942      ; [.9C0B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F942
2F851     ; [.BB63.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F851
2F85A     ; [.86C6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85A
2F85B     ; [.A3DA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85B
2F85C     ; [.8AFA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85C
2F85D     ; [.8F35.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85D
2F85E     ; [.882A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85E
FA7E      ; [.CF5B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7E
F90C      ; [.9410.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90C
F909      ; [.ADE9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F909
FA7F      ; [.8193.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA7F
2F85F     ; [.C04A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F85F
F981      ; [.95CC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F981
2F865     ; [.8598.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F865
2F862     ; [.A6AD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F862
2F863     ; [.D42A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F863
2F864     ; [.935B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F864
FA80      ; [.8232.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA80
2F866     ; [.8BDA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F866
2F986     ; [.D15F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F986
2F869     ; [.C2B1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F869
FA81      ; [.C657.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA81
2F86A     ; [.9741.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86A
2F86B     ; [.9741.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86B
FA04      ; [.B874.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA04
2F86D     ; [.D575.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86D
2F86E     ; [.B7AB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86E
F95F      ; [.9570.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95F
F9AA      ; [.9570.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AA
2F86F     ; [.9570.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F86F
F9BC      ; [.98DC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BC
2F870     ; [.8143.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F870
2F872     ; [.C0B3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F872
2F873     ; [.AAD5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F873
2F875     ; [.CE9E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F875
F9BD      ; [.9522.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BD
2F877     ; [.92CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F877
F94B      ; [.9C34.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94B
FA3B      ; [.C71D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3B
F9DF      ; [.9C36.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DF
FA3C      ; [.BC63.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3C
2F878     ; [.BC63.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F878
2F87A     ; [.AEFF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87A
2F879     ; [.B3C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F879
F9D5      ; [.9BB6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D5
2F87C     ; [.CF66.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87C
F921      ; [.970A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F921
2F87F     ; [.C416.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87F
2F87E     ; [.8E87.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F87E
2F880     ; [.BD30.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F880
2F9F4     ; [.B1BE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F4
F9AB      ; [.9A9A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AB
2F881     ; [.B68C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F881
2F882     ; [.BC98.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F882
2F884     ; [.B6C0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F884
2F885     ; [.C26F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F885
2F886     ; [.8758.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F886
2F887     ; [.8A7B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F887
F98E      ; [.9537.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98E
FA01      ; [.8F28.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA01
2F88B     ; [.8372.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88B
2F88C     ; [.8233.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88C
2F88D     ; [.C22B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88D
F9A2      ; [.996E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A2
F928      ; [.9766.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F928
2F88E     ; [.9766.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F88E
FA82      ; [.CAF7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA82
FA0B      ; [.A11E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0B
FA83      ; [.CCFF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA83
F982      ; [.9AB9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F982
2F890     ; [.9FBB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F890
F943      ; [.95C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F943
2F894     ; [.9097.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F894
2F895     ; [.9097.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F895
2F874     ; [.8D4C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F874
2F899     ; [.B544.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F899
FA84      ; [.C6A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA84
2F89A     ; [.8E55.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89A
F9D8      ; [.9C41.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D8
2F89C     ; [.8FF3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89C
F966      ; [.8BDF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F966
FA85      ; [.CE36.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA85
2F89D     ; [.C2FD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89D
2F89E     ; [.B768.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89E
F9A3      ; [.9551.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A3
2F89F     ; [.A1E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F89F
F960      ; [.958F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F960
F9AC      ; [.9965.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AC
FA6B      ; [.A524.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA6B
2F8A0     ; [.D572.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A0
FA3D      ; [.A510.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3D
2F8A3     ; [.A510.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A3
2F8A5     ; [.8FBB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A5
FA86      ; [.D3D6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA86
F9B9      ; [.CA70.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B9
FA88      ; [.D4DB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA88
F9D9      ; [.9846.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D9
2F8A6     ; [.C64C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A6
2F8A7     ; [.A5FA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A7
2F8A9     ; [.A5FA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A9
FA87      ; [.C178.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA87
2F8A8     ; [.C178.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8A8
FA8A      ; [.CB23.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8A
FA3E      ; [.A03D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3E
2F8AA     ; [.96E1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AA
FA3F      ; [.C55C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA3F
FA89      ; [.C55C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA89
2F8AB     ; [.C55C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AB
F98F      ; [.997C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98F
2F8AD     ; [.8A96.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AD
2F8AE     ; [.C6EB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AE
2F8AC     ; [.B498.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AC
2F8AF     ; [.8803.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8AF
FA40      ; [.BE2C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA40
FA8B      ; [.BE2C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8B
2F8B0     ; [.BE2C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B0
F90D      ; [.9742.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90D
2F8B1     ; [.9742.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B1
F990      ; [.99C4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F990
2F8B2     ; [.BDFC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B2
2F8B3     ; [.A802.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B3
F9D2      ; [.9B16.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D2
FA8C      ; [.8C7A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8C
2F8B4     ; [.A0E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B4
2F8B5     ; [.814B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B5
F925      ; [.95DB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F925
F95B      ; [.93DB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95B
FA02      ; [.9037.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA02
2F8B6     ; [.801D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B6
2F8BA     ; [.8599.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BA
F973      ; [.C00F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F973
2F8B9     ; [.D348.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B9
2F8B7     ; [.ACA2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8B7
2F8BB     ; [.C05A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BB
F9A4      ; [.9540.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A4
2F8BC     ; [.C8AF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BC
F975      ; [.CA67.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F975
2F8C1     ; [.CF63.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C1
FA8D      ; [.D43E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8D
2F8C0     ; [.CF39.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C0
2F8BD     ; [.A70F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BD
FA8E      ; [.C8BD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8E
2F8BF     ; [.AAB0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8BF
FA8F      ; [.8365.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA8F
2F8C3     ; [.865D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C3
2F8C6     ; [.A904.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C6
2F8C4     ; [.AB0A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C4
F991      ; [.9546.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F991
2F8C5     ; [.A4F3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C5
F930      ; [.9ADE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F930
FA41      ; [.8915.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA41
2F8C8     ; [.8915.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C8
FA90      ; [.CAF2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA90
2F8C9     ; [.AB74.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8C9
F969      ; [.C23A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F969
F9BE      ; [.9905.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BE
F983      ; [.9C2B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F983
FA42      ; [.A775.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA42
2F8CB     ; [.A789.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CB
F9E0      ; [.CCA3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E0
2F8CD     ; [.AAA5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CD
FA12      ; [.B034.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA12
FA91      ; [.B034.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA91
F9C5      ; [.D5E6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C5
FA43      ; [.C20B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA43
2F8CF     ; [.C20B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CF
2F8D5     ; [.AAB8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D5
FA06      ; [.8156.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA06
F98B      ; [.9855.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98B
F901      ; [.9DDE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F901
2F8CC     ; [.C1E5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CC
2F8D4     ; [.C5BD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D4
F929      ; [.9775.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F929
FA92      ; [.9775.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA92
2F8D8     ; [.9775.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D8
FA93      ; [.D3E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA93
2F8D9     ; [.D3E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D9
2F8DA     ; [.C5F8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DA
F9E1      ; [.9897.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E1
2F8DC     ; [.82A9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DC
FA94      ; [.B9DA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA94
2F8DB     ; [.ADC7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DB
F9C8      ; [.BCDE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C8
2F8E0     ; [.A6A7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E0
F9F4      ; [.99CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F4
F9C9      ; [.9944.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C9
2F8DF     ; [.9EAD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DF
F9DA      ; [.9826.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DA
2F8E5     ; [.8196.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E5
2F8E1     ; [.C902.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E1
F97A      ; [.9A19.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97A
FA44      ; [.86DF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA44
2F8E2     ; [.86DF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E2
2F8E4     ; [.CAEF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E4
F9E2      ; [.979F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E2
2F8E6     ; [.C417.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E6
2F8E8     ; [.B7F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E8
2F8E9     ; [.CE3D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8E9
2F8EA     ; [.9CE5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EA
F914      ; [.9610.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F914
F95C      ; [.9610.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95C
F9BF      ; [.9610.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9BF
F94C      ; [.96E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94C
2F8EB     ; [.C052.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EB
F931      ; [.9AE5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F931
2F8ED     ; [.B7D3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8ED
F91D      ; [.9726.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91D
2F8EF     ; [.C667.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EF
2F8F1     ; [.B58D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F1
2F8F3     ; [.C9AB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F3
F98C      ; [.9856.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98C
FA95      ; [.8C53.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA95
2F8F4     ; [.D380.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F4
F9A5      ; [.99BD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A5
F970      ; [.C025.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F970
FA96      ; [.C025.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA96
2F8F5     ; [.C025.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F5
2F8F6     ; [.AE8A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8F6
2F8FA     ; [.8A3E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FA
2F8FE     ; [.AF01.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FE
F972      ; [.BD5D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F972
2F8FC     ; [.CF25.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FC
F968      ; [.886C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F968
2F8FD     ; [.8194.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FD
F9E3      ; [.9490.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E3
2F8FF     ; [.D193.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8FF
F915      ; [.9B72.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F915
FA05      ; [.900E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA05
2F907     ; [.85C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F907
2F900     ; [.83F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F900
F9CA      ; [.9912.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CA
FA97      ; [.9912.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA97
2F902     ; [.9912.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F902
2F903     ; [.A2D9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F903
F92A      ; [.9781.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92A
FA45      ; [.A29A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA45
2F901     ; [.A29A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F901
2F904     ; [.AAA7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F904
2F905     ; [.94E1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F905
F9F5      ; [.99D1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F5
F94D      ; [.9688.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94D
F9D6      ; [.9BB8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D6
2F90E     ; [.CF08.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90E
FA46      ; [.BA70.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA46
2F908     ; [.9DB6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F908
2F909     ; [.CF0D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F909
F9CB      ; [.990C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CB
F9EC      ; [.94CE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EC
2F90C     ; [.8E88.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90C
FA99      ; [.C419.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA99
2F90B     ; [.C419.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90B
F904      ; [.A44F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F904
FA98      ; [.D03B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA98
F94E      ; [.96FC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94E
FA47      ; [.A368.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA47
FA9A      ; [.A368.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9A
F992      ; [.9974.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F992
2F90F     ; [.BCA0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90F
2F912     ; [.8A7C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F912
F922      ; [.9751.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F922
F984      ; [.9C51.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F984
2F915     ; [.D142.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F915
FA9B      ; [.AB83.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9B
2F914     ; [.AB83.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F914
2F913     ; [.D563.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F913
2F917     ; [.AF57.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F917
2F835     ; [.A4D6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F835
2F919     ; [.BB35.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F919
2F918     ; [.C4B5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F918
F9FB      ; [.B774.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FB
2F91A     ; [.9126.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F91A
F99F      ; [.98B0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99F
F916      ; [.96C6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F916
2F91C     ; [.8FAD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F91C
F993      ; [.99B6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F993
FA48      ; [.BA72.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA48
FA9C      ; [.BA72.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9C
2F91E     ; [.C7CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F91E
F9C0      ; [.98E3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C0
F9EE      ; [.99E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EE
F932      ; [.9AC1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F932
F91E      ; [.9753.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91E
2F920     ; [.C7A8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F920
FA49      ; [.B8AD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA49
FA9E      ; [.AC81.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9E
2F921     ; [.AC81.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F921
2F922     ; [.B809.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F922
F946      ; [.969F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F946
2F924     ; [.B19A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F924
2F925     ; [.810B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F925
FA9F      ; [.8A3C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9F
F9FA      ; [.BB66.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FA
F92B      ; [.975E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92B
FA16      ; [.BA3A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA16
FAA0      ; [.BA3A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA0
F9A7      ; [.98C3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A7
2F928     ; [.9034.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F928
F961      ; [.9C43.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F961
F9DB      ; [.9C43.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DB
2F929     ; [.D3CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F929
2F92B     ; [.D544.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92B
F9AD      ; [.9A4F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AD
F917      ; [.9B76.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F917
F9E4      ; [.97F2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E4
F9CC      ; [.9914.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CC
FA4A      ; [.C58E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4A
2F92E     ; [.8C72.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92E
2F92F     ; [.D44E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92F
F9AE      ; [.D131.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AE
FAA1      ; [.B9AB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA1
2F930     ; [.B9AB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F930
2F931     ; [.C979.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F931
F994      ; [.999F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F994
F9EF      ; [.99E1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EF
2F932     ; [.B15E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F932
FAA2      ; [.C64D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA2
2F934     ; [.C397.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F934
FAA3      ; [.A462.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA3
2F936     ; [.C4B7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F936
F9CD      ; [.9915.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CD
F976      ; [.CA68.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F976
F962      ; [.CCD0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F962
2F938     ; [.CCD0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F938
F9E5      ; [.983F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E5
2F93A     ; [.D494.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F93A
FAA4      ; [.9F2F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA4
FAA5      ; [.D382.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA5
F9C1      ; [.98E8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C1
F90E      ; [.9649.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90E
FA17      ; [.CCC7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA17
FAA6      ; [.CCC7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA6
FAA7      ; [.C1CA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA7
F933      ; [.9AB5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F933
FAA8      ; [.B71A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA8
2F940     ; [.B71A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F940
F96D      ; [.C1C2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96D
2F945     ; [.B959.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F945
2F946     ; [.B95A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F946
2F947     ; [.B95A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F947
FAAA      ; [.B869.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAA
FAA9      ; [.ACC5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAA9
2F948     ; [.ACC5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F948
2F94A     ; [.BD55.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F94A
FA9D      ; [.AE77.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA9D
2F94E     ; [.B54F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F94E
F9CE      ; [.9918.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CE
F93B      ; [.9B0A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93B
2F94F     ; [.9B0A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F94F
FA4B      ; [.80DF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4B
F947      ; [.9673.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F947
FAAB      ; [.9259.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAB
2F950     ; [.9259.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F950
F964      ; [.845F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F964
F985      ; [.9878.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F985
FA18      ; [.97EA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA18
FA4C      ; [.C05E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4C
FA4E      ; [.AD73.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4E
FA4D      ; [.B757.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4D
FA4F      ; [.CEF0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA4F
FA50      ; [.C583.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA50
2F953     ; [.C583.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F953
FA51      ; [.BA90.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA51
FA19      ; [.C153.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA19
FA1A      ; [.B4FF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1A
F93C      ; [.9B0B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93C
FA52      ; [.A4A7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA52
FA53      ; [.B971.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA53
FA1B      ; [.8B8D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1B
2F956     ; [.8B8D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F956
F9B6      ; [.97FC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B6
F995      ; [.9538.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F995
2F957     ; [.C201.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F957
F956      ; [.978F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F956
FA54      ; [.9E24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA54
2F959     ; [.9E24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F959
2F95A     ; [.A79C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F95A
2F95B     ; [.D3B2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F95B
FA55      ; [.92B6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA55
FAAC      ; [.9231.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAC
F9F7      ; [.9808.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F7
2F95F     ; [.85BC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F95F
F9F8      ; [.9833.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F8
FA56      ; [.A87C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA56
FAAD      ; [.A87C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAD
2F962     ; [.BB3E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F962
2F963     ; [.BA5F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F963
F9A6      ; [.9992.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A6
F944      ; [.9BF8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F944
FAAE      ; [.9686.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAE
F9F9      ; [.9834.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F9
FA1D      ; [.AB32.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1D
2F966     ; [.8114.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F966
FA03      ; [.915F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA03
2F969     ; [.C8EE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F969
F97B      ; [.9A24.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97B
2F968     ; [.AB10.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F968
2F96A     ; [.A778.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96A
F9CF      ; [.952E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9CF
F96A      ; [.C970.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96A
F94F      ; [.9689.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F94F
FAAF      ; [.90A1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAAF
2F96C     ; [.81D3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96C
F93D      ; [.9C4A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93D
F957      ; [.9A73.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F957
2F96E     ; [.C427.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96E
F996      ; [.99BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F996
FA57      ; [.99BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA57
FAB0      ; [.99BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB0
2F96F     ; [.C61F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96F
FA58      ; [.AAC3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA58
F950      ; [.9C3C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F950
FA59      ; [.8A28.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA59
2F970     ; [.C8A7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F970
FAB1      ; [.85D7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB1
FA5A      ; [.C20E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5A
F9E6      ; [.97C3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E6
2F976     ; [.BCA2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F976
F90F      ; [.9B52.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90F
2F978     ; [.D0D3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F978
F9AF      ; [.9A62.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9AF
FA1E      ; [.D47D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1E
2F979     ; [.CB06.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F979
F934      ; [.96B7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F934
FA5B      ; [.B856.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5B
FAB2      ; [.B856.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB2
2F97A     ; [.B856.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F97A
F9B0      ; [.9A64.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B0
2F97D     ; [.85BA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F97D
F997      ; [.9989.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F997
2F97F     ; [.C7D5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F97F
F945      ; [.9BF9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F945
F953      ; [.9600.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F953
2F8D6     ; [.93E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D6
2F982     ; [.D4B0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F982
2F983     ; [.C780.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F983
2F985     ; [.851D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F985
F926      ; [.95F4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F926
F9F6      ; [.99E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F6
FA5C      ; [.BCE6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5C
2F893     ; [.D42F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F893
2F98B     ; [.D42F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98B
2F98C     ; [.B23F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98C
FA6D      ; [.9F3F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA6D
F97C      ; [.9A16.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97C
FA5D      ; [.C6CB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5D
FA5E      ; [.C6CB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5E
2F990     ; [.D4AD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F990
2F98F     ; [.ADCA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98F
2F991     ; [.B6F7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F991
2F993     ; [.A43F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F993
2F994     ; [.8AA5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F994
2F995     ; [.CD7E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F995
F974      ; [.C386.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F974
2F998     ; [.C386.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F998
2F996     ; [.A0F5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F996
2F999     ; [.BC82.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F999
2F99C     ; [.D198.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99C
F9FE      ; [.BC3C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FE
FAB3      ; [.A5F7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB3
2F9A0     ; [.85CF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A0
2F99A     ; [.C3D3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99A
2F99B     ; [.A86D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99B
2F99D     ; [.87E9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99D
F93E      ; [.9B03.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93E
2F9A1     ; [.ABC4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A1
2F9A2     ; [.ACE3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A2
2F9A3     ; [.C6B0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A3
2F99E     ; [.8DE0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99E
FAB4      ; [.A44D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB4
F958      ; [.9A69.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F958
F918      ; [.9B7C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F918
F96E      ; [.CDE9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96E
FA5F      ; [.B86A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA5F
2F99F     ; [.B86A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F99F
F999      ; [.9980.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F999
2F9A8     ; [.85DC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A8
2F9A9     ; [.AA97.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9A9
F9C2      ; [.98FD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C2
2F9AA     ; [.C74F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9AA
2F9AC     ; [.C399.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9AC
F923      ; [.971B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F923
F9F0      ; [.9A11.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F0
F935      ; [.9AC4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F935
FA20      ; [.AEF5.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA20
F91F      ; [.9728.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91F
F910      ; [.9B5D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F910
2F9B3     ; [.95D6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B3
F936      ; [.9AD8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F936
2F9B4     ; [.9AD8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B4
2F9B5     ; [.A14D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B5
2F9B6     ; [.B256.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B6
2F9B8     ; [.AF15.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B8
2F9B7     ; [.BBB2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B7
2F9BA     ; [.85D9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BA
2F9B9     ; [.D57F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9B9
2F9BC     ; [.8E3B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BC
2F9BD     ; [.BA44.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BD
FAB5      ; [.D5EE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB5
2F9BB     ; [.D5EE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BB
2F9BE     ; [.C674.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9BE
F911      ; [.9B51.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F911
2F9C0     ; [.9EFE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C0
2F9C1     ; [.B510.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C1
F927      ; [.95F9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F927
FA08      ; [.B543.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA08
2F9C3     ; [.BB4D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C3
2F9C4     ; [.CBE0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C4
F9A0      ; [.98B8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A0
F9E7      ; [.97F6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E7
2F9C6     ; [.9919.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C6
2F9C7     ; [.C276.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C7
F9E8      ; [.989C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E8
F912      ; [.9B67.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F912
2F9C9     ; [.CF76.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9C9
FA60      ; [.A282.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA60
FAB6      ; [.B011.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB6
F924      ; [.9724.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F924
FAB7      ; [.8BFE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB7
FA0A      ; [.AA1C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA0A
FA61      ; [.BFE1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA61
FAB8      ; [.BFE1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB8
2F9CF     ; [.BE22.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9CF
F96F      ; [.C24F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F96F
F9A1      ; [.C24F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9A1
FAB9      ; [.8E75.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAB9
FABB      ; [.B047.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABB
F97D      ; [.9A3C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97D
F941      ; [.9BCB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F941
FABE      ; [.D502.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABE
2F9D0     ; [.D502.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D0
FA22      ; [.BA48.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA22
FABA      ; [.BA48.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABA
F95D      ; [.95A4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95D
FABD      ; [.95A4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABD
FA62      ; [.CDF9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA62
FABC      ; [.CDF9.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABC
FA63      ; [.AA9A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA63
FABF      ; [.AA9A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FABF
F9FC      ; [.C017.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9FC
F95A      ; [.8F10.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F95A
FAC0      ; [.831E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC0
2F9D1     ; [.831E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D1
F900      ; [.ADCC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F900
2F9D2     ; [.BFAB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D2
2F9D4     ; [.9F4B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D4
2F9D5     ; [.8245.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D5
F948      ; [.9B0D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F948
F903      ; [.A822.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F903
FA64      ; [.8331.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA64
FA65      ; [.C56B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA65
FAC1      ; [.C56B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC1
2F9D6     ; [.9D8F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D6
2F9D7     ; [.ADCD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9D7
2F9DB     ; [.A9FA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DB
2F9DA     ; [.8024.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DA
F937      ; [.9B0E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F937
2F9DC     ; [.8589.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DC
F902      ; [.BC58.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F902
2F9DE     ; [.C321.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DE
F998      ; [.9549.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F998
F9D7      ; [.9BC2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D7
FAC2      ; [.C1FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC2
2F9DF     ; [.C1FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9DF
FA07      ; [.8B97.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA07
F98D      ; [.988A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F98D
2F98D     ; [.C64B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F98D
F971      ; [.BD5F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F971
FA66      ; [.BE9F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA66
F99A      ; [.996B.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99A
FA25      ; [.CCEA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA25
FA67      ; [.CCEA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA67
FAC3      ; [.BBE0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC3
F9C3      ; [.98E6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C3
F913      ; [.9B5E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F913
2F9E2     ; [.ADC4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E2
F92C      ; [.975C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F92C
FA2E      ; [.975F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2E
2F9E3     ; [.85CC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E3
FA26      ; [.8CC2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA26
2F9E4     ; [.C423.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E4
2F9E6     ; [.BC9D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E6
F919      ; [.96C8.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F919
FAC4      ; [.C8CB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC4
F9B7      ; [.97FF.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B7
F9E9      ; [.97EB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9E9
F97E      ; [.9A3A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F97E
F90A      ; [.AA72.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F90A
F9B1      ; [.9A6E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B1
2F9E7     ; [.8086.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E7
FAC5      ; [.B553.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC5
2F9EA     ; [.8369.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EA
2F9E8     ; [.B62C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E8
2F9E9     ; [.A455.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9E9
F93F      ; [.9B23.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93F
F99B      ; [.99BE.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F99B
2F9EB     ; [.B013.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EB
2F9EC     ; [.C516.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EC
2F9EE     ; [.A032.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9EE
F986      ; [.9C1F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F986
2F9F0     ; [.C083.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F0
F9C6      ; [.C3B3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C6
F951      ; [.96FA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F951
FA09      ; [.AB03.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA09
F959      ; [.9A68.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F959
F9D3      ; [.9AFC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D3
FAC6      ; [.BA71.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC6
F9DC      ; [.9BDC.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9DC
F9F1      ; [.99DD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F1
FA2F      ; [.9859.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2F
F9B8      ; [.985F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B8
2F9F3     ; [.AF18.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F3
F9EA      ; [.97D0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9EA
FA68      ; [.9467.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA68
FAC7      ; [.9467.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC7
F9B2      ; [.9A70.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B2
F949      ; [.964D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F949
2F9F5     ; [.D625.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9F5
F938      ; [.9B37.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F938
F9B3      ; [.9A8D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B3
FA1C      ; [.AB77.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA1C
FAC8      ; [.AB77.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC8
FAC9      ; [.80D4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAC9
2F9FA     ; [.8286.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9FA
FA69      ; [.B512.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA69
FACA      ; [.B512.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACA
FACB      ; [.CA47.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACB
2F9FE     ; [.CA47.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9FE
2F9FF     ; [.CA47.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F9FF
F9B4      ; [.9A99.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9B4
2FA00     ; [.85BD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA00
FA6A      ; [.85A6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA6A
FACC      ; [.85A6.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACC
F9D0      ; [.9693.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9D0
2FA02     ; [.A6B2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA02
FA2A      ; [.8A4D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2A
FA2B      ; [.C84E.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2B
FA2C      ; [.9F41.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2C
2FA04     ; [.CA8F.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA04
2FA05     ; [.D5F2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA05
2FA06     ; [.813C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA06
F91A      ; [.9B82.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F91A
2FA07     ; [.9361.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA07
F987      ; [.97E7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F987
FACD      ; [.B997.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACD
2FA0A     ; [.B997.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0A
F939      ; [.9ADD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F939
2FA0B     ; [.A7C3.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0B
F9F2      ; [.99F1.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F2
2FA0C     ; [.A9BB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0C
2FA0F     ; [.8528.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0F
FA2D      ; [.A28C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FA2D
F93A      ; [.9B3A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F93A
F920      ; [.9BA4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F920
F940      ; [.9AFD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F940
F988      ; [.9871.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F988
F9F3      ; [.99F2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9F3
2FA15     ; [.862D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA15
F989      ; [.97C2.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F989
2FA17     ; [.B762.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA17
2FA18     ; [.88D4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA18
2FA19     ; [.B715.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA19
2FA1A     ; [.8885.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA1A
2FA1B     ; [.8A85.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA1B
2FA1C     ; [.81FB.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA1C
FAD8      ; [.CA9A.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAD8
F9C4      ; [.9BE4.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F9C4
FAD9      ; [.8497.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAD9
F907      ; [.9ED7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F907
F908      ; [.9ED7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-F908
FACE      ; [.9ED7.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FACE
2F81F     ; [.8505.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F81F
2F888     ; [.87AA.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F888
2F8D0     ; [.D37C.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D0
2F8CE     ; [.D2E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8CE
2F8DE     ; [.A447.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8DE
2F8EE     ; [.CC56.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8EE
2F90A     ; [.9C08.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F90A
2F92C     ; [.85CD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92C
2F92D     ; [.85CD.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F92D
FAD4      ; [.A871.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-FAD4
2F949     ; [.A871.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F949
2F960     ; [.85E0.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F960
2F96D     ; [.CE1D.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F96D
2F8D7     ; [.9118.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2F8D7
2FA0E     ; [.A746.0020.0002] # CJK COMPATIBILITY IDEOGRAPH-2FA0E
ENTRY
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                package User::pwent;

use 5.006;
our $VERSION = '1.00';

use strict;
use warnings;

use Config;
use Carp;

our(@EXPORT, @EXPORT_OK, %EXPORT_TAGS);
BEGIN {
    use Exporter   ();
    @EXPORT      = qw(getpwent getpwuid getpwnam getpw);
    @EXPORT_OK   = qw(
                        pw_has

                        $pw_name    $pw_passwd  $pw_uid  $pw_gid
                        $pw_gecos   $pw_dir     $pw_shell
                        $pw_expire  $pw_change  $pw_class
                        $pw_age
                        $pw_quota   $pw_comment
                        $pw_expire

                   );
    %EXPORT_TAGS = (
        FIELDS => [ grep(/^\$pw_/, @EXPORT_OK), @EXPORT ],
        ALL    => [ @EXPORT, @EXPORT_OK ],
    );
}
use vars grep /^\$pw_/, @EXPORT_OK;

#
# XXX: these mean somebody hacked this module's source
#      without understanding the underlying assumptions.
#
my $IE = "[INTERNAL ERROR]";

# Class::Struct forbids use of @ISA
sub import { goto &Exporter::import }

use Class::Struct qw(struct);
struct 'User::pwent' => [
    name    => '$',         # pwent[0]
    passwd  => '$',         # pwent[1]
    uid     => '$',         # pwent[2]
    gid     => '$',         # pwent[3]

    # you'll only have one/none of these three
    change  => '$',         # pwent[4]
    age     => '$',         # pwent[4]
    quota   => '$',         # pwent[4]

    # you'll only have one/none of these two
    comment => '$',         # pwent[5]
    class   => '$',         # pwent[5]

    # you might not have this one
    gecos   => '$',         # pwent[6]

    dir     => '$',         # pwent[7]
    shell   => '$',         # pwent[8]

    # you might not have this one
    expire  => '$',         # pwent[9]

];


# init our groks hash to be true if the built platform knew how
# to do each struct pwd field that perl can ever under any circumstances
# know about.  we do not use /^pw_?/, but just the tails.
sub _feature_init {
    our %Groks;         # whether build system knew how to do this feature
    for my $feep ( qw{
                         pwage      pwchange   pwclass    pwcomment
                         pwexpire   pwgecos    pwpasswd   pwquota
                     }
                 )
    {
        my $short = $feep =~ /^pw(.*)/
                  ? $1
                  : do {
                        # not cluck, as we know we called ourselves,
                        # and a confession is probably imminent anyway
                        warn("$IE $feep is a funny struct pwd field");
                        $feep;
                    };

        exists $Config{ "d_" . $feep }
            || confess("$IE Configure doesn't d_$feep");
        $Groks{$short} = defined $Config{ "d_" . $feep };
    }
    # assume that any that are left are always there
    for my $feep (grep /^\$pw_/s, @EXPORT_OK) {
        $feep =~ /^\$pw_(.*)/;
        $Groks{$1} = 1 unless defined $Groks{$1};
    }
}

# With arguments, reports whether one or more fields are all implemented
# in the build machine's struct pwd pw_*.  May be whitespace separated.
# We do not use /^pw_?/, just the tails.
#
# Without arguments, returns the list of fields implemented on build
# machine, space separated in scalar context.
#
# Takes exception to being asked whether this machine's struct pwd has
# a field that Perl never knows how to provide under any circumstances.
# If the module does this idiocy to itself, the explosion is noisier.
#
sub pw_has {
    our %Groks;         # whether build system knew how to do this feature
    my $cando = 1;
    my $sploder = caller() ne __PACKAGE__
                    ? \&croak
                    : sub { confess("$IE @_") };
    if (@_ == 0) {
        my @valid = sort grep { $Groks{$_} } keys %Groks;
        return wantarray ? @valid : "@valid";
    }
    for my $feep (map { split } @_) {
        defined $Groks{$feep}
            || $sploder->("$feep is never a valid struct pwd field");
        $cando &&= $Groks{$feep};
    }
    return $cando;
}

sub _populate (@) {
    return unless @_;
    my $pwob = new();

    # Any that haven't been pw_had are assumed on "all" platforms of
    # course, this may not be so, but you can't get here otherwise,
    # since the underlying core call already took exception to your
    # impudence.

    $pw_name    = $pwob->name   ( $_[0] );
    $pw_passwd  = $pwob->passwd ( $_[1] )   if pw_has("passwd");
    $pw_uid     = $pwob->uid    ( $_[2] );
    $pw_gid     = $pwob->gid    ( $_[3] );

    if (pw_has("change")) {
        $pw_change      = $pwob->change ( $_[4] );
    }
    elsif (pw_has("age")) {
        $pw_age         = $pwob->age    ( $_[4] );
    }
    elsif (pw_has("quota")) {
        $pw_quota       = $pwob->quota  ( $_[4] );
    }

    if (pw_has("class")) {
        $pw_class       = $pwob->class  ( $_[5] );
    }
    elsif (pw_has("comment")) {
        $pw_comment     = $pwob->comment( $_[5] );
    }

    $pw_gecos   = $pwob->gecos  ( $_[6] ) if pw_has("gecos");

    $pw_dir     = $pwob->dir    ( $_[7] );
    $pw_shell   = $pwob->shell  ( $_[8] );

    $pw_expire  = $pwob->expire ( $_[9] ) if pw_has("expire");

    return $pwob;
}

sub getpwent ( ) { _populate(CORE::getpwent()) }
sub getpwnam ($) { _populate(CORE::getpwnam(shift)) }
sub getpwuid ($) { _populate(CORE::getpwuid(shift)) }
sub getpw    ($) { ($_[0] =~ /^\d+\z/s) ? &getpwuid : &getpwnam }

_feature_init();

1;
__END__

=head1 NAME

User::pwent - by-name interface to Perl's built-in getpw*() functions

=head1 SYNOPSIS

 use User::pwent;
 $pw = getpwnam('daemon')       || die "No daemon user";
 if ( $pw->uid == 1 && $pw->dir =~ m#^/(bin|tmp)?\z#s ) {
     print "gid 1 on root dir";
 }

 $real_shell = $pw->shell || '/bin/sh';

 for (($fullname, $office, $workphone, $homephone) =
        split /\s*,\s*/, $pw->gecos)
 {
    s/&/ucfirst(lc($pw->name))/ge;
 }

 use User::pwent qw(:FIELDS);
 getpwnam('daemon')             || die "No daemon user";
 if ( $pw_uid == 1 && $pw_dir =~ m#^/(bin|tmp)?\z#s ) {
     print "gid 1 on root dir";
 }

 $pw = getpw($whoever);

 use User::pwent qw/:DEFAULT pw_has/;
 if (pw_has(qw[gecos expire quota])) { .... }
 if (pw_has("name uid gid passwd"))  { .... }
 print "Your struct pwd has: ", scalar pw_has(), "\n";

=head1 DESCRIPTION

This module's default exports override the core getpwent(), getpwuid(),
and getpwnam() functions, replacing them with versions that return
C<User::pwent> objects.  This object has methods that return the
similarly named structure field name from the C's passwd structure
from F<pwd.h>, stripped of their leading "pw_" parts, namely C<name>,
C<passwd>, C<uid>, C<gid>, C<change>, C<age>, C<quota>, C<comment>,
C<class>, C<gecos>, C<dir>, C<shell>, and C<expire>.  The C<passwd>,
C<gecos>, and C<shell> fields are tainted when running in taint mode.

You may also import all the structure fields directly into your
namespace as regular variables using the :FIELDS import tag.  (Note
that this still overrides your core functions.)  Access these fields
as variables named with a preceding C<pw_> in front their method
names.  Thus, C<< $passwd_obj->shell >> corresponds to $pw_shell
if you import the fields.

The getpw() function is a simple front-end that forwards
a numeric argument to getpwuid() and the rest to getpwnam().

To access this functionality without the core overrides, pass the
C<use> an empty import list, and then access function functions
with their full qualified names.  The built-ins are always still
available via the C<CORE::> pseudo-package.

=head2 System Specifics

Perl believes that no machine ever has more than one of C<change>,
C<age>, or C<quota> implemented, nor more than one of either
C<comment> or C<class>.  Some machines do not support C<expire>,
C<gecos>, or allegedly, C<passwd>.  You may call these methods
no matter what machine you're on, but they return C<undef> if
unimplemented.

You may ask whether one of these was implemented on the system Perl
was built on by asking the importable C<pw_has> function about them.
This function returns true if all parameters are supported fields
on the build platform, false if one or more were not, and raises
an exception if you asked about a field that Perl never knows how
to provide.  Parameters may be in a space-separated string, or as
separate arguments.  If you pass no parameters, the function returns
the list of C<struct pwd> fields supported by your build platform's
C library, as a list in list context, or a space-separated string
in scalar context.  Note that just because your C library had
a field doesn't necessarily mean that it's fully implemented on
that system.

Interpretation of the C<gecos> field varies between systems, but
traditionally holds 4 comma-separated fields containing the user's
full name, office location, work phone number, and home phone number.
An C<&> in the gecos field should be replaced by the user's properly
capitalized login C<name>.  The C<shell> field, if blank, must be
assumed to be F</bin/sh>.  Perl does not do this for you.  The
C<passwd> is one-way hashed garble, not clear text, and may not be
unhashed save by brute-force guessing.  Secure systems use more a
more secure hashing than DES.  On systems supporting shadow password
systems, Perl automatically returns the shadow password entry when
called by a suitably empowered user, even if your underlying
vendor-provided C library was too short-sighted to realize it should
do this.

See passwd(5) and getpwent(3) for details.

=head1 NOTE

While this class is currently implemented using the Class::Struct
module to build a struct-like class, you shouldn't rely upon this.

=head1 AUTHOR

Tom Christiansen

=head1 HISTORY

=over 4

=item March 18th, 2000

Reworked internals to support better interface to dodgey fields
than normal Perl function provides.  Added pw_has() field.  Improved
documentation.

=back
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 package autodie::Util;

use strict;
use warnings;

use Exporter 5.57 qw(import);

use autodie::Scope::GuardStack;

our @EXPORT_OK = qw(
  fill_protos
  install_subs
  make_core_trampoline
  on_end_of_compile_scope
);

our $VERSION = '2.29'; # VERSION: Generated by DZP::OurPkg:Version

# ABSTRACT: Internal Utility subroutines for autodie and Fatal

# docs says we should pick __PACKAGE__ /<whatever>
my $H_STACK_KEY = __PACKAGE__ . '/stack';

sub on_end_of_compile_scope {
    my ($hook) = @_;

    # Dark magic to have autodie work under 5.8
    # Copied from namespace::clean, that copied it from
    # autobox, that found it on an ancient scroll written
    # in blood.

    # This magic bit causes %^H to be lexically scoped.
    $^H |= 0x020000;

    my $stack = $^H{$H_STACK_KEY};
    if (not defined($stack)) {
        $stack = autodie::Scope::GuardStack->new;
        $^H{$H_STACK_KEY} = $stack;
    }

    $stack->push_hook($hook);
    return;
}

# This code is based on code from the original Fatal.  The "XXXX"
# remark is from the original code and its meaning is (sadly) unknown.
sub fill_protos {
    my ($proto) = @_;
    my ($n, $isref, @out, @out1, $seen_semi) = -1;
    if ($proto =~ m{^\s* (?: [;] \s*)? \@}x) {
        # prototype is entirely slurply - special case that does not
        # require any handling.
        return ([0, '@_']);
    }

    while ($proto =~ /\S/) {
        $n++;
        push(@out1,[$n,@out]) if $seen_semi;
        push(@out, $1 . "{\$_[$n]}"), next if $proto =~ s/^\s*\\([\@%\$\&])//;
        push(@out, "\$_[$n]"),        next if $proto =~ s/^\s*([_*\$&])//;
        push(@out, "\@_[$n..\$#_]"),  last if $proto =~ s/^\s*(;\s*)?\@//;
        $seen_semi = 1, $n--,         next if $proto =~ s/^\s*;//; # XXXX ????
        die "Internal error: Unknown prototype letters: \"$proto\"";
    }
    push(@out1,[$n+1,@out]);
    return @out1;
}


sub make_core_trampoline {
    my ($call, $pkg, $proto_str) = @_;
    my $trampoline_code = 'sub {';
    my $trampoline_sub;
    my @protos = fill_protos($proto_str);

    foreach my $proto (@protos) {
        local $" = ", ";    # So @args is formatted correctly.
        my ($count, @args) = @$proto;
        if (@args && $args[-1] =~ m/[@#]_/) {
            $trampoline_code .= qq/
                if (\@_ >= $count) {
                    return $call(@args);
                }
             /;
        } else {
            $trampoline_code .= qq<
                if (\@_ == $count) {
                    return $call(@args);
                }
             >;
        }
    }

    $trampoline_code .= qq< require Carp; Carp::croak("Internal error in Fatal/autodie.  Leak-guard failure"); } >;
    my $E;

    {
        local $@;
        $trampoline_sub = eval "package $pkg;\n $trampoline_code"; ## no critic
        $E = $@;
    }
    die "Internal error in Fatal/autodie: Leak-guard installation failure: $E"
        if $E;

    return $trampoline_sub;
}

# The code here is originally lifted from namespace::clean,
# by Robert "phaylon" Sedlacek.
#
# It's been redesigned after feedback from ikegami on perlmonks.
# See http://perlmonks.org/?node_id=693338 .  Ikegami rocks.
#
# Given a package, and hash of (subname => subref) pairs,
# we install the given subroutines into the package.  If
# a subref is undef, the subroutine is removed.  Otherwise
# it replaces any existing subs which were already there.

sub install_subs {
    my ($target_pkg, $subs_to_reinstate) = @_;

    my $pkg_sym = "${target_pkg}::";

    # It does not hurt to do this in a predictable order, and might help debugging.
    foreach my $sub_name (sort keys(%{$subs_to_reinstate})) {

        # We will repeatedly mess with stuff that strict "refs" does
        # not like.  So lets just disable it once for this entire
        # scope.
        no strict qw(refs);   ## no critic

        my $sub_ref = $subs_to_reinstate->{$sub_name};

        my $full_path = ${pkg_sym}.${sub_name};
        my $oldglob = *$full_path;

        # Nuke the old glob.
        delete($pkg_sym->{$sub_name});

        # For some reason this local *alias = *$full_path triggers an
        # "only used once" warning.  Not entirely sure why, but at
        # least it is easy to silence.
        no warnings qw(once);
        local *alias = *$full_path;
        use warnings qw(once);

        # Copy innocent bystanders back.  Note that we lose
        # formats; it seems that Perl versions up to 5.10.0
        # have a bug which causes copying formats to end up in
        # the scalar slot.  Thanks to Ben Morrow for spotting this.

        foreach my $slot (qw( SCALAR ARRAY HASH IO ) ) {
            next unless defined(*$oldglob{$slot});
            *alias = *$oldglob{$slot};
        }

        if ($sub_ref) {
            *$full_path = $sub_ref;
        }
    }

    return;
}

1;

__END__

=head1 NAME

autodie::Util - Internal Utility subroutines for autodie and Fatal

=head1 SYNOPSIS

    # INTERNAL API for autodie and Fatal only!

    use autodie::Util qw(on_end_of_compile_scope);
    on_end_of_compile_scope(sub { print "Hallo world\n"; });

=head1 DESCRIPTION

Interal Utilities for autodie and Fatal!  This module is not a part of
autodie's public API.

This module contains utility subroutines for abstracting away the
underlying magic of autodie and (ab)uses of C<%^H> to call subs at the
end of a (compile-time) scopes.

Note that due to how C<%^H> works, some of these utilities are only
useful during the compilation phase of a perl module and relies on the
internals of how perl handles references in C<%^H>.

=head2 Methods

=head3 on_end_of_compile_scope

  on_end_of_compile_scope(sub { print "Hallo world\n"; });

Will invoke a sub at the end of a (compile-time) scope.  The sub is
called once with no arguments.  Can be called multiple times (even in
the same "compile-time" scope) to install multiple subs.  Subs are
called in a "first-in-last-out"-order (FILO or "stack"-order).

=head3 fill_protos

  fill_protos('*$$;$@')

Given a Perl subroutine prototype, return a list of invocation
specifications.  Each specification is a listref, where the first
member is the (minimum) number of arguments for this invocation
specification.  The remaining arguments are a string representation of
how to pass the arguments correctly to a sub with the given prototype,
when called with the given number of arguments.

The specifications are returned in increasing order of arguments
starting at 0 (e.g.  ';$') or 1 (e.g.  '$@').  Note that if the
prototype is "slurpy" (e.g. ends with a "@"), the number of arguments
for the last specification is a "minimum" number rather than an exact
number.  This can be detected by the last member of the last
specification matching m/[@#]_/.

=head3 make_core_trampoline

  make_core_trampoline('CORE::open', 'main', prototype('CORE::open'))

Creates a trampoline for calling a core sub.  Essentially, a tiny sub
that figures out how we should be calling our core sub, puts in the
arguments in the right way, and bounces our control over to it.

If we could reliably use `goto &` on core builtins, we wouldn't need
this subroutine.

=head3 install_subs

  install_subs('My::Module', { 'read' => sub { die("Hallo\n"), ... }})

Given a package name and a hashref mapping names to a subroutine
reference (or C<undef>), this subroutine will install said subroutines
on their given name in that module.  If a name mapes to C<undef>, any
subroutine with that name in the target module will be remove
(possibly "unshadowing" a CORE sub of same name).

=head1 AUTHOR

Copyright 2013-2014, Niels Thykier E<lt>niels@thykier.netE<gt>

=head1 LICENSE

This module is free software.  You may distribute it under the
same terms as Perl itself.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 package autodie::exception;
use 5.008;
use strict;
use warnings;
use Carp qw(croak);

our $VERSION = '2.29'; # VERSION: Generated by DZP::OurPkg:Version
# ABSTRACT: Exceptions from autodying functions.

our $DEBUG = 0;

use overload
    q{""} => "stringify",
    # Overload smart-match only if we're using 5.10 or up
    ($] >= 5.010 ? ('~~'  => "matches") : ()),
    fallback => 1
;

my $PACKAGE = __PACKAGE__;  # Useful to have a scalar for hash keys.

=head1 NAME

autodie::exception - Exceptions from autodying functions.

=head1 SYNOPSIS

    eval {
        use autodie;

        open(my $fh, '<', 'some_file.txt');

        ...
    };

    if (my $E = $@) {
        say "Ooops!  ",$E->caller," had problems: $@";
    }


=head1 DESCRIPTION

When an L<autodie> enabled function fails, it generates an
C<autodie::exception> object.  This can be interrogated to
determine further information about the error that occurred.

This document is broken into two sections; those methods that
are most useful to the end-developer, and those methods for
anyone wishing to subclass or get very familiar with
C<autodie::exception>.

=head2 Common Methods

These methods are intended to be used in the everyday dealing
of exceptions.

The following assume that the error has been copied into
a separate scalar:

    if ($E = $@) {
        ...
    }

This is not required, but is recommended in case any code
is called which may reset or alter C<$@>.

=cut

=head3 args

    my $array_ref = $E->args;

Provides a reference to the arguments passed to the subroutine
that died.

=cut

sub args        { return $_[0]->{$PACKAGE}{args}; }

=head3 function

    my $sub = $E->function;

The subroutine (including package) that threw the exception.

=cut

sub function   { return $_[0]->{$PACKAGE}{function};  }

=head3 file

    my $file = $E->file;

The file in which the error occurred (eg, C<myscript.pl> or
C<MyTest.pm>).

=cut

sub file        { return $_[0]->{$PACKAGE}{file};  }

=head3 package

    my $package = $E->package;

The package from which the exceptional subroutine was called.

=cut

sub package     { return $_[0]->{$PACKAGE}{package}; }

=head3 caller

    my $caller = $E->caller;

The subroutine that I<called> the exceptional code.

=cut

sub caller      { return $_[0]->{$PACKAGE}{caller};  }

=head3 line

    my $line = $E->line;

The line in C<< $E->file >> where the exceptional code was called.

=cut

sub line        { return $_[0]->{$PACKAGE}{line};  }

=head3 context

    my $context = $E->context;

The context in which the subroutine was called by autodie; usually
the same as the context in which you called the autodying subroutine.
This can be 'list', 'scalar', or undefined (unknown).  It will never
be 'void', as C<autodie> always captures the return value in one way
or another.

For some core functions that always return a scalar value regardless
of their context (eg, C<chown>), this may be 'scalar', even if you
used a list context.

=cut

# TODO: The comments above say this can be undefined. Is that actually
# the case? (With 'system', perhaps?)

sub context     { return $_[0]->{$PACKAGE}{context} }

=head3 return

    my $return_value = $E->return;

The value(s) returned by the failed subroutine.  When the subroutine
was called in a list context, this will always be a reference to an
array containing the results.  When the subroutine was called in
a scalar context, this will be the actual scalar returned.

=cut

sub return      { return $_[0]->{$PACKAGE}{return} }

=head3 errno

    my $errno = $E->errno;

The value of C<$!> at the time when the exception occurred.

B<NOTE>: This method will leave the main C<autodie::exception> class
and become part of a role in the future.  You should only call
C<errno> for exceptions where C<$!> would reasonably have been
set on failure.

=cut

# TODO: Make errno part of a role.  It doesn't make sense for
# everything.

sub errno       { return $_[0]->{$PACKAGE}{errno}; }

=head3 eval_error

    my $old_eval_error = $E->eval_error;

The contents of C<$@> immediately after autodie triggered an
exception.  This may be useful when dealing with modules such
as L<Text::Balanced> that set (but do not throw) C<$@> on error.

=cut

sub eval_error { return $_[0]->{$PACKAGE}{eval_error}; }

=head3 matches

    if ( $e->matches('open') ) { ... }

    if ( $e ~~ 'open' ) { ... }

C<matches> is used to determine whether a
given exception matches a particular role.  On Perl 5.10,
using smart-match (C<~~>) with an C<autodie::exception> object
will use C<matches> underneath.

An exception is considered to match a string if:

=over 4

=item *

For a string not starting with a colon, the string exactly matches the
package and subroutine that threw the exception.  For example,
C<MyModule::log>.  If the string does not contain a package name,
C<CORE::> is assumed.

=item *

For a string that does start with a colon, if the subroutine
throwing the exception I<does> that behaviour.  For example, the
C<CORE::open> subroutine does C<:file>, C<:io> and C<:all>.

See L<autodie/CATEGORIES> for further information.

=back

=cut

{
    my (%cache);

    sub matches {
        my ($this, $that) = @_;

        # TODO - Handle references
        croak "UNIMPLEMENTED" if ref $that;

        my $sub = $this->function;

        if ($DEBUG) {
            my $sub2 = $this->function;
            warn "Smart-matching $that against $sub / $sub2\n";
        }

        # Direct subname match.
        return 1 if $that eq $sub;
        return 1 if $that !~ /:/ and "CORE::$that" eq $sub;
        return 0 if $that !~ /^:/;

        # Cached match / check tags.
        require Fatal;

        if (exists $cache{$sub}{$that}) {
            return $cache{$sub}{$that};
        }

        # This rather awful looking line checks to see if our sub is in the
        # list of expanded tags, caches it, and returns the result.

        return $cache{$sub}{$that} = grep { $_ eq $sub } @{ $this->_expand_tag($that) };
    }
}

# This exists primarily so that child classes can override or
# augment it if they wish.

sub _expand_tag {
    my ($this, @args) = @_;

    return Fatal->_expand_tag(@args);
}

=head2 Advanced methods

The following methods, while usable from anywhere, are primarily
intended for developers wishing to subclass C<autodie::exception>,
write code that registers custom error messages, or otherwise
work closely with the C<autodie::exception> model.

=cut

# The table below records customer formatters.
# TODO - Should this be a package var instead?
# TODO - Should these be in a completely different file, or
#        perhaps loaded on demand?  Most formatters will never
#        get used in most programs.

my %formatter_of = (
    'CORE::close'    => \&_format_close,
    'CORE::open'     => \&_format_open,
    'CORE::dbmopen'  => \&_format_dbmopen,
    'CORE::flock'    => \&_format_flock,
    'CORE::read'     => \&_format_readwrite,
    'CORE::sysread'  => \&_format_readwrite,
    'CORE::syswrite' => \&_format_readwrite,
    'CORE::chmod'    => \&_format_chmod,
    'CORE::mkdir'    => \&_format_mkdir,
);

sub _beautify_arguments {
    shift @_;

    # Walk through all our arguments, and...
    #
    #   * Replace undef with the word 'undef'
    #   * Replace globs with the string '$fh'
    #   * Quote all other args.
    foreach my $arg (@_) {
       if    (not defined($arg))   { $arg = 'undef' }
       elsif (ref($arg) eq "GLOB") { $arg = '$fh'   }
       else                        { $arg = qq{'$arg'} }
    }

    return @_;
}

sub _trim_package_name {
    # Info: The following is done since 05/2008 (which is before v1.10)

    # TODO: This is probably a good idea for CORE, is it
    # a good idea for other subs?

    # Trim package name off dying sub for error messages
    (my $name = $_[1]) =~ s/.*:://;
    return $name;
}

# Returns the parameter formatted as octal number
sub _octalize_number {
    my $number = $_[1];

    # Only reformat if it looks like a whole number
    if ($number =~ /^\d+$/) {
        $number = sprintf("%#04lo", $number);
    }

    return $number;
}

# TODO: Our tests only check LOCK_EX | LOCK_NB is properly
# formatted.  Try other combinations and ensure they work
# correctly.

sub _format_flock {
    my ($this) = @_;

    require Fcntl;

    my $filehandle = $this->args->[0];
    my $raw_mode   = $this->args->[1];

    my $mode_type;
    my $lock_unlock;

    if ($raw_mode & Fcntl::LOCK_EX() ) {
        $lock_unlock = "lock";
        $mode_type = "for exclusive access";
    }
    elsif ($raw_mode & Fcntl::LOCK_SH() ) {
        $lock_unlock = "lock";
        $mode_type = "for shared access";
    }
    elsif ($raw_mode & Fcntl::LOCK_UN() ) {
        $lock_unlock = "unlock";
        $mode_type = "";
    }
    else {
        # I've got no idea what they're trying to do.
        $lock_unlock = "lock";
        $mode_type = "with mode $raw_mode";
    }

    my $cooked_filehandle;

    if ($filehandle and not ref $filehandle) {

        # A package filehandle with a name!

        $cooked_filehandle = " $filehandle";
    }
    else {
        # Otherwise we have a scalar filehandle.

        $cooked_filehandle = '';

    }

    local $! = $this->errno;

    return "Can't $lock_unlock filehandle$cooked_filehandle $mode_type: $!";

}

# Default formatter for CORE::chmod
sub _format_chmod {
    my ($this) = @_;
    my @args   = @{$this->args};

    my $mode   = shift @args;
    local $!   = $this->errno;

    $mode = $this->_octalize_number($mode);

    @args = $this->_beautify_arguments(@args);

    return "Can't chmod($mode, ". join(q{, }, @args) ."): $!";
}

# Default formatter for CORE::mkdir
sub _format_mkdir {
    my ($this) = @_;
    my @args   = @{$this->args};

    # If no mask is specified use default formatter
    if (@args < 2) {
      return $this->format_default;
    }

    my $file = $args[0];
    my $mask = $args[1];
    local $! = $this->errno;

    $mask = $this->_octalize_number($mask);

    return "Can't mkdir('$file', $mask): '$!'";
}

# Default formatter for CORE::dbmopen
sub _format_dbmopen {
    my ($this) = @_;
    my @args   = @{$this->args};

    # TODO: Presently, $args flattens out the (usually empty) hash
    # which is passed as the first argument to dbmopen.  This is
    # a bug in our args handling code (taking a reference to it would
    # be better), but for the moment we'll just examine the end of
    # our arguments list for message formatting.

    my $mode = $args[-1];
    my $file = $args[-2];

    $mode = $this->_octalize_number($mode);

    local $! = $this->errno;

    return "Can't dbmopen(%hash, '$file', $mode): '$!'";
}

# Default formatter for CORE::close

sub _format_close {
    my ($this) = @_;
    my $close_arg = $this->args->[0];

    local $! = $this->errno;

    # If we've got an old-style filehandle, mention it.
    if ($close_arg and not ref $close_arg) {
        return "Can't close filehandle '$close_arg': '$!'";
    }

    # TODO - This will probably produce an ugly error.  Test and fix.
    return "Can't close($close_arg) filehandle: '$!'";

}

# Default formatter for CORE::read, CORE::sysread and CORE::syswrite
#
# Similar to default formatter with the buffer filtered out as it
# may contain binary data.
sub _format_readwrite {
    my ($this) = @_;
    my $call = $this->_trim_package_name($this->function);
    local $! = $this->errno;

    # These subs receive the following arguments (in order):
    #
    # * FILEHANDLE
    # * SCALAR (buffer, we do not want to write this)
    # * LENGTH (optional for syswrite)
    # * OFFSET (optional for all)
    my (@args) = @{$this->args};
    my $arg_name = $args[1];
    if (defined($arg_name)) {
        if (ref($arg_name)) {
            my $name = blessed($arg_name) || ref($arg_name);
            $arg_name = "<${name}>";
        } else {
            $arg_name = '<BUFFER>';
        }
    } else {
        $arg_name = '<UNDEF>';
    }
    $args[1] = $arg_name;

    return "Can't $call(" . join(q{, }, @args) . "): $!";
}

# Default formatter for CORE::open

use constant _FORMAT_OPEN => "Can't open '%s' for %s: '%s'";

sub _format_open_with_mode {
    my ($this, $mode, $file, $error) = @_;

    my $wordy_mode;

    if    ($mode eq '<')  { $wordy_mode = 'reading';   }
    elsif ($mode eq '>')  { $wordy_mode = 'writing';   }
    elsif ($mode eq '>>') { $wordy_mode = 'appending'; }

    $file = '<undef>' if not defined $file;

    return sprintf _FORMAT_OPEN, $file, $wordy_mode, $error if $wordy_mode;

    Carp::confess("Internal autodie::exception error: Don't know how to format mode '$mode'.");

}

sub _format_open {
    my ($this) = @_;

    my @open_args = @{$this->args};

    # Use the default formatter for single-arg and many-arg open
    if (@open_args <= 1 or @open_args >= 4) {
        return $this->format_default;
    }

    # For two arg open, we have to extract the mode
    if (@open_args == 2) {
        my ($fh, $file) = @open_args;

        if (ref($fh) eq "GLOB") {
            $fh = '$fh';
        }

        my ($mode) = $file =~ m{
            ^\s*                # Spaces before mode
            (
                (?>             # Non-backtracking subexp.
                    <           # Reading
                    |>>?        # Writing/appending
                )
            )
            [^&]                # Not an ampersand (which means a dup)
        }x;

        if (not $mode) {
            # Maybe it's a 2-arg open without any mode at all?
            # Detect the most simple case for this, where our
            # file consists only of word characters.

            if ( $file =~ m{^\s*\w+\s*$} ) {
                $mode = '<'
            }
            else {
                # Otherwise, we've got no idea what's going on.
                # Use the default.
                return $this->format_default;
            }
        }

        # Localising $! means perl makes it a pretty error for us.
        local $! = $this->errno;

        return $this->_format_open_with_mode($mode, $file, $!);
    }

    # Here we must be using three arg open.

    my $file = $open_args[2];

    local $! = $this->errno;

    my $mode = $open_args[1];

    local $@;

    my $msg = eval { $this->_format_open_with_mode($mode, $file, $!); };

    return $msg if $msg;

    # Default message (for pipes and odd things)

    return "Can't open '$file' with mode '$open_args[1]': '$!'";
}

=head3 register

    autodie::exception->register( 'CORE::open' => \&mysub );

The C<register> method allows for the registration of a message
handler for a given subroutine.  The full subroutine name including
the package should be used.

Registered message handlers will receive the C<autodie::exception>
object as the first parameter.

=cut

sub register {
    my ($class, $symbol, $handler) = @_;

    croak "Incorrect call to autodie::register" if @_ != 3;

    $formatter_of{$symbol} = $handler;

}

=head3 add_file_and_line

    say "Problem occurred",$@->add_file_and_line;

Returns the string C< at %s line %d>, where C<%s> is replaced with
the filename, and C<%d> is replaced with the line number.

Primarily intended for use by format handlers.

=cut

# Simply produces the file and line number; intended to be added
# to the end of error messages.

sub add_file_and_line {
    my ($this) = @_;

    return sprintf(" at %s line %d\n", $this->file, $this->line);
}

=head3 stringify

    say "The error was: ",$@->stringify;

Formats the error as a human readable string.  Usually there's no
reason to call this directly, as it is used automatically if an
C<autodie::exception> object is ever used as a string.

Child classes can override this method to change how they're
stringified.

=cut

sub stringify {
    my ($this) = @_;

    my $call        =  $this->function;
    my $msg;

    if ($DEBUG) {
        my $dying_pkg   = $this->package;
        my $sub   = $this->function;
        my $caller = $this->caller;
        warn "Stringifing exception for $dying_pkg :: $sub / $caller / $call\n";
    }

    # TODO - This isn't using inheritance.  Should it?
    if ( my $sub = $formatter_of{$call} ) {
        $msg = $sub->($this) . $this->add_file_and_line;
    } else {
        $msg = $this->format_default . $this->add_file_and_line;
    }
    $msg .=  $this->{$PACKAGE}{_stack_trace}
        if $Carp::Verbose;

    return $msg;
}

=head3 format_default

    my $error_string = $E->format_default;

This produces the default error string for the given exception,
I<without using any registered message handlers>.  It is primarily
intended to be called from a message handler when they have
been passed an exception they don't want to format.

Child classes can override this method to change how default
messages are formatted.

=cut

# TODO: This produces ugly errors.  Is there any way we can
# dig around to find the actual variable names?  I know perl 5.10
# does some dark and terrible magicks to find them for undef warnings.

sub format_default {
    my ($this) = @_;

    my $call   =  $this->_trim_package_name($this->function);

    local $! = $this->errno;

    my @args = @{ $this->args() };
    @args = $this->_beautify_arguments(@args);

    # Format our beautiful error.

    return "Can't $call(".  join(q{, }, @args) . "): $!" ;

    # TODO - Handle user-defined errors from hash.

    # TODO - Handle default error messages.

}

=head3 new

    my $error = autodie::exception->new(
        args => \@_,
        function => "CORE::open",
        errno => $!,
        context => 'scalar',
        return => undef,
    );


Creates a new C<autodie::exception> object.  Normally called
directly from an autodying function.  The C<function> argument
is required, its the function we were trying to call that
generated the exception.  The C<args> parameter is optional.

The C<errno> value is optional.  In versions of C<autodie::exception>
1.99 and earlier the code would try to automatically use the
current value of C<$!>, but this was unreliable and is no longer
supported.

Atrributes such as package, file, and caller are determined
automatically, and cannot be specified.

=cut

sub new {
    my ($class, @args) = @_;

    my $this = {};

    bless($this,$class);

    # I'd love to use EVERY here, but it causes our code to die
    # because it wants to stringify our objects before they're
    # initialised, causing everything to explode.

    $this->_init(@args);

    return $this;
}

sub _init {

    my ($this, %args) = @_;

    # Capturing errno here is not necessarily reliable.
    my $original_errno = $!;

    our $init_called = 1;

    my $class = ref $this;

    # We're going to walk up our call stack, looking for the
    # first thing that doesn't look like our exception
    # code, autodie/Fatal, or some whacky eval.

    my ($package, $file, $line, $sub);

    my $depth = 0;

    while (1) {
        $depth++;

        ($package, $file, $line, $sub) = CORE::caller($depth);

        # Skip up the call stack until we find something outside
        # of the Fatal/autodie/eval space.

        next if $package->isa('Fatal');
        next if $package->isa($class);
        next if $package->isa(__PACKAGE__);

        # Anything with the 'autodie::skip' role wants us to skip it.
        # https://github.com/pjf/autodie/issues/15

        next if ($package->can('DOES') and $package->DOES('autodie::skip'));

        next if $file =~ /^\(eval\s\d+\)$/;

        last;

    }

    # We now have everything correct, *except* for our subroutine
    # name.  If it's __ANON__ or (eval), then we need to keep on
    # digging deeper into our stack to find the real name.  However we
    # don't update our other information, since that will be correct
    # for our current exception.

    my $first_guess_subroutine = $sub;

    while (defined $sub and $sub =~ /^\(eval\)$|::__ANON__$/) {
        $depth++;

        $sub = (CORE::caller($depth))[3];
    }

    # If we end up falling out the bottom of our stack, then our
    # __ANON__ guess is the best we can get.  This includes situations
    # where we were called from the top level of a program.

    if (not defined $sub) {
        $sub = $first_guess_subroutine;
    }

    $this->{$PACKAGE}{package} = $package;
    $this->{$PACKAGE}{file}    = $file;
    $this->{$PACKAGE}{line}    = $line;
    $this->{$PACKAGE}{caller}  = $sub;

    # Tranks to %Carp::CarpInternal all Fatal, autodie and
    # autodie::exception stack frames are filtered already, but our
    # nameless wrapper is still present, so strip that.

    my $trace = Carp::longmess();
    $trace =~ s/^\s*at \(eval[^\n]+\n//;

    # And if we see an __ANON__, then we'll replace that with the actual
    # name of our autodying function.

    my $short_func = $args{function};
    $short_func =~ s/^CORE:://;
    $trace =~ s/(\s*[\w:]+)__ANON__/$1$short_func/;

    # And now we just fill in all our attributes.

    $this->{$PACKAGE}{_stack_trace} = $trace;

    $this->{$PACKAGE}{errno}   = $args{errno} || 0;

    $this->{$PACKAGE}{context} = $args{context};
    $this->{$PACKAGE}{return}  = $args{return};
    $this->{$PACKAGE}{eval_error}  = $args{eval_error};

    $this->{$PACKAGE}{args}    = $args{args} || [];
    $this->{$PACKAGE}{function}= $args{function} or
              croak("$class->new() called without function arg");

    return $this;

}

1;

__END__

=head1 SEE ALSO

L<autodie>, L<autodie::exception::system>

=head1 LICENSE

Copyright (C)2008 Paul Fenwick

This is free software.  You may modify and/or redistribute this
code under the same terms as Perl 5.10 itself, or, at your option,
any later version of Perl 5.

=head1 AUTHOR

Paul Fenwick E<lt>pjf@perltraining.com.auE<gt>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        package autodie::hints;

use strict;
use warnings;

use constant PERL58 => ( $] < 5.009 );

our $VERSION = '2.29'; # VERSION: Generated by DZP::OurPkg:Version

# ABSTRACT: Provide hints about user subroutines to autodie

=head1 NAME

autodie::hints - Provide hints about user subroutines to autodie

=head1 SYNOPSIS

    package Your::Module;

    our %DOES = ( 'autodie::hints::provider' => 1 );

    sub AUTODIE_HINTS {
        return {
            foo => { scalar => HINTS, list => SOME_HINTS },
            bar => { scalar => HINTS, list => MORE_HINTS },
        }
    }

    # Later, in your main program...

    use Your::Module qw(foo bar);
    use autodie      qw(:default foo bar);

    foo();         # succeeds or dies based on scalar hints

    # Alternatively, hints can be set on subroutines we've
    # imported.

    use autodie::hints;
    use Some::Module qw(think_positive);

    BEGIN {
        autodie::hints->set_hints_for(
            \&think_positive,
            {
                fail => sub { $_[0] <= 0 }
            }
        )
    }
    use autodie qw(think_positive);

    think_positive(...);    # Returns positive or dies.


=head1 DESCRIPTION

=head2 Introduction

The L<autodie> pragma is very smart when it comes to working with
Perl's built-in functions.  The behaviour for these functions are
fixed, and C<autodie> knows exactly how they try to signal failure.

But what about user-defined subroutines from modules?  If you use
C<autodie> on a user-defined subroutine then it assumes the following
behaviour to demonstrate failure:

=over

=item *

A false value, in scalar context

=item * 

An empty list, in list context

=item *

A list containing a single undef, in list context

=back

All other return values (including the list of the single zero, and the
list containing a single empty string) are considered successful.  However,
real-world code isn't always that easy.  Perhaps the code you're working
with returns a string containing the word "FAIL" upon failure, or a
two element list containing C<(undef, "human error message")>.  To make
autodie work with these sorts of subroutines, we have
the I<hinting interface>.

The hinting interface allows I<hints> to be provided to C<autodie>
on how it should detect failure from user-defined subroutines.  While
these I<can> be provided by the end-user of C<autodie>, they are ideally
written into the module itself, or into a helper module or sub-class
of C<autodie> itself.

=head2 What are hints?

A I<hint> is a subroutine or value that is checked against the
return value of an autodying subroutine.  If the match returns true,
C<autodie> considers the subroutine to have failed.

If the hint provided is a subroutine, then C<autodie> will pass
the complete return value to that subroutine.  If the hint is
any other value, then C<autodie> will smart-match against the
value provided.  In Perl 5.8.x there is no smart-match operator, and as such
only subroutine hints are supported in these versions.

Hints can be provided for both scalar and list contexts.  Note
that an autodying subroutine will never see a void context, as
C<autodie> always needs to capture the return value for examination.
Autodying subroutines called in void context act as if they're called
in a scalar context, but their return value is discarded after it
has been checked.

=head2 Example hints

Hints may consist of scalars, array references, regular expressions and
subroutine references.  You can specify different hints for how
failure should be identified in scalar and list contexts.

These examples apply for use in the C<AUTODIE_HINTS> subroutine and when
calling C<autodie::hints->set_hints_for()>.

The most common context-specific hints are:

        # Scalar failures always return undef:
            {  scalar => undef  }

        # Scalar failures return any false value [default expectation]:
            {  scalar => sub { ! $_[0] }  }

        # Scalar failures always return zero explicitly:
            {  scalar => '0'  }

        # List failures always return an empty list:
            {  list => []  }

        # List failures return () or (undef) [default expectation]:
            {  list => sub { ! @_ || @_ == 1 && !defined $_[0] }  }

        # List failures return () or a single false value:
            {  list => sub { ! @_ || @_ == 1 && !$_[0] }  }

        # List failures return (undef, "some string")
            {  list => sub { @_ == 2 && !defined $_[0] }  }

        # Unsuccessful foo() returns 'FAIL' or '_FAIL' in scalar context,
        #                    returns (-1) in list context...
        autodie::hints->set_hints_for(
            \&foo,
            {
                scalar => qr/^ _? FAIL $/xms,
                list   => [-1],
            }
        );

        # Unsuccessful foo() returns 0 in all contexts...
        autodie::hints->set_hints_for(
            \&foo,
            {
                scalar => 0,
                list   => [0],
            }
        );

This "in all contexts" construction is very common, and can be
abbreviated, using the 'fail' key.  This sets both the C<scalar>
and C<list> hints to the same value:

        # Unsuccessful foo() returns 0 in all contexts...
        autodie::hints->set_hints_for(
            \&foo,
            {
                fail => sub { @_ == 1 and defined $_[0] and $_[0] == 0 }
            }
	);

        # Unsuccessful think_positive() returns negative number on failure...
        autodie::hints->set_hints_for(
            \&think_positive,
            {
                fail => sub { $_[0] < 0 }
            }
	);

        # Unsuccessful my_system() returns non-zero on failure...
        autodie::hints->set_hints_for(
            \&my_system,
            {
                fail => sub { $_[0] != 0 }
            }
	);

=head1 Manually setting hints from within your program

If you are using a module which returns something special on failure, then
you can manually create hints for each of the desired subroutines.  Once
the hints are specified, they are available for all files and modules loaded
thereafter, thus you can move this work into a module and it will still
work.

	use Some::Module qw(foo bar);
	use autodie::hints;

	autodie::hints->set_hints_for(
		\&foo,
		{
			scalar => SCALAR_HINT,
			list   => LIST_HINT,
		}
	);
	autodie::hints->set_hints_for(
		\&bar,
                { fail => SOME_HINT, }
	);

It is possible to pass either a subroutine reference (recommended) or a fully
qualified subroutine name as the first argument.  This means you can set hints
on modules that I<might> get loaded:

	use autodie::hints;
	autodie::hints->set_hints_for(
		'Some::Module:bar', { fail => SCALAR_HINT, }
	);

This technique is most useful when you have a project that uses a
lot of third-party modules.  You can define all your possible hints
in one-place.  This can even be in a sub-class of autodie.  For
example:

        package my::autodie;

        use parent qw(autodie);
        use autodie::hints;

        autodie::hints->set_hints_for(...);

        1;

You can now C<use my::autodie>, which will work just like the standard
C<autodie>, but is now aware of any hints that you've set.

=head1 Adding hints to your module

C<autodie> provides a passive interface to allow you to declare hints for
your module.  These hints will be found and used by C<autodie> if it
is loaded, but otherwise have no effect (or dependencies) without autodie.
To set these, your module needs to declare that it I<does> the
C<autodie::hints::provider> role.  This can be done by writing your
own C<DOES> method, using a system such as C<Class::DOES> to handle
the heavy-lifting for you, or declaring a C<%DOES> package variable
with a C<autodie::hints::provider> key and a corresponding true value.

Note that checking for a C<%DOES> hash is an C<autodie>-only
short-cut.  Other modules do not use this mechanism for checking
roles, although you can use the C<Class::DOES> module from the
CPAN to allow it.

In addition, you must define a C<AUTODIE_HINTS> subroutine that returns
a hash-reference containing the hints for your subroutines:

        package Your::Module;

        # We can use the Class::DOES from the CPAN to declare adherence
        # to a role.

        use Class::DOES 'autodie::hints::provider' => 1;

        # Alternatively, we can declare the role in %DOES.  Note that
        # this is an autodie specific optimisation, although Class::DOES
        # can be used to promote this to a true role declaration.

        our %DOES = ( 'autodie::hints::provider' => 1 );

        # Finally, we must define the hints themselves.

	sub AUTODIE_HINTS {
	    return {
	        foo => { scalar => HINTS, list => SOME_HINTS },
	        bar => { scalar => HINTS, list => MORE_HINTS },
	        baz => { fail => HINTS },
	    }
	}

This allows your code to set hints without relying on C<autodie> and
C<autodie::hints> being loaded, or even installed.  In this way your
code can do the right thing when C<autodie> is installed, but does not
need to depend upon it to function.

=head1 Insisting on hints

When a user-defined subroutine is wrapped by C<autodie>, it will
use hints if they are available, and otherwise reverts to the
I<default behaviour> described in the introduction of this document.
This can be problematic if we expect a hint to exist, but (for
whatever reason) it has not been loaded.

We can ask autodie to I<insist> that a hint be used by prefixing
an exclamation mark to the start of the subroutine name.  A lone
exclamation mark indicates that I<all> subroutines after it must
have hints declared.

	# foo() and bar() must have their hints defined
	use autodie qw( !foo !bar baz );

	# Everything must have hints (recommended).
	use autodie qw( ! foo bar baz );

	# bar() and baz() must have their hints defined
	use autodie qw( foo ! bar baz );

        # Enable autodie for all of Perl's supported built-ins,
        # as well as for foo(), bar() and baz().  Everything must
        # have hints.
        use autodie qw( ! :all foo bar baz );

If hints are not available for the specified subroutines, this will cause a
compile-time error.  Insisting on hints for Perl's built-in functions
(eg, C<open> and C<close>) is always successful.

Insisting on hints is I<strongly> recommended.

=cut

# TODO: implement regular expression hints

use constant UNDEF_ONLY       => sub { not defined $_[0] };
use constant EMPTY_OR_UNDEF   => sub {
    ! @_ or
    @_==1 && !defined $_[0]
};

use constant EMPTY_ONLY     => sub { @_ == 0 };
use constant EMPTY_OR_FALSE => sub {
    ! @_ or
    @_==1 && !$_[0]
};

use constant SINGLE_TRUE => sub { @_ == 1 and not $_[0] };

use constant DEFAULT_HINTS => {
    scalar => UNDEF_ONLY,
    list   => EMPTY_OR_UNDEF,
};


use constant HINTS_PROVIDER => 'autodie::hints::provider';

our $DEBUG = 0;

# Only ( undef ) is a strange but possible situation for very
# badly written code.  It's not supported yet.

my %Hints = (
    'File::Copy::copy' => { scalar => SINGLE_TRUE, list => SINGLE_TRUE },
    'File::Copy::move' => { scalar => SINGLE_TRUE, list => SINGLE_TRUE },
    'File::Copy::cp'   => { scalar => SINGLE_TRUE, list => SINGLE_TRUE },
    'File::Copy::mv'   => { scalar => SINGLE_TRUE, list => SINGLE_TRUE },
);

# Start by using Sub::Identify if it exists on this system.

eval { require Sub::Identify; Sub::Identify->import('get_code_info'); };

# If it doesn't exist, we'll define our own.  This code is directly
# taken from Rafael Garcia's Sub::Identify 0.04, used under the same
# license as Perl itself.

if ($@) {
    require B;

    no warnings 'once';

    *get_code_info = sub ($) {

        my ($coderef) = @_;
        ref $coderef or return;
        my $cv = B::svref_2object($coderef);
        $cv->isa('B::CV') or return;
        # bail out if GV is undefined
        $cv->GV->isa('B::SPECIAL') and return;

        return ($cv->GV->STASH->NAME, $cv->GV->NAME);
    };

}

sub sub_fullname {
    return join( '::', get_code_info( $_[1] ) );
}

my %Hints_loaded = ();

sub load_hints {
    my ($class, $sub) = @_;

    my ($package) = ( $sub =~ /(.*)::/ );

    if (not defined $package) {
        require Carp;
        Carp::croak(
            "Internal error in autodie::hints::load_hints - no package found.
        ");
    }

    # Do nothing if we've already tried to load hints for
    # this package.
    return if $Hints_loaded{$package}++;

    my $hints_available = 0;

    {
        no strict 'refs';   ## no critic

        if ($package->can('DOES') and $package->DOES(HINTS_PROVIDER) ) {
            $hints_available = 1;
        }
        elsif ( PERL58 and $package->isa(HINTS_PROVIDER) ) {
            $hints_available = 1;
        }
        elsif ( ${"${package}::DOES"}{HINTS_PROVIDER.""} ) {
            $hints_available = 1;
        }
    }

    return if not $hints_available;

    my %package_hints = %{ $package->AUTODIE_HINTS };

    foreach my $sub (keys %package_hints) {

        my $hint = $package_hints{$sub};

        # Ensure we have a package name.
        $sub = "${package}::$sub" if $sub !~ /::/;

        # TODO - Currently we don't check for conflicts, should we?
        $Hints{$sub} = $hint;

        $class->normalise_hints(\%Hints, $sub);
    }

    return;

}

sub normalise_hints {
    my ($class, $hints, $sub) = @_;

    if ( exists $hints->{$sub}->{fail} ) {

        if ( exists $hints->{$sub}->{scalar} or
             exists $hints->{$sub}->{list}
        ) {
            # TODO: Turn into a proper diagnostic.
            require Carp;
            local $Carp::CarpLevel = 1;
            Carp::croak("fail hints cannot be provided with either scalar or list hints for $sub");
        }

        # Set our scalar and list hints.

        $hints->{$sub}->{scalar} = 
        $hints->{$sub}->{list} = delete $hints->{$sub}->{fail};

        return;

    }

    # Check to make sure all our hints exist.

    foreach my $hint (qw(scalar list)) {
        if ( not exists $hints->{$sub}->{$hint} ) {
            # TODO: Turn into a proper diagnostic.
            require Carp;
            local $Carp::CarpLevel = 1;
            Carp::croak("$hint hint missing for $sub");
        }
    }

    return;
}

sub get_hints_for {
    my ($class, $sub) = @_;

    my $subname = $class->sub_fullname( $sub );

    # If we have hints loaded for a sub, then return them.

    if ( exists $Hints{ $subname } ) {
        return $Hints{ $subname };
    }

    # If not, we try to load them...

    $class->load_hints( $subname );

    # ...and try again!

    if ( exists $Hints{ $subname } ) {
        return $Hints{ $subname };
    }

    # It's the caller's responsibility to use defaults if desired.
    # This allows on autodie to insist on hints if needed.

    return;

}

sub set_hints_for {
    my ($class, $sub, $hints) = @_;

    if (ref $sub) {
        $sub = $class->sub_fullname( $sub );

        require Carp;

        $sub or Carp::croak("Attempts to set_hints_for unidentifiable subroutine");
    }

    if ($DEBUG) {
        warn "autodie::hints: Setting $sub to hints: $hints\n";
    }

    $Hints{ $sub } = $hints;

    $class->normalise_hints(\%Hints, $sub);

    return;
}

1;

__END__


=head1 Diagnostics

=over 4

=item Attempts to set_hints_for unidentifiable subroutine

You've called C<< autodie::hints->set_hints_for() >> using a subroutine
reference, but that reference could not be resolved back to a
subroutine name.  It may be an anonymous subroutine (which can't
be made autodying), or may lack a name for other reasons.

If you receive this error with a subroutine that has a real name,
then you may have found a bug in autodie.  See L<autodie/BUGS>
for how to report this.

=item fail hints cannot be provided with either scalar or list hints for %s

When defining hints, you can either supply both C<list> and
C<scalar> keywords, I<or> you can provide a single C<fail> keyword.
You can't mix and match them.

=item %s hint missing for %s

You've provided either a C<scalar> hint without supplying
a C<list> hint, or vice-versa.  You I<must> supply both C<scalar>
and C<list> hints, I<or> a single C<fail> hint.

=back

=head1 ACKNOWLEDGEMENTS

=over 

=item *

Dr Damian Conway for suggesting the hinting interface and providing the
example usage.

=item *

Jacinta Richardson for translating much of my ideas into this
documentation.

=back

=head1 AUTHOR

Copyright 2009, Paul Fenwick E<lt>pjf@perltraining.com.auE<gt>

=head1 LICENSE

This module is free software.  You may distribute it under the
same terms as Perl itself.

=head1 SEE ALSO

L<autodie>, L<Class::DOES>

=for Pod::Coverage get_hints_for load_hints normalise_hints sub_fullname get_code_info

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  package autodie::skip;
use strict;
use warnings;

our $VERSION = '2.29'; # VERSION

# This package exists purely so people can inherit from it,
# which isn't at all how roles are supposed to work, but it's
# how people will use them anyway.

if ($] < 5.010) {
    # Older Perls don't have a native ->DOES.  Let's provide a cheap
    # imitation here.

    *DOES = sub { return shift->isa(@_); };
}

1;

__END__

=head1 NAME

autodie::skip - Skip a package when throwing autodie exceptions

=head1 SYNPOSIS

    use parent qw(autodie::skip);

=head1 DESCRIPTION

This dummy class exists to signal that the class inheriting it should
be skipped when reporting exceptions from autodie.  This is useful
for utility classes like L<Path::Tiny> that wish to report the location
of where they were called on failure.

If your class has a better way of doing roles, then you should not
load this class and instead simply say that your class I<DOES>
C<autodie::skip> instead.

=head1 AUTHOR

Copyright 2013, Paul Fenwick <pjf@cpan.org>

=head1 LICENSE

This module is free software. You may distribute it under the same
terms as Perl itself.

=head1 SEE ALSO

L<autodie>, L<autodie::exception>

=for Pod::Coverage DOES

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 package autodie::Scope::Guard;

use strict;
use warnings;

# ABSTRACT: Wrapper class for calling subs at end of scope
our $VERSION = '2.29'; # VERSION

# This code schedules the cleanup of subroutines at the end of
# scope.  It's directly inspired by chocolateboy's excellent
# Scope::Guard module.

sub new {
    my ($class, $handler) = @_;
    return bless($handler, $class);
}

sub DESTROY {
    my ($self) = @_;

    $self->();
}

1;

__END__

=head1 NAME

autodie::Scope::Guard - Wrapper class for calling subs at end of scope

=head1 SYNOPSIS

    use autodie::Scope::Guard;
    $^H{'my-key'} = autodie::Scope::Guard->new(sub {
        print "Hallo world\n";
    });

=head1 DESCRIPTION

This class is used to bless perl subs so that they are invoked when
they are destroyed.  This is mostly useful for ensuring the code is
invoked at end of scope.  This module is not a part of autodie's
public API.

This module is directly inspired by chocolateboy's excellent
Scope::Guard module.

=head2 Methods

=head3 new

  my $hook = autodie::Scope::Guard->new(sub {});

Creates a new C<autodie::Scope::Guard>, which will invoke the given
sub once it goes out of scope (i.e. its DESTROY handler is called).

=head1 AUTHOR

Copyright 2008-2009, Paul Fenwick E<lt>pjf@perltraining.com.auE<gt>

=head1 LICENSE

This module is free software.  You may distribute it under the
same terms as Perl itself.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            package autodie::Scope::GuardStack;

use strict;
use warnings;

use autodie::Scope::Guard;

# ABSTRACT: Hook stack for managing scopes via %^H
our $VERSION = '2.29'; # VERSION

my $H_KEY_STEM = __PACKAGE__ . '/guard';
my $COUNTER = 0;

# This code schedules the cleanup of subroutines at the end of
# scope.  It's directly inspired by chocolateboy's excellent
# Scope::Guard module.

sub new {
    my ($class) = @_;

    return bless([], $class);
}

sub push_hook {
    my ($self, $hook) = @_;
    my $h_key = $H_KEY_STEM . ($COUNTER++);
    my $size = @{$self};
    $^H{$h_key} = autodie::Scope::Guard->new(sub {
        # Pop the stack until we reach the right size
        # - this may seem weird, but it is to avoid relying
        #   on "destruction order" of keys in %^H.
        #
        # Example:
        #  {
        #     use autodie;  # hook 1
        #     no autodie;   # hook 2
        #     use autodie;  # hook 3
        #  }
        #
        #  Here we want call hook 3, then hook 2 and finally hook 1.
        #  Any other order could have undesired consequences.
        #
        #  Suppose hook 2 is destroyed first, it will pop hook 3 and
        #  then hook 2.  hook 3 will then be destroyed, but do nothing
        #  since its "frame" was already popped and finally hook 1
        #  will be popped and take its own frame with it.
        #
        #  We need to check that $self still exists since things can get weird
        #  during global destruction.
        $self->_pop_hook while $self && @{$self} > $size;
    });
    push(@{$self}, [$hook, $h_key]);
    return;
}

sub _pop_hook {
    my ($self) = @_;
    my ($hook, $key) = @{ pop(@{$self}) };
    my $ref = delete($^H{$key});
    $hook->();
    return;
}

sub DESTROY {
    my ($self) = @_;

    # To be honest, I suspect @{$self} will always be empty here due
    # to the subs in %^H having references to the stack (which would
    # keep the stack alive until those have been destroyed).  Anyhow,
    # it never hurt to be careful.
    $self->_pop_hook while @{$self};
    return;
}

1;

__END__

=head1 NAME

autodie::Scope::GuardStack -  Hook stack for managing scopes via %^H

=head1 SYNOPSIS

    use autodie::Scope::GuardStack;
    my $stack = autodie::Scope::GuardStack->new
    $^H{'my-key'} = $stack;

    $stack->push_hook(sub {});

=head1 DESCRIPTION

This class is a stack of hooks to be called in the right order as
scopes go away.  The stack is only useful when inserted into C<%^H>
and will pop hooks as their "scope" is popped.  This is useful for
uninstalling or reinstalling subs in a namespace as a pragma goes
out of scope.

Due to how C<%^H> works, this class is only useful during the
compilation phase of a perl module and relies on the internals of how
perl handles references in C<%^H>.  This module is not a part of
autodie's public API.

=head2 Methods

=head3 new

  my $stack = autodie::Scope::GuardStack->new;

Creates a new C<autodie::Scope::GuardStack>.  The stack is initially
empty and must be inserted into C<%^H> by the creator.

=head3 push_hook

  $stack->push_hook(sub {});

Add a sub to the stack.  The sub will be called once the current
compile-time "scope" is left.  Multiple hooks can be added per scope

=head1 AUTHOR

Copyright 2013, Niels Thykier E<lt>niels@thykier.netE<gt>

=head1 LICENSE

This module is free software.  You may distribute it under the
same terms as Perl itself.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                package autodie::exception::system;
use 5.008;
use strict;
use warnings;
use parent 'autodie::exception';
use Carp qw(croak);

our $VERSION = '2.29'; # VERSION: Generated by DZP::OurPkg:Version

# ABSTRACT: Exceptions from autodying system().

my $PACKAGE = __PACKAGE__;

=head1 NAME

autodie::exception::system - Exceptions from autodying system().

=head1 SYNOPSIS

    eval {
        use autodie qw(system);

        system($cmd, @args);

    };

    if (my $E = $@) {
        say "Ooops!  ",$E->caller," had problems: $@";
    }


=head1 DESCRIPTION

This is a L<autodie::exception> class for failures from the
C<system> command.

Presently there is no way to interrogate an C<autodie::exception::system>
object for the command, exit status, and other information you'd expect
such an object to hold.  The interface will be expanded to accommodate
this in the future.

=cut

sub _init {
    my ($this, %args) = @_;

    $this->{$PACKAGE}{message} = $args{message}
        || croak "'message' arg not supplied to autodie::exception::system->new";

    return $this->SUPER::_init(%args);

}

=head2 stringify

When stringified, C<autodie::exception::system> objects currently
use the message generated by L<IPC::System::Simple>.

=cut

sub stringify {

    my ($this) = @_;

    return $this->{$PACKAGE}{message} . $this->add_file_and_line;

}

1;

__END__

=head1 LICENSE

Copyright (C)2008 Paul Fenwick

This is free software.  You may modify and/or redistribute this
code under the same terms as Perl 5.10 itself, or, at your option,
any later version of Perl 5.

=head1 AUTHOR

Paul Fenwick E<lt>pjf@perltraining.com.auE<gt>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 # -*- buffer-read-only: t -*-
#
#    lib/overload/numbers.pm
#
#    Copyright (C) 2008 by Larry Wall and others
#
#    You may distribute under the terms of either the GNU General Public
#    License or the Artistic License, as specified in the README file.
#
# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is built by regen/overload.pl.
# Any changes made here will be lost!

package overload::numbers;

our @names = qw#
    ()
    (${}
    (@{}
    (%{}
    (*{}
    (&{}
    (++
    (--
    (bool
    (0+
    (""
    (!
    (=
    (abs
    (neg
    (<>
    (int
    (<
    (<=
    (>
    (>=
    (==
    (!=
    (lt
    (le
    (gt
    (ge
    (eq
    (ne
    (nomethod
    (+
    (+=
    (-
    (-=
    (*
    (*=
    (/
    (/=
    (%
    (%=
    (**
    (**=
    (<<
    (<<=
    (>>
    (>>=
    (&
    (&=
    (&.
    (&.=
    (|
    (|=
    (|.
    (|.=
    (^
    (^=
    (^.
    (^.=
    (<=>
    (cmp
    (~
    (~.
    (atan2
    (cos
    (sin
    (exp
    (log
    (sqrt
    (x
    (x=
    (.
    (.=
    (~~
    (-X
    (qr
#;

our @enums = qw#
    fallback
    to_sv
    to_av
    to_hv
    to_gv
    to_cv
    inc
    dec
    bool_
    numer
    string
    not
    copy
    abs
    neg
    iter
    int
    lt
    le
    gt
    ge
    eq
    ne
    slt
    sle
    sgt
    sge
    seq
    sne
    nomethod
    add
    add_ass
    subtr
    subtr_ass
    mult
    mult_ass
    div
    div_ass
    modulo
    modulo_ass
    pow
    pow_ass
    lshift
    lshift_ass
    rshift
    rshift_ass
    band
    band_ass
    sband
    sband_ass
    bor
    bor_ass
    sbor
    sbor_ass
    bxor
    bxor_ass
    sbxor
    sbxor_ass
    ncmp
    scmp
    compl
    scompl
    atan2
    cos
    sin
    exp
    log
    sqrt
    repeat
    repeat_ass
    concat
    concat_ass
    smart
    ftest
    regexp
#;

{ my $i = 0; our %names = map { $_ => $i++ } @names }

{ my $i = 0; our %enums = map { $_ => $i++ } @enums }

# ex: set ro:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 package encoding::warnings;
$encoding::warnings::VERSION = '0.12';

use strict;
use 5.007;

=head1 NAME

encoding::warnings - Warn on implicit encoding conversions

=head1 VERSION

This document describes version 0.11 of encoding::warnings, released
June 5, 2007.

=head1 SYNOPSIS

    use encoding::warnings; # or 'FATAL' to raise fatal exceptions

    utf8::encode($a = chr(20000));  # a byte-string (raw bytes)
    $b = chr(20000);		    # a unicode-string (wide characters)

    # "Bytes implicitly upgraded into wide characters as iso-8859-1"
    $c = $a . $b;

=head1 DESCRIPTION

=head2 Overview of the problem

By default, there is a fundamental asymmetry in Perl's unicode model:
implicit upgrading from byte-strings to unicode-strings assumes that
they were encoded in I<ISO 8859-1 (Latin-1)>, but unicode-strings are
downgraded with UTF-8 encoding.  This happens because the first 256
codepoints in Unicode happens to agree with Latin-1.  

However, this silent upgrading can easily cause problems, if you happen
to mix unicode strings with non-Latin1 data -- i.e. byte-strings encoded
in UTF-8 or other encodings.  The error will not manifest until the
combined string is written to output, at which time it would be impossible
to see where did the silent upgrading occur.

=head2 Detecting the problem

This module simplifies the process of diagnosing such problems.  Just put
this line on top of your main program:

    use encoding::warnings;

Afterwards, implicit upgrading of high-bit bytes will raise a warning.
Ex.: C<Bytes implicitly upgraded into wide characters as iso-8859-1 at
- line 7>.

However, strings composed purely of ASCII code points (C<0x00>..C<0x7F>)
will I<not> trigger this warning.

You can also make the warnings fatal by importing this module as:

    use encoding::warnings 'FATAL';

=head2 Solving the problem

Most of the time, this warning occurs when a byte-string is concatenated
with a unicode-string.  There are a number of ways to solve it:

=over 4

=item * Upgrade both sides to unicode-strings

If your program does not need compatibility for Perl 5.6 and earlier,
the recommended approach is to apply appropriate IO disciplines, so all
data in your program become unicode-strings.  See L<encoding>, L<open> and
L<perlfunc/binmode> for how.

=item * Downgrade both sides to byte-strings

The other way works too, especially if you are sure that all your data
are under the same encoding, or if compatibility with older versions
of Perl is desired.

You may downgrade strings with C<Encode::encode> and C<utf8::encode>.
See L<Encode> and L<utf8> for details.

=item * Specify the encoding for implicit byte-string upgrading

If you are confident that all byte-strings will be in a specific
encoding like UTF-8, I<and> need not support older versions of Perl,
use the C<encoding> pragma:

    use encoding 'utf8';

Similarly, this will silence warnings from this module, and preserve the
default behaviour:

    use encoding 'iso-8859-1';

However, note that C<use encoding> actually had three distinct effects:

=over 4

=item * PerlIO layers for B<STDIN> and B<STDOUT>

This is similar to what L<open> pragma does.

=item * Literal conversions

This turns I<all> literal string in your program into unicode-strings
(equivalent to a C<use utf8>), by decoding them using the specified
encoding.

=item * Implicit upgrading for byte-strings

This will silence warnings from this module, as shown above.

=back

Because literal conversions also work on empty strings, it may surprise
some people:

    use encoding 'big5';

    my $byte_string = pack("C*", 0xA4, 0x40);
    print length $a;	# 2 here.
    $a .= "";		# concatenating with a unicode string...
    print length $a;	# 1 here!

In other words, do not C<use encoding> unless you are certain that the
program will not deal with any raw, 8-bit binary data at all.

However, the C<Filter =E<gt> 1> flavor of C<use encoding> will I<not>
affect implicit upgrading for byte-strings, and is thus incapable of
silencing warnings from this module.  See L<encoding> for more details.

=back

=head1 CAVEATS

For Perl 5.9.4 or later, this module's effect is lexical.

For Perl versions prior to 5.9.4, this module affects the whole script,
instead of inside its lexical block.

=cut

# Constants.
sub ASCII  () { 0 }
sub LATIN1 () { 1 }
sub FATAL  () { 2 }

# Install a ${^ENCODING} handler if no other one are already in place.
sub import {
    my $class = shift;
    my $fatal = shift || '';

    local $@;
    return if ${^ENCODING} and ref(${^ENCODING}) ne $class;
    return unless eval { require Encode; 1 };

    my $ascii  = Encode::find_encoding('us-ascii') or return;
    my $latin1 = Encode::find_encoding('iso-8859-1') or return;

    # Have to undef explicitly here
    undef ${^ENCODING};

    # Install a warning handler for decode()
    my $decoder = bless(
	[
	    $ascii,
	    $latin1,
	    (($fatal eq 'FATAL') ? 'Carp::croak' : 'Carp::carp'),
	], $class,
    );

    no warnings 'deprecated';
    ${^ENCODING} = $decoder;
    use warnings 'deprecated';
    $^H{$class} = 1;
}

sub unimport {
    my $class = shift;
    $^H{$class} = undef;
    undef ${^ENCODING};
}

# Don't worry about source code literals.
sub cat_decode {
    my $self = shift;
    return $self->[LATIN1]->cat_decode(@_);
}

# Warn if the data is not purely US-ASCII.
sub decode {
    my $self = shift;

    DO_WARN: {
        if ($] >= 5.009004) {
            my $hints = (caller(0))[10];
            $hints->{ref($self)} or last DO_WARN;
        }

        local $@;
        my $rv = eval { $self->[ASCII]->decode($_[0], Encode::FB_CROAK()) };
        return $rv unless $@;

        require Carp;
        no strict 'refs';
        $self->[FATAL]->(
            "Bytes implicitly upgraded into wide characters as iso-8859-1"
        );

    }

    return $self->[LATIN1]->decode(@_);
}

sub name { 'iso-8859-1' }

1;

__END__

=head1 SEE ALSO

L<perlunicode>, L<perluniintro>

L<open>, L<utf8>, L<encoding>, L<Encode>

=head1 AUTHORS

Audrey Tang

=head1 COPYRIGHT

Copyright 2004, 2005, 2006, 2007 by Audrey Tang E<lt>cpan@audreyt.orgE<gt>.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

See L<http://www.perl.com/perl/misc/Artistic.html>

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       =head1 NAME

perldiag - various Perl diagnostics

=head1 DESCRIPTION

These messages are classified as follows (listed in increasing order of
desperation):

    (W) A warning (optional).
    (D) A deprecation (enabled by default).
    (S) A severe warning (enabled by default).
    (F) A fatal error (trappable).
    (P) An internal error you should never see (trappable).
    (X) A very fatal error (nontrappable).
    (A) An alien error message (not generated by Perl).

The majority of messages from the first three classifications above
(W, D & S) can be controlled using the C<warnings> pragma.

If a message can be controlled by the C<warnings> pragma, its warning
category is included with the classification letter in the description
below.  E.g. C<(W closed)> means a warning in the C<closed> category.

Optional warnings are enabled by using the C<warnings> pragma or the B<-w>
and B<-W> switches.  Warnings may be captured by setting C<$SIG{__WARN__}>
to a reference to a routine that will be called on each warning instead
of printing it.  See L<perlvar>.

Severe warnings are always enabled, unless they are explicitly disabled
with the C<warnings> pragma or the B<-X> switch.

Trappable errors may be trapped using the eval operator.  See
L<perlfunc/eval>.  In almost all cases, warnings may be selectively
disabled or promoted to fatal errors using the C<warnings> pragma.
See L<warnings>.

The messages are in alphabetical order, without regard to upper or
lower-case.  Some of these messages are generic.  Spots that vary are
denoted with a %s or other printf-style escape.  These escapes are
ignored by the alphabetical order, as are all characters other than
letters.  To look up your message, just ignore anything that is not a
letter.

=over 4

=item accept() on closed socket %s

(W closed) You tried to do an accept on a closed socket.  Did you forget
to check the return value of your socket() call?  See
L<perlfunc/accept>.

=item Aliasing via reference is experimental

(S experimental::refaliasing) This warning is emitted if you use
a reference constructor on the left-hand side of an assignment to
alias one variable to another.  Simply suppress the warning if you
want to use the feature, but know that in doing so you are taking
the risk of using an experimental feature which may change or be
removed in a future Perl version:

    no warnings "experimental::refaliasing";
    use feature "refaliasing";
    \$x = \$y;

=item Allocation too large: %x

(X) You can't allocate more than 64K on an MS-DOS machine.

=item '%c' allowed only after types %s in %s

(F) The modifiers '!', '<' and '>' are allowed in pack() or unpack() only
after certain types.  See L<perlfunc/pack>.

=item alpha->numify() is lossy

(W numeric) An alpha version can not be numified without losing
information.

=item Ambiguous call resolved as CORE::%s(), qualify as such or use &

(W ambiguous) A subroutine you have declared has the same name as a Perl
keyword, and you have used the name without qualification for calling
one or the other.  Perl decided to call the builtin because the
subroutine is not imported.

To force interpretation as a subroutine call, either put an ampersand
before the subroutine name, or qualify the name with its package.
Alternatively, you can import the subroutine (or pretend that it's
imported with the C<use subs> pragma).

To silently interpret it as the Perl operator, use the C<CORE::> prefix
on the operator (e.g. C<CORE::log($x)>) or declare the subroutine
to be an object method (see L<perlsub/"Subroutine Attributes"> or
L<attributes>).

=item Ambiguous range in transliteration operator

(F) You wrote something like C<tr/a-z-0//> which doesn't mean anything at
all.  To include a C<-> character in a transliteration, put it either
first or last.  (In the past, C<tr/a-z-0//> was synonymous with
C<tr/a-y//>, which was probably not what you would have expected.)

=item Ambiguous use of %s resolved as %s

(S ambiguous) You said something that may not be interpreted the way
you thought.  Normally it's pretty easy to disambiguate it by supplying
a missing quote, operator, parenthesis pair or declaration.

=item Ambiguous use of -%s resolved as -&%s()

(S ambiguous) You wrote something like C<-foo>, which might be the
string C<"-foo">, or a call to the function C<foo>, negated.  If you meant
the string, just write C<"-foo">.  If you meant the function call,
write C<-foo()>.

=item Ambiguous use of %c resolved as operator %c

(S ambiguous) C<%>, C<&>, and C<*> are both infix operators (modulus,
bitwise and, and multiplication) I<and> initial special characters
(denoting hashes, subroutines and typeglobs), and you said something
like C<*foo * foo> that might be interpreted as either of them.  We
assumed you meant the infix operator, but please try to make it more
clear -- in the example given, you might write C<*foo * foo()> if you
really meant to multiply a glob by the result of calling a function.

=item Ambiguous use of %c{%s} resolved to %c%s

(W ambiguous) You wrote something like C<@{foo}>, which might be
asking for the variable C<@foo>, or it might be calling a function
named foo, and dereferencing it as an array reference.  If you wanted
the variable, you can just write C<@foo>.  If you wanted to call the
function, write C<@{foo()}> ... or you could just not have a variable
and a function with the same name, and save yourself a lot of trouble.

=item Ambiguous use of %c{%s[...]} resolved to %c%s[...]

=item Ambiguous use of %c{%s{...}} resolved to %c%s{...}

(W ambiguous) You wrote something like C<${foo[2]}> (where foo represents
the name of a Perl keyword), which might be looking for element number
2 of the array named C<@foo>, in which case please write C<$foo[2]>, or you
might have meant to pass an anonymous arrayref to the function named
foo, and then do a scalar deref on the value it returns.  If you meant
that, write C<${foo([2])}>.

In regular expressions, the C<${foo[2]}> syntax is sometimes necessary
to disambiguate between array subscripts and character classes.
C</$length[2345]/>, for instance, will be interpreted as C<$length> followed
by the character class C<[2345]>.  If an array subscript is what you
want, you can avoid the warning by changing C</${length[2345]}/> to the
unsightly C</${\$length[2345]}/>, by renaming your array to something
that does not coincide with a built-in keyword, or by simply turning
off warnings with C<no warnings 'ambiguous';>.

=item '|' and '<' may not both be specified on command line

(F) An error peculiar to VMS.  Perl does its own command line
redirection, and found that STDIN was a pipe, and that you also tried to
redirect STDIN using '<'.  Only one STDIN stream to a customer, please.

=item '|' and '>' may not both be specified on command line

(F) An error peculiar to VMS.  Perl does its own command line
redirection, and thinks you tried to redirect stdout both to a file and
into a pipe to another command.  You need to choose one or the other,
though nothing's stopping you from piping into a program or Perl script
which 'splits' output into two streams, such as

    open(OUT,">$ARGV[0]") or die "Can't write to $ARGV[0]: $!";
    while (<STDIN>) {
        print;
        print OUT;
    }
    close OUT;

=item Applying %s to %s will act on scalar(%s)

(W misc) The pattern match (C<//>), substitution (C<s///>), and
transliteration (C<tr///>) operators work on scalar values.  If you apply
one of them to an array or a hash, it will convert the array or hash to
a scalar value (the length of an array, or the population info of a
hash) and then work on that scalar value.  This is probably not what
you meant to do.  See L<perlfunc/grep> and L<perlfunc/map> for
alternatives.

=item Arg too short for msgsnd

(F) msgsnd() requires a string at least as long as sizeof(long).

=item Argument "%s" isn't numeric%s

(W numeric) The indicated string was fed as an argument to an operator
that expected a numeric value instead.  If you're fortunate the message
will identify which operator was so unfortunate.

Note that for the C<Inf> and C<NaN> (infinity and not-a-number) the
definition of "numeric" is somewhat unusual: the strings themselves
(like "Inf") are considered numeric, and anything following them is
considered non-numeric.

=item Argument list not closed for PerlIO layer "%s"

(W layer) When pushing a layer with arguments onto the Perl I/O
system you forgot the ) that closes the argument list.  (Layers
take care of transforming data between external and internal
representations.)  Perl stopped parsing the layer list at this
point and did not attempt to push this layer.  If your program
didn't explicitly request the failing operation, it may be the
result of the value of the environment variable PERLIO.

=item Argument "%s" treated as 0 in increment (++)

(W numeric) The indicated string was fed as an argument to the C<++>
operator which expects either a number or a string matching
C</^[a-zA-Z]*[0-9]*\z/>.  See L<perlop/Auto-increment and
Auto-decrement> for details.

=item Array passed to stat will be coerced to a scalar%s

(W syntax) You called stat() on an array, but the array will be
coerced to a scalar - the number of elements in the array.

=item assertion botched: %s

(X) The malloc package that comes with Perl had an internal failure.

=item Assertion %s failed: file "%s", line %d

(X) A general assertion failed.  The file in question must be examined.

=item Assigned value is not a reference

(F) You tried to assign something that was not a reference to an lvalue
reference (e.g., C<\$x = $y>).  If you meant to make $x an alias to $y, use
C<\$x = \$y>.

=item Assigned value is not %s reference

(F) You tried to assign a reference to a reference constructor, but the
two references were not of the same type.  You cannot alias a scalar to
an array, or an array to a hash; the two types must match.

    \$x = \@y;  # error
    \@x = \%y;  # error
     $y = [];
    \$x = $y;   # error; did you mean \$y?

=item Assigning non-zero to $[ is no longer possible

(F) When the "array_base" feature is disabled (e.g., under C<use v5.16;>)
the special variable C<$[>, which is deprecated, is now a fixed zero value.

=item Assignment to both a list and a scalar

(F) If you assign to a conditional operator, the 2nd and 3rd arguments
must either both be scalars or both be lists.  Otherwise Perl won't
know which context to supply to the right side.

=item Assuming NOT a POSIX class since %s in regex; marked by S<<-- HERE> in m/%s/

(W regexp) You had something like these:

 [[:alnum]]
 [[:digit:xyz]

They look like they might have been meant to be the POSIX classes
C<[:alnum:]> or C<[:digit:]>.  If so, they should be written:

 [[:alnum:]]
 [[:digit:]xyz]

Since these aren't legal POSIX class specifications, but are legal
bracketed character classes, Perl treats them as the latter.  In the
first example, it matches the characters C<":">, C<"[">, C<"a">, C<"l">,
C<"m">, C<"n">, and C<"u">.

If these weren't meant to be POSIX classes, this warning message is
spurious, and can be suppressed by reordering things, such as

 [[al:num]]

or

 [[:munla]]

=item <> at require-statement should be quotes

(F) You wrote C<< require <file> >> when you should have written
C<require 'file'>.

=item Attempt to access disallowed key '%s' in a restricted hash

(F) The failing code has attempted to get or set a key which is not in
the current set of allowed keys of a restricted hash.

=item Attempt to bless into a freed package

(F) You wrote C<bless $foo> with one argument after somehow causing
the current package to be freed.  Perl cannot figure out what to
do, so it throws up in hands in despair.

=item Attempt to bless into a reference

(F) The CLASSNAME argument to the bless() operator is expected to be
the name of the package to bless the resulting object into.  You've
supplied instead a reference to something: perhaps you wrote

    bless $self, $proto;

when you intended

    bless $self, ref($proto) || $proto;

If you actually want to bless into the stringified version
of the reference supplied, you need to stringify it yourself, for
example by:

    bless $self, "$proto";

=item Attempt to clear deleted array

(S debugging) An array was assigned to when it was being freed.
Freed values are not supposed to be visible to Perl code.  This
can also happen if XS code calls C<av_clear> from a custom magic
callback on the array.

=item Attempt to delete disallowed key '%s' from a restricted hash

(F) The failing code attempted to delete from a restricted hash a key
which is not in its key set.

=item Attempt to delete readonly key '%s' from a restricted hash

(F) The failing code attempted to delete a key whose value has been
declared readonly from a restricted hash.

=item Attempt to free non-arena SV: 0x%x

(S internal) All SV objects are supposed to be allocated from arenas
that will be garbage collected on exit.  An SV was discovered to be
outside any of those arenas.

=item Attempt to free nonexistent shared string '%s'%s

(S internal) Perl maintains a reference-counted internal table of
strings to optimize the storage and access of hash keys and other
strings.  This indicates someone tried to decrement the reference count
of a string that can no longer be found in the table.

=item Attempt to free temp prematurely: SV 0x%x

(S debugging) Mortalized values are supposed to be freed by the
free_tmps() routine.  This indicates that something else is freeing the
SV before the free_tmps() routine gets a chance, which means that the
free_tmps() routine will be freeing an unreferenced scalar when it does
try to free it.

=item Attempt to free unreferenced glob pointers

(S internal) The reference counts got screwed up on symbol aliases.

=item Attempt to free unreferenced scalar: SV 0x%x

(S internal) Perl went to decrement the reference count of a scalar to
see if it would go to 0, and discovered that it had already gone to 0
earlier, and should have been freed, and in fact, probably was freed.
This could indicate that SvREFCNT_dec() was called too many times, or
that SvREFCNT_inc() was called too few times, or that the SV was
mortalized when it shouldn't have been, or that memory has been
corrupted.

=item Attempt to pack pointer to temporary value

(W pack) You tried to pass a temporary value (like the result of a
function, or a computed expression) to the "p" pack() template.  This
means the result contains a pointer to a location that could become
invalid anytime, even before the end of the current statement.  Use
literals or global values as arguments to the "p" pack() template to
avoid this warning.

=item Attempt to reload %s aborted.

(F) You tried to load a file with C<use> or C<require> that failed to
compile once already.  Perl will not try to compile this file again
unless you delete its entry from %INC.  See L<perlfunc/require> and
L<perlvar/%INC>.

=item Attempt to set length of freed array

(W misc) You tried to set the length of an array which has
been freed.  You can do this by storing a reference to the
scalar representing the last index of an array and later
assigning through that reference.  For example

    $r = do {my @a; \$#a};
    $$r = 503

=item Attempt to use reference as lvalue in substr

(W substr) You supplied a reference as the first argument to substr()
used as an lvalue, which is pretty strange.  Perhaps you forgot to
dereference it first.  See L<perlfunc/substr>.

=item Attribute "locked" is deprecated

(D deprecated) You have used the attributes pragma to modify the
"locked" attribute on a code reference.  The :locked attribute is
obsolete, has had no effect since 5005 threads were removed, and
will be removed in a future release of Perl 5.

=item Attribute prototype(%s) discards earlier prototype attribute in same sub

(W misc) A sub was declared as sub foo : prototype(A) : prototype(B) {}, for
example.  Since each sub can only have one prototype, the earlier
declaration(s) are discarded while the last one is applied.

=item Attribute "unique" is deprecated

(D deprecated) You have used the attributes pragma to modify
the "unique" attribute on an array, hash or scalar reference.
The :unique attribute has had no effect since Perl 5.8.8, and
will be removed in a future release of Perl 5.

=item av_reify called on tied array

(S debugging) This indicates that something went wrong and Perl got I<very>
confused about C<@_> or C<@DB::args> being tied.

=item Bad arg length for %s, is %u, should be %d

(F) You passed a buffer of the wrong size to one of msgctl(), semctl()
or shmctl().  In C parlance, the correct sizes are, respectively,
S<sizeof(struct msqid_ds *)>, S<sizeof(struct semid_ds *)>, and
S<sizeof(struct shmid_ds *)>.

=item Bad evalled substitution pattern

(F) You've used the C</e> switch to evaluate the replacement for a
substitution, but perl found a syntax error in the code to evaluate,
most likely an unexpected right brace '}'.

=item Bad filehandle: %s

(F) A symbol was passed to something wanting a filehandle, but the
symbol has no filehandle associated with it.  Perhaps you didn't do an
open(), or did it in another package.

=item Bad free() ignored

(S malloc) An internal routine called free() on something that had never
been malloc()ed in the first place.  Mandatory, but can be disabled by
setting environment variable C<PERL_BADFREE> to 0.

This message can be seen quite often with DB_File on systems with "hard"
dynamic linking, like C<AIX> and C<OS/2>.  It is a bug of C<Berkeley DB>
which is left unnoticed if C<DB> uses I<forgiving> system malloc().

=item Bad hash

(P) One of the internal hash routines was passed a null HV pointer.

=item Badly placed ()'s

(A) You've accidentally run your script through B<csh> instead
of Perl.  Check the #! line, or manually feed your script into
Perl yourself.

=item Bad name after %s

(F) You started to name a symbol by using a package prefix, and then
didn't finish the symbol.  In particular, you can't interpolate outside
of quotes, so

    $var = 'myvar';
    $sym = mypack::$var;

is not the same as

    $var = 'myvar';
    $sym = "mypack::$var";

=item Bad plugin affecting keyword '%s'

(F) An extension using the keyword plugin mechanism violated the
plugin API.

=item Bad realloc() ignored

(S malloc) An internal routine called realloc() on something that
had never been malloc()ed in the first place.  Mandatory, but can
be disabled by setting the environment variable C<PERL_BADFREE> to 1.

=item Bad symbol for array

(P) An internal request asked to add an array entry to something that
wasn't a symbol table entry.

=item Bad symbol for dirhandle

(P) An internal request asked to add a dirhandle entry to something
that wasn't a symbol table entry.

=item Bad symbol for filehandle

(P) An internal request asked to add a filehandle entry to something
that wasn't a symbol table entry.

=item Bad symbol for hash

(P) An internal request asked to add a hash entry to something that
wasn't a symbol table entry.

=item Bad symbol for scalar

(P) An internal request asked to add a scalar entry to something that
wasn't a symbol table entry.

=item Bareword found in conditional

(W bareword) The compiler found a bareword where it expected a
conditional, which often indicates that an || or && was parsed as part
of the last argument of the previous construct, for example:

    open FOO || die;

It may also indicate a misspelled constant that has been interpreted as
a bareword:

    use constant TYPO => 1;
    if (TYOP) { print "foo" }

The C<strict> pragma is useful in avoiding such errors.

=item Bareword "%s" not allowed while "strict subs" in use

(F) With "strict subs" in use, a bareword is only allowed as a
subroutine identifier, in curly brackets or to the left of the "=>"
symbol.  Perhaps you need to predeclare a subroutine?

=item Bareword "%s" refers to nonexistent package

(W bareword) You used a qualified bareword of the form C<Foo::>, but the
compiler saw no other uses of that namespace before that point.  Perhaps
you need to predeclare a package?

=item BEGIN failed--compilation aborted

(F) An untrapped exception was raised while executing a BEGIN
subroutine.  Compilation stops immediately and the interpreter is
exited.

=item BEGIN not safe after errors--compilation aborted

(F) Perl found a C<BEGIN {}> subroutine (or a C<use> directive, which
implies a C<BEGIN {}>) after one or more compilation errors had already
occurred.  Since the intended environment for the C<BEGIN {}> could not
be guaranteed (due to the errors), and since subsequent code likely
depends on its correct operation, Perl just gave up.

=item \%d better written as $%d

(W syntax) Outside of patterns, backreferences live on as variables.
The use of backslashes is grandfathered on the right-hand side of a
substitution, but stylistically it's better to use the variable form
because other Perl programmers will expect it, and it works better if
there are more than 9 backreferences.

=item Binary number > 0b11111111111111111111111111111111 non-portable

(W portable) The binary number you specified is larger than 2**32-1
(4294967295) and therefore non-portable between systems.  See
L<perlport> for more on portability concerns.

=item bind() on closed socket %s

(W closed) You tried to do a bind on a closed socket.  Did you forget to
check the return value of your socket() call?  See L<perlfunc/bind>.

=item binmode() on closed filehandle %s

(W unopened) You tried binmode() on a filehandle that was never opened.
Check your control flow and number of arguments.

=item Bit vector size > 32 non-portable

(W portable) Using bit vector sizes larger than 32 is non-portable.

=item Bizarre copy of %s

(P) Perl detected an attempt to copy an internal value that is not
copiable.

=item Bizarre SvTYPE [%d]

(P) When starting a new thread or returning values from a thread, Perl
encountered an invalid data type.

=item Both or neither range ends should be Unicode in regex; marked by
S<<-- HERE> in m/%s/

(W regexp) (only under C<S<use re 'strict'>> or within C<(?[...])>)

In a bracketed character class in a regular expression pattern, you
had a range which has exactly one end of it specified using C<\N{}>, and
the other end is specified using a non-portable mechanism.  Perl treats
the range as a Unicode range, that is, all the characters in it are
considered to be the Unicode characters, and which may be different code
points on some platforms Perl runs on.  For example, C<[\N{U+06}-\x08]>
is treated as if you had instead said C<[\N{U+06}-\N{U+08}]>, that is it
matches the characters whose code points in Unicode are 6, 7, and 8.
But that C<\x08> might indicate that you meant something different, so
the warning gets raised.

=item Buffer overflow in prime_env_iter: %s

(W internal) A warning peculiar to VMS.  While Perl was preparing to
iterate over %ENV, it encountered a logical name or symbol definition
which was too long, so it was truncated to the string shown.

=item Callback called exit

(F) A subroutine invoked from an external package via call_sv()
exited by calling exit.

=item %s() called too early to check prototype

(W prototype) You've called a function that has a prototype before the
parser saw a definition or declaration for it, and Perl could not check
that the call conforms to the prototype.  You need to either add an
early prototype declaration for the subroutine in question, or move the
subroutine definition ahead of the call to get proper prototype
checking.  Alternatively, if you are certain that you're calling the
function correctly, you may put an ampersand before the name to avoid
the warning.  See L<perlsub>.

=item Calling POSIX::%s() is deprecated

(D deprecated) You called a function whose use is deprecated.  See
the function's name in L<POSIX> for details.

=item Cannot chr %f

(F) You passed an invalid number (like an infinity or not-a-number) to C<chr>.

=item Cannot compress %f in pack

(F) You tried compressing an infinity or not-a-number as an unsigned
integer with BER, which makes no sense.

=item Cannot compress integer in pack

(F) An argument to pack("w",...) was too large to compress.
The BER compressed integer format can only be used with positive
integers, and you attempted to compress a very large number (> 1e308).
See L<perlfunc/pack>.

=item Cannot compress negative numbers in pack

(F) An argument to pack("w",...) was negative.  The BER compressed integer
format can only be used with positive integers.  See L<perlfunc/pack>.

=item Cannot convert a reference to %s to typeglob

(F) You manipulated Perl's symbol table directly, stored a reference
in it, then tried to access that symbol via conventional Perl syntax.
The access triggers Perl to autovivify that typeglob, but it there is
no legal conversion from that type of reference to a typeglob.

=item Cannot copy to %s

(P) Perl detected an attempt to copy a value to an internal type that cannot
be directly assigned to.

=item Cannot find encoding "%s"

(S io) You tried to apply an encoding that did not exist to a filehandle,
either with open() or binmode().

=item Cannot pack %f with '%c'

(F) You tried converting an infinity or not-a-number to an integer,
which makes no sense.

=item Cannot printf %f with '%c'

(F) You tried printing an infinity or not-a-number as a character (%c),
which makes no sense.  Maybe you meant '%s', or just stringifying it?

=item Cannot set tied @DB::args

(F) C<caller> tried to set C<@DB::args>, but found it tied.  Tying C<@DB::args>
is not supported.  (Before this error was added, it used to crash.)

=item Cannot tie unreifiable array

(P) You somehow managed to call C<tie> on an array that does not
keep a reference count on its arguments and cannot be made to
do so.  Such arrays are not even supposed to be accessible to
Perl code, but are only used internally.

=item Cannot yet reorder sv_catpvfn() arguments from va_list

(F) Some XS code tried to use C<sv_catpvfn()> or a related function with a
format string that specifies explicit indexes for some of the elements, and
using a C-style variable-argument list (a C<va_list>). This is not currently
supported. XS authors wanting to do this must instead construct a C array of
C<SV*> scalars containing the arguments.

=item Can only compress unsigned integers in pack

(F) An argument to pack("w",...) was not an integer.  The BER compressed
integer format can only be used with positive integers, and you attempted
to compress something else.  See L<perlfunc/pack>.

=item Can't bless non-reference value

(F) Only hard references may be blessed.  This is how Perl "enforces"
encapsulation of objects.  See L<perlobj>.

=item Can't "break" in a loop topicalizer

(F) You called C<break>, but you're in a C<foreach> block rather than
a C<given> block.  You probably meant to use C<next> or C<last>.

=item Can't "break" outside a given block

(F) You called C<break>, but you're not inside a C<given> block.

=item Can't call method "%s" on an undefined value

(F) You used the syntax of a method call, but the slot filled by the
object reference or package name contains an undefined value.  Something
like this will reproduce the error:

    $BADREF = undef;
    process $BADREF 1,2,3;
    $BADREF->process(1,2,3);

=item Can't call method "%s" on unblessed reference

(F) A method call must know in what package it's supposed to run.  It
ordinarily finds this out from the object reference you supply, but you
didn't supply an object reference in this case.  A reference isn't an
object reference until it has been blessed.  See L<perlobj>.

=item Can't call method "%s" without a package or object reference

(F) You used the syntax of a method call, but the slot filled by the
object reference or package name contains an expression that returns a
defined value which is neither an object reference nor a package name.
Something like this will reproduce the error:

    $BADREF = 42;
    process $BADREF 1,2,3;
    $BADREF->process(1,2,3);

=item Can't call mro_isa_changed_in() on anonymous symbol table

(P) Perl got confused as to whether a hash was a plain hash or a
symbol table hash when trying to update @ISA caches.

=item Can't call mro_method_changed_in() on anonymous symbol table

(F) An XS module tried to call C<mro_method_changed_in> on a hash that was
not attached to the symbol table.

=item Can't chdir to %s

(F) You called C<perl -x/foo/bar>, but F</foo/bar> is not a directory
that you can chdir to, possibly because it doesn't exist.

=item Can't check filesystem of script "%s" for nosuid

(P) For some reason you can't check the filesystem of the script for
nosuid.

=item Can't coerce %s to %s in %s

(F) Certain types of SVs, in particular real symbol table entries
(typeglobs), can't be forced to stop being what they are.  So you can't
say things like:

    *foo += 1;

You CAN say

    $foo = *foo;
    $foo += 1;

but then $foo no longer contains a glob.

=item Can't "continue" outside a when block

(F) You called C<continue>, but you're not inside a C<when>
or C<default> block.

=item Can't create pipe mailbox

(P) An error peculiar to VMS.  The process is suffering from exhausted
quotas or other plumbing problems.

=item Can't declare %s in "%s"

(F) Only scalar, array, and hash variables may be declared as "my", "our" or
"state" variables.  They must have ordinary identifiers as names.

=item Can't "default" outside a topicalizer

(F) You have used a C<default> block that is neither inside a
C<foreach> loop nor a C<given> block.  (Note that this error is
issued on exit from the C<default> block, so you won't get the
error if you use an explicit C<continue>.)

=item Can't do inplace edit: %s is not a regular file

(S inplace) You tried to use the B<-i> switch on a special file, such as
a file in /dev, a FIFO or an uneditable directory.  The file was ignored.

=item Can't do inplace edit on %s: %s

(S inplace) The creation of the new file failed for the indicated
reason.

=item Can't do inplace edit without backup

(F) You're on a system such as MS-DOS that gets confused if you try
reading from a deleted (but still opened) file.  You have to say
C<-i.bak>, or some such.

=item Can't do inplace edit: %s would not be unique

(S inplace) Your filesystem does not support filenames longer than 14
characters and Perl was unable to create a unique filename during
inplace editing with the B<-i> switch.  The file was ignored.

=item Can't do %s("%s") on non-UTF-8 locale; resolved to "%s".

(W locale) You are 1) running under "C<use locale>"; 2) the current
locale is not a UTF-8 one; 3) you tried to do the designated case-change
operation on the specified Unicode character; and 4) the result of this
operation would mix Unicode and locale rules, which likely conflict.
Mixing of different rule types is forbidden, so the operation was not
done; instead the result is the indicated value, which is the best
available that uses entirely Unicode rules.  That turns out to almost
always be the original character, unchanged.

It is generally a bad idea to mix non-UTF-8 locales and Unicode, and
this issue is one of the reasons why.  This warning is raised when
Unicode rules would normally cause the result of this operation to
contain a character that is in the range specified by the locale,
0..255, and hence is subject to the locale's rules, not Unicode's.

If you are using locale purely for its characteristics related to things
like its numeric and time formatting (and not C<LC_CTYPE>), consider
using a restricted form of the locale pragma (see L<perllocale/The "use
locale" pragma>) like "S<C<use locale ':not_characters'>>".

Note that failed case-changing operations done as a result of
case-insensitive C</i> regular expression matching will show up in this
warning as having the C<fc> operation (as that is what the regular
expression engine calls behind the scenes.)

=item Can't do waitpid with flags

(F) This machine doesn't have either waitpid() or wait4(), so only
waitpid() without flags is emulated.

=item Can't emulate -%s on #! line

(F) The #! line specifies a switch that doesn't make sense at this
point.  For example, it'd be kind of silly to put a B<-x> on the #!
line.

=item Can't %s %s-endian %ss on this platform

(F) Your platform's byte-order is neither big-endian nor little-endian,
or it has a very strange pointer size.  Packing and unpacking big- or
little-endian floating point values and pointers may not be possible.
See L<perlfunc/pack>.

=item Can't exec "%s": %s

(W exec) A system(), exec(), or piped open call could not execute the
named program for the indicated reason.  Typical reasons include: the
permissions were wrong on the file, the file wasn't found in
C<$ENV{PATH}>, the executable in question was compiled for another
architecture, or the #! line in a script points to an interpreter that
can't be run for similar reasons.  (Or maybe your system doesn't support
#! at all.)

=item Can't exec %s

(F) Perl was trying to execute the indicated program for you because
that's what the #! line said.  If that's not what you wanted, you may
need to mention "perl" on the #! line somewhere.

=item Can't execute %s

(F) You used the B<-S> switch, but the copies of the script to execute
found in the PATH did not have correct permissions.

=item Can't find an opnumber for "%s"

(F) A string of a form C<CORE::word> was given to prototype(), but there
is no builtin with the name C<word>.

=item Can't find label %s

(F) You said to goto a label that isn't mentioned anywhere that it's
possible for us to go to.  See L<perlfunc/goto>.

=item Can't find %s on PATH

(F) You used the B<-S> switch, but the script to execute could not be
found in the PATH.

=item Can't find %s on PATH, '.' not in PATH

(F) You used the B<-S> switch, but the script to execute could not be
found in the PATH, or at least not with the correct permissions.  The
script exists in the current directory, but PATH prohibits running it.

=item Can't find string terminator %s anywhere before EOF

(F) Perl strings can stretch over multiple lines.  This message means
that the closing delimiter was omitted.  Because bracketed quotes count
nesting levels, the following is missing its final parenthesis:

    print q(The character '(' starts a side comment.);

If you're getting this error from a here-document, you may have
included unseen whitespace before or after your closing tag or there
may not be a linebreak after it.  A good programmer's editor will have
a way to help you find these characters (or lack of characters).  See
L<perlop> for the full details on here-documents.

=item Can't find Unicode property definition "%s"

=item Can't find Unicode property definition "%s" in regex; marked by <-- HERE in m/%s/

(F) The named property which you specified via C<\p> or C<\P> is not one
known to Perl.  Perhaps you misspelled the name?  See
L<perluniprops/Properties accessible through \p{} and \P{}>
for a complete list of available official
properties.  If it is a
L<user-defined property|perlunicode/User-Defined Character Properties>
it must have been defined by the time the regular expression is
matched.

If you didn't mean to use a Unicode property, escape the C<\p>, either
by C<\\p> (just the C<\p>) or by C<\Q\p> (the rest of the string, or
until C<\E>).

=item Can't fork: %s

(F) A fatal error occurred while trying to fork while opening a
pipeline.

=item Can't fork, trying again in 5 seconds

(W pipe) A fork in a piped open failed with EAGAIN and will be retried
after five seconds.

=item Can't get filespec - stale stat buffer?

(S) A warning peculiar to VMS.  This arises because of the difference
between access checks under VMS and under the Unix model Perl assumes.
Under VMS, access checks are done by filename, rather than by bits in
the stat buffer, so that ACLs and other protections can be taken into
account.  Unfortunately, Perl assumes that the stat buffer contains all
the necessary information, and passes it, instead of the filespec, to
the access-checking routine.  It will try to retrieve the filespec using
the device name and FID present in the stat buffer, but this works only
if you haven't made a subsequent call to the CRTL stat() routine,
because the device name is overwritten with each call.  If this warning
appears, the name lookup failed, and the access-checking routine gave up
and returned FALSE, just to be conservative.  (Note: The access-checking
routine knows about the Perl C<stat> operator and file tests, so you
shouldn't ever see this warning in response to a Perl command; it arises
only if some internal code takes stat buffers lightly.)

=item Can't get pipe mailbox device name

(P) An error peculiar to VMS.  After creating a mailbox to act as a
pipe, Perl can't retrieve its name for later use.

=item Can't get SYSGEN parameter value for MAXBUF

(P) An error peculiar to VMS.  Perl asked $GETSYI how big you want your
mailbox buffers to be, and didn't get an answer.

=item Can't "goto" into the middle of a foreach loop

(F) A "goto" statement was executed to jump into the middle of a foreach
loop.  You can't get there from here.  See L<perlfunc/goto>.

=item Can't "goto" out of a pseudo block

(F) A "goto" statement was executed to jump out of what might look like
a block, except that it isn't a proper block.  This usually occurs if
you tried to jump out of a sort() block or subroutine, which is a no-no.
See L<perlfunc/goto>.

=item Can't goto subroutine from an eval-%s

(F) The "goto subroutine" call can't be used to jump out of an eval
"string" or block.

=item Can't goto subroutine from a sort sub (or similar callback)

(F) The "goto subroutine" call can't be used to jump out of the
comparison sub for a sort(), or from a similar callback (such
as the reduce() function in List::Util).

=item Can't goto subroutine outside a subroutine

(F) The deeply magical "goto subroutine" call can only replace one
subroutine call for another.  It can't manufacture one out of whole
cloth.  In general you should be calling it out of only an AUTOLOAD
routine anyway.  See L<perlfunc/goto>.

=item Can't ignore signal CHLD, forcing to default

(W signal) Perl has detected that it is being run with the SIGCHLD
signal (sometimes known as SIGCLD) disabled.  Since disabling this
signal will interfere with proper determination of exit status of child
processes, Perl has reset the signal to its default value.  This
situation typically indicates that the parent program under which Perl
may be running (e.g. cron) is being very careless.

=item Can't kill a non-numeric process ID

(F) Process identifiers must be (signed) integers.  It is a fatal error to
attempt to kill() an undefined, empty-string or otherwise non-numeric
process identifier.

=item Can't "last" outside a loop block

(F) A "last" statement was executed to break out of the current block,
except that there's this itty bitty problem called there isn't a current
block.  Note that an "if" or "else" block doesn't count as a "loopish"
block, as doesn't a block given to sort(), map() or grep().  You can
usually double the curlies to get the same effect though, because the
inner curlies will be considered a block that loops once.  See
L<perlfunc/last>.

=item Can't linearize anonymous symbol table

(F) Perl tried to calculate the method resolution order (MRO) of a
package, but failed because the package stash has no name.

=item Can't load '%s' for module %s

(F) The module you tried to load failed to load a dynamic extension.
This may either mean that you upgraded your version of perl to one
that is incompatible with your old dynamic extensions (which is known
to happen between major versions of perl), or (more likely) that your
dynamic extension was built against an older version of the library
that is installed on your system.  You may need to rebuild your old
dynamic extensions.

=item Can't localize lexical variable %s

(F) You used local on a variable name that was previously declared as a
lexical variable using "my" or "state".  This is not allowed.  If you
want to localize a package variable of the same name, qualify it with
the package name.

=item Can't localize through a reference

(F) You said something like C<local $$ref>, which Perl can't currently
handle, because when it goes to restore the old value of whatever $ref
pointed to after the scope of the local() is finished, it can't be sure
that $ref will still be a reference.

=item Can't locate %s

(F) You said to C<do> (or C<require>, or C<use>) a file that couldn't be found.
Perl looks for the file in all the locations mentioned in @INC, unless
the file name included the full path to the file.  Perhaps you need
to set the PERL5LIB or PERL5OPT environment variable to say where the
extra library is, or maybe the script needs to add the library name
to @INC.  Or maybe you just misspelled the name of the file.  See
L<perlfunc/require> and L<lib>.

=item Can't locate auto/%s.al in @INC

(F) A function (or method) was called in a package which allows
autoload, but there is no function to autoload.  Most probable causes
are a misprint in a function/method name or a failure to C<AutoSplit>
the file, say, by doing C<make install>.

=item Can't locate loadable object for module %s in @INC

(F) The module you loaded is trying to load an external library, like
for example, F<foo.so> or F<bar.dll>, but the L<DynaLoader> module was
unable to locate this library.  See L<DynaLoader>.

=item Can't locate object method "%s" via package "%s"

(F) You called a method correctly, and it correctly indicated a package
functioning as a class, but that package doesn't define that particular
method, nor does any of its base classes.  See L<perlobj>.

=item Can't locate object method "%s" via package "%s" (perhaps you forgot
to load "%s"?)

(F) You called a method on a class that did not exist, and the method
could not be found in UNIVERSAL.  This often means that a method
requires a package that has not been loaded.

=item Can't locate package %s for @%s::ISA

(W syntax) The @ISA array contained the name of another package that
doesn't seem to exist.

=item Can't locate PerlIO%s

(F) You tried to use in open() a PerlIO layer that does not exist,
e.g. open(FH, ">:nosuchlayer", "somefile").

=item Can't make list assignment to %ENV on this system

(F) List assignment to %ENV is not supported on some systems, notably
VMS.

=item Can't make loaded symbols global on this platform while loading %s

(S) A module passed the flag 0x01 to DynaLoader::dl_load_file() to request
that symbols from the stated file are made available globally within the
process, but that functionality is not available on this platform.  Whilst
the module likely will still work, this may prevent the perl interpreter
from loading other XS-based extensions which need to link directly to
functions defined in the C or XS code in the stated file.

=item Can't modify %s in %s

(F) You aren't allowed to assign to the item indicated, or otherwise try
to change it, such as with an auto-increment.

=item Can't modify nonexistent substring

(P) The internal routine that does assignment to a substr() was handed
a NULL.

=item Can't modify non-lvalue subroutine call of &%s

(F) Subroutines meant to be used in lvalue context should be declared as
such.  See L<perlsub/"Lvalue subroutines">.

=item Can't modify reference to %s in %s assignment

(F) Only a limited number of constructs can be used as the argument to a
reference constructor on the left-hand side of an assignment, and what
you used was not one of them.  See L<perlref/Assigning to References>.

=item Can't modify reference to localized parenthesized array in list
assignment

(F) Assigning to C<\local(@array)> or C<\(local @array)> is not supported, as
it is not clear exactly what it should do.  If you meant to make @array
refer to some other array, use C<\@array = \@other_array>.  If you want to
make the elements of @array aliases of the scalars referenced on the
right-hand side, use C<\(@array) = @scalar_refs>.

=item Can't modify reference to parenthesized hash in list assignment

(F) Assigning to C<\(%hash)> is not supported.  If you meant to make %hash
refer to some other hash, use C<\%hash = \%other_hash>.  If you want to
make the elements of %hash into aliases of the scalars referenced on the
right-hand side, use a hash slice: C<\@hash{@keys} = @those_scalar_refs>.

=item Can't msgrcv to read-only var

(F) The target of a msgrcv must be modifiable to be used as a receive
buffer.

=item Can't "next" outside a loop block

(F) A "next" statement was executed to reiterate the current block, but
there isn't a current block.  Note that an "if" or "else" block doesn't
count as a "loopish" block, as doesn't a block given to sort(), map() or
grep().  You can usually double the curlies to get the same effect
though, because the inner curlies will be considered a block that loops
once.  See L<perlfunc/next>.

=item Can't open %s: %s

(S inplace) The implicit opening of a file through use of the C<< <> >>
filehandle, either implicitly under the C<-n> or C<-p> command-line
switches, or explicitly, failed for the indicated reason.  Usually
this is because you don't have read permission for a file which
you named on the command line.

(F) You tried to call perl with the B<-e> switch, but F</dev/null> (or
your operating system's equivalent) could not be opened.

=item Can't open a reference

(W io) You tried to open a scalar reference for reading or writing,
using the 3-arg open() syntax:

    open FH, '>', $ref;

but your version of perl is compiled without perlio, and this form of
open is not supported.

=item Can't open bidirectional pipe

(W pipe) You tried to say C<open(CMD, "|cmd|")>, which is not supported.
You can try any of several modules in the Perl library to do this, such
as IPC::Open2.  Alternately, direct the pipe's output to a file using
">", and then read it in under a different file handle.

=item Can't open error file %s as stderr

(F) An error peculiar to VMS.  Perl does its own command line
redirection, and couldn't open the file specified after '2>' or '2>>' on
the command line for writing.

=item Can't open input file %s as stdin

(F) An error peculiar to VMS.  Perl does its own command line
redirection, and couldn't open the file specified after '<' on the
command line for reading.

=item Can't open output file %s as stdout

(F) An error peculiar to VMS.  Perl does its own command line
redirection, and couldn't open the file specified after '>' or '>>' on
the command line for writing.

=item Can't open output pipe (name: %s)

(P) An error peculiar to VMS.  Perl does its own command line
redirection, and couldn't open the pipe into which to send data destined
for stdout.

=item Can't open perl script "%s": %s

(F) The script you specified can't be opened for the indicated reason.

If you're debugging a script that uses #!, and normally relies on the
shell's $PATH search, the -S option causes perl to do that search, so
you don't have to type the path or C<`which $scriptname`>.

=item Can't read CRTL environ

(S) A warning peculiar to VMS.  Perl tried to read an element of %ENV
from the CRTL's internal environment array and discovered the array was
missing.  You need to figure out where your CRTL misplaced its environ
or define F<PERL_ENV_TABLES> (see L<perlvms>) so that environ is not
searched.

=item Can't redeclare "%s" in "%s"

(F) A "my", "our" or "state" declaration was found within another declaration,
such as C<my ($x, my($y), $z)> or C<our (my $x)>.

=item Can't "redo" outside a loop block

(F) A "redo" statement was executed to restart the current block, but
there isn't a current block.  Note that an "if" or "else" block doesn't
count as a "loopish" block, as doesn't a block given to sort(), map()
or grep().  You can usually double the curlies to get the same effect
though, because the inner curlies will be considered a block that
loops once.  See L<perlfunc/redo>.

=item Can't remove %s: %s, skipping file

(S inplace) You requested an inplace edit without creating a backup
file.  Perl was unable to remove the original file to replace it with
the modified file.  The file was left unmodified.

=item Can't rename %s to %s: %s, skipping file

(S inplace) The rename done by the B<-i> switch failed for some reason,
probably because you don't have write permission to the directory.

=item Can't reopen input pipe (name: %s) in binary mode

(P) An error peculiar to VMS.  Perl thought stdin was a pipe, and tried
to reopen it to accept binary data.  Alas, it failed.

=item Can't represent character for Ox%X on this platform

(F) There is a hard limit to how big a character code point can be due
to the fundamental properties of UTF-8, especially on EBCDIC
platforms.  The given code point exceeds that.  The only work-around is
to not use such a large code point.

=item Can't reset %ENV on this system

(F) You called C<reset('E')> or similar, which tried to reset
all variables in the current package beginning with "E".  In
the main package, that includes %ENV.  Resetting %ENV is not
supported on some systems, notably VMS.

=item Can't resolve method "%s" overloading "%s" in package "%s"

(F)(P) Error resolving overloading specified by a method name (as
opposed to a subroutine reference): no such method callable via the
package.  If the method name is C<???>, this is an internal error.

=item Can't return %s from lvalue subroutine

(F) Perl detected an attempt to return illegal lvalues (such as
temporary or readonly values) from a subroutine used as an lvalue.  This
is not allowed.

=item Can't return outside a subroutine

(F) The return statement was executed in mainline code, that is, where
there was no subroutine call to return out of.  See L<perlsub>.

=item Can't return %s to lvalue scalar context

(F) You tried to return a complete array or hash from an lvalue
subroutine, but you called the subroutine in a way that made Perl
think you meant to return only one value.  You probably meant to
write parentheses around the call to the subroutine, which tell
Perl that the call should be in list context.

=item Can't stat script "%s"

(P) For some reason you can't fstat() the script even though you have it
open already.  Bizarre.

=item Can't take log of %g

(F) For ordinary real numbers, you can't take the logarithm of a
negative number or zero.  There's a Math::Complex package that comes
standard with Perl, though, if you really want to do that for the
negative numbers.

=item Can't take sqrt of %g

(F) For ordinary real numbers, you can't take the square root of a
negative number.  There's a Math::Complex package that comes standard
with Perl, though, if you really want to do that.

=item Can't undef active subroutine

(F) You can't undefine a routine that's currently running.  You can,
however, redefine it while it's running, and you can even undef the
redefined subroutine while the old routine is running.  Go figure.

=item Can't upgrade %s (%d) to %d

(P) The internal sv_upgrade routine adds "members" to an SV, making it
into a more specialized kind of SV.  The top several SV types are so
specialized, however, that they cannot be interconverted.  This message
indicates that such a conversion was attempted.

=item Can't use '%c' after -mname

(F) You tried to call perl with the B<-m> switch, but you put something
other than "=" after the module name.

=item Can't use a hash as a reference

(F) You tried to use a hash as a reference, as in
C<< %foo->{"bar"} >> or C<< %$ref->{"hello"} >>.  Versions of perl
<= 5.22.0 used to allow this syntax, but shouldn't
have.  This was deprecated in perl 5.6.1.

=item Can't use an array as a reference

(F) You tried to use an array as a reference, as in
C<< @foo->[23] >> or C<< @$ref->[99] >>.  Versions of perl <= 5.22.0
used to allow this syntax, but shouldn't have.  This
was deprecated in perl 5.6.1.

=item Can't use anonymous symbol table for method lookup

(F) The internal routine that does method lookup was handed a symbol
table that doesn't have a name.  Symbol tables can become anonymous
for example by undefining stashes: C<undef %Some::Package::>.

=item Can't use an undefined value as %s reference

(F) A value used as either a hard reference or a symbolic reference must
be a defined value.  This helps to delurk some insidious errors.

=item Can't use bareword ("%s") as %s ref while "strict refs" in use

(F) Only hard references are allowed by "strict refs".  Symbolic
references are disallowed.  See L<perlref>.

=item Can't use %! because Errno.pm is not available

(F) The first time the C<%!> hash is used, perl automatically loads the
Errno.pm module.  The Errno module is expected to tie the %! hash to
provide symbolic names for C<$!> errno values.

=item Can't use both '<' and '>' after type '%c' in %s

(F) A type cannot be forced to have both big-endian and little-endian
byte-order at the same time, so this combination of modifiers is not
allowed.  See L<perlfunc/pack>.

=item Can't use 'defined(@array)' (Maybe you should just omit the defined()?)

(F) defined() is not useful on arrays because it
checks for an undefined I<scalar> value.  If you want to see if the
array is empty, just use C<if (@array) { # not empty }> for example.

=item Can't use 'defined(%hash)' (Maybe you should just omit the defined()?)

(F) C<defined()> is not usually right on hashes.

Although C<defined %hash> is false on a plain not-yet-used hash, it
becomes true in several non-obvious circumstances, including iterators,
weak references, stash names, even remaining true after C<undef %hash>.
These things make C<defined %hash> fairly useless in practice, so it now
generates a fatal error.

If a check for non-empty is what you wanted then just put it in boolean
context (see L<perldata/Scalar values>):

    if (%hash) {
       # not empty
    }

If you had C<defined %Foo::Bar::QUUX> to check whether such a package
variable exists then that's never really been reliable, and isn't
a good way to enquire about the features of a package, or whether
it's loaded, etc.

=item Can't use %s for loop variable

(P) The parser got confused when trying to parse a C<foreach> loop.

=item Can't use global %s in "%s"

(F) You tried to declare a magical variable as a lexical variable.  This
is not allowed, because the magic can be tied to only one location
(namely the global variable) and it would be incredibly confusing to
have variables in your program that looked like magical variables but
weren't.

=item Can't use '%c' in a group with different byte-order in %s

(F) You attempted to force a different byte-order on a type
that is already inside a group with a byte-order modifier.
For example you cannot force little-endianness on a type that
is inside a big-endian group.

=item Can't use "my %s" in sort comparison

(F) The global variables $a and $b are reserved for sort comparisons.
You mentioned $a or $b in the same line as the <=> or cmp operator,
and the variable had earlier been declared as a lexical variable.
Either qualify the sort variable with the package name, or rename the
lexical variable.

=item Can't use %s ref as %s ref

(F) You've mixed up your reference types.  You have to dereference a
reference of the type needed.  You can use the ref() function to
test the type of the reference, if need be.

=item Can't use string ("%s") as %s ref while "strict refs" in use

=item Can't use string ("%s"...) as %s ref while "strict refs" in use

(F) You've told Perl to dereference a string, something which
C<use strict> blocks to prevent it happening accidentally.  See
L<perlref/"Symbolic references">.  This can be triggered by an C<@> or C<$>
in a double-quoted string immediately before interpolating a variable,
for example in C<"user @$twitter_id">, which says to treat the contents
of C<$twitter_id> as an array reference; use a C<\> to have a literal C<@>
symbol followed by the contents of C<$twitter_id>: C<"user \@$twitter_id">.

=item Can't use subscript on %s

(F) The compiler tried to interpret a bracketed expression as a
subscript.  But to the left of the brackets was an expression that
didn't look like a hash or array reference, or anything else subscriptable.

=item Can't use \%c to mean $%c in expression

(W syntax) In an ordinary expression, backslash is a unary operator that
creates a reference to its argument.  The use of backslash to indicate a
backreference to a matched substring is valid only as part of a regular
expression pattern.  Trying to do this in ordinary Perl code produces a
value that prints out looking like SCALAR(0xdecaf).  Use the $1 form
instead.

=item Can't weaken a nonreference

(F) You attempted to weaken something that was not a reference.  Only
references can be weakened.

=item Can't "when" outside a topicalizer

(F) You have used a when() block that is neither inside a C<foreach>
loop nor a C<given> block.  (Note that this error is issued on exit
from the C<when> block, so you won't get the error if the match fails,
or if you use an explicit C<continue>.)

=item Can't x= to read-only value

(F) You tried to repeat a constant value (often the undefined value)
with an assignment operator, which implies modifying the value itself.
Perhaps you need to copy the value to a temporary, and repeat that.

=item Character following "\c" must be printable ASCII

(F) In C<\cI<X>>, I<X> must be a printable (non-control) ASCII character.

Note that ASCII characters that don't map to control characters are
discouraged, and will generate the warning (when enabled)
L</""\c%c" is more clearly written simply as "%s"">.

=item Character following \%c must be '{' or a single-character Unicode property name in regex; marked by <-- HERE in m/%s/

(F) (In the above the C<%c> is replaced by either C<p> or C<P>.)  You
specified something that isn't a legal Unicode property name.  Most
Unicode properties are specified by C<\p{...}>.  But if the name is a
single character one, the braces may be omitted.

=item Character in 'C' format wrapped in pack

(W pack) You said

    pack("C", $x)

where $x is either less than 0 or more than 255; the C<"C"> format is
only for encoding native operating system characters (ASCII, EBCDIC,
and so on) and not for Unicode characters, so Perl behaved as if you meant

    pack("C", $x & 255)

If you actually want to pack Unicode codepoints, use the C<"U"> format
instead.

=item Character in 'c' format wrapped in pack

(W pack) You said

    pack("c", $x)

where $x is either less than -128 or more than 127; the C<"c"> format
is only for encoding native operating system characters (ASCII, EBCDIC,
and so on) and not for Unicode characters, so Perl behaved as if you meant

    pack("c", $x & 255);

If you actually want to pack Unicode codepoints, use the C<"U"> format
instead.

=item Character in '%c' format wrapped in unpack

(W unpack) You tried something like

   unpack("H", "\x{2a1}")

where the format expects to process a byte (a character with a value
below 256), but a higher value was provided instead.  Perl uses the
value modulus 256 instead, as if you had provided:

   unpack("H", "\x{a1}")

=item Character in 'W' format wrapped in pack

(W pack) You said

    pack("U0W", $x)

where $x is either less than 0 or more than 255.  However, C<U0>-mode
expects all values to fall in the interval [0, 255], so Perl behaved
as if you meant:

    pack("U0W", $x & 255)

=item Character(s) in '%c' format wrapped in pack

(W pack) You tried something like

   pack("u", "\x{1f3}b")

where the format expects to process a sequence of bytes (character with a
value below 256), but some of the characters had a higher value.  Perl
uses the character values modulus 256 instead, as if you had provided:

   pack("u", "\x{f3}b")

=item Character(s) in '%c' format wrapped in unpack

(W unpack) You tried something like

   unpack("s", "\x{1f3}b")

where the format expects to process a sequence of bytes (character with a
value below 256), but some of the characters had a higher value.  Perl
uses the character values modulus 256 instead, as if you had provided:

   unpack("s", "\x{f3}b")

=item charnames alias definitions may not contain a sequence of multiple spaces

(F) You defined a character name which had multiple space characters
in a row.  Change them to single spaces.  Usually these names are
defined in the C<:alias> import argument to C<use charnames>, but they
could be defined by a translator installed into C<$^H{charnames}>.  See
L<charnames/CUSTOM ALIASES>.

=item charnames alias definitions may not contain trailing white-space

(F) You defined a character name which ended in a space
character.  Remove the trailing space(s).  Usually these names are
defined in the C<:alias> import argument to C<use charnames>, but they
could be defined by a translator installed into C<$^H{charnames}>.
See L<charnames/CUSTOM ALIASES>.

=item chdir() on unopened filehandle %s

(W unopened) You tried chdir() on a filehandle that was never opened.

=item "\c%c" is more clearly written simply as "%s"

(W syntax) The C<\cI<X>> construct is intended to be a way to specify
non-printable characters.  You used it for a printable one, which
is better written as simply itself, perhaps preceded by a backslash
for non-word characters.  Doing it the way you did is not portable
between ASCII and EBCDIC platforms.

=item Cloning substitution context is unimplemented

(F) Creating a new thread inside the C<s///> operator is not supported.

=item closedir() attempted on invalid dirhandle %s

(W io) The dirhandle you tried to close is either closed or not really
a dirhandle.  Check your control flow.

=item close() on unopened filehandle %s

(W unopened) You tried to close a filehandle that was never opened.

=item Closure prototype called

(F) If a closure has attributes, the subroutine passed to an attribute
handler is the prototype that is cloned when a new closure is created.
This subroutine cannot be called.

=item \C no longer supported in regex; marked by S<<-- HERE> in m/%s/

(F) The \C character class used to allow a match of single byte
within a multi-byte utf-8 character, but was removed in v5.24 as
it broke encapsulation and its implementation was extremely buggy.
If you really need to process the individual bytes, you probably
want to convert your string to one where each underlying byte is
stored as a character, with utf8::encode().

=item Code missing after '/'

(F) You had a (sub-)template that ends with a '/'.  There must be
another template code following the slash.  See L<perlfunc/pack>.

=item Code point 0x%X is not Unicode, and not portable

(S non_unicode) You had a code point that has never been in any
standard, so it is likely that languages other than Perl will NOT
understand it.  At one time, it was legal in some standards to have code
points up to 0x7FFF_FFFF, but not higher, and this code point is higher.

Acceptance of these code points is a Perl extension, and you should
expect that nothing other than Perl can handle them; Perl itself on
EBCDIC platforms before v5.24 does not handle them.

Code points above 0xFFFF_FFFF require larger than a 32 bit word.

Perl also makes no guarantees that the representation of these code
points won't change at some point in the future, say when machines
become available that have larger than a 64-bit word.  At that time,
files written by an older Perl would require conversion before being
readable by a newer Perl.

=item Code point 0x%X is not Unicode, may not be portable

(S non_unicode) You had a code point above the Unicode maximum
of U+10FFFF.

Perl allows strings to contain a superset of Unicode code points, but
these may not be accepted by other languages/systems.  Further, even if
these languages/systems accept these large code points, they may have
chosen a different representation for them than the UTF-8-like one that
Perl has, which would mean files are not exchangeable between them and
Perl.

On EBCDIC platforms, code points above 0x3FFF_FFFF have a different
representation in Perl v5.24 than before, so any file containing these
that was written before that version will require conversion before
being readable by a later Perl.

=item %s: Command not found

(A) You've accidentally run your script through B<csh> or another shell
instead of Perl.  Check the #! line, or manually feed your script into
Perl yourself.  The #! line at the top of your file could look like

  #!/usr/bin/perl -w

=item Compilation failed in require

(F) Perl could not compile a file specified in a C<require> statement.
Perl uses this generic message when none of the errors that it
encountered were severe enough to halt compilation immediately.

=item Complex regular subexpression recursion limit (%d) exceeded

(W regexp) The regular expression engine uses recursion in complex
situations where back-tracking is required.  Recursion depth is limited
to 32766, or perhaps less in architectures where the stack cannot grow
arbitrarily.  ("Simple" and "medium" situations are handled without
recursion and are not subject to a limit.)  Try shortening the string
under examination; looping in Perl code (e.g. with C<while>) rather than
in the regular expression engine; or rewriting the regular expression so
that it is simpler or backtracks less.  (See L<perlfaq2> for information
on I<Mastering Regular Expressions>.)

=item connect() on closed socket %s

(W closed) You tried to do a connect on a closed socket.  Did you forget
to check the return value of your socket() call?  See
L<perlfunc/connect>.

=item Constant(%s): Call to &{$^H{%s}} did not return a defined value

(F) The subroutine registered to handle constant overloading
(see L<overload>) or a custom charnames handler (see
L<charnames/CUSTOM TRANSLATORS>) returned an undefined value.

=item Constant(%s): $^H{%s} is not defined

(F) The parser found inconsistencies while attempting to define an
overloaded constant.  Perhaps you forgot to load the corresponding
L<overload> pragma?

=item Constant is not %s reference

(F) A constant value (perhaps declared using the C<use constant> pragma)
is being dereferenced, but it amounts to the wrong type of reference.
The message indicates the type of reference that was expected.  This
usually indicates a syntax error in dereferencing the constant value.
See L<perlsub/"Constant Functions"> and L<constant>.

=item Constants from lexical variables potentially modified elsewhere are
deprecated

(D deprecated) You wrote something like

    my $var;
    $sub = sub () { $var };

but $var is referenced elsewhere and could be modified after the C<sub>
expression is evaluated.  Either it is explicitly modified elsewhere
(C<$var = 3>) or it is passed to a subroutine or to an operator like
C<printf> or C<map>, which may or may not modify the variable.

Traditionally, Perl has captured the value of the variable at that
point and turned the subroutine into a constant eligible for inlining.
In those cases where the variable can be modified elsewhere, this
breaks the behavior of closures, in which the subroutine captures
the variable itself, rather than its value, so future changes to the
variable are reflected in the subroutine's return value.

This usage is deprecated, because the behavior is likely to change
in a future version of Perl.

If you intended for the subroutine to be eligible for inlining, then
make sure the variable is not referenced elsewhere, possibly by
copying it:

    my $var2 = $var;
    $sub = sub () { $var2 };

If you do want this subroutine to be a closure that reflects future
changes to the variable that it closes over, add an explicit C<return>:

    my $var;
    $sub = sub () { return $var };

=item Constant subroutine %s redefined

(W redefine)(S) You redefined a subroutine which had previously
been eligible for inlining.  See L<perlsub/"Constant Functions">
for commentary and workarounds.

=item Constant subroutine %s undefined

(W misc) You undefined a subroutine which had previously been eligible
for inlining.  See L<perlsub/"Constant Functions"> for commentary and
workarounds.

=item Constant(%s) unknown

(F) The parser found inconsistencies either while attempting
to define an overloaded constant, or when trying to find the
character name specified in the C<\N{...}> escape.  Perhaps you
forgot to load the corresponding L<overload> pragma?

=item :const is experimental

(S experimental::const_attr) The "const" attribute is experimental.
If you want to use the feature, disable the warning with C<no warnings
'experimental::const_attr'>, but know that in doing so you are taking
the risk that your code may break in a future Perl version.

=item :const is not permitted on named subroutines

(F) The "const" attribute causes an anonymous subroutine to be run and
its value captured at the time that it is cloned.  Named subroutines are
not cloned like this, so the attribute does not make sense on them.

=item Copy method did not return a reference

(F) The method which overloads "=" is buggy.  See
L<overload/Copy Constructor>.

=item &CORE::%s cannot be called directly

(F) You tried to call a subroutine in the C<CORE::> namespace
with C<&foo> syntax or through a reference.  Some subroutines
in this package cannot yet be called that way, but must be
called as barewords.  Something like this will work:

    BEGIN { *shove = \&CORE::push; }
    shove @array, 1,2,3; # pushes on to @array

=item CORE::%s is not a keyword

(F) The CORE:: namespace is reserved for Perl keywords.

=item Corrupted regexp opcode %d > %d

(P) This is either an error in Perl, or, if you're using
one, your L<custom regular expression engine|perlreapi>.  If not the
latter, report the problem through the L<perlbug> utility.

=item corrupted regexp pointers

(P) The regular expression engine got confused by what the regular
expression compiler gave it.

=item corrupted regexp program

(P) The regular expression engine got passed a regexp program without a
valid magic number.

=item Corrupt malloc ptr 0x%x at 0x%x

(P) The malloc package that comes with Perl had an internal failure.

=item Count after length/code in unpack

(F) You had an unpack template indicating a counted-length string, but
you have also specified an explicit size for the string.  See
L<perlfunc/pack>.

=for comment
The following are used in lib/diagnostics.t for testing two =items that
share the same description.  Changes here need to be propagated to there

=item Deep recursion on anonymous subroutine

=item Deep recursion on subroutine "%s"

(W recursion) This subroutine has called itself (directly or indirectly)
100 times more than it has returned.  This probably indicates an
infinite recursion, unless you're writing strange benchmark programs, in
which case it indicates something else.

This threshold can be changed from 100, by recompiling the F<perl> binary,
setting the C pre-processor macro C<PERL_SUB_DEPTH_WARN> to the desired value.

=item (?(DEFINE)....) does not allow branches in regex; marked by
S<<-- HERE> in m/%s/

(F) You used something like C<(?(DEFINE)...|..)> which is illegal.  The
most likely cause of this error is that you left out a parenthesis inside
of the C<....> part.

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item %s defines neither package nor VERSION--version check failed

(F) You said something like "use Module 42" but in the Module file
there are neither package declarations nor a C<$VERSION>.

=item delete argument is index/value array slice, use array slice

(F) You used index/value array slice syntax (C<%array[...]>) as
the argument to C<delete>.  You probably meant C<@array[...]> with
an @ symbol instead.

=item delete argument is key/value hash slice, use hash slice

(F) You used key/value hash slice syntax (C<%hash{...}>) as the argument to
C<delete>.  You probably meant C<@hash{...}> with an @ symbol instead.

=item delete argument is not a HASH or ARRAY element or slice

(F) The argument to C<delete> must be either a hash or array element,
such as:

    $foo{$bar}
    $ref->{"susie"}[12]

or a hash or array slice, such as:

    @foo[$bar, $baz, $xyzzy]
    @{$ref->[12]}{"susie", "queue"}

=item Delimiter for here document is too long

(F) In a here document construct like C<<<FOO>, the label C<FOO> is too
long for Perl to handle.  You have to be seriously twisted to write code
that triggers this error.

=item Deprecated use of my() in false conditional

(D deprecated) You used a declaration similar to C<my $x if 0>.  There
has been a long-standing bug in Perl that causes a lexical variable
not to be cleared at scope exit when its declaration includes a false
conditional.  Some people have exploited this bug to achieve a kind of
static variable.  Since we intend to fix this bug, we don't want people
relying on this behavior.  You can achieve a similar static effect by
declaring the variable in a separate block outside the function, eg

    sub f { my $x if 0; return $x++ }

becomes

    { my $x; sub f { return $x++ } }

Beginning with perl 5.10.0, you can also use C<state> variables to have
lexicals that are initialized only once (see L<feature>):

    sub f { state $x; return $x++ }

=item DESTROY created new reference to dead object '%s'

(F) A DESTROY() method created a new reference to the object which is
just being DESTROYed.  Perl is confused, and prefers to abort rather
than to create a dangling reference.

=item Did not produce a valid header

See Server error.

=item %s did not return a true value

(F) A required (or used) file must return a true value to indicate that
it compiled correctly and ran its initialization code correctly.  It's
traditional to end such a file with a "1;", though any true value would
do.  See L<perlfunc/require>.

=item (Did you mean &%s instead?)

(W misc) You probably referred to an imported subroutine &FOO as $FOO or
some such.

=item (Did you mean "local" instead of "our"?)

(W misc) Remember that "our" does not localize the declared global
variable.  You have declared it again in the same lexical scope, which
seems superfluous.

=item (Did you mean $ or @ instead of %?)

(W) You probably said %hash{$key} when you meant $hash{$key} or
@hash{@keys}.  On the other hand, maybe you just meant %hash and got
carried away.

=item Died

(F) You passed die() an empty string (the equivalent of C<die "">) or
you called it with no args and C<$@> was empty.

=item Document contains no data

See Server error.

=item %s does not define %s::VERSION--version check failed

(F) You said something like "use Module 42" but the Module did not
define a C<$VERSION>.

=item '/' does not take a repeat count

(F) You cannot put a repeat count of any kind right after the '/' code.
See L<perlfunc/pack>.

=item Don't know how to get file name

(P) C<PerlIO_getname>, a perl internal I/O function specific to VMS, was
somehow called on another platform.  This should not happen.

=item Don't know how to handle magic of type \%o

(P) The internal handling of magical variables has been cursed.

=item do_study: out of memory

(P) This should have been caught by safemalloc() instead.

=item (Do you need to predeclare %s?)

(S syntax) This is an educated guess made in conjunction with the message
"%s found where operator expected".  It often means a subroutine or module
name is being referenced that hasn't been declared yet.  This may be
because of ordering problems in your file, or because of a missing
"sub", "package", "require", or "use" statement.  If you're referencing
something that isn't defined yet, you don't actually have to define the
subroutine or package before the current location.  You can use an empty
"sub foo;" or "package FOO;" to enter a "forward" declaration.

=item dump() better written as CORE::dump()

(W misc) You used the obsolescent C<dump()> built-in function, without fully
qualifying it as C<CORE::dump()>.  Maybe it's a typo.  See L<perlfunc/dump>.

=item dump is not supported

(F) Your machine doesn't support dump/undump.

=item Duplicate free() ignored

(S malloc) An internal routine called free() on something that had
already been freed.

=item Duplicate modifier '%c' after '%c' in %s

(W unpack) You have applied the same modifier more than once after a
type in a pack template.  See L<perlfunc/pack>.

=item elseif should be elsif

(S syntax) There is no keyword "elseif" in Perl because Larry thinks
it's ugly.  Your code will be interpreted as an attempt to call a method
named "elseif" for the class returned by the following block.  This is
unlikely to be what you want.

=item Empty \%c in regex; marked by S<<-- HERE> in m/%s/

=item Empty \%c{} in regex; marked by S<<-- HERE> in m/%s/

(F) C<\p> and C<\P> are used to introduce a named Unicode property, as
described in L<perlunicode> and L<perlre>.  You used C<\p> or C<\P> in
a regular expression without specifying the property name.

=item entering effective %s failed

(F) While under the C<use filetest> pragma, switching the real and
effective uids or gids failed.

=item %ENV is aliased to %s

(F) You're running under taint mode, and the C<%ENV> variable has been
aliased to another hash, so it doesn't reflect anymore the state of the
program's environment.  This is potentially insecure.

=item Error converting file specification %s

(F) An error peculiar to VMS.  Because Perl may have to deal with file
specifications in either VMS or Unix syntax, it converts them to a
single form when it must operate on them directly.  Either you've passed
an invalid file specification to Perl, or you've found a case the
conversion routines don't handle.  Drat.

=item Eval-group in insecure regular expression

(F) Perl detected tainted data when trying to compile a regular
expression that contains the C<(?{ ... })> zero-width assertion, which
is unsafe.  See L<perlre/(?{ code })>, and L<perlsec>.

=item Eval-group not allowed at runtime, use re 'eval' in regex m/%s/

(F) Perl tried to compile a regular expression containing the
C<(?{ ... })> zero-width assertion at run time, as it would when the
pattern contains interpolated values.  Since that is a security risk,
it is not allowed.  If you insist, you may still do this by using the
C<re 'eval'> pragma or by explicitly building the pattern from an
interpolated string at run time and using that in an eval().  See
L<perlre/(?{ code })>.

=item Eval-group not allowed, use re 'eval' in regex m/%s/

(F) A regular expression contained the C<(?{ ... })> zero-width
assertion, but that construct is only allowed when the C<use re 'eval'>
pragma is in effect.  See L<perlre/(?{ code })>.

=item EVAL without pos change exceeded limit in regex; marked by
S<<-- HERE> in m/%s/

(F) You used a pattern that nested too many EVAL calls without consuming
any text.  Restructure the pattern so that text is consumed.

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item Excessively long <> operator

(F) The contents of a <> operator may not exceed the maximum size of a
Perl identifier.  If you're just trying to glob a long list of
filenames, try using the glob() operator, or put the filenames into a
variable and glob that.

=item exec? I'm not *that* kind of operating system

(F) The C<exec> function is not implemented on some systems, e.g., Symbian
OS.  See L<perlport>.

=item Execution of %s aborted due to compilation errors.

(F) The final summary message when a Perl compilation fails.

=item exists argument is not a HASH or ARRAY element or a subroutine

(F) The argument to C<exists> must be a hash or array element or a
subroutine with an ampersand, such as:

    $foo{$bar}
    $ref->{"susie"}[12]
    &do_something

=item exists argument is not a subroutine name

(F) The argument to C<exists> for C<exists &sub> must be a subroutine name,
and not a subroutine call.  C<exists &sub()> will generate this error.

=item Exiting eval via %s

(W exiting) You are exiting an eval by unconventional means, such as a
goto, or a loop control statement.

=item Exiting format via %s

(W exiting) You are exiting a format by unconventional means, such as a
goto, or a loop control statement.

=item Exiting pseudo-block via %s

(W exiting) You are exiting a rather special block construct (like a
sort block or subroutine) by unconventional means, such as a goto, or a
loop control statement.  See L<perlfunc/sort>.

=item Exiting subroutine via %s

(W exiting) You are exiting a subroutine by unconventional means, such
as a goto, or a loop control statement.

=item Exiting substitution via %s

(W exiting) You are exiting a substitution by unconventional means, such
as a return, a goto, or a loop control statement.

=item Expecting close bracket in regex; marked by S<<-- HERE> in m/%s/

(F) You wrote something like

 (?13

to denote a capturing group of the form
L<C<(?I<PARNO>)>|perlre/(?PARNO) (?-PARNO) (?+PARNO) (?R) (?0)>,
but omitted the C<")">.

=item Expecting '(?flags:(?[...' in regex; marked by S<<-- HERE> in m/%s/

(F) The C<(?[...])> extended character class regular expression construct
only allows character classes (including character class escapes like
C<\d>), operators, and parentheses.  The one exception is C<(?flags:...)>
containing at least one flag and exactly one C<(?[...])> construct.
This allows a regular expression containing just C<(?[...])> to be
interpolated.  If you see this error message, then you probably
have some other C<(?...)> construct inside your character class.  See
L<perlrecharclass/Extended Bracketed Character Classes>.

=item Experimental aliasing via reference not enabled

(F) To do aliasing via references, you must first enable the feature:

    no warnings "experimental::refaliasing";
    use feature "refaliasing";
    \$x = \$y;

=item Experimental %s on scalar is now forbidden

(F) An experimental feature added in Perl 5.14 allowed C<each>, C<keys>,
C<push>, C<pop>, C<shift>, C<splice>, C<unshift>, and C<values> to be called with a
scalar argument.  This experiment is considered unsuccessful, and
has been removed.  The C<postderef> feature may meet your needs better.

=item Experimental subroutine signatures not enabled

(F) To use subroutine signatures, you must first enable them:

    no warnings "experimental::signatures";
    use feature "signatures";
    sub foo ($left, $right) { ... }

=item Experimental "%s" subs not enabled

(F) To use lexical subs, you must first enable them:

    no warnings 'experimental::lexical_subs';
    use feature 'lexical_subs';
    my sub foo { ... }

=item Explicit blessing to '' (assuming package main)

(W misc) You are blessing a reference to a zero length string.  This has
the effect of blessing the reference into the package main.  This is
usually not what you want.  Consider providing a default target package,
e.g. bless($ref, $p || 'MyPackage');

=item %s: Expression syntax

(A) You've accidentally run your script through B<csh> instead of Perl.
Check the #! line, or manually feed your script into Perl yourself.

=item %s failed--call queue aborted

(F) An untrapped exception was raised while executing a UNITCHECK,
CHECK, INIT, or END subroutine.  Processing of the remainder of the
queue of such routines has been prematurely ended.

=item Failed to close in-place edit file %s: %s

(F) Closing an output file from in-place editing, as with the C<-i>
command-line switch, failed.

=item False [] range "%s" in regex; marked by S<<-- HERE> in m/%s/

(W regexp)(F) A character class range must start and end at a literal
character, not another character class like C<\d> or C<[:alpha:]>.  The "-"
in your false range is interpreted as a literal "-".  In a C<(?[...])>
construct, this is an error, rather than a warning.  Consider quoting
the "-", "\-".  The S<<-- HERE> shows whereabouts in the regular expression
the problem was discovered.  See L<perlre>.

=item Fatal VMS error (status=%d) at %s, line %d

(P) An error peculiar to VMS.  Something untoward happened in a VMS
system service or RTL routine; Perl's exit status should provide more
details.  The filename in "at %s" and the line number in "line %d" tell
you which section of the Perl source code is distressed.

=item fcntl is not implemented

(F) Your machine apparently doesn't implement fcntl().  What is this, a
PDP-11 or something?

=item FETCHSIZE returned a negative value

(F) A tied array claimed to have a negative number of elements, which
is not possible.

=item Field too wide in 'u' format in pack

(W pack) Each line in an uuencoded string starts with a length indicator
which can't encode values above 63.  So there is no point in asking for
a line length bigger than that.  Perl will behave as if you specified
C<u63> as the format.

=item Filehandle %s opened only for input

(W io) You tried to write on a read-only filehandle.  If you intended
it to be a read-write filehandle, you needed to open it with "+<" or
"+>" or "+>>" instead of with "<" or nothing.  If you intended only to
write the file, use ">" or ">>".  See L<perlfunc/open>.

=item Filehandle %s opened only for output

(W io) You tried to read from a filehandle opened only for writing, If
you intended it to be a read/write filehandle, you needed to open it
with "+<" or "+>" or "+>>" instead of with ">".  If you intended only to
read from the file, use "<".  See L<perlfunc/open>.  Another possibility
is that you attempted to open filedescriptor 0 (also known as STDIN) for
output (maybe you closed STDIN earlier?).

=item Filehandle %s reopened as %s only for input

(W io) You opened for reading a filehandle that got the same filehandle id
as STDOUT or STDERR.  This occurred because you closed STDOUT or STDERR
previously.

=item Filehandle STDIN reopened as %s only for output

(W io) You opened for writing a filehandle that got the same filehandle id
as STDIN.  This occurred because you closed STDIN previously.

=item Final $ should be \$ or $name

(F) You must now decide whether the final $ in a string was meant to be
a literal dollar sign, or was meant to introduce a variable name that
happens to be missing.  So you have to put either the backslash or the
name.

=item flock() on closed filehandle %s

(W closed) The filehandle you're attempting to flock() got itself closed
some time before now.  Check your control flow.  flock() operates on
filehandles.  Are you attempting to call flock() on a dirhandle by the
same name?

=item Format not terminated

(F) A format must be terminated by a line with a solitary dot.  Perl got
to the end of your file without finding such a line.

=item Format %s redefined

(W redefine) You redefined a format.  To suppress this warning, say

    {
	no warnings 'redefine';
	eval "format NAME =...";
    }

=item Found = in conditional, should be ==

(W syntax) You said

    if ($foo = 123)

when you meant

    if ($foo == 123)

(or something like that).

=item %s found where operator expected

(S syntax) The Perl lexer knows whether to expect a term or an operator.
If it sees what it knows to be a term when it was expecting to see an
operator, it gives you this warning.  Usually it indicates that an
operator or delimiter was omitted, such as a semicolon.

=item gdbm store returned %d, errno %d, key "%s"

(S) A warning from the GDBM_File extension that a store failed.

=item gethostent not implemented

(F) Your C library apparently doesn't implement gethostent(), probably
because if it did, it'd feel morally obligated to return every hostname
on the Internet.

=item get%sname() on closed socket %s

(W closed) You tried to get a socket or peer socket name on a closed
socket.  Did you forget to check the return value of your socket() call?

=item getpwnam returned invalid UIC %#o for user "%s"

(S) A warning peculiar to VMS.  The call to C<sys$getuai> underlying the
C<getpwnam> operator returned an invalid UIC.

=item getsockopt() on closed socket %s

(W closed) You tried to get a socket option on a closed socket.  Did you
forget to check the return value of your socket() call?  See
L<perlfunc/getsockopt>.

=item given is experimental

(S experimental::smartmatch) C<given> depends on smartmatch, which
is experimental, so its behavior may change or even be removed
in any future release of perl.  See the explanation under
L<perlsyn/Experimental Details on given and when>.

=item Global symbol "%s" requires explicit package name (did you forget to
declare "my %s"?)

(F) You've said "use strict" or "use strict vars", which indicates 
that all variables must either be lexically scoped (using "my" or "state"), 
declared beforehand using "our", or explicitly qualified to say 
which package the global variable is in (using "::").

=item glob failed (%s)

(S glob) Something went wrong with the external program(s) used
for C<glob> and C<< <*.c> >>.  Usually, this means that you supplied a C<glob>
pattern that caused the external program to fail and exit with a
nonzero status.  If the message indicates that the abnormal exit
resulted in a coredump, this may also mean that your csh (C shell)
is broken.  If so, you should change all of the csh-related variables
in config.sh:  If you have tcsh, make the variables refer to it as
if it were csh (e.g. C<full_csh='/usr/bin/tcsh'>); otherwise, make them
all empty (except that C<d_csh> should be C<'undef'>) so that Perl will
think csh is missing.  In either case, after editing config.sh, run
C<./Configure -S> and rebuild Perl.

=item Glob not terminated

(F) The lexer saw a left angle bracket in a place where it was expecting
a term, so it's looking for the corresponding right angle bracket, and
not finding it.  Chances are you left some needed parentheses out
earlier in the line, and you really meant a "less than".

=item gmtime(%f) failed

(W overflow) You called C<gmtime> with a number that it could not handle:
too large, too small, or NaN.  The returned value is C<undef>.

=item gmtime(%f) too large

(W overflow) You called C<gmtime> with a number that was larger than
it can reliably handle and C<gmtime> probably returned the wrong
date.  This warning is also triggered with NaN (the special
not-a-number value).

=item gmtime(%f) too small

(W overflow) You called C<gmtime> with a number that was smaller than
it can reliably handle and C<gmtime> probably returned the wrong date.

=item Got an error from DosAllocMem

(P) An error peculiar to OS/2.  Most probably you're using an obsolete
version of Perl, and this should not happen anyway.

=item goto must have label

(F) Unlike with "next" or "last", you're not allowed to goto an
unspecified destination.  See L<perlfunc/goto>.

=item Goto undefined subroutine%s

(F) You tried to call a subroutine with C<goto &sub> syntax, but
the indicated subroutine hasn't been defined, or if it was, it
has since been undefined.

=item Group name must start with a non-digit word character in regex; marked by 
S<<-- HERE> in m/%s/

(F) Group names must follow the rules for perl identifiers, meaning
they must start with a non-digit word character.  A common cause of
this error is using (?&0) instead of (?0).  See L<perlre>.

=item ()-group starts with a count

(F) A ()-group started with a count.  A count is supposed to follow
something: a template character or a ()-group.  See L<perlfunc/pack>.

=item %s had compilation errors.

(F) The final summary message when a C<perl -c> fails.

=item Had to create %s unexpectedly

(S internal) A routine asked for a symbol from a symbol table that ought
to have existed already, but for some reason it didn't, and had to be
created on an emergency basis to prevent a core dump.

=item %s has too many errors

(F) The parser has given up trying to parse the program after 10 errors.
Further error messages would likely be uninformative.

=item Having more than one /%c regexp modifier is deprecated

(D deprecated, regexp) You used the indicated regular expression pattern
modifier at least twice in a string of modifiers.  It is deprecated to
do this with this particular modifier, to allow future extensions to the
Perl language.

=item Hexadecimal float: exponent overflow

(W overflow) The hexadecimal floating point has a larger exponent
than the floating point supports.

=item Hexadecimal float: exponent underflow

(W overflow) The hexadecimal floating point has a smaller exponent
than the floating point supports.

=item Hexadecimal float: internal error (%s)

(F) Something went horribly bad in hexadecimal float handling.

=item Hexadecimal float: mantissa overflow

(W overflow) The hexadecimal floating point literal had more bits in
the mantissa (the part between the 0x and the exponent, also known as
the fraction or the significand) than the floating point supports.

=item Hexadecimal float: precision loss

(W overflow) The hexadecimal floating point had internally more
digits than could be output.  This can be caused by unsupported
long double formats, or by 64-bit integers not being available
(needed to retrieve the digits under some configurations).

=item Hexadecimal float: unsupported long double format

(F) You have configured Perl to use long doubles but
the internals of the long double format are unknown;
therefore the hexadecimal float output is impossible.

=item Hexadecimal number > 0xffffffff non-portable

(W portable) The hexadecimal number you specified is larger than 2**32-1
(4294967295) and therefore non-portable between systems.  See
L<perlport> for more on portability concerns.

=item Identifier too long

(F) Perl limits identifiers (names for variables, functions, etc.) to
about 250 characters for simple names, and somewhat more for compound
names (like C<$A::B>).  You've exceeded Perl's limits.  Future versions
of Perl are likely to eliminate these arbitrary limitations.

=item Ignoring zero length \N{} in character class in regex; marked by
S<<-- HERE> in m/%s/

(W regexp) Named Unicode character escapes (C<\N{...}>) may return a
zero-length sequence.  When such an escape is used in a character
class its behavior is not well defined.  Check that the correct
escape has been used, and the correct charname handler is in scope.

=item Illegal binary digit %s

(F) You used a digit other than 0 or 1 in a binary number.

=item Illegal binary digit %s ignored

(W digit) You may have tried to use a digit other than 0 or 1 in a
binary number.  Interpretation of the binary number stopped before the
offending digit.

=item Illegal character after '_' in prototype for %s : %s

(W illegalproto) An illegal character was found in a prototype
declaration.  The '_' in a prototype must be followed by a ';',
indicating the rest of the parameters are optional, or one of '@'
or '%', since those two will accept 0 or more final parameters.

=item Illegal character \%o (carriage return)

(F) Perl normally treats carriage returns in the program text as it
would any other whitespace, which means you should never see this error
when Perl was built using standard options.  For some reason, your
version of Perl appears to have been built without this support.  Talk
to your Perl administrator.

=item Illegal character in prototype for %s : %s

(W illegalproto) An illegal character was found in a prototype declaration.
Legal characters in prototypes are $, @, %, *, ;, [, ], &, \, and +.
Perhaps you were trying to write a subroutine signature but didn't enable
that feature first (C<use feature 'signatures'>), so your signature was
instead interpreted as a bad prototype.

=item Illegal declaration of anonymous subroutine

(F) When using the C<sub> keyword to construct an anonymous subroutine,
you must always specify a block of code.  See L<perlsub>.

=item Illegal declaration of subroutine %s

(F) A subroutine was not declared correctly.  See L<perlsub>.

=item Illegal division by zero

(F) You tried to divide a number by 0.  Either something was wrong in
your logic, or you need to put a conditional in to guard against
meaningless input.

=item Illegal hexadecimal digit %s ignored

(W digit) You may have tried to use a character other than 0 - 9 or
A - F, a - f in a hexadecimal number.  Interpretation of the hexadecimal
number stopped before the illegal character.

=item Illegal modulus zero

(F) You tried to divide a number by 0 to get the remainder.  Most
numbers don't take to this kindly.

=item Illegal number of bits in vec

(F) The number of bits in vec() (the third argument) must be a power of
two from 1 to 32 (or 64, if your platform supports that).

=item Illegal octal digit %s

(F) You used an 8 or 9 in an octal number.

=item Illegal octal digit %s ignored

(W digit) You may have tried to use an 8 or 9 in an octal number.
Interpretation of the octal number stopped before the 8 or 9.

=item Illegal pattern in regex; marked by S<<-- HERE> in m/%s/

(F) You wrote something like

 (?+foo)

The C<"+"> is valid only when followed by digits, indicating a
capturing group.  See
L<C<(?I<PARNO>)>|perlre/(?PARNO) (?-PARNO) (?+PARNO) (?R) (?0)>.

=item Illegal suidscript

(F) The script run under suidperl was somehow illegal.

=item Illegal switch in PERL5OPT: -%c

(X) The PERL5OPT environment variable may only be used to set the
following switches: B<-[CDIMUdmtw]>.

=item Illegal user-defined property name

(F) You specified a Unicode-like property name in a regular expression
pattern (using C<\p{}> or C<\P{}>) that Perl knows isn't an official
Unicode property, and was likely meant to be a user-defined property
name, but it can't be one of those, as they must begin with either C<In>
or C<Is>.  Check the spelling.  See also
L</Can't find Unicode property definition "%s">.

=item Ill-formed CRTL environ value "%s"

(W internal) A warning peculiar to VMS.  Perl tried to read the CRTL's
internal environ array, and encountered an element without the C<=>
delimiter used to separate keys from values.  The element is ignored.

=item Ill-formed message in prime_env_iter: |%s|

(W internal) A warning peculiar to VMS.  Perl tried to read a logical
name or CLI symbol definition when preparing to iterate over %ENV, and
didn't see the expected delimiter between key and value, so the line was
ignored.

=item (in cleanup) %s

(W misc) This prefix usually indicates that a DESTROY() method raised
the indicated exception.  Since destructors are usually called by the
system at arbitrary points during execution, and often a vast number of
times, the warning is issued only once for any number of failures that
would otherwise result in the same message being repeated.

Failure of user callbacks dispatched using the C<G_KEEPERR> flag could
also result in this warning.  See L<perlcall/G_KEEPERR>.

=item Incomplete expression within '(?[ ])' in regex; marked by S<<-- HERE>
in m/%s/

(F) There was a syntax error within the C<(?[ ])>.  This can happen if the
expression inside the construct was completely empty, or if there are
too many or few operands for the number of operators.  Perl is not smart
enough to give you a more precise indication as to what is wrong.

=item Inconsistent hierarchy during C3 merge of class '%s': merging failed on 
parent '%s'

(F) The method resolution order (MRO) of the given class is not
C3-consistent, and you have enabled the C3 MRO for this class.  See the C3
documentation in L<mro> for more information.

=item Infinite recursion in regex

(F) You used a pattern that references itself without consuming any input
text.  You should check the pattern to ensure that recursive patterns
either consume text or fail.

=item Initialization of state variables in list context currently forbidden

(F) Currently the implementation of "state" only permits the
initialization of scalar variables in scalar context.  Re-write
C<state ($a) = 42> as C<state $a = 42> to change from list to scalar
context.  Constructions such as C<state (@a) = foo()> will be
supported in a future perl release.

=item %%s[%s] in scalar context better written as $%s[%s]

(W syntax) In scalar context, you've used an array index/value slice
(indicated by %) to select a single element of an array.  Generally
it's better to ask for a scalar value (indicated by $).  The difference
is that C<$foo[&bar]> always behaves like a scalar, both in the value it
returns and when evaluating its argument, while C<%foo[&bar]> provides
a list context to its subscript, which can do weird things if you're
expecting only one subscript.  When called in list context, it also
returns the index (what C<&bar> returns) in addition to the value.

=item %%s{%s} in scalar context better written as $%s{%s}

(W syntax) In scalar context, you've used a hash key/value slice
(indicated by %) to select a single element of a hash.  Generally it's
better to ask for a scalar value (indicated by $).  The difference
is that C<$foo{&bar}> always behaves like a scalar, both in the value
it returns and when evaluating its argument, while C<@foo{&bar}> and
provides a list context to its subscript, which can do weird things
if you're expecting only one subscript.  When called in list context,
it also returns the key in addition to the value.

=item Insecure dependency in %s

(F) You tried to do something that the tainting mechanism didn't like.
The tainting mechanism is turned on when you're running setuid or
setgid, or when you specify B<-T> to turn it on explicitly.  The
tainting mechanism labels all data that's derived directly or indirectly
from the user, who is considered to be unworthy of your trust.  If any
such data is used in a "dangerous" operation, you get this error.  See
L<perlsec> for more information.

=item Insecure directory in %s

(F) You can't use system(), exec(), or a piped open in a setuid or
setgid script if C<$ENV{PATH}> contains a directory that is writable by
the world.  Also, the PATH must not contain any relative directory.
See L<perlsec>.

=item Insecure $ENV{%s} while running %s

(F) You can't use system(), exec(), or a piped open in a setuid or
setgid script if any of C<$ENV{PATH}>, C<$ENV{IFS}>, C<$ENV{CDPATH}>,
C<$ENV{ENV}>, C<$ENV{BASH_ENV}> or C<$ENV{TERM}> are derived from data
supplied (or potentially supplied) by the user.  The script must set
the path to a known value, using trustworthy data.  See L<perlsec>.

=item Insecure user-defined property %s

(F) Perl detected tainted data when trying to compile a regular
expression that contains a call to a user-defined character property
function, i.e. C<\p{IsFoo}> or C<\p{InFoo}>.
See L<perlunicode/User-Defined Character Properties> and L<perlsec>.

=item Integer overflow in format string for %s

(F) The indexes and widths specified in the format string of C<printf()>
or C<sprintf()> are too large.  The numbers must not overflow the size of
integers for your architecture.

=item Integer overflow in %s number

(S overflow) The hexadecimal, octal or binary number you have specified
either as a literal or as an argument to hex() or oct() is too big for
your architecture, and has been converted to a floating point number.
On a 32-bit architecture the largest hexadecimal, octal or binary number
representable without overflow is 0xFFFFFFFF, 037777777777, or
0b11111111111111111111111111111111 respectively.  Note that Perl
transparently promotes all numbers to a floating point representation
internally--subject to loss of precision errors in subsequent
operations.

=item Integer overflow in srand

(S overflow) The number you have passed to srand is too big to fit
in your architecture's integer representation.  The number has been
replaced with the largest integer supported (0xFFFFFFFF on 32-bit
architectures).  This means you may be getting less randomness than
you expect, because different random seeds above the maximum will
return the same sequence of random numbers.

=item Integer overflow in version

=item Integer overflow in version %d

(W overflow) Some portion of a version initialization is too large for
the size of integers for your architecture.  This is not a warning
because there is no rational reason for a version to try and use an
element larger than typically 2**32.  This is usually caused by trying
to use some odd mathematical operation as a version, like 100/9.

=item Internal disaster in regex; marked by S<<-- HERE> in m/%s/

(P) Something went badly wrong in the regular expression parser.
The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item Internal inconsistency in tracking vforks

(S) A warning peculiar to VMS.  Perl keeps track of the number of times
you've called C<fork> and C<exec>, to determine whether the current call
to C<exec> should affect the current script or a subprocess (see
L<perlvms/"exec LIST">).  Somehow, this count has become scrambled, so
Perl is making a guess and treating this C<exec> as a request to
terminate the Perl script and execute the specified command.

=item internal %<num>p might conflict with future printf extensions

(S internal) Perl's internal routine that handles C<printf> and C<sprintf>
formatting follows a slightly different set of rules when called from
C or XS code.  Specifically, formats consisting of digits followed
by "p" (e.g., "%7p") are reserved for future use.  If you see this
message, then an XS module tried to call that routine with one such
reserved format.

=item Internal urp in regex; marked by S<<-- HERE> in m/%s/

(P) Something went badly awry in the regular expression parser.  The
S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item %s (...) interpreted as function

(W syntax) You've run afoul of the rule that says that any list operator
followed by parentheses turns into a function, with all the list
operators arguments found inside the parentheses.  See
L<perlop/Terms and List Operators (Leftward)>.

=item In '(?...)', the '(' and '?' must be adjacent in regex;
marked by S<<-- HERE> in m/%s/

(F) The two-character sequence C<"(?"> in this context in a regular
expression pattern should be an indivisible token, with nothing
intervening between the C<"("> and the C<"?">, but you separated them
with whitespace.

=item Invalid %s attribute: %s

(F) The indicated attribute for a subroutine or variable was not recognized
by Perl or by a user-supplied handler.  See L<attributes>.

=item Invalid %s attributes: %s

(F) The indicated attributes for a subroutine or variable were not
recognized by Perl or by a user-supplied handler.  See L<attributes>.

=item Invalid character in charnames alias definition; marked by
S<<-- HERE> in '%s

(F) You tried to create a custom alias for a character name, with
the C<:alias> option to C<use charnames> and the specified character in
the indicated name isn't valid.  See L<charnames/CUSTOM ALIASES>.

=item Invalid \0 character in %s for %s: %s\0%s

(W syscalls) Embedded \0 characters in pathnames or other system call
arguments produce a warning as of 5.20.  The parts after the \0 were
formerly ignored by system calls.

=item Invalid character in \N{...}; marked by S<<-- HERE> in \N{%s}

(F) Only certain characters are valid for character names.  The
indicated one isn't.  See L<charnames/CUSTOM ALIASES>.

=item Invalid conversion in %s: "%s"

(W printf) Perl does not understand the given format conversion.  See
L<perlfunc/sprintf>.

=item Invalid escape in the specified encoding in regex; marked by
S<<-- HERE> in m/%s/

(W regexp)(F) The numeric escape (for example C<\xHH>) of value < 256
didn't correspond to a single character through the conversion
from the encoding specified by the encoding pragma.
The escape was replaced with REPLACEMENT CHARACTER (U+FFFD)
instead, except within S<C<(?[   ])>>, where it is a fatal error.
The S<<-- HERE> shows whereabouts in the regular expression the
escape was discovered.

=item Invalid hexadecimal number in \N{U+...}

=item Invalid hexadecimal number in \N{U+...} in regex; marked by
S<<-- HERE> in m/%s/

(F) The character constant represented by C<...> is not a valid hexadecimal
number.  Either it is empty, or you tried to use a character other than
0 - 9 or A - F, a - f in a hexadecimal number.

=item Invalid module name %s with -%c option: contains single ':'

(F) The module argument to perl's B<-m> and B<-M> command-line options
cannot contain single colons in the module name, but only in the
arguments after "=".  In other words, B<-MFoo::Bar=:baz> is ok, but
B<-MFoo:Bar=baz> is not.

=item Invalid mro name: '%s'

(F) You tried to C<mro::set_mro("classname", "foo")> or C<use mro 'foo'>,
where C<foo> is not a valid method resolution order (MRO).  Currently,
the only valid ones supported are C<dfs> and C<c3>, unless you have loaded
a module that is a MRO plugin.  See L<mro> and L<perlmroapi>.

=item Invalid negative number (%s) in chr

(W utf8) You passed a negative number to C<chr>.  Negative numbers are
not valid character numbers, so it returns the Unicode replacement
character (U+FFFD).

=item Invalid number '%s' for -C option.

(F) You supplied a number to the -C option that either has extra leading
zeroes or overflows perl's unsigned integer representation.

=item invalid option -D%c, use -D'' to see choices

(S debugging) Perl was called with invalid debugger flags.  Call perl
with the B<-D> option with no flags to see the list of acceptable values.
See also L<perlrun/-Dletters>.

=item Invalid quantifier in {,} in regex; marked by S<<-- HERE> in m/%s/

(F) The pattern looks like a {min,max} quantifier, but the min or max
could not be parsed as a valid number - either it has leading zeroes,
or it represents too big a number to cope with.  The S<<-- HERE> shows
where in the regular expression the problem was discovered.  See L<perlre>.

=item Invalid [] range "%s" in regex; marked by S<<-- HERE> in m/%s/

(F) The range specified in a character class had a minimum character
greater than the maximum character.  One possibility is that you forgot the
C<{}> from your ending C<\x{}> - C<\x> without the curly braces can go only
up to C<ff>.  The S<<-- HERE> shows whereabouts in the regular expression the
problem was discovered.  See L<perlre>.

=item Invalid range "%s" in transliteration operator

(F) The range specified in the tr/// or y/// operator had a minimum
character greater than the maximum character.  See L<perlop>.

=item Invalid separator character %s in attribute list

(F) Something other than a colon or whitespace was seen between the
elements of an attribute list.  If the previous attribute had a
parenthesised parameter list, perhaps that list was terminated too soon.
See L<attributes>.

=item Invalid separator character %s in PerlIO layer specification %s

(W layer) When pushing layers onto the Perl I/O system, something other
than a colon or whitespace was seen between the elements of a layer list.
If the previous attribute had a parenthesised parameter list, perhaps that
list was terminated too soon.

=item Invalid strict version format (%s)

(F) A version number did not meet the "strict" criteria for versions.
A "strict" version number is a positive decimal number (integer or
decimal-fraction) without exponentiation or else a dotted-decimal
v-string with a leading 'v' character and at least three components.
The parenthesized text indicates which criteria were not met.
See the L<version> module for more details on allowed version formats.

=item Invalid type '%s' in %s

(F) The given character is not a valid pack or unpack type.
See L<perlfunc/pack>.

(W) The given character is not a valid pack or unpack type but used to be
silently ignored.

=item Invalid version format (%s)

(F) A version number did not meet the "lax" criteria for versions.
A "lax" version number is a positive decimal number (integer or
decimal-fraction) without exponentiation or else a dotted-decimal
v-string.  If the v-string has fewer than three components, it
must have a leading 'v' character.  Otherwise, the leading 'v' is
optional.  Both decimal and dotted-decimal versions may have a
trailing "alpha" component separated by an underscore character
after a fractional or dotted-decimal component.  The parenthesized
text indicates which criteria were not met.  See the L<version> module
for more details on allowed version formats.

=item Invalid version object

(F) The internal structure of the version object was invalid.
Perhaps the internals were modified directly in some way or
an arbitrary reference was blessed into the "version" class.

=item In '(*VERB...)', the '(' and '*' must be adjacent in regex;
marked by S<<-- HERE> in m/%s/

(F) The two-character sequence C<"(*"> in
this context in a regular expression pattern should be an
indivisible token, with nothing intervening between the C<"(">
and the C<"*">, but you separated them.

=item ioctl is not implemented

(F) Your machine apparently doesn't implement ioctl(), which is pretty
strange for a machine that supports C.

=item ioctl() on unopened %s

(W unopened) You tried ioctl() on a filehandle that was never opened.
Check your control flow and number of arguments.

=item IO layers (like '%s') unavailable

(F) Your Perl has not been configured to have PerlIO, and therefore
you cannot use IO layers.  To have PerlIO, Perl must be configured
with 'useperlio'.

=item IO::Socket::atmark not implemented on this architecture

(F) Your machine doesn't implement the sockatmark() functionality,
neither as a system call nor an ioctl call (SIOCATMARK).

=item '%s' is an unknown bound type in regex; marked by S<<-- HERE> in m/%s/

(F) You used C<\b{...}> or C<\B{...}> and the C<...> is not known to
Perl.  The current valid ones are given in
L<perlrebackslash/\b{}, \b, \B{}, \B>.

=item %s() is deprecated on :utf8 handles

(W deprecated) The sysread(), recv(), syswrite() and send() operators are
deprecated on handles that have the C<:utf8> layer, either explicitly, or
implicitly, eg., with the C<:encoding(UTF-16LE)> layer.

Both sysread() and recv() currently use only the C<:utf8> flag for the stream,
ignoring the actual layers.  Since sysread() and recv() do no UTF-8
validation they can end up creating invalidly encoded scalars.

Similarly, syswrite() and send() use only the C<:utf8> flag, otherwise ignoring
any layers.  If the flag is set, both write the value UTF-8 encoded, even if
the layer is some different encoding, such as the example above.

Ideally, all of these operators would completely ignore the C<:utf8> state,
working only with bytes, but this would result in silently breaking existing
code.  To avoid this a future version of perl will throw an exception when
any of sysread(), recv(), syswrite() or send() are called on handle with the
C<:utf8> layer.

=item "%s" is more clearly written simply as "%s" in regex; marked by S<<-- HERE> in m/%s/

(W regexp) (only under C<S<use re 'strict'>> or within C<(?[...])>)

You specified a character that has the given plainer way of writing it,
and which is also portable to platforms running with different character
sets.

=item $* is no longer supported

(D deprecated, syntax) The special variable C<$*>, deprecated in older
perls, has been removed as of 5.10.0 and is no longer supported.  In
previous versions of perl the use of C<$*> enabled or disabled multi-line
matching within a string.

Instead of using C<$*> you should use the C</m> (and maybe C</s>) regexp
modifiers.  You can enable C</m> for a lexical scope (even a whole file)
with C<use re '/m'>.  (In older versions: when C<$*> was set to a true value
then all regular expressions behaved as if they were written using C</m>.)

=item $# is no longer supported

(D deprecated, syntax) The special variable C<$#>, deprecated in older
perls, has been removed as of 5.10.0 and is no longer supported.  You
should use the printf/sprintf functions instead.

=item '%s' is not a code reference

(W overload) The second (fourth, sixth, ...) argument of
overload::constant needs to be a code reference.  Either
an anonymous subroutine, or a reference to a subroutine.

=item '%s' is not an overloadable type

(W overload) You tried to overload a constant type the overload package is
unaware of.

=item -i used with no filenames on the command line, reading from STDIN

(S inplace) The C<-i> option was passed on the command line, indicating
that the script is intended to edit files in place, but no files were
given.  This is usually a mistake, since editing STDIN in place doesn't
make sense, and can be confusing because it can make perl look like
it is hanging when it is really just trying to read from STDIN.  You
should either pass a filename to edit, or remove C<-i> from the command
line.  See L<perlrun> for more details.

=item Junk on end of regexp in regex m/%s/

(P) The regular expression parser is confused.

=item Label not found for "last %s"

(F) You named a loop to break out of, but you're not currently in a loop
of that name, not even if you count where you were called from.  See
L<perlfunc/last>.

=item Label not found for "next %s"

(F) You named a loop to continue, but you're not currently in a loop of
that name, not even if you count where you were called from.  See
L<perlfunc/last>.

=item Label not found for "redo %s"

(F) You named a loop to restart, but you're not currently in a loop of
that name, not even if you count where you were called from.  See
L<perlfunc/last>.

=item leaving effective %s failed

(F) While under the C<use filetest> pragma, switching the real and
effective uids or gids failed.

=item length/code after end of string in unpack

(F) While unpacking, the string buffer was already used up when an unpack
length/code combination tried to obtain more data.  This results in
an undefined value for the length.  See L<perlfunc/pack>.

=item length() used on %s (did you mean "scalar(%s)"?)

(W syntax) You used length() on either an array or a hash when you
probably wanted a count of the items.

Array size can be obtained by doing:

    scalar(@array);

The number of items in a hash can be obtained by doing:

    scalar(keys %hash);

=item Lexing code attempted to stuff non-Latin-1 character into Latin-1 input

(F) An extension is attempting to insert text into the current parse
(using L<lex_stuff_pvn|perlapi/lex_stuff_pvn> or similar), but tried to insert a character that
couldn't be part of the current input.  This is an inherent pitfall
of the stuffing mechanism, and one of the reasons to avoid it.  Where
it is necessary to stuff, stuffing only plain ASCII is recommended.

=item Lexing code internal error (%s)

(F) Lexing code supplied by an extension violated the lexer's API in a
detectable way.

=item listen() on closed socket %s

(W closed) You tried to do a listen on a closed socket.  Did you forget
to check the return value of your socket() call?  See
L<perlfunc/listen>.

=item List form of piped open not implemented

(F) On some platforms, notably Windows, the three-or-more-arguments
form of C<open> does not support pipes, such as C<open($pipe, '|-', @args)>.
Use the two-argument C<open($pipe, '|prog arg1 arg2...')> form instead.

=item %s: loadable library and perl binaries are mismatched (got handshake key %p, needed %p)

(P) A dynamic loading library C<.so> or C<.dll> was being loaded into the
process that was built against a different build of perl than the
said library was compiled against.  Reinstalling the XS module will
likely fix this error.

=item Locale '%s' may not work well.%s

(W locale) You are using the named locale, which is a non-UTF-8 one, and
which perl has determined is not fully compatible with what it can
handle.  The second C<%s> gives a reason.

By far the most common reason is that the locale has characters in it
that are represented by more than one byte.  The only such locales that
Perl can handle are the UTF-8 locales.  Most likely the specified locale
is a non-UTF-8 one for an East Asian language such as Chinese or
Japanese.  If the locale is a superset of ASCII, the ASCII portion of it
may work in Perl.

Some essentially obsolete locales that aren't supersets of ASCII, mainly
those in ISO 646 or other 7-bit locales, such as ASMO 449, can also have
problems, depending on what portions of the ASCII character set get
changed by the locale and are also used by the program.
The warning message lists the determinable conflicting characters.

Note that not all incompatibilities are found.

If this happens to you, there's not much you can do except switch to use a
different locale or use L<Encode> to translate from the locale into
UTF-8; if that's impracticable, you have been warned that some things
may break.

This message is output once each time a bad locale is switched into
within the scope of C<S<use locale>>, or on the first possibly-affected
operation if the C<S<use locale>> inherits a bad one.  It is not raised
for any operations from the L<POSIX> module.

=item localtime(%f) failed

(W overflow) You called C<localtime> with a number that it could not handle:
too large, too small, or NaN.  The returned value is C<undef>.

=item localtime(%f) too large

(W overflow) You called C<localtime> with a number that was larger
than it can reliably handle and C<localtime> probably returned the
wrong date.  This warning is also triggered with NaN (the special
not-a-number value).

=item localtime(%f) too small

(W overflow) You called C<localtime> with a number that was smaller
than it can reliably handle and C<localtime> probably returned the
wrong date.

=item Lookbehind longer than %d not implemented in regex m/%s/

(F) There is currently a limit on the length of string which lookbehind can
handle.  This restriction may be eased in a future release. 

=item Lost precision when %s %f by 1

(W imprecision) The value you attempted to increment or decrement by one
is too large for the underlying floating point representation to store
accurately, hence the target of C<++> or C<--> is unchanged.  Perl issues this
warning because it has already switched from integers to floating point
when values are too large for integers, and now even floating point is
insufficient.  You may wish to switch to using L<Math::BigInt> explicitly.

=item lstat() on filehandle%s

(W io) You tried to do an lstat on a filehandle.  What did you mean
by that?  lstat() makes sense only on filenames.  (Perl did a fstat()
instead on the filehandle.)

=item lvalue attribute %s already-defined subroutine

(W misc) Although L<attributes.pm|attributes> allows this, turning the lvalue
attribute on or off on a Perl subroutine that is already defined
does not always work properly.  It may or may not do what you
want, depending on what code is inside the subroutine, with exact
details subject to change between Perl versions.  Only do this
if you really know what you are doing.

=item lvalue attribute ignored after the subroutine has been defined

(W misc) Using the C<:lvalue> declarative syntax to make a Perl
subroutine an lvalue subroutine after it has been defined is
not permitted.  To make the subroutine an lvalue subroutine,
add the lvalue attribute to the definition, or put the C<sub
foo :lvalue;> declaration before the definition.

See also L<attributes.pm|attributes>.

=item Magical list constants are not supported

(F) You assigned a magical array to a stash element, and then tried
to use the subroutine from the same slot.  You are asking Perl to do
something it cannot do, details subject to change between Perl versions.

=item Malformed integer in [] in pack

(F) Between the brackets enclosing a numeric repeat count only digits
are permitted.  See L<perlfunc/pack>.

=item Malformed integer in [] in unpack

(F) Between the brackets enclosing a numeric repeat count only digits
are permitted.  See L<perlfunc/pack>.

=item Malformed PERLLIB_PREFIX

(F) An error peculiar to OS/2.  PERLLIB_PREFIX should be of the form

    prefix1;prefix2

or
    prefix1 prefix2

with nonempty prefix1 and prefix2.  If C<prefix1> is indeed a prefix of
a builtin library search path, prefix2 is substituted.  The error may
appear if components are not found, or are too long.  See
"PERLLIB_PREFIX" in L<perlos2>.

=item Malformed prototype for %s: %s

(F) You tried to use a function with a malformed prototype.  The
syntax of function prototypes is given a brief compile-time check for
obvious errors like invalid characters.  A more rigorous check is run
when the function is called.
Perhaps the function's author was trying to write a subroutine signature
but didn't enable that feature first (C<use feature 'signatures'>),
so the signature was instead interpreted as a bad prototype.

=item Malformed UTF-8 character (%s)

(S utf8)(F) Perl detected a string that didn't comply with UTF-8
encoding rules, even though it had the UTF8 flag on.

One possible cause is that you set the UTF8 flag yourself for data that
you thought to be in UTF-8 but it wasn't (it was for example legacy
8-bit data).  To guard against this, you can use Encode::decode_utf8.

If you use the C<:encoding(UTF-8)> PerlIO layer for input, invalid byte
sequences are handled gracefully, but if you use C<:utf8>, the flag is
set without validating the data, possibly resulting in this error
message.

See also L<Encode/"Handling Malformed Data">.

=item Malformed UTF-8 character immediately after '%s'

(F) You said C<use utf8>, but the program file doesn't comply with UTF-8
encoding rules.  The message prints out the properly encoded characters
just before the first bad one.  If C<utf8> warnings are enabled, a
warning is generated that gives more details about the type of
malformation.

=item Malformed UTF-8 returned by \N{%s} immediately after '%s'

(F) The charnames handler returned malformed UTF-8.

=item Malformed UTF-8 string in '%c' format in unpack

(F) You tried to unpack something that didn't comply with UTF-8 encoding
rules and perl was unable to guess how to make more progress.

=item Malformed UTF-8 string in pack

(F) You tried to pack something that didn't comply with UTF-8 encoding
rules and perl was unable to guess how to make more progress.

=item Malformed UTF-8 string in unpack

(F) You tried to unpack something that didn't comply with UTF-8 encoding
rules and perl was unable to guess how to make more progress.

=item Malformed UTF-16 surrogate

(F) Perl thought it was reading UTF-16 encoded character data but while
doing it Perl met a malformed Unicode surrogate.

=item Mandatory parameter follows optional parameter

(F) In a subroutine signature, you wrote something like "$a = undef,
$b", making an earlier parameter optional and a later one mandatory.
Parameters are filled from left to right, so it's impossible for the
caller to omit an earlier one and pass a later one.  If you want to act
as if the parameters are filled from right to left, declare the rightmost
optional and then shuffle the parameters around in the subroutine's body.

=item Matched non-Unicode code point 0x%X against Unicode property; may
not be portable

(S non_unicode) Perl allows strings to contain a superset of
Unicode code points; each code point may be as large as what is storable
in an unsigned integer on your system, but these may not be accepted by
other languages/systems.  This message occurs when you matched a string
containing such a code point against a regular expression pattern, and
the code point was matched against a Unicode property, C<\p{...}> or
C<\P{...}>.  Unicode properties are only defined on Unicode code points,
so the result of this match is undefined by Unicode, but Perl (starting
in v5.20) treats non-Unicode code points as if they were typical
unassigned Unicode ones, and matched this one accordingly.  Whether a
given property matches these code points or not is specified in
L<perluniprops/Properties accessible through \p{} and \P{}>.

This message is suppressed (unless it has been made fatal) if it is
immaterial to the results of the match if the code point is Unicode or
not.  For example, the property C<\p{ASCII_Hex_Digit}> only can match
the 22 characters C<[0-9A-Fa-f]>, so obviously all other code points,
Unicode or not, won't match it.  (And C<\P{ASCII_Hex_Digit}> will match
every code point except these 22.)

Getting this message indicates that the outcome of the match arguably
should have been the opposite of what actually happened.  If you think
that is the case, you may wish to make the C<non_unicode> warnings
category fatal; if you agree with Perl's decision, you may wish to turn
off this category.

See L<perlunicode/Beyond Unicode code points> for more information.

=item %s matches null string many times in regex; marked by S<<-- HERE> in
m/%s/

(W regexp) The pattern you've specified would be an infinite loop if the
regular expression engine didn't specifically check for that.  The S<<-- HERE>
shows whereabouts in the regular expression the problem was discovered.
See L<perlre>.

=item Maximal count of pending signals (%u) exceeded

(F) Perl aborted due to too high a number of signals pending.  This
usually indicates that your operating system tried to deliver signals
too fast (with a very high priority), starving the perl process from
resources it would need to reach a point where it can process signals
safely.  (See L<perlipc/"Deferred Signals (Safe Signals)">.)

=item "%s" may clash with future reserved word

(W) This warning may be due to running a perl5 script through a perl4
interpreter, especially if the word that is being warned about is
"use" or "my".

=item '%' may not be used in pack

(F) You can't pack a string by supplying a checksum, because the
checksumming process loses information, and you can't go the other way.
See L<perlfunc/unpack>.

=item Method for operation %s not found in package %s during blessing

(F) An attempt was made to specify an entry in an overloading table that
doesn't resolve to a valid subroutine.  See L<overload>.

=item Method %s not permitted

See Server error.

=item Might be a runaway multi-line %s string starting on line %d

(S) An advisory indicating that the previous error may have been caused
by a missing delimiter on a string or pattern, because it eventually
ended earlier on the current line.

=item Misplaced _ in number

(W syntax) An underscore (underbar) in a numeric constant did not
separate two digits.

=item Missing argument in %s

(W missing) You called a function with fewer arguments than other
arguments you supplied indicated would be needed.

Currently only emitted when a printf-type format required more
arguments than were supplied, but might be used in the future for
other cases where we can statically determine that arguments to
functions are missing, e.g. for the L<perlfunc/pack> function.

=item Missing argument to -%c

(F) The argument to the indicated command line switch must follow
immediately after the switch, without intervening spaces.

=item Missing braces on \N{}

=item Missing braces on \N{} in regex; marked by S<<-- HERE> in m/%s/

(F) Wrong syntax of character name literal C<\N{charname}> within
double-quotish context.  This can also happen when there is a space
(or comment) between the C<\N> and the C<{> in a regex with the C</x> modifier.
This modifier does not change the requirement that the brace immediately
follow the C<\N>.

=item Missing braces on \o{}

(F) A C<\o> must be followed immediately by a C<{> in double-quotish context.

=item Missing comma after first argument to %s function

(F) While certain functions allow you to specify a filehandle or an
"indirect object" before the argument list, this ain't one of them.

=item Missing command in piped open

(W pipe) You used the C<open(FH, "| command")> or
C<open(FH, "command |")> construction, but the command was missing or
blank.

=item Missing control char name in \c

(F) A double-quoted string ended with "\c", without the required control
character name.

=item Missing ']' in prototype for %s : %s

(W illegalproto) A grouping was started with C<[> but never closed with C<]>.

=item Missing name in "%s sub"

(F) The syntax for lexically scoped subroutines requires that
they have a name with which they can be found.

=item Missing $ on loop variable

(F) Apparently you've been programming in B<csh> too much.  Variables
are always mentioned with the $ in Perl, unlike in the shells, where it
can vary from one line to the next.

=item (Missing operator before %s?)

(S syntax) This is an educated guess made in conjunction with the message
"%s found where operator expected".  Often the missing operator is a comma.

=item Missing or undefined argument to require

(F) You tried to call require with no argument or with an undefined
value as an argument.  Require expects either a package name or a
file-specification as an argument.  See L<perlfunc/require>.

=item Missing right brace on \%c{} in regex; marked by S<<-- HERE> in m/%s/

(F) Missing right brace in C<\x{...}>, C<\p{...}>, C<\P{...}>, or C<\N{...}>.

=item Missing right brace on \N{}

=item Missing right brace on \N{} or unescaped left brace after \N

(F) C<\N> has two meanings.

The traditional one has it followed by a name enclosed in braces,
meaning the character (or sequence of characters) given by that
name.  Thus C<\N{ASTERISK}> is another way of writing C<*>, valid in both
double-quoted strings and regular expression patterns.  In patterns,
it doesn't have the meaning an unescaped C<*> does.

Starting in Perl 5.12.0, C<\N> also can have an additional meaning (only)
in patterns, namely to match a non-newline character.  (This is short
for C<[^\n]>, and like C<.> but is not affected by the C</s> regex modifier.)

This can lead to some ambiguities.  When C<\N> is not followed immediately
by a left brace, Perl assumes the C<[^\n]> meaning.  Also, if the braces
form a valid quantifier such as C<\N{3}> or C<\N{5,}>, Perl assumes that this
means to match the given quantity of non-newlines (in these examples,
3; and 5 or more, respectively).  In all other case, where there is a
C<\N{> and a matching C<}>, Perl assumes that a character name is desired.

However, if there is no matching C<}>, Perl doesn't know if it was
mistakenly omitted, or if C<[^\n]{> was desired, and raises this error.
If you meant the former, add the right brace; if you meant the latter,
escape the brace with a backslash, like so: C<\N\{>

=item Missing right curly or square bracket

(F) The lexer counted more opening curly or square brackets than closing
ones.  As a general rule, you'll find it's missing near the place you
were last editing.

=item (Missing semicolon on previous line?)

(S syntax) This is an educated guess made in conjunction with the message
"%s found where operator expected".  Don't automatically put a semicolon on
the previous line just because you saw this message.

=item Modification of a read-only value attempted

(F) You tried, directly or indirectly, to change the value of a
constant.  You didn't, of course, try "2 = 1", because the compiler
catches that.  But an easy way to do the same thing is:

    sub mod { $_[0] = 1 }
    mod(2);

Another way is to assign to a substr() that's off the end of the string.

Yet another way is to assign to a C<foreach> loop I<VAR> when I<VAR>
is aliased to a constant in the look I<LIST>:

    $x = 1;
    foreach my $n ($x, 2) {
        $n *= 2; # modifies the $x, but fails on attempt to
    }            # modify the 2

=item Modification of non-creatable array value attempted, %s

(F) You tried to make an array value spring into existence, and the
subscript was probably negative, even counting from end of the array
backwards.

=item Modification of non-creatable hash value attempted, %s

(P) You tried to make a hash value spring into existence, and it
couldn't be created for some peculiar reason.

=item Module name must be constant

(F) Only a bare module name is allowed as the first argument to a "use".

=item Module name required with -%c option

(F) The C<-M> or C<-m> options say that Perl should load some module, but
you omitted the name of the module.  Consult L<perlrun> for full details
about C<-M> and C<-m>.

=item More than one argument to '%s' open

(F) The C<open> function has been asked to open multiple files.  This
can happen if you are trying to open a pipe to a command that takes a
list of arguments, but have forgotten to specify a piped open mode.
See L<perlfunc/open> for details.

=item mprotect for COW string %p %u failed with %d

(S) You compiled perl with B<-D>PERL_DEBUG_READONLY_COW (see
L<perlguts/"Copy on Write">), but a shared string buffer
could not be made read-only.

=item mprotect for %p %u failed with %d

(S) You compiled perl with B<-D>PERL_DEBUG_READONLY_OPS (see L<perlhacktips>),
but an op tree could not be made read-only.

=item mprotect RW for COW string %p %u failed with %d

(S) You compiled perl with B<-D>PERL_DEBUG_READONLY_COW (see
L<perlguts/"Copy on Write">), but a read-only shared string
buffer could not be made mutable.

=item mprotect RW for %p %u failed with %d

(S) You compiled perl with B<-D>PERL_DEBUG_READONLY_OPS (see
L<perlhacktips>), but a read-only op tree could not be made
mutable before freeing the ops.

=item msg%s not implemented

(F) You don't have System V message IPC on your system.

=item Multidimensional syntax %s not supported

(W syntax) Multidimensional arrays aren't written like C<$foo[1,2,3]>.
They're written like C<$foo[1][2][3]>, as in C.

=item '/' must follow a numeric type in unpack

(F) You had an unpack template that contained a '/', but this did not
follow some unpack specification producing a numeric value.
See L<perlfunc/pack>.

=item %s must not be a named sequence in transliteration operator

(F) Transliteration (C<tr///> and C<y///>) transliterates individual
characters.  But a named sequence by definition is more than an
individual charater, and hence doing this operation on it doesn't make
sense.

=item "my sub" not yet implemented

(F) Lexically scoped subroutines are not yet implemented.  Don't try
that yet.

=item "my" subroutine %s can't be in a package

(F) Lexically scoped subroutines aren't in a package, so it doesn't make
sense to try to declare one with a package qualifier on the front.

=item "my %s" used in sort comparison

(W syntax) The package variables $a and $b are used for sort comparisons.
You used $a or $b in as an operand to the C<< <=> >> or C<cmp> operator inside a
sort comparison block, and the variable had earlier been declared as a
lexical variable.  Either qualify the sort variable with the package
name, or rename the lexical variable.

=item "my" variable %s can't be in a package

(F) Lexically scoped variables aren't in a package, so it doesn't make
sense to try to declare one with a package qualifier on the front.  Use
local() if you want to localize a package variable.

=item Name "%s::%s" used only once: possible typo

(W once) Typographical errors often show up as unique variable
names.  If you had a good reason for having a unique name, then
just mention it again somehow to suppress the message.  The C<our>
declaration is also provided for this purpose.

NOTE: This warning detects package symbols that have been used
only once.  This means lexical variables will never trigger this
warning.  It also means that all of the package variables $c, @c,
%c, as well as *c, &c, sub c{}, c(), and c (the filehandle or
format) are considered the same; if a program uses $c only once
but also uses any of the others it will not trigger this warning.
Symbols beginning with an underscore and symbols using special
identifiers (q.v. L<perldata>) are exempt from this warning.

=item Need exactly 3 octal digits in regex; marked by S<<-- HERE> in m/%s/

(F) Within S<C<(?[   ])>>, all constants interpreted as octal need to be
exactly 3 digits long.  This helps catch some ambiguities.  If your
constant is too short, add leading zeros, like

 (?[ [ \078 ] ])     # Syntax error!
 (?[ [ \0078 ] ])    # Works
 (?[ [ \007 8 ] ])   # Clearer

The maximum number this construct can express is C<\777>.  If you
need a larger one, you need to use L<\o{}|perlrebackslash/Octal escapes> instead.  If you meant
two separate things, you need to separate them:

 (?[ [ \7776 ] ])        # Syntax error!
 (?[ [ \o{7776} ] ])     # One meaning
 (?[ [ \777 6 ] ])       # Another meaning
 (?[ [ \777 \006 ] ])    # Still another

=item Negative '/' count in unpack

(F) The length count obtained from a length/code unpack operation was
negative.  See L<perlfunc/pack>.

=item Negative length

(F) You tried to do a read/write/send/recv operation with a buffer
length that is less than 0.  This is difficult to imagine.

=item Negative offset to vec in lvalue context

(F) When C<vec> is called in an lvalue context, the second argument must be
greater than or equal to zero.

=item Negative repeat count does nothing

(W numeric) You tried to execute the
L<C<x>|perlop/Multiplicative Operators> repetition operator fewer than 0
times, which doesn't make sense.

=item Nested quantifiers in regex; marked by S<<-- HERE> in m/%s/

(F) You can't quantify a quantifier without intervening parentheses.
So things like ** or +* or ?* are illegal.  The S<<-- HERE> shows
whereabouts in the regular expression the problem was discovered.

Note that the minimal matching quantifiers, C<*?>, C<+?>, and
C<??> appear to be nested quantifiers, but aren't.  See L<perlre>.

=item %s never introduced

(S internal) The symbol in question was declared but somehow went out of
scope before it could possibly have been used.

=item next::method/next::can/maybe::next::method cannot find enclosing method

(F) C<next::method> needs to be called within the context of a
real method in a real package, and it could not find such a context.
See L<mro>.

=item \N in a character class must be a named character: \N{...} in regex; 
marked by S<<-- HERE> in m/%s/

(F) The new (as of Perl 5.12) meaning of C<\N> as C<[^\n]> is not valid in a
bracketed character class, for the same reason that C<.> in a character
class loses its specialness: it matches almost everything, which is
probably not what you want.

=item \N{} in inverted character class or as a range end-point is restricted to one character in regex; marked by <-- HERE in m/%s/

(F) Named Unicode character escapes (C<\N{...}>) may return a
multi-character sequence.  Even though a character class is
supposed to match just one character of input, perl will match the
whole thing correctly, except when the class is inverted (C<[^...]>),
or the escape is the beginning or final end point of a range.  The
mathematically logical behavior for what matches when inverting
is very different from what people expect, so we have decided to
forbid it.  Similarly unclear is what should be generated when the
C<\N{...}> is used as one of the end points of the range, such as in

 [\x{41}-\N{ARABIC SEQUENCE YEH WITH HAMZA ABOVE WITH AE}]

What is meant here is unclear, as the C<\N{...}> escape is a sequence
of code points, so this is made an error.

=item \N{NAME} must be resolved by the lexer in regex; marked by
S<<-- HERE> in m/%s/

(F) When compiling a regex pattern, an unresolved named character or
sequence was encountered.  This can happen in any of several ways that
bypass the lexer, such as using single-quotish context, or an extra
backslash in double-quotish:

    $re = '\N{SPACE}';	# Wrong!
    $re = "\\N{SPACE}";	# Wrong!
    /$re/;

Instead, use double-quotes with a single backslash:

    $re = "\N{SPACE}";	# ok
    /$re/;

The lexer can be bypassed as well by creating the pattern from smaller
components:

    $re = '\N';
    /${re}{SPACE}/;	# Wrong!

It's not a good idea to split a construct in the middle like this, and
it doesn't work here.  Instead use the solution above.

Finally, the message also can happen under the C</x> regex modifier when the
C<\N> is separated by spaces from the C<{>, in which case, remove the spaces.

    /\N {SPACE}/x;	# Wrong!
    /\N{SPACE}/x;	# ok

=item No %s allowed while running setuid

(F) Certain operations are deemed to be too insecure for a setuid or
setgid script to even be allowed to attempt.  Generally speaking there
will be another way to do what you want that is, if not secure, at least
securable.  See L<perlsec>.

=item NO-BREAK SPACE in a charnames alias definition is deprecated

(D deprecated) You defined a character name which contained a no-break
space character.  Change it to a regular space.  Usually these names are
defined in the C<:alias> import argument to C<use charnames>, but they
could be defined by a translator installed into C<$^H{charnames}>.  See
L<charnames/CUSTOM ALIASES>.

=item No code specified for -%c

(F) Perl's B<-e> and B<-E> command-line options require an argument.  If
you want to run an empty program, pass the empty string as a separate
argument or run a program consisting of a single 0 or 1:

    perl -e ""
    perl -e0
    perl -e1

=item No comma allowed after %s

(F) A list operator that has a filehandle or "indirect object" is
not allowed to have a comma between that and the following arguments.
Otherwise it'd be just another one of the arguments.

One possible cause for this is that you expected to have imported
a constant to your name space with B<use> or B<import> while no such
importing took place, it may for example be that your operating
system does not support that particular constant.  Hopefully you did
use an explicit import list for the constants you expect to see;
please see L<perlfunc/use> and L<perlfunc/import>.  While an
explicit import list would probably have caught this error earlier
it naturally does not remedy the fact that your operating system
still does not support that constant.  Maybe you have a typo in
the constants of the symbol import list of B<use> or B<import> or in the
constant name at the line where this error was triggered?

=item No command into which to pipe on command line

(F) An error peculiar to VMS.  Perl handles its own command line
redirection, and found a '|' at the end of the command line, so it
doesn't know where you want to pipe the output from this command.

=item No DB::DB routine defined

(F) The currently executing code was compiled with the B<-d> switch, but
for some reason the current debugger (e.g. F<perl5db.pl> or a C<Devel::>
module) didn't define a routine to be called at the beginning of each
statement.

=item No dbm on this machine

(P) This is counted as an internal error, because every machine should
supply dbm nowadays, because Perl comes with SDBM.  See L<SDBM_File>.

=item No DB::sub routine defined

(F) The currently executing code was compiled with the B<-d> switch, but
for some reason the current debugger (e.g. F<perl5db.pl> or a C<Devel::>
module) didn't define a C<DB::sub> routine to be called at the beginning
of each ordinary subroutine call.

=item No directory specified for -I

(F) The B<-I> command-line switch requires a directory name as part of the
I<same> argument.  Use B<-Ilib>, for instance.  B<-I lib> won't work.

=item No error file after 2> or 2>> on command line

(F) An error peculiar to VMS.  Perl handles its own command line
redirection, and found a '2>' or a '2>>' on the command line, but can't
find the name of the file to which to write data destined for stderr.

=item No group ending character '%c' found in template

(F) A pack or unpack template has an opening '(' or '[' without its
matching counterpart.  See L<perlfunc/pack>.

=item No input file after < on command line

(F) An error peculiar to VMS.  Perl handles its own command line
redirection, and found a '<' on the command line, but can't find the
name of the file from which to read data for stdin.

=item No next::method '%s' found for %s

(F) C<next::method> found no further instances of this method name
in the remaining packages of the MRO of this class.  If you don't want
it throwing an exception, use C<maybe::next::method>
or C<next::can>.  See L<mro>.

=item Non-finite repeat count does nothing

(W numeric) You tried to execute the
L<C<x>|perlop/Multiplicative Operators> repetition operator C<Inf> (or
C<-Inf>) or C<NaN> times, which doesn't make sense.

=item Non-hex character in regex; marked by S<<-- HERE> in m/%s/

(F) In a regular expression, there was a non-hexadecimal character where
a hex one was expected, like

 (?[ [ \xDG ] ])
 (?[ [ \x{DEKA} ] ])

=item Non-octal character in regex; marked by S<<-- HERE> in m/%s/

(F) In a regular expression, there was a non-octal character where
an octal one was expected, like

 (?[ [ \o{1278} ] ])

=item Non-octal character '%c'.  Resolved as "%s"

(W digit) In parsing an octal numeric constant, a character was
unexpectedly encountered that isn't octal.  The resulting value
is as indicated.

=item "no" not allowed in expression

(F) The "no" keyword is recognized and executed at compile time, and
returns no useful value.  See L<perlmod>.

=item Non-string passed as bitmask

(W misc) A number has been passed as a bitmask argument to select().
Use the vec() function to construct the file descriptor bitmasks for
select.  See L<perlfunc/select>.

=item No output file after > on command line

(F) An error peculiar to VMS.  Perl handles its own command line
redirection, and found a lone '>' at the end of the command line, so it
doesn't know where you wanted to redirect stdout.

=item No output file after > or >> on command line

(F) An error peculiar to VMS.  Perl handles its own command line
redirection, and found a '>' or a '>>' on the command line, but can't
find the name of the file to which to write data destined for stdout.

=item No package name allowed for variable %s in "our"

(F) Fully qualified variable names are not allowed in "our"
declarations, because that doesn't make much sense under existing
rules.  Such syntax is reserved for future extensions.

=item No Perl script found in input

(F) You called C<perl -x>, but no line was found in the file beginning
with #! and containing the word "perl".

=item No setregid available

(F) Configure didn't find anything resembling the setregid() call for
your system.

=item No setreuid available

(F) Configure didn't find anything resembling the setreuid() call for
your system.

=item No such class %s

(F) You provided a class qualifier in a "my", "our" or "state"
declaration, but this class doesn't exist at this point in your program.

=item No such class field "%s" in variable %s of type %s

(F) You tried to access a key from a hash through the indicated typed
variable but that key is not allowed by the package of the same type.
The indicated package has restricted the set of allowed keys using the
L<fields> pragma.

=item No such hook: %s

(F) You specified a signal hook that was not recognized by Perl.
Currently, Perl accepts C<__DIE__> and C<__WARN__> as valid signal hooks.

=item No such pipe open

(P) An error peculiar to VMS.  The internal routine my_pclose() tried to
close a pipe which hadn't been opened.  This should have been caught
earlier as an attempt to close an unopened filehandle.

=item No such signal: SIG%s

(W signal) You specified a signal name as a subscript to %SIG that was
not recognized.  Say C<kill -l> in your shell to see the valid signal
names on your system.

=item Not a CODE reference

(F) Perl was trying to evaluate a reference to a code value (that is, a
subroutine), but found a reference to something else instead.  You can
use the ref() function to find out what kind of ref it really was.  See
also L<perlref>.

=item Not a GLOB reference

(F) Perl was trying to evaluate a reference to a "typeglob" (that is, a
symbol table entry that looks like C<*foo>), but found a reference to
something else instead.  You can use the ref() function to find out what
kind of ref it really was.  See L<perlref>.

=item Not a HASH reference

(F) Perl was trying to evaluate a reference to a hash value, but found a
reference to something else instead.  You can use the ref() function to
find out what kind of ref it really was.  See L<perlref>.

=item Not an ARRAY reference

(F) Perl was trying to evaluate a reference to an array value, but found
a reference to something else instead.  You can use the ref() function
to find out what kind of ref it really was.  See L<perlref>.

=item Not an unblessed ARRAY reference

(F) You passed a reference to a blessed array to C<push>, C<shift> or
another array function.  These only accept unblessed array references
or arrays beginning explicitly with C<@>.

=item Not a SCALAR reference

(F) Perl was trying to evaluate a reference to a scalar value, but found
a reference to something else instead.  You can use the ref() function
to find out what kind of ref it really was.  See L<perlref>.

=item Not a subroutine reference

(F) Perl was trying to evaluate a reference to a code value (that is, a
subroutine), but found a reference to something else instead.  You can
use the ref() function to find out what kind of ref it really was.  See
also L<perlref>.

=item Not a subroutine reference in overload table

(F) An attempt was made to specify an entry in an overloading table that
doesn't somehow point to a valid subroutine.  See L<overload>.

=item Not enough arguments for %s

(F) The function requires more arguments than you specified.

=item Not enough format arguments

(W syntax) A format specified more picture fields than the next line
supplied.  See L<perlform>.

=item %s: not found

(A) You've accidentally run your script through the Bourne shell instead
of Perl.  Check the #! line, or manually feed your script into Perl
yourself.

=item (?[...]) not valid in locale in regex; marked by S<<-- HERE> in m/%s/

(F) C<(?[...])> cannot be used within the scope of a C<S<use locale>> or with
an C</l> regular expression modifier, as that would require deferring
to run-time the calculation of what it should evaluate to, and it is
regex compile-time only.

=item no UTC offset information; assuming local time is UTC

(S) A warning peculiar to VMS.  Perl was unable to find the local
timezone offset, so it's assuming that local system time is equivalent
to UTC.  If it's not, define the logical name
F<SYS$TIMEZONE_DIFFERENTIAL> to translate to the number of seconds which
need to be added to UTC to get local time.

=item NULL OP IN RUN

(S debugging) Some internal routine called run() with a null opcode
pointer.

=item Null picture in formline

(F) The first argument to formline must be a valid format picture
specification.  It was found to be empty, which probably means you
supplied it an uninitialized value.  See L<perlform>.

=item Null realloc

(P) An attempt was made to realloc NULL.

=item NULL regexp argument

(P) The internal pattern matching routines blew it big time.

=item NULL regexp parameter

(P) The internal pattern matching routines are out of their gourd.

=item Number too long

(F) Perl limits the representation of decimal numbers in programs to
about 250 characters.  You've exceeded that length.  Future
versions of Perl are likely to eliminate this arbitrary limitation.  In
the meantime, try using scientific notation (e.g. "1e6" instead of
"1_000_000").

=item Number with no digits

(F) Perl was looking for a number but found nothing that looked like
a number.  This happens, for example with C<\o{}>, with no number between
the braces.

=item Octal number > 037777777777 non-portable

(W portable) The octal number you specified is larger than 2**32-1
(4294967295) and therefore non-portable between systems.  See
L<perlport> for more on portability concerns.

=item Odd name/value argument for subroutine

(F) A subroutine using a slurpy hash parameter in its signature
received an odd number of arguments to populate the hash.  It requires
the arguments to be paired, with the same number of keys as values.
The caller of the subroutine is presumably at fault.  Inconveniently,
this error will be reported at the location of the subroutine, not that
of the caller.

=item Odd number of arguments for overload::constant

(W overload) The call to overload::constant contained an odd number of
arguments.  The arguments should come in pairs.

=item Odd number of elements in anonymous hash

(W misc) You specified an odd number of elements to initialize a hash,
which is odd, because hashes come in key/value pairs.

=item Odd number of elements in hash assignment

(W misc) You specified an odd number of elements to initialize a hash,
which is odd, because hashes come in key/value pairs.

=item Offset outside string

(F)(W layer) You tried to do a read/write/send/recv/seek operation
with an offset pointing outside the buffer.  This is difficult to
imagine.  The sole exceptions to this are that zero padding will
take place when going past the end of the string when either
C<sysread()>ing a file, or when seeking past the end of a scalar opened
for I/O (in anticipation of future reads and to imitate the behavior
with real files).

=item %s() on unopened %s

(W unopened) An I/O operation was attempted on a filehandle that was
never initialized.  You need to do an open(), a sysopen(), or a socket()
call, or call a constructor from the FileHandle package.

=item -%s on unopened filehandle %s

(W unopened) You tried to invoke a file test operator on a filehandle
that isn't open.  Check your control flow.  See also L<perlfunc/-X>.

=item oops: oopsAV

(S internal) An internal warning that the grammar is screwed up.

=item oops: oopsHV

(S internal) An internal warning that the grammar is screwed up.

=item Opening dirhandle %s also as a file

(D io, deprecated) You used open() to associate a filehandle to
a symbol (glob or scalar) that already holds a dirhandle.
Although legal, this idiom might render your code confusing
and is deprecated.

=item Opening filehandle %s also as a directory

(D io, deprecated) You used opendir() to associate a dirhandle to
a symbol (glob or scalar) that already holds a filehandle.
Although legal, this idiom might render your code confusing
and is deprecated.

=item Operand with no preceding operator in regex; marked by S<<-- HERE> in
m/%s/

(F) You wrote something like

 (?[ \p{Digit} \p{Thai} ])

There are two operands, but no operator giving how you want to combine
them.

=item Operation "%s": no method found, %s

(F) An attempt was made to perform an overloaded operation for which no
handler was defined.  While some handlers can be autogenerated in terms
of other handlers, there is no default handler for any operation, unless
the C<fallback> overloading key is specified to be true.  See L<overload>.

=item Operation "%s" returns its argument for non-Unicode code point 0x%X

(S non_unicode) You performed an operation requiring Unicode rules
on a code point that is not in Unicode, so what it should do is not
defined.  Perl has chosen to have it do nothing, and warn you.

If the operation shown is "ToFold", it means that case-insensitive
matching in a regular expression was done on the code point.

If you know what you are doing you can turn off this warning by
C<no warnings 'non_unicode';>.

=item Operation "%s" returns its argument for UTF-16 surrogate U+%X

(S surrogate) You performed an operation requiring Unicode
rules on a Unicode surrogate.  Unicode frowns upon the use
of surrogates for anything but storing strings in UTF-16, but
rules are (reluctantly) defined for the surrogates, and
they are to do nothing for this operation.  Because the use of
surrogates can be dangerous, Perl warns.

If the operation shown is "ToFold", it means that case-insensitive
matching in a regular expression was done on the code point.

If you know what you are doing you can turn off this warning by
C<no warnings 'surrogate';>.

=item Operator or semicolon missing before %s

(S ambiguous) You used a variable or subroutine call where the parser
was expecting an operator.  The parser has assumed you really meant to
use an operator, but this is highly likely to be incorrect.  For
example, if you say "*foo *foo" it will be interpreted as if you said
"*foo * 'foo'".

=item Optional parameter lacks default expression

(F) In a subroutine signature, you wrote something like "$a =", making a
named optional parameter without a default value.  A nameless optional
parameter is permitted to have no default value, but a named one must
have a specific default.  You probably want "$a = undef".

=item "our" variable %s redeclared

(W misc) You seem to have already declared the same global once before
in the current lexical scope.

=item Out of memory!

(X) The malloc() function returned 0, indicating there was insufficient
remaining memory (or virtual memory) to satisfy the request.  Perl has
no option but to exit immediately.

At least in Unix you may be able to get past this by increasing your
process datasize limits: in csh/tcsh use C<limit> and
C<limit datasize n> (where C<n> is the number of kilobytes) to check
the current limits and change them, and in ksh/bash/zsh use C<ulimit -a>
and C<ulimit -d n>, respectively.

=item Out of memory during %s extend

(X) An attempt was made to extend an array, a list, or a string beyond
the largest possible memory allocation.

=item Out of memory during "large" request for %s

(F) The malloc() function returned 0, indicating there was insufficient
remaining memory (or virtual memory) to satisfy the request.  However,
the request was judged large enough (compile-time default is 64K), so a
possibility to shut down by trapping this error is granted.

=item Out of memory during request for %s

(X)(F) The malloc() function returned 0, indicating there was
insufficient remaining memory (or virtual memory) to satisfy the
request.

The request was judged to be small, so the possibility to trap it
depends on the way perl was compiled.  By default it is not trappable.
However, if compiled for this, Perl may use the contents of C<$^M> as an
emergency pool after die()ing with this message.  In this case the error
is trappable I<once>, and the error message will include the line and file
where the failed request happened.

=item Out of memory during ridiculously large request

(F) You can't allocate more than 2^31+"small amount" bytes.  This error
is most likely to be caused by a typo in the Perl program. e.g.,
C<$arr[time]> instead of C<$arr[$time]>.

=item Out of memory for yacc stack

(F) The yacc parser wanted to grow its stack so it could continue
parsing, but realloc() wouldn't give it more memory, virtual or
otherwise.

=item '.' outside of string in pack

(F) The argument to a '.' in your template tried to move the working
position to before the start of the packed string being built.

=item '@' outside of string in unpack

(F) You had a template that specified an absolute position outside
the string being unpacked.  See L<perlfunc/pack>.

=item '@' outside of string with malformed UTF-8 in unpack

(F) You had a template that specified an absolute position outside
the string being unpacked.  The string being unpacked was also invalid
UTF-8.  See L<perlfunc/pack>.

=item overload arg '%s' is invalid

(W overload) The L<overload> pragma was passed an argument it did not
recognize.  Did you mistype an operator?

=item Overloaded dereference did not return a reference

(F) An object with an overloaded dereference operator was dereferenced,
but the overloaded operation did not return a reference.  See
L<overload>.

=item Overloaded qr did not return a REGEXP

(F) An object with a C<qr> overload was used as part of a match, but the
overloaded operation didn't return a compiled regexp.  See L<overload>.

=item %s package attribute may clash with future reserved word: %s

(W reserved) A lowercase attribute name was used that had a
package-specific handler.  That name might have a meaning to Perl itself
some day, even though it doesn't yet.  Perhaps you should use a
mixed-case attribute name, instead.  See L<attributes>.

=item pack/unpack repeat count overflow

(F) You can't specify a repeat count so large that it overflows your
signed integers.  See L<perlfunc/pack>.

=item page overflow

(W io) A single call to write() produced more lines than can fit on a
page.  See L<perlform>.

=item panic: %s

(P) An internal error.

=item panic: attempt to call %s in %s

(P) One of the file test operators entered a code branch that calls
an ACL related-function, but that function is not available on this
platform.  Earlier checks mean that it should not be possible to
enter this branch on this platform.

=item panic: child pseudo-process was never scheduled

(P) A child pseudo-process in the ithreads implementation on Windows
was not scheduled within the time period allowed and therefore was not
able to initialize properly.

=item panic: ck_grep, type=%u

(P) Failed an internal consistency check trying to compile a grep.

=item panic: ck_split, type=%u

(P) Failed an internal consistency check trying to compile a split.

=item panic: corrupt saved stack index %ld

(P) The savestack was requested to restore more localized values than
there are in the savestack.

=item panic: del_backref

(P) Failed an internal consistency check while trying to reset a weak
reference.

=item panic: do_subst

(P) The internal pp_subst() routine was called with invalid operational
data.

=item panic: do_trans_%s

(P) The internal do_trans routines were called with invalid operational
data.

=item panic: fold_constants JMPENV_PUSH returned %d

(P) While attempting folding constants an exception other than an C<eval>
failure was caught.

=item panic: frexp: %f

(P) The library function frexp() failed, making printf("%f") impossible.

=item panic: goto, type=%u, ix=%ld

(P) We popped the context stack to a context with the specified label,
and then discovered it wasn't a context we know how to do a goto in.

=item panic: gp_free failed to free glob pointer

(P) The internal routine used to clear a typeglob's entries tried
repeatedly, but each time something re-created entries in the glob.
Most likely the glob contains an object with a reference back to
the glob and a destructor that adds a new object to the glob.

=item panic: INTERPCASEMOD, %s

(P) The lexer got into a bad state at a case modifier.

=item panic: INTERPCONCAT, %s

(P) The lexer got into a bad state parsing a string with brackets.

=item panic: kid popen errno read

(F) A forked child returned an incomprehensible message about its errno.

=item panic: last, type=%u

(P) We popped the context stack to a block context, and then discovered
it wasn't a block context.

=item panic: leave_scope clearsv

(P) A writable lexical variable became read-only somehow within the
scope.

=item panic: leave_scope inconsistency %u

(P) The savestack probably got out of sync.  At least, there was an
invalid enum on the top of it.

=item panic: magic_killbackrefs

(P) Failed an internal consistency check while trying to reset all weak
references to an object.

=item panic: malloc, %s

(P) Something requested a negative number of bytes of malloc.

=item panic: memory wrap

(P) Something tried to allocate either more memory than possible or a
negative amount.

=item panic: pad_alloc, %p!=%p

(P) The compiler got confused about which scratch pad it was allocating
and freeing temporaries and lexicals from.

=item panic: pad_free curpad, %p!=%p

(P) The compiler got confused about which scratch pad it was allocating
and freeing temporaries and lexicals from.

=item panic: pad_free po

(P) A zero scratch pad offset was detected internally.  An attempt was
made to free a target that had not been allocated to begin with.

=item panic: pad_reset curpad, %p!=%p

(P) The compiler got confused about which scratch pad it was allocating
and freeing temporaries and lexicals from.

=item panic: pad_sv po

(P) A zero scratch pad offset was detected internally.  Most likely
an operator needed a target but that target had not been allocated
for whatever reason.

=item panic: pad_swipe curpad, %p!=%p

(P) The compiler got confused about which scratch pad it was allocating
and freeing temporaries and lexicals from.

=item panic: pad_swipe po

(P) An invalid scratch pad offset was detected internally.

=item panic: pp_iter, type=%u

(P) The foreach iterator got called in a non-loop context frame.

=item panic: pp_match%s

(P) The internal pp_match() routine was called with invalid operational
data.

=item panic: pp_split, pm=%p, s=%p

(P) Something terrible went wrong in setting up for the split.

=item panic: realloc, %s

(P) Something requested a negative number of bytes of realloc.

=item panic: reference miscount on nsv in sv_replace() (%d != 1)

(P) The internal sv_replace() function was handed a new SV with a
reference count other than 1.

=item panic: restartop in %s

(P) Some internal routine requested a goto (or something like it), and
didn't supply the destination.

=item panic: return, type=%u

(P) We popped the context stack to a subroutine or eval context, and
then discovered it wasn't a subroutine or eval context.

=item panic: scan_num, %s

(P) scan_num() got called on something that wasn't a number.

=item panic: Sequence (?{...}): no code block found in regex m/%s/

(P) While compiling a pattern that has embedded (?{}) or (??{}) code
blocks, perl couldn't locate the code block that should have already been
seen and compiled by perl before control passed to the regex compiler.

=item panic: strxfrm() gets absurd - a => %u, ab => %u

(P) The interpreter's sanity check of the C function strxfrm() failed.
In your current locale the returned transformation of the string "ab"
is shorter than that of the string "a", which makes no sense.

=item panic: sv_chop %s

(P) The sv_chop() routine was passed a position that is not within the
scalar's string buffer.

=item panic: sv_insert, midend=%p, bigend=%p

(P) The sv_insert() routine was told to remove more string than there
was string.

=item panic: top_env

(P) The compiler attempted to do a goto, or something weird like that.

=item panic: unimplemented op %s (#%d) called

(P) The compiler is screwed up and attempted to use an op that isn't
permitted at run time.

=item panic: utf16_to_utf8: odd bytelen

(P) Something tried to call utf16_to_utf8 with an odd (as opposed
to even) byte length.

=item panic: utf16_to_utf8_reversed: odd bytelen

(P) Something tried to call utf16_to_utf8_reversed with an odd (as opposed
to even) byte length.

=item panic: yylex, %s

(P) The lexer got into a bad state while processing a case modifier.

=item Parentheses missing around "%s" list

(W parenthesis) You said something like

    my $foo, $bar = @_;

when you meant

    my ($foo, $bar) = @_;

Remember that "my", "our", "local" and "state" bind tighter than comma.

=item Parsing code internal error (%s)

(F) Parsing code supplied by an extension violated the parser's API in
a detectable way.

=item Passing malformed UTF-8 to "%s" is deprecated

(D deprecated, utf8) This message indicates a bug either in the Perl
core or in XS code.  Such code was trying to find out if a character,
allegedly stored internally encoded as UTF-8, was of a given type, such
as being punctuation or a digit.  But the character was not encoded in
legal UTF-8.  The C<%s> is replaced by a string that can be used by
knowledgeable people to determine what the type being checked against
was.  If C<utf8> warnings are enabled, a further message is raised,
giving details of the malformation.

=item Pattern subroutine nesting without pos change exceeded limit in regex

(F) You used a pattern that uses too many nested subpattern calls without
consuming any text.  Restructure the pattern so text is consumed before
the nesting limit is exceeded.

=item C<-p> destination: %s

(F) An error occurred during the implicit output invoked by the C<-p>
command-line switch.  (This output goes to STDOUT unless you've
redirected it with select().)

=item Perl API version %s of %s does not match %s

(F) The XS module in question was compiled against a different incompatible
version of Perl than the one that has loaded the XS module.

=item Perl folding rules are not up-to-date for 0x%X; please use the perlbug
utility to report; in regex; marked by S<<-- HERE> in m/%s/

(S regexp) You used a regular expression with case-insensitive matching,
and there is a bug in Perl in which the built-in regular expression
folding rules are not accurate.  This may lead to incorrect results.
Please report this as a bug using the L<perlbug> utility.

=item PerlIO layer ':win32' is experimental

(S experimental::win32_perlio) The C<:win32> PerlIO layer is
experimental.  If you want to take the risk of using this layer,
simply disable this warning:

    no warnings "experimental::win32_perlio";

=item Perl_my_%s() not available

(F) Your platform has very uncommon byte-order and integer size,
so it was not possible to set up some or all fixed-width byte-order
conversion functions.  This is only a problem when you're using the
'<' or '>' modifiers in (un)pack templates.  See L<perlfunc/pack>.

=item Perl %s required (did you mean %s?)--this is only %s, stopped

(F) The code you are trying to run has asked for a newer version of
Perl than you are running.  Perhaps C<use 5.10> was written instead
of C<use 5.010> or C<use v5.10>.  Without the leading C<v>, the number is
interpreted as a decimal, with every three digits after the
decimal point representing a part of the version number.  So 5.10
is equivalent to v5.100.

=item Perl %s required--this is only %s, stopped

(F) The module in question uses features of a version of Perl more
recent than the currently running version.  How long has it been since
you upgraded, anyway?  See L<perlfunc/require>.

=item PERL_SH_DIR too long

(F) An error peculiar to OS/2.  PERL_SH_DIR is the directory to find the
C<sh>-shell in.  See "PERL_SH_DIR" in L<perlos2>.

=item PERL_SIGNALS illegal: "%s"

(X) See L<perlrun/PERL_SIGNALS> for legal values.

=item Perls since %s too modern--this is %s, stopped

(F) The code you are trying to run claims it will not run
on the version of Perl you are using because it is too new.
Maybe the code needs to be updated, or maybe it is simply
wrong and the version check should just be removed.

=item perl: warning: Non hex character in '$ENV{PERL_HASH_SEED}', seed only partially set

(S) PERL_HASH_SEED should match /^\s*(?:0x)?[0-9a-fA-F]+\s*\z/ but it
contained a non hex character.  This could mean you are not using the
hash seed you think you are.

=item perl: warning: Setting locale failed.

(S) The whole warning message will look something like:

	perl: warning: Setting locale failed.
	perl: warning: Please check that your locale settings:
	        LC_ALL = "En_US",
	        LANG = (unset)
	    are supported and installed on your system.
	perl: warning: Falling back to the standard locale ("C").

Exactly what were the failed locale settings varies.  In the above the
settings were that the LC_ALL was "En_US" and the LANG had no value.
This error means that Perl detected that you and/or your operating
system supplier and/or system administrator have set up the so-called
locale system but Perl could not use those settings.  This was not
dead serious, fortunately: there is a "default locale" called "C" that
Perl can and will use, and the script will be run.  Before you really
fix the problem, however, you will get the same error message each
time you run Perl.  How to really fix the problem can be found in
L<perllocale> section B<LOCALE PROBLEMS>.

=item perl: warning: strange setting in '$ENV{PERL_PERTURB_KEYS}': '%s'

(S) Perl was run with the environment variable PERL_PERTURB_KEYS defined
but containing an unexpected value.  The legal values of this setting
are as follows.

  Numeric | String        | Result
  --------+---------------+-----------------------------------------
  0       | NO            | Disables key traversal randomization
  1       | RANDOM        | Enables full key traversal randomization
  2       | DETERMINISTIC | Enables repeatable key traversal
          |               | randomization

Both numeric and string values are accepted, but note that string values are
case sensitive.  The default for this setting is "RANDOM" or 1.

=item pid %x not a child

(W exec) A warning peculiar to VMS.  Waitpid() was asked to wait for a
process which isn't a subprocess of the current process.  While this is
fine from VMS' perspective, it's probably not what you intended.

=item 'P' must have an explicit size in unpack

(F) The unpack format P must have an explicit size, not "*".

=item POSIX class [:%s:] unknown in regex; marked by S<<-- HERE> in m/%s/

(F) The class in the character class [: :] syntax is unknown.  The S<<-- HERE>
shows whereabouts in the regular expression the problem was discovered.
Note that the POSIX character classes do B<not> have the C<is> prefix
the corresponding C interfaces have: in other words, it's C<[[:print:]]>,
not C<isprint>.  See L<perlre>.

=item POSIX getpgrp can't take an argument

(F) Your system has POSIX getpgrp(), which takes no argument, unlike
the BSD version, which takes a pid.

=item POSIX syntax [%c %c] belongs inside character classes%s in regex; marked by
S<<-- HERE> in m/%s/

(W regexp) Perl thinks that you intended to write a POSIX character
class, but didn't use enough brackets.  These POSIX class constructs [:
:], [= =], and [. .]  go I<inside> character classes, the [] are part of
the construct, for example: C<qr/[012[:alpha:]345]/>.  What the regular
expression pattern compiled to is probably not what you were intending.
For example, C<qr/[:alpha:]/> compiles to a regular bracketed character
class consisting of the four characters C<":">,  C<"a">,  C<"l">,
C<"h">, and C<"p">.  To specify the POSIX class, it should have been
written C<qr/[[:alpha:]]/>.

Note that [= =] and [. .] are not currently
implemented; they are simply placeholders for future extensions and
will cause fatal errors.  The S<<-- HERE> shows whereabouts in the regular
expression the problem was discovered.  See L<perlre>.

If the specification of the class was not completely valid, the message
indicates that.

=item POSIX syntax [. .] is reserved for future extensions in regex; marked by 
S<<-- HERE> in m/%s/

(F) Within regular expression character classes ([]) the syntax beginning
with "[." and ending with ".]" is reserved for future extensions.  If you
need to represent those character sequences inside a regular expression
character class, just quote the square brackets with the backslash: "\[."
and ".\]".  The S<<-- HERE> shows whereabouts in the regular expression the
problem was discovered.  See L<perlre>.

=item POSIX syntax [= =] is reserved for future extensions in regex; marked by 
S<<-- HERE> in m/%s/

(F) Within regular expression character classes ([]) the syntax beginning
with "[=" and ending with "=]" is reserved for future extensions.  If you
need to represent those character sequences inside a regular expression
character class, just quote the square brackets with the backslash: "\[="
and "=\]".  The S<<-- HERE> shows whereabouts in the regular expression the
problem was discovered.  See L<perlre>.

=item Possible attempt to put comments in qw() list

(W qw) qw() lists contain items separated by whitespace; as with literal
strings, comment characters are not ignored, but are instead treated as
literal data.  (You may have used different delimiters than the
parentheses shown here; braces are also frequently used.)

You probably wrote something like this:

    @list = qw(
	a # a comment
        b # another comment
    );

when you should have written this:

    @list = qw(
	a
        b
    );

If you really want comments, build your list the
old-fashioned way, with quotes and commas:

    @list = (
        'a',    # a comment
        'b',    # another comment
    );

=item Possible attempt to separate words with commas

(W qw) qw() lists contain items separated by whitespace; therefore
commas aren't needed to separate the items.  (You may have used
different delimiters than the parentheses shown here; braces are also
frequently used.)

You probably wrote something like this:

    qw! a, b, c !;

which puts literal commas into some of the list items.  Write it without
commas if you don't want them to appear in your data:

    qw! a b c !;

=item Possible memory corruption: %s overflowed 3rd argument

(F) An ioctl() or fcntl() returned more than Perl was bargaining for.
Perl guesses a reasonable buffer size, but puts a sentinel byte at the
end of the buffer just in case.  This sentinel byte got clobbered, and
Perl assumes that memory is now corrupted.  See L<perlfunc/ioctl>.

=item Possible precedence issue with control flow operator

(W syntax) There is a possible problem with the mixing of a control
flow operator (e.g. C<return>) and a low-precedence operator like
C<or>.  Consider:

    sub { return $a or $b; }

This is parsed as:

    sub { (return $a) or $b; }

Which is effectively just:

    sub { return $a; }

Either use parentheses or the high-precedence variant of the operator.

Note this may be also triggered for constructs like:

    sub { 1 if die; }

=item Possible precedence problem on bitwise %s operator

(W precedence) Your program uses a bitwise logical operator in conjunction
with a numeric comparison operator, like this :

    if ($x & $y == 0) { ... }

This expression is actually equivalent to C<$x & ($y == 0)>, due to the
higher precedence of C<==>.  This is probably not what you want.  (If you
really meant to write this, disable the warning, or, better, put the
parentheses explicitly and write C<$x & ($y == 0)>).

=item Possible unintended interpolation of $\ in regex

(W ambiguous) You said something like C<m/$\/> in a regex.
The regex C<m/foo$\s+bar/m> translates to: match the word 'foo', the output
record separator (see L<perlvar/$\>) and the letter 's' (one time or more)
followed by the word 'bar'.

If this is what you intended then you can silence the warning by using 
C<m/${\}/> (for example: C<m/foo${\}s+bar/>).

If instead you intended to match the word 'foo' at the end of the line
followed by whitespace and the word 'bar' on the next line then you can use
C<m/$(?)\/> (for example: C<m/foo$(?)\s+bar/>).

=item Possible unintended interpolation of %s in string

(W ambiguous) You said something like '@foo' in a double-quoted string
but there was no array C<@foo> in scope at the time.  If you wanted a
literal @foo, then write it as \@foo; otherwise find out what happened
to the array you apparently lost track of.

=item Precedence problem: open %s should be open(%s)

(S precedence) The old irregular construct

    open FOO || die;

is now misinterpreted as

    open(FOO || die);

because of the strict regularization of Perl 5's grammar into unary and
list operators.  (The old open was a little of both.)  You must put
parentheses around the filehandle, or use the new "or" operator instead
of "||".

=item Premature end of script headers

See Server error.

=item printf() on closed filehandle %s

(W closed) The filehandle you're writing to got itself closed sometime
before now.  Check your control flow.

=item print() on closed filehandle %s

(W closed) The filehandle you're printing on got itself closed sometime
before now.  Check your control flow.

=item Process terminated by SIG%s

(W) This is a standard message issued by OS/2 applications, while *nix
applications die in silence.  It is considered a feature of the OS/2
port.  One can easily disable this by appropriate sighandlers, see
L<perlipc/"Signals">.  See also "Process terminated by SIGTERM/SIGINT"
in L<perlos2>.

=item Prototype after '%c' for %s : %s

(W illegalproto) A character follows % or @ in a prototype.  This is
useless, since % and @ gobble the rest of the subroutine arguments.

=item Prototype mismatch: %s vs %s

(S prototype) The subroutine being declared or defined had previously been
declared or defined with a different function prototype.

=item Prototype not terminated

(F) You've omitted the closing parenthesis in a function prototype
definition.

=item Prototype '%s' overridden by attribute 'prototype(%s)' in %s

(W prototype) A prototype was declared in both the parentheses after
the sub name and via the prototype attribute.  The prototype in
parentheses is useless, since it will be replaced by the prototype
from the attribute before it's ever used.

=item Quantifier follows nothing in regex; marked by S<<-- HERE> in m/%s/

(F) You started a regular expression with a quantifier.  Backslash it if
you meant it literally.  The S<<-- HERE> shows whereabouts in the regular
expression the problem was discovered.  See L<perlre>.

=item Quantifier in {,} bigger than %d in regex; marked by S<<-- HERE> in m/%s/

(F) There is currently a limit to the size of the min and max values of
the {min,max} construct.  The S<<-- HERE> shows whereabouts in the regular
expression the problem was discovered.  See L<perlre>.

=item Quantifier {n,m} with n > m can't match in regex

=item Quantifier {n,m} with n > m can't match in regex; marked by
S<<-- HERE> in m/%s/

(W regexp) Minima should be less than or equal to maxima.  If you really
want your regexp to match something 0 times, just put {0}.

=item Quantifier unexpected on zero-length expression in regex m/%s/

(W regexp) You applied a regular expression quantifier in a place where
it makes no sense, such as on a zero-width assertion.  Try putting the
quantifier inside the assertion instead.  For example, the way to match
"abc" provided that it is followed by three repetitions of "xyz" is
C</abc(?=(?:xyz){3})/>, not C</abc(?=xyz){3}/>.

=item Range iterator outside integer range

(F) One (or both) of the numeric arguments to the range operator ".."
are outside the range which can be represented by integers internally.
One possible workaround is to force Perl to use magical string increment
by prepending "0" to your numbers.

=item Ranges of ASCII printables should be some subset of "0-9", "A-Z", or
"a-z" in regex; marked by S<<-- HERE> in m/%s/

(W regexp) (only under C<S<use re 'strict'>> or within C<(?[...])>)

Stricter rules help to find typos and other errors.  Perhaps you didn't
even intend a range here, if the C<"-"> was meant to be some other
character, or should have been escaped (like C<"\-">).  If you did
intend a range, the one that was used is not portable between ASCII and
EBCDIC platforms, and doesn't have an obvious meaning to a casual
reader.

 [3-7]    # OK; Obvious and portable
 [d-g]    # OK; Obvious and portable
 [A-Y]    # OK; Obvious and portable
 [A-z]    # WRONG; Not portable; not clear what is meant
 [a-Z]    # WRONG; Not portable; not clear what is meant
 [%-.]    # WRONG; Not portable; not clear what is meant
 [\x41-Z] # WRONG; Not portable; not obvious to non-geek

(You can force portability by specifying a Unicode range, which means that
the endpoints are specified by
L<C<\N{...}>|perlrecharclass/Character Ranges>, but the meaning may
still not be obvious.)
The stricter rules require that ranges that start or stop with an ASCII
character that is not a control have all their endpoints be the literal
character, and not some escape sequence (like C<"\x41">), and the ranges
must be all digits, or all uppercase letters, or all lowercase letters.

=item Ranges of digits should be from the same group in regex; marked by
S<<-- HERE> in m/%s/

(W regexp) (only under C<S<use re 'strict'>> or within C<(?[...])>)

Stricter rules help to find typos and other errors.  You included a
range, and at least one of the end points is a decimal digit.  Under the
stricter rules, when this happens, both end points should be digits in
the same group of 10 consecutive digits.

=item readdir() attempted on invalid dirhandle %s

(W io) The dirhandle you're reading from is either closed or not really
a dirhandle.  Check your control flow.

=item readline() on closed filehandle %s

(W closed) The filehandle you're reading from got itself closed sometime
before now.  Check your control flow.

=item read() on closed filehandle %s

(W closed) You tried to read from a closed filehandle.

=item read() on unopened filehandle %s

(W unopened) You tried to read from a filehandle that was never opened.

=item Reallocation too large: %x

(F) You can't allocate more than 64K on an MS-DOS machine.

=item realloc() of freed memory ignored

(S malloc) An internal routine called realloc() on something that had
already been freed.

=item Recompile perl with B<-D>DEBUGGING to use B<-D> switch

(S debugging) You can't use the B<-D> option unless the code to produce
the desired output is compiled into Perl, which entails some overhead,
which is why it's currently left out of your copy.

=item Recursive call to Perl_load_module in PerlIO_find_layer

(P) It is currently not permitted to load modules when creating
a filehandle inside an %INC hook.  This can happen with C<open my
$fh, '<', \$scalar>, which implicitly loads PerlIO::scalar.  Try
loading PerlIO::scalar explicitly first.

=item Recursive inheritance detected in package '%s'

(F) While calculating the method resolution order (MRO) of a package, Perl
believes it found an infinite loop in the C<@ISA> hierarchy.  This is a
crude check that bails out after 100 levels of C<@ISA> depth.

=item Redundant argument in %s

(W redundant) You called a function with more arguments than other
arguments you supplied indicated would be needed.  Currently only
emitted when a printf-type format required fewer arguments than were
supplied, but might be used in the future for e.g. L<perlfunc/pack>.

=item refcnt_dec: fd %d%s

=item refcnt: fd %d%s

=item refcnt_inc: fd %d%s

(P) Perl's I/O implementation failed an internal consistency check.  If
you see this message, something is very wrong.

=item Reference found where even-sized list expected

(W misc) You gave a single reference where Perl was expecting a list
with an even number of elements (for assignment to a hash).  This
usually means that you used the anon hash constructor when you meant
to use parens.  In any case, a hash requires key/value B<pairs>.

    %hash = { one => 1, two => 2, };	# WRONG
    %hash = [ qw/ an anon array / ];	# WRONG
    %hash = ( one => 1, two => 2, );	# right
    %hash = qw( one 1 two 2 );			# also fine

=item Reference is already weak

(W misc) You have attempted to weaken a reference that is already weak.
Doing so has no effect.

=item Reference to invalid group 0 in regex; marked by S<<-- HERE> in m/%s/

(F) You used C<\g0> or similar in a regular expression.  You may refer
to capturing parentheses only with strictly positive integers
(normal backreferences) or with strictly negative integers (relative
backreferences).  Using 0 does not make sense.

=item Reference to nonexistent group in regex; marked by S<<-- HERE> in
m/%s/

(F) You used something like C<\7> in your regular expression, but there are
not at least seven sets of capturing parentheses in the expression.  If
you wanted to have the character with ordinal 7 inserted into the regular
expression, prepend zeroes to make it three digits long: C<\007>

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item Reference to nonexistent named group in regex; marked by S<<-- HERE>
in m/%s/

(F) You used something like C<\k'NAME'> or C<< \k<NAME> >> in your regular
expression, but there is no corresponding named capturing parentheses
such as C<(?'NAME'...)> or C<< (?<NAME>...) >>.  Check if the name has been
spelled correctly both in the backreference and the declaration.

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item Reference to nonexistent or unclosed group in regex; marked by
S<<-- HERE> in m/%s/

(F) You used something like C<\g{-7}> in your regular expression, but there
are not at least seven sets of closed capturing parentheses in the
expression before where the C<\g{-7}> was located.

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item regexp memory corruption

(P) The regular expression engine got confused by what the regular
expression compiler gave it.

=item Regexp modifier "/%c" may appear a maximum of twice

=item Regexp modifier "%c" may appear a maximum of twice in regex; marked
by S<<-- HERE> in m/%s/

(F) The regular expression pattern had too many occurrences
of the specified modifier.  Remove the extraneous ones.

=item Regexp modifier "%c" may not appear after the "-" in regex; marked by <-- 
HERE in m/%s/

(F) Turning off the given modifier has the side effect of turning on
another one.  Perl currently doesn't allow this.  Reword the regular
expression to use the modifier you want to turn on (and place it before
the minus), instead of the one you want to turn off.

=item Regexp modifier "/%c" may not appear twice

=item Regexp modifier "%c" may not appear twice in regex; marked by <--
HERE in m/%s/

(F) The regular expression pattern had too many occurrences
of the specified modifier.  Remove the extraneous ones.

=item Regexp modifiers "/%c" and "/%c" are mutually exclusive

=item Regexp modifiers "%c" and "%c" are mutually exclusive in regex;
marked by S<<-- HERE> in m/%s/

(F) The regular expression pattern had more than one of these
mutually exclusive modifiers.  Retain only the modifier that is
supposed to be there.

=item Regexp out of space in regex m/%s/

(P) A "can't happen" error, because safemalloc() should have caught it
earlier.

=item Repeated format line will never terminate (~~ and @#)

(F) Your format contains the ~~ repeat-until-blank sequence and a
numeric field that will never go blank so that the repetition never
terminates.  You might use ^# instead.  See L<perlform>.

=item Replacement list is longer than search list

(W misc) You have used a replacement list that is longer than the
search list.  So the additional elements in the replacement list
are meaningless.

=item '%s' resolved to '\o{%s}%d'

(W misc, regexp)  You wrote something like C<\08>, or C<\179> in a
double-quotish string.  All but the last digit is treated as a single
character, specified in octal.  The last digit is the next character in
the string.  To tell Perl that this is indeed what you want, you can use
the C<\o{ }> syntax, or use exactly three digits to specify the octal
for the character.

=item Reversed %s= operator

(W syntax) You wrote your assignment operator backwards.  The = must
always come last, to avoid ambiguity with subsequent unary operators.

=item rewinddir() attempted on invalid dirhandle %s

(W io) The dirhandle you tried to do a rewinddir() on is either closed
or not really a dirhandle.  Check your control flow.

=item Scalars leaked: %d

(S internal) Something went wrong in Perl's internal bookkeeping
of scalars: not all scalar variables were deallocated by the time
Perl exited.  What this usually indicates is a memory leak, which
is of course bad, especially if the Perl program is intended to be
long-running.

=item Scalar value @%s[%s] better written as $%s[%s]

(W syntax) You've used an array slice (indicated by @) to select a
single element of an array.  Generally it's better to ask for a scalar
value (indicated by $).  The difference is that C<$foo[&bar]> always
behaves like a scalar, both when assigning to it and when evaluating its
argument, while C<@foo[&bar]> behaves like a list when you assign to it,
and provides a list context to its subscript, which can do weird things
if you're expecting only one subscript.

On the other hand, if you were actually hoping to treat the array
element as a list, you need to look into how references work, because
Perl will not magically convert between scalars and lists for you.  See
L<perlref>.

=item Scalar value @%s{%s} better written as $%s{%s}

(W syntax) You've used a hash slice (indicated by @) to select a single
element of a hash.  Generally it's better to ask for a scalar value
(indicated by $).  The difference is that C<$foo{&bar}> always behaves
like a scalar, both when assigning to it and when evaluating its
argument, while C<@foo{&bar}> behaves like a list when you assign to it,
and provides a list context to its subscript, which can do weird things
if you're expecting only one subscript.

On the other hand, if you were actually hoping to treat the hash element
as a list, you need to look into how references work, because Perl will
not magically convert between scalars and lists for you.  See
L<perlref>.

=item Search pattern not terminated

(F) The lexer couldn't find the final delimiter of a // or m{}
construct.  Remember that bracketing delimiters count nesting level.
Missing the leading C<$> from a variable C<$m> may cause this error.

Note that since Perl 5.10.0 a // can also be the I<defined-or>
construct, not just the empty search pattern.  Therefore code written
in Perl 5.10.0 or later that uses the // as the I<defined-or> can be
misparsed by pre-5.10.0 Perls as a non-terminated search pattern.

=item seekdir() attempted on invalid dirhandle %s

(W io) The dirhandle you are doing a seekdir() on is either closed or not
really a dirhandle.  Check your control flow.

=item %sseek() on unopened filehandle

(W unopened) You tried to use the seek() or sysseek() function on a
filehandle that was either never opened or has since been closed.

=item select not implemented

(F) This machine doesn't implement the select() system call.

=item Self-ties of arrays and hashes are not supported

(F) Self-ties are of arrays and hashes are not supported in
the current implementation.

=item Semicolon seems to be missing

(W semicolon) A nearby syntax error was probably caused by a missing
semicolon, or possibly some other missing operator, such as a comma.

=item semi-panic: attempt to dup freed string

(S internal) The internal newSVsv() routine was called to duplicate a
scalar that had previously been marked as free.

=item sem%s not implemented

(F) You don't have System V semaphore IPC on your system.

=item send() on closed socket %s

(W closed) The socket you're sending to got itself closed sometime
before now.  Check your control flow.

=item Sequence "\c{" invalid

(F) These three characters may not appear in sequence in a
double-quotish context.  This message is raised only on non-ASCII
platforms (a different error message is output on ASCII ones).  If you
were intending to specify a control character with this sequence, you'll
have to use a different way to specify it.

=item Sequence (? incomplete in regex; marked by S<<-- HERE> in m/%s/

(F) A regular expression ended with an incomplete extension (?.  The
S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.  See L<perlre>.

=item Sequence (?%c...) not implemented in regex; marked by S<<-- HERE> in
m/%s/

(F) A proposed regular expression extension has the character reserved
but has not yet been written.  The S<<-- HERE> shows whereabouts in the
regular expression the problem was discovered.  See L<perlre>.

=item Sequence (?%s...) not recognized in regex; marked by S<<-- HERE> in
m/%s/

(F) You used a regular expression extension that doesn't make sense.
The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.  This may happen when using the C<(?^...)> construct to tell
Perl to use the default regular expression modifiers, and you
redundantly specify a default modifier.  For other
causes, see L<perlre>.

=item Sequence (?#... not terminated in regex m/%s/

(F) A regular expression comment must be terminated by a closing
parenthesis.  Embedded parentheses aren't allowed.  See
L<perlre>.

=item Sequence (?&... not terminated in regex; marked by S<<-- HERE> in
m/%s/

(F) A named reference of the form C<(?&...)> was missing the final
closing parenthesis after the name.  The S<<-- HERE> shows whereabouts
in the regular expression the problem was discovered.

=item Sequence (?%c... not terminated in regex; marked by S<<-- HERE>
in m/%s/

(F) A named group of the form C<(?'...')> or C<< (?<...>) >> was missing the final
closing quote or angle bracket.  The S<<-- HERE> shows whereabouts in the
regular expression the problem was discovered.

=item Sequence (?(%c... not terminated in regex; marked by S<<-- HERE>
in m/%s/

(F) A named reference of the form C<(?('...')...)> or C<< (?(<...>)...) >> was
missing the final closing quote or angle bracket after the name.  The
S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item Sequence (?... not terminated in regex; marked by S<<-- HERE> in
m/%s/

(F) There was no matching closing parenthesis for the '('.  The
S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.

=item Sequence \%s... not terminated in regex; marked by S<<-- HERE> in
m/%s/

(F) The regular expression expects a mandatory argument following the escape
sequence and this has been omitted or incorrectly written.

=item Sequence (?{...}) not terminated with ')'

(F) The end of the perl code contained within the {...} must be
followed immediately by a ')'.

=item Sequence (?PE<gt>... not terminated in regex; marked by S<<-- HERE> in m/%s/

(F) A named reference of the form C<(?PE<gt>...)> was missing the final
closing parenthesis after the name.  The S<<-- HERE> shows whereabouts
in the regular expression the problem was discovered.

=item Sequence (?PE<lt>... not terminated in regex; marked by S<<-- HERE> in m/%s/

(F) A named group of the form C<(?PE<lt>...E<gt>')> was missing the final
closing angle bracket.  The S<<-- HERE> shows whereabouts in the
regular expression the problem was discovered.

=item Sequence ?P=... not terminated in regex; marked by S<<-- HERE> in
m/%s/

(F) A named reference of the form C<(?P=...)> was missing the final
closing parenthesis after the name.  The S<<-- HERE> shows whereabouts
in the regular expression the problem was discovered.

=item Sequence (?R) not terminated in regex m/%s/

(F) An C<(?R)> or C<(?0)> sequence in a regular expression was missing the
final parenthesis.

=item Server error (a.k.a. "500 Server error")

(A) This is the error message generally seen in a browser window
when trying to run a CGI program (including SSI) over the web.  The
actual error text varies widely from server to server.  The most
frequently-seen variants are "500 Server error", "Method (something)
not permitted", "Document contains no data", "Premature end of script
headers", and "Did not produce a valid header".

B<This is a CGI error, not a Perl error>.

You need to make sure your script is executable, is accessible by
the user CGI is running the script under (which is probably not the
user account you tested it under), does not rely on any environment
variables (like PATH) from the user it isn't running under, and isn't
in a location where the CGI server can't find it, basically, more or
less.  Please see the following for more information:

	http://www.perl.org/CGI_MetaFAQ.html
	http://www.htmlhelp.org/faq/cgifaq.html
	http://www.w3.org/Security/Faq/

You should also look at L<perlfaq9>.

=item setegid() not implemented

(F) You tried to assign to C<$)>, and your operating system doesn't
support the setegid() system call (or equivalent), or at least Configure
didn't think so.

=item seteuid() not implemented

(F) You tried to assign to C<< $> >>, and your operating system doesn't
support the seteuid() system call (or equivalent), or at least Configure
didn't think so.

=item setpgrp can't take arguments

(F) Your system has the setpgrp() from BSD 4.2, which takes no
arguments, unlike POSIX setpgid(), which takes a process ID and process
group ID.

=item setrgid() not implemented

(F) You tried to assign to C<$(>, and your operating system doesn't
support the setrgid() system call (or equivalent), or at least Configure
didn't think so.

=item setruid() not implemented

(F) You tried to assign to C<$<>, and your operating system doesn't
support the setruid() system call (or equivalent), or at least Configure
didn't think so.

=item setsockopt() on closed socket %s

(W closed) You tried to set a socket option on a closed socket.  Did you
forget to check the return value of your socket() call?  See
L<perlfunc/setsockopt>.

=item Setting ${^ENCODING} is deprecated

(D deprecated) You assigned a non-C<undef> value to C<${^ENCODING}>.
This is deprecated; see C<L<perlvar/${^ENCODING}>> for details.

=item Setting $/ to a reference to %s as a form of slurp is deprecated, treating as undef

(D deprecated) You assigned a reference to a scalar to C<$/> where the
referenced item is not a positive integer.  In older perls this B<appeared>
to work the same as setting it to C<undef> but was in fact internally
different, less efficient and with very bad luck could have resulted in
your file being split by a stringified form of the reference.

In Perl 5.20.0 this was changed so that it would be B<exactly> the same as
setting C<$/> to undef, with the exception that this warning would be
thrown.

You are recommended to change your code to set C<$/> to C<undef> explicitly
if you wish to slurp the file. In future versions of Perl assigning
a reference to will throw a fatal error.

=item Setting $/ to %s reference is forbidden

(F) You tried to assign a reference to a non integer to C<$/>.  In older
Perls this would have behaved similarly to setting it to a reference to
a positive integer, where the integer was the address of the reference.
As of Perl 5.20.0 this is a fatal error, to allow future versions of Perl
to use non-integer refs for more interesting purposes.

=item shm%s not implemented

(F) You don't have System V shared memory IPC on your system.

=item !=~ should be !~

(W syntax) The non-matching operator is !~, not !=~.  !=~ will be
interpreted as the != (numeric not equal) and ~ (1's complement)
operators: probably not what you intended.

=item /%s/ should probably be written as "%s"

(W syntax) You have used a pattern where Perl expected to find a string,
as in the first argument to C<join>.  Perl will treat the true or false
result of matching the pattern against $_ as the string, which is
probably not what you had in mind.

=item shutdown() on closed socket %s

(W closed) You tried to do a shutdown on a closed socket.  Seems a bit
superfluous.

=item SIG%s handler "%s" not defined

(W signal) The signal handler named in %SIG doesn't, in fact, exist.
Perhaps you put it into the wrong package?

=item Slab leaked from cv %p

(S) If you see this message, then something is seriously wrong with the
internal bookkeeping of op trees.  An op tree needed to be freed after
a compilation error, but could not be found, so it was leaked instead.

=item sleep(%u) too large

(W overflow) You called C<sleep> with a number that was larger than
it can reliably handle and C<sleep> probably slept for less time than
requested.

=item Slurpy parameter not last

(F) In a subroutine signature, you put something after a slurpy (array or
hash) parameter.  The slurpy parameter takes all the available arguments,
so there can't be any left to fill later parameters.

=item Smart matching a non-overloaded object breaks encapsulation

(F) You should not use the C<~~> operator on an object that does not
overload it: Perl refuses to use the object's underlying structure
for the smart match.

=item Smartmatch is experimental

(S experimental::smartmatch) This warning is emitted if you
use the smartmatch (C<~~>) operator.  This is currently an experimental
feature, and its details are subject to change in future releases of
Perl.  Particularly, its current behavior is noticed for being
unnecessarily complex and unintuitive, and is very likely to be
overhauled.

=item sort is now a reserved word

(F) An ancient error message that almost nobody ever runs into anymore.
But before sort was a keyword, people sometimes used it as a filehandle.

=item Source filters apply only to byte streams

(F) You tried to activate a source filter (usually by loading a
source filter module) within a string passed to C<eval>.  This is
not permitted under the C<unicode_eval> feature.  Consider using
C<evalbytes> instead.  See L<feature>.

=item splice() offset past end of array

(W misc) You attempted to specify an offset that was past the end of
the array passed to splice().  Splicing will instead commence at the
end of the array, rather than past it.  If this isn't what you want,
try explicitly pre-extending the array by assigning $#array = $offset.
See L<perlfunc/splice>.

=item Split loop

(P) The split was looping infinitely.  (Obviously, a split shouldn't
iterate more times than there are characters of input, which is what
happened.)  See L<perlfunc/split>.

=item Statement unlikely to be reached

(W exec) You did an exec() with some statement after it other than a
die().  This is almost always an error, because exec() never returns
unless there was a failure.  You probably wanted to use system()
instead, which does return.  To suppress this warning, put the exec() in
a block by itself.

=item "state" subroutine %s can't be in a package

(F) Lexically scoped subroutines aren't in a package, so it doesn't make
sense to try to declare one with a package qualifier on the front.

=item "state %s" used in sort comparison

(W syntax) The package variables $a and $b are used for sort comparisons.
You used $a or $b in as an operand to the C<< <=> >> or C<cmp> operator inside a
sort comparison block, and the variable had earlier been declared as a
lexical variable.  Either qualify the sort variable with the package
name, or rename the lexical variable.

=item "state" variable %s can't be in a package

(F) Lexically scoped variables aren't in a package, so it doesn't make
sense to try to declare one with a package qualifier on the front.  Use
local() if you want to localize a package variable.

=item stat() on unopened filehandle %s

(W unopened) You tried to use the stat() function on a filehandle that
was either never opened or has since been closed.

=item Strings with code points over 0xFF may not be mapped into in-memory file handles

(W utf8) You tried to open a reference to a scalar for read or append
where the scalar contained code points over 0xFF.  In-memory files
model on-disk files and can only contain bytes.

=item Stub found while resolving method "%s" overloading "%s" in package "%s"

(P) Overloading resolution over @ISA tree may be broken by importation
stubs.  Stubs should never be implicitly created, but explicit calls to
C<can> may break this.

=item Subroutine "&%s" is not available

(W closure) During compilation, an inner named subroutine or eval is
attempting to capture an outer lexical subroutine that is not currently
available.  This can happen for one of two reasons.  First, the lexical
subroutine may be declared in an outer anonymous subroutine that has
not yet been created.  (Remember that named subs are created at compile
time, while anonymous subs are created at run-time.)  For example,

    sub { my sub a {...} sub f { \&a } }

At the time that f is created, it can't capture the current "a" sub,
since the anonymous subroutine hasn't been created yet.  Conversely, the
following won't give a warning since the anonymous subroutine has by now
been created and is live:

    sub { my sub a {...} eval 'sub f { \&a }' }->();

The second situation is caused by an eval accessing a lexical subroutine
that has gone out of scope, for example,

    sub f {
	my sub a {...}
	sub { eval '\&a' }
    }
    f()->();

Here, when the '\&a' in the eval is being compiled, f() is not currently
being executed, so its &a is not available for capture.

=item "%s" subroutine &%s masks earlier declaration in same %s

(W misc) A "my" or "state" subroutine has been redeclared in the
current scope or statement, effectively eliminating all access to
the previous instance.  This is almost always a typographical error.
Note that the earlier subroutine will still exist until the end of
the scope or until all closure references to it are destroyed.

=item Subroutine %s redefined

(W redefine) You redefined a subroutine.  To suppress this warning, say

    {
	no warnings 'redefine';
	eval "sub name { ... }";
    }

=item Subroutine "%s" will not stay shared

(W closure) An inner (nested) I<named> subroutine is referencing a "my"
subroutine defined in an outer named subroutine.

When the inner subroutine is called, it will see the value of the outer
subroutine's lexical subroutine as it was before and during the *first*
call to the outer subroutine; in this case, after the first call to the
outer subroutine is complete, the inner and outer subroutines will no
longer share a common value for the lexical subroutine.  In other words,
it will no longer be shared.  This will especially make a difference
if the lexical subroutines accesses lexical variables declared in its
surrounding scope.

This problem can usually be solved by making the inner subroutine
anonymous, using the C<sub {}> syntax.  When inner anonymous subs that
reference lexical subroutines in outer subroutines are created, they
are automatically rebound to the current values of such lexical subs.

=item Substitution loop

(P) The substitution was looping infinitely.  (Obviously, a substitution
shouldn't iterate more times than there are characters of input, which
is what happened.)  See the discussion of substitution in
L<perlop/"Regexp Quote-Like Operators">.

=item Substitution pattern not terminated

(F) The lexer couldn't find the interior delimiter of an s/// or s{}{}
construct.  Remember that bracketing delimiters count nesting level.
Missing the leading C<$> from variable C<$s> may cause this error.

=item Substitution replacement not terminated

(F) The lexer couldn't find the final delimiter of an s/// or s{}{}
construct.  Remember that bracketing delimiters count nesting level.
Missing the leading C<$> from variable C<$s> may cause this error.

=item substr outside of string

(W substr)(F) You tried to reference a substr() that pointed outside of
a string.  That is, the absolute value of the offset was larger than the
length of the string.  See L<perlfunc/substr>.  This warning is fatal if
substr is used in an lvalue context (as the left hand side of an
assignment or as a subroutine argument for example).

=item sv_upgrade from type %d down to type %d

(P) Perl tried to force the upgrade of an SV to a type which was actually
inferior to its current type.

=item SWASHNEW didn't return an HV ref

(P) Something went wrong internally when Perl was trying to look up
Unicode characters.

=item Switch (?(condition)... contains too many branches in regex; marked by 
S<<-- HERE> in m/%s/

(F) A (?(condition)if-clause|else-clause) construct can have at most
two branches (the if-clause and the else-clause).  If you want one or
both to contain alternation, such as using C<this|that|other>, enclose
it in clustering parentheses:

    (?(condition)(?:this|that|other)|else-clause)

The S<<-- HERE> shows whereabouts in the regular expression the problem
was discovered.  See L<perlre>.

=item Switch condition not recognized in regex; marked by S<<-- HERE> in
m/%s/

(F) The condition part of a (?(condition)if-clause|else-clause) construct
is not known.  The condition must be one of the following:

 (1) (2) ...        true if 1st, 2nd, etc., capture matched
 (<NAME>) ('NAME')  true if named capture matched
 (?=...) (?<=...)   true if subpattern matches
 (?!...) (?<!...)   true if subpattern fails to match
 (?{ CODE })        true if code returns a true value
 (R)                true if evaluating inside recursion
 (R1) (R2) ...      true if directly inside capture group 1, 2, etc.
 (R&NAME)           true if directly inside named capture
 (DEFINE)           always false; for defining named subpatterns

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.  See L<perlre>.

=item Switch (?(condition)... not terminated in regex; marked by
S<<-- HERE> in m/%s/

(F) You omitted to close a (?(condition)...) block somewhere
in the pattern.  Add a closing parenthesis in the appropriate
position.  See L<perlre>.

=item switching effective %s is not implemented

(F) While under the C<use filetest> pragma, we cannot switch the real
and effective uids or gids.

=item syntax error

(F) Probably means you had a syntax error.  Common reasons include:

    A keyword is misspelled.
    A semicolon is missing.
    A comma is missing.
    An opening or closing parenthesis is missing.
    An opening or closing brace is missing.
    A closing quote is missing.

Often there will be another error message associated with the syntax
error giving more information.  (Sometimes it helps to turn on B<-w>.)
The error message itself often tells you where it was in the line when
it decided to give up.  Sometimes the actual error is several tokens
before this, because Perl is good at understanding random input.
Occasionally the line number may be misleading, and once in a blue moon
the only way to figure out what's triggering the error is to call
C<perl -c> repeatedly, chopping away half the program each time to see
if the error went away.  Sort of the cybernetic version of S<20 questions>.

=item syntax error at line %d: '%s' unexpected

(A) You've accidentally run your script through the Bourne shell instead
of Perl.  Check the #! line, or manually feed your script into Perl
yourself.

=item syntax error in file %s at line %d, next 2 tokens "%s"

(F) This error is likely to occur if you run a perl5 script through
a perl4 interpreter, especially if the next 2 tokens are "use strict"
or "my $var" or "our $var".

=item Syntax error in (?[...]) in regex; marked by <-- HERE in m/%s/

(F) Perl could not figure out what you meant inside this construct; this
notifies you that it is giving up trying.

=item %s syntax OK

(F) The final summary message when a C<perl -c> succeeds.

=item sysread() on closed filehandle %s

(W closed) You tried to read from a closed filehandle.

=item sysread() on unopened filehandle %s

(W unopened) You tried to read from a filehandle that was never opened.

=item System V %s is not implemented on this machine

(F) You tried to do something with a function beginning with "sem",
"shm", or "msg" but that System V IPC is not implemented in your
machine.  In some machines the functionality can exist but be
unconfigured.  Consult your system support.

=item syswrite() on closed filehandle %s

(W closed) The filehandle you're writing to got itself closed sometime
before now.  Check your control flow.

=item C<-T> and C<-B> not implemented on filehandles

(F) Perl can't peek at the stdio buffer of filehandles when it doesn't
know about your kind of stdio.  You'll have to use a filename instead.

=item Target of goto is too deeply nested

(F) You tried to use C<goto> to reach a label that was too deeply nested
for Perl to reach.  Perl is doing you a favor by refusing.

=item telldir() attempted on invalid dirhandle %s

(W io) The dirhandle you tried to telldir() is either closed or not really
a dirhandle.  Check your control flow.

=item tell() on unopened filehandle

(W unopened) You tried to use the tell() function on a filehandle that
was either never opened or has since been closed.

=item That use of $[ is unsupported

(F) Assignment to C<$[> is now strictly circumscribed, and interpreted
as a compiler directive.  You may say only one of

    $[ = 0;
    $[ = 1;
    ...
    local $[ = 0;
    local $[ = 1;
    ...

This is to prevent the problem of one module changing the array base out
from under another module inadvertently.  See L<perlvar/$[> and L<arybase>.

=item The bitwise feature is experimental

(S experimental::bitwise) This warning is emitted if you use bitwise
operators (C<& | ^ ~ &. |. ^. ~.>) with the "bitwise" feature enabled.
Simply suppress the warning if you want to use the feature, but know
that in doing so you are taking the risk of using an experimental
feature which may change or be removed in a future Perl version:

    no warnings "experimental::bitwise";
    use feature "bitwise";
    $x |.= $y;

=item The crypt() function is unimplemented due to excessive paranoia.

(F) Configure couldn't find the crypt() function on your machine,
probably because your vendor didn't supply it, probably because they
think the U.S. Government thinks it's a secret, or at least that they
will continue to pretend that it is.  And if you quote me on that, I
will deny it.

=item The %s function is unimplemented

(F) The function indicated isn't implemented on this architecture,
according to the probings of Configure.

=item The lexical_subs feature is experimental

(S experimental::lexical_subs) This warning is emitted if you
declare a sub with C<my> or C<state>.  Simply suppress the warning
if you want to use the feature, but know that in doing so you
are taking the risk of using an experimental feature which may
change or be removed in a future Perl version:

    no warnings "experimental::lexical_subs";
    use feature "lexical_subs";
    my sub foo { ... }

=item The regex_sets feature is experimental

(S experimental::regex_sets) This warning is emitted if you
use the syntax S<C<(?[   ])>> in a regular expression.
The details of this feature are subject to change.
if you want to use it, but know that in doing so you
are taking the risk of using an experimental feature which may
change in a future Perl version, you can do this to silence the
warning:

    no warnings "experimental::regex_sets";

=item The signatures feature is experimental

(S experimental::signatures) This warning is emitted if you unwrap a
subroutine's arguments using a signature.  Simply suppress the warning
if you want to use the feature, but know that in doing so you are taking
the risk of using an experimental feature which may change or be removed
in a future Perl version:

    no warnings "experimental::signatures";
    use feature "signatures";
    sub foo ($left, $right) { ... }

=item The stat preceding %s wasn't an lstat

(F) It makes no sense to test the current stat buffer for symbolic
linkhood if the last stat that wrote to the stat buffer already went
past the symlink to get to the real file.  Use an actual filename
instead.

=item The 'unique' attribute may only be applied to 'our' variables

(F) This attribute was never supported on C<my> or C<sub> declarations.

=item This Perl can't reset CRTL environ elements (%s)

=item This Perl can't set CRTL environ elements (%s=%s)

(W internal) Warnings peculiar to VMS.  You tried to change or delete an
element of the CRTL's internal environ array, but your copy of Perl
wasn't built with a CRTL that contained the setenv() function.  You'll
need to rebuild Perl with a CRTL that does, or redefine
F<PERL_ENV_TABLES> (see L<perlvms>) so that the environ array isn't the
target of the change to
%ENV which produced the warning.

=item This Perl has not been built with support for randomized hash key traversal but something called Perl_hv_rand_set().

(F) Something has attempted to use an internal API call which
depends on Perl being compiled with the default support for randomized hash
key traversal, but this Perl has been compiled without it.  You should
report this warning to the relevant upstream party, or recompile perl
with default options.

=item times not implemented

(F) Your version of the C library apparently doesn't do times().  I
suspect you're not running on Unix.

=item "-T" is on the #! line, it must also be used on the command line

(X) The #! line (or local equivalent) in a Perl script contains
the B<-T> option (or the B<-t> option), but Perl was not invoked with
B<-T> in its command line.  This is an error because, by the time
Perl discovers a B<-T> in a script, it's too late to properly taint
everything from the environment.  So Perl gives up.

If the Perl script is being executed as a command using the #!
mechanism (or its local equivalent), this error can usually be
fixed by editing the #! line so that the B<-%c> option is a part of
Perl's first argument: e.g. change C<perl -n -%c> to C<perl -%c -n>.

If the Perl script is being executed as C<perl scriptname>, then the
B<-%c> option must appear on the command line: C<perl -%c scriptname>.

=item To%s: illegal mapping '%s'

(F) You tried to define a customized To-mapping for lc(), lcfirst,
uc(), or ucfirst() (or their string-inlined versions), but you
specified an illegal mapping.
See L<perlunicode/"User-Defined Character Properties">.

=item Too deeply nested ()-groups

(F) Your template contains ()-groups with a ridiculously deep nesting level.

=item Too few args to syscall

(F) There has to be at least one argument to syscall() to specify the
system call to call, silly dilly.

=item Too few arguments for subroutine

(F) A subroutine using a signature received fewer arguments than required
by the signature.  The caller of the subroutine is presumably at fault.
Inconveniently, this error will be reported at the location of the
subroutine, not that of the caller.

=item Too late for "-%s" option

(X) The #! line (or local equivalent) in a Perl script contains the
B<-M>, B<-m> or B<-C> option.

In the case of B<-M> and B<-m>, this is an error because those options
are not intended for use inside scripts.  Use the C<use> pragma instead.

The B<-C> option only works if it is specified on the command line as
well (with the same sequence of letters or numbers following).  Either
specify this option on the command line, or, if your system supports
it, make your script executable and run it directly instead of passing
it to perl.

=item Too late to run %s block

(W void) A CHECK or INIT block is being defined during run time proper,
when the opportunity to run them has already passed.  Perhaps you are
loading a file with C<require> or C<do> when you should be using C<use>
instead.  Or perhaps you should put the C<require> or C<do> inside a
BEGIN block.

=item Too many args to syscall

(F) Perl supports a maximum of only 14 args to syscall().

=item Too many arguments for %s

(F) The function requires fewer arguments than you specified.

=item Too many arguments for subroutine

(F) A subroutine using a signature received more arguments than required
by the signature.  The caller of the subroutine is presumably at fault.
Inconveniently, this error will be reported at the location of the
subroutine, not that of the caller.

=item Too many )'s

(A) You've accidentally run your script through B<csh> instead of Perl.
Check the #! line, or manually feed your script into Perl yourself.

=item Too many ('s

(A) You've accidentally run your script through B<csh> instead of Perl.
Check the #! line, or manually feed your script into Perl yourself.

=item Trailing \ in regex m/%s/

(F) The regular expression ends with an unbackslashed backslash.
Backslash it.   See L<perlre>.

=item Transliteration pattern not terminated

(F) The lexer couldn't find the interior delimiter of a tr/// or tr[][]
or y/// or y[][] construct.  Missing the leading C<$> from variables
C<$tr> or C<$y> may cause this error.

=item Transliteration replacement not terminated

(F) The lexer couldn't find the final delimiter of a tr///, tr[][],
y/// or y[][] construct.

=item '%s' trapped by operation mask

(F) You tried to use an operator from a Safe compartment in which it's
disallowed.  See L<Safe>.

=item truncate not implemented

(F) Your machine doesn't implement a file truncation mechanism that
Configure knows about.

=item Type of arg %d to &CORE::%s must be %s

(F) The subroutine in question in the CORE package requires its argument
to be a hard reference to data of the specified type.  Overloading is
ignored, so a reference to an object that is not the specified type, but
nonetheless has overloading to handle it, will still not be accepted.

=item Type of arg %d to %s must be %s (not %s)

(F) This function requires the argument in that position to be of a
certain type.  Arrays must be @NAME or C<@{EXPR}>.  Hashes must be
%NAME or C<%{EXPR}>.  No implicit dereferencing is allowed--use the
{EXPR} forms as an explicit dereference.  See L<perlref>.

=item umask not implemented

(F) Your machine doesn't implement the umask function and you tried to
use it to restrict permissions for yourself (EXPR & 0700).

=item Unbalanced context: %d more PUSHes than POPs

(S internal) The exit code detected an internal inconsistency in how
many execution contexts were entered and left.

=item Unbalanced saves: %d more saves than restores

(S internal) The exit code detected an internal inconsistency in how
many values were temporarily localized.

=item Unbalanced scopes: %d more ENTERs than LEAVEs

(S internal) The exit code detected an internal inconsistency in how
many blocks were entered and left.

=item Unbalanced string table refcount: (%d) for "%s"

(S internal) On exit, Perl found some strings remaining in the shared
string table used for copy on write and for hash keys.  The entries
should have been freed, so this indicates a bug somewhere.

=item Unbalanced tmps: %d more allocs than frees

(S internal) The exit code detected an internal inconsistency in how
many mortal scalars were allocated and freed.

=item Undefined format "%s" called

(F) The format indicated doesn't seem to exist.  Perhaps it's really in
another package?  See L<perlform>.

=item Undefined sort subroutine "%s" called

(F) The sort comparison routine specified doesn't seem to exist.
Perhaps it's in a different package?  See L<perlfunc/sort>.

=item Undefined subroutine &%s called

(F) The subroutine indicated hasn't been defined, or if it was, it has
since been undefined.

=item Undefined subroutine called

(F) The anonymous subroutine you're trying to call hasn't been defined,
or if it was, it has since been undefined.

=item Undefined subroutine in sort

(F) The sort comparison routine specified is declared but doesn't seem
to have been defined yet.  See L<perlfunc/sort>.

=item Undefined top format "%s" called

(F) The format indicated doesn't seem to exist.  Perhaps it's really in
another package?  See L<perlform>.

=item Undefined value assigned to typeglob

(W misc) An undefined value was assigned to a typeglob, a la
C<*foo = undef>.  This does nothing.  It's possible that you really mean
C<undef *foo>.

=item %s: Undefined variable

(A) You've accidentally run your script through B<csh> instead of Perl.
Check the #! line, or manually feed your script into Perl yourself.

=item Unescaped left brace in regex is deprecated, passed through in regex;
marked by S<<-- HERE> in m/%s/

(D deprecated, regexp) You used a literal C<"{"> character in a regular
expression pattern.  You should change to use C<"\{"> instead, because a
future version of Perl (tentatively v5.26) will consider this to be a
syntax error.  If the pattern delimiters are also braces, any matching
right brace (C<"}">) should also be escaped to avoid confusing the parser,
for example,

    qr{abc\{def\}ghi}

=item unexec of %s into %s failed!

(F) The unexec() routine failed for some reason.  See your local FSF
representative, who probably put it there in the first place.

=item Unexpected ']' with no following ')' in (?[... in regex; marked by <-- HERE in m/%s/

(F) While parsing an extended character class a ']' character was encountered
at a point in the definition where the only legal use of ']' is to close the
character class definition as part of a '])', you may have forgotten the close
paren, or otherwise confused the parser.

=item Expecting close paren for nested extended charclass in regex; marked by <-- HERE in m/%s/

(F) While parsing a nested extended character class like:

    (?[ ... (?flags:(?[ ... ])) ... ])
                             ^

we expected to see a close paren ')' (marked by ^) but did not.

=item Expecting close paren for wrapper for nested extended charclass in regex; marked by <-- HERE in m/%s/

(F) While parsing a nested extended character class like:

    (?[ ... (?flags:(?[ ... ])) ... ])
                              ^

we expected to see a close paren ')' (marked by ^) but did not.

=item Unexpected binary operator '%c' with no preceding operand in regex;
marked by S<<-- HERE> in m/%s/

(F) You had something like this:

 (?[ | \p{Digit} ])

where the C<"|"> is a binary operator with an operand on the right, but
no operand on the left.

=item Unexpected character in regex; marked by S<<-- HERE> in m/%s/

(F) You had something like this:

 (?[ z ])

Within C<(?[ ])>, no literal characters are allowed unless they are
within an inner pair of square brackets, like

 (?[ [ z ] ])

Another possibility is that you forgot a backslash.  Perl isn't smart
enough to figure out what you really meant.

=item Unexpected constant lvalue entersub entry via type/targ %d:%d

(P) When compiling a subroutine call in lvalue context, Perl failed an
internal consistency check.  It encountered a malformed op tree.

=item Unexpected exit %u

(S) exit() was called or the script otherwise finished gracefully when
C<PERL_EXIT_WARN> was set in C<PL_exit_flags>.

=item Unexpected exit failure %d

(S) An uncaught die() was called when C<PERL_EXIT_WARN> was set in
C<PL_exit_flags>.

=item Unexpected ')' in regex; marked by S<<-- HERE> in m/%s/

(F) You had something like this:

 (?[ ( \p{Digit} + ) ])

The C<")"> is out-of-place.  Something apparently was supposed to
be combined with the digits, or the C<"+"> shouldn't be there, or
something like that.  Perl can't figure out what was intended.

=item Unexpected '(' with no preceding operator in regex; marked by
S<<-- HERE> in m/%s/

(F) You had something like this:

 (?[ \p{Digit} ( \p{Lao} + \p{Thai} ) ])

There should be an operator before the C<"(">, as there's
no indication as to how the digits are to be combined
with the characters in the Lao and Thai scripts.

=item Unicode non-character U+%X is not recommended for open interchange

(S nonchar) Certain codepoints, such as U+FFFE and U+FFFF, are
defined by the Unicode standard to be non-characters.  Those
are legal codepoints, but are reserved for internal use; so,
applications shouldn't attempt to exchange them.  An application
may not be expecting any of these characters at all, and receiving
them may lead to bugs.  If you know what you are doing you can
turn off this warning by C<no warnings 'nonchar';>.

This is not really a "severe" error, but it is supposed to be
raised by default even if warnings are not enabled, and currently
the only way to do that in Perl is to mark it as serious.

=item Unicode surrogate U+%X is illegal in UTF-8

(S surrogate) You had a UTF-16 surrogate in a context where they are
not considered acceptable.  These code points, between U+D800 and
U+DFFF (inclusive), are used by Unicode only for UTF-16.  However, Perl
internally allows all unsigned integer code points (up to the size limit
available on your platform), including surrogates.  But these can cause
problems when being input or output, which is likely where this message
came from.  If you really really know what you are doing you can turn
off this warning by C<no warnings 'surrogate';>.

=item Unknown charname '' is deprecated

(D deprecated) You had a C<\N{}> with nothing between the braces.  This
usage is deprecated, and will be made a syntax error in a future Perl
version.

=item Unknown charname '%s'

(F) The name you used inside C<\N{}> is unknown to Perl.  Check the
spelling.  You can say C<use charnames ":loose"> to not have to be
so precise about spaces, hyphens, and capitalization on standard Unicode
names.  (Any custom aliases that have been created must be specified
exactly, regardless of whether C<:loose> is used or not.)  This error may
also happen if the C<\N{}> is not in the scope of the corresponding
C<S<use charnames>>.

=item Unknown error

(P) Perl was about to print an error message in C<$@>, but the C<$@> variable
did not exist, even after an attempt to create it.

=item Unknown open() mode '%s'

(F) The second argument of 3-argument open() is not among the list
of valid modes: C<< < >>, C<< > >>, C<<< >> >>>, C<< +< >>,
C<< +> >>, C<<< +>> >>>, C<-|>, C<|->, C<< <& >>, C<< >& >>.

=item Unknown PerlIO layer "%s"

(W layer) An attempt was made to push an unknown layer onto the Perl I/O
system.  (Layers take care of transforming data between external and
internal representations.)  Note that some layers, such as C<mmap>,
are not supported in all environments.  If your program didn't
explicitly request the failing operation, it may be the result of the
value of the environment variable PERLIO.

=item Unknown process %x sent message to prime_env_iter: %s

(P) An error peculiar to VMS.  Perl was reading values for %ENV before
iterating over it, and someone else stuck a message in the stream of
data Perl expected.  Someone's very confused, or perhaps trying to
subvert Perl's population of %ENV for nefarious purposes.

=item Unknown regex modifier "%s"

(F) Alphanumerics immediately following the closing delimiter
of a regular expression pattern are interpreted by Perl as modifier
flags for the regex.  One of the ones you specified is invalid.  One way
this can happen is if you didn't put in white space between the end of
the regex and a following alphanumeric operator:

 if ($a =~ /foo/and $bar == 3) { ... }

The C<"a"> is a valid modifier flag, but the C<"n"> is not, and raises
this error.  Likely what was meant instead was:

 if ($a =~ /foo/ and $bar == 3) { ... }

=item Unknown "re" subpragma '%s' (known ones are: %s)

(W) You tried to use an unknown subpragma of the "re" pragma.

=item Unknown switch condition (?(...)) in regex; marked by S<<-- HERE> in
m/%s/

(F) The condition part of a (?(condition)if-clause|else-clause) construct
is not known.  The condition must be one of the following:

 (1) (2) ...        true if 1st, 2nd, etc., capture matched
 (<NAME>) ('NAME')  true if named capture matched
 (?=...) (?<=...)   true if subpattern matches
 (?!...) (?<!...)   true if subpattern fails to match
 (?{ CODE })        true if code returns a true value
 (R)                true if evaluating inside recursion
 (R1) (R2) ...      true if directly inside capture group 1, 2, etc.
 (R&NAME)           true if directly inside named capture
 (DEFINE)           always false; for defining named subpatterns

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.  See L<perlre>.

=item Unknown Unicode option letter '%c'

(F) You specified an unknown Unicode option.  See L<perlrun> documentation
of the C<-C> switch for the list of known options.

=item Unknown Unicode option value %d

(F) You specified an unknown Unicode option.  See L<perlrun> documentation
of the C<-C> switch for the list of known options.

=item Unknown verb pattern '%s' in regex; marked by S<<-- HERE> in m/%s/

(F) You either made a typo or have incorrectly put a C<*> quantifier
after an open brace in your pattern.  Check the pattern and review
L<perlre> for details on legal verb patterns.

=item Unknown warnings category '%s'

(F) An error issued by the C<warnings> pragma.  You specified a warnings
category that is unknown to perl at this point.

Note that if you want to enable a warnings category registered by a
module (e.g. C<use warnings 'File::Find'>), you must have loaded this
module first.

=item Unmatched [ in regex; marked by S<<-- HERE> in m/%s/

(F) The brackets around a character class must match.  If you wish to
include a closing bracket in a character class, backslash it or put it
first.  The S<<-- HERE> shows whereabouts in the regular expression the
problem was discovered.  See L<perlre>.

=item Unmatched ( in regex; marked by S<<-- HERE> in m/%s/

=item Unmatched ) in regex; marked by S<<-- HERE> in m/%s/

(F) Unbackslashed parentheses must always be balanced in regular
expressions.  If you're a vi user, the % key is valuable for finding
the matching parenthesis.  The S<<-- HERE> shows whereabouts in the
regular expression the problem was discovered.  See L<perlre>.

=item Unmatched right %s bracket

(F) The lexer counted more closing curly or square brackets than opening
ones, so you're probably missing a matching opening bracket.  As a
general rule, you'll find the missing one (so to speak) near the place
you were last editing.

=item Unquoted string "%s" may clash with future reserved word

(W reserved) You used a bareword that might someday be claimed as a
reserved word.  It's best to put such a word in quotes, or capitalize it
somehow, or insert an underbar into it.  You might also declare it as a
subroutine.

=item Unrecognized character %s; marked by S<<-- HERE> after %s near column
%d

(F) The Perl parser has no idea what to do with the specified character
in your Perl script (or eval) near the specified column.  Perhaps you
tried  to run a compressed script, a binary program, or a directory as
a Perl program.

=item Unrecognized escape \%c in character class in regex; marked by
S<<-- HERE> in m/%s/

(F) You used a backslash-character combination which is not
recognized by Perl inside character classes.  This is a fatal
error when the character class is used within C<(?[ ])>.

=item Unrecognized escape \%c in character class passed through in regex; 
marked by S<<-- HERE> in m/%s/

(W regexp) You used a backslash-character combination which is not
recognized by Perl inside character classes.  The character was
understood literally, but this may change in a future version of Perl.
The S<<-- HERE> shows whereabouts in the regular expression the
escape was discovered.

=item Unrecognized escape \%c passed through

(W misc) You used a backslash-character combination which is not
recognized by Perl.  The character was understood literally, but this may
change in a future version of Perl.

=item Unrecognized escape \%s passed through in regex; marked by
S<<-- HERE> in m/%s/

(W regexp) You used a backslash-character combination which is not
recognized by Perl.  The character(s) were understood literally, but
this may change in a future version of Perl.  The S<<-- HERE> shows
whereabouts in the regular expression the escape was discovered.

=item Unrecognized signal name "%s"

(F) You specified a signal name to the kill() function that was not
recognized.  Say C<kill -l> in your shell to see the valid signal names
on your system.

=item Unrecognized switch: -%s  (-h will show valid options)

(F) You specified an illegal option to Perl.  Don't do that.  (If you
think you didn't do that, check the #! line to see if it's supplying the
bad switch on your behalf.)

=item Unsuccessful %s on filename containing newline

(W newline) A file operation was attempted on a filename, and that
operation failed, PROBABLY because the filename contained a newline,
PROBABLY because you forgot to chomp() it off.  See L<perlfunc/chomp>.

=item Unsupported directory function "%s" called

(F) Your machine doesn't support opendir() and readdir().

=item Unsupported function %s

(F) This machine doesn't implement the indicated function, apparently.
At least, Configure doesn't think so.

=item Unsupported function fork

(F) Your version of executable does not support forking.

Note that under some systems, like OS/2, there may be different flavors
of Perl executables, some of which may support fork, some not.  Try
changing the name you call Perl by to C<perl_>, C<perl__>, and so on.

=item Unsupported script encoding %s

(F) Your program file begins with a Unicode Byte Order Mark (BOM) which
declares it to be in a Unicode encoding that Perl cannot read.

=item Unsupported socket function "%s" called

(F) Your machine doesn't support the Berkeley socket mechanism, or at
least that's what Configure thought.

=item Unterminated attribute list

(F) The lexer found something other than a simple identifier at the
start of an attribute, and it wasn't a semicolon or the start of a
block.  Perhaps you terminated the parameter list of the previous
attribute too soon.  See L<attributes>.

=item Unterminated attribute parameter in attribute list

(F) The lexer saw an opening (left) parenthesis character while parsing
an attribute list, but the matching closing (right) parenthesis
character was not found.  You may need to add (or remove) a backslash
character to get your parentheses to balance.  See L<attributes>.

=item Unterminated compressed integer

(F) An argument to unpack("w",...) was incompatible with the BER
compressed integer format and could not be converted to an integer.
See L<perlfunc/pack>.

=item Unterminated delimiter for here document

(F) This message occurs when a here document label has an initial
quotation mark but the final quotation mark is missing.  Perhaps
you wrote:

    <<"foo

instead of:

    <<"foo"

=item Unterminated \g... pattern in regex; marked by S<<-- HERE> in m/%s/

=item Unterminated \g{...} pattern in regex; marked by S<<-- HERE> in m/%s/

(F) In a regular expression, you had a C<\g> that wasn't followed by a
proper group reference.  In the case of C<\g{>, the closing brace is
missing; otherwise the C<\g> must be followed by an integer.  Fix the
pattern and retry.

=item Unterminated <> operator

(F) The lexer saw a left angle bracket in a place where it was expecting
a term, so it's looking for the corresponding right angle bracket, and
not finding it.  Chances are you left some needed parentheses out
earlier in the line, and you really meant a "less than".

=item Unterminated verb pattern argument in regex; marked by S<<-- HERE> in
m/%s/

(F) You used a pattern of the form C<(*VERB:ARG)> but did not terminate
the pattern with a C<)>.  Fix the pattern and retry.

=item Unterminated verb pattern in regex; marked by S<<-- HERE> in m/%s/

(F) You used a pattern of the form C<(*VERB)> but did not terminate
the pattern with a C<)>.  Fix the pattern and retry.

=item untie attempted while %d inner references still exist

(W untie) A copy of the object returned from C<tie> (or C<tied>) was
still valid when C<untie> was called.

=item Usage: POSIX::%s(%s)

(F) You called a POSIX function with incorrect arguments.
See L<POSIX/FUNCTIONS> for more information.

=item Usage: Win32::%s(%s)

(F) You called a Win32 function with incorrect arguments.
See L<Win32> for more information.

=item $[ used in %s (did you mean $] ?)

(W syntax) You used C<$[> in a comparison, such as:

    if ($[ > 5.006) {
	...
    }

You probably meant to use C<$]> instead.  C<$[> is the base for indexing
arrays.  C<$]> is the Perl version number in decimal.

=item Use "%s" instead of "%s"

(F) The second listed construct is no longer legal.  Use the first one
instead.

=item Useless assignment to a temporary

(W misc) You assigned to an lvalue subroutine, but what
the subroutine returned was a temporary scalar about to
be discarded, so the assignment had no effect.

=item Useless (?-%s) - don't use /%s modifier in regex; marked by
S<<-- HERE> in m/%s/

(W regexp) You have used an internal modifier such as (?-o) that has no
meaning unless removed from the entire regexp:

    if ($string =~ /(?-o)$pattern/o) { ... }

must be written as

    if ($string =~ /$pattern/) { ... }

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.  See L<perlre>.

=item Useless localization of %s

(W syntax) The localization of lvalues such as C<local($x=10)> is legal,
but in fact the local() currently has no effect.  This may change at
some point in the future, but in the meantime such code is discouraged.

=item Useless (?%s) - use /%s modifier in regex; marked by S<<-- HERE> in
m/%s/

(W regexp) You have used an internal modifier such as (?o) that has no
meaning unless applied to the entire regexp:

    if ($string =~ /(?o)$pattern/) { ... }

must be written as

    if ($string =~ /$pattern/o) { ... }

The S<<-- HERE> shows whereabouts in the regular expression the problem was
discovered.  See L<perlre>.

=item Useless use of attribute "const"

(W misc) The C<const> attribute has no effect except
on anonymous closure prototypes.  You applied it to
a subroutine via L<attributes.pm|attributes>.  This is only useful
inside an attribute handler for an anonymous subroutine.

=item Useless use of /d modifier in transliteration operator

(W misc) You have used the /d modifier where the searchlist has the
same length as the replacelist.  See L<perlop> for more information
about the /d modifier.

=item Useless use of \E

(W misc) You have a \E in a double-quotish string without a C<\U>,
C<\L> or C<\Q> preceding it.

=item Useless use of greediness modifier '%c' in regex; marked by S<<-- HERE> in m/%s/

(W regexp) You specified something like these:

 qr/a{3}?/
 qr/b{1,1}+/

The C<"?"> and C<"+"> don't have any effect, as they modify whether to
match more or fewer when there is a choice, and by specifying to match
exactly a given numer, there is no room left for a choice.

=item Useless use of %s in void context

(W void) You did something without a side effect in a context that does
nothing with the return value, such as a statement that doesn't return a
value from a block, or the left side of a scalar comma operator.  Very
often this points not to stupidity on your part, but a failure of Perl
to parse your program the way you thought it would.  For example, you'd
get this if you mixed up your C precedence with Python precedence and
said

    $one, $two = 1, 2;

when you meant to say

    ($one, $two) = (1, 2);

Another common error is to use ordinary parentheses to construct a list
reference when you should be using square or curly brackets, for
example, if you say

    $array = (1,2);

when you should have said

    $array = [1,2];

The square brackets explicitly turn a list value into a scalar value,
while parentheses do not.  So when a parenthesized list is evaluated in
a scalar context, the comma is treated like C's comma operator, which
throws away the left argument, which is not what you want.  See
L<perlref> for more on this.

This warning will not be issued for numerical constants equal to 0 or 1
since they are often used in statements like

    1 while sub_with_side_effects();

String constants that would normally evaluate to 0 or 1 are warned
about.

=item Useless use of (?-p) in regex; marked by S<<-- HERE> in m/%s/

(W regexp) The C<p> modifier cannot be turned off once set.  Trying to do
so is futile.

=item Useless use of "re" pragma

(W) You did C<use re;> without any arguments.  That isn't very useful.

=item Useless use of sort in scalar context

(W void) You used sort in scalar context, as in :

    my $x = sort @y;

This is not very useful, and perl currently optimizes this away.

=item Useless use of %s with no values

(W syntax) You used the push() or unshift() function with no arguments
apart from the array, like C<push(@x)> or C<unshift(@foo)>.  That won't
usually have any effect on the array, so is completely useless.  It's
possible in principle that push(@tied_array) could have some effect
if the array is tied to a class which implements a PUSH method.  If so,
you can write it as C<push(@tied_array,())> to avoid this warning.

=item "use" not allowed in expression

(F) The "use" keyword is recognized and executed at compile time, and
returns no useful value.  See L<perlmod>.

=item Use of assignment to $[ is deprecated

(D deprecated) The C<$[> variable (index of the first element in an array)
is deprecated.  See L<perlvar/"$[">.

=item Use of bare << to mean <<"" is deprecated

(D deprecated) You are now encouraged to use the explicitly quoted
form if you wish to use an empty line as the terminator of the
here-document.

=item Use of /c modifier is meaningless in s///

(W regexp) You used the /c modifier in a substitution.  The /c
modifier is not presently meaningful in substitutions.

=item Use of /c modifier is meaningless without /g

(W regexp) You used the /c modifier with a regex operand, but didn't
use the /g modifier.  Currently, /c is meaningful only when /g is
used.  (This may change in the future.)

=item Use of code point 0x%s is deprecated; the permissible max is 0x%s

(D deprecated) You used a code point that will not be allowed in a
future perl version, because it is too large.  Unicode only allows code
points up to 0x10FFFF, but Perl allows much larger ones.  However, the
largest possible ones break the perl interpreter in some constructs,
including causing it to hang in a few cases.  The known problem areas
are in C<tr///>, regular expression pattern matching using quantifiers,
and as the upper limits in loops.

If your code is to run on various platforms, keep in mind that the upper
limit depends on the platform.  It is much larger on 64-bit word sizes
than 32-bit ones.

=item Use of comma-less variable list is deprecated

(D deprecated) The values you give to a format should be
separated by commas, not just aligned on a line.

=item Use of each() on hash after insertion without resetting hash iterator results in undefined behavior

(S internal) The behavior of C<each()> after insertion is undefined;
it may skip items, or visit items more than once.  Consider using
C<keys()> instead of C<each()>.

=item Use of := for an empty attribute list is not allowed

(F) The construction C<my $x := 42> used to parse as equivalent to
C<my $x : = 42> (applying an empty attribute list to C<$x>).
This construct was deprecated in 5.12.0, and has now been made a syntax
error, so C<:=> can be reclaimed as a new operator in the future.

If you need an empty attribute list, for example in a code generator, add
a space before the C<=>.

=item Use of %s for non-UTF-8 locale is wrong.  Assuming a UTF-8 locale

(W locale)  You are matching a regular expression using locale rules,
and the specified construct was encountered.  This construct is only
valid for UTF-8 locales, which the current locale isn't.  This doesn't
make sense.  Perl will continue, assuming a Unicode (UTF-8) locale, but
the results are likely to be wrong.

=item Use of freed value in iteration

(F) Perhaps you modified the iterated array within the loop?
This error is typically caused by code like the following:

    @a = (3,4);
    @a = () for (1,2,@a);

You are not supposed to modify arrays while they are being iterated over.
For speed and efficiency reasons, Perl internally does not do full
reference-counting of iterated items, hence deleting such an item in the
middle of an iteration causes Perl to see a freed value.

=item Use of *glob{FILEHANDLE} is deprecated

(D deprecated) You are now encouraged to use the shorter *glob{IO} form
to access the filehandle slot within a typeglob.

=item Use of /g modifier is meaningless in split

(W regexp) You used the /g modifier on the pattern for a C<split>
operator.  Since C<split> always tries to match the pattern
repeatedly, the C</g> has no effect.

=item Use of "goto" to jump into a construct is deprecated

(D deprecated) Using C<goto> to jump from an outer scope into an inner
scope is deprecated and should be avoided.

=item Use of inherited AUTOLOAD for non-method %s() is deprecated

(D deprecated) As an (ahem) accidental feature, C<AUTOLOAD>
subroutines are looked up as methods (using the C<@ISA> hierarchy)
even when the subroutines to be autoloaded were called as plain
functions (e.g. C<Foo::bar()>), not as methods (e.g. C<< Foo->bar() >> or
C<< $obj->bar() >>).

This bug will be rectified in future by using method lookup only for
methods' C<AUTOLOAD>s.  However, there is a significant base of existing
code that may be using the old behavior.  So, as an interim step, Perl
currently issues an optional warning when non-methods use inherited
C<AUTOLOAD>s.

The simple rule is:  Inheritance will not work when autoloading
non-methods.  The simple fix for old code is:  In any module that used
to depend on inheriting C<AUTOLOAD> for non-methods from a base class
named C<BaseClass>, execute C<*AUTOLOAD = \&BaseClass::AUTOLOAD> during
startup.

In code that currently says C<use AutoLoader; @ISA = qw(AutoLoader);>
you should remove AutoLoader from @ISA and change C<use AutoLoader;> to
C<use AutoLoader 'AUTOLOAD';>.

=item Use of %s in printf format not supported

(F) You attempted to use a feature of printf that is accessible from
only C.  This usually means there's a better way to do it in Perl.

=item Use of %s is deprecated

(D deprecated) The construct indicated is no longer recommended for use,
generally because there's a better way to do it, and also because the
old way has bad side effects.

=item Use of literal control characters in variable names is deprecated

=item Use of literal non-graphic characters in variable names is deprecated

(D deprecated) Using literal non-graphic (including control)
characters in the source to refer to the ^FOO variables, like C<$^X> and
C<${^GLOBAL_PHASE}> is now deprecated.  (We use C<^X> and C<^G> here for
legibility.  They actually represent the non-printable control
characters, code points 0x18 and 0x07, respectively; C<^A> would mean
the control character whose code point is 0x01.) This only affects
code like C<$\cT>, where C<\cT> is a control in the source code; C<${"\cT"}> and
C<$^T> remain valid.  Things that are non-controls and also not graphic
are NO-BREAK SPACE and SOFT HYPHEN, which were previously only allowed
for historical reasons.

=item Use of -l on filehandle%s

(W io) A filehandle represents an opened file, and when you opened the file
it already went past any symlink you are presumably trying to look for.
The operation returned C<undef>.  Use a filename instead.

=item Use of %s on a handle without * is deprecated

(D deprecated) You used C<tie>, C<tied> or C<untie> on a scalar but that scalar
happens to hold a typeglob, which means its filehandle will be tied.  If
you mean to tie a handle, use an explicit * as in C<tie *$handle>.

This was a long-standing bug that was removed in Perl 5.16, as there was
no way to tie the scalar itself when it held a typeglob, and no way to
untie a scalar that had had a typeglob assigned to it.  If you see this
message, you must be using an older version.

=item Use of reference "%s" as array index

(W misc) You tried to use a reference as an array index; this probably
isn't what you mean, because references in numerical context tend
to be huge numbers, and so usually indicates programmer error.

If you really do mean it, explicitly numify your reference, like so:
C<$array[0+$ref]>.  This warning is not given for overloaded objects,
however, because you can overload the numification and stringification
operators and then you presumably know what you are doing.

=item Use of state $_ is experimental

(S experimental::lexical_topic) Lexical $_ is an experimental feature and
its behavior may change or even be removed in any future release of perl.
See the explanation under L<perlvar/$_>.

=item Use of strings with code points over 0xFF as arguments to %s
operator is deprecated

(D deprecated) You tried to use one of the string bitwise operators
(C<&> or C<|> or C<^> or C<~>) on a string containing a code point over
0xFF.  The string bitwise operators treat their operands as strings of
bytes, and values beyond 0xFF are nonsensical in this context.

=item Use of tainted arguments in %s is deprecated

(W taint, deprecated) You have supplied C<system()> or C<exec()> with multiple
arguments and at least one of them is tainted.  This used to be allowed
but will become a fatal error in a future version of perl.  Untaint your
arguments.  See L<perlsec>.

=item Use of uninitialized value%s

(W uninitialized) An undefined value was used as if it were already
defined.  It was interpreted as a "" or a 0, but maybe it was a mistake.
To suppress this warning assign a defined value to your variables.

To help you figure out what was undefined, perl will try to tell you
the name of the variable (if any) that was undefined.  In some cases
it cannot do this, so it also tells you what operation you used the
undefined value in.  Note, however, that perl optimizes your program
and the operation displayed in the warning may not necessarily appear
literally in your program.  For example, C<"that $foo"> is usually
optimized into C<"that " . $foo>, and the warning will refer to the
C<concatenation (.)> operator, even though there is no C<.> in
your program.

=item "use re 'strict'" is experimental

(S experimental::re_strict) The things that are different when a regular
expression pattern is compiled under C<'strict'> are subject to change
in future Perl releases in incompatible ways.  This means that a pattern
that compiles today may not in a future Perl release.  This warning is
to alert you to that risk.

=item Use \x{...} for more than two hex characters in regex; marked by
S<<-- HERE> in m/%s/

(F) In a regular expression, you said something like

 (?[ [ \xBEEF ] ])

Perl isn't sure if you meant this

 (?[ [ \x{BEEF} ] ])

or if you meant this

 (?[ [ \x{BE} E F ] ])

You need to add either braces or blanks to disambiguate.

=item Using just the first character returned by \N{} in character class in 
regex; marked by S<<-- HERE> in m/%s/

(W regexp) Named Unicode character escapes C<(\N{...})> may return
a multi-character sequence.  Even though a character class is
supposed to match just one character of input, perl will match
the whole thing correctly, except when the class is inverted
(C<[^...]>), or the escape is the beginning or final end point of
a range.  For these, what should happen isn't clear at all.  In
these circumstances, Perl discards all but the first character
of the returned sequence, which is not likely what you want.

=item Using /u for '%s' instead of /%s in regex; marked by S<<-- HERE> in m/%s/

(W regexp) You used a Unicode boundary (C<\b{...}> or C<\B{...}>) in a
portion of a regular expression where the character set modifiers C</a>
or C</aa> are in effect.  These two modifiers indicate an ASCII
interpretation, and this doesn't make sense for a Unicode defintion.
The generated regular expression will compile so that the boundary uses
all of Unicode.  No other portion of the regular expression is affected.

=item Using !~ with %s doesn't make sense

(F) Using the C<!~> operator with C<s///r>, C<tr///r> or C<y///r> is
currently reserved for future use, as the exact behavior has not
been decided.  (Simply returning the boolean opposite of the
modified string is usually not particularly useful.)

=item UTF-16 surrogate U+%X

(S surrogate) You had a UTF-16 surrogate in a context where they are
not considered acceptable.  These code points, between U+D800 and
U+DFFF (inclusive), are used by Unicode only for UTF-16.  However, Perl
internally allows all unsigned integer code points (up to the size limit
available on your platform), including surrogates.  But these can cause
problems when being input or output, which is likely where this message
came from.  If you really really know what you are doing you can turn
off this warning by C<no warnings 'surrogate';>.

=item Value of %s can be "0"; test with defined()

(W misc) In a conditional expression, you used <HANDLE>, <*> (glob),
C<each()>, or C<readdir()> as a boolean value.  Each of these constructs
can return a value of "0"; that would make the conditional expression
false, which is probably not what you intended.  When using these
constructs in conditional expressions, test their values with the
C<defined> operator.

=item Value of CLI symbol "%s" too long

(W misc) A warning peculiar to VMS.  Perl tried to read the value of an
%ENV element from a CLI symbol table, and found a resultant string
longer than 1024 characters.  The return value has been truncated to
1024 characters.

=item Variable "%s" is not available

(W closure) During compilation, an inner named subroutine or eval is
attempting to capture an outer lexical that is not currently available.
This can happen for one of two reasons.  First, the outer lexical may be
declared in an outer anonymous subroutine that has not yet been created.
(Remember that named subs are created at compile time, while anonymous
subs are created at run-time.)  For example,

    sub { my $a; sub f { $a } }

At the time that f is created, it can't capture the current value of $a,
since the anonymous subroutine hasn't been created yet.  Conversely,
the following won't give a warning since the anonymous subroutine has by
now been created and is live:

    sub { my $a; eval 'sub f { $a }' }->();

The second situation is caused by an eval accessing a variable that has
gone out of scope, for example,

    sub f {
	my $a;
	sub { eval '$a' }
    }
    f()->();

Here, when the '$a' in the eval is being compiled, f() is not currently
being executed, so its $a is not available for capture.

=item Variable "%s" is not imported%s

(S misc) With "use strict" in effect, you referred to a global variable
that you apparently thought was imported from another module, because
something else of the same name (usually a subroutine) is exported by
that module.  It usually means you put the wrong funny character on the
front of your variable.

=item Variable length lookbehind not implemented in regex m/%s/

(F) Lookbehind is allowed only for subexpressions whose length is fixed and
known at compile time.  For positive lookbehind, you can use the C<\K>
regex construct as a way to get the equivalent functionality.  See
L<perlre/(?<=pattern) \K>.

There are non-obvious Unicode rules under C</i> that can match variably,
but which you might not think could.  For example, the substring C<"ss">
can match the single character LATIN SMALL LETTER SHARP S.  There are
other sequences of ASCII characters that can match single ligature
characters, such as LATIN SMALL LIGATURE FFI matching C<qr/ffi/i>.
Starting in Perl v5.16, if you only care about ASCII matches, adding the
C</aa> modifier to the regex will exclude all these non-obvious matches,
thus getting rid of this message.  You can also say C<S<use re qw(/aa)>>
to apply C</aa> to all regular expressions compiled within its scope.
See L<re>.

=item "%s" variable %s masks earlier declaration in same %s

(W misc) A "my", "our" or "state" variable has been redeclared in the
current scope or statement, effectively eliminating all access to the
previous instance.  This is almost always a typographical error.  Note
that the earlier variable will still exist until the end of the scope
or until all closure references to it are destroyed.

=item Variable syntax

(A) You've accidentally run your script through B<csh> instead
of Perl.  Check the #! line, or manually feed your script into
Perl yourself.

=item Variable "%s" will not stay shared

(W closure) An inner (nested) I<named> subroutine is referencing a
lexical variable defined in an outer named subroutine.

When the inner subroutine is called, it will see the value of
the outer subroutine's variable as it was before and during the *first*
call to the outer subroutine; in this case, after the first call to the
outer subroutine is complete, the inner and outer subroutines will no
longer share a common value for the variable.  In other words, the
variable will no longer be shared.

This problem can usually be solved by making the inner subroutine
anonymous, using the C<sub {}> syntax.  When inner anonymous subs that
reference variables in outer subroutines are created, they
are automatically rebound to the current values of such variables.

=item vector argument not supported with alpha versions

(S printf) The %vd (s)printf format does not support version objects
with alpha parts.

=item Verb pattern '%s' has a mandatory argument in regex; marked by
S<<-- HERE> in m/%s/ 

(F) You used a verb pattern that requires an argument.  Supply an
argument or check that you are using the right verb.

=item Verb pattern '%s' may not have an argument in regex; marked by
S<<-- HERE> in m/%s/ 

(F) You used a verb pattern that is not allowed an argument.  Remove the 
argument or check that you are using the right verb.

=item Version number must be a constant number

(P) The attempt to translate a C<use Module n.n LIST> statement into
its equivalent C<BEGIN> block found an internal inconsistency with
the version number.

=item Version string '%s' contains invalid data; ignoring: '%s'

(W misc) The version string contains invalid characters at the end, which
are being ignored.

=item Warning: something's wrong

(W) You passed warn() an empty string (the equivalent of C<warn "">) or
you called it with no args and C<$@> was empty.

=item Warning: unable to close filehandle %s properly

(S) The implicit close() done by an open() got an error indication on
the close().  This usually indicates your file system ran out of disk
space.

=item Warning: unable to close filehandle properly: %s

=item Warning: unable to close filehandle %s properly: %s

(S io) There were errors during the implicit close() done on a filehandle
when its reference count reached zero while it was still open, e.g.:

    {
        open my $fh, '>', $file  or die "open: '$file': $!\n";
        print $fh $data or die "print: $!";
    } # implicit close here

Because various errors may only be detected by close() (e.g. buffering could
allow the C<print> in this example to return true even when the disk is full),
it is dangerous to ignore its result. So when it happens implicitly, perl will
signal errors by warning.

B<Prior to version 5.22.0, perl ignored such errors>, so the common idiom shown
above was liable to cause B<silent data loss>.

=item Warning: Use of "%s" without parentheses is ambiguous

(S ambiguous) You wrote a unary operator followed by something that
looks like a binary operator that could also have been interpreted as a
term or unary operator.  For instance, if you know that the rand
function has a default argument of 1.0, and you write

    rand + 5;

you may THINK you wrote the same thing as

    rand() + 5;

but in actual fact, you got

    rand(+5);

So put in parentheses to say what you really mean.

=item when is experimental

(S experimental::smartmatch) C<when> depends on smartmatch, which is
experimental.  Additionally, it has several special cases that may
not be immediately obvious, and their behavior may change or
even be removed in any future release of perl.  See the explanation
under L<perlsyn/Experimental Details on given and when>.

=item Wide character in %s

(S utf8) Perl met a wide character (>255) when it wasn't expecting
one.  This warning is by default on for I/O (like print).  The easiest
way to quiet this warning is simply to add the C<:utf8> layer to the
output, e.g. C<binmode STDOUT, ':utf8'>.  Another way to turn off the
warning is to add C<no warnings 'utf8';> but that is often closer to
cheating.  In general, you are supposed to explicitly mark the
filehandle with an encoding, see L<open> and L<perlfunc/binmode>.

=item Wide character (U+%X) in %s

(W locale) While in a single-byte locale (I<i.e.>, a non-UTF-8
one), a multi-byte character was encountered.   Perl considers this
character to be the specified Unicode code point.  Combining non-UTF-8
locales and Unicode is dangerous.  Almost certainly some characters
will have two different representations.  For example, in the ISO 8859-7
(Greek) locale, the code point 0xC3 represents a Capital Gamma.  But so
also does 0x393.  This will make string comparisons unreliable.

You likely need to figure out how this multi-byte character got mixed up
with your single-byte locale (or perhaps you thought you had a UTF-8
locale, but Perl disagrees).

=item Within []-length '%c' not allowed

(F) The count in the (un)pack template may be replaced by C<[TEMPLATE]>
only if C<TEMPLATE> always matches the same amount of packed bytes that
can be determined from the template alone.  This is not possible if
it contains any of the codes @, /, U, u, w or a *-length.  Redesign
the template.

=item %s() with negative argument

(S misc) Certain operations make no sense with negative arguments.
Warning is given and the operation is not done.

=item write() on closed filehandle %s

(W closed) The filehandle you're writing to got itself closed sometime
before now.  Check your control flow.

=item %s "\x%X" does not map to Unicode

(S utf8) When reading in different encodings, Perl tries to
map everything into Unicode characters.  The bytes you read
in are not legal in this encoding.  For example

    utf8 "\xE4" does not map to Unicode

if you try to read in the a-diaereses Latin-1 as UTF-8.

=item 'X' outside of string

(F) You had a (un)pack template that specified a relative position before
the beginning of the string being (un)packed.  See L<perlfunc/pack>.

=item 'x' outside of string in unpack

(F) You had a pack template that specified a relative position after
the end of the string being unpacked.  See L<perlfunc/pack>.

=item YOU HAVEN'T DISABLED SET-ID SCRIPTS IN THE KERNEL YET!

(F) And you probably never will, because you probably don't have the
sources to your kernel, and your vendor probably doesn't give a rip
about what you want.  Your best bet is to put a setuid C wrapper around
your script.

=item You need to quote "%s"

(W syntax) You assigned a bareword as a signal handler name.
Unfortunately, you already have a subroutine of that name declared,
which means that Perl 5 will try to call the subroutine when the
assignment is executed, which is probably not what you want.  (If it IS
what you want, put an & in front.)

=item Your random numbers are not that random

(F) When trying to initialize the random seed for hashes, Perl could
not get any randomness out of your system.  This usually indicates
Something Very Wrong.

=item Zero length \N{} in regex; marked by S<<-- HERE> in m/%s/

(F) Named Unicode character escapes (C<\N{...}>) may return a zero-length
sequence.  Such an escape was used in an extended character class, i.e.
C<(?[...])>, or under C<use re 'strict'>, which is not permitted.  Check
that the correct escape has been used, and the correct charnames handler
is in scope.  The S<<-- HERE> shows whereabouts in the regular
expression the problem was discovered.

=back

=head1 SEE ALSO

L<warnings>, L<diagnostics>.

=cut
                                                                                                                                                                                                                                                                                                                                                                # Blocks-8.0.0.txt
# Date: 2014-11-10, 23:04:00 GMT [KW]
#
# Unicode Character Database
# Copyright (c) 1991-2014 Unicode, Inc.
# For terms of use, see http://www.unicode.org/terms_of_use.html
# For documentation, see http://www.unicode.org/reports/tr44/
#
# Format:
# Start Code..End Code; Block Name

# ================================================

# Note:   When comparing block names, casing, whitespace, hyphens,
#         and underbars are ignored.
#         For example, "Latin Extended-A" and "latin extended a" are equivalent.
#         For more information on the comparison of property values, 
#            see UAX #44: http://www.unicode.org/reports/tr44/
#
#  All block ranges start with a value where (cp MOD 16) = 0,
#  and end with a value where (cp MOD 16) = 15. In other words,
#  the last hexadecimal digit of the start of range is ...0 
#  and the last hexadecimal digit of the end of range is ...F.
#  This constraint on block ranges guarantees that allocations
#  are done in terms of whole columns, and that code chart display
#  never involves splitting columns in the charts.
#
#  All code points not explicitly listed for Block
#  have the value No_Block.

# Property:	Block
#
# @missing: 0000..10FFFF; No_Block

0000..007F; Basic Latin
0080..00FF; Latin-1 Supplement
0100..017F; Latin Extended-A
0180..024F; Latin Extended-B
0250..02AF; IPA Extensions
02B0..02FF; Spacing Modifier Letters
0300..036F; Combining Diacritical Marks
0370..03FF; Greek and Coptic
0400..04FF; Cyrillic
0500..052F; Cyrillic Supplement
0530..058F; Armenian
0590..05FF; Hebrew
0600..06FF; Arabic
0700..074F; Syriac
0750..077F; Arabic Supplement
0780..07BF; Thaana
07C0..07FF; NKo
0800..083F; Samaritan
0840..085F; Mandaic
08A0..08FF; Arabic Extended-A
0900..097F; Devanagari
0980..09FF; Bengali
0A00..0A7F; Gurmukhi
0A80..0AFF; Gujarati
0B00..0B7F; Oriya
0B80..0BFF; Tamil
0C00..0C7F; Telugu
0C80..0CFF; Kannada
0D00..0D7F; Malayalam
0D80..0DFF; Sinhala
0E00..0E7F; Thai
0E80..0EFF; Lao
0F00..0FFF; Tibetan
1000..109F; Myanmar
10A0..10FF; Georgian
1100..11FF; Hangul Jamo
1200..137F; Ethiopic
1380..139F; Ethiopic Supplement
13A0..13FF; Cherokee
1400..167F; Unified Canadian Aboriginal Syllabics
1680..169F; Ogham
16A0..16FF; Runic
1700..171F; Tagalog
1720..173F; Hanunoo
1740..175F; Buhid
1760..177F; Tagbanwa
1780..17FF; Khmer
1800..18AF; Mongolian
18B0..18FF; Unified Canadian Aboriginal Syllabics Extended
1900..194F; Limbu
1950..197F; Tai Le
1980..19DF; New Tai Lue
19E0..19FF; Khmer Symbols
1A00..1A1F; Buginese
1A20..1AAF; Tai Tham
1AB0..1AFF; Combining Diacritical Marks Extended
1B00..1B7F; Balinese
1B80..1BBF; Sundanese
1BC0..1BFF; Batak
1C00..1C4F; Lepcha
1C50..1C7F; Ol Chiki
1CC0..1CCF; Sundanese Supplement
1CD0..1CFF; Vedic Extensions
1D00..1D7F; Phonetic Extensions
1D80..1DBF; Phonetic Extensions Supplement
1DC0..1DFF; Combining Diacritical Marks Supplement
1E00..1EFF; Latin Extended Additional
1F00..1FFF; Greek Extended
2000..206F; General Punctuation
2070..209F; Superscripts and Subscripts
20A0..20CF; Currency Symbols
20D0..20FF; Combining Diacritical Marks for Symbols
2100..214F; Letterlike Symbols
2150..218F; Number Forms
2190..21FF; Arrows
2200..22FF; Mathematical Operators
2300..23FF; Miscellaneous Technical
2400..243F; Control Pictures
2440..245F; Optical Character Recognition
2460..24FF; Enclosed Alphanumerics
2500..257F; Box Drawing
2580..259F; Block Elements
25A0..25FF; Geometric Shapes
2600..26FF; Miscellaneous Symbols
2700..27BF; Dingbats
27C0..27EF; Miscellaneous Mathematical Symbols-A
27F0..27FF; Supplemental Arrows-A
2800..28FF; Braille Patterns
2900..297F; Supplemental Arrows-B
2980..29FF; Miscellaneous Mathematical Symbols-B
2A00..2AFF; Supplemental Mathematical Operators
2B00..2BFF; Miscellaneous Symbols and Arrows
2C00..2C5F; Glagolitic
2C60..2C7F; Latin Extended-C
2C80..2CFF; Coptic
2D00..2D2F; Georgian Supplement
2D30..2D7F; Tifinagh
2D80..2DDF; Ethiopic Extended
2DE0..2DFF; Cyrillic Extended-A
2E00..2E7F; Supplemental Punctuation
2E80..2EFF; CJK Radicals Supplement
2F00..2FDF; Kangxi Radicals
2FF0..2FFF; Ideographic Description Characters
3000..303F; CJK Symbols and Punctuation
3040..309F; Hiragana
30A0..30FF; Katakana
3100..312F; Bopomofo
3130..318F; Hangul Compatibility Jamo
3190..319F; Kanbun
31A0..31BF; Bopomofo Extended
31C0..31EF; CJK Strokes
31F0..31FF; Katakana Phonetic Extensions
3200..32FF; Enclosed CJK Letters and Months
3300..33FF; CJK Compatibility
3400..4DBF; CJK Unified Ideographs Extension A
4DC0..4DFF; Yijing Hexagram Symbols
4E00..9FFF; CJK Unified Ideographs
A000..A48F; Yi Syllables
A490..A4CF; Yi Radicals
A4D0..A4FF; Lisu
A500..A63F; Vai
A640..A69F; Cyrillic Extended-B
A6A0..A6FF; Bamum
A700..A71F; Modifier Tone Letters
A720..A7FF; Latin Extended-D
A800..A82F; Syloti Nagri
A830..A83F; Common Indic Number Forms
A840..A87F; Phags-pa
A880..A8DF; Saurashtra
A8E0..A8FF; Devanagari Extended
A900..A92F; Kayah Li
A930..A95F; Rejang
A960..A97F; Hangul Jamo Extended-A
A980..A9DF; Javanese
A9E0..A9FF; Myanmar Extended-B
AA00..AA5F; Cham
AA60..AA7F; Myanmar Extended-A
AA80..AADF; Tai Viet
AAE0..AAFF; Meetei Mayek Extensions
AB00..AB2F; Ethiopic Extended-A
AB30..AB6F; Latin Extended-E
AB70..ABBF; Cherokee Supplement
ABC0..ABFF; Meetei Mayek
AC00..D7AF; Hangul Syllables
D7B0..D7FF; Hangul Jamo Extended-B
D800..DB7F; High Surrogates
DB80..DBFF; High Private Use Surrogates
DC00..DFFF; Low Surrogates
E000..F8FF; Private Use Area
F900..FAFF; CJK Compatibility Ideographs
FB00..FB4F; Alphabetic Presentation Forms
FB50..FDFF; Arabic Presentation Forms-A
FE00..FE0F; Variation Selectors
FE10..FE1F; Vertical Forms
FE20..FE2F; Combining Half Marks
FE30..FE4F; CJK Compatibility Forms
FE50..FE6F; Small Form Variants
FE70..FEFF; Arabic Presentation Forms-B
FF00..FFEF; Halfwidth and Fullwidth Forms
FFF0..FFFF; Specials
10000..1007F; Linear B Syllabary
10080..100FF; Linear B Ideograms
10100..1013F; Aegean Numbers
10140..1018F; Ancient Greek Numbers
10190..101CF; Ancient Symbols
101D0..101FF; Phaistos Disc
10280..1029F; Lycian
102A0..102DF; Carian
102E0..102FF; Coptic Epact Numbers
10300..1032F; Old Italic
10330..1034F; Gothic
10350..1037F; Old Permic
10380..1039F; Ugaritic
103A0..103DF; Old Persian
10400..1044F; Deseret
10450..1047F; Shavian
10480..104AF; Osmanya
10500..1052F; Elbasan
10530..1056F; Caucasian Albanian
10600..1077F; Linear A
10800..1083F; Cypriot Syllabary
10840..1085F; Imperial Aramaic
10860..1087F; Palmyrene
10880..108AF; Nabataean
108E0..108FF; Hatran
10900..1091F; Phoenician
10920..1093F; Lydian
10980..1099F; Meroitic Hieroglyphs
109A0..109FF; Meroitic Cursive
10A00..10A5F; Kharoshthi
10A60..10A7F; Old South Arabian
10A80..10A9F; Old North Arabian
10AC0..10AFF; Manichaean
10B00..10B3F; Avestan
10B40..10B5F; Inscriptional Parthian
10B60..10B7F; Inscriptional Pahlavi
10B80..10BAF; Psalter Pahlavi
10C00..10C4F; Old Turkic
10C80..10CFF; Old Hungarian
10E60..10E7F; Rumi Numeral Symbols
11000..1107F; Brahmi
11080..110CF; Kaithi
110D0..110FF; Sora Sompeng
11100..1114F; Chakma
11150..1117F; Mahajani
11180..111DF; Sharada
111E0..111FF; Sinhala Archaic Numbers
11200..1124F; Khojki
11280..112AF; Multani
112B0..112FF; Khudawadi
11300..1137F; Grantha
11480..114DF; Tirhuta
11580..115FF; Siddham
11600..1165F; Modi
11680..116CF; Takri
11700..1173F; Ahom
118A0..118FF; Warang Citi
11AC0..11AFF; Pau Cin Hau
12000..123FF; Cuneiform
12400..1247F; Cuneiform Numbers and Punctuation
12480..1254F; Early Dynastic Cuneiform
13000..1342F; Egyptian Hieroglyphs
14400..1467F; Anatolian Hieroglyphs
16800..16A3F; Bamum Supplement
16A40..16A6F; Mro
16AD0..16AFF; Bassa Vah
16B00..16B8F; Pahawh Hmong
16F00..16F9F; Miao
1B000..1B0FF; Kana Supplement
1BC00..1BC9F; Duployan
1BCA0..1BCAF; Shorthand Format Controls
1D000..1D0FF; Byzantine Musical Symbols
1D100..1D1FF; Musical Symbols
1D200..1D24F; Ancient Greek Musical Notation
1D300..1D35F; Tai Xuan Jing Symbols
1D360..1D37F; Counting Rod Numerals
1D400..1D7FF; Mathematical Alphanumeric Symbols
1D800..1DAAF; Sutton SignWriting
1E800..1E8DF; Mende Kikakui
1EE00..1EEFF; Arabic Mathematical Alphabetic Symbols
1F000..1F02F; Mahjong Tiles
1F030..1F09F; Domino Tiles
1F0A0..1F0FF; Playing Cards
1F100..1F1FF; Enclosed Alphanumeric Supplement
1F200..1F2FF; Enclosed Ideographic Supplement
1F300..1F5FF; Miscellaneous Symbols and Pictographs
1F600..1F64F; Emoticons
1F650..1F67F; Ornamental Dingbats
1F680..1F6FF; Transport and Map Symbols
1F700..1F77F; Alchemical Symbols
1F780..1F7FF; Geometric Shapes Extended
1F800..1F8FF; Supplemental Arrows-C
1F900..1F9FF; Supplemental Symbols and Pictographs
20000..2A6DF; CJK Unified Ideographs Extension B
2A700..2B73F; CJK Unified Ideographs Extension C
2B740..2B81F; CJK Unified Ideographs Extension D
2B820..2CEAF; CJK Unified Ideographs Extension E
2F800..2FA1F; CJK Compatibility Ideographs Supplement
E0000..E007F; Tags
E0100..E01EF; Variation Selectors Supplement
F0000..FFFFF; Supplementary Private Use Area-A
100000..10FFFF; Supplementary Private Use Area-B

# EOF
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToCombiningClass'}{'format'} = 'i'; # integer
$utf8::SwashInfo{'ToCombiningClass'}{'missing'} = '0';

return <<'END';
300	314	230
315		232
316	319	220
31A		232
31B		216
31C	320	220
321	322	202
323	326	220
327	328	202
329	333	220
334	338	1
339	33C	220
33D	344	230
345		240
346		230
347	349	220
34A	34C	230
34D	34E	220
350	352	230
353	356	220
357		230
358		232
359	35A	220
35B		230
35C		233
35D	35E	234
35F		233
360	361	234
362		233
363	36F	230
483	487	230
591		220
592	595	230
596		220
597	599	230
59A		222
59B		220
59C	5A1	230
5A2	5A7	220
5A8	5A9	230
5AA		220
5AB	5AC	230
5AD		222
5AE		228
5AF		230
5B0		10
5B1		11
5B2		12
5B3		13
5B4		14
5B5		15
5B6		16
5B7		17
5B8		18
5B9	5BA	19
5BB		20
5BC		21
5BD		22
5BF		23
5C1		24
5C2		25
5C4		230
5C5		220
5C7		18
610	617	230
618		30
619		31
61A		32
64B		27
64C		28
64D		29
64E		30
64F		31
650		32
651		33
652		34
653	654	230
655	656	220
657	65B	230
65C		220
65D	65E	230
65F		220
670		35
6D6	6DC	230
6DF	6E2	230
6E3		220
6E4		230
6E7	6E8	230
6EA		220
6EB	6EC	230
6ED		220
711		36
730		230
731		220
732	733	230
734		220
735	736	230
737	739	220
73A		230
73B	73C	220
73D		230
73E		220
73F	741	230
742		220
743		230
744		220
745		230
746		220
747		230
748		220
749	74A	230
7EB	7F1	230
7F2		220
7F3		230
816	819	230
81B	823	230
825	827	230
829	82D	230
859	85B	220
8E3		220
8E4	8E5	230
8E6		220
8E7	8E8	230
8E9		220
8EA	8EC	230
8ED	8EF	220
8F0		27
8F1		28
8F2		29
8F3	8F5	230
8F6		220
8F7	8F8	230
8F9	8FA	220
8FB	8FF	230
93C		7
94D		9
951		230
952		220
953	954	230
9BC		7
9CD		9
A3C		7
A4D		9
ABC		7
ACD		9
B3C		7
B4D		9
BCD		9
C4D		9
C55		84
C56		91
CBC		7
CCD		9
D4D		9
DCA		9
E38	E39	103
E3A		9
E48	E4B	107
EB8	EB9	118
EC8	ECB	122
F18	F19	220
F35		220
F37		220
F39		216
F71		129
F72		130
F74		132
F7A	F7D	130
F80		130
F82	F83	230
F84		9
F86	F87	230
FC6		220
1037		7
1039	103A	9
108D		220
135D	135F	230
1714		9
1734		9
17D2		9
17DD		230
18A9		228
1939		222
193A		230
193B		220
1A17		230
1A18		220
1A60		9
1A75	1A7C	230
1A7F		220
1AB0	1AB4	230
1AB5	1ABA	220
1ABB	1ABC	230
1ABD		220
1B34		7
1B44		9
1B6B		230
1B6C		220
1B6D	1B73	230
1BAA	1BAB	9
1BE6		7
1BF2	1BF3	9
1C37		7
1CD0	1CD2	230
1CD4		1
1CD5	1CD9	220
1CDA	1CDB	230
1CDC	1CDF	220
1CE0		230
1CE2	1CE8	1
1CED		220
1CF4		230
1CF8	1CF9	230
1DC0	1DC1	230
1DC2		220
1DC3	1DC9	230
1DCA		220
1DCB	1DCC	230
1DCD		234
1DCE		214
1DCF		220
1DD0		202
1DD1	1DF5	230
1DFC		233
1DFD		220
1DFE		230
1DFF		220
20D0	20D1	230
20D2	20D3	1
20D4	20D7	230
20D8	20DA	1
20DB	20DC	230
20E1		230
20E5	20E6	1
20E7		230
20E8		220
20E9		230
20EA	20EB	1
20EC	20EF	220
20F0		230
2CEF	2CF1	230
2D7F		9
2DE0	2DFF	230
302A		218
302B		228
302C		232
302D		222
302E	302F	224
3099	309A	8
A66F		230
A674	A67D	230
A69E	A69F	230
A6F0	A6F1	230
A806		9
A8C4		9
A8E0	A8F1	230
A92B	A92D	220
A953		9
A9B3		7
A9C0		9
AAB0		230
AAB2	AAB3	230
AAB4		220
AAB7	AAB8	230
AABE	AABF	230
AAC1		230
AAF6		9
ABED		9
FB1E		26
FE20	FE26	230
FE27	FE2D	220
FE2E	FE2F	230
101FD		220
102E0		220
10376	1037A	230
10A0D		220
10A0F		230
10A38		230
10A39		1
10A3A		220
10A3F		9
10AE5		230
10AE6		220
11046		9
1107F		9
110B9		9
110BA		7
11100	11102	230
11133	11134	9
11173		7
111C0		9
111CA		7
11235		9
11236		7
112E9		7
112EA		9
1133C		7
1134D		9
11366	1136C	230
11370	11374	230
114C2		9
114C3		7
115BF		9
115C0		7
1163F		9
116B6		9
116B7		7
1172B		9
16AF0	16AF4	1
16B30	16B36	230
1BC9E		1
1D165	1D166	216
1D167	1D169	1
1D16D		226
1D16E	1D172	216
1D17B	1D182	220
1D185	1D189	230
1D18A	1D18B	220
1D1AA	1D1AD	230
1D242	1D244	230
1E8D0	1E8D6	220
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.


return <<'END';
A0		<noBreak> 0020
A8		<compat> 0020 0308
AA		<super> 0061
AF		<compat> 0020 0304
B2		<super> 0032
B3		<super> 0033
B4		<compat> 0020 0301
B5		<compat> 03BC
B8		<compat> 0020 0327
B9		<super> 0031
BA		<super> 006F
BC		<fraction> 0031 2044 0034
BD		<fraction> 0031 2044 0032
BE		<fraction> 0033 2044 0034
C0		0041 0300
C1		0041 0301
C2		0041 0302
C3		0041 0303
C4		0041 0308
C5		0041 030A
C7		0043 0327
C8		0045 0300
C9		0045 0301
CA		0045 0302
CB		0045 0308
CC		0049 0300
CD		0049 0301
CE		0049 0302
CF		0049 0308
D1		004E 0303
D2		004F 0300
D3		004F 0301
D4		004F 0302
D5		004F 0303
D6		004F 0308
D9		0055 0300
DA		0055 0301
DB		0055 0302
DC		0055 0308
DD		0059 0301
E0		0061 0300
E1		0061 0301
E2		0061 0302
E3		0061 0303
E4		0061 0308
E5		0061 030A
E7		0063 0327
E8		0065 0300
E9		0065 0301
EA		0065 0302
EB		0065 0308
EC		0069 0300
ED		0069 0301
EE		0069 0302
EF		0069 0308
F1		006E 0303
F2		006F 0300
F3		006F 0301
F4		006F 0302
F5		006F 0303
F6		006F 0308
F9		0075 0300
FA		0075 0301
FB		0075 0302
FC		0075 0308
FD		0079 0301
FF		0079 0308
100		0041 0304
101		0061 0304
102		0041 0306
103		0061 0306
104		0041 0328
105		0061 0328
106		0043 0301
107		0063 0301
108		0043 0302
109		0063 0302
10A		0043 0307
10B		0063 0307
10C		0043 030C
10D		0063 030C
10E		0044 030C
10F		0064 030C
112		0045 0304
113		0065 0304
114		0045 0306
115		0065 0306
116		0045 0307
117		0065 0307
118		0045 0328
119		0065 0328
11A		0045 030C
11B		0065 030C
11C		0047 0302
11D		0067 0302
11E		0047 0306
11F		0067 0306
120		0047 0307
121		0067 0307
122		0047 0327
123		0067 0327
124		0048 0302
125		0068 0302
128		0049 0303
129		0069 0303
12A		0049 0304
12B		0069 0304
12C		0049 0306
12D		0069 0306
12E		0049 0328
12F		0069 0328
130		0049 0307
132		<compat> 0049 004A
133		<compat> 0069 006A
134		004A 0302
135		006A 0302
136		004B 0327
137		006B 0327
139		004C 0301
13A		006C 0301
13B		004C 0327
13C		006C 0327
13D		004C 030C
13E		006C 030C
13F		<compat> 004C 00B7
140		<compat> 006C 00B7
143		004E 0301
144		006E 0301
145		004E 0327
146		006E 0327
147		004E 030C
148		006E 030C
149		<compat> 02BC 006E
14C		004F 0304
14D		006F 0304
14E		004F 0306
14F		006F 0306
150		004F 030B
151		006F 030B
154		0052 0301
155		0072 0301
156		0052 0327
157		0072 0327
158		0052 030C
159		0072 030C
15A		0053 0301
15B		0073 0301
15C		0053 0302
15D		0073 0302
15E		0053 0327
15F		0073 0327
160		0053 030C
161		0073 030C
162		0054 0327
163		0074 0327
164		0054 030C
165		0074 030C
168		0055 0303
169		0075 0303
16A		0055 0304
16B		0075 0304
16C		0055 0306
16D		0075 0306
16E		0055 030A
16F		0075 030A
170		0055 030B
171		0075 030B
172		0055 0328
173		0075 0328
174		0057 0302
175		0077 0302
176		0059 0302
177		0079 0302
178		0059 0308
179		005A 0301
17A		007A 0301
17B		005A 0307
17C		007A 0307
17D		005A 030C
17E		007A 030C
17F		<compat> 0073
1A0		004F 031B
1A1		006F 031B
1AF		0055 031B
1B0		0075 031B
1C4		<compat> 0044 017D
1C5		<compat> 0044 017E
1C6		<compat> 0064 017E
1C7		<compat> 004C 004A
1C8		<compat> 004C 006A
1C9		<compat> 006C 006A
1CA		<compat> 004E 004A
1CB		<compat> 004E 006A
1CC		<compat> 006E 006A
1CD		0041 030C
1CE		0061 030C
1CF		0049 030C
1D0		0069 030C
1D1		004F 030C
1D2		006F 030C
1D3		0055 030C
1D4		0075 030C
1D5		00DC 0304
1D6		00FC 0304
1D7		00DC 0301
1D8		00FC 0301
1D9		00DC 030C
1DA		00FC 030C
1DB		00DC 0300
1DC		00FC 0300
1DE		00C4 0304
1DF		00E4 0304
1E0		0226 0304
1E1		0227 0304
1E2		00C6 0304
1E3		00E6 0304
1E6		0047 030C
1E7		0067 030C
1E8		004B 030C
1E9		006B 030C
1EA		004F 0328
1EB		006F 0328
1EC		01EA 0304
1ED		01EB 0304
1EE		01B7 030C
1EF		0292 030C
1F0		006A 030C
1F1		<compat> 0044 005A
1F2		<compat> 0044 007A
1F3		<compat> 0064 007A
1F4		0047 0301
1F5		0067 0301
1F8		004E 0300
1F9		006E 0300
1FA		00C5 0301
1FB		00E5 0301
1FC		00C6 0301
1FD		00E6 0301
1FE		00D8 0301
1FF		00F8 0301
200		0041 030F
201		0061 030F
202		0041 0311
203		0061 0311
204		0045 030F
205		0065 030F
206		0045 0311
207		0065 0311
208		0049 030F
209		0069 030F
20A		0049 0311
20B		0069 0311
20C		004F 030F
20D		006F 030F
20E		004F 0311
20F		006F 0311
210		0052 030F
211		0072 030F
212		0052 0311
213		0072 0311
214		0055 030F
215		0075 030F
216		0055 0311
217		0075 0311
218		0053 0326
219		0073 0326
21A		0054 0326
21B		0074 0326
21E		0048 030C
21F		0068 030C
226		0041 0307
227		0061 0307
228		0045 0327
229		0065 0327
22A		00D6 0304
22B		00F6 0304
22C		00D5 0304
22D		00F5 0304
22E		004F 0307
22F		006F 0307
230		022E 0304
231		022F 0304
232		0059 0304
233		0079 0304
2B0		<super> 0068
2B1		<super> 0266
2B2		<super> 006A
2B3		<super> 0072
2B4		<super> 0279
2B5		<super> 027B
2B6		<super> 0281
2B7		<super> 0077
2B8		<super> 0079
2D8		<compat> 0020 0306
2D9		<compat> 0020 0307
2DA		<compat> 0020 030A
2DB		<compat> 0020 0328
2DC		<compat> 0020 0303
2DD		<compat> 0020 030B
2E0		<super> 0263
2E1		<super> 006C
2E2		<super> 0073
2E3		<super> 0078
2E4		<super> 0295
340		0300
341		0301
343		0313
344		0308 0301
374		02B9
37A		<compat> 0020 0345
37E		003B
384		<compat> 0020 0301
385		00A8 0301
386		0391 0301
387		00B7
388		0395 0301
389		0397 0301
38A		0399 0301
38C		039F 0301
38E		03A5 0301
38F		03A9 0301
390		03CA 0301
3AA		0399 0308
3AB		03A5 0308
3AC		03B1 0301
3AD		03B5 0301
3AE		03B7 0301
3AF		03B9 0301
3B0		03CB 0301
3CA		03B9 0308
3CB		03C5 0308
3CC		03BF 0301
3CD		03C5 0301
3CE		03C9 0301
3D0		<compat> 03B2
3D1		<compat> 03B8
3D2		<compat> 03A5
3D3		03D2 0301
3D4		03D2 0308
3D5		<compat> 03C6
3D6		<compat> 03C0
3F0		<compat> 03BA
3F1		<compat> 03C1
3F2		<compat> 03C2
3F4		<compat> 0398
3F5		<compat> 03B5
3F9		<compat> 03A3
400		0415 0300
401		0415 0308
403		0413 0301
407		0406 0308
40C		041A 0301
40D		0418 0300
40E		0423 0306
419		0418 0306
439		0438 0306
450		0435 0300
451		0435 0308
453		0433 0301
457		0456 0308
45C		043A 0301
45D		0438 0300
45E		0443 0306
476		0474 030F
477		0475 030F
4C1		0416 0306
4C2		0436 0306
4D0		0410 0306
4D1		0430 0306
4D2		0410 0308
4D3		0430 0308
4D6		0415 0306
4D7		0435 0306
4DA		04D8 0308
4DB		04D9 0308
4DC		0416 0308
4DD		0436 0308
4DE		0417 0308
4DF		0437 0308
4E2		0418 0304
4E3		0438 0304
4E4		0418 0308
4E5		0438 0308
4E6		041E 0308
4E7		043E 0308
4EA		04E8 0308
4EB		04E9 0308
4EC		042D 0308
4ED		044D 0308
4EE		0423 0304
4EF		0443 0304
4F0		0423 0308
4F1		0443 0308
4F2		0423 030B
4F3		0443 030B
4F4		0427 0308
4F5		0447 0308
4F8		042B 0308
4F9		044B 0308
587		<compat> 0565 0582
622		0627 0653
623		0627 0654
624		0648 0654
625		0627 0655
626		064A 0654
675		<compat> 0627 0674
676		<compat> 0648 0674
677		<compat> 06C7 0674
678		<compat> 064A 0674
6C0		06D5 0654
6C2		06C1 0654
6D3		06D2 0654
929		0928 093C
931		0930 093C
934		0933 093C
958		0915 093C
959		0916 093C
95A		0917 093C
95B		091C 093C
95C		0921 093C
95D		0922 093C
95E		092B 093C
95F		092F 093C
9CB		09C7 09BE
9CC		09C7 09D7
9DC		09A1 09BC
9DD		09A2 09BC
9DF		09AF 09BC
A33		0A32 0A3C
A36		0A38 0A3C
A59		0A16 0A3C
A5A		0A17 0A3C
A5B		0A1C 0A3C
A5E		0A2B 0A3C
B48		0B47 0B56
B4B		0B47 0B3E
B4C		0B47 0B57
B5C		0B21 0B3C
B5D		0B22 0B3C
B94		0B92 0BD7
BCA		0BC6 0BBE
BCB		0BC7 0BBE
BCC		0BC6 0BD7
C48		0C46 0C56
CC0		0CBF 0CD5
CC7		0CC6 0CD5
CC8		0CC6 0CD6
CCA		0CC6 0CC2
CCB		0CCA 0CD5
D4A		0D46 0D3E
D4B		0D47 0D3E
D4C		0D46 0D57
DDA		0DD9 0DCA
DDC		0DD9 0DCF
DDD		0DDC 0DCA
DDE		0DD9 0DDF
E33		<compat> 0E4D 0E32
EB3		<compat> 0ECD 0EB2
EDC		<compat> 0EAB 0E99
EDD		<compat> 0EAB 0EA1
F0C		<noBreak> 0F0B
F43		0F42 0FB7
F4D		0F4C 0FB7
F52		0F51 0FB7
F57		0F56 0FB7
F5C		0F5B 0FB7
F69		0F40 0FB5
F73		0F71 0F72
F75		0F71 0F74
F76		0FB2 0F80
F77		<compat> 0FB2 0F81
F78		0FB3 0F80
F79		<compat> 0FB3 0F81
F81		0F71 0F80
F93		0F92 0FB7
F9D		0F9C 0FB7
FA2		0FA1 0FB7
FA7		0FA6 0FB7
FAC		0FAB 0FB7
FB9		0F90 0FB5
1026		1025 102E
10FC		<super> 10DC
1B06		1B05 1B35
1B08		1B07 1B35
1B0A		1B09 1B35
1B0C		1B0B 1B35
1B0E		1B0D 1B35
1B12		1B11 1B35
1B3B		1B3A 1B35
1B3D		1B3C 1B35
1B40		1B3E 1B35
1B41		1B3F 1B35
1B43		1B42 1B35
1D2C		<super> 0041
1D2D		<super> 00C6
1D2E		<super> 0042
1D30		<super> 0044
1D31		<super> 0045
1D32		<super> 018E
1D33		<super> 0047
1D34		<super> 0048
1D35		<super> 0049
1D36		<super> 004A
1D37		<super> 004B
1D38		<super> 004C
1D39		<super> 004D
1D3A		<super> 004E
1D3C		<super> 004F
1D3D		<super> 0222
1D3E		<super> 0050
1D3F		<super> 0052
1D40		<super> 0054
1D41		<super> 0055
1D42		<super> 0057
1D43		<super> 0061
1D44		<super> 0250
1D45		<super> 0251
1D46		<super> 1D02
1D47		<super> 0062
1D48		<super> 0064
1D49		<super> 0065
1D4A		<super> 0259
1D4B		<super> 025B
1D4C		<super> 025C
1D4D		<super> 0067
1D4F		<super> 006B
1D50		<super> 006D
1D51		<super> 014B
1D52		<super> 006F
1D53		<super> 0254
1D54		<super> 1D16
1D55		<super> 1D17
1D56		<super> 0070
1D57		<super> 0074
1D58		<super> 0075
1D59		<super> 1D1D
1D5A		<super> 026F
1D5B		<super> 0076
1D5C		<super> 1D25
1D5D		<super> 03B2
1D5E		<super> 03B3
1D5F		<super> 03B4
1D60		<super> 03C6
1D61		<super> 03C7
1D62		<sub> 0069
1D63		<sub> 0072
1D64		<sub> 0075
1D65		<sub> 0076
1D66		<sub> 03B2
1D67		<sub> 03B3
1D68		<sub> 03C1
1D69		<sub> 03C6
1D6A		<sub> 03C7
1D78		<super> 043D
1D9B		<super> 0252
1D9C		<super> 0063
1D9D		<super> 0255
1D9E		<super> 00F0
1D9F		<super> 025C
1DA0		<super> 0066
1DA1		<super> 025F
1DA2		<super> 0261
1DA3		<super> 0265
1DA4		<super> 0268
1DA5		<super> 0269
1DA6		<super> 026A
1DA7		<super> 1D7B
1DA8		<super> 029D
1DA9		<super> 026D
1DAA		<super> 1D85
1DAB		<super> 029F
1DAC		<super> 0271
1DAD		<super> 0270
1DAE		<super> 0272
1DAF		<super> 0273
1DB0		<super> 0274
1DB1		<super> 0275
1DB2		<super> 0278
1DB3		<super> 0282
1DB4		<super> 0283
1DB5		<super> 01AB
1DB6		<super> 0289
1DB7		<super> 028A
1DB8		<super> 1D1C
1DB9		<super> 028B
1DBA		<super> 028C
1DBB		<super> 007A
1DBC		<super> 0290
1DBD		<super> 0291
1DBE		<super> 0292
1DBF		<super> 03B8
1E00		0041 0325
1E01		0061 0325
1E02		0042 0307
1E03		0062 0307
1E04		0042 0323
1E05		0062 0323
1E06		0042 0331
1E07		0062 0331
1E08		00C7 0301
1E09		00E7 0301
1E0A		0044 0307
1E0B		0064 0307
1E0C		0044 0323
1E0D		0064 0323
1E0E		0044 0331
1E0F		0064 0331
1E10		0044 0327
1E11		0064 0327
1E12		0044 032D
1E13		0064 032D
1E14		0112 0300
1E15		0113 0300
1E16		0112 0301
1E17		0113 0301
1E18		0045 032D
1E19		0065 032D
1E1A		0045 0330
1E1B		0065 0330
1E1C		0228 0306
1E1D		0229 0306
1E1E		0046 0307
1E1F		0066 0307
1E20		0047 0304
1E21		0067 0304
1E22		0048 0307
1E23		0068 0307
1E24		0048 0323
1E25		0068 0323
1E26		0048 0308
1E27		0068 0308
1E28		0048 0327
1E29		0068 0327
1E2A		0048 032E
1E2B		0068 032E
1E2C		0049 0330
1E2D		0069 0330
1E2E		00CF 0301
1E2F		00EF 0301
1E30		004B 0301
1E31		006B 0301
1E32		004B 0323
1E33		006B 0323
1E34		004B 0331
1E35		006B 0331
1E36		004C 0323
1E37		006C 0323
1E38		1E36 0304
1E39		1E37 0304
1E3A		004C 0331
1E3B		006C 0331
1E3C		004C 032D
1E3D		006C 032D
1E3E		004D 0301
1E3F		006D 0301
1E40		004D 0307
1E41		006D 0307
1E42		004D 0323
1E43		006D 0323
1E44		004E 0307
1E45		006E 0307
1E46		004E 0323
1E47		006E 0323
1E48		004E 0331
1E49		006E 0331
1E4A		004E 032D
1E4B		006E 032D
1E4C		00D5 0301
1E4D		00F5 0301
1E4E		00D5 0308
1E4F		00F5 0308
1E50		014C 0300
1E51		014D 0300
1E52		014C 0301
1E53		014D 0301
1E54		0050 0301
1E55		0070 0301
1E56		0050 0307
1E57		0070 0307
1E58		0052 0307
1E59		0072 0307
1E5A		0052 0323
1E5B		0072 0323
1E5C		1E5A 0304
1E5D		1E5B 0304
1E5E		0052 0331
1E5F		0072 0331
1E60		0053 0307
1E61		0073 0307
1E62		0053 0323
1E63		0073 0323
1E64		015A 0307
1E65		015B 0307
1E66		0160 0307
1E67		0161 0307
1E68		1E62 0307
1E69		1E63 0307
1E6A		0054 0307
1E6B		0074 0307
1E6C		0054 0323
1E6D		0074 0323
1E6E		0054 0331
1E6F		0074 0331
1E70		0054 032D
1E71		0074 032D
1E72		0055 0324
1E73		0075 0324
1E74		0055 0330
1E75		0075 0330
1E76		0055 032D
1E77		0075 032D
1E78		0168 0301
1E79		0169 0301
1E7A		016A 0308
1E7B		016B 0308
1E7C		0056 0303
1E7D		0076 0303
1E7E		0056 0323
1E7F		0076 0323
1E80		0057 0300
1E81		0077 0300
1E82		0057 0301
1E83		0077 0301
1E84		0057 0308
1E85		0077 0308
1E86		0057 0307
1E87		0077 0307
1E88		0057 0323
1E89		0077 0323
1E8A		0058 0307
1E8B		0078 0307
1E8C		0058 0308
1E8D		0078 0308
1E8E		0059 0307
1E8F		0079 0307
1E90		005A 0302
1E91		007A 0302
1E92		005A 0323
1E93		007A 0323
1E94		005A 0331
1E95		007A 0331
1E96		0068 0331
1E97		0074 0308
1E98		0077 030A
1E99		0079 030A
1E9A		<compat> 0061 02BE
1E9B		017F 0307
1EA0		0041 0323
1EA1		0061 0323
1EA2		0041 0309
1EA3		0061 0309
1EA4		00C2 0301
1EA5		00E2 0301
1EA6		00C2 0300
1EA7		00E2 0300
1EA8		00C2 0309
1EA9		00E2 0309
1EAA		00C2 0303
1EAB		00E2 0303
1EAC		1EA0 0302
1EAD		1EA1 0302
1EAE		0102 0301
1EAF		0103 0301
1EB0		0102 0300
1EB1		0103 0300
1EB2		0102 0309
1EB3		0103 0309
1EB4		0102 0303
1EB5		0103 0303
1EB6		1EA0 0306
1EB7		1EA1 0306
1EB8		0045 0323
1EB9		0065 0323
1EBA		0045 0309
1EBB		0065 0309
1EBC		0045 0303
1EBD		0065 0303
1EBE		00CA 0301
1EBF		00EA 0301
1EC0		00CA 0300
1EC1		00EA 0300
1EC2		00CA 0309
1EC3		00EA 0309
1EC4		00CA 0303
1EC5		00EA 0303
1EC6		1EB8 0302
1EC7		1EB9 0302
1EC8		0049 0309
1EC9		0069 0309
1ECA		0049 0323
1ECB		0069 0323
1ECC		004F 0323
1ECD		006F 0323
1ECE		004F 0309
1ECF		006F 0309
1ED0		00D4 0301
1ED1		00F4 0301
1ED2		00D4 0300
1ED3		00F4 0300
1ED4		00D4 0309
1ED5		00F4 0309
1ED6		00D4 0303
1ED7		00F4 0303
1ED8		1ECC 0302
1ED9		1ECD 0302
1EDA		01A0 0301
1EDB		01A1 0301
1EDC		01A0 0300
1EDD		01A1 0300
1EDE		01A0 0309
1EDF		01A1 0309
1EE0		01A0 0303
1EE1		01A1 0303
1EE2		01A0 0323
1EE3		01A1 0323
1EE4		0055 0323
1EE5		0075 0323
1EE6		0055 0309
1EE7		0075 0309
1EE8		01AF 0301
1EE9		01B0 0301
1EEA		01AF 0300
1EEB		01B0 0300
1EEC		01AF 0309
1EED		01B0 0309
1EEE		01AF 0303
1EEF		01B0 0303
1EF0		01AF 0323
1EF1		01B0 0323
1EF2		0059 0300
1EF3		0079 0300
1EF4		0059 0323
1EF5		0079 0323
1EF6		0059 0309
1EF7		0079 0309
1EF8		0059 0303
1EF9		0079 0303
1F00		03B1 0313
1F01		03B1 0314
1F02		1F00 0300
1F03		1F01 0300
1F04		1F00 0301
1F05		1F01 0301
1F06		1F00 0342
1F07		1F01 0342
1F08		0391 0313
1F09		0391 0314
1F0A		1F08 0300
1F0B		1F09 0300
1F0C		1F08 0301
1F0D		1F09 0301
1F0E		1F08 0342
1F0F		1F09 0342
1F10		03B5 0313
1F11		03B5 0314
1F12		1F10 0300
1F13		1F11 0300
1F14		1F10 0301
1F15		1F11 0301
1F18		0395 0313
1F19		0395 0314
1F1A		1F18 0300
1F1B		1F19 0300
1F1C		1F18 0301
1F1D		1F19 0301
1F20		03B7 0313
1F21		03B7 0314
1F22		1F20 0300
1F23		1F21 0300
1F24		1F20 0301
1F25		1F21 0301
1F26		1F20 0342
1F27		1F21 0342
1F28		0397 0313
1F29		0397 0314
1F2A		1F28 0300
1F2B		1F29 0300
1F2C		1F28 0301
1F2D		1F29 0301
1F2E		1F28 0342
1F2F		1F29 0342
1F30		03B9 0313
1F31		03B9 0314
1F32		1F30 0300
1F33		1F31 0300
1F34		1F30 0301
1F35		1F31 0301
1F36		1F30 0342
1F37		1F31 0342
1F38		0399 0313
1F39		0399 0314
1F3A		1F38 0300
1F3B		1F39 0300
1F3C		1F38 0301
1F3D		1F39 0301
1F3E		1F38 0342
1F3F		1F39 0342
1F40		03BF 0313
1F41		03BF 0314
1F42		1F40 0300
1F43		1F41 0300
1F44		1F40 0301
1F45		1F41 0301
1F48		039F 0313
1F49		039F 0314
1F4A		1F48 0300
1F4B		1F49 0300
1F4C		1F48 0301
1F4D		1F49 0301
1F50		03C5 0313
1F51		03C5 0314
1F52		1F50 0300
1F53		1F51 0300
1F54		1F50 0301
1F55		1F51 0301
1F56		1F50 0342
1F57		1F51 0342
1F59		03A5 0314
1F5B		1F59 0300
1F5D		1F59 0301
1F5F		1F59 0342
1F60		03C9 0313
1F61		03C9 0314
1F62		1F60 0300
1F63		1F61 0300
1F64		1F60 0301
1F65		1F61 0301
1F66		1F60 0342
1F67		1F61 0342
1F68		03A9 0313
1F69		03A9 0314
1F6A		1F68 0300
1F6B		1F69 0300
1F6C		1F68 0301
1F6D		1F69 0301
1F6E		1F68 0342
1F6F		1F69 0342
1F70		03B1 0300
1F71		03AC
1F72		03B5 0300
1F73		03AD
1F74		03B7 0300
1F75		03AE
1F76		03B9 0300
1F77		03AF
1F78		03BF 0300
1F79		03CC
1F7A		03C5 0300
1F7B		03CD
1F7C		03C9 0300
1F7D		03CE
1F80		1F00 0345
1F81		1F01 0345
1F82		1F02 0345
1F83		1F03 0345
1F84		1F04 0345
1F85		1F05 0345
1F86		1F06 0345
1F87		1F07 0345
1F88		1F08 0345
1F89		1F09 0345
1F8A		1F0A 0345
1F8B		1F0B 0345
1F8C		1F0C 0345
1F8D		1F0D 0345
1F8E		1F0E 0345
1F8F		1F0F 0345
1F90		1F20 0345
1F91		1F21 0345
1F92		1F22 0345
1F93		1F23 0345
1F94		1F24 0345
1F95		1F25 0345
1F96		1F26 0345
1F97		1F27 0345
1F98		1F28 0345
1F99		1F29 0345
1F9A		1F2A 0345
1F9B		1F2B 0345
1F9C		1F2C 0345
1F9D		1F2D 0345
1F9E		1F2E 0345
1F9F		1F2F 0345
1FA0		1F60 0345
1FA1		1F61 0345
1FA2		1F62 0345
1FA3		1F63 0345
1FA4		1F64 0345
1FA5		1F65 0345
1FA6		1F66 0345
1FA7		1F67 0345
1FA8		1F68 0345
1FA9		1F69 0345
1FAA		1F6A 0345
1FAB		1F6B 0345
1FAC		1F6C 0345
1FAD		1F6D 0345
1FAE		1F6E 0345
1FAF		1F6F 0345
1FB0		03B1 0306
1FB1		03B1 0304
1FB2		1F70 0345
1FB3		03B1 0345
1FB4		03AC 0345
1FB6		03B1 0342
1FB7		1FB6 0345
1FB8		0391 0306
1FB9		0391 0304
1FBA		0391 0300
1FBB		0386
1FBC		0391 0345
1FBD		<compat> 0020 0313
1FBE		03B9
1FBF		<compat> 0020 0313
1FC0		<compat> 0020 0342
1FC1		00A8 0342
1FC2		1F74 0345
1FC3		03B7 0345
1FC4		03AE 0345
1FC6		03B7 0342
1FC7		1FC6 0345
1FC8		0395 0300
1FC9		0388
1FCA		0397 0300
1FCB		0389
1FCC		0397 0345
1FCD		1FBF 0300
1FCE		1FBF 0301
1FCF		1FBF 0342
1FD0		03B9 0306
1FD1		03B9 0304
1FD2		03CA 0300
1FD3		0390
1FD6		03B9 0342
1FD7		03CA 0342
1FD8		0399 0306
1FD9		0399 0304
1FDA		0399 0300
1FDB		038A
1FDD		1FFE 0300
1FDE		1FFE 0301
1FDF		1FFE 0342
1FE0		03C5 0306
1FE1		03C5 0304
1FE2		03CB 0300
1FE3		03B0
1FE4		03C1 0313
1FE5		03C1 0314
1FE6		03C5 0342
1FE7		03CB 0342
1FE8		03A5 0306
1FE9		03A5 0304
1FEA		03A5 0300
1FEB		038E
1FEC		03A1 0314
1FED		00A8 0300
1FEE		0385
1FEF		0060
1FF2		1F7C 0345
1FF3		03C9 0345
1FF4		03CE 0345
1FF6		03C9 0342
1FF7		1FF6 0345
1FF8		039F 0300
1FF9		038C
1FFA		03A9 0300
1FFB		038F
1FFC		03A9 0345
1FFD		00B4
1FFE		<compat> 0020 0314
2000		2002
2001		2003
2002	2006	<compat> 0020
2007		<noBreak> 0020
2008	200A	<compat> 0020
2011		<noBreak> 2010
2017		<compat> 0020 0333
2024		<compat> 002E
2025		<compat> 002E 002E
2026		<compat> 002E 002E 002E
202F		<noBreak> 0020
2033		<compat> 2032 2032
2034		<compat> 2032 2032 2032
2036		<compat> 2035 2035
2037		<compat> 2035 2035 2035
203C		<compat> 0021 0021
203E		<compat> 0020 0305
2047		<compat> 003F 003F
2048		<compat> 003F 0021
2049		<compat> 0021 003F
2057		<compat> 2032 2032 2032 2032
205F		<compat> 0020
2070		<super> 0030
2071		<super> 0069
2074		<super> 0034
2075		<super> 0035
2076		<super> 0036
2077		<super> 0037
2078		<super> 0038
2079		<super> 0039
207A		<super> 002B
207B		<super> 2212
207C		<super> 003D
207D		<super> 0028
207E		<super> 0029
207F		<super> 006E
2080		<sub> 0030
2081		<sub> 0031
2082		<sub> 0032
2083		<sub> 0033
2084		<sub> 0034
2085		<sub> 0035
2086		<sub> 0036
2087		<sub> 0037
2088		<sub> 0038
2089		<sub> 0039
208A		<sub> 002B
208B		<sub> 2212
208C		<sub> 003D
208D		<sub> 0028
208E		<sub> 0029
2090		<sub> 0061
2091		<sub> 0065
2092		<sub> 006F
2093		<sub> 0078
2094		<sub> 0259
2095		<sub> 0068
2096		<sub> 006B
2097		<sub> 006C
2098		<sub> 006D
2099		<sub> 006E
209A		<sub> 0070
209B		<sub> 0073
209C		<sub> 0074
20A8		<compat> 0052 0073
2100		<compat> 0061 002F 0063
2101		<compat> 0061 002F 0073
2102		<font> 0043
2103		<compat> 00B0 0043
2105		<compat> 0063 002F 006F
2106		<compat> 0063 002F 0075
2107		<compat> 0190
2109		<compat> 00B0 0046
210A		<font> 0067
210B	210D	<font> 0048
210E		<font> 0068
210F		<font> 0127
2110	2111	<font> 0049
2112		<font> 004C
2113		<font> 006C
2115		<font> 004E
2116		<compat> 004E 006F
2119		<font> 0050
211A		<font> 0051
211B	211D	<font> 0052
2120		<super> 0053 004D
2121		<compat> 0054 0045 004C
2122		<super> 0054 004D
2124		<font> 005A
2126		03A9
2128		<font> 005A
212A		004B
212B		00C5
212C		<font> 0042
212D		<font> 0043
212F		<font> 0065
2130		<font> 0045
2131		<font> 0046
2133		<font> 004D
2134		<font> 006F
2135		<compat> 05D0
2136		<compat> 05D1
2137		<compat> 05D2
2138		<compat> 05D3
2139		<font> 0069
213B		<compat> 0046 0041 0058
213C		<font> 03C0
213D		<font> 03B3
213E		<font> 0393
213F		<font> 03A0
2140		<font> 2211
2145		<font> 0044
2146		<font> 0064
2147		<font> 0065
2148		<font> 0069
2149		<font> 006A
2150		<fraction> 0031 2044 0037
2151		<fraction> 0031 2044 0039
2152		<fraction> 0031 2044 0031 0030
2153		<fraction> 0031 2044 0033
2154		<fraction> 0032 2044 0033
2155		<fraction> 0031 2044 0035
2156		<fraction> 0032 2044 0035
2157		<fraction> 0033 2044 0035
2158		<fraction> 0034 2044 0035
2159		<fraction> 0031 2044 0036
215A		<fraction> 0035 2044 0036
215B		<fraction> 0031 2044 0038
215C		<fraction> 0033 2044 0038
215D		<fraction> 0035 2044 0038
215E		<fraction> 0037 2044 0038
215F		<fraction> 0031 2044
2160		<compat> 0049
2161		<compat> 0049 0049
2162		<compat> 0049 0049 0049
2163		<compat> 0049 0056
2164		<compat> 0056
2165		<compat> 0056 0049
2166		<compat> 0056 0049 0049
2167		<compat> 0056 0049 0049 0049
2168		<compat> 0049 0058
2169		<compat> 0058
216A		<compat> 0058 0049
216B		<compat> 0058 0049 0049
216C		<compat> 004C
216D		<compat> 0043
216E		<compat> 0044
216F		<compat> 004D
2170		<compat> 0069
2171		<compat> 0069 0069
2172		<compat> 0069 0069 0069
2173		<compat> 0069 0076
2174		<compat> 0076
2175		<compat> 0076 0069
2176		<compat> 0076 0069 0069
2177		<compat> 0076 0069 0069 0069
2178		<compat> 0069 0078
2179		<compat> 0078
217A		<compat> 0078 0069
217B		<compat> 0078 0069 0069
217C		<compat> 006C
217D		<compat> 0063
217E		<compat> 0064
217F		<compat> 006D
2189		<fraction> 0030 2044 0033
219A		2190 0338
219B		2192 0338
21AE		2194 0338
21CD		21D0 0338
21CE		21D4 0338
21CF		21D2 0338
2204		2203 0338
2209		2208 0338
220C		220B 0338
2224		2223 0338
2226		2225 0338
222C		<compat> 222B 222B
222D		<compat> 222B 222B 222B
222F		<compat> 222E 222E
2230		<compat> 222E 222E 222E
2241		223C 0338
2244		2243 0338
2247		2245 0338
2249		2248 0338
2260		003D 0338
2262		2261 0338
226D		224D 0338
226E		003C 0338
226F		003E 0338
2270		2264 0338
2271		2265 0338
2274		2272 0338
2275		2273 0338
2278		2276 0338
2279		2277 0338
2280		227A 0338
2281		227B 0338
2284		2282 0338
2285		2283 0338
2288		2286 0338
2289		2287 0338
22AC		22A2 0338
22AD		22A8 0338
22AE		22A9 0338
22AF		22AB 0338
22E0		227C 0338
22E1		227D 0338
22E2		2291 0338
22E3		2292 0338
22EA		22B2 0338
22EB		22B3 0338
22EC		22B4 0338
22ED		22B5 0338
2329		3008
232A		3009
2460		<circle> 0031
2461		<circle> 0032
2462		<circle> 0033
2463		<circle> 0034
2464		<circle> 0035
2465		<circle> 0036
2466		<circle> 0037
2467		<circle> 0038
2468		<circle> 0039
2469		<circle> 0031 0030
246A		<circle> 0031 0031
246B		<circle> 0031 0032
246C		<circle> 0031 0033
246D		<circle> 0031 0034
246E		<circle> 0031 0035
246F		<circle> 0031 0036
2470		<circle> 0031 0037
2471		<circle> 0031 0038
2472		<circle> 0031 0039
2473		<circle> 0032 0030
2474		<compat> 0028 0031 0029
2475		<compat> 0028 0032 0029
2476		<compat> 0028 0033 0029
2477		<compat> 0028 0034 0029
2478		<compat> 0028 0035 0029
2479		<compat> 0028 0036 0029
247A		<compat> 0028 0037 0029
247B		<compat> 0028 0038 0029
247C		<compat> 0028 0039 0029
247D		<compat> 0028 0031 0030 0029
247E		<compat> 0028 0031 0031 0029
247F		<compat> 0028 0031 0032 0029
2480		<compat> 0028 0031 0033 0029
2481		<compat> 0028 0031 0034 0029
2482		<compat> 0028 0031 0035 0029
2483		<compat> 0028 0031 0036 0029
2484		<compat> 0028 0031 0037 0029
2485		<compat> 0028 0031 0038 0029
2486		<compat> 0028 0031 0039 0029
2487		<compat> 0028 0032 0030 0029
2488		<compat> 0031 002E
2489		<compat> 0032 002E
248A		<compat> 0033 002E
248B		<compat> 0034 002E
248C		<compat> 0035 002E
248D		<compat> 0036 002E
248E		<compat> 0037 002E
248F		<compat> 0038 002E
2490		<compat> 0039 002E
2491		<compat> 0031 0030 002E
2492		<compat> 0031 0031 002E
2493		<compat> 0031 0032 002E
2494		<compat> 0031 0033 002E
2495		<compat> 0031 0034 002E
2496		<compat> 0031 0035 002E
2497		<compat> 0031 0036 002E
2498		<compat> 0031 0037 002E
2499		<compat> 0031 0038 002E
249A		<compat> 0031 0039 002E
249B		<compat> 0032 0030 002E
249C		<compat> 0028 0061 0029
249D		<compat> 0028 0062 0029
249E		<compat> 0028 0063 0029
249F		<compat> 0028 0064 0029
24A0		<compat> 0028 0065 0029
24A1		<compat> 0028 0066 0029
24A2		<compat> 0028 0067 0029
24A3		<compat> 0028 0068 0029
24A4		<compat> 0028 0069 0029
24A5		<compat> 0028 006A 0029
24A6		<compat> 0028 006B 0029
24A7		<compat> 0028 006C 0029
24A8		<compat> 0028 006D 0029
24A9		<compat> 0028 006E 0029
24AA		<compat> 0028 006F 0029
24AB		<compat> 0028 0070 0029
24AC		<compat> 0028 0071 0029
24AD		<compat> 0028 0072 0029
24AE		<compat> 0028 0073 0029
24AF		<compat> 0028 0074 0029
24B0		<compat> 0028 0075 0029
24B1		<compat> 0028 0076 0029
24B2		<compat> 0028 0077 0029
24B3		<compat> 0028 0078 0029
24B4		<compat> 0028 0079 0029
24B5		<compat> 0028 007A 0029
24B6		<circle> 0041
24B7		<circle> 0042
24B8		<circle> 0043
24B9		<circle> 0044
24BA		<circle> 0045
24BB		<circle> 0046
24BC		<circle> 0047
24BD		<circle> 0048
24BE		<circle> 0049
24BF		<circle> 004A
24C0		<circle> 004B
24C1		<circle> 004C
24C2		<circle> 004D
24C3		<circle> 004E
24C4		<circle> 004F
24C5		<circle> 0050
24C6		<circle> 0051
24C7		<circle> 0052
24C8		<circle> 0053
24C9		<circle> 0054
24CA		<circle> 0055
24CB		<circle> 0056
24CC		<circle> 0057
24CD		<circle> 0058
24CE		<circle> 0059
24CF		<circle> 005A
24D0		<circle> 0061
24D1		<circle> 0062
24D2		<circle> 0063
24D3		<circle> 0064
24D4		<circle> 0065
24D5		<circle> 0066
24D6		<circle> 0067
24D7		<circle> 0068
24D8		<circle> 0069
24D9		<circle> 006A
24DA		<circle> 006B
24DB		<circle> 006C
24DC		<circle> 006D
24DD		<circle> 006E
24DE		<circle> 006F
24DF		<circle> 0070
24E0		<circle> 0071
24E1		<circle> 0072
24E2		<circle> 0073
24E3		<circle> 0074
24E4		<circle> 0075
24E5		<circle> 0076
24E6		<circle> 0077
24E7		<circle> 0078
24E8		<circle> 0079
24E9		<circle> 007A
24EA		<circle> 0030
2A0C		<compat> 222B 222B 222B 222B
2A74		<compat> 003A 003A 003D
2A75		<compat> 003D 003D
2A76		<compat> 003D 003D 003D
2ADC		2ADD 0338
2C7C		<sub> 006A
2C7D		<super> 0056
2D6F		<super> 2D61
2E9F		<compat> 6BCD
2EF3		<compat> 9F9F
2F00		<compat> 4E00
2F01		<compat> 4E28
2F02		<compat> 4E36
2F03		<compat> 4E3F
2F04		<compat> 4E59
2F05		<compat> 4E85
2F06		<compat> 4E8C
2F07		<compat> 4EA0
2F08		<compat> 4EBA
2F09		<compat> 513F
2F0A		<compat> 5165
2F0B		<compat> 516B
2F0C		<compat> 5182
2F0D		<compat> 5196
2F0E		<compat> 51AB
2F0F		<compat> 51E0
2F10		<compat> 51F5
2F11		<compat> 5200
2F12		<compat> 529B
2F13		<compat> 52F9
2F14		<compat> 5315
2F15		<compat> 531A
2F16		<compat> 5338
2F17		<compat> 5341
2F18		<compat> 535C
2F19		<compat> 5369
2F1A		<compat> 5382
2F1B		<compat> 53B6
2F1C		<compat> 53C8
2F1D		<compat> 53E3
2F1E		<compat> 56D7
2F1F		<compat> 571F
2F20		<compat> 58EB
2F21		<compat> 5902
2F22		<compat> 590A
2F23		<compat> 5915
2F24		<compat> 5927
2F25		<compat> 5973
2F26		<compat> 5B50
2F27		<compat> 5B80
2F28		<compat> 5BF8
2F29		<compat> 5C0F
2F2A		<compat> 5C22
2F2B		<compat> 5C38
2F2C		<compat> 5C6E
2F2D		<compat> 5C71
2F2E		<compat> 5DDB
2F2F		<compat> 5DE5
2F30		<compat> 5DF1
2F31		<compat> 5DFE
2F32		<compat> 5E72
2F33		<compat> 5E7A
2F34		<compat> 5E7F
2F35		<compat> 5EF4
2F36		<compat> 5EFE
2F37		<compat> 5F0B
2F38		<compat> 5F13
2F39		<compat> 5F50
2F3A		<compat> 5F61
2F3B		<compat> 5F73
2F3C		<compat> 5FC3
2F3D		<compat> 6208
2F3E		<compat> 6236
2F3F		<compat> 624B
2F40		<compat> 652F
2F41		<compat> 6534
2F42		<compat> 6587
2F43		<compat> 6597
2F44		<compat> 65A4
2F45		<compat> 65B9
2F46		<compat> 65E0
2F47		<compat> 65E5
2F48		<compat> 66F0
2F49		<compat> 6708
2F4A		<compat> 6728
2F4B		<compat> 6B20
2F4C		<compat> 6B62
2F4D		<compat> 6B79
2F4E		<compat> 6BB3
2F4F		<compat> 6BCB
2F50		<compat> 6BD4
2F51		<compat> 6BDB
2F52		<compat> 6C0F
2F53		<compat> 6C14
2F54		<compat> 6C34
2F55		<compat> 706B
2F56		<compat> 722A
2F57		<compat> 7236
2F58		<compat> 723B
2F59		<compat> 723F
2F5A		<compat> 7247
2F5B		<compat> 7259
2F5C		<compat> 725B
2F5D		<compat> 72AC
2F5E		<compat> 7384
2F5F		<compat> 7389
2F60		<compat> 74DC
2F61		<compat> 74E6
2F62		<compat> 7518
2F63		<compat> 751F
2F64		<compat> 7528
2F65		<compat> 7530
2F66		<compat> 758B
2F67		<compat> 7592
2F68		<compat> 7676
2F69		<compat> 767D
2F6A		<compat> 76AE
2F6B		<compat> 76BF
2F6C		<compat> 76EE
2F6D		<compat> 77DB
2F6E		<compat> 77E2
2F6F		<compat> 77F3
2F70		<compat> 793A
2F71		<compat> 79B8
2F72		<compat> 79BE
2F73		<compat> 7A74
2F74		<compat> 7ACB
2F75		<compat> 7AF9
2F76		<compat> 7C73
2F77		<compat> 7CF8
2F78		<compat> 7F36
2F79		<compat> 7F51
2F7A		<compat> 7F8A
2F7B		<compat> 7FBD
2F7C		<compat> 8001
2F7D		<compat> 800C
2F7E		<compat> 8012
2F7F		<compat> 8033
2F80		<compat> 807F
2F81		<compat> 8089
2F82		<compat> 81E3
2F83		<compat> 81EA
2F84		<compat> 81F3
2F85		<compat> 81FC
2F86		<compat> 820C
2F87		<compat> 821B
2F88		<compat> 821F
2F89		<compat> 826E
2F8A		<compat> 8272
2F8B		<compat> 8278
2F8C		<compat> 864D
2F8D		<compat> 866B
2F8E		<compat> 8840
2F8F		<compat> 884C
2F90		<compat> 8863
2F91		<compat> 897E
2F92		<compat> 898B
2F93		<compat> 89D2
2F94		<compat> 8A00
2F95		<compat> 8C37
2F96		<compat> 8C46
2F97		<compat> 8C55
2F98		<compat> 8C78
2F99		<compat> 8C9D
2F9A		<compat> 8D64
2F9B		<compat> 8D70
2F9C		<compat> 8DB3
2F9D		<compat> 8EAB
2F9E		<compat> 8ECA
2F9F		<compat> 8F9B
2FA0		<compat> 8FB0
2FA1		<compat> 8FB5
2FA2		<compat> 9091
2FA3		<compat> 9149
2FA4		<compat> 91C6
2FA5		<compat> 91CC
2FA6		<compat> 91D1
2FA7		<compat> 9577
2FA8		<compat> 9580
2FA9		<compat> 961C
2FAA		<compat> 96B6
2FAB		<compat> 96B9
2FAC		<compat> 96E8
2FAD		<compat> 9751
2FAE		<compat> 975E
2FAF		<compat> 9762
2FB0		<compat> 9769
2FB1		<compat> 97CB
2FB2		<compat> 97ED
2FB3		<compat> 97F3
2FB4		<compat> 9801
2FB5		<compat> 98A8
2FB6		<compat> 98DB
2FB7		<compat> 98DF
2FB8		<compat> 9996
2FB9		<compat> 9999
2FBA		<compat> 99AC
2FBB		<compat> 9AA8
2FBC		<compat> 9AD8
2FBD		<compat> 9ADF
2FBE		<compat> 9B25
2FBF		<compat> 9B2F
2FC0		<compat> 9B32
2FC1		<compat> 9B3C
2FC2		<compat> 9B5A
2FC3		<compat> 9CE5
2FC4		<compat> 9E75
2FC5		<compat> 9E7F
2FC6		<compat> 9EA5
2FC7		<compat> 9EBB
2FC8		<compat> 9EC3
2FC9		<compat> 9ECD
2FCA		<compat> 9ED1
2FCB		<compat> 9EF9
2FCC		<compat> 9EFD
2FCD		<compat> 9F0E
2FCE		<compat> 9F13
2FCF		<compat> 9F20
2FD0		<compat> 9F3B
2FD1		<compat> 9F4A
2FD2		<compat> 9F52
2FD3		<compat> 9F8D
2FD4		<compat> 9F9C
2FD5		<compat> 9FA0
3000		<wide> 0020
3036		<compat> 3012
3038		<compat> 5341
3039		<compat> 5344
303A		<compat> 5345
304C		304B 3099
304E		304D 3099
3050		304F 3099
3052		3051 3099
3054		3053 3099
3056		3055 3099
3058		3057 3099
305A		3059 3099
305C		305B 3099
305E		305D 3099
3060		305F 3099
3062		3061 3099
3065		3064 3099
3067		3066 3099
3069		3068 3099
3070		306F 3099
3071		306F 309A
3073		3072 3099
3074		3072 309A
3076		3075 3099
3077		3075 309A
3079		3078 3099
307A		3078 309A
307C		307B 3099
307D		307B 309A
3094		3046 3099
309B		<compat> 0020 3099
309C		<compat> 0020 309A
309E		309D 3099
309F		<vertical> 3088 308A
30AC		30AB 3099
30AE		30AD 3099
30B0		30AF 3099
30B2		30B1 3099
30B4		30B3 3099
30B6		30B5 3099
30B8		30B7 3099
30BA		30B9 3099
30BC		30BB 3099
30BE		30BD 3099
30C0		30BF 3099
30C2		30C1 3099
30C5		30C4 3099
30C7		30C6 3099
30C9		30C8 3099
30D0		30CF 3099
30D1		30CF 309A
30D3		30D2 3099
30D4		30D2 309A
30D6		30D5 3099
30D7		30D5 309A
30D9		30D8 3099
30DA		30D8 309A
30DC		30DB 3099
30DD		30DB 309A
30F4		30A6 3099
30F7		30EF 3099
30F8		30F0 3099
30F9		30F1 3099
30FA		30F2 3099
30FE		30FD 3099
30FF		<vertical> 30B3 30C8
3131		<compat> 1100
3132		<compat> 1101
3133		<compat> 11AA
3134		<compat> 1102
3135		<compat> 11AC
3136		<compat> 11AD
3137		<compat> 1103
3138		<compat> 1104
3139		<compat> 1105
313A		<compat> 11B0
313B		<compat> 11B1
313C		<compat> 11B2
313D		<compat> 11B3
313E		<compat> 11B4
313F		<compat> 11B5
3140		<compat> 111A
3141		<compat> 1106
3142		<compat> 1107
3143		<compat> 1108
3144		<compat> 1121
3145		<compat> 1109
3146		<compat> 110A
3147		<compat> 110B
3148		<compat> 110C
3149		<compat> 110D
314A		<compat> 110E
314B		<compat> 110F
314C		<compat> 1110
314D		<compat> 1111
314E		<compat> 1112
314F		<compat> 1161
3150		<compat> 1162
3151		<compat> 1163
3152		<compat> 1164
3153		<compat> 1165
3154		<compat> 1166
3155		<compat> 1167
3156		<compat> 1168
3157		<compat> 1169
3158		<compat> 116A
3159		<compat> 116B
315A		<compat> 116C
315B		<compat> 116D
315C		<compat> 116E
315D		<compat> 116F
315E		<compat> 1170
315F		<compat> 1171
3160		<compat> 1172
3161		<compat> 1173
3162		<compat> 1174
3163		<compat> 1175
3164		<compat> 1160
3165		<compat> 1114
3166		<compat> 1115
3167		<compat> 11C7
3168		<compat> 11C8
3169		<compat> 11CC
316A		<compat> 11CE
316B		<compat> 11D3
316C		<compat> 11D7
316D		<compat> 11D9
316E		<compat> 111C
316F		<compat> 11DD
3170		<compat> 11DF
3171		<compat> 111D
3172		<compat> 111E
3173		<compat> 1120
3174		<compat> 1122
3175		<compat> 1123
3176		<compat> 1127
3177		<compat> 1129
3178		<compat> 112B
3179		<compat> 112C
317A		<compat> 112D
317B		<compat> 112E
317C		<compat> 112F
317D		<compat> 1132
317E		<compat> 1136
317F		<compat> 1140
3180		<compat> 1147
3181		<compat> 114C
3182		<compat> 11F1
3183		<compat> 11F2
3184		<compat> 1157
3185		<compat> 1158
3186		<compat> 1159
3187		<compat> 1184
3188		<compat> 1185
3189		<compat> 1188
318A		<compat> 1191
318B		<compat> 1192
318C		<compat> 1194
318D		<compat> 119E
318E		<compat> 11A1
3192		<super> 4E00
3193		<super> 4E8C
3194		<super> 4E09
3195		<super> 56DB
3196		<super> 4E0A
3197		<super> 4E2D
3198		<super> 4E0B
3199		<super> 7532
319A		<super> 4E59
319B		<super> 4E19
319C		<super> 4E01
319D		<super> 5929
319E		<super> 5730
319F		<super> 4EBA
3200		<compat> 0028 1100 0029
3201		<compat> 0028 1102 0029
3202		<compat> 0028 1103 0029
3203		<compat> 0028 1105 0029
3204		<compat> 0028 1106 0029
3205		<compat> 0028 1107 0029
3206		<compat> 0028 1109 0029
3207		<compat> 0028 110B 0029
3208		<compat> 0028 110C 0029
3209		<compat> 0028 110E 0029
320A		<compat> 0028 110F 0029
320B		<compat> 0028 1110 0029
320C		<compat> 0028 1111 0029
320D		<compat> 0028 1112 0029
320E		<compat> 0028 1100 1161 0029
320F		<compat> 0028 1102 1161 0029
3210		<compat> 0028 1103 1161 0029
3211		<compat> 0028 1105 1161 0029
3212		<compat> 0028 1106 1161 0029
3213		<compat> 0028 1107 1161 0029
3214		<compat> 0028 1109 1161 0029
3215		<compat> 0028 110B 1161 0029
3216		<compat> 0028 110C 1161 0029
3217		<compat> 0028 110E 1161 0029
3218		<compat> 0028 110F 1161 0029
3219		<compat> 0028 1110 1161 0029
321A		<compat> 0028 1111 1161 0029
321B		<compat> 0028 1112 1161 0029
321C		<compat> 0028 110C 116E 0029
321D		<compat> 0028 110B 1169 110C 1165 11AB 0029
321E		<compat> 0028 110B 1169 1112 116E 0029
3220		<compat> 0028 4E00 0029
3221		<compat> 0028 4E8C 0029
3222		<compat> 0028 4E09 0029
3223		<compat> 0028 56DB 0029
3224		<compat> 0028 4E94 0029
3225		<compat> 0028 516D 0029
3226		<compat> 0028 4E03 0029
3227		<compat> 0028 516B 0029
3228		<compat> 0028 4E5D 0029
3229		<compat> 0028 5341 0029
322A		<compat> 0028 6708 0029
322B		<compat> 0028 706B 0029
322C		<compat> 0028 6C34 0029
322D		<compat> 0028 6728 0029
322E		<compat> 0028 91D1 0029
322F		<compat> 0028 571F 0029
3230		<compat> 0028 65E5 0029
3231		<compat> 0028 682A 0029
3232		<compat> 0028 6709 0029
3233		<compat> 0028 793E 0029
3234		<compat> 0028 540D 0029
3235		<compat> 0028 7279 0029
3236		<compat> 0028 8CA1 0029
3237		<compat> 0028 795D 0029
3238		<compat> 0028 52B4 0029
3239		<compat> 0028 4EE3 0029
323A		<compat> 0028 547C 0029
323B		<compat> 0028 5B66 0029
323C		<compat> 0028 76E3 0029
323D		<compat> 0028 4F01 0029
323E		<compat> 0028 8CC7 0029
323F		<compat> 0028 5354 0029
3240		<compat> 0028 796D 0029
3241		<compat> 0028 4F11 0029
3242		<compat> 0028 81EA 0029
3243		<compat> 0028 81F3 0029
3244		<circle> 554F
3245		<circle> 5E7C
3246		<circle> 6587
3247		<circle> 7B8F
3250		<square> 0050 0054 0045
3251		<circle> 0032 0031
3252		<circle> 0032 0032
3253		<circle> 0032 0033
3254		<circle> 0032 0034
3255		<circle> 0032 0035
3256		<circle> 0032 0036
3257		<circle> 0032 0037
3258		<circle> 0032 0038
3259		<circle> 0032 0039
325A		<circle> 0033 0030
325B		<circle> 0033 0031
325C		<circle> 0033 0032
325D		<circle> 0033 0033
325E		<circle> 0033 0034
325F		<circle> 0033 0035
3260		<circle> 1100
3261		<circle> 1102
3262		<circle> 1103
3263		<circle> 1105
3264		<circle> 1106
3265		<circle> 1107
3266		<circle> 1109
3267		<circle> 110B
3268		<circle> 110C
3269		<circle> 110E
326A		<circle> 110F
326B		<circle> 1110
326C		<circle> 1111
326D		<circle> 1112
326E		<circle> 1100 1161
326F		<circle> 1102 1161
3270		<circle> 1103 1161
3271		<circle> 1105 1161
3272		<circle> 1106 1161
3273		<circle> 1107 1161
3274		<circle> 1109 1161
3275		<circle> 110B 1161
3276		<circle> 110C 1161
3277		<circle> 110E 1161
3278		<circle> 110F 1161
3279		<circle> 1110 1161
327A		<circle> 1111 1161
327B		<circle> 1112 1161
327C		<circle> 110E 1161 11B7 1100 1169
327D		<circle> 110C 116E 110B 1174
327E		<circle> 110B 116E
3280		<circle> 4E00
3281		<circle> 4E8C
3282		<circle> 4E09
3283		<circle> 56DB
3284		<circle> 4E94
3285		<circle> 516D
3286		<circle> 4E03
3287		<circle> 516B
3288		<circle> 4E5D
3289		<circle> 5341
328A		<circle> 6708
328B		<circle> 706B
328C		<circle> 6C34
328D		<circle> 6728
328E		<circle> 91D1
328F		<circle> 571F
3290		<circle> 65E5
3291		<circle> 682A
3292		<circle> 6709
3293		<circle> 793E
3294		<circle> 540D
3295		<circle> 7279
3296		<circle> 8CA1
3297		<circle> 795D
3298		<circle> 52B4
3299		<circle> 79D8
329A		<circle> 7537
329B		<circle> 5973
329C		<circle> 9069
329D		<circle> 512A
329E		<circle> 5370
329F		<circle> 6CE8
32A0		<circle> 9805
32A1		<circle> 4F11
32A2		<circle> 5199
32A3		<circle> 6B63
32A4		<circle> 4E0A
32A5		<circle> 4E2D
32A6		<circle> 4E0B
32A7		<circle> 5DE6
32A8		<circle> 53F3
32A9		<circle> 533B
32AA		<circle> 5B97
32AB		<circle> 5B66
32AC		<circle> 76E3
32AD		<circle> 4F01
32AE		<circle> 8CC7
32AF		<circle> 5354
32B0		<circle> 591C
32B1		<circle> 0033 0036
32B2		<circle> 0033 0037
32B3		<circle> 0033 0038
32B4		<circle> 0033 0039
32B5		<circle> 0034 0030
32B6		<circle> 0034 0031
32B7		<circle> 0034 0032
32B8		<circle> 0034 0033
32B9		<circle> 0034 0034
32BA		<circle> 0034 0035
32BB		<circle> 0034 0036
32BC		<circle> 0034 0037
32BD		<circle> 0034 0038
32BE		<circle> 0034 0039
32BF		<circle> 0035 0030
32C0		<compat> 0031 6708
32C1		<compat> 0032 6708
32C2		<compat> 0033 6708
32C3		<compat> 0034 6708
32C4		<compat> 0035 6708
32C5		<compat> 0036 6708
32C6		<compat> 0037 6708
32C7		<compat> 0038 6708
32C8		<compat> 0039 6708
32C9		<compat> 0031 0030 6708
32CA		<compat> 0031 0031 6708
32CB		<compat> 0031 0032 6708
32CC		<square> 0048 0067
32CD		<square> 0065 0072 0067
32CE		<square> 0065 0056
32CF		<square> 004C 0054 0044
32D0		<circle> 30A2
32D1		<circle> 30A4
32D2		<circle> 30A6
32D3		<circle> 30A8
32D4		<circle> 30AA
32D5		<circle> 30AB
32D6		<circle> 30AD
32D7		<circle> 30AF
32D8		<circle> 30B1
32D9		<circle> 30B3
32DA		<circle> 30B5
32DB		<circle> 30B7
32DC		<circle> 30B9
32DD		<circle> 30BB
32DE		<circle> 30BD
32DF		<circle> 30BF
32E0		<circle> 30C1
32E1		<circle> 30C4
32E2		<circle> 30C6
32E3		<circle> 30C8
32E4		<circle> 30CA
32E5		<circle> 30CB
32E6		<circle> 30CC
32E7		<circle> 30CD
32E8		<circle> 30CE
32E9		<circle> 30CF
32EA		<circle> 30D2
32EB		<circle> 30D5
32EC		<circle> 30D8
32ED		<circle> 30DB
32EE		<circle> 30DE
32EF		<circle> 30DF
32F0		<circle> 30E0
32F1		<circle> 30E1
32F2		<circle> 30E2
32F3		<circle> 30E4
32F4		<circle> 30E6
32F5		<circle> 30E8
32F6		<circle> 30E9
32F7		<circle> 30EA
32F8		<circle> 30EB
32F9		<circle> 30EC
32FA		<circle> 30ED
32FB		<circle> 30EF
32FC		<circle> 30F0
32FD		<circle> 30F1
32FE		<circle> 30F2
3300		<square> 30A2 30D1 30FC 30C8
3301		<square> 30A2 30EB 30D5 30A1
3302		<square> 30A2 30F3 30DA 30A2
3303		<square> 30A2 30FC 30EB
3304		<square> 30A4 30CB 30F3 30B0
3305		<square> 30A4 30F3 30C1
3306		<square> 30A6 30A9 30F3
3307		<square> 30A8 30B9 30AF 30FC 30C9
3308		<square> 30A8 30FC 30AB 30FC
3309		<square> 30AA 30F3 30B9
330A		<square> 30AA 30FC 30E0
330B		<square> 30AB 30A4 30EA
330C		<square> 30AB 30E9 30C3 30C8
330D		<square> 30AB 30ED 30EA 30FC
330E		<square> 30AC 30ED 30F3
330F		<square> 30AC 30F3 30DE
3310		<square> 30AE 30AC
3311		<square> 30AE 30CB 30FC
3312		<square> 30AD 30E5 30EA 30FC
3313		<square> 30AE 30EB 30C0 30FC
3314		<square> 30AD 30ED
3315		<square> 30AD 30ED 30B0 30E9 30E0
3316		<square> 30AD 30ED 30E1 30FC 30C8 30EB
3317		<square> 30AD 30ED 30EF 30C3 30C8
3318		<square> 30B0 30E9 30E0
3319		<square> 30B0 30E9 30E0 30C8 30F3
331A		<square> 30AF 30EB 30BC 30A4 30ED
331B		<square> 30AF 30ED 30FC 30CD
331C		<square> 30B1 30FC 30B9
331D		<square> 30B3 30EB 30CA
331E		<square> 30B3 30FC 30DD
331F		<square> 30B5 30A4 30AF 30EB
3320		<square> 30B5 30F3 30C1 30FC 30E0
3321		<square> 30B7 30EA 30F3 30B0
3322		<square> 30BB 30F3 30C1
3323		<square> 30BB 30F3 30C8
3324		<square> 30C0 30FC 30B9
3325		<square> 30C7 30B7
3326		<square> 30C9 30EB
3327		<square> 30C8 30F3
3328		<square> 30CA 30CE
3329		<square> 30CE 30C3 30C8
332A		<square> 30CF 30A4 30C4
332B		<square> 30D1 30FC 30BB 30F3 30C8
332C		<square> 30D1 30FC 30C4
332D		<square> 30D0 30FC 30EC 30EB
332E		<square> 30D4 30A2 30B9 30C8 30EB
332F		<square> 30D4 30AF 30EB
3330		<square> 30D4 30B3
3331		<square> 30D3 30EB
3332		<square> 30D5 30A1 30E9 30C3 30C9
3333		<square> 30D5 30A3 30FC 30C8
3334		<square> 30D6 30C3 30B7 30A7 30EB
3335		<square> 30D5 30E9 30F3
3336		<square> 30D8 30AF 30BF 30FC 30EB
3337		<square> 30DA 30BD
3338		<square> 30DA 30CB 30D2
3339		<square> 30D8 30EB 30C4
333A		<square> 30DA 30F3 30B9
333B		<square> 30DA 30FC 30B8
333C		<square> 30D9 30FC 30BF
333D		<square> 30DD 30A4 30F3 30C8
333E		<square> 30DC 30EB 30C8
333F		<square> 30DB 30F3
3340		<square> 30DD 30F3 30C9
3341		<square> 30DB 30FC 30EB
3342		<square> 30DB 30FC 30F3
3343		<square> 30DE 30A4 30AF 30ED
3344		<square> 30DE 30A4 30EB
3345		<square> 30DE 30C3 30CF
3346		<square> 30DE 30EB 30AF
3347		<square> 30DE 30F3 30B7 30E7 30F3
3348		<square> 30DF 30AF 30ED 30F3
3349		<square> 30DF 30EA
334A		<square> 30DF 30EA 30D0 30FC 30EB
334B		<square> 30E1 30AC
334C		<square> 30E1 30AC 30C8 30F3
334D		<square> 30E1 30FC 30C8 30EB
334E		<square> 30E4 30FC 30C9
334F		<square> 30E4 30FC 30EB
3350		<square> 30E6 30A2 30F3
3351		<square> 30EA 30C3 30C8 30EB
3352		<square> 30EA 30E9
3353		<square> 30EB 30D4 30FC
3354		<square> 30EB 30FC 30D6 30EB
3355		<square> 30EC 30E0
3356		<square> 30EC 30F3 30C8 30B2 30F3
3357		<square> 30EF 30C3 30C8
3358		<compat> 0030 70B9
3359		<compat> 0031 70B9
335A		<compat> 0032 70B9
335B		<compat> 0033 70B9
335C		<compat> 0034 70B9
335D		<compat> 0035 70B9
335E		<compat> 0036 70B9
335F		<compat> 0037 70B9
3360		<compat> 0038 70B9
3361		<compat> 0039 70B9
3362		<compat> 0031 0030 70B9
3363		<compat> 0031 0031 70B9
3364		<compat> 0031 0032 70B9
3365		<compat> 0031 0033 70B9
3366		<compat> 0031 0034 70B9
3367		<compat> 0031 0035 70B9
3368		<compat> 0031 0036 70B9
3369		<compat> 0031 0037 70B9
336A		<compat> 0031 0038 70B9
336B		<compat> 0031 0039 70B9
336C		<compat> 0032 0030 70B9
336D		<compat> 0032 0031 70B9
336E		<compat> 0032 0032 70B9
336F		<compat> 0032 0033 70B9
3370		<compat> 0032 0034 70B9
3371		<square> 0068 0050 0061
3372		<square> 0064 0061
3373		<square> 0041 0055
3374		<square> 0062 0061 0072
3375		<square> 006F 0056
3376		<square> 0070 0063
3377		<square> 0064 006D
3378		<square> 0064 006D 00B2
3379		<square> 0064 006D 00B3
337A		<square> 0049 0055
337B		<square> 5E73 6210
337C		<square> 662D 548C
337D		<square> 5927 6B63
337E		<square> 660E 6CBB
337F		<square> 682A 5F0F 4F1A 793E
3380		<square> 0070 0041
3381		<square> 006E 0041
3382		<square> 03BC 0041
3383		<square> 006D 0041
3384		<square> 006B 0041
3385		<square> 004B 0042
3386		<square> 004D 0042
3387		<square> 0047 0042
3388		<square> 0063 0061 006C
3389		<square> 006B 0063 0061 006C
338A		<square> 0070 0046
338B		<square> 006E 0046
338C		<square> 03BC 0046
338D		<square> 03BC 0067
338E		<square> 006D 0067
338F		<square> 006B 0067
3390		<square> 0048 007A
3391		<square> 006B 0048 007A
3392		<square> 004D 0048 007A
3393		<square> 0047 0048 007A
3394		<square> 0054 0048 007A
3395		<square> 03BC 2113
3396		<square> 006D 2113
3397		<square> 0064 2113
3398		<square> 006B 2113
3399		<square> 0066 006D
339A		<square> 006E 006D
339B		<square> 03BC 006D
339C		<square> 006D 006D
339D		<square> 0063 006D
339E		<square> 006B 006D
339F		<square> 006D 006D 00B2
33A0		<square> 0063 006D 00B2
33A1		<square> 006D 00B2
33A2		<square> 006B 006D 00B2
33A3		<square> 006D 006D 00B3
33A4		<square> 0063 006D 00B3
33A5		<square> 006D 00B3
33A6		<square> 006B 006D 00B3
33A7		<square> 006D 2215 0073
33A8		<square> 006D 2215 0073 00B2
33A9		<square> 0050 0061
33AA		<square> 006B 0050 0061
33AB		<square> 004D 0050 0061
33AC		<square> 0047 0050 0061
33AD		<square> 0072 0061 0064
33AE		<square> 0072 0061 0064 2215 0073
33AF		<square> 0072 0061 0064 2215 0073 00B2
33B0		<square> 0070 0073
33B1		<square> 006E 0073
33B2		<square> 03BC 0073
33B3		<square> 006D 0073
33B4		<square> 0070 0056
33B5		<square> 006E 0056
33B6		<square> 03BC 0056
33B7		<square> 006D 0056
33B8		<square> 006B 0056
33B9		<square> 004D 0056
33BA		<square> 0070 0057
33BB		<square> 006E 0057
33BC		<square> 03BC 0057
33BD		<square> 006D 0057
33BE		<square> 006B 0057
33BF		<square> 004D 0057
33C0		<square> 006B 03A9
33C1		<square> 004D 03A9
33C2		<square> 0061 002E 006D 002E
33C3		<square> 0042 0071
33C4		<square> 0063 0063
33C5		<square> 0063 0064
33C6		<square> 0043 2215 006B 0067
33C7		<square> 0043 006F 002E
33C8		<square> 0064 0042
33C9		<square> 0047 0079
33CA		<square> 0068 0061
33CB		<square> 0048 0050
33CC		<square> 0069 006E
33CD		<square> 004B 004B
33CE		<square> 004B 004D
33CF		<square> 006B 0074
33D0		<square> 006C 006D
33D1		<square> 006C 006E
33D2		<square> 006C 006F 0067
33D3		<square> 006C 0078
33D4		<square> 006D 0062
33D5		<square> 006D 0069 006C
33D6		<square> 006D 006F 006C
33D7		<square> 0050 0048
33D8		<square> 0070 002E 006D 002E
33D9		<square> 0050 0050 004D
33DA		<square> 0050 0052
33DB		<square> 0073 0072
33DC		<square> 0053 0076
33DD		<square> 0057 0062
33DE		<square> 0056 2215 006D
33DF		<square> 0041 2215 006D
33E0		<compat> 0031 65E5
33E1		<compat> 0032 65E5
33E2		<compat> 0033 65E5
33E3		<compat> 0034 65E5
33E4		<compat> 0035 65E5
33E5		<compat> 0036 65E5
33E6		<compat> 0037 65E5
33E7		<compat> 0038 65E5
33E8		<compat> 0039 65E5
33E9		<compat> 0031 0030 65E5
33EA		<compat> 0031 0031 65E5
33EB		<compat> 0031 0032 65E5
33EC		<compat> 0031 0033 65E5
33ED		<compat> 0031 0034 65E5
33EE		<compat> 0031 0035 65E5
33EF		<compat> 0031 0036 65E5
33F0		<compat> 0031 0037 65E5
33F1		<compat> 0031 0038 65E5
33F2		<compat> 0031 0039 65E5
33F3		<compat> 0032 0030 65E5
33F4		<compat> 0032 0031 65E5
33F5		<compat> 0032 0032 65E5
33F6		<compat> 0032 0033 65E5
33F7		<compat> 0032 0034 65E5
33F8		<compat> 0032 0035 65E5
33F9		<compat> 0032 0036 65E5
33FA		<compat> 0032 0037 65E5
33FB		<compat> 0032 0038 65E5
33FC		<compat> 0032 0039 65E5
33FD		<compat> 0033 0030 65E5
33FE		<compat> 0033 0031 65E5
33FF		<square> 0067 0061 006C
A69C		<super> 044A
A69D		<super> 044C
A770		<super> A76F
A7F8		<super> 0126
A7F9		<super> 0153
AB5C		<super> A727
AB5D		<super> AB37
AB5E		<super> 026B
AB5F		<super> AB52
F900		8C48
F901		66F4
F902		8ECA
F903		8CC8
F904		6ED1
F905		4E32
F906		53E5
F907	F908	9F9C
F909		5951
F90A		91D1
F90B		5587
F90C		5948
F90D		61F6
F90E		7669
F90F		7F85
F910		863F
F911		87BA
F912		88F8
F913		908F
F914		6A02
F915		6D1B
F916		70D9
F917		73DE
F918		843D
F919		916A
F91A		99F1
F91B		4E82
F91C		5375
F91D		6B04
F91E		721B
F91F		862D
F920		9E1E
F921		5D50
F922		6FEB
F923		85CD
F924		8964
F925		62C9
F926		81D8
F927		881F
F928		5ECA
F929		6717
F92A		6D6A
F92B		72FC
F92C		90CE
F92D		4F86
F92E		51B7
F92F		52DE
F930		64C4
F931		6AD3
F932		7210
F933		76E7
F934		8001
F935		8606
F936		865C
F937		8DEF
F938		9732
F939		9B6F
F93A		9DFA
F93B		788C
F93C		797F
F93D		7DA0
F93E		83C9
F93F		9304
F940		9E7F
F941		8AD6
F942		58DF
F943		5F04
F944		7C60
F945		807E
F946		7262
F947		78CA
F948		8CC2
F949		96F7
F94A		58D8
F94B		5C62
F94C		6A13
F94D		6DDA
F94E		6F0F
F94F		7D2F
F950		7E37
F951		964B
F952		52D2
F953		808B
F954		51DC
F955		51CC
F956		7A1C
F957		7DBE
F958		83F1
F959		9675
F95A		8B80
F95B		62CF
F95C		6A02
F95D		8AFE
F95E		4E39
F95F		5BE7
F960		6012
F961		7387
F962		7570
F963		5317
F964		78FB
F965		4FBF
F966		5FA9
F967		4E0D
F968		6CCC
F969		6578
F96A		7D22
F96B		53C3
F96C		585E
F96D		7701
F96E		8449
F96F		8AAA
F970		6BBA
F971		8FB0
F972		6C88
F973		62FE
F974		82E5
F975		63A0
F976		7565
F977		4EAE
F978		5169
F979		51C9
F97A		6881
F97B		7CE7
F97C		826F
F97D		8AD2
F97E		91CF
F97F		52F5
F980		5442
F981		5973
F982		5EEC
F983		65C5
F984		6FFE
F985		792A
F986		95AD
F987		9A6A
F988		9E97
F989		9ECE
F98A		529B
F98B		66C6
F98C		6B77
F98D		8F62
F98E		5E74
F98F		6190
F990		6200
F991		649A
F992		6F23
F993		7149
F994		7489
F995		79CA
F996		7DF4
F997		806F
F998		8F26
F999		84EE
F99A		9023
F99B		934A
F99C		5217
F99D		52A3
F99E		54BD
F99F		70C8
F9A0		88C2
F9A1		8AAA
F9A2		5EC9
F9A3		5FF5
F9A4		637B
F9A5		6BAE
F9A6		7C3E
F9A7		7375
F9A8		4EE4
F9A9		56F9
F9AA		5BE7
F9AB		5DBA
F9AC		601C
F9AD		73B2
F9AE		7469
F9AF		7F9A
F9B0		8046
F9B1		9234
F9B2		96F6
F9B3		9748
F9B4		9818
F9B5		4F8B
F9B6		79AE
F9B7		91B4
F9B8		96B8
F9B9		60E1
F9BA		4E86
F9BB		50DA
F9BC		5BEE
F9BD		5C3F
F9BE		6599
F9BF		6A02
F9C0		71CE
F9C1		7642
F9C2		84FC
F9C3		907C
F9C4		9F8D
F9C5		6688
F9C6		962E
F9C7		5289
F9C8		677B
F9C9		67F3
F9CA		6D41
F9CB		6E9C
F9CC		7409
F9CD		7559
F9CE		786B
F9CF		7D10
F9D0		985E
F9D1		516D
F9D2		622E
F9D3		9678
F9D4		502B
F9D5		5D19
F9D6		6DEA
F9D7		8F2A
F9D8		5F8B
F9D9		6144
F9DA		6817
F9DB		7387
F9DC		9686
F9DD		5229
F9DE		540F
F9DF		5C65
F9E0		6613
F9E1		674E
F9E2		68A8
F9E3		6CE5
F9E4		7406
F9E5		75E2
F9E6		7F79
F9E7		88CF
F9E8		88E1
F9E9		91CC
F9EA		96E2
F9EB		533F
F9EC		6EBA
F9ED		541D
F9EE		71D0
F9EF		7498
F9F0		85FA
F9F1		96A3
F9F2		9C57
F9F3		9E9F
F9F4		6797
F9F5		6DCB
F9F6		81E8
F9F7		7ACB
F9F8		7B20
F9F9		7C92
F9FA		72C0
F9FB		7099
F9FC		8B58
F9FD		4EC0
F9FE		8336
F9FF		523A
FA00		5207
FA01		5EA6
FA02		62D3
FA03		7CD6
FA04		5B85
FA05		6D1E
FA06		66B4
FA07		8F3B
FA08		884C
FA09		964D
FA0A		898B
FA0B		5ED3
FA0C		5140
FA0D		55C0
FA10		585A
FA12		6674
FA15		51DE
FA16		732A
FA17		76CA
FA18		793C
FA19		795E
FA1A		7965
FA1B		798F
FA1C		9756
FA1D		7CBE
FA1E		7FBD
FA20		8612
FA22		8AF8
FA25		9038
FA26		90FD
FA2A		98EF
FA2B		98FC
FA2C		9928
FA2D		9DB4
FA2E		90DE
FA2F		96B7
FA30		4FAE
FA31		50E7
FA32		514D
FA33		52C9
FA34		52E4
FA35		5351
FA36		559D
FA37		5606
FA38		5668
FA39		5840
FA3A		58A8
FA3B		5C64
FA3C		5C6E
FA3D		6094
FA3E		6168
FA3F		618E
FA40		61F2
FA41		654F
FA42		65E2
FA43		6691
FA44		6885
FA45		6D77
FA46		6E1A
FA47		6F22
FA48		716E
FA49		722B
FA4A		7422
FA4B		7891
FA4C		793E
FA4D		7949
FA4E		7948
FA4F		7950
FA50		7956
FA51		795D
FA52		798D
FA53		798E
FA54		7A40
FA55		7A81
FA56		7BC0
FA57		7DF4
FA58		7E09
FA59		7E41
FA5A		7F72
FA5B		8005
FA5C		81ED
FA5D	FA5E	8279
FA5F		8457
FA60		8910
FA61		8996
FA62		8B01
FA63		8B39
FA64		8CD3
FA65		8D08
FA66		8FB6
FA67		9038
FA68		96E3
FA69		97FF
FA6A		983B
FA6B		6075
FA6C		242EE
FA6D		8218
FA70		4E26
FA71		51B5
FA72		5168
FA73		4F80
FA74		5145
FA75		5180
FA76		52C7
FA77		52FA
FA78		559D
FA79		5555
FA7A		5599
FA7B		55E2
FA7C		585A
FA7D		58B3
FA7E		5944
FA7F		5954
FA80		5A62
FA81		5B28
FA82		5ED2
FA83		5ED9
FA84		5F69
FA85		5FAD
FA86		60D8
FA87		614E
FA88		6108
FA89		618E
FA8A		6160
FA8B		61F2
FA8C		6234
FA8D		63C4
FA8E		641C
FA8F		6452
FA90		6556
FA91		6674
FA92		6717
FA93		671B
FA94		6756
FA95		6B79
FA96		6BBA
FA97		6D41
FA98		6EDB
FA99		6ECB
FA9A		6F22
FA9B		701E
FA9C		716E
FA9D		77A7
FA9E		7235
FA9F		72AF
FAA0		732A
FAA1		7471
FAA2		7506
FAA3		753B
FAA4		761D
FAA5		761F
FAA6		76CA
FAA7		76DB
FAA8		76F4
FAA9		774A
FAAA		7740
FAAB		78CC
FAAC		7AB1
FAAD		7BC0
FAAE		7C7B
FAAF		7D5B
FAB0		7DF4
FAB1		7F3E
FAB2		8005
FAB3		8352
FAB4		83EF
FAB5		8779
FAB6		8941
FAB7		8986
FAB8		8996
FAB9		8ABF
FABA		8AF8
FABB		8ACB
FABC		8B01
FABD		8AFE
FABE		8AED
FABF		8B39
FAC0		8B8A
FAC1		8D08
FAC2		8F38
FAC3		9072
FAC4		9199
FAC5		9276
FAC6		967C
FAC7		96E3
FAC8		9756
FAC9		97DB
FACA		97FF
FACB		980B
FACC		983B
FACD		9B12
FACE		9F9C
FACF		2284A
FAD0		22844
FAD1		233D5
FAD2		3B9D
FAD3		4018
FAD4		4039
FAD5		25249
FAD6		25CD0
FAD7		27ED3
FAD8		9F43
FAD9		9F8E
FB00		<compat> 0066 0066
FB01		<compat> 0066 0069
FB02		<compat> 0066 006C
FB03		<compat> 0066 0066 0069
FB04		<compat> 0066 0066 006C
FB05		<compat> 017F 0074
FB06		<compat> 0073 0074
FB13		<compat> 0574 0576
FB14		<compat> 0574 0565
FB15		<compat> 0574 056B
FB16		<compat> 057E 0576
FB17		<compat> 0574 056D
FB1D		05D9 05B4
FB1F		05F2 05B7
FB20		<font> 05E2
FB21		<font> 05D0
FB22		<font> 05D3
FB23		<font> 05D4
FB24		<font> 05DB
FB25		<font> 05DC
FB26		<font> 05DD
FB27		<font> 05E8
FB28		<font> 05EA
FB29		<font> 002B
FB2A		05E9 05C1
FB2B		05E9 05C2
FB2C		FB49 05C1
FB2D		FB49 05C2
FB2E		05D0 05B7
FB2F		05D0 05B8
FB30		05D0 05BC
FB31		05D1 05BC
FB32		05D2 05BC
FB33		05D3 05BC
FB34		05D4 05BC
FB35		05D5 05BC
FB36		05D6 05BC
FB38		05D8 05BC
FB39		05D9 05BC
FB3A		05DA 05BC
FB3B		05DB 05BC
FB3C		05DC 05BC
FB3E		05DE 05BC
FB40		05E0 05BC
FB41		05E1 05BC
FB43		05E3 05BC
FB44		05E4 05BC
FB46		05E6 05BC
FB47		05E7 05BC
FB48		05E8 05BC
FB49		05E9 05BC
FB4A		05EA 05BC
FB4B		05D5 05B9
FB4C		05D1 05BF
FB4D		05DB 05BF
FB4E		05E4 05BF
FB4F		<compat> 05D0 05DC
FB50		<isolated> 0671
FB51		<final> 0671
FB52		<isolated> 067B
FB53		<final> 067B
FB54		<initial> 067B
FB55		<medial> 067B
FB56		<isolated> 067E
FB57		<final> 067E
FB58		<initial> 067E
FB59		<medial> 067E
FB5A		<isolated> 0680
FB5B		<final> 0680
FB5C		<initial> 0680
FB5D		<medial> 0680
FB5E		<isolated> 067A
FB5F		<final> 067A
FB60		<initial> 067A
FB61		<medial> 067A
FB62		<isolated> 067F
FB63		<final> 067F
FB64		<initial> 067F
FB65		<medial> 067F
FB66		<isolated> 0679
FB67		<final> 0679
FB68		<initial> 0679
FB69		<medial> 0679
FB6A		<isolated> 06A4
FB6B		<final> 06A4
FB6C		<initial> 06A4
FB6D		<medial> 06A4
FB6E		<isolated> 06A6
FB6F		<final> 06A6
FB70		<initial> 06A6
FB71		<medial> 06A6
FB72		<isolated> 0684
FB73		<final> 0684
FB74		<initial> 0684
FB75		<medial> 0684
FB76		<isolated> 0683
FB77		<final> 0683
FB78		<initial> 0683
FB79		<medial> 0683
FB7A		<isolated> 0686
FB7B		<final> 0686
FB7C		<initial> 0686
FB7D		<medial> 0686
FB7E		<isolated> 0687
FB7F		<final> 0687
FB80		<initial> 0687
FB81		<medial> 0687
FB82		<isolated> 068D
FB83		<final> 068D
FB84		<isolated> 068C
FB85		<final> 068C
FB86		<isolated> 068E
FB87		<final> 068E
FB88		<isolated> 0688
FB89		<final> 0688
FB8A		<isolated> 0698
FB8B		<final> 0698
FB8C		<isolated> 0691
FB8D		<final> 0691
FB8E		<isolated> 06A9
FB8F		<final> 06A9
FB90		<initial> 06A9
FB91		<medial> 06A9
FB92		<isolated> 06AF
FB93		<final> 06AF
FB94		<initial> 06AF
FB95		<medial> 06AF
FB96		<isolated> 06B3
FB97		<final> 06B3
FB98		<initial> 06B3
FB99		<medial> 06B3
FB9A		<isolated> 06B1
FB9B		<final> 06B1
FB9C		<initial> 06B1
FB9D		<medial> 06B1
FB9E		<isolated> 06BA
FB9F		<final> 06BA
FBA0		<isolated> 06BB
FBA1		<final> 06BB
FBA2		<initial> 06BB
FBA3		<medial> 06BB
FBA4		<isolated> 06C0
FBA5		<final> 06C0
FBA6		<isolated> 06C1
FBA7		<final> 06C1
FBA8		<initial> 06C1
FBA9		<medial> 06C1
FBAA		<isolated> 06BE
FBAB		<final> 06BE
FBAC		<initial> 06BE
FBAD		<medial> 06BE
FBAE		<isolated> 06D2
FBAF		<final> 06D2
FBB0		<isolated> 06D3
FBB1		<final> 06D3
FBD3		<isolated> 06AD
FBD4		<final> 06AD
FBD5		<initial> 06AD
FBD6		<medial> 06AD
FBD7		<isolated> 06C7
FBD8		<final> 06C7
FBD9		<isolated> 06C6
FBDA		<final> 06C6
FBDB		<isolated> 06C8
FBDC		<final> 06C8
FBDD		<isolated> 0677
FBDE		<isolated> 06CB
FBDF		<final> 06CB
FBE0		<isolated> 06C5
FBE1		<final> 06C5
FBE2		<isolated> 06C9
FBE3		<final> 06C9
FBE4		<isolated> 06D0
FBE5		<final> 06D0
FBE6		<initial> 06D0
FBE7		<medial> 06D0
FBE8		<initial> 0649
FBE9		<medial> 0649
FBEA		<isolated> 0626 0627
FBEB		<final> 0626 0627
FBEC		<isolated> 0626 06D5
FBED		<final> 0626 06D5
FBEE		<isolated> 0626 0648
FBEF		<final> 0626 0648
FBF0		<isolated> 0626 06C7
FBF1		<final> 0626 06C7
FBF2		<isolated> 0626 06C6
FBF3		<final> 0626 06C6
FBF4		<isolated> 0626 06C8
FBF5		<final> 0626 06C8
FBF6		<isolated> 0626 06D0
FBF7		<final> 0626 06D0
FBF8		<initial> 0626 06D0
FBF9		<isolated> 0626 0649
FBFA		<final> 0626 0649
FBFB		<initial> 0626 0649
FBFC		<isolated> 06CC
FBFD		<final> 06CC
FBFE		<initial> 06CC
FBFF		<medial> 06CC
FC00		<isolated> 0626 062C
FC01		<isolated> 0626 062D
FC02		<isolated> 0626 0645
FC03		<isolated> 0626 0649
FC04		<isolated> 0626 064A
FC05		<isolated> 0628 062C
FC06		<isolated> 0628 062D
FC07		<isolated> 0628 062E
FC08		<isolated> 0628 0645
FC09		<isolated> 0628 0649
FC0A		<isolated> 0628 064A
FC0B		<isolated> 062A 062C
FC0C		<isolated> 062A 062D
FC0D		<isolated> 062A 062E
FC0E		<isolated> 062A 0645
FC0F		<isolated> 062A 0649
FC10		<isolated> 062A 064A
FC11		<isolated> 062B 062C
FC12		<isolated> 062B 0645
FC13		<isolated> 062B 0649
FC14		<isolated> 062B 064A
FC15		<isolated> 062C 062D
FC16		<isolated> 062C 0645
FC17		<isolated> 062D 062C
FC18		<isolated> 062D 0645
FC19		<isolated> 062E 062C
FC1A		<isolated> 062E 062D
FC1B		<isolated> 062E 0645
FC1C		<isolated> 0633 062C
FC1D		<isolated> 0633 062D
FC1E		<isolated> 0633 062E
FC1F		<isolated> 0633 0645
FC20		<isolated> 0635 062D
FC21		<isolated> 0635 0645
FC22		<isolated> 0636 062C
FC23		<isolated> 0636 062D
FC24		<isolated> 0636 062E
FC25		<isolated> 0636 0645
FC26		<isolated> 0637 062D
FC27		<isolated> 0637 0645
FC28		<isolated> 0638 0645
FC29		<isolated> 0639 062C
FC2A		<isolated> 0639 0645
FC2B		<isolated> 063A 062C
FC2C		<isolated> 063A 0645
FC2D		<isolated> 0641 062C
FC2E		<isolated> 0641 062D
FC2F		<isolated> 0641 062E
FC30		<isolated> 0641 0645
FC31		<isolated> 0641 0649
FC32		<isolated> 0641 064A
FC33		<isolated> 0642 062D
FC34		<isolated> 0642 0645
FC35		<isolated> 0642 0649
FC36		<isolated> 0642 064A
FC37		<isolated> 0643 0627
FC38		<isolated> 0643 062C
FC39		<isolated> 0643 062D
FC3A		<isolated> 0643 062E
FC3B		<isolated> 0643 0644
FC3C		<isolated> 0643 0645
FC3D		<isolated> 0643 0649
FC3E		<isolated> 0643 064A
FC3F		<isolated> 0644 062C
FC40		<isolated> 0644 062D
FC41		<isolated> 0644 062E
FC42		<isolated> 0644 0645
FC43		<isolated> 0644 0649
FC44		<isolated> 0644 064A
FC45		<isolated> 0645 062C
FC46		<isolated> 0645 062D
FC47		<isolated> 0645 062E
FC48		<isolated> 0645 0645
FC49		<isolated> 0645 0649
FC4A		<isolated> 0645 064A
FC4B		<isolated> 0646 062C
FC4C		<isolated> 0646 062D
FC4D		<isolated> 0646 062E
FC4E		<isolated> 0646 0645
FC4F		<isolated> 0646 0649
FC50		<isolated> 0646 064A
FC51		<isolated> 0647 062C
FC52		<isolated> 0647 0645
FC53		<isolated> 0647 0649
FC54		<isolated> 0647 064A
FC55		<isolated> 064A 062C
FC56		<isolated> 064A 062D
FC57		<isolated> 064A 062E
FC58		<isolated> 064A 0645
FC59		<isolated> 064A 0649
FC5A		<isolated> 064A 064A
FC5B		<isolated> 0630 0670
FC5C		<isolated> 0631 0670
FC5D		<isolated> 0649 0670
FC5E		<isolated> 0020 064C 0651
FC5F		<isolated> 0020 064D 0651
FC60		<isolated> 0020 064E 0651
FC61		<isolated> 0020 064F 0651
FC62		<isolated> 0020 0650 0651
FC63		<isolated> 0020 0651 0670
FC64		<final> 0626 0631
FC65		<final> 0626 0632
FC66		<final> 0626 0645
FC67		<final> 0626 0646
FC68		<final> 0626 0649
FC69		<final> 0626 064A
FC6A		<final> 0628 0631
FC6B		<final> 0628 0632
FC6C		<final> 0628 0645
FC6D		<final> 0628 0646
FC6E		<final> 0628 0649
FC6F		<final> 0628 064A
FC70		<final> 062A 0631
FC71		<final> 062A 0632
FC72		<final> 062A 0645
FC73		<final> 062A 0646
FC74		<final> 062A 0649
FC75		<final> 062A 064A
FC76		<final> 062B 0631
FC77		<final> 062B 0632
FC78		<final> 062B 0645
FC79		<final> 062B 0646
FC7A		<final> 062B 0649
FC7B		<final> 062B 064A
FC7C		<final> 0641 0649
FC7D		<final> 0641 064A
FC7E		<final> 0642 0649
FC7F		<final> 0642 064A
FC80		<final> 0643 0627
FC81		<final> 0643 0644
FC82		<final> 0643 0645
FC83		<final> 0643 0649
FC84		<final> 0643 064A
FC85		<final> 0644 0645
FC86		<final> 0644 0649
FC87		<final> 0644 064A
FC88		<final> 0645 0627
FC89		<final> 0645 0645
FC8A		<final> 0646 0631
FC8B		<final> 0646 0632
FC8C		<final> 0646 0645
FC8D		<final> 0646 0646
FC8E		<final> 0646 0649
FC8F		<final> 0646 064A
FC90		<final> 0649 0670
FC91		<final> 064A 0631
FC92		<final> 064A 0632
FC93		<final> 064A 0645
FC94		<final> 064A 0646
FC95		<final> 064A 0649
FC96		<final> 064A 064A
FC97		<initial> 0626 062C
FC98		<initial> 0626 062D
FC99		<initial> 0626 062E
FC9A		<initial> 0626 0645
FC9B		<initial> 0626 0647
FC9C		<initial> 0628 062C
FC9D		<initial> 0628 062D
FC9E		<initial> 0628 062E
FC9F		<initial> 0628 0645
FCA0		<initial> 0628 0647
FCA1		<initial> 062A 062C
FCA2		<initial> 062A 062D
FCA3		<initial> 062A 062E
FCA4		<initial> 062A 0645
FCA5		<initial> 062A 0647
FCA6		<initial> 062B 0645
FCA7		<initial> 062C 062D
FCA8		<initial> 062C 0645
FCA9		<initial> 062D 062C
FCAA		<initial> 062D 0645
FCAB		<initial> 062E 062C
FCAC		<initial> 062E 0645
FCAD		<initial> 0633 062C
FCAE		<initial> 0633 062D
FCAF		<initial> 0633 062E
FCB0		<initial> 0633 0645
FCB1		<initial> 0635 062D
FCB2		<initial> 0635 062E
FCB3		<initial> 0635 0645
FCB4		<initial> 0636 062C
FCB5		<initial> 0636 062D
FCB6		<initial> 0636 062E
FCB7		<initial> 0636 0645
FCB8		<initial> 0637 062D
FCB9		<initial> 0638 0645
FCBA		<initial> 0639 062C
FCBB		<initial> 0639 0645
FCBC		<initial> 063A 062C
FCBD		<initial> 063A 0645
FCBE		<initial> 0641 062C
FCBF		<initial> 0641 062D
FCC0		<initial> 0641 062E
FCC1		<initial> 0641 0645
FCC2		<initial> 0642 062D
FCC3		<initial> 0642 0645
FCC4		<initial> 0643 062C
FCC5		<initial> 0643 062D
FCC6		<initial> 0643 062E
FCC7		<initial> 0643 0644
FCC8		<initial> 0643 0645
FCC9		<initial> 0644 062C
FCCA		<initial> 0644 062D
FCCB		<initial> 0644 062E
FCCC		<initial> 0644 0645
FCCD		<initial> 0644 0647
FCCE		<initial> 0645 062C
FCCF		<initial> 0645 062D
FCD0		<initial> 0645 062E
FCD1		<initial> 0645 0645
FCD2		<initial> 0646 062C
FCD3		<initial> 0646 062D
FCD4		<initial> 0646 062E
FCD5		<initial> 0646 0645
FCD6		<initial> 0646 0647
FCD7		<initial> 0647 062C
FCD8		<initial> 0647 0645
FCD9		<initial> 0647 0670
FCDA		<initial> 064A 062C
FCDB		<initial> 064A 062D
FCDC		<initial> 064A 062E
FCDD		<initial> 064A 0645
FCDE		<initial> 064A 0647
FCDF		<medial> 0626 0645
FCE0		<medial> 0626 0647
FCE1		<medial> 0628 0645
FCE2		<medial> 0628 0647
FCE3		<medial> 062A 0645
FCE4		<medial> 062A 0647
FCE5		<medial> 062B 0645
FCE6		<medial> 062B 0647
FCE7		<medial> 0633 0645
FCE8		<medial> 0633 0647
FCE9		<medial> 0634 0645
FCEA		<medial> 0634 0647
FCEB		<medial> 0643 0644
FCEC		<medial> 0643 0645
FCED		<medial> 0644 0645
FCEE		<medial> 0646 0645
FCEF		<medial> 0646 0647
FCF0		<medial> 064A 0645
FCF1		<medial> 064A 0647
FCF2		<medial> 0640 064E 0651
FCF3		<medial> 0640 064F 0651
FCF4		<medial> 0640 0650 0651
FCF5		<isolated> 0637 0649
FCF6		<isolated> 0637 064A
FCF7		<isolated> 0639 0649
FCF8		<isolated> 0639 064A
FCF9		<isolated> 063A 0649
FCFA		<isolated> 063A 064A
FCFB		<isolated> 0633 0649
FCFC		<isolated> 0633 064A
FCFD		<isolated> 0634 0649
FCFE		<isolated> 0634 064A
FCFF		<isolated> 062D 0649
FD00		<isolated> 062D 064A
FD01		<isolated> 062C 0649
FD02		<isolated> 062C 064A
FD03		<isolated> 062E 0649
FD04		<isolated> 062E 064A
FD05		<isolated> 0635 0649
FD06		<isolated> 0635 064A
FD07		<isolated> 0636 0649
FD08		<isolated> 0636 064A
FD09		<isolated> 0634 062C
FD0A		<isolated> 0634 062D
FD0B		<isolated> 0634 062E
FD0C		<isolated> 0634 0645
FD0D		<isolated> 0634 0631
FD0E		<isolated> 0633 0631
FD0F		<isolated> 0635 0631
FD10		<isolated> 0636 0631
FD11		<final> 0637 0649
FD12		<final> 0637 064A
FD13		<final> 0639 0649
FD14		<final> 0639 064A
FD15		<final> 063A 0649
FD16		<final> 063A 064A
FD17		<final> 0633 0649
FD18		<final> 0633 064A
FD19		<final> 0634 0649
FD1A		<final> 0634 064A
FD1B		<final> 062D 0649
FD1C		<final> 062D 064A
FD1D		<final> 062C 0649
FD1E		<final> 062C 064A
FD1F		<final> 062E 0649
FD20		<final> 062E 064A
FD21		<final> 0635 0649
FD22		<final> 0635 064A
FD23		<final> 0636 0649
FD24		<final> 0636 064A
FD25		<final> 0634 062C
FD26		<final> 0634 062D
FD27		<final> 0634 062E
FD28		<final> 0634 0645
FD29		<final> 0634 0631
FD2A		<final> 0633 0631
FD2B		<final> 0635 0631
FD2C		<final> 0636 0631
FD2D		<initial> 0634 062C
FD2E		<initial> 0634 062D
FD2F		<initial> 0634 062E
FD30		<initial> 0634 0645
FD31		<initial> 0633 0647
FD32		<initial> 0634 0647
FD33		<initial> 0637 0645
FD34		<medial> 0633 062C
FD35		<medial> 0633 062D
FD36		<medial> 0633 062E
FD37		<medial> 0634 062C
FD38		<medial> 0634 062D
FD39		<medial> 0634 062E
FD3A		<medial> 0637 0645
FD3B		<medial> 0638 0645
FD3C		<final> 0627 064B
FD3D		<isolated> 0627 064B
FD50		<initial> 062A 062C 0645
FD51		<final> 062A 062D 062C
FD52		<initial> 062A 062D 062C
FD53		<initial> 062A 062D 0645
FD54		<initial> 062A 062E 0645
FD55		<initial> 062A 0645 062C
FD56		<initial> 062A 0645 062D
FD57		<initial> 062A 0645 062E
FD58		<final> 062C 0645 062D
FD59		<initial> 062C 0645 062D
FD5A		<final> 062D 0645 064A
FD5B		<final> 062D 0645 0649
FD5C		<initial> 0633 062D 062C
FD5D		<initial> 0633 062C 062D
FD5E		<final> 0633 062C 0649
FD5F		<final> 0633 0645 062D
FD60		<initial> 0633 0645 062D
FD61		<initial> 0633 0645 062C
FD62		<final> 0633 0645 0645
FD63		<initial> 0633 0645 0645
FD64		<final> 0635 062D 062D
FD65		<initial> 0635 062D 062D
FD66		<final> 0635 0645 0645
FD67		<final> 0634 062D 0645
FD68		<initial> 0634 062D 0645
FD69		<final> 0634 062C 064A
FD6A		<final> 0634 0645 062E
FD6B		<initial> 0634 0645 062E
FD6C		<final> 0634 0645 0645
FD6D		<initial> 0634 0645 0645
FD6E		<final> 0636 062D 0649
FD6F		<final> 0636 062E 0645
FD70		<initial> 0636 062E 0645
FD71		<final> 0637 0645 062D
FD72		<initial> 0637 0645 062D
FD73		<initial> 0637 0645 0645
FD74		<final> 0637 0645 064A
FD75		<final> 0639 062C 0645
FD76		<final> 0639 0645 0645
FD77		<initial> 0639 0645 0645
FD78		<final> 0639 0645 0649
FD79		<final> 063A 0645 0645
FD7A		<final> 063A 0645 064A
FD7B		<final> 063A 0645 0649
FD7C		<final> 0641 062E 0645
FD7D		<initial> 0641 062E 0645
FD7E		<final> 0642 0645 062D
FD7F		<final> 0642 0645 0645
FD80		<final> 0644 062D 0645
FD81		<final> 0644 062D 064A
FD82		<final> 0644 062D 0649
FD83		<initial> 0644 062C 062C
FD84		<final> 0644 062C 062C
FD85		<final> 0644 062E 0645
FD86		<initial> 0644 062E 0645
FD87		<final> 0644 0645 062D
FD88		<initial> 0644 0645 062D
FD89		<initial> 0645 062D 062C
FD8A		<initial> 0645 062D 0645
FD8B		<final> 0645 062D 064A
FD8C		<initial> 0645 062C 062D
FD8D		<initial> 0645 062C 0645
FD8E		<initial> 0645 062E 062C
FD8F		<initial> 0645 062E 0645
FD92		<initial> 0645 062C 062E
FD93		<initial> 0647 0645 062C
FD94		<initial> 0647 0645 0645
FD95		<initial> 0646 062D 0645
FD96		<final> 0646 062D 0649
FD97		<final> 0646 062C 0645
FD98		<initial> 0646 062C 0645
FD99		<final> 0646 062C 0649
FD9A		<final> 0646 0645 064A
FD9B		<final> 0646 0645 0649
FD9C		<final> 064A 0645 0645
FD9D		<initial> 064A 0645 0645
FD9E		<final> 0628 062E 064A
FD9F		<final> 062A 062C 064A
FDA0		<final> 062A 062C 0649
FDA1		<final> 062A 062E 064A
FDA2		<final> 062A 062E 0649
FDA3		<final> 062A 0645 064A
FDA4		<final> 062A 0645 0649
FDA5		<final> 062C 0645 064A
FDA6		<final> 062C 062D 0649
FDA7		<final> 062C 0645 0649
FDA8		<final> 0633 062E 0649
FDA9		<final> 0635 062D 064A
FDAA		<final> 0634 062D 064A
FDAB		<final> 0636 062D 064A
FDAC		<final> 0644 062C 064A
FDAD		<final> 0644 0645 064A
FDAE		<final> 064A 062D 064A
FDAF		<final> 064A 062C 064A
FDB0		<final> 064A 0645 064A
FDB1		<final> 0645 0645 064A
FDB2		<final> 0642 0645 064A
FDB3		<final> 0646 062D 064A
FDB4		<initial> 0642 0645 062D
FDB5		<initial> 0644 062D 0645
FDB6		<final> 0639 0645 064A
FDB7		<final> 0643 0645 064A
FDB8		<initial> 0646 062C 062D
FDB9		<final> 0645 062E 064A
FDBA		<initial> 0644 062C 0645
FDBB		<final> 0643 0645 0645
FDBC		<final> 0644 062C 0645
FDBD		<final> 0646 062C 062D
FDBE		<final> 062C 062D 064A
FDBF		<final> 062D 062C 064A
FDC0		<final> 0645 062C 064A
FDC1		<final> 0641 0645 064A
FDC2		<final> 0628 062D 064A
FDC3		<initial> 0643 0645 0645
FDC4		<initial> 0639 062C 0645
FDC5		<initial> 0635 0645 0645
FDC6		<final> 0633 062E 064A
FDC7		<final> 0646 062C 064A
FDF0		<isolated> 0635 0644 06D2
FDF1		<isolated> 0642 0644 06D2
FDF2		<isolated> 0627 0644 0644 0647
FDF3		<isolated> 0627 0643 0628 0631
FDF4		<isolated> 0645 062D 0645 062F
FDF5		<isolated> 0635 0644 0639 0645
FDF6		<isolated> 0631 0633 0648 0644
FDF7		<isolated> 0639 0644 064A 0647
FDF8		<isolated> 0648 0633 0644 0645
FDF9		<isolated> 0635 0644 0649
FDFA		<isolated> 0635 0644 0649 0020 0627 0644 0644 0647 0020 0639 0644 064A 0647 0020 0648 0633 0644 0645
FDFB		<isolated> 062C 0644 0020 062C 0644 0627 0644 0647
FDFC		<isolated> 0631 06CC 0627 0644
FE10		<vertical> 002C
FE11		<vertical> 3001
FE12		<vertical> 3002
FE13		<vertical> 003A
FE14		<vertical> 003B
FE15		<vertical> 0021
FE16		<vertical> 003F
FE17		<vertical> 3016
FE18		<vertical> 3017
FE19		<vertical> 2026
FE30		<vertical> 2025
FE31		<vertical> 2014
FE32		<vertical> 2013
FE33	FE34	<vertical> 005F
FE35		<vertical> 0028
FE36		<vertical> 0029
FE37		<vertical> 007B
FE38		<vertical> 007D
FE39		<vertical> 3014
FE3A		<vertical> 3015
FE3B		<vertical> 3010
FE3C		<vertical> 3011
FE3D		<vertical> 300A
FE3E		<vertical> 300B
FE3F		<vertical> 3008
FE40		<vertical> 3009
FE41		<vertical> 300C
FE42		<vertical> 300D
FE43		<vertical> 300E
FE44		<vertical> 300F
FE47		<vertical> 005B
FE48		<vertical> 005D
FE49	FE4C	<compat> 203E
FE4D	FE4F	<compat> 005F
FE50		<small> 002C
FE51		<small> 3001
FE52		<small> 002E
FE54		<small> 003B
FE55		<small> 003A
FE56		<small> 003F
FE57		<small> 0021
FE58		<small> 2014
FE59		<small> 0028
FE5A		<small> 0029
FE5B		<small> 007B
FE5C		<small> 007D
FE5D		<small> 3014
FE5E		<small> 3015
FE5F		<small> 0023
FE60		<small> 0026
FE61		<small> 002A
FE62		<small> 002B
FE63		<small> 002D
FE64		<small> 003C
FE65		<small> 003E
FE66		<small> 003D
FE68		<small> 005C
FE69		<small> 0024
FE6A		<small> 0025
FE6B		<small> 0040
FE70		<isolated> 0020 064B
FE71		<medial> 0640 064B
FE72		<isolated> 0020 064C
FE74		<isolated> 0020 064D
FE76		<isolated> 0020 064E
FE77		<medial> 0640 064E
FE78		<isolated> 0020 064F
FE79		<medial> 0640 064F
FE7A		<isolated> 0020 0650
FE7B		<medial> 0640 0650
FE7C		<isolated> 0020 0651
FE7D		<medial> 0640 0651
FE7E		<isolated> 0020 0652
FE7F		<medial> 0640 0652
FE80		<isolated> 0621
FE81		<isolated> 0622
FE82		<final> 0622
FE83		<isolated> 0623
FE84		<final> 0623
FE85		<isolated> 0624
FE86		<final> 0624
FE87		<isolated> 0625
FE88		<final> 0625
FE89		<isolated> 0626
FE8A		<final> 0626
FE8B		<initial> 0626
FE8C		<medial> 0626
FE8D		<isolated> 0627
FE8E		<final> 0627
FE8F		<isolated> 0628
FE90		<final> 0628
FE91		<initial> 0628
FE92		<medial> 0628
FE93		<isolated> 0629
FE94		<final> 0629
FE95		<isolated> 062A
FE96		<final> 062A
FE97		<initial> 062A
FE98		<medial> 062A
FE99		<isolated> 062B
FE9A		<final> 062B
FE9B		<initial> 062B
FE9C		<medial> 062B
FE9D		<isolated> 062C
FE9E		<final> 062C
FE9F		<initial> 062C
FEA0		<medial> 062C
FEA1		<isolated> 062D
FEA2		<final> 062D
FEA3		<initial> 062D
FEA4		<medial> 062D
FEA5		<isolated> 062E
FEA6		<final> 062E
FEA7		<initial> 062E
FEA8		<medial> 062E
FEA9		<isolated> 062F
FEAA		<final> 062F
FEAB		<isolated> 0630
FEAC		<final> 0630
FEAD		<isolated> 0631
FEAE		<final> 0631
FEAF		<isolated> 0632
FEB0		<final> 0632
FEB1		<isolated> 0633
FEB2		<final> 0633
FEB3		<initial> 0633
FEB4		<medial> 0633
FEB5		<isolated> 0634
FEB6		<final> 0634
FEB7		<initial> 0634
FEB8		<medial> 0634
FEB9		<isolated> 0635
FEBA		<final> 0635
FEBB		<initial> 0635
FEBC		<medial> 0635
FEBD		<isolated> 0636
FEBE		<final> 0636
FEBF		<initial> 0636
FEC0		<medial> 0636
FEC1		<isolated> 0637
FEC2		<final> 0637
FEC3		<initial> 0637
FEC4		<medial> 0637
FEC5		<isolated> 0638
FEC6		<final> 0638
FEC7		<initial> 0638
FEC8		<medial> 0638
FEC9		<isolated> 0639
FECA		<final> 0639
FECB		<initial> 0639
FECC		<medial> 0639
FECD		<isolated> 063A
FECE		<final> 063A
FECF		<initial> 063A
FED0		<medial> 063A
FED1		<isolated> 0641
FED2		<final> 0641
FED3		<initial> 0641
FED4		<medial> 0641
FED5		<isolated> 0642
FED6		<final> 0642
FED7		<initial> 0642
FED8		<medial> 0642
FED9		<isolated> 0643
FEDA		<final> 0643
FEDB		<initial> 0643
FEDC		<medial> 0643
FEDD		<isolated> 0644
FEDE		<final> 0644
FEDF		<initial> 0644
FEE0		<medial> 0644
FEE1		<isolated> 0645
FEE2		<final> 0645
FEE3		<initial> 0645
FEE4		<medial> 0645
FEE5		<isolated> 0646
FEE6		<final> 0646
FEE7		<initial> 0646
FEE8		<medial> 0646
FEE9		<isolated> 0647
FEEA		<final> 0647
FEEB		<initial> 0647
FEEC		<medial> 0647
FEED		<isolated> 0648
FEEE		<final> 0648
FEEF		<isolated> 0649
FEF0		<final> 0649
FEF1		<isolated> 064A
FEF2		<final> 064A
FEF3		<initial> 064A
FEF4		<medial> 064A
FEF5		<isolated> 0644 0622
FEF6		<final> 0644 0622
FEF7		<isolated> 0644 0623
FEF8		<final> 0644 0623
FEF9		<isolated> 0644 0625
FEFA		<final> 0644 0625
FEFB		<isolated> 0644 0627
FEFC		<final> 0644 0627
FF01		<wide> 0021
FF02		<wide> 0022
FF03		<wide> 0023
FF04		<wide> 0024
FF05		<wide> 0025
FF06		<wide> 0026
FF07		<wide> 0027
FF08		<wide> 0028
FF09		<wide> 0029
FF0A		<wide> 002A
FF0B		<wide> 002B
FF0C		<wide> 002C
FF0D		<wide> 002D
FF0E		<wide> 002E
FF0F		<wide> 002F
FF10		<wide> 0030
FF11		<wide> 0031
FF12		<wide> 0032
FF13		<wide> 0033
FF14		<wide> 0034
FF15		<wide> 0035
FF16		<wide> 0036
FF17		<wide> 0037
FF18		<wide> 0038
FF19		<wide> 0039
FF1A		<wide> 003A
FF1B		<wide> 003B
FF1C		<wide> 003C
FF1D		<wide> 003D
FF1E		<wide> 003E
FF1F		<wide> 003F
FF20		<wide> 0040
FF21		<wide> 0041
FF22		<wide> 0042
FF23		<wide> 0043
FF24		<wide> 0044
FF25		<wide> 0045
FF26		<wide> 0046
FF27		<wide> 0047
FF28		<wide> 0048
FF29		<wide> 0049
FF2A		<wide> 004A
FF2B		<wide> 004B
FF2C		<wide> 004C
FF2D		<wide> 004D
FF2E		<wide> 004E
FF2F		<wide> 004F
FF30		<wide> 0050
FF31		<wide> 0051
FF32		<wide> 0052
FF33		<wide> 0053
FF34		<wide> 0054
FF35		<wide> 0055
FF36		<wide> 0056
FF37		<wide> 0057
FF38		<wide> 0058
FF39		<wide> 0059
FF3A		<wide> 005A
FF3B		<wide> 005B
FF3C		<wide> 005C
FF3D		<wide> 005D
FF3E		<wide> 005E
FF3F		<wide> 005F
FF40		<wide> 0060
FF41		<wide> 0061
FF42		<wide> 0062
FF43		<wide> 0063
FF44		<wide> 0064
FF45		<wide> 0065
FF46		<wide> 0066
FF47		<wide> 0067
FF48		<wide> 0068
FF49		<wide> 0069
FF4A		<wide> 006A
FF4B		<wide> 006B
FF4C		<wide> 006C
FF4D		<wide> 006D
FF4E		<wide> 006E
FF4F		<wide> 006F
FF50		<wide> 0070
FF51		<wide> 0071
FF52		<wide> 0072
FF53		<wide> 0073
FF54		<wide> 0074
FF55		<wide> 0075
FF56		<wide> 0076
FF57		<wide> 0077
FF58		<wide> 0078
FF59		<wide> 0079
FF5A		<wide> 007A
FF5B		<wide> 007B
FF5C		<wide> 007C
FF5D		<wide> 007D
FF5E		<wide> 007E
FF5F		<wide> 2985
FF60		<wide> 2986
FF61		<narrow> 3002
FF62		<narrow> 300C
FF63		<narrow> 300D
FF64		<narrow> 3001
FF65		<narrow> 30FB
FF66		<narrow> 30F2
FF67		<narrow> 30A1
FF68		<narrow> 30A3
FF69		<narrow> 30A5
FF6A		<narrow> 30A7
FF6B		<narrow> 30A9
FF6C		<narrow> 30E3
FF6D		<narrow> 30E5
FF6E		<narrow> 30E7
FF6F		<narrow> 30C3
FF70		<narrow> 30FC
FF71		<narrow> 30A2
FF72		<narrow> 30A4
FF73		<narrow> 30A6
FF74		<narrow> 30A8
FF75		<narrow> 30AA
FF76		<narrow> 30AB
FF77		<narrow> 30AD
FF78		<narrow> 30AF
FF79		<narrow> 30B1
FF7A		<narrow> 30B3
FF7B		<narrow> 30B5
FF7C		<narrow> 30B7
FF7D		<narrow> 30B9
FF7E		<narrow> 30BB
FF7F		<narrow> 30BD
FF80		<narrow> 30BF
FF81		<narrow> 30C1
FF82		<narrow> 30C4
FF83		<narrow> 30C6
FF84		<narrow> 30C8
FF85		<narrow> 30CA
FF86		<narrow> 30CB
FF87		<narrow> 30CC
FF88		<narrow> 30CD
FF89		<narrow> 30CE
FF8A		<narrow> 30CF
FF8B		<narrow> 30D2
FF8C		<narrow> 30D5
FF8D		<narrow> 30D8
FF8E		<narrow> 30DB
FF8F		<narrow> 30DE
FF90		<narrow> 30DF
FF91		<narrow> 30E0
FF92		<narrow> 30E1
FF93		<narrow> 30E2
FF94		<narrow> 30E4
FF95		<narrow> 30E6
FF96		<narrow> 30E8
FF97		<narrow> 30E9
FF98		<narrow> 30EA
FF99		<narrow> 30EB
FF9A		<narrow> 30EC
FF9B		<narrow> 30ED
FF9C		<narrow> 30EF
FF9D		<narrow> 30F3
FF9E		<narrow> 3099
FF9F		<narrow> 309A
FFA0		<narrow> 3164
FFA1		<narrow> 3131
FFA2		<narrow> 3132
FFA3		<narrow> 3133
FFA4		<narrow> 3134
FFA5		<narrow> 3135
FFA6		<narrow> 3136
FFA7		<narrow> 3137
FFA8		<narrow> 3138
FFA9		<narrow> 3139
FFAA		<narrow> 313A
FFAB		<narrow> 313B
FFAC		<narrow> 313C
FFAD		<narrow> 313D
FFAE		<narrow> 313E
FFAF		<narrow> 313F
FFB0		<narrow> 3140
FFB1		<narrow> 3141
FFB2		<narrow> 3142
FFB3		<narrow> 3143
FFB4		<narrow> 3144
FFB5		<narrow> 3145
FFB6		<narrow> 3146
FFB7		<narrow> 3147
FFB8		<narrow> 3148
FFB9		<narrow> 3149
FFBA		<narrow> 314A
FFBB		<narrow> 314B
FFBC		<narrow> 314C
FFBD		<narrow> 314D
FFBE		<narrow> 314E
FFC2		<narrow> 314F
FFC3		<narrow> 3150
FFC4		<narrow> 3151
FFC5		<narrow> 3152
FFC6		<narrow> 3153
FFC7		<narrow> 3154
FFCA		<narrow> 3155
FFCB		<narrow> 3156
FFCC		<narrow> 3157
FFCD		<narrow> 3158
FFCE		<narrow> 3159
FFCF		<narrow> 315A
FFD2		<narrow> 315B
FFD3		<narrow> 315C
FFD4		<narrow> 315D
FFD5		<narrow> 315E
FFD6		<narrow> 315F
FFD7		<narrow> 3160
FFDA		<narrow> 3161
FFDB		<narrow> 3162
FFDC		<narrow> 3163
FFE0		<wide> 00A2
FFE1		<wide> 00A3
FFE2		<wide> 00AC
FFE3		<wide> 00AF
FFE4		<wide> 00A6
FFE5		<wide> 00A5
FFE6		<wide> 20A9
FFE8		<narrow> 2502
FFE9		<narrow> 2190
FFEA		<narrow> 2191
FFEB		<narrow> 2192
FFEC		<narrow> 2193
FFED		<narrow> 25A0
FFEE		<narrow> 25CB
1109A		11099 110BA
1109C		1109B 110BA
110AB		110A5 110BA
1112E		11131 11127
1112F		11132 11127
1134B		11347 1133E
1134C		11347 11357
114BB		114B9 114BA
114BC		114B9 114B0
114BE		114B9 114BD
115BA		115B8 115AF
115BB		115B9 115AF
1D15E		1D157 1D165
1D15F		1D158 1D165
1D160		1D15F 1D16E
1D161		1D15F 1D16F
1D162		1D15F 1D170
1D163		1D15F 1D171
1D164		1D15F 1D172
1D1BB		1D1B9 1D165
1D1BC		1D1BA 1D165
1D1BD		1D1BB 1D16E
1D1BE		1D1BC 1D16E
1D1BF		1D1BB 1D16F
1D1C0		1D1BC 1D16F
1D400		<font> 0041
1D401		<font> 0042
1D402		<font> 0043
1D403		<font> 0044
1D404		<font> 0045
1D405		<font> 0046
1D406		<font> 0047
1D407		<font> 0048
1D408		<font> 0049
1D409		<font> 004A
1D40A		<font> 004B
1D40B		<font> 004C
1D40C		<font> 004D
1D40D		<font> 004E
1D40E		<font> 004F
1D40F		<font> 0050
1D410		<font> 0051
1D411		<font> 0052
1D412		<font> 0053
1D413		<font> 0054
1D414		<font> 0055
1D415		<font> 0056
1D416		<font> 0057
1D417		<font> 0058
1D418		<font> 0059
1D419		<font> 005A
1D41A		<font> 0061
1D41B		<font> 0062
1D41C		<font> 0063
1D41D		<font> 0064
1D41E		<font> 0065
1D41F		<font> 0066
1D420		<font> 0067
1D421		<font> 0068
1D422		<font> 0069
1D423		<font> 006A
1D424		<font> 006B
1D425		<font> 006C
1D426		<font> 006D
1D427		<font> 006E
1D428		<font> 006F
1D429		<font> 0070
1D42A		<font> 0071
1D42B		<font> 0072
1D42C		<font> 0073
1D42D		<font> 0074
1D42E		<font> 0075
1D42F		<font> 0076
1D430		<font> 0077
1D431		<font> 0078
1D432		<font> 0079
1D433		<font> 007A
1D434		<font> 0041
1D435		<font> 0042
1D436		<font> 0043
1D437		<font> 0044
1D438		<font> 0045
1D439		<font> 0046
1D43A		<font> 0047
1D43B		<font> 0048
1D43C		<font> 0049
1D43D		<font> 004A
1D43E		<font> 004B
1D43F		<font> 004C
1D440		<font> 004D
1D441		<font> 004E
1D442		<font> 004F
1D443		<font> 0050
1D444		<font> 0051
1D445		<font> 0052
1D446		<font> 0053
1D447		<font> 0054
1D448		<font> 0055
1D449		<font> 0056
1D44A		<font> 0057
1D44B		<font> 0058
1D44C		<font> 0059
1D44D		<font> 005A
1D44E		<font> 0061
1D44F		<font> 0062
1D450		<font> 0063
1D451		<font> 0064
1D452		<font> 0065
1D453		<font> 0066
1D454		<font> 0067
1D456		<font> 0069
1D457		<font> 006A
1D458		<font> 006B
1D459		<font> 006C
1D45A		<font> 006D
1D45B		<font> 006E
1D45C		<font> 006F
1D45D		<font> 0070
1D45E		<font> 0071
1D45F		<font> 0072
1D460		<font> 0073
1D461		<font> 0074
1D462		<font> 0075
1D463		<font> 0076
1D464		<font> 0077
1D465		<font> 0078
1D466		<font> 0079
1D467		<font> 007A
1D468		<font> 0041
1D469		<font> 0042
1D46A		<font> 0043
1D46B		<font> 0044
1D46C		<font> 0045
1D46D		<font> 0046
1D46E		<font> 0047
1D46F		<font> 0048
1D470		<font> 0049
1D471		<font> 004A
1D472		<font> 004B
1D473		<font> 004C
1D474		<font> 004D
1D475		<font> 004E
1D476		<font> 004F
1D477		<font> 0050
1D478		<font> 0051
1D479		<font> 0052
1D47A		<font> 0053
1D47B		<font> 0054
1D47C		<font> 0055
1D47D		<font> 0056
1D47E		<font> 0057
1D47F		<font> 0058
1D480		<font> 0059
1D481		<font> 005A
1D482		<font> 0061
1D483		<font> 0062
1D484		<font> 0063
1D485		<font> 0064
1D486		<font> 0065
1D487		<font> 0066
1D488		<font> 0067
1D489		<font> 0068
1D48A		<font> 0069
1D48B		<font> 006A
1D48C		<font> 006B
1D48D		<font> 006C
1D48E		<font> 006D
1D48F		<font> 006E
1D490		<font> 006F
1D491		<font> 0070
1D492		<font> 0071
1D493		<font> 0072
1D494		<font> 0073
1D495		<font> 0074
1D496		<font> 0075
1D497		<font> 0076
1D498		<font> 0077
1D499		<font> 0078
1D49A		<font> 0079
1D49B		<font> 007A
1D49C		<font> 0041
1D49E		<font> 0043
1D49F		<font> 0044
1D4A2		<font> 0047
1D4A5		<font> 004A
1D4A6		<font> 004B
1D4A9		<font> 004E
1D4AA		<font> 004F
1D4AB		<font> 0050
1D4AC		<font> 0051
1D4AE		<font> 0053
1D4AF		<font> 0054
1D4B0		<font> 0055
1D4B1		<font> 0056
1D4B2		<font> 0057
1D4B3		<font> 0058
1D4B4		<font> 0059
1D4B5		<font> 005A
1D4B6		<font> 0061
1D4B7		<font> 0062
1D4B8		<font> 0063
1D4B9		<font> 0064
1D4BB		<font> 0066
1D4BD		<font> 0068
1D4BE		<font> 0069
1D4BF		<font> 006A
1D4C0		<font> 006B
1D4C1		<font> 006C
1D4C2		<font> 006D
1D4C3		<font> 006E
1D4C5		<font> 0070
1D4C6		<font> 0071
1D4C7		<font> 0072
1D4C8		<font> 0073
1D4C9		<font> 0074
1D4CA		<font> 0075
1D4CB		<font> 0076
1D4CC		<font> 0077
1D4CD		<font> 0078
1D4CE		<font> 0079
1D4CF		<font> 007A
1D4D0		<font> 0041
1D4D1		<font> 0042
1D4D2		<font> 0043
1D4D3		<font> 0044
1D4D4		<font> 0045
1D4D5		<font> 0046
1D4D6		<font> 0047
1D4D7		<font> 0048
1D4D8		<font> 0049
1D4D9		<font> 004A
1D4DA		<font> 004B
1D4DB		<font> 004C
1D4DC		<font> 004D
1D4DD		<font> 004E
1D4DE		<font> 004F
1D4DF		<font> 0050
1D4E0		<font> 0051
1D4E1		<font> 0052
1D4E2		<font> 0053
1D4E3		<font> 0054
1D4E4		<font> 0055
1D4E5		<font> 0056
1D4E6		<font> 0057
1D4E7		<font> 0058
1D4E8		<font> 0059
1D4E9		<font> 005A
1D4EA		<font> 0061
1D4EB		<font> 0062
1D4EC		<font> 0063
1D4ED		<font> 0064
1D4EE		<font> 0065
1D4EF		<font> 0066
1D4F0		<font> 0067
1D4F1		<font> 0068
1D4F2		<font> 0069
1D4F3		<font> 006A
1D4F4		<font> 006B
1D4F5		<font> 006C
1D4F6		<font> 006D
1D4F7		<font> 006E
1D4F8		<font> 006F
1D4F9		<font> 0070
1D4FA		<font> 0071
1D4FB		<font> 0072
1D4FC		<font> 0073
1D4FD		<font> 0074
1D4FE		<font> 0075
1D4FF		<font> 0076
1D500		<font> 0077
1D501		<font> 0078
1D502		<font> 0079
1D503		<font> 007A
1D504		<font> 0041
1D505		<font> 0042
1D507		<font> 0044
1D508		<font> 0045
1D509		<font> 0046
1D50A		<font> 0047
1D50D		<font> 004A
1D50E		<font> 004B
1D50F		<font> 004C
1D510		<font> 004D
1D511		<font> 004E
1D512		<font> 004F
1D513		<font> 0050
1D514		<font> 0051
1D516		<font> 0053
1D517		<font> 0054
1D518		<font> 0055
1D519		<font> 0056
1D51A		<font> 0057
1D51B		<font> 0058
1D51C		<font> 0059
1D51E		<font> 0061
1D51F		<font> 0062
1D520		<font> 0063
1D521		<font> 0064
1D522		<font> 0065
1D523		<font> 0066
1D524		<font> 0067
1D525		<font> 0068
1D526		<font> 0069
1D527		<font> 006A
1D528		<font> 006B
1D529		<font> 006C
1D52A		<font> 006D
1D52B		<font> 006E
1D52C		<font> 006F
1D52D		<font> 0070
1D52E		<font> 0071
1D52F		<font> 0072
1D530		<font> 0073
1D531		<font> 0074
1D532		<font> 0075
1D533		<font> 0076
1D534		<font> 0077
1D535		<font> 0078
1D536		<font> 0079
1D537		<font> 007A
1D538		<font> 0041
1D539		<font> 0042
1D53B		<font> 0044
1D53C		<font> 0045
1D53D		<font> 0046
1D53E		<font> 0047
1D540		<font> 0049
1D541		<font> 004A
1D542		<font> 004B
1D543		<font> 004C
1D544		<font> 004D
1D546		<font> 004F
1D54A		<font> 0053
1D54B		<font> 0054
1D54C		<font> 0055
1D54D		<font> 0056
1D54E		<font> 0057
1D54F		<font> 0058
1D550		<font> 0059
1D552		<font> 0061
1D553		<font> 0062
1D554		<font> 0063
1D555		<font> 0064
1D556		<font> 0065
1D557		<font> 0066
1D558		<font> 0067
1D559		<font> 0068
1D55A		<font> 0069
1D55B		<font> 006A
1D55C		<font> 006B
1D55D		<font> 006C
1D55E		<font> 006D
1D55F		<font> 006E
1D560		<font> 006F
1D561		<font> 0070
1D562		<font> 0071
1D563		<font> 0072
1D564		<font> 0073
1D565		<font> 0074
1D566		<font> 0075
1D567		<font> 0076
1D568		<font> 0077
1D569		<font> 0078
1D56A		<font> 0079
1D56B		<font> 007A
1D56C		<font> 0041
1D56D		<font> 0042
1D56E		<font> 0043
1D56F		<font> 0044
1D570		<font> 0045
1D571		<font> 0046
1D572		<font> 0047
1D573		<font> 0048
1D574		<font> 0049
1D575		<font> 004A
1D576		<font> 004B
1D577		<font> 004C
1D578		<font> 004D
1D579		<font> 004E
1D57A		<font> 004F
1D57B		<font> 0050
1D57C		<font> 0051
1D57D		<font> 0052
1D57E		<font> 0053
1D57F		<font> 0054
1D580		<font> 0055
1D581		<font> 0056
1D582		<font> 0057
1D583		<font> 0058
1D584		<font> 0059
1D585		<font> 005A
1D586		<font> 0061
1D587		<font> 0062
1D588		<font> 0063
1D589		<font> 0064
1D58A		<font> 0065
1D58B		<font> 0066
1D58C		<font> 0067
1D58D		<font> 0068
1D58E		<font> 0069
1D58F		<font> 006A
1D590		<font> 006B
1D591		<font> 006C
1D592		<font> 006D
1D593		<font> 006E
1D594		<font> 006F
1D595		<font> 0070
1D596		<font> 0071
1D597		<font> 0072
1D598		<font> 0073
1D599		<font> 0074
1D59A		<font> 0075
1D59B		<font> 0076
1D59C		<font> 0077
1D59D		<font> 0078
1D59E		<font> 0079
1D59F		<font> 007A
1D5A0		<font> 0041
1D5A1		<font> 0042
1D5A2		<font> 0043
1D5A3		<font> 0044
1D5A4		<font> 0045
1D5A5		<font> 0046
1D5A6		<font> 0047
1D5A7		<font> 0048
1D5A8		<font> 0049
1D5A9		<font> 004A
1D5AA		<font> 004B
1D5AB		<font> 004C
1D5AC		<font> 004D
1D5AD		<font> 004E
1D5AE		<font> 004F
1D5AF		<font> 0050
1D5B0		<font> 0051
1D5B1		<font> 0052
1D5B2		<font> 0053
1D5B3		<font> 0054
1D5B4		<font> 0055
1D5B5		<font> 0056
1D5B6		<font> 0057
1D5B7		<font> 0058
1D5B8		<font> 0059
1D5B9		<font> 005A
1D5BA		<font> 0061
1D5BB		<font> 0062
1D5BC		<font> 0063
1D5BD		<font> 0064
1D5BE		<font> 0065
1D5BF		<font> 0066
1D5C0		<font> 0067
1D5C1		<font> 0068
1D5C2		<font> 0069
1D5C3		<font> 006A
1D5C4		<font> 006B
1D5C5		<font> 006C
1D5C6		<font> 006D
1D5C7		<font> 006E
1D5C8		<font> 006F
1D5C9		<font> 0070
1D5CA		<font> 0071
1D5CB		<font> 0072
1D5CC		<font> 0073
1D5CD		<font> 0074
1D5CE		<font> 0075
1D5CF		<font> 0076
1D5D0		<font> 0077
1D5D1		<font> 0078
1D5D2		<font> 0079
1D5D3		<font> 007A
1D5D4		<font> 0041
1D5D5		<font> 0042
1D5D6		<font> 0043
1D5D7		<font> 0044
1D5D8		<font> 0045
1D5D9		<font> 0046
1D5DA		<font> 0047
1D5DB		<font> 0048
1D5DC		<font> 0049
1D5DD		<font> 004A
1D5DE		<font> 004B
1D5DF		<font> 004C
1D5E0		<font> 004D
1D5E1		<font> 004E
1D5E2		<font> 004F
1D5E3		<font> 0050
1D5E4		<font> 0051
1D5E5		<font> 0052
1D5E6		<font> 0053
1D5E7		<font> 0054
1D5E8		<font> 0055
1D5E9		<font> 0056
1D5EA		<font> 0057
1D5EB		<font> 0058
1D5EC		<font> 0059
1D5ED		<font> 005A
1D5EE		<font> 0061
1D5EF		<font> 0062
1D5F0		<font> 0063
1D5F1		<font> 0064
1D5F2		<font> 0065
1D5F3		<font> 0066
1D5F4		<font> 0067
1D5F5		<font> 0068
1D5F6		<font> 0069
1D5F7		<font> 006A
1D5F8		<font> 006B
1D5F9		<font> 006C
1D5FA		<font> 006D
1D5FB		<font> 006E
1D5FC		<font> 006F
1D5FD		<font> 0070
1D5FE		<font> 0071
1D5FF		<font> 0072
1D600		<font> 0073
1D601		<font> 0074
1D602		<font> 0075
1D603		<font> 0076
1D604		<font> 0077
1D605		<font> 0078
1D606		<font> 0079
1D607		<font> 007A
1D608		<font> 0041
1D609		<font> 0042
1D60A		<font> 0043
1D60B		<font> 0044
1D60C		<font> 0045
1D60D		<font> 0046
1D60E		<font> 0047
1D60F		<font> 0048
1D610		<font> 0049
1D611		<font> 004A
1D612		<font> 004B
1D613		<font> 004C
1D614		<font> 004D
1D615		<font> 004E
1D616		<font> 004F
1D617		<font> 0050
1D618		<font> 0051
1D619		<font> 0052
1D61A		<font> 0053
1D61B		<font> 0054
1D61C		<font> 0055
1D61D		<font> 0056
1D61E		<font> 0057
1D61F		<font> 0058
1D620		<font> 0059
1D621		<font> 005A
1D622		<font> 0061
1D623		<font> 0062
1D624		<font> 0063
1D625		<font> 0064
1D626		<font> 0065
1D627		<font> 0066
1D628		<font> 0067
1D629		<font> 0068
1D62A		<font> 0069
1D62B		<font> 006A
1D62C		<font> 006B
1D62D		<font> 006C
1D62E		<font> 006D
1D62F		<font> 006E
1D630		<font> 006F
1D631		<font> 0070
1D632		<font> 0071
1D633		<font> 0072
1D634		<font> 0073
1D635		<font> 0074
1D636		<font> 0075
1D637		<font> 0076
1D638		<font> 0077
1D639		<font> 0078
1D63A		<font> 0079
1D63B		<font> 007A
1D63C		<font> 0041
1D63D		<font> 0042
1D63E		<font> 0043
1D63F		<font> 0044
1D640		<font> 0045
1D641		<font> 0046
1D642		<font> 0047
1D643		<font> 0048
1D644		<font> 0049
1D645		<font> 004A
1D646		<font> 004B
1D647		<font> 004C
1D648		<font> 004D
1D649		<font> 004E
1D64A		<font> 004F
1D64B		<font> 0050
1D64C		<font> 0051
1D64D		<font> 0052
1D64E		<font> 0053
1D64F		<font> 0054
1D650		<font> 0055
1D651		<font> 0056
1D652		<font> 0057
1D653		<font> 0058
1D654		<font> 0059
1D655		<font> 005A
1D656		<font> 0061
1D657		<font> 0062
1D658		<font> 0063
1D659		<font> 0064
1D65A		<font> 0065
1D65B		<font> 0066
1D65C		<font> 0067
1D65D		<font> 0068
1D65E		<font> 0069
1D65F		<font> 006A
1D660		<font> 006B
1D661		<font> 006C
1D662		<font> 006D
1D663		<font> 006E
1D664		<font> 006F
1D665		<font> 0070
1D666		<font> 0071
1D667		<font> 0072
1D668		<font> 0073
1D669		<font> 0074
1D66A		<font> 0075
1D66B		<font> 0076
1D66C		<font> 0077
1D66D		<font> 0078
1D66E		<font> 0079
1D66F		<font> 007A
1D670		<font> 0041
1D671		<font> 0042
1D672		<font> 0043
1D673		<font> 0044
1D674		<font> 0045
1D675		<font> 0046
1D676		<font> 0047
1D677		<font> 0048
1D678		<font> 0049
1D679		<font> 004A
1D67A		<font> 004B
1D67B		<font> 004C
1D67C		<font> 004D
1D67D		<font> 004E
1D67E		<font> 004F
1D67F		<font> 0050
1D680		<font> 0051
1D681		<font> 0052
1D682		<font> 0053
1D683		<font> 0054
1D684		<font> 0055
1D685		<font> 0056
1D686		<font> 0057
1D687		<font> 0058
1D688		<font> 0059
1D689		<font> 005A
1D68A		<font> 0061
1D68B		<font> 0062
1D68C		<font> 0063
1D68D		<font> 0064
1D68E		<font> 0065
1D68F		<font> 0066
1D690		<font> 0067
1D691		<font> 0068
1D692		<font> 0069
1D693		<font> 006A
1D694		<font> 006B
1D695		<font> 006C
1D696		<font> 006D
1D697		<font> 006E
1D698		<font> 006F
1D699		<font> 0070
1D69A		<font> 0071
1D69B		<font> 0072
1D69C		<font> 0073
1D69D		<font> 0074
1D69E		<font> 0075
1D69F		<font> 0076
1D6A0		<font> 0077
1D6A1		<font> 0078
1D6A2		<font> 0079
1D6A3		<font> 007A
1D6A4		<font> 0131
1D6A5		<font> 0237
1D6A8		<font> 0391
1D6A9		<font> 0392
1D6AA		<font> 0393
1D6AB		<font> 0394
1D6AC		<font> 0395
1D6AD		<font> 0396
1D6AE		<font> 0397
1D6AF		<font> 0398
1D6B0		<font> 0399
1D6B1		<font> 039A
1D6B2		<font> 039B
1D6B3		<font> 039C
1D6B4		<font> 039D
1D6B5		<font> 039E
1D6B6		<font> 039F
1D6B7		<font> 03A0
1D6B8		<font> 03A1
1D6B9		<font> 03F4
1D6BA		<font> 03A3
1D6BB		<font> 03A4
1D6BC		<font> 03A5
1D6BD		<font> 03A6
1D6BE		<font> 03A7
1D6BF		<font> 03A8
1D6C0		<font> 03A9
1D6C1		<font> 2207
1D6C2		<font> 03B1
1D6C3		<font> 03B2
1D6C4		<font> 03B3
1D6C5		<font> 03B4
1D6C6		<font> 03B5
1D6C7		<font> 03B6
1D6C8		<font> 03B7
1D6C9		<font> 03B8
1D6CA		<font> 03B9
1D6CB		<font> 03BA
1D6CC		<font> 03BB
1D6CD		<font> 03BC
1D6CE		<font> 03BD
1D6CF		<font> 03BE
1D6D0		<font> 03BF
1D6D1		<font> 03C0
1D6D2		<font> 03C1
1D6D3		<font> 03C2
1D6D4		<font> 03C3
1D6D5		<font> 03C4
1D6D6		<font> 03C5
1D6D7		<font> 03C6
1D6D8		<font> 03C7
1D6D9		<font> 03C8
1D6DA		<font> 03C9
1D6DB		<font> 2202
1D6DC		<font> 03F5
1D6DD		<font> 03D1
1D6DE		<font> 03F0
1D6DF		<font> 03D5
1D6E0		<font> 03F1
1D6E1		<font> 03D6
1D6E2		<font> 0391
1D6E3		<font> 0392
1D6E4		<font> 0393
1D6E5		<font> 0394
1D6E6		<font> 0395
1D6E7		<font> 0396
1D6E8		<font> 0397
1D6E9		<font> 0398
1D6EA		<font> 0399
1D6EB		<font> 039A
1D6EC		<font> 039B
1D6ED		<font> 039C
1D6EE		<font> 039D
1D6EF		<font> 039E
1D6F0		<font> 039F
1D6F1		<font> 03A0
1D6F2		<font> 03A1
1D6F3		<font> 03F4
1D6F4		<font> 03A3
1D6F5		<font> 03A4
1D6F6		<font> 03A5
1D6F7		<font> 03A6
1D6F8		<font> 03A7
1D6F9		<font> 03A8
1D6FA		<font> 03A9
1D6FB		<font> 2207
1D6FC		<font> 03B1
1D6FD		<font> 03B2
1D6FE		<font> 03B3
1D6FF		<font> 03B4
1D700		<font> 03B5
1D701		<font> 03B6
1D702		<font> 03B7
1D703		<font> 03B8
1D704		<font> 03B9
1D705		<font> 03BA
1D706		<font> 03BB
1D707		<font> 03BC
1D708		<font> 03BD
1D709		<font> 03BE
1D70A		<font> 03BF
1D70B		<font> 03C0
1D70C		<font> 03C1
1D70D		<font> 03C2
1D70E		<font> 03C3
1D70F		<font> 03C4
1D710		<font> 03C5
1D711		<font> 03C6
1D712		<font> 03C7
1D713		<font> 03C8
1D714		<font> 03C9
1D715		<font> 2202
1D716		<font> 03F5
1D717		<font> 03D1
1D718		<font> 03F0
1D719		<font> 03D5
1D71A		<font> 03F1
1D71B		<font> 03D6
1D71C		<font> 0391
1D71D		<font> 0392
1D71E		<font> 0393
1D71F		<font> 0394
1D720		<font> 0395
1D721		<font> 0396
1D722		<font> 0397
1D723		<font> 0398
1D724		<font> 0399
1D725		<font> 039A
1D726		<font> 039B
1D727		<font> 039C
1D728		<font> 039D
1D729		<font> 039E
1D72A		<font> 039F
1D72B		<font> 03A0
1D72C		<font> 03A1
1D72D		<font> 03F4
1D72E		<font> 03A3
1D72F		<font> 03A4
1D730		<font> 03A5
1D731		<font> 03A6
1D732		<font> 03A7
1D733		<font> 03A8
1D734		<font> 03A9
1D735		<font> 2207
1D736		<font> 03B1
1D737		<font> 03B2
1D738		<font> 03B3
1D739		<font> 03B4
1D73A		<font> 03B5
1D73B		<font> 03B6
1D73C		<font> 03B7
1D73D		<font> 03B8
1D73E		<font> 03B9
1D73F		<font> 03BA
1D740		<font> 03BB
1D741		<font> 03BC
1D742		<font> 03BD
1D743		<font> 03BE
1D744		<font> 03BF
1D745		<font> 03C0
1D746		<font> 03C1
1D747		<font> 03C2
1D748		<font> 03C3
1D749		<font> 03C4
1D74A		<font> 03C5
1D74B		<font> 03C6
1D74C		<font> 03C7
1D74D		<font> 03C8
1D74E		<font> 03C9
1D74F		<font> 2202
1D750		<font> 03F5
1D751		<font> 03D1
1D752		<font> 03F0
1D753		<font> 03D5
1D754		<font> 03F1
1D755		<font> 03D6
1D756		<font> 0391
1D757		<font> 0392
1D758		<font> 0393
1D759		<font> 0394
1D75A		<font> 0395
1D75B		<font> 0396
1D75C		<font> 0397
1D75D		<font> 0398
1D75E		<font> 0399
1D75F		<font> 039A
1D760		<font> 039B
1D761		<font> 039C
1D762		<font> 039D
1D763		<font> 039E
1D764		<font> 039F
1D765		<font> 03A0
1D766		<font> 03A1
1D767		<font> 03F4
1D768		<font> 03A3
1D769		<font> 03A4
1D76A		<font> 03A5
1D76B		<font> 03A6
1D76C		<font> 03A7
1D76D		<font> 03A8
1D76E		<font> 03A9
1D76F		<font> 2207
1D770		<font> 03B1
1D771		<font> 03B2
1D772		<font> 03B3
1D773		<font> 03B4
1D774		<font> 03B5
1D775		<font> 03B6
1D776		<font> 03B7
1D777		<font> 03B8
1D778		<font> 03B9
1D779		<font> 03BA
1D77A		<font> 03BB
1D77B		<font> 03BC
1D77C		<font> 03BD
1D77D		<font> 03BE
1D77E		<font> 03BF
1D77F		<font> 03C0
1D780		<font> 03C1
1D781		<font> 03C2
1D782		<font> 03C3
1D783		<font> 03C4
1D784		<font> 03C5
1D785		<font> 03C6
1D786		<font> 03C7
1D787		<font> 03C8
1D788		<font> 03C9
1D789		<font> 2202
1D78A		<font> 03F5
1D78B		<font> 03D1
1D78C		<font> 03F0
1D78D		<font> 03D5
1D78E		<font> 03F1
1D78F		<font> 03D6
1D790		<font> 0391
1D791		<font> 0392
1D792		<font> 0393
1D793		<font> 0394
1D794		<font> 0395
1D795		<font> 0396
1D796		<font> 0397
1D797		<font> 0398
1D798		<font> 0399
1D799		<font> 039A
1D79A		<font> 039B
1D79B		<font> 039C
1D79C		<font> 039D
1D79D		<font> 039E
1D79E		<font> 039F
1D79F		<font> 03A0
1D7A0		<font> 03A1
1D7A1		<font> 03F4
1D7A2		<font> 03A3
1D7A3		<font> 03A4
1D7A4		<font> 03A5
1D7A5		<font> 03A6
1D7A6		<font> 03A7
1D7A7		<font> 03A8
1D7A8		<font> 03A9
1D7A9		<font> 2207
1D7AA		<font> 03B1
1D7AB		<font> 03B2
1D7AC		<font> 03B3
1D7AD		<font> 03B4
1D7AE		<font> 03B5
1D7AF		<font> 03B6
1D7B0		<font> 03B7
1D7B1		<font> 03B8
1D7B2		<font> 03B9
1D7B3		<font> 03BA
1D7B4		<font> 03BB
1D7B5		<font> 03BC
1D7B6		<font> 03BD
1D7B7		<font> 03BE
1D7B8		<font> 03BF
1D7B9		<font> 03C0
1D7BA		<font> 03C1
1D7BB		<font> 03C2
1D7BC		<font> 03C3
1D7BD		<font> 03C4
1D7BE		<font> 03C5
1D7BF		<font> 03C6
1D7C0		<font> 03C7
1D7C1		<font> 03C8
1D7C2		<font> 03C9
1D7C3		<font> 2202
1D7C4		<font> 03F5
1D7C5		<font> 03D1
1D7C6		<font> 03F0
1D7C7		<font> 03D5
1D7C8		<font> 03F1
1D7C9		<font> 03D6
1D7CA		<font> 03DC
1D7CB		<font> 03DD
1D7CE		<font> 0030
1D7CF		<font> 0031
1D7D0		<font> 0032
1D7D1		<font> 0033
1D7D2		<font> 0034
1D7D3		<font> 0035
1D7D4		<font> 0036
1D7D5		<font> 0037
1D7D6		<font> 0038
1D7D7		<font> 0039
1D7D8		<font> 0030
1D7D9		<font> 0031
1D7DA		<font> 0032
1D7DB		<font> 0033
1D7DC		<font> 0034
1D7DD		<font> 0035
1D7DE		<font> 0036
1D7DF		<font> 0037
1D7E0		<font> 0038
1D7E1		<font> 0039
1D7E2		<font> 0030
1D7E3		<font> 0031
1D7E4		<font> 0032
1D7E5		<font> 0033
1D7E6		<font> 0034
1D7E7		<font> 0035
1D7E8		<font> 0036
1D7E9		<font> 0037
1D7EA		<font> 0038
1D7EB		<font> 0039
1D7EC		<font> 0030
1D7ED		<font> 0031
1D7EE		<font> 0032
1D7EF		<font> 0033
1D7F0		<font> 0034
1D7F1		<font> 0035
1D7F2		<font> 0036
1D7F3		<font> 0037
1D7F4		<font> 0038
1D7F5		<font> 0039
1D7F6		<font> 0030
1D7F7		<font> 0031
1D7F8		<font> 0032
1D7F9		<font> 0033
1D7FA		<font> 0034
1D7FB		<font> 0035
1D7FC		<font> 0036
1D7FD		<font> 0037
1D7FE		<font> 0038
1D7FF		<font> 0039
1EE00		<font> 0627
1EE01		<font> 0628
1EE02		<font> 062C
1EE03		<font> 062F
1EE05		<font> 0648
1EE06		<font> 0632
1EE07		<font> 062D
1EE08		<font> 0637
1EE09		<font> 064A
1EE0A		<font> 0643
1EE0B		<font> 0644
1EE0C		<font> 0645
1EE0D		<font> 0646
1EE0E		<font> 0633
1EE0F		<font> 0639
1EE10		<font> 0641
1EE11		<font> 0635
1EE12		<font> 0642
1EE13		<font> 0631
1EE14		<font> 0634
1EE15		<font> 062A
1EE16		<font> 062B
1EE17		<font> 062E
1EE18		<font> 0630
1EE19		<font> 0636
1EE1A		<font> 0638
1EE1B		<font> 063A
1EE1C		<font> 066E
1EE1D		<font> 06BA
1EE1E		<font> 06A1
1EE1F		<font> 066F
1EE21		<font> 0628
1EE22		<font> 062C
1EE24		<font> 0647
1EE27		<font> 062D
1EE29		<font> 064A
1EE2A		<font> 0643
1EE2B		<font> 0644
1EE2C		<font> 0645
1EE2D		<font> 0646
1EE2E		<font> 0633
1EE2F		<font> 0639
1EE30		<font> 0641
1EE31		<font> 0635
1EE32		<font> 0642
1EE34		<font> 0634
1EE35		<font> 062A
1EE36		<font> 062B
1EE37		<font> 062E
1EE39		<font> 0636
1EE3B		<font> 063A
1EE42		<font> 062C
1EE47		<font> 062D
1EE49		<font> 064A
1EE4B		<font> 0644
1EE4D		<font> 0646
1EE4E		<font> 0633
1EE4F		<font> 0639
1EE51		<font> 0635
1EE52		<font> 0642
1EE54		<font> 0634
1EE57		<font> 062E
1EE59		<font> 0636
1EE5B		<font> 063A
1EE5D		<font> 06BA
1EE5F		<font> 066F
1EE61		<font> 0628
1EE62		<font> 062C
1EE64		<font> 0647
1EE67		<font> 062D
1EE68		<font> 0637
1EE69		<font> 064A
1EE6A		<font> 0643
1EE6C		<font> 0645
1EE6D		<font> 0646
1EE6E		<font> 0633
1EE6F		<font> 0639
1EE70		<font> 0641
1EE71		<font> 0635
1EE72		<font> 0642
1EE74		<font> 0634
1EE75		<font> 062A
1EE76		<font> 062B
1EE77		<font> 062E
1EE79		<font> 0636
1EE7A		<font> 0638
1EE7B		<font> 063A
1EE7C		<font> 066E
1EE7E		<font> 06A1
1EE80		<font> 0627
1EE81		<font> 0628
1EE82		<font> 062C
1EE83		<font> 062F
1EE84		<font> 0647
1EE85		<font> 0648
1EE86		<font> 0632
1EE87		<font> 062D
1EE88		<font> 0637
1EE89		<font> 064A
1EE8B		<font> 0644
1EE8C		<font> 0645
1EE8D		<font> 0646
1EE8E		<font> 0633
1EE8F		<font> 0639
1EE90		<font> 0641
1EE91		<font> 0635
1EE92		<font> 0642
1EE93		<font> 0631
1EE94		<font> 0634
1EE95		<font> 062A
1EE96		<font> 062B
1EE97		<font> 062E
1EE98		<font> 0630
1EE99		<font> 0636
1EE9A		<font> 0638
1EE9B		<font> 063A
1EEA1		<font> 0628
1EEA2		<font> 062C
1EEA3		<font> 062F
1EEA5		<font> 0648
1EEA6		<font> 0632
1EEA7		<font> 062D
1EEA8		<font> 0637
1EEA9		<font> 064A
1EEAB		<font> 0644
1EEAC		<font> 0645
1EEAD		<font> 0646
1EEAE		<font> 0633
1EEAF		<font> 0639
1EEB0		<font> 0641
1EEB1		<font> 0635
1EEB2		<font> 0642
1EEB3		<font> 0631
1EEB4		<font> 0634
1EEB5		<font> 062A
1EEB6		<font> 062B
1EEB7		<font> 062E
1EEB8		<font> 0630
1EEB9		<font> 0636
1EEBA		<font> 0638
1EEBB		<font> 063A
1F100		<compat> 0030 002E
1F101		<compat> 0030 002C
1F102		<compat> 0031 002C
1F103		<compat> 0032 002C
1F104		<compat> 0033 002C
1F105		<compat> 0034 002C
1F106		<compat> 0035 002C
1F107		<compat> 0036 002C
1F108		<compat> 0037 002C
1F109		<compat> 0038 002C
1F10A		<compat> 0039 002C
1F110		<compat> 0028 0041 0029
1F111		<compat> 0028 0042 0029
1F112		<compat> 0028 0043 0029
1F113		<compat> 0028 0044 0029
1F114		<compat> 0028 0045 0029
1F115		<compat> 0028 0046 0029
1F116		<compat> 0028 0047 0029
1F117		<compat> 0028 0048 0029
1F118		<compat> 0028 0049 0029
1F119		<compat> 0028 004A 0029
1F11A		<compat> 0028 004B 0029
1F11B		<compat> 0028 004C 0029
1F11C		<compat> 0028 004D 0029
1F11D		<compat> 0028 004E 0029
1F11E		<compat> 0028 004F 0029
1F11F		<compat> 0028 0050 0029
1F120		<compat> 0028 0051 0029
1F121		<compat> 0028 0052 0029
1F122		<compat> 0028 0053 0029
1F123		<compat> 0028 0054 0029
1F124		<compat> 0028 0055 0029
1F125		<compat> 0028 0056 0029
1F126		<compat> 0028 0057 0029
1F127		<compat> 0028 0058 0029
1F128		<compat> 0028 0059 0029
1F129		<compat> 0028 005A 0029
1F12A		<compat> 3014 0053 3015
1F12B		<circle> 0043
1F12C		<circle> 0052
1F12D		<circle> 0043 0044
1F12E		<circle> 0057 005A
1F130		<square> 0041
1F131		<square> 0042
1F132		<square> 0043
1F133		<square> 0044
1F134		<square> 0045
1F135		<square> 0046
1F136		<square> 0047
1F137		<square> 0048
1F138		<square> 0049
1F139		<square> 004A
1F13A		<square> 004B
1F13B		<square> 004C
1F13C		<square> 004D
1F13D		<square> 004E
1F13E		<square> 004F
1F13F		<square> 0050
1F140		<square> 0051
1F141		<square> 0052
1F142		<square> 0053
1F143		<square> 0054
1F144		<square> 0055
1F145		<square> 0056
1F146		<square> 0057
1F147		<square> 0058
1F148		<square> 0059
1F149		<square> 005A
1F14A		<square> 0048 0056
1F14B		<square> 004D 0056
1F14C		<square> 0053 0044
1F14D		<square> 0053 0053
1F14E		<square> 0050 0050 0056
1F14F		<square> 0057 0043
1F16A		<super> 004D 0043
1F16B		<super> 004D 0044
1F190		<square> 0044 004A
1F200		<square> 307B 304B
1F201		<square> 30B3 30B3
1F202		<square> 30B5
1F210		<square> 624B
1F211		<square> 5B57
1F212		<square> 53CC
1F213		<square> 30C7
1F214		<square> 4E8C
1F215		<square> 591A
1F216		<square> 89E3
1F217		<square> 5929
1F218		<square> 4EA4
1F219		<square> 6620
1F21A		<square> 7121
1F21B		<square> 6599
1F21C		<square> 524D
1F21D		<square> 5F8C
1F21E		<square> 518D
1F21F		<square> 65B0
1F220		<square> 521D
1F221		<square> 7D42
1F222		<square> 751F
1F223		<square> 8CA9
1F224		<square> 58F0
1F225		<square> 5439
1F226		<square> 6F14
1F227		<square> 6295
1F228		<square> 6355
1F229		<square> 4E00
1F22A		<square> 4E09
1F22B		<square> 904A
1F22C		<square> 5DE6
1F22D		<square> 4E2D
1F22E		<square> 53F3
1F22F		<square> 6307
1F230		<square> 8D70
1F231		<square> 6253
1F232		<square> 7981
1F233		<square> 7A7A
1F234		<square> 5408
1F235		<square> 6E80
1F236		<square> 6709
1F237		<square> 6708
1F238		<square> 7533
1F239		<square> 5272
1F23A		<square> 55B6
1F240		<compat> 3014 672C 3015
1F241		<compat> 3014 4E09 3015
1F242		<compat> 3014 4E8C 3015
1F243		<compat> 3014 5B89 3015
1F244		<compat> 3014 70B9 3015
1F245		<compat> 3014 6253 3015
1F246		<compat> 3014 76D7 3015
1F247		<compat> 3014 52DD 3015
1F248		<compat> 3014 6557 3015
1F250		<circle> 5F97
1F251		<circle> 53EF
2F800		4E3D
2F801		4E38
2F802		4E41
2F803		20122
2F804		4F60
2F805		4FAE
2F806		4FBB
2F807		5002
2F808		507A
2F809		5099
2F80A		50E7
2F80B		50CF
2F80C		349E
2F80D		2063A
2F80E		514D
2F80F		5154
2F810		5164
2F811		5177
2F812		2051C
2F813		34B9
2F814		5167
2F815		518D
2F816		2054B
2F817		5197
2F818		51A4
2F819		4ECC
2F81A		51AC
2F81B		51B5
2F81C		291DF
2F81D		51F5
2F81E		5203
2F81F		34DF
2F820		523B
2F821		5246
2F822		5272
2F823		5277
2F824		3515
2F825		52C7
2F826		52C9
2F827		52E4
2F828		52FA
2F829		5305
2F82A		5306
2F82B		5317
2F82C		5349
2F82D		5351
2F82E		535A
2F82F		5373
2F830		537D
2F831	2F833	537F
2F834		20A2C
2F835		7070
2F836		53CA
2F837		53DF
2F838		20B63
2F839		53EB
2F83A		53F1
2F83B		5406
2F83C		549E
2F83D		5438
2F83E		5448
2F83F		5468
2F840		54A2
2F841		54F6
2F842		5510
2F843		5553
2F844		5563
2F845	2F846	5584
2F847		5599
2F848		55AB
2F849		55B3
2F84A		55C2
2F84B		5716
2F84C		5606
2F84D		5717
2F84E		5651
2F84F		5674
2F850		5207
2F851		58EE
2F852		57CE
2F853		57F4
2F854		580D
2F855		578B
2F856		5832
2F857		5831
2F858		58AC
2F859		214E4
2F85A		58F2
2F85B		58F7
2F85C		5906
2F85D		591A
2F85E		5922
2F85F		5962
2F860		216A8
2F861		216EA
2F862		59EC
2F863		5A1B
2F864		5A27
2F865		59D8
2F866		5A66
2F867		36EE
2F868		36FC
2F869		5B08
2F86A	2F86B	5B3E
2F86C		219C8
2F86D		5BC3
2F86E		5BD8
2F86F		5BE7
2F870		5BF3
2F871		21B18
2F872		5BFF
2F873		5C06
2F874		5F53
2F875		5C22
2F876		3781
2F877		5C60
2F878		5C6E
2F879		5CC0
2F87A		5C8D
2F87B		21DE4
2F87C		5D43
2F87D		21DE6
2F87E		5D6E
2F87F		5D6B
2F880		5D7C
2F881		5DE1
2F882		5DE2
2F883		382F
2F884		5DFD
2F885		5E28
2F886		5E3D
2F887		5E69
2F888		3862
2F889		22183
2F88A		387C
2F88B		5EB0
2F88C		5EB3
2F88D		5EB6
2F88E		5ECA
2F88F		2A392
2F890		5EFE
2F891	2F892	22331
2F893		8201
2F894	2F895	5F22
2F896		38C7
2F897		232B8
2F898		261DA
2F899		5F62
2F89A		5F6B
2F89B		38E3
2F89C		5F9A
2F89D		5FCD
2F89E		5FD7
2F89F		5FF9
2F8A0		6081
2F8A1		393A
2F8A2		391C
2F8A3		6094
2F8A4		226D4
2F8A5		60C7
2F8A6		6148
2F8A7		614C
2F8A8		614E
2F8A9		614C
2F8AA		617A
2F8AB		618E
2F8AC		61B2
2F8AD		61A4
2F8AE		61AF
2F8AF		61DE
2F8B0		61F2
2F8B1		61F6
2F8B2		6210
2F8B3		621B
2F8B4		625D
2F8B5		62B1
2F8B6		62D4
2F8B7		6350
2F8B8		22B0C
2F8B9		633D
2F8BA		62FC
2F8BB		6368
2F8BC		6383
2F8BD		63E4
2F8BE		22BF1
2F8BF		6422
2F8C0		63C5
2F8C1		63A9
2F8C2		3A2E
2F8C3		6469
2F8C4		647E
2F8C5		649D
2F8C6		6477
2F8C7		3A6C
2F8C8		654F
2F8C9		656C
2F8CA		2300A
2F8CB		65E3
2F8CC		66F8
2F8CD		6649
2F8CE		3B19
2F8CF		6691
2F8D0		3B08
2F8D1		3AE4
2F8D2		5192
2F8D3		5195
2F8D4		6700
2F8D5		669C
2F8D6		80AD
2F8D7		43D9
2F8D8		6717
2F8D9		671B
2F8DA		6721
2F8DB		675E
2F8DC		6753
2F8DD		233C3
2F8DE		3B49
2F8DF		67FA
2F8E0		6785
2F8E1		6852
2F8E2		6885
2F8E3		2346D
2F8E4		688E
2F8E5		681F
2F8E6		6914
2F8E7		3B9D
2F8E8		6942
2F8E9		69A3
2F8EA		69EA
2F8EB		6AA8
2F8EC		236A3
2F8ED		6ADB
2F8EE		3C18
2F8EF		6B21
2F8F0		238A7
2F8F1		6B54
2F8F2		3C4E
2F8F3		6B72
2F8F4		6B9F
2F8F5		6BBA
2F8F6		6BBB
2F8F7		23A8D
2F8F8		21D0B
2F8F9		23AFA
2F8FA		6C4E
2F8FB		23CBC
2F8FC		6CBF
2F8FD		6CCD
2F8FE		6C67
2F8FF		6D16
2F900		6D3E
2F901		6D77
2F902		6D41
2F903		6D69
2F904		6D78
2F905		6D85
2F906		23D1E
2F907		6D34
2F908		6E2F
2F909		6E6E
2F90A		3D33
2F90B		6ECB
2F90C		6EC7
2F90D		23ED1
2F90E		6DF9
2F90F		6F6E
2F910		23F5E
2F911		23F8E
2F912		6FC6
2F913		7039
2F914		701E
2F915		701B
2F916		3D96
2F917		704A
2F918		707D
2F919		7077
2F91A		70AD
2F91B		20525
2F91C		7145
2F91D		24263
2F91E		719C
2F91F		243AB
2F920		7228
2F921		7235
2F922		7250
2F923		24608
2F924		7280
2F925		7295
2F926		24735
2F927		24814
2F928		737A
2F929		738B
2F92A		3EAC
2F92B		73A5
2F92C	2F92D	3EB8
2F92E		7447
2F92F		745C
2F930		7471
2F931		7485
2F932		74CA
2F933		3F1B
2F934		7524
2F935		24C36
2F936		753E
2F937		24C92
2F938		7570
2F939		2219F
2F93A		7610
2F93B		24FA1
2F93C		24FB8
2F93D		25044
2F93E		3FFC
2F93F		4008
2F940		76F4
2F941		250F3
2F942		250F2
2F943		25119
2F944		25133
2F945		771E
2F946	2F947	771F
2F948		774A
2F949		4039
2F94A		778B
2F94B		4046
2F94C		4096
2F94D		2541D
2F94E		784E
2F94F		788C
2F950		78CC
2F951		40E3
2F952		25626
2F953		7956
2F954		2569A
2F955		256C5
2F956		798F
2F957		79EB
2F958		412F
2F959		7A40
2F95A		7A4A
2F95B		7A4F
2F95C		2597C
2F95D	2F95E	25AA7
2F95F		7AEE
2F960		4202
2F961		25BAB
2F962		7BC6
2F963		7BC9
2F964		4227
2F965		25C80
2F966		7CD2
2F967		42A0
2F968		7CE8
2F969		7CE3
2F96A		7D00
2F96B		25F86
2F96C		7D63
2F96D		4301
2F96E		7DC7
2F96F		7E02
2F970		7E45
2F971		4334
2F972		26228
2F973		26247
2F974		4359
2F975		262D9
2F976		7F7A
2F977		2633E
2F978		7F95
2F979		7FFA
2F97A		8005
2F97B		264DA
2F97C		26523
2F97D		8060
2F97E		265A8
2F97F		8070
2F980		2335F
2F981		43D5
2F982		80B2
2F983		8103
2F984		440B
2F985		813E
2F986		5AB5
2F987		267A7
2F988		267B5
2F989		23393
2F98A		2339C
2F98B		8201
2F98C		8204
2F98D		8F9E
2F98E		446B
2F98F		8291
2F990		828B
2F991		829D
2F992		52B3
2F993		82B1
2F994		82B3
2F995		82BD
2F996		82E6
2F997		26B3C
2F998		82E5
2F999		831D
2F99A		8363
2F99B		83AD
2F99C		8323
2F99D		83BD
2F99E		83E7
2F99F		8457
2F9A0		8353
2F9A1		83CA
2F9A2		83CC
2F9A3		83DC
2F9A4		26C36
2F9A5		26D6B
2F9A6		26CD5
2F9A7		452B
2F9A8		84F1
2F9A9		84F3
2F9AA		8516
2F9AB		273CA
2F9AC		8564
2F9AD		26F2C
2F9AE		455D
2F9AF		4561
2F9B0		26FB1
2F9B1		270D2
2F9B2		456B
2F9B3		8650
2F9B4		865C
2F9B5		8667
2F9B6		8669
2F9B7		86A9
2F9B8		8688
2F9B9		870E
2F9BA		86E2
2F9BB		8779
2F9BC		8728
2F9BD		876B
2F9BE		8786
2F9BF		45D7
2F9C0		87E1
2F9C1		8801
2F9C2		45F9
2F9C3		8860
2F9C4		8863
2F9C5		27667
2F9C6		88D7
2F9C7		88DE
2F9C8		4635
2F9C9		88FA
2F9CA		34BB
2F9CB		278AE
2F9CC		27966
2F9CD		46BE
2F9CE		46C7
2F9CF		8AA0
2F9D0		8AED
2F9D1		8B8A
2F9D2		8C55
2F9D3		27CA8
2F9D4		8CAB
2F9D5		8CC1
2F9D6		8D1B
2F9D7		8D77
2F9D8		27F2F
2F9D9		20804
2F9DA		8DCB
2F9DB		8DBC
2F9DC		8DF0
2F9DD		208DE
2F9DE		8ED4
2F9DF		8F38
2F9E0		285D2
2F9E1		285ED
2F9E2		9094
2F9E3		90F1
2F9E4		9111
2F9E5		2872E
2F9E6		911B
2F9E7		9238
2F9E8		92D7
2F9E9		92D8
2F9EA		927C
2F9EB		93F9
2F9EC		9415
2F9ED		28BFA
2F9EE		958B
2F9EF		4995
2F9F0		95B7
2F9F1		28D77
2F9F2		49E6
2F9F3		96C3
2F9F4		5DB2
2F9F5		9723
2F9F6		29145
2F9F7		2921A
2F9F8		4A6E
2F9F9		4A76
2F9FA		97E0
2F9FB		2940A
2F9FC		4AB2
2F9FD		29496
2F9FE	2F9FF	980B
2FA00		9829
2FA01		295B6
2FA02		98E2
2FA03		4B33
2FA04		9929
2FA05		99A7
2FA06		99C2
2FA07		99FE
2FA08		4BCE
2FA09		29B30
2FA0A		9B12
2FA0B		9C40
2FA0C		9CFD
2FA0D		4CCE
2FA0E		4CED
2FA0F		9D67
2FA10		2A0CE
2FA11		4CF8
2FA12		2A105
2FA13		2A20E
2FA14		2A291
2FA15		9EBB
2FA16		4D56
2FA17		9EF9
2FA18		9EFE
2FA19		9F05
2FA1A		9F0F
2FA1B		9F16
2FA1C		9F3B
2FA1D		2A600
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!


# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.


package charnames;

# This module contains machine-generated tables and code for the
# algorithmically-determinable Unicode character names.  The following
# routines can be used to translate between name and code point and vice versa

{ # Closure

    # Matches legal code point.  4-6 hex numbers, If there are 6, the first
    # two must be 10; if there are 5, the first must not be a 0.  Written this
    # way to decrease backtracking.  The first regex allows the code point to
    # be at the end of a word, but to work properly, the word shouldn't end
    # with a valid hex character.  The second one won't match a code point at
    # the end of a word, and doesn't have the run-on issue
    my $run_on_code_point_re = qr/(?^aax: (?: 10[0-9A-F]{4} | [1-9A-F][0-9A-F]{4} | [0-9A-F]{4} ) \b)/;
    my $code_point_re = qr/(?^aa:\b(?^aax: (?: 10[0-9A-F]{4} | [1-9A-F][0-9A-F]{4} | [0-9A-F]{4} ) \b))/;

    # In the following hash, the keys are the bases of names which include
    # the code point in the name, like CJK UNIFIED IDEOGRAPH-4E01.  The value
    # of each key is another hash which is used to get the low and high ends
    # for each range of code points that apply to the name.
    my %names_ending_in_code_point = (
'CJK COMPATIBILITY IDEOGRAPH' => 
{
'high' => 
[
64109,
64217,
195101,
],
'low' => 
[
63744,
64112,
194560,
],
},
'CJK UNIFIED IDEOGRAPH' => 
{
'high' => 
[
19893,
40917,
173782,
177972,
178205,
183969,
],
'low' => 
[
13312,
19968,
131072,
173824,
177984,
178208,
],
},

    );

    # The following hash is a copy of the previous one, except is for loose
    # matching, so each name has blanks and dashes squeezed out
    my %loose_names_ending_in_code_point = (
'CJKCOMPATIBILITYIDEOGRAPH' => 
{
'high' => 
[
64109,
64217,
195101,
],
'low' => 
[
63744,
64112,
194560,
],
},
'CJKUNIFIEDIDEOGRAPH' => 
{
'high' => 
[
19893,
40917,
173782,
177972,
178205,
183969,
],
'low' => 
[
13312,
19968,
131072,
173824,
177984,
178208,
],
},

    );

    # And the following array gives the inverse mapping from code points to
    # names.  Lowest code points are first
    my @code_points_ending_in_code_point = (

{
'high' => 19893,
'low' => 13312,
'name' => 'CJK UNIFIED IDEOGRAPH',
},
{
'high' => 40917,
'low' => 19968,
'name' => 'CJK UNIFIED IDEOGRAPH',
},
{
'high' => 64109,
'low' => 63744,
'name' => 'CJK COMPATIBILITY IDEOGRAPH',
},
{
'high' => 64217,
'low' => 64112,
'name' => 'CJK COMPATIBILITY IDEOGRAPH',
},
{
'high' => 173782,
'low' => 131072,
'name' => 'CJK UNIFIED IDEOGRAPH',
},
{
'high' => 177972,
'low' => 173824,
'name' => 'CJK UNIFIED IDEOGRAPH',
},
{
'high' => 178205,
'low' => 177984,
'name' => 'CJK UNIFIED IDEOGRAPH',
},
{
'high' => 183969,
'low' => 178208,
'name' => 'CJK UNIFIED IDEOGRAPH',
},
{
'high' => 195101,
'low' => 194560,
'name' => 'CJK COMPATIBILITY IDEOGRAPH',
},
,

    );

    # Convert from code point to Jamo short name for use in composing Hangul
    # syllable names
    my %Jamo = (
4352 => 'G',
4353 => 'GG',
4354 => 'N',
4355 => 'D',
4356 => 'DD',
4357 => 'R',
4358 => 'M',
4359 => 'B',
4360 => 'BB',
4361 => 'S',
4362 => 'SS',
4363 => '',
4364 => 'J',
4365 => 'JJ',
4366 => 'C',
4367 => 'K',
4368 => 'T',
4369 => 'P',
4370 => 'H',
4449 => 'A',
4450 => 'AE',
4451 => 'YA',
4452 => 'YAE',
4453 => 'EO',
4454 => 'E',
4455 => 'YEO',
4456 => 'YE',
4457 => 'O',
4458 => 'WA',
4459 => 'WAE',
4460 => 'OE',
4461 => 'YO',
4462 => 'U',
4463 => 'WEO',
4464 => 'WE',
4465 => 'WI',
4466 => 'YU',
4467 => 'EU',
4468 => 'YI',
4469 => 'I',
4520 => 'G',
4521 => 'GG',
4522 => 'GS',
4523 => 'N',
4524 => 'NJ',
4525 => 'NH',
4526 => 'D',
4527 => 'L',
4528 => 'LG',
4529 => 'LM',
4530 => 'LB',
4531 => 'LS',
4532 => 'LT',
4533 => 'LP',
4534 => 'LH',
4535 => 'M',
4536 => 'B',
4537 => 'BS',
4538 => 'S',
4539 => 'SS',
4540 => 'NG',
4541 => 'J',
4542 => 'C',
4543 => 'K',
4544 => 'T',
4545 => 'P',
4546 => 'H',

    );

    # Leading consonant (can be null)
    my %Jamo_L = (
'' => 11,
'B' => 7,
'BB' => 8,
'C' => 14,
'D' => 3,
'DD' => 4,
'G' => 0,
'GG' => 1,
'H' => 18,
'J' => 12,
'JJ' => 13,
'K' => 15,
'M' => 6,
'N' => 2,
'P' => 17,
'R' => 5,
'S' => 9,
'SS' => 10,
'T' => 16,

    );

    # Vowel
    my %Jamo_V = (
'A' => 0,
'AE' => 1,
'E' => 5,
'EO' => 4,
'EU' => 18,
'I' => 20,
'O' => 8,
'OE' => 11,
'U' => 13,
'WA' => 9,
'WAE' => 10,
'WE' => 15,
'WEO' => 14,
'WI' => 16,
'YA' => 2,
'YAE' => 3,
'YE' => 7,
'YEO' => 6,
'YI' => 19,
'YO' => 12,
'YU' => 17,

    );

    # Optional trailing consonant
    my %Jamo_T = (
'B' => 17,
'BS' => 18,
'C' => 23,
'D' => 7,
'G' => 1,
'GG' => 2,
'GS' => 3,
'H' => 27,
'J' => 22,
'K' => 24,
'L' => 8,
'LB' => 11,
'LG' => 9,
'LH' => 15,
'LM' => 10,
'LP' => 14,
'LS' => 12,
'LT' => 13,
'M' => 16,
'N' => 4,
'NG' => 21,
'NH' => 6,
'NJ' => 5,
'P' => 26,
'S' => 19,
'SS' => 20,
'T' => 25,

    );

    # Computed re that splits up a Hangul name into LVT or LV syllables
    my $syllable_re = qr/(|B|BB|C|D|DD|G|GG|H|J|JJ|K|M|N|P|R|S|SS|T)(A|AE|E|EO|EU|I|O|OE|U|WA|WAE|WE|WEO|WI|YA|YAE|YE|YEO|YI|YO|YU)(B|BS|C|D|G|GG|GS|H|J|K|L|LB|LG|LH|LM|LP|LS|LT|M|N|NG|NH|NJ|P|S|SS|T)?/;

    my $HANGUL_SYLLABLE = "HANGUL SYLLABLE ";
    my $loose_HANGUL_SYLLABLE = "HANGULSYLLABLE";

    # These constants names and values were taken from the Unicode standard,
    # version 5.1, section 3.12.  They are used in conjunction with Hangul
    # syllables
    my $SBase = 0xAC00;
    my $LBase = 0x1100;
    my $VBase = 0x1161;
    my $TBase = 0x11A7;
    my $SCount = 11172;
    my $LCount = 19;
    my $VCount = 21;
    my $TCount = 28;
    my $NCount = $VCount * $TCount;

    sub name_to_code_point_special {
        my ($name, $loose) = @_;

        # Returns undef if not one of the specially handled names; otherwise
        # returns the code point equivalent to the input name
        # $loose is non-zero if to use loose matching, 'name' in that case
        # must be input as upper case with all blanks and dashes squeezed out.

        if ((! $loose && $name =~ s/$HANGUL_SYLLABLE//)
            || ($loose && $name =~ s/$loose_HANGUL_SYLLABLE//))
        {
            return if $name !~ qr/^$syllable_re$/;
            my $L = $Jamo_L{$1};
            my $V = $Jamo_V{$2};
            my $T = (defined $3) ? $Jamo_T{$3} : 0;
            return ($L * $VCount + $V) * $TCount + $T + $SBase;
        }

        # Name must end in 'code_point' for this to handle.
        return if (($loose && $name !~ /^ (.*?) ($run_on_code_point_re) $/x)
                   || (! $loose && $name !~ /^ (.*) ($code_point_re) $/x));

        my $base = $1;
        my $code_point = CORE::hex $2;
        my $names_ref;

        if ($loose) {
            $names_ref = \%loose_names_ending_in_code_point;
        }
        else {
            return if $base !~ s/-$//;
            $names_ref = \%names_ending_in_code_point;
        }

        # Name must be one of the ones which has the code point in it.
        return if ! $names_ref->{$base};

        # Look through the list of ranges that apply to this name to see if
        # the code point is in one of them.
        for (my $i = 0; $i < scalar @{$names_ref->{$base}{'low'}}; $i++) {
            return if $names_ref->{$base}{'low'}->[$i] > $code_point;
            next if $names_ref->{$base}{'high'}->[$i] < $code_point;

            # Here, the code point is in the range.
            return $code_point;
        }

        # Here, looked like the name had a code point number in it, but
        # did not match one of the valid ones.
        return;
    }

    sub code_point_to_name_special {
        my $code_point = shift;

        # Returns the name of a code point if algorithmically determinable;
        # undef if not

        # If in the Hangul range, calculate the name based on Unicode's
        # algorithm
        if ($code_point >= $SBase && $code_point <= $SBase + $SCount -1) {
            use integer;
            my $SIndex = $code_point - $SBase;
            my $L = $LBase + $SIndex / $NCount;
            my $V = $VBase + ($SIndex % $NCount) / $TCount;
            my $T = $TBase + $SIndex % $TCount;
            $name = "$HANGUL_SYLLABLE$Jamo{$L}$Jamo{$V}";
            $name .= $Jamo{$T} if $T != $TBase;
            return $name;
        }

        # Look through list of these code points for one in range.
        foreach my $hash (@code_points_ending_in_code_point) {
            return if $code_point < $hash->{'low'};
            if ($code_point <= $hash->{'high'}) {
                return sprintf("%s-%04X", $hash->{'name'}, $code_point);
            }
        }
        return;            # None found
    }
} # End closure

1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     # SpecialCasing-8.0.0.txt
# Date: 2014-12-16, 23:08:04 GMT [MD]
#
# Unicode Character Database
# Copyright (c) 1991-2014 Unicode, Inc.
# For terms of use, see http://www.unicode.org/terms_of_use.html
# For documentation, see http://www.unicode.org/reports/tr44/
#
# Special Casing
#
# This file is a supplement to the UnicodeData.txt file. It does not define any
# properties, but rather provides additional information about the casing of
# Unicode characters, for situations when casing incurs a change in string length
# or is dependent on context or locale. For compatibility, the UnicodeData.txt
# file only contains simple case mappings for characters where they are one-to-one
# and independent of context and language. The data in this file, combined with
# the simple case mappings in UnicodeData.txt, defines the full case mappings
# Lowercase_Mapping (lc), Titlecase_Mapping (tc), and Uppercase_Mapping (uc).
#
# Note that the preferred mechanism for defining tailored casing operations is
# the Unicode Common Locale Data Repository (CLDR). For more information, see the
# discussion of case mappings and case algorithms in the Unicode Standard.
#
# All code points not listed in this file that do not have a simple case mappings
# in UnicodeData.txt map to themselves.
# ================================================================================
# Format
# ================================================================================
# The entries in this file are in the following machine-readable format:
#
# <code>; <lower>; <title>; <upper>; (<condition_list>;)? # <comment>
#
# <code>, <lower>, <title>, and <upper> provide the respective full case mappings
# of <code>, expressed as character values in hex. If there is more than one character,
# they are separated by spaces. Other than as used to separate elements, spaces are
# to be ignored.
#
# The <condition_list> is optional. Where present, it consists of one or more language IDs
# or casing contexts, separated by spaces. In these conditions:
# - A condition list overrides the normal behavior if all of the listed conditions are true.
# - The casing context is always the context of the characters in the original string,
#   NOT in the resulting string.
# - Case distinctions in the condition list are not significant.
# - Conditions preceded by "Not_" represent the negation of the condition.
# The condition list is not represented in the UCD as a formal property.
#
# A language ID is defined by BCP 47, with '-' and '_' treated equivalently.
#
# A casing context for a character is defined by Section 3.13 Default Case Algorithms
# of The Unicode Standard.
#
# Parsers of this file must be prepared to deal with future additions to this format:
#  * Additional contexts
#  * Additional fields
# ================================================================================

# ================================================================================
# Unconditional mappings
# ================================================================================

# The German es-zed is special--the normal mapping is to SS.
# Note: the titlecase should never occur in practice. It is equal to titlecase(uppercase(<es-zed>))

00DF; 00DF; 0053 0073; 0053 0053; # LATIN SMALL LETTER SHARP S

# Preserve canonical equivalence for I with dot. Turkic is handled below.

0130; 0069 0307; 0130; 0130; # LATIN CAPITAL LETTER I WITH DOT ABOVE

# Ligatures

FB00; FB00; 0046 0066; 0046 0046; # LATIN SMALL LIGATURE FF
FB01; FB01; 0046 0069; 0046 0049; # LATIN SMALL LIGATURE FI
FB02; FB02; 0046 006C; 0046 004C; # LATIN SMALL LIGATURE FL
FB03; FB03; 0046 0066 0069; 0046 0046 0049; # LATIN SMALL LIGATURE FFI
FB04; FB04; 0046 0066 006C; 0046 0046 004C; # LATIN SMALL LIGATURE FFL
FB05; FB05; 0053 0074; 0053 0054; # LATIN SMALL LIGATURE LONG S T
FB06; FB06; 0053 0074; 0053 0054; # LATIN SMALL LIGATURE ST

0587; 0587; 0535 0582; 0535 0552; # ARMENIAN SMALL LIGATURE ECH YIWN
FB13; FB13; 0544 0576; 0544 0546; # ARMENIAN SMALL LIGATURE MEN NOW
FB14; FB14; 0544 0565; 0544 0535; # ARMENIAN SMALL LIGATURE MEN ECH
FB15; FB15; 0544 056B; 0544 053B; # ARMENIAN SMALL LIGATURE MEN INI
FB16; FB16; 054E 0576; 054E 0546; # ARMENIAN SMALL LIGATURE VEW NOW
FB17; FB17; 0544 056D; 0544 053D; # ARMENIAN SMALL LIGATURE MEN XEH

# No corresponding uppercase precomposed character

0149; 0149; 02BC 004E; 02BC 004E; # LATIN SMALL LETTER N PRECEDED BY APOSTROPHE
0390; 0390; 0399 0308 0301; 0399 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS
03B0; 03B0; 03A5 0308 0301; 03A5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS
01F0; 01F0; 004A 030C; 004A 030C; # LATIN SMALL LETTER J WITH CARON
1E96; 1E96; 0048 0331; 0048 0331; # LATIN SMALL LETTER H WITH LINE BELOW
1E97; 1E97; 0054 0308; 0054 0308; # LATIN SMALL LETTER T WITH DIAERESIS
1E98; 1E98; 0057 030A; 0057 030A; # LATIN SMALL LETTER W WITH RING ABOVE
1E99; 1E99; 0059 030A; 0059 030A; # LATIN SMALL LETTER Y WITH RING ABOVE
1E9A; 1E9A; 0041 02BE; 0041 02BE; # LATIN SMALL LETTER A WITH RIGHT HALF RING
1F50; 1F50; 03A5 0313; 03A5 0313; # GREEK SMALL LETTER UPSILON WITH PSILI
1F52; 1F52; 03A5 0313 0300; 03A5 0313 0300; # GREEK SMALL LETTER UPSILON WITH PSILI AND VARIA
1F54; 1F54; 03A5 0313 0301; 03A5 0313 0301; # GREEK SMALL LETTER UPSILON WITH PSILI AND OXIA
1F56; 1F56; 03A5 0313 0342; 03A5 0313 0342; # GREEK SMALL LETTER UPSILON WITH PSILI AND PERISPOMENI
1FB6; 1FB6; 0391 0342; 0391 0342; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI
1FC6; 1FC6; 0397 0342; 0397 0342; # GREEK SMALL LETTER ETA WITH PERISPOMENI
1FD2; 1FD2; 0399 0308 0300; 0399 0308 0300; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND VARIA
1FD3; 1FD3; 0399 0308 0301; 0399 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND OXIA
1FD6; 1FD6; 0399 0342; 0399 0342; # GREEK SMALL LETTER IOTA WITH PERISPOMENI
1FD7; 1FD7; 0399 0308 0342; 0399 0308 0342; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND PERISPOMENI
1FE2; 1FE2; 03A5 0308 0300; 03A5 0308 0300; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND VARIA
1FE3; 1FE3; 03A5 0308 0301; 03A5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND OXIA
1FE4; 1FE4; 03A1 0313; 03A1 0313; # GREEK SMALL LETTER RHO WITH PSILI
1FE6; 1FE6; 03A5 0342; 03A5 0342; # GREEK SMALL LETTER UPSILON WITH PERISPOMENI
1FE7; 1FE7; 03A5 0308 0342; 03A5 0308 0342; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND PERISPOMENI
1FF6; 1FF6; 03A9 0342; 03A9 0342; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI

# IMPORTANT-when iota-subscript (0345) is uppercased or titlecased,
#  the result will be incorrect unless the iota-subscript is moved to the end
#  of any sequence of combining marks. Otherwise, the accents will go on the capital iota.
#  This process can be achieved by first transforming the text to NFC before casing.
#  E.g. <alpha><iota_subscript><acute> is uppercased to <ALPHA><acute><IOTA>

# The following cases are already in the UnicodeData.txt file, so are only commented here.

# 0345; 0345; 0345; 0399; # COMBINING GREEK YPOGEGRAMMENI

# All letters with YPOGEGRAMMENI (iota-subscript) or PROSGEGRAMMENI (iota adscript)
# have special uppercases.
# Note: characters with PROSGEGRAMMENI are actually titlecase, not uppercase!

1F80; 1F80; 1F88; 1F08 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND YPOGEGRAMMENI
1F81; 1F81; 1F89; 1F09 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND YPOGEGRAMMENI
1F82; 1F82; 1F8A; 1F0A 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND VARIA AND YPOGEGRAMMENI
1F83; 1F83; 1F8B; 1F0B 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND VARIA AND YPOGEGRAMMENI
1F84; 1F84; 1F8C; 1F0C 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND OXIA AND YPOGEGRAMMENI
1F85; 1F85; 1F8D; 1F0D 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND OXIA AND YPOGEGRAMMENI
1F86; 1F86; 1F8E; 1F0E 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI
1F87; 1F87; 1F8F; 1F0F 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI
1F88; 1F80; 1F88; 1F08 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PROSGEGRAMMENI
1F89; 1F81; 1F89; 1F09 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PROSGEGRAMMENI
1F8A; 1F82; 1F8A; 1F0A 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND VARIA AND PROSGEGRAMMENI
1F8B; 1F83; 1F8B; 1F0B 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND VARIA AND PROSGEGRAMMENI
1F8C; 1F84; 1F8C; 1F0C 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND OXIA AND PROSGEGRAMMENI
1F8D; 1F85; 1F8D; 1F0D 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND OXIA AND PROSGEGRAMMENI
1F8E; 1F86; 1F8E; 1F0E 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI
1F8F; 1F87; 1F8F; 1F0F 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI
1F90; 1F90; 1F98; 1F28 0399; # GREEK SMALL LETTER ETA WITH PSILI AND YPOGEGRAMMENI
1F91; 1F91; 1F99; 1F29 0399; # GREEK SMALL LETTER ETA WITH DASIA AND YPOGEGRAMMENI
1F92; 1F92; 1F9A; 1F2A 0399; # GREEK SMALL LETTER ETA WITH PSILI AND VARIA AND YPOGEGRAMMENI
1F93; 1F93; 1F9B; 1F2B 0399; # GREEK SMALL LETTER ETA WITH DASIA AND VARIA AND YPOGEGRAMMENI
1F94; 1F94; 1F9C; 1F2C 0399; # GREEK SMALL LETTER ETA WITH PSILI AND OXIA AND YPOGEGRAMMENI
1F95; 1F95; 1F9D; 1F2D 0399; # GREEK SMALL LETTER ETA WITH DASIA AND OXIA AND YPOGEGRAMMENI
1F96; 1F96; 1F9E; 1F2E 0399; # GREEK SMALL LETTER ETA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI
1F97; 1F97; 1F9F; 1F2F 0399; # GREEK SMALL LETTER ETA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI
1F98; 1F90; 1F98; 1F28 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND PROSGEGRAMMENI
1F99; 1F91; 1F99; 1F29 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND PROSGEGRAMMENI
1F9A; 1F92; 1F9A; 1F2A 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND VARIA AND PROSGEGRAMMENI
1F9B; 1F93; 1F9B; 1F2B 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND VARIA AND PROSGEGRAMMENI
1F9C; 1F94; 1F9C; 1F2C 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND OXIA AND PROSGEGRAMMENI
1F9D; 1F95; 1F9D; 1F2D 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND OXIA AND PROSGEGRAMMENI
1F9E; 1F96; 1F9E; 1F2E 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI
1F9F; 1F97; 1F9F; 1F2F 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI
1FA0; 1FA0; 1FA8; 1F68 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND YPOGEGRAMMENI
1FA1; 1FA1; 1FA9; 1F69 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND YPOGEGRAMMENI
1FA2; 1FA2; 1FAA; 1F6A 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND VARIA AND YPOGEGRAMMENI
1FA3; 1FA3; 1FAB; 1F6B 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND VARIA AND YPOGEGRAMMENI
1FA4; 1FA4; 1FAC; 1F6C 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND OXIA AND YPOGEGRAMMENI
1FA5; 1FA5; 1FAD; 1F6D 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND OXIA AND YPOGEGRAMMENI
1FA6; 1FA6; 1FAE; 1F6E 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI
1FA7; 1FA7; 1FAF; 1F6F 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI
1FA8; 1FA0; 1FA8; 1F68 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PROSGEGRAMMENI
1FA9; 1FA1; 1FA9; 1F69 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PROSGEGRAMMENI
1FAA; 1FA2; 1FAA; 1F6A 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND VARIA AND PROSGEGRAMMENI
1FAB; 1FA3; 1FAB; 1F6B 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND VARIA AND PROSGEGRAMMENI
1FAC; 1FA4; 1FAC; 1F6C 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND OXIA AND PROSGEGRAMMENI
1FAD; 1FA5; 1FAD; 1F6D 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND OXIA AND PROSGEGRAMMENI
1FAE; 1FA6; 1FAE; 1F6E 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI
1FAF; 1FA7; 1FAF; 1F6F 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI
1FB3; 1FB3; 1FBC; 0391 0399; # GREEK SMALL LETTER ALPHA WITH YPOGEGRAMMENI
1FBC; 1FB3; 1FBC; 0391 0399; # GREEK CAPITAL LETTER ALPHA WITH PROSGEGRAMMENI
1FC3; 1FC3; 1FCC; 0397 0399; # GREEK SMALL LETTER ETA WITH YPOGEGRAMMENI
1FCC; 1FC3; 1FCC; 0397 0399; # GREEK CAPITAL LETTER ETA WITH PROSGEGRAMMENI
1FF3; 1FF3; 1FFC; 03A9 0399; # GREEK SMALL LETTER OMEGA WITH YPOGEGRAMMENI
1FFC; 1FF3; 1FFC; 03A9 0399; # GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI

# Some characters with YPOGEGRAMMENI also have no corresponding titlecases

1FB2; 1FB2; 1FBA 0345; 1FBA 0399; # GREEK SMALL LETTER ALPHA WITH VARIA AND YPOGEGRAMMENI
1FB4; 1FB4; 0386 0345; 0386 0399; # GREEK SMALL LETTER ALPHA WITH OXIA AND YPOGEGRAMMENI
1FC2; 1FC2; 1FCA 0345; 1FCA 0399; # GREEK SMALL LETTER ETA WITH VARIA AND YPOGEGRAMMENI
1FC4; 1FC4; 0389 0345; 0389 0399; # GREEK SMALL LETTER ETA WITH OXIA AND YPOGEGRAMMENI
1FF2; 1FF2; 1FFA 0345; 1FFA 0399; # GREEK SMALL LETTER OMEGA WITH VARIA AND YPOGEGRAMMENI
1FF4; 1FF4; 038F 0345; 038F 0399; # GREEK SMALL LETTER OMEGA WITH OXIA AND YPOGEGRAMMENI

1FB7; 1FB7; 0391 0342 0345; 0391 0342 0399; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI AND YPOGEGRAMMENI
1FC7; 1FC7; 0397 0342 0345; 0397 0342 0399; # GREEK SMALL LETTER ETA WITH PERISPOMENI AND YPOGEGRAMMENI
1FF7; 1FF7; 03A9 0342 0345; 03A9 0342 0399; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI AND YPOGEGRAMMENI

# ================================================================================
# Conditional Mappings
# The remainder of this file provides conditional casing data used to produce 
# full case mappings.
# ================================================================================
# Language-Insensitive Mappings
# These are characters whose full case mappings do not depend on language, but do
# depend on context (which characters come before or after). For more information
# see the header of this file and the Unicode Standard.
# ================================================================================

# Special case for final form of sigma

03A3; 03C2; 03A3; 03A3; Final_Sigma; # GREEK CAPITAL LETTER SIGMA

# Note: the following cases for non-final are already in the UnicodeData.txt file.

# 03A3; 03C3; 03A3; 03A3; # GREEK CAPITAL LETTER SIGMA
# 03C3; 03C3; 03A3; 03A3; # GREEK SMALL LETTER SIGMA
# 03C2; 03C2; 03A3; 03A3; # GREEK SMALL LETTER FINAL SIGMA

# Note: the following cases are not included, since they would case-fold in lowercasing

# 03C3; 03C2; 03A3; 03A3; Final_Sigma; # GREEK SMALL LETTER SIGMA
# 03C2; 03C3; 03A3; 03A3; Not_Final_Sigma; # GREEK SMALL LETTER FINAL SIGMA

# ================================================================================
# Language-Sensitive Mappings
# These are characters whose full case mappings depend on language and perhaps also
# context (which characters come before or after). For more information
# see the header of this file and the Unicode Standard.
# ================================================================================

# Lithuanian

# Lithuanian retains the dot in a lowercase i when followed by accents.

# Remove DOT ABOVE after "i" with upper or titlecase

0307; 0307; ; ; lt After_Soft_Dotted; # COMBINING DOT ABOVE

# Introduce an explicit dot above when lowercasing capital I's and J's
# whenever there are more accents above.
# (of the accents used in Lithuanian: grave, acute, tilde above, and ogonek)

0049; 0069 0307; 0049; 0049; lt More_Above; # LATIN CAPITAL LETTER I
004A; 006A 0307; 004A; 004A; lt More_Above; # LATIN CAPITAL LETTER J
012E; 012F 0307; 012E; 012E; lt More_Above; # LATIN CAPITAL LETTER I WITH OGONEK
00CC; 0069 0307 0300; 00CC; 00CC; lt; # LATIN CAPITAL LETTER I WITH GRAVE
00CD; 0069 0307 0301; 00CD; 00CD; lt; # LATIN CAPITAL LETTER I WITH ACUTE
0128; 0069 0307 0303; 0128; 0128; lt; # LATIN CAPITAL LETTER I WITH TILDE

# ================================================================================

# Turkish and Azeri

# I and i-dotless; I-dot and i are case pairs in Turkish and Azeri
# The following rules handle those cases.

0130; 0069; 0130; 0130; tr; # LATIN CAPITAL LETTER I WITH DOT ABOVE
0130; 0069; 0130; 0130; az; # LATIN CAPITAL LETTER I WITH DOT ABOVE

# When lowercasing, remove dot_above in the sequence I + dot_above, which will turn into i.
# This matches the behavior of the canonically equivalent I-dot_above

0307; ; 0307; 0307; tr After_I; # COMBINING DOT ABOVE
0307; ; 0307; 0307; az After_I; # COMBINING DOT ABOVE

# When lowercasing, unless an I is before a dot_above, it turns into a dotless i.

0049; 0131; 0049; 0049; tr Not_Before_Dot; # LATIN CAPITAL LETTER I
0049; 0131; 0049; 0049; az Not_Before_Dot; # LATIN CAPITAL LETTER I

# When uppercasing, i turns into a dotted capital I

0069; 0069; 0130; 0130; tr; # LATIN SMALL LETTER I
0069; 0069; 0130; 0130; az; # LATIN SMALL LETTER I

# Note: the following case is already in the UnicodeData.txt file.

# 0131; 0131; 0049; 0049; tr; # LATIN SMALL LETTER DOTLESS I

# EOF

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            8.0.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   IT IS DEPRECATED TO USE THIS FILE   !!!!!!!

# This file is for internal use by core Perl only.  It is retained for
# backwards compatibility with applications that may have come to rely on it,
# but its format and even its name or existence are subject to change without
# notice in a future Perl version.  Don't use it directly.  Instead, its
# contents are now retrievable through a stable API in the Unicode::UCD
# module: Unicode::UCD::prop_invmap('Bidi_Mirroring_Glyph') (Values for individual
# code points can be retrieved via Unicode::UCD::charprop());



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToBmg'}{'format'} = 'x'; # non-negative hex whole number; a code point
$utf8::SwashInfo{'ToBmg'}{'missing'} = ''; # code point maps to the null string

return <<'END';
0028		0029
0029		0028
003C		003E
003E		003C
005B		005D
005D		005B
007B		007D
007D		007B
00AB		00BB
00BB		00AB
0F3A		0F3B
0F3B		0F3A
0F3C		0F3D
0F3D		0F3C
169B		169C
169C		169B
2039		203A
203A		2039
2045		2046
2046		2045
207D		207E
207E		207D
208D		208E
208E		208D
2208		220B
2209		220C
220A		220D
220B		2208
220C		2209
220D		220A
2215		29F5
223C		223D
223D		223C
2243		22CD
2252		2253
2253		2252
2254		2255
2255		2254
2264		2265
2265		2264
2266		2267
2267		2266
2268		2269
2269		2268
226A		226B
226B		226A
226E		226F
226F		226E
2270		2271
2271		2270
2272		2273
2273		2272
2274		2275
2275		2274
2276		2277
2277		2276
2278		2279
2279		2278
227A		227B
227B		227A
227C		227D
227D		227C
227E		227F
227F		227E
2280		2281
2281		2280
2282		2283
2283		2282
2284		2285
2285		2284
2286		2287
2287		2286
2288		2289
2289		2288
228A		228B
228B		228A
228F		2290
2290		228F
2291		2292
2292		2291
2298		29B8
22A2		22A3
22A3		22A2
22A6		2ADE
22A8		2AE4
22A9		2AE3
22AB		2AE5
22B0		22B1
22B1		22B0
22B2		22B3
22B3		22B2
22B4		22B5
22B5		22B4
22B6		22B7
22B7		22B6
22C9		22CA
22CA		22C9
22CB		22CC
22CC		22CB
22CD		2243
22D0		22D1
22D1		22D0
22D6		22D7
22D7		22D6
22D8		22D9
22D9		22D8
22DA		22DB
22DB		22DA
22DC		22DD
22DD		22DC
22DE		22DF
22DF		22DE
22E0		22E1
22E1		22E0
22E2		22E3
22E3		22E2
22E4		22E5
22E5		22E4
22E6		22E7
22E7		22E6
22E8		22E9
22E9		22E8
22EA		22EB
22EB		22EA
22EC		22ED
22ED		22EC
22F0		22F1
22F1		22F0
22F2		22FA
22F3		22FB
22F4		22FC
22F6		22FD
22F7		22FE
22FA		22F2
22FB		22F3
22FC		22F4
22FD		22F6
22FE		22F7
2308		2309
2309		2308
230A		230B
230B		230A
2329		232A
232A		2329
2768		2769
2769		2768
276A		276B
276B		276A
276C		276D
276D		276C
276E		276F
276F		276E
2770		2771
2771		2770
2772		2773
2773		2772
2774		2775
2775		2774
27C3		27C4
27C4		27C3
27C5		27C6
27C6		27C5
27C8		27C9
27C9		27C8
27CB		27CD
27CD		27CB
27D5		27D6
27D6		27D5
27DD		27DE
27DE		27DD
27E2		27E3
27E3		27E2
27E4		27E5
27E5		27E4
27E6		27E7
27E7		27E6
27E8		27E9
27E9		27E8
27EA		27EB
27EB		27EA
27EC		27ED
27ED		27EC
27EE		27EF
27EF		27EE
2983		2984
2984		2983
2985		2986
2986		2985
2987		2988
2988		2987
2989		298A
298A		2989
298B		298C
298C		298B
298D		2990
298E		298F
298F		298E
2990		298D
2991		2992
2992		2991
2993		2994
2994		2993
2995		2996
2996		2995
2997		2998
2998		2997
29B8		2298
29C0		29C1
29C1		29C0
29C4		29C5
29C5		29C4
29CF		29D0
29D0		29CF
29D1		29D2
29D2		29D1
29D4		29D5
29D5		29D4
29D8		29D9
29D9		29D8
29DA		29DB
29DB		29DA
29F5		2215
29F8		29F9
29F9		29F8
29FC		29FD
29FD		29FC
2A2B		2A2C
2A2C		2A2B
2A2D		2A2E
2A2E		2A2D
2A34		2A35
2A35		2A34
2A3C		2A3D
2A3D		2A3C
2A64		2A65
2A65		2A64
2A79		2A7A
2A7A		2A79
2A7D		2A7E
2A7E		2A7D
2A7F		2A80
2A80		2A7F
2A81		2A82
2A82		2A81
2A83		2A84
2A84		2A83
2A8B		2A8C
2A8C		2A8B
2A91		2A92
2A92		2A91
2A93		2A94
2A94		2A93
2A95		2A96
2A96		2A95
2A97		2A98
2A98		2A97
2A99		2A9A
2A9A		2A99
2A9B		2A9C
2A9C		2A9B
2AA1		2AA2
2AA2		2AA1
2AA6		2AA7
2AA7		2AA6
2AA8		2AA9
2AA9		2AA8
2AAA		2AAB
2AAB		2AAA
2AAC		2AAD
2AAD		2AAC
2AAF		2AB0
2AB0		2AAF
2AB3		2AB4
2AB4		2AB3
2ABB		2ABC
2ABC		2ABB
2ABD		2ABE
2ABE		2ABD
2ABF		2AC0
2AC0		2ABF
2AC1		2AC2
2AC2		2AC1
2AC3		2AC4
2AC4		2AC3
2AC5		2AC6
2AC6		2AC5
2ACD		2ACE
2ACE		2ACD
2ACF		2AD0
2AD0		2ACF
2AD1		2AD2
2AD2		2AD1
2AD3		2AD4
2AD4		2AD3
2AD5		2AD6
2AD6		2AD5
2ADE		22A6
2AE3		22A9
2AE4		22A8
2AE5		22AB
2AEC		2AED
2AED		2AEC
2AF7		2AF8
2AF8		2AF7
2AF9		2AFA
2AFA		2AF9
2E02		2E03
2E03		2E02
2E04		2E05
2E05		2E04
2E09		2E0A
2E0A		2E09
2E0C		2E0D
2E0D		2E0C
2E1C		2E1D
2E1D		2E1C
2E20		2E21
2E21		2E20
2E22		2E23
2E23		2E22
2E24		2E25
2E25		2E24
2E26		2E27
2E27		2E26
2E28		2E29
2E29		2E28
3008		3009
3009		3008
300A		300B
300B		300A
300C		300D
300D		300C
300E		300F
300F		300E
3010		3011
3011		3010
3014		3015
3015		3014
3016		3017
3017		3016
3018		3019
3019		3018
301A		301B
301B		301A
FE59		FE5A
FE5A		FE59
FE5B		FE5C
FE5C		FE5B
FE5D		FE5E
FE5E		FE5D
FE64		FE65
FE65		FE64
FF08		FF09
FF09		FF08
FF1C		FF1E
FF1E		FF1C
FF3B		FF3D
FF3D		FF3B
FF5B		FF5D
FF5D		FF5B
FF5F		FF60
FF60		FF5F
FF62		FF63
FF63		FF62
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToBpt'}{'format'} = 's'; # string
$utf8::SwashInfo{'ToBpt'}{'missing'} = 'n';

return <<'END';
28		o
29		c
5B		o
5D		c
7B		o
7D		c
F3A		o
F3B		c
F3C		o
F3D		c
169B		o
169C		c
2045		o
2046		c
207D		o
207E		c
208D		o
208E		c
2308		o
2309		c
230A		o
230B		c
2329		o
232A		c
2768		o
2769		c
276A		o
276B		c
276C		o
276D		c
276E		o
276F		c
2770		o
2771		c
2772		o
2773		c
2774		o
2775		c
27C5		o
27C6		c
27E6		o
27E7		c
27E8		o
27E9		c
27EA		o
27EB		c
27EC		o
27ED		c
27EE		o
27EF		c
2983		o
2984		c
2985		o
2986		c
2987		o
2988		c
2989		o
298A		c
298B		o
298C		c
298D		o
298E		c
298F		o
2990		c
2991		o
2992		c
2993		o
2994		c
2995		o
2996		c
2997		o
2998		c
29D8		o
29D9		c
29DA		o
29DB		c
29FC		o
29FD		c
2E22		o
2E23		c
2E24		o
2E25		c
2E26		o
2E27		c
2E28		o
2E29		c
3008		o
3009		c
300A		o
300B		c
300C		o
300D		c
300E		o
300F		c
3010		o
3011		c
3014		o
3015		c
3016		o
3017		c
3018		o
3019		c
301A		o
301B		c
FE59		o
FE5A		c
FE5B		o
FE5C		c
FE5D		o
FE5E		c
FF08		o
FF09		c
FF3B		o
FF3D		c
FF5B		o
FF5D		c
FF5F		o
FF60		c
FF62		o
FF63		c
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToEa'}{'format'} = 's'; # string
$utf8::SwashInfo{'ToEa'}{'missing'} = 'Neutral';

return <<'END';
20	7E	Na
A1		A
A2	A3	Na
A4		A
A5	A6	Na
A7	A8	A
AA		A
AC		Na
AD	AE	A
AF		Na
B0	B4	A
B6	BA	A
BC	BF	A
C6		A
D0		A
D7	D8	A
DE	E1	A
E6		A
E8	EA	A
EC	ED	A
F0		A
F2	F3	A
F7	FA	A
FC		A
FE		A
101		A
111		A
113		A
11B		A
126	127	A
12B		A
131	133	A
138		A
13F	142	A
144		A
148	14B	A
14D		A
152	153	A
166	167	A
16B		A
1CE		A
1D0		A
1D2		A
1D4		A
1D6		A
1D8		A
1DA		A
1DC		A
251		A
261		A
2C4		A
2C7		A
2C9	2CB	A
2CD		A
2D0		A
2D8	2DB	A
2DD		A
2DF		A
300	36F	A
391	3A1	A
3A3	3A9	A
3B1	3C1	A
3C3	3C9	A
401		A
410	44F	A
451		A
1100	115F	W
2010		A
2013	2016	A
2018	2019	A
201C	201D	A
2020	2022	A
2024	2027	A
2030		A
2032	2033	A
2035		A
203B		A
203E		A
2074		A
207F		A
2081	2084	A
20A9		H
20AC		A
2103		A
2105		A
2109		A
2113		A
2116		A
2121	2122	A
2126		A
212B		A
2153	2154	A
215B	215E	A
2160	216B	A
2170	2179	A
2189		A
2190	2199	A
21B8	21B9	A
21D2		A
21D4		A
21E7		A
2200		A
2202	2203	A
2207	2208	A
220B		A
220F		A
2211		A
2215		A
221A		A
221D	2220	A
2223		A
2225		A
2227	222C	A
222E		A
2234	2237	A
223C	223D	A
2248		A
224C		A
2252		A
2260	2261	A
2264	2267	A
226A	226B	A
226E	226F	A
2282	2283	A
2286	2287	A
2295		A
2299		A
22A5		A
22BF		A
2312		A
2329	232A	W
2460	24E9	A
24EB	254B	A
2550	2573	A
2580	258F	A
2592	2595	A
25A0	25A1	A
25A3	25A9	A
25B2	25B3	A
25B6	25B7	A
25BC	25BD	A
25C0	25C1	A
25C6	25C8	A
25CB		A
25CE	25D1	A
25E2	25E5	A
25EF		A
2605	2606	A
2609		A
260E	260F	A
2614	2615	A
261C		A
261E		A
2640		A
2642		A
2660	2661	A
2663	2665	A
2667	266A	A
266C	266D	A
266F		A
269E	269F	A
26BE	26BF	A
26C4	26CD	A
26CF	26E1	A
26E3		A
26E8	26FF	A
273D		A
2757		A
2776	277F	A
27E6	27ED	Na
2985	2986	Na
2B55	2B59	A
2E80	2E99	W
2E9B	2EF3	W
2F00	2FD5	W
2FF0	2FFB	W
3000		F
3001	303E	W
3041	3096	W
3099	30FF	W
3105	312D	W
3131	318E	W
3190	31BA	W
31C0	31E3	W
31F0	321E	W
3220	3247	W
3248	324F	A
3250	32FE	W
3300	4DBF	W
4E00	A48C	W
A490	A4C6	W
A960	A97C	W
AC00	D7A3	W
E000	F8FF	A
F900	FAFF	W
FE00	FE0F	A
FE10	FE19	W
FE30	FE52	W
FE54	FE66	W
FE68	FE6B	W
FF01	FF60	F
FF61	FFBE	H
FFC2	FFC7	H
FFCA	FFCF	H
FFD2	FFD7	H
FFDA	FFDC	H
FFE0	FFE6	F
FFE8	FFEE	H
FFFD		A
1B000	1B001	W
1F100	1F10A	A
1F110	1F12D	A
1F130	1F169	A
1F170	1F19A	A
1F200	1F202	W
1F210	1F23A	W
1F240	1F248	W
1F250	1F251	W
20000	2FFFD	W
30000	3FFFD	W
E0100	E01EF	A
F0000	FFFFD	A
100000	10FFFD	A
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.


# The mappings in the non-hash portion of this file must be modified to get the
# correct values by adding the code point ordinal number to each one that is
# numeric.

# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToCf'}{'format'} = 'ax'; # mapped value in hex; some entries need adjustment
$utf8::SwashInfo{'ToCf'}{'specials_name'} = 'utf8::ToSpecCf'; # Name of hash of special mappings
$utf8::SwashInfo{'ToCf'}{'missing'} = '0'; # code point maps to itself

# Some code points require special handling because their mappings are each to
# multiple code points.  These do not appear in the main body, but are defined
# in the hash below.

# Each key is the string of N bytes that together make up the UTF-8 encoding
# for the code point.  (i.e. the same as looking at the code point's UTF-8
# under "use bytes").  Each value is the UTF-8 of the translation, for speed.
%utf8::ToSpecCf = (
"\xC3\x9F" => "\x{0073}\x{0073}",             # U+00DF => 0073 0073
"\xC4\xB0" => "\x{0069}\x{0307}",             # U+0130 => 0069 0307
"\xC5\x89" => "\x{02BC}\x{006E}",             # U+0149 => 02BC 006E
"\xC7\xB0" => "\x{006A}\x{030C}",             # U+01F0 => 006A 030C
"\xCE\x90" => "\x{03B9}\x{0308}\x{0301}",     # U+0390 => 03B9 0308 0301
"\xCE\xB0" => "\x{03C5}\x{0308}\x{0301}",     # U+03B0 => 03C5 0308 0301
"\xD6\x87" => "\x{0565}\x{0582}",             # U+0587 => 0565 0582
"\xE1\xBA\x96" => "\x{0068}\x{0331}",         # U+1E96 => 0068 0331
"\xE1\xBA\x97" => "\x{0074}\x{0308}",         # U+1E97 => 0074 0308
"\xE1\xBA\x98" => "\x{0077}\x{030A}",         # U+1E98 => 0077 030A
"\xE1\xBA\x99" => "\x{0079}\x{030A}",         # U+1E99 => 0079 030A
"\xE1\xBA\x9A" => "\x{0061}\x{02BE}",         # U+1E9A => 0061 02BE
"\xE1\xBA\x9E" => "\x{0073}\x{0073}",         # U+1E9E => 0073 0073
"\xE1\xBD\x90" => "\x{03C5}\x{0313}",         # U+1F50 => 03C5 0313
"\xE1\xBD\x92" => "\x{03C5}\x{0313}\x{0300}", # U+1F52 => 03C5 0313 0300
"\xE1\xBD\x94" => "\x{03C5}\x{0313}\x{0301}", # U+1F54 => 03C5 0313 0301
"\xE1\xBD\x96" => "\x{03C5}\x{0313}\x{0342}", # U+1F56 => 03C5 0313 0342
"\xE1\xBE\x80" => "\x{1F00}\x{03B9}",         # U+1F80 => 1F00 03B9
"\xE1\xBE\x81" => "\x{1F01}\x{03B9}",         # U+1F81 => 1F01 03B9
"\xE1\xBE\x82" => "\x{1F02}\x{03B9}",         # U+1F82 => 1F02 03B9
"\xE1\xBE\x83" => "\x{1F03}\x{03B9}",         # U+1F83 => 1F03 03B9
"\xE1\xBE\x84" => "\x{1F04}\x{03B9}",         # U+1F84 => 1F04 03B9
"\xE1\xBE\x85" => "\x{1F05}\x{03B9}",         # U+1F85 => 1F05 03B9
"\xE1\xBE\x86" => "\x{1F06}\x{03B9}",         # U+1F86 => 1F06 03B9
"\xE1\xBE\x87" => "\x{1F07}\x{03B9}",         # U+1F87 => 1F07 03B9
"\xE1\xBE\x88" => "\x{1F00}\x{03B9}",         # U+1F88 => 1F00 03B9
"\xE1\xBE\x89" => "\x{1F01}\x{03B9}",         # U+1F89 => 1F01 03B9
"\xE1\xBE\x8A" => "\x{1F02}\x{03B9}",         # U+1F8A => 1F02 03B9
"\xE1\xBE\x8B" => "\x{1F03}\x{03B9}",         # U+1F8B => 1F03 03B9
"\xE1\xBE\x8C" => "\x{1F04}\x{03B9}",         # U+1F8C => 1F04 03B9
"\xE1\xBE\x8D" => "\x{1F05}\x{03B9}",         # U+1F8D => 1F05 03B9
"\xE1\xBE\x8E" => "\x{1F06}\x{03B9}",         # U+1F8E => 1F06 03B9
"\xE1\xBE\x8F" => "\x{1F07}\x{03B9}",         # U+1F8F => 1F07 03B9
"\xE1\xBE\x90" => "\x{1F20}\x{03B9}",         # U+1F90 => 1F20 03B9
"\xE1\xBE\x91" => "\x{1F21}\x{03B9}",         # U+1F91 => 1F21 03B9
"\xE1\xBE\x92" => "\x{1F22}\x{03B9}",         # U+1F92 => 1F22 03B9
"\xE1\xBE\x93" => "\x{1F23}\x{03B9}",         # U+1F93 => 1F23 03B9
"\xE1\xBE\x94" => "\x{1F24}\x{03B9}",         # U+1F94 => 1F24 03B9
"\xE1\xBE\x95" => "\x{1F25}\x{03B9}",         # U+1F95 => 1F25 03B9
"\xE1\xBE\x96" => "\x{1F26}\x{03B9}",         # U+1F96 => 1F26 03B9
"\xE1\xBE\x97" => "\x{1F27}\x{03B9}",         # U+1F97 => 1F27 03B9
"\xE1\xBE\x98" => "\x{1F20}\x{03B9}",         # U+1F98 => 1F20 03B9
"\xE1\xBE\x99" => "\x{1F21}\x{03B9}",         # U+1F99 => 1F21 03B9
"\xE1\xBE\x9A" => "\x{1F22}\x{03B9}",         # U+1F9A => 1F22 03B9
"\xE1\xBE\x9B" => "\x{1F23}\x{03B9}",         # U+1F9B => 1F23 03B9
"\xE1\xBE\x9C" => "\x{1F24}\x{03B9}",         # U+1F9C => 1F24 03B9
"\xE1\xBE\x9D" => "\x{1F25}\x{03B9}",         # U+1F9D => 1F25 03B9
"\xE1\xBE\x9E" => "\x{1F26}\x{03B9}",         # U+1F9E => 1F26 03B9
"\xE1\xBE\x9F" => "\x{1F27}\x{03B9}",         # U+1F9F => 1F27 03B9
"\xE1\xBE\xA0" => "\x{1F60}\x{03B9}",         # U+1FA0 => 1F60 03B9
"\xE1\xBE\xA1" => "\x{1F61}\x{03B9}",         # U+1FA1 => 1F61 03B9
"\xE1\xBE\xA2" => "\x{1F62}\x{03B9}",         # U+1FA2 => 1F62 03B9
"\xE1\xBE\xA3" => "\x{1F63}\x{03B9}",         # U+1FA3 => 1F63 03B9
"\xE1\xBE\xA4" => "\x{1F64}\x{03B9}",         # U+1FA4 => 1F64 03B9
"\xE1\xBE\xA5" => "\x{1F65}\x{03B9}",         # U+1FA5 => 1F65 03B9
"\xE1\xBE\xA6" => "\x{1F66}\x{03B9}",         # U+1FA6 => 1F66 03B9
"\xE1\xBE\xA7" => "\x{1F67}\x{03B9}",         # U+1FA7 => 1F67 03B9
"\xE1\xBE\xA8" => "\x{1F60}\x{03B9}",         # U+1FA8 => 1F60 03B9
"\xE1\xBE\xA9" => "\x{1F61}\x{03B9}",         # U+1FA9 => 1F61 03B9
"\xE1\xBE\xAA" => "\x{1F62}\x{03B9}",         # U+1FAA => 1F62 03B9
"\xE1\xBE\xAB" => "\x{1F63}\x{03B9}",         # U+1FAB => 1F63 03B9
"\xE1\xBE\xAC" => "\x{1F64}\x{03B9}",         # U+1FAC => 1F64 03B9
"\xE1\xBE\xAD" => "\x{1F65}\x{03B9}",         # U+1FAD => 1F65 03B9
"\xE1\xBE\xAE" => "\x{1F66}\x{03B9}",         # U+1FAE => 1F66 03B9
"\xE1\xBE\xAF" => "\x{1F67}\x{03B9}",         # U+1FAF => 1F67 03B9
"\xE1\xBE\xB2" => "\x{1F70}\x{03B9}",         # U+1FB2 => 1F70 03B9
"\xE1\xBE\xB3" => "\x{03B1}\x{03B9}",         # U+1FB3 => 03B1 03B9
"\xE1\xBE\xB4" => "\x{03AC}\x{03B9}",         # U+1FB4 => 03AC 03B9
"\xE1\xBE\xB6" => "\x{03B1}\x{0342}",         # U+1FB6 => 03B1 0342
"\xE1\xBE\xB7" => "\x{03B1}\x{0342}\x{03B9}", # U+1FB7 => 03B1 0342 03B9
"\xE1\xBE\xBC" => "\x{03B1}\x{03B9}",         # U+1FBC => 03B1 03B9
"\xE1\xBF\x82" => "\x{1F74}\x{03B9}",         # U+1FC2 => 1F74 03B9
"\xE1\xBF\x83" => "\x{03B7}\x{03B9}",         # U+1FC3 => 03B7 03B9
"\xE1\xBF\x84" => "\x{03AE}\x{03B9}",         # U+1FC4 => 03AE 03B9
"\xE1\xBF\x86" => "\x{03B7}\x{0342}",         # U+1FC6 => 03B7 0342
"\xE1\xBF\x87" => "\x{03B7}\x{0342}\x{03B9}", # U+1FC7 => 03B7 0342 03B9
"\xE1\xBF\x8C" => "\x{03B7}\x{03B9}",         # U+1FCC => 03B7 03B9
"\xE1\xBF\x92" => "\x{03B9}\x{0308}\x{0300}", # U+1FD2 => 03B9 0308 0300
"\xE1\xBF\x93" => "\x{03B9}\x{0308}\x{0301}", # U+1FD3 => 03B9 0308 0301
"\xE1\xBF\x96" => "\x{03B9}\x{0342}",         # U+1FD6 => 03B9 0342
"\xE1\xBF\x97" => "\x{03B9}\x{0308}\x{0342}", # U+1FD7 => 03B9 0308 0342
"\xE1\xBF\xA2" => "\x{03C5}\x{0308}\x{0300}", # U+1FE2 => 03C5 0308 0300
"\xE1\xBF\xA3" => "\x{03C5}\x{0308}\x{0301}", # U+1FE3 => 03C5 0308 0301
"\xE1\xBF\xA4" => "\x{03C1}\x{0313}",         # U+1FE4 => 03C1 0313
"\xE1\xBF\xA6" => "\x{03C5}\x{0342}",         # U+1FE6 => 03C5 0342
"\xE1\xBF\xA7" => "\x{03C5}\x{0308}\x{0342}", # U+1FE7 => 03C5 0308 0342
"\xE1\xBF\xB2" => "\x{1F7C}\x{03B9}",         # U+1FF2 => 1F7C 03B9
"\xE1\xBF\xB3" => "\x{03C9}\x{03B9}",         # U+1FF3 => 03C9 03B9
"\xE1\xBF\xB4" => "\x{03CE}\x{03B9}",         # U+1FF4 => 03CE 03B9
"\xE1\xBF\xB6" => "\x{03C9}\x{0342}",         # U+1FF6 => 03C9 0342
"\xE1\xBF\xB7" => "\x{03C9}\x{0342}\x{03B9}", # U+1FF7 => 03C9 0342 03B9
"\xE1\xBF\xBC" => "\x{03C9}\x{03B9}",         # U+1FFC => 03C9 03B9
"\xEF\xAC\x80" => "\x{0066}\x{0066}",         # U+FB00 => 0066 0066
"\xEF\xAC\x81" => "\x{0066}\x{0069}",         # U+FB01 => 0066 0069
"\xEF\xAC\x82" => "\x{0066}\x{006C}",         # U+FB02 => 0066 006C
"\xEF\xAC\x83" => "\x{0066}\x{0066}\x{0069}", # U+FB03 => 0066 0066 0069
"\xEF\xAC\x84" => "\x{0066}\x{0066}\x{006C}", # U+FB04 => 0066 0066 006C
"\xEF\xAC\x85" => "\x{0073}\x{0074}",         # U+FB05 => 0073 0074
"\xEF\xAC\x86" => "\x{0073}\x{0074}",         # U+FB06 => 0073 0074
"\xEF\xAC\x93" => "\x{0574}\x{0576}",         # U+FB13 => 0574 0576
"\xEF\xAC\x94" => "\x{0574}\x{0565}",         # U+FB14 => 0574 0565
"\xEF\xAC\x95" => "\x{0574}\x{056B}",         # U+FB15 => 0574 056B
"\xEF\xAC\x96" => "\x{057E}\x{0576}",         # U+FB16 => 057E 0576
"\xEF\xAC\x97" => "\x{0574}\x{056D}",         # U+FB17 => 0574 056D
);

return <<'END';
41	5A	61
B5		3BC
C0	D6	E0
D8	DE	F8
100		101
102		103
104		105
106		107
108		109
10A		10B
10C		10D
10E		10F
110		111
112		113
114		115
116		117
118		119
11A		11B
11C		11D
11E		11F
120		121
122		123
124		125
126		127
128		129
12A		12B
12C		12D
12E		12F
132		133
134		135
136		137
139		13A
13B		13C
13D		13E
13F		140
141		142
143		144
145		146
147		148
14A		14B
14C		14D
14E		14F
150		151
152		153
154		155
156		157
158		159
15A		15B
15C		15D
15E		15F
160		161
162		163
164		165
166		167
168		169
16A		16B
16C		16D
16E		16F
170		171
172		173
174		175
176		177
178		FF
179		17A
17B		17C
17D		17E
17F		73
181		253
182		183
184		185
186		254
187		188
189	18A	256
18B		18C
18E		1DD
18F		259
190		25B
191		192
193		260
194		263
196		269
197		268
198		199
19C		26F
19D		272
19F		275
1A0		1A1
1A2		1A3
1A4		1A5
1A6		280
1A7		1A8
1A9		283
1AC		1AD
1AE		288
1AF		1B0
1B1	1B2	28A
1B3		1B4
1B5		1B6
1B7		292
1B8		1B9
1BC		1BD
1C4		1C6
1C5		1C6
1C7		1C9
1C8		1C9
1CA		1CC
1CB		1CC
1CD		1CE
1CF		1D0
1D1		1D2
1D3		1D4
1D5		1D6
1D7		1D8
1D9		1DA
1DB		1DC
1DE		1DF
1E0		1E1
1E2		1E3
1E4		1E5
1E6		1E7
1E8		1E9
1EA		1EB
1EC		1ED
1EE		1EF
1F1		1F3
1F2		1F3
1F4		1F5
1F6		195
1F7		1BF
1F8		1F9
1FA		1FB
1FC		1FD
1FE		1FF
200		201
202		203
204		205
206		207
208		209
20A		20B
20C		20D
20E		20F
210		211
212		213
214		215
216		217
218		219
21A		21B
21C		21D
21E		21F
220		19E
222		223
224		225
226		227
228		229
22A		22B
22C		22D
22E		22F
230		231
232		233
23A		2C65
23B		23C
23D		19A
23E		2C66
241		242
243		180
244		289
245		28C
246		247
248		249
24A		24B
24C		24D
24E		24F
345		3B9
370		371
372		373
376		377
37F		3F3
386		3AC
388	38A	3AD
38C		3CC
38E	38F	3CD
391	3A1	3B1
3A3	3AB	3C3
3C2		3C3
3CF		3D7
3D0		3B2
3D1		3B8
3D5		3C6
3D6		3C0
3D8		3D9
3DA		3DB
3DC		3DD
3DE		3DF
3E0		3E1
3E2		3E3
3E4		3E5
3E6		3E7
3E8		3E9
3EA		3EB
3EC		3ED
3EE		3EF
3F0		3BA
3F1		3C1
3F4		3B8
3F5		3B5
3F7		3F8
3F9		3F2
3FA		3FB
3FD	3FF	37B
400	40F	450
410	42F	430
460		461
462		463
464		465
466		467
468		469
46A		46B
46C		46D
46E		46F
470		471
472		473
474		475
476		477
478		479
47A		47B
47C		47D
47E		47F
480		481
48A		48B
48C		48D
48E		48F
490		491
492		493
494		495
496		497
498		499
49A		49B
49C		49D
49E		49F
4A0		4A1
4A2		4A3
4A4		4A5
4A6		4A7
4A8		4A9
4AA		4AB
4AC		4AD
4AE		4AF
4B0		4B1
4B2		4B3
4B4		4B5
4B6		4B7
4B8		4B9
4BA		4BB
4BC		4BD
4BE		4BF
4C0		4CF
4C1		4C2
4C3		4C4
4C5		4C6
4C7		4C8
4C9		4CA
4CB		4CC
4CD		4CE
4D0		4D1
4D2		4D3
4D4		4D5
4D6		4D7
4D8		4D9
4DA		4DB
4DC		4DD
4DE		4DF
4E0		4E1
4E2		4E3
4E4		4E5
4E6		4E7
4E8		4E9
4EA		4EB
4EC		4ED
4EE		4EF
4F0		4F1
4F2		4F3
4F4		4F5
4F6		4F7
4F8		4F9
4FA		4FB
4FC		4FD
4FE		4FF
500		501
502		503
504		505
506		507
508		509
50A		50B
50C		50D
50E		50F
510		511
512		513
514		515
516		517
518		519
51A		51B
51C		51D
51E		51F
520		521
522		523
524		525
526		527
528		529
52A		52B
52C		52D
52E		52F
531	556	561
10A0	10C5	2D00
10C7		2D27
10CD		2D2D
13F8	13FD	13F0
1E00		1E01
1E02		1E03
1E04		1E05
1E06		1E07
1E08		1E09
1E0A		1E0B
1E0C		1E0D
1E0E		1E0F
1E10		1E11
1E12		1E13
1E14		1E15
1E16		1E17
1E18		1E19
1E1A		1E1B
1E1C		1E1D
1E1E		1E1F
1E20		1E21
1E22		1E23
1E24		1E25
1E26		1E27
1E28		1E29
1E2A		1E2B
1E2C		1E2D
1E2E		1E2F
1E30		1E31
1E32		1E33
1E34		1E35
1E36		1E37
1E38		1E39
1E3A		1E3B
1E3C		1E3D
1E3E		1E3F
1E40		1E41
1E42		1E43
1E44		1E45
1E46		1E47
1E48		1E49
1E4A		1E4B
1E4C		1E4D
1E4E		1E4F
1E50		1E51
1E52		1E53
1E54		1E55
1E56		1E57
1E58		1E59
1E5A		1E5B
1E5C		1E5D
1E5E		1E5F
1E60		1E61
1E62		1E63
1E64		1E65
1E66		1E67
1E68		1E69
1E6A		1E6B
1E6C		1E6D
1E6E		1E6F
1E70		1E71
1E72		1E73
1E74		1E75
1E76		1E77
1E78		1E79
1E7A		1E7B
1E7C		1E7D
1E7E		1E7F
1E80		1E81
1E82		1E83
1E84		1E85
1E86		1E87
1E88		1E89
1E8A		1E8B
1E8C		1E8D
1E8E		1E8F
1E90		1E91
1E92		1E93
1E94		1E95
1E9B		1E61
1E9E		DF
1EA0		1EA1
1EA2		1EA3
1EA4		1EA5
1EA6		1EA7
1EA8		1EA9
1EAA		1EAB
1EAC		1EAD
1EAE		1EAF
1EB0		1EB1
1EB2		1EB3
1EB4		1EB5
1EB6		1EB7
1EB8		1EB9
1EBA		1EBB
1EBC		1EBD
1EBE		1EBF
1EC0		1EC1
1EC2		1EC3
1EC4		1EC5
1EC6		1EC7
1EC8		1EC9
1ECA		1ECB
1ECC		1ECD
1ECE		1ECF
1ED0		1ED1
1ED2		1ED3
1ED4		1ED5
1ED6		1ED7
1ED8		1ED9
1EDA		1EDB
1EDC		1EDD
1EDE		1EDF
1EE0		1EE1
1EE2		1EE3
1EE4		1EE5
1EE6		1EE7
1EE8		1EE9
1EEA		1EEB
1EEC		1EED
1EEE		1EEF
1EF0		1EF1
1EF2		1EF3
1EF4		1EF5
1EF6		1EF7
1EF8		1EF9
1EFA		1EFB
1EFC		1EFD
1EFE		1EFF
1F08	1F0F	1F00
1F18	1F1D	1F10
1F28	1F2F	1F20
1F38	1F3F	1F30
1F48	1F4D	1F40
1F59		1F51
1F5B		1F53
1F5D		1F55
1F5F		1F57
1F68	1F6F	1F60
1F88	1F8F	1F80
1F98	1F9F	1F90
1FA8	1FAF	1FA0
1FB8	1FB9	1FB0
1FBA	1FBB	1F70
1FBC		1FB3
1FBE		3B9
1FC8	1FCB	1F72
1FCC		1FC3
1FD8	1FD9	1FD0
1FDA	1FDB	1F76
1FE8	1FE9	1FE0
1FEA	1FEB	1F7A
1FEC		1FE5
1FF8	1FF9	1F78
1FFA	1FFB	1F7C
1FFC		1FF3
2126		3C9
212A		6B
212B		E5
2132		214E
2160	216F	2170
2183		2184
24B6	24CF	24D0
2C00	2C2E	2C30
2C60		2C61
2C62		26B
2C63		1D7D
2C64		27D
2C67		2C68
2C69		2C6A
2C6B		2C6C
2C6D		251
2C6E		271
2C6F		250
2C70		252
2C72		2C73
2C75		2C76
2C7E	2C7F	23F
2C80		2C81
2C82		2C83
2C84		2C85
2C86		2C87
2C88		2C89
2C8A		2C8B
2C8C		2C8D
2C8E		2C8F
2C90		2C91
2C92		2C93
2C94		2C95
2C96		2C97
2C98		2C99
2C9A		2C9B
2C9C		2C9D
2C9E		2C9F
2CA0		2CA1
2CA2		2CA3
2CA4		2CA5
2CA6		2CA7
2CA8		2CA9
2CAA		2CAB
2CAC		2CAD
2CAE		2CAF
2CB0		2CB1
2CB2		2CB3
2CB4		2CB5
2CB6		2CB7
2CB8		2CB9
2CBA		2CBB
2CBC		2CBD
2CBE		2CBF
2CC0		2CC1
2CC2		2CC3
2CC4		2CC5
2CC6		2CC7
2CC8		2CC9
2CCA		2CCB
2CCC		2CCD
2CCE		2CCF
2CD0		2CD1
2CD2		2CD3
2CD4		2CD5
2CD6		2CD7
2CD8		2CD9
2CDA		2CDB
2CDC		2CDD
2CDE		2CDF
2CE0		2CE1
2CE2		2CE3
2CEB		2CEC
2CED		2CEE
2CF2		2CF3
A640		A641
A642		A643
A644		A645
A646		A647
A648		A649
A64A		A64B
A64C		A64D
A64E		A64F
A650		A651
A652		A653
A654		A655
A656		A657
A658		A659
A65A		A65B
A65C		A65D
A65E		A65F
A660		A661
A662		A663
A664		A665
A666		A667
A668		A669
A66A		A66B
A66C		A66D
A680		A681
A682		A683
A684		A685
A686		A687
A688		A689
A68A		A68B
A68C		A68D
A68E		A68F
A690		A691
A692		A693
A694		A695
A696		A697
A698		A699
A69A		A69B
A722		A723
A724		A725
A726		A727
A728		A729
A72A		A72B
A72C		A72D
A72E		A72F
A732		A733
A734		A735
A736		A737
A738		A739
A73A		A73B
A73C		A73D
A73E		A73F
A740		A741
A742		A743
A744		A745
A746		A747
A748		A749
A74A		A74B
A74C		A74D
A74E		A74F
A750		A751
A752		A753
A754		A755
A756		A757
A758		A759
A75A		A75B
A75C		A75D
A75E		A75F
A760		A761
A762		A763
A764		A765
A766		A767
A768		A769
A76A		A76B
A76C		A76D
A76E		A76F
A779		A77A
A77B		A77C
A77D		1D79
A77E		A77F
A780		A781
A782		A783
A784		A785
A786		A787
A78B		A78C
A78D		265
A790		A791
A792		A793
A796		A797
A798		A799
A79A		A79B
A79C		A79D
A79E		A79F
A7A0		A7A1
A7A2		A7A3
A7A4		A7A5
A7A6		A7A7
A7A8		A7A9
A7AA		266
A7AB		25C
A7AC		261
A7AD		26C
A7B0		29E
A7B1		287
A7B2		29D
A7B3		AB53
A7B4		A7B5
A7B6		A7B7
AB70	ABBF	13A0
FF21	FF3A	FF41
10400	10427	10428
10C80	10CB2	10CC0
118A0	118BF	118C0
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   IT IS DEPRECATED TO USE THIS FILE   !!!!!!!

# This file is for internal use by core Perl only.  It is retained for
# backwards compatibility with applications that may have come to rely on it,
# but its format and even its name or existence are subject to change without
# notice in a future Perl version.  Don't use it directly.  Instead, its
# contents are now retrievable through a stable API in the Unicode::UCD
# module: Unicode::UCD::prop_invmap('Perl_Decimal_Digit') (Values for individual
# code points can be retrieved via Unicode::UCD::charprop());



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToDigit'}{'format'} = 'd'; # single decimal digit
$utf8::SwashInfo{'ToDigit'}{'missing'} = ''; # code point maps to the null string

return <<'END';
0030		0
0031		1
0032		2
0033		3
0034		4
0035		5
0036		6
0037		7
0038		8
0039		9
0660		0
0661		1
0662		2
0663		3
0664		4
0665		5
0666		6
0667		7
0668		8
0669		9
06F0		0
06F1		1
06F2		2
06F3		3
06F4		4
06F5		5
06F6		6
06F7		7
06F8		8
06F9		9
07C0		0
07C1		1
07C2		2
07C3		3
07C4		4
07C5		5
07C6		6
07C7		7
07C8		8
07C9		9
0966		0
0967		1
0968		2
0969		3
096A		4
096B		5
096C		6
096D		7
096E		8
096F		9
09E6		0
09E7		1
09E8		2
09E9		3
09EA		4
09EB		5
09EC		6
09ED		7
09EE		8
09EF		9
0A66		0
0A67		1
0A68		2
0A69		3
0A6A		4
0A6B		5
0A6C		6
0A6D		7
0A6E		8
0A6F		9
0AE6		0
0AE7		1
0AE8		2
0AE9		3
0AEA		4
0AEB		5
0AEC		6
0AED		7
0AEE		8
0AEF		9
0B66		0
0B67		1
0B68		2
0B69		3
0B6A		4
0B6B		5
0B6C		6
0B6D		7
0B6E		8
0B6F		9
0BE6		0
0BE7		1
0BE8		2
0BE9		3
0BEA		4
0BEB		5
0BEC		6
0BED		7
0BEE		8
0BEF		9
0C66		0
0C67		1
0C68		2
0C69		3
0C6A		4
0C6B		5
0C6C		6
0C6D		7
0C6E		8
0C6F		9
0CE6		0
0CE7		1
0CE8		2
0CE9		3
0CEA		4
0CEB		5
0CEC		6
0CED		7
0CEE		8
0CEF		9
0D66		0
0D67		1
0D68		2
0D69		3
0D6A		4
0D6B		5
0D6C		6
0D6D		7
0D6E		8
0D6F		9
0DE6		0
0DE7		1
0DE8		2
0DE9		3
0DEA		4
0DEB		5
0DEC		6
0DED		7
0DEE		8
0DEF		9
0E50		0
0E51		1
0E52		2
0E53		3
0E54		4
0E55		5
0E56		6
0E57		7
0E58		8
0E59		9
0ED0		0
0ED1		1
0ED2		2
0ED3		3
0ED4		4
0ED5		5
0ED6		6
0ED7		7
0ED8		8
0ED9		9
0F20		0
0F21		1
0F22		2
0F23		3
0F24		4
0F25		5
0F26		6
0F27		7
0F28		8
0F29		9
1040		0
1041		1
1042		2
1043		3
1044		4
1045		5
1046		6
1047		7
1048		8
1049		9
1090		0
1091		1
1092		2
1093		3
1094		4
1095		5
1096		6
1097		7
1098		8
1099		9
17E0		0
17E1		1
17E2		2
17E3		3
17E4		4
17E5		5
17E6		6
17E7		7
17E8		8
17E9		9
1810		0
1811		1
1812		2
1813		3
1814		4
1815		5
1816		6
1817		7
1818		8
1819		9
1946		0
1947		1
1948		2
1949		3
194A		4
194B		5
194C		6
194D		7
194E		8
194F		9
19D0		0
19D1		1
19D2		2
19D3		3
19D4		4
19D5		5
19D6		6
19D7		7
19D8		8
19D9		9
1A80		0
1A81		1
1A82		2
1A83		3
1A84		4
1A85		5
1A86		6
1A87		7
1A88		8
1A89		9
1A90		0
1A91		1
1A92		2
1A93		3
1A94		4
1A95		5
1A96		6
1A97		7
1A98		8
1A99		9
1B50		0
1B51		1
1B52		2
1B53		3
1B54		4
1B55		5
1B56		6
1B57		7
1B58		8
1B59		9
1BB0		0
1BB1		1
1BB2		2
1BB3		3
1BB4		4
1BB5		5
1BB6		6
1BB7		7
1BB8		8
1BB9		9
1C40		0
1C41		1
1C42		2
1C43		3
1C44		4
1C45		5
1C46		6
1C47		7
1C48		8
1C49		9
1C50		0
1C51		1
1C52		2
1C53		3
1C54		4
1C55		5
1C56		6
1C57		7
1C58		8
1C59		9
A620		0
A621		1
A622		2
A623		3
A624		4
A625		5
A626		6
A627		7
A628		8
A629		9
A8D0		0
A8D1		1
A8D2		2
A8D3		3
A8D4		4
A8D5		5
A8D6		6
A8D7		7
A8D8		8
A8D9		9
A900		0
A901		1
A902		2
A903		3
A904		4
A905		5
A906		6
A907		7
A908		8
A909		9
A9D0		0
A9D1		1
A9D2		2
A9D3		3
A9D4		4
A9D5		5
A9D6		6
A9D7		7
A9D8		8
A9D9		9
A9F0		0
A9F1		1
A9F2		2
A9F3		3
A9F4		4
A9F5		5
A9F6		6
A9F7		7
A9F8		8
A9F9		9
AA50		0
AA51		1
AA52		2
AA53		3
AA54		4
AA55		5
AA56		6
AA57		7
AA58		8
AA59		9
ABF0		0
ABF1		1
ABF2		2
ABF3		3
ABF4		4
ABF5		5
ABF6		6
ABF7		7
ABF8		8
ABF9		9
FF10		0
FF11		1
FF12		2
FF13		3
FF14		4
FF15		5
FF16		6
FF17		7
FF18		8
FF19		9
104A0		0
104A1		1
104A2		2
104A3		3
104A4		4
104A5		5
104A6		6
104A7		7
104A8		8
104A9		9
11066		0
11067		1
11068		2
11069		3
1106A		4
1106B		5
1106C		6
1106D		7
1106E		8
1106F		9
110F0		0
110F1		1
110F2		2
110F3		3
110F4		4
110F5		5
110F6		6
110F7		7
110F8		8
110F9		9
11136		0
11137		1
11138		2
11139		3
1113A		4
1113B		5
1113C		6
1113D		7
1113E		8
1113F		9
111D0		0
111D1		1
111D2		2
111D3		3
111D4		4
111D5		5
111D6		6
111D7		7
111D8		8
111D9		9
112F0		0
112F1		1
112F2		2
112F3		3
112F4		4
112F5		5
112F6		6
112F7		7
112F8		8
112F9		9
114D0		0
114D1		1
114D2		2
114D3		3
114D4		4
114D5		5
114D6		6
114D7		7
114D8		8
114D9		9
11650		0
11651		1
11652		2
11653		3
11654		4
11655		5
11656		6
11657		7
11658		8
11659		9
116C0		0
116C1		1
116C2		2
116C3		3
116C4		4
116C5		5
116C6		6
116C7		7
116C8		8
116C9		9
11730		0
11731		1
11732		2
11733		3
11734		4
11735		5
11736		6
11737		7
11738		8
11739		9
118E0		0
118E1		1
118E2		2
118E3		3
118E4		4
118E5		5
118E6		6
118E7		7
118E8		8
118E9		9
16A60		0
16A61		1
16A62		2
16A63		3
16A64		4
16A65		5
16A66		6
16A67		7
16A68		8
16A69		9
16B50		0
16B51		1
16B52		2
16B53		3
16B54		4
16B55		5
16B56		6
16B57		7
16B58		8
16B59		9
1D7CE		0
1D7CF		1
1D7D0		2
1D7D1		3
1D7D2		4
1D7D3		5
1D7D4		6
1D7D5		7
1D7D6		8
1D7D7		9
1D7D8		0
1D7D9		1
1D7DA		2
1D7DB		3
1D7DC		4
1D7DD		5
1D7DE		6
1D7DF		7
1D7E0		8
1D7E1		9
1D7E2		0
1D7E3		1
1D7E4		2
1D7E5		3
1D7E6		4
1D7E7		5
1D7E8		6
1D7E9		7
1D7EA		8
1D7EB		9
1D7EC		0
1D7ED		1
1D7EE		2
1D7EF		3
1D7F0		4
1D7F1		5
1D7F2		6
1D7F3		7
1D7F4		8
1D7F5		9
1D7F6		0
1D7F7		1
1D7F8		2
1D7F9		3
1D7FA		4
1D7FB		5
1D7FC		6
1D7FD		7
1D7FE		8
1D7FF		9
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   IT IS DEPRECATED TO USE THIS FILE   !!!!!!!

# This file is for internal use by core Perl only.  It is retained for
# backwards compatibility with applications that may have come to rely on it,
# but its format and even its name or existence are subject to change without
# notice in a future Perl version.  Don't use it directly.  Instead, its
# contents are now retrievable through a stable API in the Unicode::UCD
# module: Unicode::UCD::prop_invmap('Case_Folding') (Values for individual
# code points can be retrieved via Unicode::UCD::charprop());



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToFold'}{'format'} = 'x'; # non-negative hex whole number; a code point
$utf8::SwashInfo{'ToFold'}{'specials_name'} = 'utf8::ToSpecFold'; # Name of hash of special mappings
$utf8::SwashInfo{'ToFold'}{'missing'} = '<code point>'; # code point maps to itself

# Some code points require special handling because their mappings are each to
# multiple code points.  These do not appear in the main body, but are defined
# in the hash below.

# Each key is the string of N bytes that together make up the UTF-8 encoding
# for the code point.  (i.e. the same as looking at the code point's UTF-8
# under "use bytes").  Each value is the UTF-8 of the translation, for speed.
%utf8::ToSpecFold = (
"\xC3\x9F" => "\x{0073}\x{0073}",             # U+00DF => 0073 0073
"\xC4\xB0" => "\x{0069}\x{0307}",             # U+0130 => 0069 0307
"\xC5\x89" => "\x{02BC}\x{006E}",             # U+0149 => 02BC 006E
"\xC7\xB0" => "\x{006A}\x{030C}",             # U+01F0 => 006A 030C
"\xCE\x90" => "\x{03B9}\x{0308}\x{0301}",     # U+0390 => 03B9 0308 0301
"\xCE\xB0" => "\x{03C5}\x{0308}\x{0301}",     # U+03B0 => 03C5 0308 0301
"\xD6\x87" => "\x{0565}\x{0582}",             # U+0587 => 0565 0582
"\xE1\xBA\x96" => "\x{0068}\x{0331}",         # U+1E96 => 0068 0331
"\xE1\xBA\x97" => "\x{0074}\x{0308}",         # U+1E97 => 0074 0308
"\xE1\xBA\x98" => "\x{0077}\x{030A}",         # U+1E98 => 0077 030A
"\xE1\xBA\x99" => "\x{0079}\x{030A}",         # U+1E99 => 0079 030A
"\xE1\xBA\x9A" => "\x{0061}\x{02BE}",         # U+1E9A => 0061 02BE
"\xE1\xBA\x9E" => "\x{0073}\x{0073}",         # U+1E9E => 0073 0073
"\xE1\xBD\x90" => "\x{03C5}\x{0313}",         # U+1F50 => 03C5 0313
"\xE1\xBD\x92" => "\x{03C5}\x{0313}\x{0300}", # U+1F52 => 03C5 0313 0300
"\xE1\xBD\x94" => "\x{03C5}\x{0313}\x{0301}", # U+1F54 => 03C5 0313 0301
"\xE1\xBD\x96" => "\x{03C5}\x{0313}\x{0342}", # U+1F56 => 03C5 0313 0342
"\xE1\xBE\x80" => "\x{1F00}\x{03B9}",         # U+1F80 => 1F00 03B9
"\xE1\xBE\x81" => "\x{1F01}\x{03B9}",         # U+1F81 => 1F01 03B9
"\xE1\xBE\x82" => "\x{1F02}\x{03B9}",         # U+1F82 => 1F02 03B9
"\xE1\xBE\x83" => "\x{1F03}\x{03B9}",         # U+1F83 => 1F03 03B9
"\xE1\xBE\x84" => "\x{1F04}\x{03B9}",         # U+1F84 => 1F04 03B9
"\xE1\xBE\x85" => "\x{1F05}\x{03B9}",         # U+1F85 => 1F05 03B9
"\xE1\xBE\x86" => "\x{1F06}\x{03B9}",         # U+1F86 => 1F06 03B9
"\xE1\xBE\x87" => "\x{1F07}\x{03B9}",         # U+1F87 => 1F07 03B9
"\xE1\xBE\x88" => "\x{1F00}\x{03B9}",         # U+1F88 => 1F00 03B9
"\xE1\xBE\x89" => "\x{1F01}\x{03B9}",         # U+1F89 => 1F01 03B9
"\xE1\xBE\x8A" => "\x{1F02}\x{03B9}",         # U+1F8A => 1F02 03B9
"\xE1\xBE\x8B" => "\x{1F03}\x{03B9}",         # U+1F8B => 1F03 03B9
"\xE1\xBE\x8C" => "\x{1F04}\x{03B9}",         # U+1F8C => 1F04 03B9
"\xE1\xBE\x8D" => "\x{1F05}\x{03B9}",         # U+1F8D => 1F05 03B9
"\xE1\xBE\x8E" => "\x{1F06}\x{03B9}",         # U+1F8E => 1F06 03B9
"\xE1\xBE\x8F" => "\x{1F07}\x{03B9}",         # U+1F8F => 1F07 03B9
"\xE1\xBE\x90" => "\x{1F20}\x{03B9}",         # U+1F90 => 1F20 03B9
"\xE1\xBE\x91" => "\x{1F21}\x{03B9}",         # U+1F91 => 1F21 03B9
"\xE1\xBE\x92" => "\x{1F22}\x{03B9}",         # U+1F92 => 1F22 03B9
"\xE1\xBE\x93" => "\x{1F23}\x{03B9}",         # U+1F93 => 1F23 03B9
"\xE1\xBE\x94" => "\x{1F24}\x{03B9}",         # U+1F94 => 1F24 03B9
"\xE1\xBE\x95" => "\x{1F25}\x{03B9}",         # U+1F95 => 1F25 03B9
"\xE1\xBE\x96" => "\x{1F26}\x{03B9}",         # U+1F96 => 1F26 03B9
"\xE1\xBE\x97" => "\x{1F27}\x{03B9}",         # U+1F97 => 1F27 03B9
"\xE1\xBE\x98" => "\x{1F20}\x{03B9}",         # U+1F98 => 1F20 03B9
"\xE1\xBE\x99" => "\x{1F21}\x{03B9}",         # U+1F99 => 1F21 03B9
"\xE1\xBE\x9A" => "\x{1F22}\x{03B9}",         # U+1F9A => 1F22 03B9
"\xE1\xBE\x9B" => "\x{1F23}\x{03B9}",         # U+1F9B => 1F23 03B9
"\xE1\xBE\x9C" => "\x{1F24}\x{03B9}",         # U+1F9C => 1F24 03B9
"\xE1\xBE\x9D" => "\x{1F25}\x{03B9}",         # U+1F9D => 1F25 03B9
"\xE1\xBE\x9E" => "\x{1F26}\x{03B9}",         # U+1F9E => 1F26 03B9
"\xE1\xBE\x9F" => "\x{1F27}\x{03B9}",         # U+1F9F => 1F27 03B9
"\xE1\xBE\xA0" => "\x{1F60}\x{03B9}",         # U+1FA0 => 1F60 03B9
"\xE1\xBE\xA1" => "\x{1F61}\x{03B9}",         # U+1FA1 => 1F61 03B9
"\xE1\xBE\xA2" => "\x{1F62}\x{03B9}",         # U+1FA2 => 1F62 03B9
"\xE1\xBE\xA3" => "\x{1F63}\x{03B9}",         # U+1FA3 => 1F63 03B9
"\xE1\xBE\xA4" => "\x{1F64}\x{03B9}",         # U+1FA4 => 1F64 03B9
"\xE1\xBE\xA5" => "\x{1F65}\x{03B9}",         # U+1FA5 => 1F65 03B9
"\xE1\xBE\xA6" => "\x{1F66}\x{03B9}",         # U+1FA6 => 1F66 03B9
"\xE1\xBE\xA7" => "\x{1F67}\x{03B9}",         # U+1FA7 => 1F67 03B9
"\xE1\xBE\xA8" => "\x{1F60}\x{03B9}",         # U+1FA8 => 1F60 03B9
"\xE1\xBE\xA9" => "\x{1F61}\x{03B9}",         # U+1FA9 => 1F61 03B9
"\xE1\xBE\xAA" => "\x{1F62}\x{03B9}",         # U+1FAA => 1F62 03B9
"\xE1\xBE\xAB" => "\x{1F63}\x{03B9}",         # U+1FAB => 1F63 03B9
"\xE1\xBE\xAC" => "\x{1F64}\x{03B9}",         # U+1FAC => 1F64 03B9
"\xE1\xBE\xAD" => "\x{1F65}\x{03B9}",         # U+1FAD => 1F65 03B9
"\xE1\xBE\xAE" => "\x{1F66}\x{03B9}",         # U+1FAE => 1F66 03B9
"\xE1\xBE\xAF" => "\x{1F67}\x{03B9}",         # U+1FAF => 1F67 03B9
"\xE1\xBE\xB2" => "\x{1F70}\x{03B9}",         # U+1FB2 => 1F70 03B9
"\xE1\xBE\xB3" => "\x{03B1}\x{03B9}",         # U+1FB3 => 03B1 03B9
"\xE1\xBE\xB4" => "\x{03AC}\x{03B9}",         # U+1FB4 => 03AC 03B9
"\xE1\xBE\xB6" => "\x{03B1}\x{0342}",         # U+1FB6 => 03B1 0342
"\xE1\xBE\xB7" => "\x{03B1}\x{0342}\x{03B9}", # U+1FB7 => 03B1 0342 03B9
"\xE1\xBE\xBC" => "\x{03B1}\x{03B9}",         # U+1FBC => 03B1 03B9
"\xE1\xBF\x82" => "\x{1F74}\x{03B9}",         # U+1FC2 => 1F74 03B9
"\xE1\xBF\x83" => "\x{03B7}\x{03B9}",         # U+1FC3 => 03B7 03B9
"\xE1\xBF\x84" => "\x{03AE}\x{03B9}",         # U+1FC4 => 03AE 03B9
"\xE1\xBF\x86" => "\x{03B7}\x{0342}",         # U+1FC6 => 03B7 0342
"\xE1\xBF\x87" => "\x{03B7}\x{0342}\x{03B9}", # U+1FC7 => 03B7 0342 03B9
"\xE1\xBF\x8C" => "\x{03B7}\x{03B9}",         # U+1FCC => 03B7 03B9
"\xE1\xBF\x92" => "\x{03B9}\x{0308}\x{0300}", # U+1FD2 => 03B9 0308 0300
"\xE1\xBF\x93" => "\x{03B9}\x{0308}\x{0301}", # U+1FD3 => 03B9 0308 0301
"\xE1\xBF\x96" => "\x{03B9}\x{0342}",         # U+1FD6 => 03B9 0342
"\xE1\xBF\x97" => "\x{03B9}\x{0308}\x{0342}", # U+1FD7 => 03B9 0308 0342
"\xE1\xBF\xA2" => "\x{03C5}\x{0308}\x{0300}", # U+1FE2 => 03C5 0308 0300
"\xE1\xBF\xA3" => "\x{03C5}\x{0308}\x{0301}", # U+1FE3 => 03C5 0308 0301
"\xE1\xBF\xA4" => "\x{03C1}\x{0313}",         # U+1FE4 => 03C1 0313
"\xE1\xBF\xA6" => "\x{03C5}\x{0342}",         # U+1FE6 => 03C5 0342
"\xE1\xBF\xA7" => "\x{03C5}\x{0308}\x{0342}", # U+1FE7 => 03C5 0308 0342
"\xE1\xBF\xB2" => "\x{1F7C}\x{03B9}",         # U+1FF2 => 1F7C 03B9
"\xE1\xBF\xB3" => "\x{03C9}\x{03B9}",         # U+1FF3 => 03C9 03B9
"\xE1\xBF\xB4" => "\x{03CE}\x{03B9}",         # U+1FF4 => 03CE 03B9
"\xE1\xBF\xB6" => "\x{03C9}\x{0342}",         # U+1FF6 => 03C9 0342
"\xE1\xBF\xB7" => "\x{03C9}\x{0342}\x{03B9}", # U+1FF7 => 03C9 0342 03B9
"\xE1\xBF\xBC" => "\x{03C9}\x{03B9}",         # U+1FFC => 03C9 03B9
"\xEF\xAC\x80" => "\x{0066}\x{0066}",         # U+FB00 => 0066 0066
"\xEF\xAC\x81" => "\x{0066}\x{0069}",         # U+FB01 => 0066 0069
"\xEF\xAC\x82" => "\x{0066}\x{006C}",         # U+FB02 => 0066 006C
"\xEF\xAC\x83" => "\x{0066}\x{0066}\x{0069}", # U+FB03 => 0066 0066 0069
"\xEF\xAC\x84" => "\x{0066}\x{0066}\x{006C}", # U+FB04 => 0066 0066 006C
"\xEF\xAC\x85" => "\x{0073}\x{0074}",         # U+FB05 => 0073 0074
"\xEF\xAC\x86" => "\x{0073}\x{0074}",         # U+FB06 => 0073 0074
"\xEF\xAC\x93" => "\x{0574}\x{0576}",         # U+FB13 => 0574 0576
"\xEF\xAC\x94" => "\x{0574}\x{0565}",         # U+FB14 => 0574 0565
"\xEF\xAC\x95" => "\x{0574}\x{056B}",         # U+FB15 => 0574 056B
"\xEF\xAC\x96" => "\x{057E}\x{0576}",         # U+FB16 => 057E 0576
"\xEF\xAC\x97" => "\x{0574}\x{056D}",         # U+FB17 => 0574 056D
);

return <<'END';
0041		0061
0042		0062
0043		0063
0044		0064
0045		0065
0046		0066
0047		0067
0048		0068
0049		0069
004A		006A
004B		006B
004C		006C
004D		006D
004E		006E
004F		006F
0050		0070
0051		0071
0052		0072
0053		0073
0054		0074
0055		0075
0056		0076
0057		0077
0058		0078
0059		0079
005A		007A
00B5		03BC
00C0		00E0
00C1		00E1
00C2		00E2
00C3		00E3
00C4		00E4
00C5		00E5
00C6		00E6
00C7		00E7
00C8		00E8
00C9		00E9
00CA		00EA
00CB		00EB
00CC		00EC
00CD		00ED
00CE		00EE
00CF		00EF
00D0		00F0
00D1		00F1
00D2		00F2
00D3		00F3
00D4		00F4
00D5		00F5
00D6		00F6
00D8		00F8
00D9		00F9
00DA		00FA
00DB		00FB
00DC		00FC
00DD		00FD
00DE		00FE
0100		0101
0102		0103
0104		0105
0106		0107
0108		0109
010A		010B
010C		010D
010E		010F
0110		0111
0112		0113
0114		0115
0116		0117
0118		0119
011A		011B
011C		011D
011E		011F
0120		0121
0122		0123
0124		0125
0126		0127
0128		0129
012A		012B
012C		012D
012E		012F
0132		0133
0134		0135
0136		0137
0139		013A
013B		013C
013D		013E
013F		0140
0141		0142
0143		0144
0145		0146
0147		0148
014A		014B
014C		014D
014E		014F
0150		0151
0152		0153
0154		0155
0156		0157
0158		0159
015A		015B
015C		015D
015E		015F
0160		0161
0162		0163
0164		0165
0166		0167
0168		0169
016A		016B
016C		016D
016E		016F
0170		0171
0172		0173
0174		0175
0176		0177
0178		00FF
0179		017A
017B		017C
017D		017E
017F		0073
0181		0253
0182		0183
0184		0185
0186		0254
0187		0188
0189		0256
018A		0257
018B		018C
018E		01DD
018F		0259
0190		025B
0191		0192
0193		0260
0194		0263
0196		0269
0197		0268
0198		0199
019C		026F
019D		0272
019F		0275
01A0		01A1
01A2		01A3
01A4		01A5
01A6		0280
01A7		01A8
01A9		0283
01AC		01AD
01AE		0288
01AF		01B0
01B1		028A
01B2		028B
01B3		01B4
01B5		01B6
01B7		0292
01B8		01B9
01BC		01BD
01C4		01C6
01C5		01C6
01C7		01C9
01C8		01C9
01CA		01CC
01CB		01CC
01CD		01CE
01CF		01D0
01D1		01D2
01D3		01D4
01D5		01D6
01D7		01D8
01D9		01DA
01DB		01DC
01DE		01DF
01E0		01E1
01E2		01E3
01E4		01E5
01E6		01E7
01E8		01E9
01EA		01EB
01EC		01ED
01EE		01EF
01F1		01F3
01F2		01F3
01F4		01F5
01F6		0195
01F7		01BF
01F8		01F9
01FA		01FB
01FC		01FD
01FE		01FF
0200		0201
0202		0203
0204		0205
0206		0207
0208		0209
020A		020B
020C		020D
020E		020F
0210		0211
0212		0213
0214		0215
0216		0217
0218		0219
021A		021B
021C		021D
021E		021F
0220		019E
0222		0223
0224		0225
0226		0227
0228		0229
022A		022B
022C		022D
022E		022F
0230		0231
0232		0233
023A		2C65
023B		023C
023D		019A
023E		2C66
0241		0242
0243		0180
0244		0289
0245		028C
0246		0247
0248		0249
024A		024B
024C		024D
024E		024F
0345		03B9
0370		0371
0372		0373
0376		0377
037F		03F3
0386		03AC
0388		03AD
0389		03AE
038A		03AF
038C		03CC
038E		03CD
038F		03CE
0391		03B1
0392		03B2
0393		03B3
0394		03B4
0395		03B5
0396		03B6
0397		03B7
0398		03B8
0399		03B9
039A		03BA
039B		03BB
039C		03BC
039D		03BD
039E		03BE
039F		03BF
03A0		03C0
03A1		03C1
03A3		03C3
03A4		03C4
03A5		03C5
03A6		03C6
03A7		03C7
03A8		03C8
03A9		03C9
03AA		03CA
03AB		03CB
03C2		03C3
03CF		03D7
03D0		03B2
03D1		03B8
03D5		03C6
03D6		03C0
03D8		03D9
03DA		03DB
03DC		03DD
03DE		03DF
03E0		03E1
03E2		03E3
03E4		03E5
03E6		03E7
03E8		03E9
03EA		03EB
03EC		03ED
03EE		03EF
03F0		03BA
03F1		03C1
03F4		03B8
03F5		03B5
03F7		03F8
03F9		03F2
03FA		03FB
03FD		037B
03FE		037C
03FF		037D
0400		0450
0401		0451
0402		0452
0403		0453
0404		0454
0405		0455
0406		0456
0407		0457
0408		0458
0409		0459
040A		045A
040B		045B
040C		045C
040D		045D
040E		045E
040F		045F
0410		0430
0411		0431
0412		0432
0413		0433
0414		0434
0415		0435
0416		0436
0417		0437
0418		0438
0419		0439
041A		043A
041B		043B
041C		043C
041D		043D
041E		043E
041F		043F
0420		0440
0421		0441
0422		0442
0423		0443
0424		0444
0425		0445
0426		0446
0427		0447
0428		0448
0429		0449
042A		044A
042B		044B
042C		044C
042D		044D
042E		044E
042F		044F
0460		0461
0462		0463
0464		0465
0466		0467
0468		0469
046A		046B
046C		046D
046E		046F
0470		0471
0472		0473
0474		0475
0476		0477
0478		0479
047A		047B
047C		047D
047E		047F
0480		0481
048A		048B
048C		048D
048E		048F
0490		0491
0492		0493
0494		0495
0496		0497
0498		0499
049A		049B
049C		049D
049E		049F
04A0		04A1
04A2		04A3
04A4		04A5
04A6		04A7
04A8		04A9
04AA		04AB
04AC		04AD
04AE		04AF
04B0		04B1
04B2		04B3
04B4		04B5
04B6		04B7
04B8		04B9
04BA		04BB
04BC		04BD
04BE		04BF
04C0		04CF
04C1		04C2
04C3		04C4
04C5		04C6
04C7		04C8
04C9		04CA
04CB		04CC
04CD		04CE
04D0		04D1
04D2		04D3
04D4		04D5
04D6		04D7
04D8		04D9
04DA		04DB
04DC		04DD
04DE		04DF
04E0		04E1
04E2		04E3
04E4		04E5
04E6		04E7
04E8		04E9
04EA		04EB
04EC		04ED
04EE		04EF
04F0		04F1
04F2		04F3
04F4		04F5
04F6		04F7
04F8		04F9
04FA		04FB
04FC		04FD
04FE		04FF
0500		0501
0502		0503
0504		0505
0506		0507
0508		0509
050A		050B
050C		050D
050E		050F
0510		0511
0512		0513
0514		0515
0516		0517
0518		0519
051A		051B
051C		051D
051E		051F
0520		0521
0522		0523
0524		0525
0526		0527
0528		0529
052A		052B
052C		052D
052E		052F
0531		0561
0532		0562
0533		0563
0534		0564
0535		0565
0536		0566
0537		0567
0538		0568
0539		0569
053A		056A
053B		056B
053C		056C
053D		056D
053E		056E
053F		056F
0540		0570
0541		0571
0542		0572
0543		0573
0544		0574
0545		0575
0546		0576
0547		0577
0548		0578
0549		0579
054A		057A
054B		057B
054C		057C
054D		057D
054E		057E
054F		057F
0550		0580
0551		0581
0552		0582
0553		0583
0554		0584
0555		0585
0556		0586
10A0		2D00
10A1		2D01
10A2		2D02
10A3		2D03
10A4		2D04
10A5		2D05
10A6		2D06
10A7		2D07
10A8		2D08
10A9		2D09
10AA		2D0A
10AB		2D0B
10AC		2D0C
10AD		2D0D
10AE		2D0E
10AF		2D0F
10B0		2D10
10B1		2D11
10B2		2D12
10B3		2D13
10B4		2D14
10B5		2D15
10B6		2D16
10B7		2D17
10B8		2D18
10B9		2D19
10BA		2D1A
10BB		2D1B
10BC		2D1C
10BD		2D1D
10BE		2D1E
10BF		2D1F
10C0		2D20
10C1		2D21
10C2		2D22
10C3		2D23
10C4		2D24
10C5		2D25
10C7		2D27
10CD		2D2D
13F8		13F0
13F9		13F1
13FA		13F2
13FB		13F3
13FC		13F4
13FD		13F5
1E00		1E01
1E02		1E03
1E04		1E05
1E06		1E07
1E08		1E09
1E0A		1E0B
1E0C		1E0D
1E0E		1E0F
1E10		1E11
1E12		1E13
1E14		1E15
1E16		1E17
1E18		1E19
1E1A		1E1B
1E1C		1E1D
1E1E		1E1F
1E20		1E21
1E22		1E23
1E24		1E25
1E26		1E27
1E28		1E29
1E2A		1E2B
1E2C		1E2D
1E2E		1E2F
1E30		1E31
1E32		1E33
1E34		1E35
1E36		1E37
1E38		1E39
1E3A		1E3B
1E3C		1E3D
1E3E		1E3F
1E40		1E41
1E42		1E43
1E44		1E45
1E46		1E47
1E48		1E49
1E4A		1E4B
1E4C		1E4D
1E4E		1E4F
1E50		1E51
1E52		1E53
1E54		1E55
1E56		1E57
1E58		1E59
1E5A		1E5B
1E5C		1E5D
1E5E		1E5F
1E60		1E61
1E62		1E63
1E64		1E65
1E66		1E67
1E68		1E69
1E6A		1E6B
1E6C		1E6D
1E6E		1E6F
1E70		1E71
1E72		1E73
1E74		1E75
1E76		1E77
1E78		1E79
1E7A		1E7B
1E7C		1E7D
1E7E		1E7F
1E80		1E81
1E82		1E83
1E84		1E85
1E86		1E87
1E88		1E89
1E8A		1E8B
1E8C		1E8D
1E8E		1E8F
1E90		1E91
1E92		1E93
1E94		1E95
1E9B		1E61
1E9E		00DF
1EA0		1EA1
1EA2		1EA3
1EA4		1EA5
1EA6		1EA7
1EA8		1EA9
1EAA		1EAB
1EAC		1EAD
1EAE		1EAF
1EB0		1EB1
1EB2		1EB3
1EB4		1EB5
1EB6		1EB7
1EB8		1EB9
1EBA		1EBB
1EBC		1EBD
1EBE		1EBF
1EC0		1EC1
1EC2		1EC3
1EC4		1EC5
1EC6		1EC7
1EC8		1EC9
1ECA		1ECB
1ECC		1ECD
1ECE		1ECF
1ED0		1ED1
1ED2		1ED3
1ED4		1ED5
1ED6		1ED7
1ED8		1ED9
1EDA		1EDB
1EDC		1EDD
1EDE		1EDF
1EE0		1EE1
1EE2		1EE3
1EE4		1EE5
1EE6		1EE7
1EE8		1EE9
1EEA		1EEB
1EEC		1EED
1EEE		1EEF
1EF0		1EF1
1EF2		1EF3
1EF4		1EF5
1EF6		1EF7
1EF8		1EF9
1EFA		1EFB
1EFC		1EFD
1EFE		1EFF
1F08		1F00
1F09		1F01
1F0A		1F02
1F0B		1F03
1F0C		1F04
1F0D		1F05
1F0E		1F06
1F0F		1F07
1F18		1F10
1F19		1F11
1F1A		1F12
1F1B		1F13
1F1C		1F14
1F1D		1F15
1F28		1F20
1F29		1F21
1F2A		1F22
1F2B		1F23
1F2C		1F24
1F2D		1F25
1F2E		1F26
1F2F		1F27
1F38		1F30
1F39		1F31
1F3A		1F32
1F3B		1F33
1F3C		1F34
1F3D		1F35
1F3E		1F36
1F3F		1F37
1F48		1F40
1F49		1F41
1F4A		1F42
1F4B		1F43
1F4C		1F44
1F4D		1F45
1F59		1F51
1F5B		1F53
1F5D		1F55
1F5F		1F57
1F68		1F60
1F69		1F61
1F6A		1F62
1F6B		1F63
1F6C		1F64
1F6D		1F65
1F6E		1F66
1F6F		1F67
1F88		1F80
1F89		1F81
1F8A		1F82
1F8B		1F83
1F8C		1F84
1F8D		1F85
1F8E		1F86
1F8F		1F87
1F98		1F90
1F99		1F91
1F9A		1F92
1F9B		1F93
1F9C		1F94
1F9D		1F95
1F9E		1F96
1F9F		1F97
1FA8		1FA0
1FA9		1FA1
1FAA		1FA2
1FAB		1FA3
1FAC		1FA4
1FAD		1FA5
1FAE		1FA6
1FAF		1FA7
1FB8		1FB0
1FB9		1FB1
1FBA		1F70
1FBB		1F71
1FBC		1FB3
1FBE		03B9
1FC8		1F72
1FC9		1F73
1FCA		1F74
1FCB		1F75
1FCC		1FC3
1FD8		1FD0
1FD9		1FD1
1FDA		1F76
1FDB		1F77
1FE8		1FE0
1FE9		1FE1
1FEA		1F7A
1FEB		1F7B
1FEC		1FE5
1FF8		1F78
1FF9		1F79
1FFA		1F7C
1FFB		1F7D
1FFC		1FF3
2126		03C9
212A		006B
212B		00E5
2132		214E
2160		2170
2161		2171
2162		2172
2163		2173
2164		2174
2165		2175
2166		2176
2167		2177
2168		2178
2169		2179
216A		217A
216B		217B
216C		217C
216D		217D
216E		217E
216F		217F
2183		2184
24B6		24D0
24B7		24D1
24B8		24D2
24B9		24D3
24BA		24D4
24BB		24D5
24BC		24D6
24BD		24D7
24BE		24D8
24BF		24D9
24C0		24DA
24C1		24DB
24C2		24DC
24C3		24DD
24C4		24DE
24C5		24DF
24C6		24E0
24C7		24E1
24C8		24E2
24C9		24E3
24CA		24E4
24CB		24E5
24CC		24E6
24CD		24E7
24CE		24E8
24CF		24E9
2C00		2C30
2C01		2C31
2C02		2C32
2C03		2C33
2C04		2C34
2C05		2C35
2C06		2C36
2C07		2C37
2C08		2C38
2C09		2C39
2C0A		2C3A
2C0B		2C3B
2C0C		2C3C
2C0D		2C3D
2C0E		2C3E
2C0F		2C3F
2C10		2C40
2C11		2C41
2C12		2C42
2C13		2C43
2C14		2C44
2C15		2C45
2C16		2C46
2C17		2C47
2C18		2C48
2C19		2C49
2C1A		2C4A
2C1B		2C4B
2C1C		2C4C
2C1D		2C4D
2C1E		2C4E
2C1F		2C4F
2C20		2C50
2C21		2C51
2C22		2C52
2C23		2C53
2C24		2C54
2C25		2C55
2C26		2C56
2C27		2C57
2C28		2C58
2C29		2C59
2C2A		2C5A
2C2B		2C5B
2C2C		2C5C
2C2D		2C5D
2C2E		2C5E
2C60		2C61
2C62		026B
2C63		1D7D
2C64		027D
2C67		2C68
2C69		2C6A
2C6B		2C6C
2C6D		0251
2C6E		0271
2C6F		0250
2C70		0252
2C72		2C73
2C75		2C76
2C7E		023F
2C7F		0240
2C80		2C81
2C82		2C83
2C84		2C85
2C86		2C87
2C88		2C89
2C8A		2C8B
2C8C		2C8D
2C8E		2C8F
2C90		2C91
2C92		2C93
2C94		2C95
2C96		2C97
2C98		2C99
2C9A		2C9B
2C9C		2C9D
2C9E		2C9F
2CA0		2CA1
2CA2		2CA3
2CA4		2CA5
2CA6		2CA7
2CA8		2CA9
2CAA		2CAB
2CAC		2CAD
2CAE		2CAF
2CB0		2CB1
2CB2		2CB3
2CB4		2CB5
2CB6		2CB7
2CB8		2CB9
2CBA		2CBB
2CBC		2CBD
2CBE		2CBF
2CC0		2CC1
2CC2		2CC3
2CC4		2CC5
2CC6		2CC7
2CC8		2CC9
2CCA		2CCB
2CCC		2CCD
2CCE		2CCF
2CD0		2CD1
2CD2		2CD3
2CD4		2CD5
2CD6		2CD7
2CD8		2CD9
2CDA		2CDB
2CDC		2CDD
2CDE		2CDF
2CE0		2CE1
2CE2		2CE3
2CEB		2CEC
2CED		2CEE
2CF2		2CF3
A640		A641
A642		A643
A644		A645
A646		A647
A648		A649
A64A		A64B
A64C		A64D
A64E		A64F
A650		A651
A652		A653
A654		A655
A656		A657
A658		A659
A65A		A65B
A65C		A65D
A65E		A65F
A660		A661
A662		A663
A664		A665
A666		A667
A668		A669
A66A		A66B
A66C		A66D
A680		A681
A682		A683
A684		A685
A686		A687
A688		A689
A68A		A68B
A68C		A68D
A68E		A68F
A690		A691
A692		A693
A694		A695
A696		A697
A698		A699
A69A		A69B
A722		A723
A724		A725
A726		A727
A728		A729
A72A		A72B
A72C		A72D
A72E		A72F
A732		A733
A734		A735
A736		A737
A738		A739
A73A		A73B
A73C		A73D
A73E		A73F
A740		A741
A742		A743
A744		A745
A746		A747
A748		A749
A74A		A74B
A74C		A74D
A74E		A74F
A750		A751
A752		A753
A754		A755
A756		A757
A758		A759
A75A		A75B
A75C		A75D
A75E		A75F
A760		A761
A762		A763
A764		A765
A766		A767
A768		A769
A76A		A76B
A76C		A76D
A76E		A76F
A779		A77A
A77B		A77C
A77D		1D79
A77E		A77F
A780		A781
A782		A783
A784		A785
A786		A787
A78B		A78C
A78D		0265
A790		A791
A792		A793
A796		A797
A798		A799
A79A		A79B
A79C		A79D
A79E		A79F
A7A0		A7A1
A7A2		A7A3
A7A4		A7A5
A7A6		A7A7
A7A8		A7A9
A7AA		0266
A7AB		025C
A7AC		0261
A7AD		026C
A7B0		029E
A7B1		0287
A7B2		029D
A7B3		AB53
A7B4		A7B5
A7B6		A7B7
AB70		13A0
AB71		13A1
AB72		13A2
AB73		13A3
AB74		13A4
AB75		13A5
AB76		13A6
AB77		13A7
AB78		13A8
AB79		13A9
AB7A		13AA
AB7B		13AB
AB7C		13AC
AB7D		13AD
AB7E		13AE
AB7F		13AF
AB80		13B0
AB81		13B1
AB82		13B2
AB83		13B3
AB84		13B4
AB85		13B5
AB86		13B6
AB87		13B7
AB88		13B8
AB89		13B9
AB8A		13BA
AB8B		13BB
AB8C		13BC
AB8D		13BD
AB8E		13BE
AB8F		13BF
AB90		13C0
AB91		13C1
AB92		13C2
AB93		13C3
AB94		13C4
AB95		13C5
AB96		13C6
AB97		13C7
AB98		13C8
AB99		13C9
AB9A		13CA
AB9B		13CB
AB9C		13CC
AB9D		13CD
AB9E		13CE
AB9F		13CF
ABA0		13D0
ABA1		13D1
ABA2		13D2
ABA3		13D3
ABA4		13D4
ABA5		13D5
ABA6		13D6
ABA7		13D7
ABA8		13D8
ABA9		13D9
ABAA		13DA
ABAB		13DB
ABAC		13DC
ABAD		13DD
ABAE		13DE
ABAF		13DF
ABB0		13E0
ABB1		13E1
ABB2		13E2
ABB3		13E3
ABB4		13E4
ABB5		13E5
ABB6		13E6
ABB7		13E7
ABB8		13E8
ABB9		13E9
ABBA		13EA
ABBB		13EB
ABBC		13EC
ABBD		13ED
ABBE		13EE
ABBF		13EF
FF21		FF41
FF22		FF42
FF23		FF43
FF24		FF44
FF25		FF45
FF26		FF46
FF27		FF47
FF28		FF48
FF29		FF49
FF2A		FF4A
FF2B		FF4B
FF2C		FF4C
FF2D		FF4D
FF2E		FF4E
FF2F		FF4F
FF30		FF50
FF31		FF51
FF32		FF52
FF33		FF53
FF34		FF54
FF35		FF55
FF36		FF56
FF37		FF57
FF38		FF58
FF39		FF59
FF3A		FF5A
10400		10428
10401		10429
10402		1042A
10403		1042B
10404		1042C
10405		1042D
10406		1042E
10407		1042F
10408		10430
10409		10431
1040A		10432
1040B		10433
1040C		10434
1040D		10435
1040E		10436
1040F		10437
10410		10438
10411		10439
10412		1043A
10413		1043B
10414		1043C
10415		1043D
10416		1043E
10417		1043F
10418		10440
10419		10441
1041A		10442
1041B		10443
1041C		10444
1041D		10445
1041E		10446
1041F		10447
10420		10448
10421		10449
10422		1044A
10423		1044B
10424		1044C
10425		1044D
10426		1044E
10427		1044F
10C80		10CC0
10C81		10CC1
10C82		10CC2
10C83		10CC3
10C84		10CC4
10C85		10CC5
10C86		10CC6
10C87		10CC7
10C88		10CC8
10C89		10CC9
10C8A		10CCA
10C8B		10CCB
10C8C		10CCC
10C8D		10CCD
10C8E		10CCE
10C8F		10CCF
10C90		10CD0
10C91		10CD1
10C92		10CD2
10C93		10CD3
10C94		10CD4
10C95		10CD5
10C96		10CD6
10C97		10CD7
10C98		10CD8
10C99		10CD9
10C9A		10CDA
10C9B		10CDB
10C9C		10CDC
10C9D		10CDD
10C9E		10CDE
10C9F		10CDF
10CA0		10CE0
10CA1		10CE1
10CA2		10CE2
10CA3		10CE3
10CA4		10CE4
10CA5		10CE5
10CA6		10CE6
10CA7		10CE7
10CA8		10CE8
10CA9		10CE9
10CAA		10CEA
10CAB		10CEB
10CAC		10CEC
10CAD		10CED
10CAE		10CEE
10CAF		10CEF
10CB0		10CF0
10CB1		10CF1
10CB2		10CF2
118A0		118C0
118A1		118C1
118A2		118C2
118A3		118C3
118A4		118C4
118A5		118C5
118A6		118C6
118A7		118C7
118A8		118C8
118A9		118C9
118AA		118CA
118AB		118CB
118AC		118CC
118AD		118CD
118AE		118CE
118AF		118CF
118B0		118D0
118B1		118D1
118B2		118D2
118B3		118D3
118B4		118D4
118B5		118D5
118B6		118D6
118B7		118D7
118B8		118D8
118B9		118D9
118BA		118DA
118BB		118DB
118BC		118DC
118BD		118DD
118BE		118DE
118BF		118DF
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToInPC'}{'format'} = 's'; # string
$utf8::SwashInfo{'ToInPC'}{'missing'} = 'NA';

return <<'END';
900	902	Top
903		Right
93A		Top
93B		Right
93C		Bottom
93E		Right
93F		Left
940		Right
941	944	Bottom
945	948	Top
949	94C	Right
94D		Bottom
94E		Left
94F		Right
951		Top
952		Bottom
953	955	Top
956	957	Bottom
962	963	Bottom
981		Top
982	983	Right
9BC		Bottom
9BE		Right
9BF		Left
9C0		Right
9C1	9C4	Bottom
9C7	9C8	Left
9CB	9CC	Left_And_Right
9CD		Bottom
9D7		Right
9E2	9E3	Bottom
A01	A02	Top
A03		Right
A3C		Bottom
A3E		Right
A3F		Left
A40		Right
A41	A42	Bottom
A47	A48	Top
A4B	A4C	Top
A4D		Bottom
A70	A71	Top
A75		Bottom
A81	A82	Top
A83		Right
ABC		Bottom
ABE		Right
ABF		Left
AC0		Right
AC1	AC4	Bottom
AC5		Top
AC7	AC8	Top
AC9		Top_And_Right
ACB	ACC	Right
ACD		Bottom
AE2	AE3	Bottom
B01		Top
B02	B03	Right
B3C		Bottom
B3E		Right
B3F		Top
B40		Right
B41	B44	Bottom
B47		Left
B48		Top_And_Left
B4B		Left_And_Right
B4C		Top_And_Left_And_Right
B4D		Bottom
B56		Top
B57		Top_And_Right
B62	B63	Bottom
B82		Top
BBE	BBF	Right
BC0		Top
BC1	BC2	Right
BC6	BC8	Left
BCA	BCC	Left_And_Right
BCD		Top
BD7		Right
C00		Top
C01	C03	Right
C3E	C40	Top
C41	C44	Right
C46	C47	Top
C48		Top_And_Bottom
C4A	C4D	Top
C55		Top
C56		Bottom
C62	C63	Bottom
C81		Top
C82	C83	Right
CBC		Bottom
CBE		Right
CBF		Top
CC0		Top_And_Right
CC1	CC4	Right
CC6		Top
CC7	CC8	Top_And_Right
CCA	CCB	Top_And_Right
CCC	CCD	Top
CD5	CD6	Right
CE2	CE3	Bottom
D01		Top
D02	D03	Right
D3E	D42	Right
D43	D44	Bottom
D46	D48	Left
D4A	D4C	Left_And_Right
D4D		Top
D57		Right
D62	D63	Bottom
D82	D83	Right
DCA		Top
DCF	DD1	Right
DD2	DD3	Top
DD4		Bottom
DD6		Bottom
DD8		Right
DD9		Left
DDA		Top_And_Left
DDB		Left
DDC		Left_And_Right
DDD		Top_And_Left_And_Right
DDE		Left_And_Right
DDF		Right
DF2	DF3	Right
E30		Right
E31		Top
E32	E33	Right
E34	E37	Top
E38	E3A	Bottom
E40	E44	Visual_Order_Left
E45		Right
E47	E4E	Top
EB0		Right
EB1		Top
EB2	EB3	Right
EB4	EB7	Top
EB8	EB9	Bottom
EBB		Top
EBC		Bottom
EC0	EC4	Visual_Order_Left
EC8	ECD	Top
F18	F19	Bottom
F35		Bottom
F37		Bottom
F39		Top
F3E		Right
F3F		Left
F71		Bottom
F72		Top
F73		Top_And_Bottom
F74	F75	Bottom
F76	F79	Top_And_Bottom
F7A	F7E	Top
F7F		Right
F80		Top
F81		Top_And_Bottom
F82	F83	Top
F84		Bottom
F86	F87	Top
F8D	F97	Bottom
F99	FBC	Bottom
FC6		Bottom
102B	102C	Right
102D	102E	Top
102F	1030	Bottom
1031		Left
1032	1036	Top
1037		Bottom
1038		Right
103A		Top
103B		Right
103D	103E	Bottom
1056	1057	Right
1058	1059	Bottom
105E	1060	Bottom
1062	1064	Right
1067	106D	Right
1071	1074	Top
1082		Bottom
1083		Right
1084		Left
1085	1086	Top
1087	108C	Right
108D		Bottom
108F		Right
109A	109C	Right
109D		Top
1712		Top
1713	1714	Bottom
1732		Top
1733	1734	Bottom
1752		Top
1753		Bottom
1772		Top
1773		Bottom
17B6		Right
17B7	17BA	Top
17BB	17BD	Bottom
17BE		Top_And_Left
17BF		Top_And_Left_And_Right
17C0		Left_And_Right
17C1	17C3	Left
17C4	17C5	Left_And_Right
17C6		Top
17C7	17C8	Right
17C9	17D1	Top
17D3		Top
17DD		Top
1920	1921	Top
1922		Bottom
1923	1924	Right
1925	1926	Top_And_Right
1927	1928	Top
1929	192B	Right
1930	1931	Right
1932		Bottom
1933	1938	Right
1939		Bottom
193A		Top
193B		Bottom
19B0	19B4	Right
19B5	19B7	Visual_Order_Left
19B8	19B9	Right
19BA		Visual_Order_Left
19BB	19C0	Right
19C8	19C9	Right
1A17		Top
1A18		Bottom
1A19		Left
1A1A		Right
1A1B		Top
1A55		Left
1A56		Bottom
1A57		Right
1A58	1A5A	Top
1A5B	1A5E	Bottom
1A61		Right
1A62		Top
1A63	1A64	Right
1A65	1A68	Top
1A69	1A6A	Bottom
1A6B		Top
1A6C		Bottom
1A6D		Right
1A6E	1A72	Left
1A73	1A7C	Top
1A7F		Bottom
1B00	1B03	Top
1B04		Right
1B34		Top
1B35		Right
1B36	1B37	Top
1B38	1B3A	Bottom
1B3B		Bottom_And_Right
1B3C		Top_And_Bottom
1B3D		Top_And_Bottom_And_Right
1B3E	1B3F	Left
1B40	1B41	Left_And_Right
1B42		Top
1B43		Top_And_Right
1B44		Right
1B6B		Top
1B6C		Bottom
1B6D	1B73	Top
1B80	1B81	Top
1B82		Right
1BA1		Right
1BA2	1BA3	Bottom
1BA4		Top
1BA5		Bottom
1BA6		Left
1BA7		Right
1BA8	1BA9	Top
1BAA		Right
1BAC	1BAD	Bottom
1BE6		Top
1BE7		Right
1BE8	1BE9	Top
1BEA	1BEC	Right
1BED		Top
1BEE		Right
1BEF	1BF1	Top
1BF2	1BF3	Right
1C24	1C26	Right
1C27	1C28	Left
1C29		Top_And_Left
1C2A	1C2B	Right
1C2C		Bottom
1C2D	1C33	Top
1C34	1C35	Left
1C36		Top
1C37		Bottom
1CD0	1CD2	Top
1CD4		Overstruck
1CD5	1CD9	Bottom
1CDA	1CDB	Top
1CDC	1CDF	Bottom
1CE0		Top
1CE1		Right
1CE2	1CE8	Overstruck
1CED		Bottom
1CF4		Top
A806		Top
A80B		Top
A823	A824	Right
A825		Bottom
A826		Top
A827		Right
A880	A881	Right
A8B4	A8C3	Right
A8C4		Bottom
A8E0	A8F1	Top
A92B	A92D	Bottom
A947	A949	Bottom
A94A		Top
A94B	A94E	Bottom
A94F	A951	Top
A952	A953	Right
A980	A982	Top
A983		Right
A9B3		Top
A9B4	A9B5	Right
A9B6	A9B7	Top
A9B8	A9B9	Bottom
A9BA	A9BB	Left
A9BC		Top
A9BD	A9BF	Right
A9C0		Bottom_And_Right
A9E5		Top
AA29	AA2C	Top
AA2D		Bottom
AA2E		Top
AA2F	AA30	Left
AA31		Top
AA32		Bottom
AA33		Right
AA34		Left
AA35	AA36	Bottom
AA43		Top
AA4C		Top
AA4D		Right
AA7B		Right
AA7C		Top
AA7D		Right
AAB0		Top
AAB1		Right
AAB2	AAB3	Top
AAB4		Bottom
AAB5	AAB6	Visual_Order_Left
AAB7	AAB8	Top
AAB9		Visual_Order_Left
AABA		Right
AABB	AABC	Visual_Order_Left
AABD		Right
AABE	AABF	Top
AAC1		Top
AAEB		Left
AAEC		Bottom
AAED		Top
AAEE		Left
AAEF		Right
AAF5		Right
ABE3	ABE4	Right
ABE5		Top
ABE6	ABE7	Right
ABE8		Bottom
ABE9	ABEA	Right
ABEC		Right
ABED		Bottom
10A01		Overstruck
10A02	10A03	Bottom
10A05		Top
10A06		Overstruck
10A0C	10A0E	Bottom
10A0F		Top
10A38		Top
10A39	10A3A	Bottom
11000		Right
11001		Top
11002		Right
11038	1103B	Top
1103C	11041	Bottom
11042	11046	Top
11080	11081	Top
11082		Right
110B0		Right
110B1		Left
110B2		Right
110B3	110B4	Bottom
110B5	110B6	Top
110B7	110B8	Right
110B9	110BA	Bottom
11100	11102	Top
11127	11129	Top
1112A	1112B	Bottom
1112C		Left
1112D		Top
1112E	1112F	Top_And_Bottom
11130		Top
11131	11132	Bottom
11134		Top
11173		Bottom
11180	11181	Top
11182		Right
111B3		Right
111B4		Left
111B5		Right
111B6	111BB	Bottom
111BC	111BE	Top
111BF		Top_And_Right
111C0		Right
111CB		Top
111CC		Bottom
1122C	1122E	Right
1122F		Bottom
11230	11231	Top
11232	11233	Top_And_Right
11234		Top
11235		Right
11236	11237	Top
112DF		Top
112E0		Right
112E1		Left
112E2		Right
112E3	112E4	Bottom
112E5	112E8	Top
112E9	112EA	Bottom
11301		Top
11302	11303	Right
1133E	1133F	Right
11340		Top
11341	11344	Right
11347	11348	Left
1134B	1134C	Left_And_Right
1134D		Right
11357		Right
11362	11363	Right
11366	1136C	Top
11370	11374	Top
114B0		Right
114B1		Left
114B2		Right
114B3	114B8	Bottom
114B9		Left
114BA		Top
114BB		Top_And_Left
114BC		Left_And_Right
114BD		Right
114BE		Left_And_Right
114BF	114C0	Top
114C1		Right
114C2	114C3	Bottom
115AF		Right
115B0		Left
115B1		Right
115B2	115B5	Bottom
115B8		Left
115B9		Top_And_Left
115BA		Left_And_Right
115BB		Top_And_Left_And_Right
115BC	115BD	Top
115BE		Right
115BF	115C0	Bottom
115DC	115DD	Bottom
11630	11632	Right
11633	11638	Bottom
11639	1163A	Top
1163B	1163C	Right
1163D		Top
1163E		Right
1163F		Bottom
11640		Top
116AB		Top
116AC		Right
116AD		Top
116AE		Left
116AF		Right
116B0	116B1	Bottom
116B2	116B5	Top
116B6		Right
116B7		Bottom
1171D		Bottom
1171F		Top
11720	11721	Right
11722	11723	Top
11724	11725	Bottom
11726		Left
11727		Top
11728		Bottom
11729	1172B	Top
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToIsc'}{'format'} = 'd'; # single decimal digit
$utf8::SwashInfo{'ToIsc'}{'missing'} = ''; # code point maps to the null string

return <<'END';
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.



# The name this swash is to be known by, with the format of the mappings in
# the main body of the table, and what all code points missing from this file
# map to.
$utf8::SwashInfo{'ToJg'}{'format'} = 's'; # string
$utf8::SwashInfo{'ToJg'}{'missing'} = 'No_Joining_Group';

return <<'END';
620		Yeh
622	623	Alef
624		Waw
625		Alef
626		Yeh
627		Alef
628		Beh
629		Teh_Marbuta
62A	62B	Beh
62C	62E	Hah
62F	630	Dal
631	632	Reh
633	634	Seen
635	636	Sad
637	638	Tah
639	63A	Ain
63B	63C	Gaf
63D	63F	Farsi_Yeh
641		Feh
642		Qaf
643		Kaf
644		Lam
645		Meem
646		Noon
647		Heh
648		Waw
649	64A	Yeh
66E		Beh
66F		Qaf
671	673	Alef
675		Alef
676	677	Waw
678		Yeh
679	680	Beh
681	687	Hah
688	690	Dal
691	699	Reh
69A	69C	Seen
69D	69E	Sad
69F		Tah
6A0		Ain
6A1	6A6	Feh
6A7	6A8	Qaf
6A9		Gaf
6AA		Swash_Kaf
6AB		Gaf
6AC	6AE	Kaf
6AF	6B4	Gaf
6B5	6B8	Lam
6B9	6BC	Noon
6BD		Nya
6BE		Knotted_Heh
6BF		Hah
6C0		Teh_Marbuta
6C1	6C2	Heh_Goal
6C3		Teh_Marbuta_Goal
6C4	6CB	Waw
6CC		Farsi_Yeh
6CD		Yeh_With_Tail
6CE		Farsi_Yeh
6CF		Waw
6D0	6D1	Yeh
6D2	6D3	Yeh_Barree
6D5		Teh_Marbuta
6EE		Dal
6EF		Reh
6FA		Seen
6FB		Sad
6FC		Ain
6FF		Knotted_Heh
710		Alaph
712		Beth
713	714	Gamal
715	716	Dalath_Rish
717		He
718		Syriac_Waw
719		Zain
71A		Heth
71B	71C	Teth
71D		Yudh
71E		Yudh_He
71F		Kaph
720		Lamadh
721		Mim
722		Nun
723		Semkath
724		Final_Semkath
725		E
726		Pe
727		Reversed_Pe
728		Sadhe
729		Qaph
72A		Dalath_Rish
72B		Shin
72C		Taw
72D		Beth
72E		Gamal
72F		Dalath_Rish
74D		Zhain
74E		Khaph
74F		Fe
750	756	Beh
757	758	Hah
759	75A	Dal
75B		Reh
75C		Seen
75D	75F	Ain
760	761	Feh
762	764	Gaf
765	766	Meem
767	769	Noon
76A		Lam
76B	76C	Reh
76D		Seen
76E	76F	Hah
770		Seen
771		Reh
772		Hah
773	774	Alef
775	776	Farsi_Yeh
777		Yeh
778	779	Waw
77A	77B	Burushaski_Yeh_Barree
77C		Hah
77D	77E	Seen
77F		Kaf
8A0	8A1	Beh
8A2		Hah
8A3		Tah
8A4		Feh
8A5		Qaf
8A6		Lam
8A7		Meem
8A8	8A9	Yeh
8AA		Reh
8AB		Waw
8AC		Rohingya_Yeh
8AE		Dal
8AF		Sad
8B0		Gaf
8B1		Straight_Waw
8B2		Reh
8B3		Ain
8B4		Kaf
10AC0		Manichaean_Aleph
10AC1	10AC2	Manichaean_Beth
10AC3	10AC4	Manichaean_Gimel
10AC5		Manichaean_Daleth
10AC7		Manichaean_Waw
10AC9	10ACA	Manichaean_Zayin
10ACD		Manichaean_Heth
10ACE		Manichaean_Teth
10ACF		Manichaean_Yodh
10AD0	10AD2	Manichaean_Kaph
10AD3		Manichaean_Lamedh
10AD4		Manichaean_Dhamedh
10AD5		Manichaean_Thamedh
10AD6		Manichaean_Mem
10AD7		Manichaean_Nun
10AD8		Manichaean_Samekh
10AD9	10ADA	Manichaean_Ayin
10ADB	10ADC	Manichaean_Pe
10ADD		Manichaean_Sadhe
10ADE	10AE0	Manichaean_Qoph
10AE1		Manichaean_Resh
10AE4		Manichaean_Taw
10AEB		Manichaean_One
10AEC		Manichaean_Five
10AED		Manichaean_Ten
10AEE		Manichaean_Twenty
10AEF		Manichaean_Hundred
END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!


# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.


# This file is for the use of utf8_heavy.pl and Unicode::UCD

# Maps Unicode (not Perl single-form extensions) property names in loose
# standard form to their corresponding standard names
%utf8::loose_property_name_of = (
'age' => 'age',
'ahex' => 'ahex',
'alpha' => 'alpha',
'alphabetic' => 'alpha',
'asciihexdigit' => 'ahex',
'bc' => 'bc',
'bidic' => 'bidic',
'bidiclass' => 'bc',
'bidicontrol' => 'bidic',
'bidim' => 'bidim',
'bidimirrored' => 'bidim',
'bidipairedbrackettype' => 'bpt',
'blk' => 'blk',
'block' => 'blk',
'bpt' => 'bpt',
'canonicalcombiningclass' => 'ccc',
'cased' => 'cased',
'caseignorable' => 'ci',
'category' => 'gc',
'ccc' => 'ccc',
'ce' => 'ce',
'changeswhencasefolded' => 'cwcf',
'changeswhencasemapped' => 'cwcm',
'changeswhenlowercased' => 'cwl',
'changeswhennfkccasefolded' => 'cwkcf',
'changeswhentitlecased' => 'cwt',
'changeswhenuppercased' => 'cwu',
'ci' => 'ci',
'compex' => 'compex',
'compositionexclusion' => 'ce',
'cwcf' => 'cwcf',
'cwcm' => 'cwcm',
'cwkcf' => 'cwkcf',
'cwl' => 'cwl',
'cwt' => 'cwt',
'cwu' => 'cwu',
'dash' => 'dash',
'decompositiontype' => 'dt',
'defaultignorablecodepoint' => 'di',
'dep' => 'dep',
'deprecated' => 'dep',
'di' => 'di',
'dia' => 'dia',
'diacritic' => 'dia',
'dt' => 'dt',
'ea' => 'ea',
'eastasianwidth' => 'ea',
'ext' => 'ext',
'extender' => 'ext',
'fullcompositionexclusion' => 'compex',
'gc' => 'gc',
'gcb' => 'gcb',
'generalcategory' => 'gc',
'graphemebase' => 'grbase',
'graphemeclusterbreak' => 'gcb',
'graphemeextend' => 'grext',
'grbase' => 'grbase',
'grext' => 'grext',
'hangulsyllabletype' => 'hst',
'hex' => 'hex',
'hexdigit' => 'hex',
'hst' => 'hst',
'hyphen' => 'hyphen',
'idc' => 'idc',
'idcontinue' => 'idc',
'ideo' => 'ideo',
'ideographic' => 'ideo',
'ids' => 'ids',
'idsb' => 'idsb',
'idsbinaryoperator' => 'idsb',
'idst' => 'idst',
'idstart' => 'ids',
'idstrinaryoperator' => 'idst',
'in' => 'in',
'indicpositionalcategory' => 'inpc',
'indicsyllabiccategory' => 'insc',
'inpc' => 'inpc',
'insc' => 'insc',
'jg' => 'jg',
'joinc' => 'joinc',
'joincontrol' => 'joinc',
'joininggroup' => 'jg',
'joiningtype' => 'jt',
'jt' => 'jt',
'lb' => 'lb',
'linebreak' => 'lb',
'loe' => 'loe',
'logicalorderexception' => 'loe',
'lower' => 'lower',
'lowercase' => 'lower',
'math' => 'math',
'nchar' => 'nchar',
'nfcqc' => 'nfcqc',
'nfcquickcheck' => 'nfcqc',
'nfdqc' => 'nfdqc',
'nfdquickcheck' => 'nfdqc',
'nfkcqc' => 'nfkcqc',
'nfkcquickcheck' => 'nfkcqc',
'nfkdqc' => 'nfkdqc',
'nfkdquickcheck' => 'nfkdqc',
'noncharactercodepoint' => 'nchar',
'nt' => 'nt',
'numerictype' => 'nt',
'numericvalue' => 'nv',
'nv' => 'nv',
'patsyn' => 'patsyn',
'patternsyntax' => 'patsyn',
'patternwhitespace' => 'patws',
'patws' => 'patws',
'presentin' => 'in',
'qmark' => 'qmark',
'quotationmark' => 'qmark',
'radical' => 'radical',
'sb' => 'sb',
'sc' => 'sc',
'script' => 'sc',
'scriptextensions' => 'scx',
'scx' => 'scx',
'sd' => 'sd',
'sentencebreak' => 'sb',
'softdotted' => 'sd',
'space' => 'wspace',
'sterm' => 'sterm',
'term' => 'term',
'terminalpunctuation' => 'term',
'uideo' => 'uideo',
'unifiedideograph' => 'uideo',
'upper' => 'upper',
'uppercase' => 'upper',
'variationselector' => 'vs',
'vs' => 'vs',
'wb' => 'wb',
'whitespace' => 'wspace',
'wordbreak' => 'wb',
'wspace' => 'wspace',
'xidc' => 'xidc',
'xidcontinue' => 'xidc',
'xids' => 'xids',
'xidstart' => 'xids',
);

# Same, but strict names
%utf8::strict_property_name_of = (
'_perlgcb' => 'gcb',
'_perlsb' => 'sb',
);

# Gives the definitions (in the form of inversion lists) for those properties
# whose definitions aren't kept in files
@utf8::inline_definitions = (

'V0',
'V1
0',
'V2
0
1114112',
'V4
9
14
32
33',
'V6
10
14
133
134
8232
8234',
'V6
48
58
65
91
97
123',
'V4
65
91
97
123',
'V4
9
10
32
33',
'V4
0
32
127
128',
'V2
48
58',
'V2
33
127',
'V2
97
123',
'V2
32
127',
'V2
65
91',
'V2
55296
57344',
'V2
12334
12336',
'V2
119149
119150',
'V6
1454
1455
6313
6314
12331
12332',
'V2
12330
12331',
'V6
861
863
864
866
7629
7630',
'V2
837
838',
'V2
12441
12443',
'V2
7630
7631',
'V6
801
803
807
809
7632
7633',
'V2
1456
1457',
'V2
1457
1458',
'V2
1458
1459',
'V2
1459
1460',
'V2
1460
1461',
'V2
1461
1462',
'V2
1462
1463',
'V2
1463
1464',
'V4
1464
1465
1479
1480',
'V2
1465
1467',
'V2
1467
1468',
'V2
1468
1469',
'V2
1469
1470',
'V2
1471
1472',
'V2
1473
1474',
'V2
1474
1475',
'V2
64286
64287',
'V4
1611
1612
2288
2289',
'V4
1612
1613
2289
2290',
'V4
1613
1614
2290
2291',
'V4
1560
1561
1614
1615',
'V4
1561
1562
1615
1616',
'V4
1562
1563
1616
1617',
'V2
1617
1618',
'V2
1618
1619',
'V2
1648
1649',
'V2
1809
1810',
'V2
3157
3158',
'V2
3158
3159',
'V2
3640
3642',
'V2
3656
3660',
'V2
3768
3770',
'V2
3784
3788',
'V2
3953
3954',
'V6
3954
3955
3962
3966
3968
3969',
'V2
3956
3957',
'V6
48
58
65
71
97
103',
'V4
4352
4448
43360
43389',
'V4
4520
4608
55243
55292',
'V4
4448
4520
55216
55239',
'V2
13
14',
'V2
10
11',
'V2
127462
127488',
'V4
12272
12274
12276
12284',
'V2
12274
12276',
'V4
6971
6972
43456
43457',
'V2
6973
6974',
'V2
8205
8206',
'V2
8204
8205',
'V6
6512
6517
43712
43713
43714
43715',
'V2
69759
69760',
'V4
2510
2511
3450
3456',
'V4
2673
2674
70199
70200',
'V4
3660
3661
6093
6094',
'V2
2947
2948',
'V2
6089
6091',
'V2
70082
70084',
'V2
69714
69734',
'V2
3976
3981',
'V4
3313
3315
69635
69637',
'V2
3406
3407',
'V2
8204
8206',
'V6
11904
11930
11931
12020
12032
12246',
'V4
133
134
8232
8234',
'V6
6155
6158
65024
65040
917760
918000',
'V2
34
35',
'V6
11
13
133
134
8232
8234',
'V2
39
40',
'V4
8364
8365
65532
65533',
'V2
8378
8379',
'V4
1564
1565
8294
8298',
'V6
9
10
11
12
31
32',
'V2
8296
8297',
'V2
8234
8235',
'V2
8294
8295',
'V2
8237
8238',
'V2
8236
8237',
'V2
8297
8298',
'V2
8235
8236',
'V2
8295
8296',
'V2
8238
8239',
'V2
65024
65040',
'V2
19968
40960',
'V2
12272
12288',
'V2
3712
3840',
'V2
92736
92784',
'V2
1984
2048',
'V2
9280
9312',
'V2
57344
63744',
'V2
42240
42560',
'V2
71424
71488',
'V2
43520
43616',
'V2
4352
4608',
'V2
42192
42240',
'V2
93952
94112',
'V2
71168
71264',
'V2
69216
69248',
'V2
917504
917632',
'V2
3584
3712',
'V2
5120
5760',
'V2
0
128',
'V2
42656
42752',
'V2
7104
7168',
'V2
5952
5984',
'V2
880
1024',
'V2
6016
6144',
'V2
6400
6480',
'V2
119040
119296',
'V2
5760
5792',
'V2
2816
2944',
'V2
5792
5888',
'V2
6480
6528',
'V2
71296
71376',
'V2
2944
3072',
'V2
917760
918000',
'V2
1536
1792',
'V2
8592
8704',
'V2
69632
69760',
'V2
66208
66272',
'V2
69888
69968',
'V2
11392
11520',
'V2
127024
127136',
'V2
66352
66384',
'V2
44032
55216',
'V2
67808
67840',
'V2
1424
1536',
'V2
592
688',
'V2
69760
69840',
'V2
12688
12704',
'V2
12032
12256',
'V2
70144
70224',
'V2
128
256',
'V2
7168
7248',
'V2
66176
66208',
'V2
67872
67904',
'V2
43312
43360',
'V2
1792
1872',
'V2
3072
3200',
'V2
1920
1984',
'V2
19904
19968',
'V2
68352
68416',
'V2
2432
2560',
'V2
10240
10496',
'V2
13312
19904',
'V2
131072
173792',
'V2
173824
177984',
'V2
177984
178208',
'V2
178208
183984',
'V2
66560
66640',
'V2
66816
66864',
'V2
70400
70528',
'V2
5920
5952',
'V2
110592
110848',
'V2
3200
3328',
'V2
43264
43312',
'V2
67072
67456',
'V2
126976
127024',
'V2
2112
2144',
'V2
70272
70320',
'V2
4096
4256',
'V2
7248
7296',
'V2
66688
66736',
'V2
43072
43136',
'V2
70016
70112',
'V2
66640
66688',
'V2
71040
71168',
'V2
3456
3584',
'V2
983040
1048576',
'V2
1048576
1114112',
'V2
5888
5920',
'V2
6688
6832',
'V2
43648
43744',
'V2
3840
4096',
'V2
70784
70880',
'V2
6320
6400',
'V2
1328
1424',
'V2
6912
7040',
'V2
92160
92736',
'V2
92880
92928',
'V2
12544
12592',
'V2
6656
6688',
'V2
5024
5120',
'V2
1024
1280',
'V2
9984
10176',
'V2
113664
113824',
'V2
4608
4992',
'V2
4256
4352',
'V2
7936
8192',
'V2
2688
2816',
'V2
2560
2688',
'V2
12352
12448',
'V2
43360
43392',
'V2
55216
55296',
'V2
43392
43488',
'V2
12448
12544',
'V2
69968
70016',
'V2
66000
66048',
'V2
65520
65536',
'V2
5984
6016',
'V2
11568
11648',
'V2
66432
66464',
'V2
7376
7424',
'V2
64336
65024',
'V2
65136
65280',
'V2
1872
1920',
'V2
13056
13312',
'V2
73728
74752',
'V2
128512
128592',
'V2
65056
65072',
'V2
70320
70400',
'V2
256
384',
'V2
384
592',
'V2
11360
11392',
'V2
42784
43008',
'V2
43824
43888',
'V2
3328
3456',
'V2
6144
6320',
'V2
67712
67760',
'V2
6528
6624',
'V2
66304
66352',
'V2
66384
66432',
'V2
68608
68688',
'V2
67680
67712',
'V2
72384
72448',
'V2
2048
2112',
'V2
7040
7104',
'V2
128768
128896',
'V2
2208
2304',
'V2
126464
126720',
'V2
9472
9600',
'V2
12736
12784',
'V2
12288
12352',
'V2
12592
12688',
'V2
2304
2432',
'V2
11264
11360',
'V2
68096
68192',
'V2
68288
68352',
'V2
11008
11264',
'V2
66464
66528',
'V2
67840
67872',
'V2
43136
43232',
'V2
65104
65136',
'V2
10224
10240',
'V2
10496
10624',
'V2
129024
129280',
'V2
71840
71936',
'V2
42128
42192',
'V2
12704
12736',
'V2
43888
43968',
'V2
119648
119680',
'V2
1280
1328',
'V2
12800
13056',
'V2
11648
11744',
'V2
4992
5024',
'V2
11520
11568',
'V2
12784
12800',
'V2
43968
44032',
'V2
9728
9984',
'V2
43616
43648',
'V2
43488
43520',
'V2
8528
8592',
'V2
92928
93072',
'V2
7424
7552',
'V2
8192
8304',
'V2
69840
69888',
'V2
8304
8352',
'V2
43008
43056',
'V2
119552
119648',
'V2
40960
42128',
'V2
64256
64336',
'V2
11744
11776',
'V2
42560
42656',
'V2
768
880',
'V2
43776
43824',
'V2
6624
6656',
'V2
119808
120832',
'V2
124928
125152',
'V2
68736
68864',
'V2
127136
127232',
'V2
7360
7376',
'V2
65792
65856',
'V2
9600
9632',
'V2
43232
43264',
'V2
56320
57344',
'V2
8704
8960',
'V2
8960
9216',
'V2
65040
65056',
'V2
65936
66000',
'V2
118784
119040',
'V2
65072
65104',
'V2
11904
12032',
'V2
55296
56192',
'V2
43744
43776',
'V2
7552
7616',
'V2
68480
68528',
'V2
11776
11904',
'V2
9216
9280',
'V2
8352
8400',
'V2
6832
6912',
'V2
7616
7680',
'V2
9632
9728',
'V2
67648
67680',
'V2
68000
68096',
'V2
127744
128512',
'V2
688
768',
'V2
68224
68256',
'V2
68192
68224',
'V2
128640
128768',
'V2
74752
74880',
'V2
67584
67648',
'V2
9312
9472',
'V2
65280
65520',
'V2
56192
56320',
'V2
43056
43072',
'V2
65664
65792',
'V2
65536
65664',
'V2
10176
10224',
'V2
10624
10752',
'V2
10752
11008',
'V2
119296
119376',
'V2
66864
66928',
'V2
8448
8528',
'V2
120832
121520',
'V2
66272
66304',
'V2
128896
129024',
'V2
7680
7936',
'V2
128592
128640',
'V2
65856
65936',
'V2
63744
64256',
'V2
77824
78896',
'V2
127232
127488',
'V2
67968
68000',
'V2
42752
42784',
'V2
82944
83584',
'V2
68448
68480',
'V2
68416
68448',
'V2
70112
70144',
'V2
194560
195104',
'V2
8400
8448',
'V2
74880
75088',
'V2
127488
127744',
'V2
113824
113840',
'V2
129280
129536',
'V6
188
191
8528
8544
8585
8586',
'V6
65104
65107
65108
65127
65128
65132',
'V6
12288
12289
65281
65377
65504
65511',
'V4
0
32
127
160',
'V6
57344
63744
983040
1048574
1048576
1114110',
'V2
8232
8233',
'V2
8233
8234',
'V2
1829
1830',
'V2
1871
1872',
'V2
1815
1816',
'V2
1830
1831',
'V2
1607
1608',
'V2
1825
1826',
'V2
1826
1827',
'V2
1725
1726',
'V6
1591
1593
1695
1696
2211
2212',
'V2
1836
1837',
'V4
1810
1811
1837
1838',
'V2
1818
1819',
'V2
1823
1824',
'V6
1605
1606
1893
1895
2215
2216',
'V6
1606
1607
1721
1725
1895
1898',
'V2
1833
1834',
'V2
1835
1836',
'V2
1819
1821',
'V2
1821
1822',
'V2
1817
1818',
'V2
1808
1809',
'V4
1811
1813
1838
1839',
'V2
1870
1871',
'V2
1832
1833',
'V2
1869
1870',
'V2
1824
1825',
'V2
1822
1823',
'V2
1729
1731',
'V2
1827
1828',
'V2
1706
1707',
'V2
1816
1817',
'V2
1746
1748',
'V6
1813
1815
1834
1835
1839
1840',
'V4
1726
1727
1791
1792',
'V2
1831
1832',
'V6
1577
1578
1728
1729
1749
1750',
'V2
2220
2221',
'V2
2225
2226',
'V2
1741
1742',
'V2
1828
1829',
'V2
68315
68317',
'V2
68310
68311',
'V2
68311
68312',
'V2
68331
68332',
'V2
68324
68325',
'V2
68333
68334',
'V2
68295
68296',
'V2
1731
1732',
'V2
68313
68315',
'V2
68289
68291',
'V2
68332
68333',
'V2
68301
68302',
'V2
68304
68307',
'V2
68318
68321',
'V2
68321
68322',
'V2
68302
68303',
'V2
68303
68304',
'V2
68288
68289',
'V2
68291
68293',
'V2
68317
68318',
'V2
68297
68299',
'V2
68293
68294',
'V2
68307
68308',
'V2
68312
68313',
'V2
68334
68335',
'V2
68308
68309',
'V2
68335
68336',
'V2
68309
68310',
'V2
1914
1916',
'V6
43122
43123
68301
68302
68311
68312',
'V4
8212
8213
11834
11836',
'V4
11
13
8232
8234',
'V2
65532
65533',
'V4
41
42
93
94',
'V2
45
46',
'V2
133
134',
'V2
55296
57344',
'V2
32
33',
'V2
47
48',
'V4
8288
8289
65279
65280',
'V2
8203
8204',
'V2
12881
12882',
'V2
12882
12883',
'V2
12883
12884',
'V2
12884
12885',
'V2
12885
12886',
'V2
12886
12887',
'V2
12887
12888',
'V2
12888
12889',
'V2
12889
12890',
'V2
12891
12892',
'V2
12892
12893',
'V2
12893
12894',
'V2
12894
12895',
'V2
12895
12896',
'V2
12977
12978',
'V2
12978
12979',
'V2
12979
12980',
'V2
12980
12981',
'V2
12982
12983',
'V2
12983
12984',
'V2
12984
12985',
'V2
12985
12986',
'V2
12986
12987',
'V2
12987
12988',
'V2
12988
12989',
'V2
12989
12990',
'V2
12990
12991',
'V2
8533
8534',
'V6
8537
8538
68087
68088
74849
74850',
'V2
8528
8529',
'V2
8529
8530',
'V2
8534
8535',
'V2
3883
3884',
'V2
8535
8536',
'V2
8540
8541',
'V2
8536
8537',
'V2
3884
3885',
'V6
8538
8539
68095
68096
74844
74845',
'V2
8541
8542',
'V2
3885
3886',
'V2
8542
8543',
'V2
3886
3887',
'V2
3891
3892',
'V2
8530
8531',
'V2
68086
68087',
'V6
2548
2549
2933
2934
43059
43060',
'V2
3887
3888',
'V2
3888
3889',
'V2
3889
3890',
'V2
3890
3891',
'V4
65827
65828
68060
68061',
'V6
2550
2551
2935
2936
43061
43062',
'V4
65828
65829
68061
68062',
'V4
65829
65830
68062
68063',
'V2
68090
68091',
'V4
65831
65832
68064
68065',
'V2
68092
68093',
'V4
65832
65833
68065
68066',
'V4
65833
65834
68066
68067',
'V4
65834
65835
68067
68068',
'V2
68028
68029',
'V4
65836
65837
68069
68070',
'V4
65837
65838
68070
68071',
'V4
65838
65839
68071
68072',
'V4
65840
65841
68073
68074',
'V4
65841
65842
68074
68075',
'V4
65842
65843
68075
68076',
'V4
65843
65844
68076
68077',
'V4
8584
8585
68077
68078',
'V2
68078
68079',
'V2
74802
74803',
'V2
68079
68080',
'V2
68080
68081',
'V2
74803
74804',
'V2
68081
68082',
'V2
68082
68083',
'V2
68083
68084',
'V2
68084
68085',
'V2
68085
68086',
'V2
93022
93023',
'V6
20159
20160
20740
20741
93023
93024',
'V2
93024
93025',
'V4
20806
20807
93025
93026',
'V4
40960
42125
42128
42183',
'V6
92736
92767
92768
92778
92782
92784',
'V2
1984
2043',
'V2
42240
42540',
'V4
66864
66916
66927
66928',
'V6
71424
71450
71453
71468
71472
71488',
'V4
67648
67670
67671
67680',
'V4
68352
68406
68409
68416',
'V4
6912
6988
6992
7037',
'V4
42656
42744
92160
92729',
'V4
92880
92910
92912
92918',
'V4
7104
7156
7164
7168',
'V6
746
748
12549
12590
12704
12731',
'V6
69632
69710
69714
69744
69759
69760',
'V4
6656
6684
6686
6688',
'V2
5952
5972',
'V4
69888
69941
69942
69956',
'V4
5120
5760
6320
6390',
'V2
66208
66257',
'V6
5024
5110
5112
5118
43888
43968',
'V6
994
1008
11392
11508
11513
11520',
'V2
77824
78895',
'V2
66816
66856',
'V4
11264
11311
11312
11359',
'V2
66352
66379',
'V2
5920
5941',
'V6
67808
67827
67828
67830
67835
67840',
'V2
82944
83527',
'V6
68736
68787
68800
68851
68858
68864',
'V2
66304
66340',
'V6
43392
43470
43472
43482
43486
43488',
'V4
43264
43310
43311
43312',
'V4
70144
70162
70163
70206',
'V2
69760
69826',
'V6
7168
7224
7227
7242
7245
7248',
'V6
67072
67383
67392
67414
67424
67432',
'V2
66176
66205',
'V4
67872
67898
67903
67904',
'V2
69968
70007',
'V4
2112
2140
2142
2143',
'V4
68288
68327
68331
68343',
'V4
124928
125125
125127
125143',
'V6
68000
68024
68028
68048
68050
68096',
'V6
93952
94021
94032
94079
94095
94112',
'V4
71168
71237
71248
71258',
'V6
43744
43767
43968
44014
44016
44026',
'V6
4096
4256
43488
43519
43616
43648',
'V4
67712
67743
67751
67760',
'V2
5760
5789',
'V2
68608
68681',
'V4
66688
66718
66720
66730',
'V2
72384
72441',
'V2
66384
66427',
'V2
43072
43128',
'V4
68448
68467
68472
68480',
'V6
68480
68498
68505
68509
68521
68528',
'V4
67840
67868
67871
67872',
'V4
68416
68438
68440
68448',
'V4
43312
43348
43359
43360',
'V4
5792
5867
5870
5881',
'V4
2048
2094
2096
2111',
'V4
43136
43205
43214
43226',
'V6
120832
121484
121499
121504
121505
121520',
'V4
70016
70094
70096
70112',
'V4
71040
71094
71096
71134',
'V4
70320
70379
70384
70394',
'V4
69840
69865
69872
69882',
'V4
7040
7104
7360
7368',
'V2
43008
43052',
'V6
1792
1806
1807
1867
1869
1872',
'V6
5984
5997
5998
6001
6002
6004',
'V4
71296
71352
71360
71370',
'V4
6480
6510
6512
6517',
'V4
43648
43715
43739
43744',
'V6
11568
11624
11631
11633
11647
11648',
'V4
5888
5901
5902
5909',
'V2
1920
1970',
'V4
3585
3643
3648
3676',
'V4
70784
70856
70864
70874',
'V4
66432
66462
66463
66464',
'V4
71840
71923
71935
71936',
'V4
66464
66500
66504
66518',
'V6
6656
6684
6686
6688
43471
43472',
'V4
5941
5943
5952
5972',
'V2
5920
5943',
'V6
43392
43470
43471
43482
43486
43488',
'V6
2790
2800
70144
70162
70163
70206',
'V6
2406
2416
43056
43066
69760
69826',
'V6
2404
2416
43056
43066
69968
70007',
'V6
1600
1601
2112
2140
2142
2143',
'V6
1600
1601
68288
68327
68331
68343',
'V6
43056
43066
71168
71237
71248
71258',
'V4
1155
1156
66384
66427',
'V6
6146
6148
6149
6150
43072
43128',
'V6
2404
2406
2534
2544
43008
43052',
'V6
4160
4170
6480
6510
6512
6517',
'V6
5888
5901
5902
5909
5941
5943',
,
);

# Maps property, table to file for those using stricter matching.  For paths
# whose directory is '#', the file is in the form of a numeric index into
# @inline_definitions
%utf8::stricter_to_file_of = (
'_canondcij' => 'SD/Y',
'_case_ignorable' => 'CI/Y',
'_combabove' => 'Ccc/A',
'_perl_any_folds' => 'Perl/_PerlAny',
'_perl_charname_begin' => 'Perl/_PerlCha',
'_perl_charname_continue' => 'Perl/_PerlCh2',
'_perl_folds_to_multi_char' => 'Perl/_PerlFol',
'_perl_idcont' => 'Perl/_PerlIDC',
'_perl_idstart' => 'Perl/_PerlIDS',
'_perl_nchar' => 'Perl/_PerlNch',
'_perl_patws' => 'Perl/_PerlPat',
'_perl_problematic_locale_foldeds_start' => 'Perl/_PerlPr2',
'_perl_problematic_locale_folds' => 'Perl/_PerlPro',
'_perl_quotemeta' => 'Perl/_PerlQuo',
'_perl_surrogate' => '#/14',
'age=1.1' => 'Age/V11',
'age=2' => 'Age/V20',
'age=2.0' => 'Age/V20',
'age=2.1' => '#/92',
'age=3' => 'Age/V30',
'age=3.0' => 'Age/V30',
'age=3.1' => 'Age/V31',
'age=3.2' => 'Age/V32',
'age=4' => 'Age/V40',
'age=4.0' => 'Age/V40',
'age=4.1' => 'Age/V41',
'age=5' => 'Age/V50',
'age=5.0' => 'Age/V50',
'age=5.1' => 'Age/V51',
'age=5.2' => 'Age/V52',
'age=6' => 'Age/V60',
'age=6.0' => 'Age/V60',
'age=6.1' => 'Age/V61',
'age=6.2' => '#/93',
'age=6.3' => '#/94',
'age=7' => 'Age/V70',
'age=7.0' => 'Age/V70',
'age=8' => 'Age/V80',
'age=8.0' => 'Age/V80',
'ccc=0' => 'Ccc/NR',
'ccc=1' => 'Ccc/OV',
'ccc=10' => '#/24',
'ccc=103' => '#/53',
'ccc=107' => '#/54',
'ccc=11' => '#/25',
'ccc=118' => '#/55',
'ccc=12' => '#/26',
'ccc=122' => '#/56',
'ccc=129' => '#/57',
'ccc=13' => '#/27',
'ccc=130' => '#/58',
'ccc=132' => '#/59',
'ccc=133' => '#/0',
'ccc=14' => '#/28',
'ccc=15' => '#/29',
'ccc=16' => '#/30',
'ccc=17' => '#/31',
'ccc=18' => '#/32',
'ccc=19' => '#/33',
'ccc=20' => '#/34',
'ccc=200' => '#/0',
'ccc=202' => '#/23',
'ccc=21' => '#/35',
'ccc=214' => '#/22',
'ccc=216' => 'Ccc/ATAR',
'ccc=218' => '#/18',
'ccc=22' => '#/36',
'ccc=220' => 'Ccc/B',
'ccc=222' => 'Ccc/BR',
'ccc=224' => '#/15',
'ccc=226' => '#/16',
'ccc=228' => '#/17',
'ccc=23' => '#/37',
'ccc=230' => 'Ccc/A',
'ccc=232' => 'Ccc/AR',
'ccc=233' => 'Ccc/DB',
'ccc=234' => '#/19',
'ccc=24' => '#/38',
'ccc=240' => '#/20',
'ccc=25' => '#/39',
'ccc=26' => '#/40',
'ccc=27' => '#/41',
'ccc=28' => '#/42',
'ccc=29' => '#/43',
'ccc=30' => '#/44',
'ccc=31' => '#/45',
'ccc=32' => '#/46',
'ccc=33' => '#/47',
'ccc=34' => '#/48',
'ccc=35' => '#/49',
'ccc=36' => '#/50',
'ccc=7' => 'Ccc/NK',
'ccc=8' => '#/21',
'ccc=84' => '#/51',
'ccc=9' => 'Ccc/VR',
'ccc=91' => '#/52',
'in=1.1' => 'Age/V11',
'in=2' => 'In/2_0',
'in=2.0' => 'In/2_0',
'in=2.1' => 'In/2_1',
'in=3' => 'In/3_0',
'in=3.0' => 'In/3_0',
'in=3.1' => 'In/3_1',
'in=3.2' => 'In/3_2',
'in=4' => 'In/4_0',
'in=4.0' => 'In/4_0',
'in=4.1' => 'In/4_1',
'in=5' => 'In/5_0',
'in=5.0' => 'In/5_0',
'in=5.1' => 'In/5_1',
'in=5.2' => 'In/5_2',
'in=6' => 'In/6_0',
'in=6.0' => 'In/6_0',
'in=6.1' => 'In/6_1',
'in=6.2' => 'In/6_2',
'in=6.3' => 'In/6_3',
'in=7' => 'In/7_0',
'in=7.0' => 'In/7_0',
'in=8' => 'In/8_0',
'in=8.0' => 'In/8_0',
'nv=-1/2' => '#/497',
'nv=0' => 'Nv/0',
'nv=1' => 'Nv/1',
'nv=1/10' => '#/498',
'nv=1/12' => '#/499',
'nv=1/16' => '#/500',
'nv=1/2' => 'Nv/1_2',
'nv=1/3' => 'Nv/1_3',
'nv=1/4' => 'Nv/1_4',
'nv=1/5' => '#/482',
'nv=1/6' => '#/483',
'nv=1/7' => '#/484',
'nv=1/8' => 'Nv/1_8',
'nv=1/9' => '#/485',
'nv=10' => 'Nv/10',
'nv=100' => 'Nv/100',
'nv=1000' => 'Nv/1000',
'nv=10000' => 'Nv/10000',
'nv=100000' => '#/523',
'nv=1000000' => '#/534',
'nv=100000000' => '#/535',
'nv=10000000000' => '#/536',
'nv=1000000000000' => '#/537',
'nv=11' => 'Nv/11',
'nv=11/12' => '#/515',
'nv=11/2' => '#/501',
'nv=12' => 'Nv/12',
'nv=13' => 'Nv/13',
'nv=13/2' => '#/502',
'nv=14' => 'Nv/14',
'nv=15' => 'Nv/15',
'nv=15/2' => '#/503',
'nv=16' => 'Nv/16',
'nv=17' => 'Nv/17',
'nv=17/2' => '#/504',
'nv=18' => 'Nv/18',
'nv=19' => 'Nv/19',
'nv=2' => 'Nv/2',
'nv=2/3' => 'Nv/2_3',
'nv=2/5' => '#/486',
'nv=20' => 'Nv/20',
'nv=200' => 'Nv/200',
'nv=2000' => '#/505',
'nv=20000' => '#/516',
'nv=200000' => '#/524',
'nv=21' => '#/455',
'nv=216000' => '#/525',
'nv=22' => '#/456',
'nv=23' => '#/457',
'nv=24' => '#/458',
'nv=25' => '#/459',
'nv=26' => '#/460',
'nv=27' => '#/461',
'nv=28' => '#/462',
'nv=29' => '#/463',
'nv=3' => 'Nv/3',
'nv=3/16' => '#/506',
'nv=3/2' => '#/487',
'nv=3/4' => 'Nv/3_4',
'nv=3/5' => '#/488',
'nv=3/8' => '#/489',
'nv=30' => 'Nv/30',
'nv=300' => 'Nv/300',
'nv=3000' => '#/507',
'nv=30000' => '#/517',
'nv=300000' => '#/526',
'nv=31' => '#/464',
'nv=32' => '#/465',
'nv=33' => '#/466',
'nv=34' => '#/467',
'nv=35' => '#/468',
'nv=36' => '#/469',
'nv=37' => '#/470',
'nv=38' => '#/471',
'nv=39' => '#/472',
'nv=4' => 'Nv/4',
'nv=4/5' => '#/490',
'nv=40' => 'Nv/40',
'nv=400' => 'Nv/400',
'nv=4000' => '#/508',
'nv=40000' => '#/518',
'nv=400000' => '#/527',
'nv=41' => '#/473',
'nv=42' => '#/474',
'nv=43' => '#/475',
'nv=432000' => '#/528',
'nv=44' => '#/476',
'nv=45' => '#/477',
'nv=46' => '#/478',
'nv=47' => '#/479',
'nv=48' => '#/480',
'nv=49' => '#/481',
'nv=5' => 'Nv/5',
'nv=5/12' => '#/509',
'nv=5/2' => '#/491',
'nv=5/6' => '#/492',
'nv=5/8' => '#/493',
'nv=50' => 'Nv/50',
'nv=500' => 'Nv/500',
'nv=5000' => 'Nv/5000',
'nv=50000' => 'Nv/50000',
'nv=500000' => '#/529',
'nv=6' => 'Nv/6',
'nv=60' => 'Nv/60',
'nv=600' => 'Nv/600',
'nv=6000' => '#/510',
'nv=60000' => '#/519',
'nv=600000' => '#/530',
'nv=7' => 'Nv/7',
'nv=7/12' => '#/511',
'nv=7/2' => '#/494',
'nv=7/8' => '#/495',
'nv=70' => 'Nv/70',
'nv=700' => 'Nv/700',
'nv=7000' => '#/512',
'nv=70000' => '#/520',
'nv=700000' => '#/531',
'nv=8' => 'Nv/8',
'nv=80' => 'Nv/80',
'nv=800' => 'Nv/800',
'nv=8000' => '#/513',
'nv=80000' => '#/521',
'nv=800000' => '#/532',
'nv=9' => 'Nv/9',
'nv=9/2' => '#/496',
'nv=90' => 'Nv/90',
'nv=900' => 'Nv/900',
'nv=9000' => '#/514',
'nv=90000' => '#/522',
'nv=900000' => '#/533',
);

# Maps property, table to file for those using loose matching.  For paths
# whose directory is '#', the file is in the form of a numeric index into
# @inline_definitions
%utf8::loose_to_file_of = (
'aegeannumbers' => '#/304',
'age=na' => 'Age/NA',
'age=unassigned' => 'Age/NA',
'age=v11' => 'Age/V11',
'age=v20' => 'Age/V20',
'age=v21' => '#/92',
'age=v30' => 'Age/V30',
'age=v31' => 'Age/V31',
'age=v32' => 'Age/V32',
'age=v40' => 'Age/V40',
'age=v41' => 'Age/V41',
'age=v50' => 'Age/V50',
'age=v51' => 'Age/V51',
'age=v52' => 'Age/V52',
'age=v60' => 'Age/V60',
'age=v61' => 'Age/V61',
'age=v62' => '#/93',
'age=v63' => '#/94',
'age=v70' => 'Age/V70',
'age=v80' => 'Age/V80',
'aghb' => '#/542',
'ahex' => '#/60',
'ahex=f' => '#/!60',
'ahex=false' => '#/!60',
'ahex=n' => '#/!60',
'ahex=no' => '#/!60',
'ahex=t' => '#/60',
'ahex=true' => '#/60',
'ahex=y' => '#/60',
'ahex=yes' => '#/60',
'ahom' => '#/543',
'alchemical' => '#/250',
'alchemicalsymbols' => '#/250',
'all' => '#/1',
'alnum' => 'Perl/Alnum',
'alpha' => 'Alpha/Y',
'alpha=f' => '!Alpha/Y',
'alpha=false' => '!Alpha/Y',
'alpha=n' => '!Alpha/Y',
'alpha=no' => '!Alpha/Y',
'alpha=t' => 'Alpha/Y',
'alpha=true' => 'Alpha/Y',
'alpha=y' => 'Alpha/Y',
'alpha=yes' => 'Alpha/Y',
'alphabetic' => 'Alpha/Y',
'alphabeticpf' => '#/293',
'alphabeticpresentationforms' => '#/293',
'anatolianhieroglyphs' => '#/565',
'ancientgreekmusic' => '#/343',
'ancientgreekmusicalnotation' => '#/343',
'ancientgreeknumbers' => '#/351',
'ancientsymbols' => '#/311',
'any' => '#/2',
'arab' => 'Sc/Arab',
'arabic' => 'Sc/Arab',
'arabicexta' => '#/251',
'arabicextendeda' => '#/251',
'arabicmath' => '#/252',
'arabicmathematicalalphabeticsymbols' => '#/252',
'arabicpfa' => '#/226',
'arabicpfb' => '#/227',
'arabicpresentationformsa' => '#/226',
'arabicpresentationformsb' => '#/227',
'arabicsup' => '#/228',
'arabicsupplement' => '#/228',
'armenian' => 'Sc/Armn',
'armi' => '#/544',
'armn' => 'Sc/Armn',
'arrows' => '#/140',
'ascii' => '#/124',
'asciihexdigit' => '#/60',
'assigned' => 'Perl/Assigned',
'avestan' => '#/545',
'avst' => '#/545',
'bali' => '#/546',
'balinese' => '#/546',
'bamu' => '#/547',
'bamum' => '#/547',
'bamumsup' => '#/201',
'bamumsupplement' => '#/201',
'basiclatin' => '#/124',
'bass' => '#/548',
'bassavah' => '#/548',
'batak' => '#/549',
'batk' => '#/549',
'bc=al' => 'Bc/AL',
'bc=an' => 'Bc/AN',
'bc=arabicletter' => 'Bc/AL',
'bc=arabicnumber' => 'Bc/AN',
'bc=b' => 'Bc/B',
'bc=bn' => 'Bc/BN',
'bc=boundaryneutral' => 'Bc/BN',
'bc=commonseparator' => 'Bc/CS',
'bc=cs' => 'Bc/CS',
'bc=en' => 'Bc/EN',
'bc=es' => 'Bc/ES',
'bc=et' => 'Bc/ET',
'bc=europeannumber' => 'Bc/EN',
'bc=europeanseparator' => 'Bc/ES',
'bc=europeanterminator' => 'Bc/ET',
'bc=firststrongisolate' => '#/96',
'bc=fsi' => '#/96',
'bc=l' => 'Bc/L',
'bc=lefttoright' => 'Bc/L',
'bc=lefttorightembedding' => '#/97',
'bc=lefttorightisolate' => '#/98',
'bc=lefttorightoverride' => '#/99',
'bc=lre' => '#/97',
'bc=lri' => '#/98',
'bc=lro' => '#/99',
'bc=nonspacingmark' => 'Bc/NSM',
'bc=nsm' => 'Bc/NSM',
'bc=on' => 'Bc/ON',
'bc=otherneutral' => 'Bc/ON',
'bc=paragraphseparator' => 'Bc/B',
'bc=pdf' => '#/100',
'bc=pdi' => '#/101',
'bc=popdirectionalformat' => '#/100',
'bc=popdirectionalisolate' => '#/101',
'bc=r' => 'Bc/R',
'bc=righttoleft' => 'Bc/R',
'bc=righttoleftembedding' => '#/102',
'bc=righttoleftisolate' => '#/103',
'bc=righttoleftoverride' => '#/104',
'bc=rle' => '#/102',
'bc=rli' => '#/103',
'bc=rlo' => '#/104',
'bc=s' => '#/95',
'bc=segmentseparator' => '#/95',
'bc=whitespace' => 'Bc/WS',
'bc=ws' => 'Bc/WS',
'beng' => 'Sc/Beng',
'bengali' => 'Sc/Beng',
'bidic' => 'BidiC/Y',
'bidic=f' => '!BidiC/Y',
'bidic=false' => '!BidiC/Y',
'bidic=n' => '!BidiC/Y',
'bidic=no' => '!BidiC/Y',
'bidic=t' => 'BidiC/Y',
'bidic=true' => 'BidiC/Y',
'bidic=y' => 'BidiC/Y',
'bidic=yes' => 'BidiC/Y',
'bidicontrol' => 'BidiC/Y',
'bidim' => 'BidiM/Y',
'bidim=f' => '!BidiM/Y',
'bidim=false' => '!BidiM/Y',
'bidim=n' => '!BidiM/Y',
'bidim=no' => '!BidiM/Y',
'bidim=t' => 'BidiM/Y',
'bidim=true' => 'BidiM/Y',
'bidim=y' => 'BidiM/Y',
'bidim=yes' => 'BidiM/Y',
'bidimirrored' => 'BidiM/Y',
'blank' => 'Perl/Blank',
'blk=aegeannumbers' => '#/304',
'blk=ahom' => '#/114',
'blk=alchemical' => '#/250',
'blk=alchemicalsymbols' => '#/250',
'blk=alphabeticpf' => '#/293',
'blk=alphabeticpresentationforms' => '#/293',
'blk=anatolianhieroglyphs' => '#/357',
'blk=ancientgreekmusic' => '#/343',
'blk=ancientgreekmusicalnotation' => '#/343',
'blk=ancientgreeknumbers' => '#/351',
'blk=ancientsymbols' => '#/311',
'blk=arabic' => '#/139',
'blk=arabicexta' => '#/251',
'blk=arabicextendeda' => '#/251',
'blk=arabicmath' => '#/252',
'blk=arabicmathematicalalphabeticsymbols' => '#/252',
'blk=arabicpfa' => '#/226',
'blk=arabicpfb' => '#/227',
'blk=arabicpresentationformsa' => '#/226',
'blk=arabicpresentationformsb' => '#/227',
'blk=arabicsup' => '#/228',
'blk=arabicsupplement' => '#/228',
'blk=armenian' => '#/199',
'blk=arrows' => '#/140',
'blk=ascii' => '#/124',
'blk=avestan' => '#/164',
'blk=balinese' => '#/200',
'blk=bamum' => '#/125',
'blk=bamumsup' => '#/201',
'blk=bamumsupplement' => '#/201',
'blk=basiclatin' => '#/124',
'blk=bassavah' => '#/202',
'blk=batak' => '#/126',
'blk=bengali' => '#/165',
'blk=blockelements' => '#/305',
'blk=bopomofo' => '#/203',
'blk=bopomofoext' => '#/271',
'blk=bopomofoextended' => '#/271',
'blk=boxdrawing' => '#/253',
'blk=brahmi' => '#/141',
'blk=braille' => '#/166',
'blk=braillepatterns' => '#/166',
'blk=buginese' => '#/204',
'blk=buhid' => '#/127',
'blk=byzantinemusic' => '#/312',
'blk=byzantinemusicalsymbols' => '#/312',
'blk=canadiansyllabics' => '#/123',
'blk=carian' => '#/142',
'blk=caucasianalbanian' => '#/344',
'blk=chakma' => '#/143',
'blk=cham' => '#/115',
'blk=cherokee' => '#/205',
'blk=cherokeesup' => '#/272',
'blk=cherokeesupplement' => '#/272',
'blk=cjk' => '#/106',
'blk=cjkcompat' => '#/229',
'blk=cjkcompatforms' => '#/313',
'blk=cjkcompatibility' => '#/229',
'blk=cjkcompatibilityforms' => '#/313',
'blk=cjkcompatibilityideographs' => '#/352',
'blk=cjkcompatibilityideographssupplement' => '#/361',
'blk=cjkcompatideographs' => '#/352',
'blk=cjkcompatideographssup' => '#/361',
'blk=cjkexta' => '#/167',
'blk=cjkextb' => '#/168',
'blk=cjkextc' => '#/169',
'blk=cjkextd' => '#/170',
'blk=cjkexte' => '#/171',
'blk=cjkradicalssup' => '#/314',
'blk=cjkradicalssupplement' => '#/314',
'blk=cjkstrokes' => '#/254',
'blk=cjksymbols' => '#/255',
'blk=cjksymbolsandpunctuation' => '#/255',
'blk=cjkunifiedideographs' => '#/106',
'blk=cjkunifiedideographsextensiona' => '#/167',
'blk=cjkunifiedideographsextensionb' => '#/168',
'blk=cjkunifiedideographsextensionc' => '#/169',
'blk=cjkunifiedideographsextensiond' => '#/170',
'blk=cjkunifiedideographsextensione' => '#/171',
'blk=combiningdiacriticalmarks' => '#/296',
'blk=combiningdiacriticalmarksextended' => '#/322',
'blk=combiningdiacriticalmarksforsymbols' => '#/362',
'blk=combiningdiacriticalmarkssupplement' => '#/323',
'blk=combininghalfmarks' => '#/232',
'blk=combiningmarksforsymbols' => '#/362',
'blk=commonindicnumberforms' => '#/337',
'blk=compatjamo' => '#/256',
'blk=controlpictures' => '#/320',
'blk=coptic' => '#/144',
'blk=copticepactnumbers' => '#/347',
'blk=countingrod' => '#/273',
'blk=countingrodnumerals' => '#/273',
'blk=cuneiform' => '#/230',
'blk=cuneiformnumbers' => '#/332',
'blk=cuneiformnumbersandpunctuation' => '#/332',
'blk=currencysymbols' => '#/321',
'blk=cypriotsyllabary' => '#/333',
'blk=cyrillic' => '#/206',
'blk=cyrillicexta' => '#/294',
'blk=cyrillicextb' => '#/295',
'blk=cyrillicextendeda' => '#/294',
'blk=cyrillicextendedb' => '#/295',
'blk=cyrillicsup' => '#/274',
'blk=cyrillicsupplement' => '#/274',
'blk=cyrillicsupplementary' => '#/274',
'blk=deseret' => '#/172',
'blk=devanagari' => '#/257',
'blk=devanagariext' => '#/306',
'blk=devanagariextended' => '#/306',
'blk=diacriticals' => '#/296',
'blk=diacriticalsext' => '#/322',
'blk=diacriticalsforsymbols' => '#/362',
'blk=diacriticalssup' => '#/323',
'blk=dingbats' => '#/207',
'blk=domino' => '#/145',
'blk=dominotiles' => '#/145',
'blk=duployan' => '#/208',
'blk=earlydynasticcuneiform' => '#/363',
'blk=egyptianhieroglyphs' => '#/353',
'blk=elbasan' => '#/173',
'blk=emoticons' => '#/231',
'blk=enclosedalphanum' => '#/334',
'blk=enclosedalphanumerics' => '#/334',
'blk=enclosedalphanumericsupplement' => '#/354',
'blk=enclosedalphanumsup' => '#/354',
'blk=enclosedcjk' => '#/275',
'blk=enclosedcjklettersandmonths' => '#/275',
'blk=enclosedideographicsup' => '#/364',
'blk=enclosedideographicsupplement' => '#/364',
'blk=ethiopic' => '#/209',
'blk=ethiopicext' => '#/276',
'blk=ethiopicexta' => '#/297',
'blk=ethiopicextended' => '#/276',
'blk=ethiopicextendeda' => '#/297',
'blk=ethiopicsup' => '#/277',
'blk=ethiopicsupplement' => '#/277',
'blk=generalpunctuation' => '#/287',
'blk=geometricshapes' => '#/324',
'blk=geometricshapesext' => '#/348',
'blk=geometricshapesextended' => '#/348',
'blk=georgian' => '#/210',
'blk=georgiansup' => '#/278',
'blk=georgiansupplement' => '#/278',
'blk=glagolitic' => '#/258',
'blk=gothic' => '#/146',
'blk=grantha' => '#/174',
'blk=greek' => '#/128',
'blk=greekandcoptic' => '#/128',
'blk=greekext' => '#/211',
'blk=greekextended' => '#/211',
'blk=gujarati' => '#/212',
'blk=gurmukhi' => '#/213',
'blk=halfandfullforms' => '#/335',
'blk=halfmarks' => '#/232',
'blk=halfwidthandfullwidthforms' => '#/335',
'blk=hangul' => '#/147',
'blk=hangulcompatibilityjamo' => '#/256',
'blk=hanguljamo' => '#/116',
'blk=hanguljamoextendeda' => '#/215',
'blk=hanguljamoextendedb' => '#/216',
'blk=hangulsyllables' => '#/147',
'blk=hanunoo' => '#/175',
'blk=hatran' => '#/148',
'blk=hebrew' => '#/149',
'blk=highprivateusesurrogates' => '#/336',
'blk=highpusurrogates' => '#/336',
'blk=highsurrogates' => '#/315',
'blk=hiragana' => '#/214',
'blk=idc' => '#/107',
'blk=ideographicdescriptioncharacters' => '#/107',
'blk=imperialaramaic' => '#/325',
'blk=indicnumberforms' => '#/337',
'blk=inscriptionalpahlavi' => '#/358',
'blk=inscriptionalparthian' => '#/359',
'blk=ipaext' => '#/150',
'blk=ipaextensions' => '#/150',
'blk=jamo' => '#/116',
'blk=jamoexta' => '#/215',
'blk=jamoextb' => '#/216',
'blk=javanese' => '#/217',
'blk=kaithi' => '#/151',
'blk=kanasup' => '#/176',
'blk=kanasupplement' => '#/176',
'blk=kanbun' => '#/152',
'blk=kangxi' => '#/153',
'blk=kangxiradicals' => '#/153',
'blk=kannada' => '#/177',
'blk=katakana' => '#/218',
'blk=katakanaext' => '#/279',
'blk=katakanaphoneticextensions' => '#/279',
'blk=kayahli' => '#/178',
'blk=kharoshthi' => '#/259',
'blk=khmer' => '#/129',
'blk=khmersymbols' => '#/298',
'blk=khojki' => '#/154',
'blk=khudawadi' => '#/233',
'blk=lao' => '#/108',
'blk=latin1' => '#/155',
'blk=latin1sup' => '#/155',
'blk=latin1supplement' => '#/155',
'blk=latinexta' => '#/234',
'blk=latinextadditional' => '#/349',
'blk=latinextb' => '#/235',
'blk=latinextc' => '#/236',
'blk=latinextd' => '#/237',
'blk=latinexte' => '#/238',
'blk=latinextendeda' => '#/234',
'blk=latinextendedadditional' => '#/349',
'blk=latinextendedb' => '#/235',
'blk=latinextendedc' => '#/236',
'blk=latinextendedd' => '#/237',
'blk=latinextendede' => '#/238',
'blk=lepcha' => '#/156',
'blk=letterlikesymbols' => '#/345',
'blk=limbu' => '#/130',
'blk=lineara' => '#/179',
'blk=linearbideograms' => '#/338',
'blk=linearbsyllabary' => '#/339',
'blk=lisu' => '#/117',
'blk=lowsurrogates' => '#/307',
'blk=lycian' => '#/157',
'blk=lydian' => '#/158',
'blk=mahajani' => '#/219',
'blk=mahjong' => '#/180',
'blk=mahjongtiles' => '#/180',
'blk=malayalam' => '#/239',
'blk=mandaic' => '#/181',
'blk=manichaean' => '#/260',
'blk=mathalphanum' => '#/299',
'blk=mathematicalalphanumericsymbols' => '#/299',
'blk=mathematicaloperators' => '#/308',
'blk=mathoperators' => '#/308',
'blk=meeteimayek' => '#/280',
'blk=meeteimayekext' => '#/316',
'blk=meeteimayekextensions' => '#/316',
'blk=mendekikakui' => '#/300',
'blk=meroiticcursive' => '#/326',
'blk=meroitichieroglyphs' => '#/355',
'blk=miao' => '#/118',
'blk=miscarrows' => '#/261',
'blk=miscellaneousmathematicalsymbolsa' => '#/340',
'blk=miscellaneousmathematicalsymbolsb' => '#/341',
'blk=miscellaneoussymbols' => '#/281',
'blk=miscellaneoussymbolsandarrows' => '#/261',
'blk=miscellaneoussymbolsandpictographs' => '#/327',
'blk=miscellaneoustechnical' => '#/309',
'blk=miscmathsymbolsa' => '#/340',
'blk=miscmathsymbolsb' => '#/341',
'blk=miscpictographs' => '#/327',
'blk=miscsymbols' => '#/281',
'blk=misctechnical' => '#/309',
'blk=modi' => '#/119',
'blk=modifierletters' => '#/328',
'blk=modifiertoneletters' => '#/356',
'blk=mongolian' => '#/240',
'blk=mro' => '#/109',
'blk=multani' => '#/182',
'blk=music' => '#/131',
'blk=musicalsymbols' => '#/131',
'blk=myanmar' => '#/183',
'blk=myanmarexta' => '#/282',
'blk=myanmarextb' => '#/283',
'blk=myanmarextendeda' => '#/282',
'blk=myanmarextendedb' => '#/283',
'blk=nabataean' => '#/241',
'blk=nb' => 'Blk/NB',
'blk=newtailue' => '#/242',
'blk=nko' => '#/110',
'blk=noblock' => 'Blk/NB',
'blk=numberforms' => '#/284',
'blk=ocr' => '#/111',
'blk=ogham' => '#/132',
'blk=olchiki' => '#/184',
'blk=oldhungarian' => '#/301',
'blk=olditalic' => '#/243',
'blk=oldnortharabian' => '#/329',
'blk=oldpermic' => '#/244',
'blk=oldpersian' => '#/262',
'blk=oldsoutharabian' => '#/330',
'blk=oldturkic' => '#/245',
'blk=opticalcharacterrecognition' => '#/111',
'blk=oriya' => '#/133',
'blk=ornamentaldingbats' => '#/350',
'blk=osmanya' => '#/185',
'blk=pahawhhmong' => '#/285',
'blk=palmyrene' => '#/246',
'blk=paucinhau' => '#/247',
'blk=phagspa' => '#/186',
'blk=phaistos' => '#/220',
'blk=phaistosdisc' => '#/220',
'blk=phoenician' => '#/263',
'blk=phoneticext' => '#/286',
'blk=phoneticextensions' => '#/286',
'blk=phoneticextensionssupplement' => '#/317',
'blk=phoneticextsup' => '#/317',
'blk=playingcards' => '#/302',
'blk=privateuse' => '#/112',
'blk=privateusearea' => '#/112',
'blk=psalterpahlavi' => '#/318',
'blk=pua' => '#/112',
'blk=punctuation' => '#/287',
'blk=rejang' => '#/159',
'blk=rumi' => '#/120',
'blk=ruminumeralsymbols' => '#/120',
'blk=runic' => '#/134',
'blk=samaritan' => '#/248',
'blk=saurashtra' => '#/264',
'blk=sharada' => '#/187',
'blk=shavian' => '#/188',
'blk=shorthandformatcontrols' => '#/365',
'blk=siddham' => '#/189',
'blk=sinhala' => '#/190',
'blk=sinhalaarchaicnumbers' => '#/360',
'blk=smallforms' => '#/265',
'blk=smallformvariants' => '#/265',
'blk=sorasompeng' => '#/288',
'blk=spacingmodifierletters' => '#/328',
'blk=specials' => '#/221',
'blk=sundanese' => '#/249',
'blk=sundanesesup' => '#/303',
'blk=sundanesesupplement' => '#/303',
'blk=suparrowsa' => '#/266',
'blk=suparrowsb' => '#/267',
'blk=suparrowsc' => '#/268',
'blk=superandsub' => '#/289',
'blk=superscriptsandsubscripts' => '#/289',
'blk=supmathoperators' => '#/342',
'blk=supplementalarrowsa' => '#/266',
'blk=supplementalarrowsb' => '#/267',
'blk=supplementalarrowsc' => '#/268',
'blk=supplementalmathematicaloperators' => '#/342',
'blk=supplementalpunctuation' => '#/319',
'blk=supplementalsymbolsandpictographs' => '#/366',
'blk=supplementaryprivateuseareaa' => '#/191',
'blk=supplementaryprivateuseareab' => '#/192',
'blk=suppuaa' => '#/191',
'blk=suppuab' => '#/192',
'blk=suppunctuation' => '#/319',
'blk=supsymbolsandpictographs' => '#/366',
'blk=suttonsignwriting' => '#/346',
'blk=sylotinagri' => '#/290',
'blk=syriac' => '#/160',
'blk=tagalog' => '#/193',
'blk=tagbanwa' => '#/222',
'blk=tags' => '#/121',
'blk=taile' => '#/135',
'blk=taitham' => '#/194',
'blk=taiviet' => '#/195',
'blk=taixuanjing' => '#/291',
'blk=taixuanjingsymbols' => '#/291',
'blk=takri' => '#/136',
'blk=tamil' => '#/137',
'blk=telugu' => '#/161',
'blk=thaana' => '#/162',
'blk=thai' => '#/122',
'blk=tibetan' => '#/196',
'blk=tifinagh' => '#/223',
'blk=tirhuta' => '#/197',
'blk=transportandmap' => '#/331',
'blk=transportandmapsymbols' => '#/331',
'blk=ucas' => '#/123',
'blk=ucasext' => '#/198',
'blk=ugaritic' => '#/224',
'blk=unifiedcanadianaboriginalsyllabics' => '#/123',
'blk=unifiedcanadianaboriginalsyllabicsextended' => '#/198',
'blk=vai' => '#/113',
'blk=variationselectors' => '#/105',
'blk=variationselectorssupplement' => '#/138',
'blk=vedicext' => '#/225',
'blk=vedicextensions' => '#/225',
'blk=verticalforms' => '#/310',
'blk=vs' => '#/105',
'blk=vssup' => '#/138',
'blk=warangciti' => '#/269',
'blk=yijing' => '#/163',
'blk=yijinghexagramsymbols' => '#/163',
'blk=yiradicals' => '#/270',
'blk=yisyllables' => '#/292',
'blockelements' => '#/305',
'bopo' => '#/550',
'bopomofo' => '#/550',
'bopomofoext' => '#/271',
'bopomofoextended' => '#/271',
'boxdrawing' => '#/253',
'bpt=c' => 'Bpt/C',
'bpt=close' => 'Bpt/C',
'bpt=n' => 'Bpt/N',
'bpt=none' => 'Bpt/N',
'bpt=o' => 'Bpt/O',
'bpt=open' => 'Bpt/O',
'brah' => '#/551',
'brahmi' => '#/551',
'brai' => '#/166',
'braille' => '#/166',
'braillepatterns' => '#/166',
'bugi' => '#/552',
'buginese' => '#/552',
'buhd' => '#/553',
'buhid' => '#/553',
'byzantinemusic' => '#/312',
'byzantinemusicalsymbols' => '#/312',
'c' => 'Gc/C',
'cakm' => '#/554',
'canadianaboriginal' => '#/555',
'canadiansyllabics' => '#/123',
'cans' => '#/555',
'cari' => '#/556',
'carian' => '#/556',
'cased' => 'Cased/Y',
'cased=f' => '!Cased/Y',
'cased=false' => '!Cased/Y',
'cased=n' => '!Cased/Y',
'cased=no' => '!Cased/Y',
'cased=t' => 'Cased/Y',
'cased=true' => 'Cased/Y',
'cased=y' => 'Cased/Y',
'cased=yes' => 'Cased/Y',
'casedletter' => 'Gc/LC',
'caseignorable' => 'CI/Y',
'caucasianalbanian' => '#/542',
'cc' => '#/370',
'ccc=a' => 'Ccc/A',
'ccc=above' => 'Ccc/A',
'ccc=aboveleft' => '#/17',
'ccc=aboveright' => 'Ccc/AR',
'ccc=al' => '#/17',
'ccc=ar' => 'Ccc/AR',
'ccc=ata' => '#/22',
'ccc=atar' => 'Ccc/ATAR',
'ccc=atb' => '#/23',
'ccc=atbl' => '#/0',
'ccc=attachedabove' => '#/22',
'ccc=attachedaboveright' => 'Ccc/ATAR',
'ccc=attachedbelow' => '#/23',
'ccc=attachedbelowleft' => '#/0',
'ccc=b' => 'Ccc/B',
'ccc=below' => 'Ccc/B',
'ccc=belowleft' => '#/18',
'ccc=belowright' => 'Ccc/BR',
'ccc=bl' => '#/18',
'ccc=br' => 'Ccc/BR',
'ccc=ccc10' => '#/24',
'ccc=ccc103' => '#/53',
'ccc=ccc107' => '#/54',
'ccc=ccc11' => '#/25',
'ccc=ccc118' => '#/55',
'ccc=ccc12' => '#/26',
'ccc=ccc122' => '#/56',
'ccc=ccc129' => '#/57',
'ccc=ccc13' => '#/27',
'ccc=ccc130' => '#/58',
'ccc=ccc132' => '#/59',
'ccc=ccc133' => '#/0',
'ccc=ccc14' => '#/28',
'ccc=ccc15' => '#/29',
'ccc=ccc16' => '#/30',
'ccc=ccc17' => '#/31',
'ccc=ccc18' => '#/32',
'ccc=ccc19' => '#/33',
'ccc=ccc20' => '#/34',
'ccc=ccc21' => '#/35',
'ccc=ccc22' => '#/36',
'ccc=ccc23' => '#/37',
'ccc=ccc24' => '#/38',
'ccc=ccc25' => '#/39',
'ccc=ccc26' => '#/40',
'ccc=ccc27' => '#/41',
'ccc=ccc28' => '#/42',
'ccc=ccc29' => '#/43',
'ccc=ccc30' => '#/44',
'ccc=ccc31' => '#/45',
'ccc=ccc32' => '#/46',
'ccc=ccc33' => '#/47',
'ccc=ccc34' => '#/48',
'ccc=ccc35' => '#/49',
'ccc=ccc36' => '#/50',
'ccc=ccc84' => '#/51',
'ccc=ccc91' => '#/52',
'ccc=da' => '#/19',
'ccc=db' => 'Ccc/DB',
'ccc=doubleabove' => '#/19',
'ccc=doublebelow' => 'Ccc/DB',
'ccc=iotasubscript' => '#/20',
'ccc=is' => '#/20',
'ccc=kanavoicing' => '#/21',
'ccc=kv' => '#/21',
'ccc=l' => '#/15',
'ccc=left' => '#/15',
'ccc=nk' => 'Ccc/NK',
'ccc=notreordered' => 'Ccc/NR',
'ccc=nr' => 'Ccc/NR',
'ccc=nukta' => 'Ccc/NK',
'ccc=ov' => 'Ccc/OV',
'ccc=overlay' => 'Ccc/OV',
'ccc=r' => '#/16',
'ccc=right' => '#/16',
'ccc=virama' => 'Ccc/VR',
'ccc=vr' => 'Ccc/VR',
'ce' => 'CE/Y',
'ce=f' => '!CE/Y',
'ce=false' => '!CE/Y',
'ce=n' => '!CE/Y',
'ce=no' => '!CE/Y',
'ce=t' => 'CE/Y',
'ce=true' => 'CE/Y',
'ce=y' => 'CE/Y',
'ce=yes' => 'CE/Y',
'cf' => 'Gc/Cf',
'chakma' => '#/554',
'cham' => 'Sc/Cham',
'changeswhencasefolded' => 'CWCF/Y',
'changeswhencasemapped' => 'CWCM/Y',
'changeswhenlowercased' => 'CWL/Y',
'changeswhennfkccasefolded' => 'CWKCF/Y',
'changeswhentitlecased' => 'CWT/Y',
'changeswhenuppercased' => 'CWU/Y',
'cher' => '#/557',
'cherokee' => '#/557',
'cherokeesup' => '#/272',
'cherokeesupplement' => '#/272',
'ci' => 'CI/Y',
'ci=f' => '!CI/Y',
'ci=false' => '!CI/Y',
'ci=n' => '!CI/Y',
'ci=no' => '!CI/Y',
'ci=t' => 'CI/Y',
'ci=true' => 'CI/Y',
'ci=y' => 'CI/Y',
'ci=yes' => 'CI/Y',
'cjk' => '#/106',
'cjkcompat' => '#/229',
'cjkcompatforms' => '#/313',
'cjkcompatibility' => '#/229',
'cjkcompatibilityforms' => '#/313',
'cjkcompatibilityideographs' => '#/352',
'cjkcompatibilityideographssupplement' => '#/361',
'cjkcompatideographs' => '#/352',
'cjkcompatideographssup' => '#/361',
'cjkexta' => '#/167',
'cjkextb' => '#/168',
'cjkextc' => '#/169',
'cjkextd' => '#/170',
'cjkexte' => '#/171',
'cjkradicalssup' => '#/314',
'cjkradicalssupplement' => '#/314',
'cjkstrokes' => '#/254',
'cjksymbols' => '#/255',
'cjksymbolsandpunctuation' => '#/255',
'cjkunifiedideographs' => '#/106',
'cjkunifiedideographsextensiona' => '#/167',
'cjkunifiedideographsextensionb' => '#/168',
'cjkunifiedideographsextensionc' => '#/169',
'cjkunifiedideographsextensiond' => '#/170',
'cjkunifiedideographsextensione' => '#/171',
'closepunctuation' => 'Gc/Pe',
'cn' => 'Gc/Cn',
'cntrl' => '#/370',
'co' => '#/371',
'combiningdiacriticalmarks' => '#/296',
'combiningdiacriticalmarksextended' => '#/322',
'combiningdiacriticalmarksforsymbols' => '#/362',
'combiningdiacriticalmarkssupplement' => '#/323',
'combininghalfmarks' => '#/232',
'combiningmark' => 'Gc/M',
'combiningmarksforsymbols' => '#/362',
'common' => 'Sc/Zyyy',
'commonindicnumberforms' => '#/337',
'compatjamo' => '#/256',
'compex' => 'CompEx/Y',
'compex=f' => '!CompEx/Y',
'compex=false' => '!CompEx/Y',
'compex=n' => '!CompEx/Y',
'compex=no' => '!CompEx/Y',
'compex=t' => 'CompEx/Y',
'compex=true' => 'CompEx/Y',
'compex=y' => 'CompEx/Y',
'compex=yes' => 'CompEx/Y',
'compositionexclusion' => 'CE/Y',
'connectorpunctuation' => 'WB/EX',
'control' => '#/370',
'controlpictures' => '#/320',
'copt' => '#/558',
'coptic' => '#/558',
'copticepactnumbers' => '#/347',
'countingrod' => '#/273',
'countingrodnumerals' => '#/273',
'cprt' => 'Sc/Cprt',
'cs' => '#/14',
'cuneiform' => 'Sc/Xsux',
'cuneiformnumbers' => '#/332',
'cuneiformnumbersandpunctuation' => '#/332',
'currencysymbol' => 'Gc/Sc',
'currencysymbols' => '#/321',
'cwcf' => 'CWCF/Y',
'cwcf=f' => '!CWCF/Y',
'cwcf=false' => '!CWCF/Y',
'cwcf=n' => '!CWCF/Y',
'cwcf=no' => '!CWCF/Y',
'cwcf=t' => 'CWCF/Y',
'cwcf=true' => 'CWCF/Y',
'cwcf=y' => 'CWCF/Y',
'cwcf=yes' => 'CWCF/Y',
'cwcm' => 'CWCM/Y',
'cwcm=f' => '!CWCM/Y',
'cwcm=false' => '!CWCM/Y',
'cwcm=n' => '!CWCM/Y',
'cwcm=no' => '!CWCM/Y',
'cwcm=t' => 'CWCM/Y',
'cwcm=true' => 'CWCM/Y',
'cwcm=y' => 'CWCM/Y',
'cwcm=yes' => 'CWCM/Y',
'cwkcf' => 'CWKCF/Y',
'cwkcf=f' => '!CWKCF/Y',
'cwkcf=false' => '!CWKCF/Y',
'cwkcf=n' => '!CWKCF/Y',
'cwkcf=no' => '!CWKCF/Y',
'cwkcf=t' => 'CWKCF/Y',
'cwkcf=true' => 'CWKCF/Y',
'cwkcf=y' => 'CWKCF/Y',
'cwkcf=yes' => 'CWKCF/Y',
'cwl' => 'CWL/Y',
'cwl=f' => '!CWL/Y',
'cwl=false' => '!CWL/Y',
'cwl=n' => '!CWL/Y',
'cwl=no' => '!CWL/Y',
'cwl=t' => 'CWL/Y',
'cwl=true' => 'CWL/Y',
'cwl=y' => 'CWL/Y',
'cwl=yes' => 'CWL/Y',
'cwt' => 'CWT/Y',
'cwt=f' => '!CWT/Y',
'cwt=false' => '!CWT/Y',
'cwt=n' => '!CWT/Y',
'cwt=no' => '!CWT/Y',
'cwt=t' => 'CWT/Y',
'cwt=true' => 'CWT/Y',
'cwt=y' => 'CWT/Y',
'cwt=yes' => 'CWT/Y',
'cwu' => 'CWU/Y',
'cwu=f' => '!CWU/Y',
'cwu=false' => '!CWU/Y',
'cwu=n' => '!CWU/Y',
'cwu=no' => '!CWU/Y',
'cwu=t' => 'CWU/Y',
'cwu=true' => 'CWU/Y',
'cwu=y' => 'CWU/Y',
'cwu=yes' => 'CWU/Y',
'cypriot' => 'Sc/Cprt',
'cypriotsyllabary' => '#/333',
'cyrillic' => 'Sc/Cyrl',
'cyrillicexta' => '#/294',
'cyrillicextb' => '#/295',
'cyrillicextendeda' => '#/294',
'cyrillicextendedb' => '#/295',
'cyrillicsup' => '#/274',
'cyrillicsupplement' => '#/274',
'cyrillicsupplementary' => '#/274',
'cyrl' => 'Sc/Cyrl',
'dash' => 'Dash/Y',
'dash=f' => '!Dash/Y',
'dash=false' => '!Dash/Y',
'dash=n' => '!Dash/Y',
'dash=no' => '!Dash/Y',
'dash=t' => 'Dash/Y',
'dash=true' => 'Dash/Y',
'dash=y' => 'Dash/Y',
'dash=yes' => 'Dash/Y',
'dashpunctuation' => 'Gc/Pd',
'decimalnumber' => 'Gc/Nd',
'defaultignorablecodepoint' => 'DI/Y',
'dep' => 'Dep/Y',
'dep=f' => '!Dep/Y',
'dep=false' => '!Dep/Y',
'dep=n' => '!Dep/Y',
'dep=no' => '!Dep/Y',
'dep=t' => 'Dep/Y',
'dep=true' => 'Dep/Y',
'dep=y' => 'Dep/Y',
'dep=yes' => 'Dep/Y',
'deprecated' => 'Dep/Y',
'deseret' => '#/172',
'deva' => 'Sc/Deva',
'devanagari' => 'Sc/Deva',
'devanagariext' => '#/306',
'devanagariextended' => '#/306',
'di' => 'DI/Y',
'di=f' => '!DI/Y',
'di=false' => '!DI/Y',
'di=n' => '!DI/Y',
'di=no' => '!DI/Y',
'di=t' => 'DI/Y',
'di=true' => 'DI/Y',
'di=y' => 'DI/Y',
'di=yes' => 'DI/Y',
'dia' => 'Dia/Y',
'dia=f' => '!Dia/Y',
'dia=false' => '!Dia/Y',
'dia=n' => '!Dia/Y',
'dia=no' => '!Dia/Y',
'dia=t' => 'Dia/Y',
'dia=true' => 'Dia/Y',
'dia=y' => 'Dia/Y',
'dia=yes' => 'Dia/Y',
'diacritic' => 'Dia/Y',
'diacriticals' => '#/296',
'diacriticalsext' => '#/322',
'diacriticalsforsymbols' => '#/362',
'diacriticalssup' => '#/323',
'digit' => 'Gc/Nd',
'dingbats' => '#/207',
'domino' => '#/145',
'dominotiles' => '#/145',
'dsrt' => '#/172',
'dt=can' => 'NFDQC/N',
'dt=canonical' => 'NFDQC/N',
'dt=circle' => 'Dt/Enc',
'dt=com' => 'Dt/Com',
'dt=compat' => 'Dt/Com',
'dt=enc' => 'Dt/Enc',
'dt=fin' => 'Dt/Fin',
'dt=final' => 'Dt/Fin',
'dt=font' => 'Dt/Font',
'dt=fra' => '#/367',
'dt=fraction' => '#/367',
'dt=init' => 'Dt/Init',
'dt=initial' => 'Dt/Init',
'dt=iso' => 'Dt/Iso',
'dt=isolated' => 'Dt/Iso',
'dt=med' => 'Dt/Med',
'dt=medial' => 'Dt/Med',
'dt=nar' => 'Dt/Nar',
'dt=narrow' => 'Dt/Nar',
'dt=nb' => 'Dt/Nb',
'dt=nobreak' => 'Dt/Nb',
'dt=noncanon' => 'Dt/NonCanon',
'dt=noncanonical' => 'Dt/NonCanon',
'dt=none' => 'NFKDQC/Y',
'dt=small' => '#/368',
'dt=sml' => '#/368',
'dt=sqr' => 'Dt/Sqr',
'dt=square' => 'Dt/Sqr',
'dt=sub' => 'Dt/Sub',
'dt=sup' => 'Dt/Sup',
'dt=super' => 'Dt/Sup',
'dt=vert' => 'Dt/Vert',
'dt=vertical' => 'Dt/Vert',
'dt=wide' => '#/369',
'dupl' => 'Sc/Dupl',
'duployan' => 'Sc/Dupl',
'ea=a' => 'Ea/A',
'ea=ambiguous' => 'Ea/A',
'ea=f' => '#/369',
'ea=fullwidth' => '#/369',
'ea=h' => 'Ea/H',
'ea=halfwidth' => 'Ea/H',
'ea=n' => 'Ea/N',
'ea=na' => 'Ea/Na',
'ea=narrow' => 'Ea/Na',
'ea=neutral' => 'Ea/N',
'ea=w' => 'Ea/W',
'ea=wide' => 'Ea/W',
'earlydynasticcuneiform' => '#/363',
'egyp' => '#/559',
'egyptianhieroglyphs' => '#/559',
'elba' => '#/560',
'elbasan' => '#/560',
'emoticons' => '#/231',
'enclosedalphanum' => '#/334',
'enclosedalphanumerics' => '#/334',
'enclosedalphanumericsupplement' => '#/354',
'enclosedalphanumsup' => '#/354',
'enclosedcjk' => '#/275',
'enclosedcjklettersandmonths' => '#/275',
'enclosedideographicsup' => '#/364',
'enclosedideographicsupplement' => '#/364',
'enclosingmark' => 'Gc/Me',
'ethi' => 'Sc/Ethi',
'ethiopic' => 'Sc/Ethi',
'ethiopicext' => '#/276',
'ethiopicexta' => '#/297',
'ethiopicextended' => '#/276',
'ethiopicextendeda' => '#/297',
'ethiopicsup' => '#/277',
'ethiopicsupplement' => '#/277',
'ext' => 'Ext/Y',
'ext=f' => '!Ext/Y',
'ext=false' => '!Ext/Y',
'ext=n' => '!Ext/Y',
'ext=no' => '!Ext/Y',
'ext=t' => 'Ext/Y',
'ext=true' => 'Ext/Y',
'ext=y' => 'Ext/Y',
'ext=yes' => 'Ext/Y',
'extender' => 'Ext/Y',
'finalpunctuation' => 'Gc/Pf',
'format' => 'Gc/Cf',
'fullcompositionexclusion' => 'CompEx/Y',
'gc=c' => 'Gc/C',
'gc=casedletter' => 'Gc/LC',
'gc=cc' => '#/370',
'gc=cf' => 'Gc/Cf',
'gc=closepunctuation' => 'Gc/Pe',
'gc=cn' => 'Gc/Cn',
'gc=cntrl' => '#/370',
'gc=co' => '#/371',
'gc=combiningmark' => 'Gc/M',
'gc=connectorpunctuation' => 'WB/EX',
'gc=control' => '#/370',
'gc=cs' => '#/14',
'gc=currencysymbol' => 'Gc/Sc',
'gc=dashpunctuation' => 'Gc/Pd',
'gc=decimalnumber' => 'Gc/Nd',
'gc=digit' => 'Gc/Nd',
'gc=enclosingmark' => 'Gc/Me',
'gc=finalpunctuation' => 'Gc/Pf',
'gc=format' => 'Gc/Cf',
'gc=initialpunctuation' => 'Gc/Pi',
'gc=l' => 'Gc/L',
'gc=l&' => 'Gc/LC',
'gc=l_' => 'Gc/LC',
'gc=lc' => 'Gc/LC',
'gc=letter' => 'Gc/L',
'gc=letternumber' => 'Gc/Nl',
'gc=lineseparator' => '#/372',
'gc=ll' => 'Gc/Ll',
'gc=lm' => 'Gc/Lm',
'gc=lo' => 'Gc/Lo',
'gc=lowercaseletter' => 'Gc/Ll',
'gc=lt' => 'Perl/Title',
'gc=lu' => 'Gc/Lu',
'gc=m' => 'Gc/M',
'gc=mark' => 'Gc/M',
'gc=mathsymbol' => 'Gc/Sm',
'gc=mc' => 'Gc/Mc',
'gc=me' => 'Gc/Me',
'gc=mn' => 'Gc/Mn',
'gc=modifierletter' => 'Gc/Lm',
'gc=modifiersymbol' => 'Gc/Sk',
'gc=n' => 'Gc/N',
'gc=nd' => 'Gc/Nd',
'gc=nl' => 'Gc/Nl',
'gc=no' => 'Gc/No',
'gc=nonspacingmark' => 'Gc/Mn',
'gc=number' => 'Gc/N',
'gc=openpunctuation' => 'Gc/Ps',
'gc=other' => 'Gc/C',
'gc=otherletter' => 'Gc/Lo',
'gc=othernumber' => 'Gc/No',
'gc=otherpunctuation' => 'Gc/Po',
'gc=othersymbol' => 'Gc/So',
'gc=p' => 'Gc/P',
'gc=paragraphseparator' => '#/373',
'gc=pc' => 'WB/EX',
'gc=pd' => 'Gc/Pd',
'gc=pe' => 'Gc/Pe',
'gc=pf' => 'Gc/Pf',
'gc=pi' => 'Gc/Pi',
'gc=po' => 'Gc/Po',
'gc=privateuse' => '#/371',
'gc=ps' => 'Gc/Ps',
'gc=punct' => 'Gc/P',
'gc=punctuation' => 'Gc/P',
'gc=s' => 'Gc/S',
'gc=sc' => 'Gc/Sc',
'gc=separator' => 'Gc/Z',
'gc=sk' => 'Gc/Sk',
'gc=sm' => 'Gc/Sm',
'gc=so' => 'Gc/So',
'gc=spaceseparator' => 'Gc/Zs',
'gc=spacingmark' => 'Gc/Mc',
'gc=surrogate' => '#/14',
'gc=symbol' => 'Gc/S',
'gc=titlecaseletter' => 'Perl/Title',
'gc=unassigned' => 'Gc/Cn',
'gc=uppercaseletter' => 'Gc/Lu',
'gc=z' => 'Gc/Z',
'gc=zl' => '#/372',
'gc=zp' => '#/373',
'gc=zs' => 'Gc/Zs',
'gcb=cn' => 'GCB/CN',
'gcb=control' => 'GCB/CN',
'gcb=cr' => '#/64',
'gcb=ex' => 'GCB/EX',
'gcb=extend' => 'GCB/EX',
'gcb=l' => '#/61',
'gcb=lf' => '#/65',
'gcb=lv' => 'GCB/LV',
'gcb=lvt' => 'GCB/LVT',
'gcb=other' => 'GCB/XX',
'gcb=pp' => '#/0',
'gcb=prepend' => '#/0',
'gcb=regionalindicator' => '#/66',
'gcb=ri' => '#/66',
'gcb=sm' => 'GCB/SM',
'gcb=spacingmark' => 'GCB/SM',
'gcb=t' => '#/62',
'gcb=v' => '#/63',
'gcb=xx' => 'GCB/XX',
'generalpunctuation' => '#/287',
'geometricshapes' => '#/324',
'geometricshapesext' => '#/348',
'geometricshapesextended' => '#/348',
'geor' => 'Sc/Geor',
'georgian' => 'Sc/Geor',
'georgiansup' => '#/278',
'georgiansupplement' => '#/278',
'glag' => '#/561',
'glagolitic' => '#/561',
'goth' => '#/562',
'gothic' => '#/562',
'gran' => 'Sc/Gran',
'grantha' => 'Sc/Gran',
'graph' => 'Perl/Graph',
'graphemebase' => 'GrBase/Y',
'graphemeextend' => 'GCB/EX',
'grbase' => 'GrBase/Y',
'grbase=f' => '!GrBase/Y',
'grbase=false' => '!GrBase/Y',
'grbase=n' => '!GrBase/Y',
'grbase=no' => '!GrBase/Y',
'grbase=t' => 'GrBase/Y',
'grbase=true' => 'GrBase/Y',
'grbase=y' => 'GrBase/Y',
'grbase=yes' => 'GrBase/Y',
'greek' => 'Sc/Grek',
'greekandcoptic' => '#/128',
'greekext' => '#/211',
'greekextended' => '#/211',
'grek' => 'Sc/Grek',
'grext' => 'GCB/EX',
'grext=f' => '!GCB/EX',
'grext=false' => '!GCB/EX',
'grext=n' => '!GCB/EX',
'grext=no' => '!GCB/EX',
'grext=t' => 'GCB/EX',
'grext=true' => 'GCB/EX',
'grext=y' => 'GCB/EX',
'grext=yes' => 'GCB/EX',
'gujarati' => 'Sc/Gujr',
'gujr' => 'Sc/Gujr',
'gurmukhi' => 'Sc/Guru',
'guru' => 'Sc/Guru',
'halfandfullforms' => '#/335',
'halfmarks' => '#/232',
'halfwidthandfullwidthforms' => '#/335',
'han' => 'Sc/Han',
'hang' => 'Sc/Hang',
'hangul' => 'Sc/Hang',
'hangulcompatibilityjamo' => '#/256',
'hanguljamo' => '#/116',
'hanguljamoextendeda' => '#/215',
'hanguljamoextendedb' => '#/216',
'hangulsyllables' => '#/147',
'hani' => 'Sc/Han',
'hano' => '#/563',
'hanunoo' => '#/563',
'hatr' => '#/564',
'hatran' => '#/564',
'hebr' => 'Sc/Hebr',
'hebrew' => 'Sc/Hebr',
'hex' => 'Hex/Y',
'hex=f' => '!Hex/Y',
'hex=false' => '!Hex/Y',
'hex=n' => '!Hex/Y',
'hex=no' => '!Hex/Y',
'hex=t' => 'Hex/Y',
'hex=true' => 'Hex/Y',
'hex=y' => 'Hex/Y',
'hex=yes' => 'Hex/Y',
'hexdigit' => 'Hex/Y',
'highprivateusesurrogates' => '#/336',
'highpusurrogates' => '#/336',
'highsurrogates' => '#/315',
'hira' => 'Sc/Hira',
'hiragana' => 'Sc/Hira',
'hluw' => '#/565',
'hmng' => 'Sc/Hmng',
'horizspace' => 'Perl/Blank',
'hst=l' => '#/61',
'hst=leadingjamo' => '#/61',
'hst=lv' => 'GCB/LV',
'hst=lvsyllable' => 'GCB/LV',
'hst=lvt' => 'GCB/LVT',
'hst=lvtsyllable' => 'GCB/LVT',
'hst=na' => 'Hst/NA',
'hst=notapplicable' => 'Hst/NA',
'hst=t' => '#/62',
'hst=trailingjamo' => '#/62',
'hst=v' => '#/63',
'hst=voweljamo' => '#/63',
'hung' => '#/566',
'hyphen' => 'Hyphen/T',
'hyphen=f' => '!Hyphen/T',
'hyphen=false' => '!Hyphen/T',
'hyphen=n' => '!Hyphen/T',
'hyphen=no' => '!Hyphen/T',
'hyphen=t' => 'Hyphen/T',
'hyphen=true' => 'Hyphen/T',
'hyphen=y' => 'Hyphen/T',
'hyphen=yes' => 'Hyphen/T',
'idc' => 'IDC/Y',
'idc=f' => '!IDC/Y',
'idc=false' => '!IDC/Y',
'idc=n' => '!IDC/Y',
'idc=no' => '!IDC/Y',
'idc=t' => 'IDC/Y',
'idc=true' => 'IDC/Y',
'idc=y' => 'IDC/Y',
'idc=yes' => 'IDC/Y',
'idcontinue' => 'IDC/Y',
'ideo' => 'Ideo/Y',
'ideo=f' => '!Ideo/Y',
'ideo=false' => '!Ideo/Y',
'ideo=n' => '!Ideo/Y',
'ideo=no' => '!Ideo/Y',
'ideo=t' => 'Ideo/Y',
'ideo=true' => 'Ideo/Y',
'ideo=y' => 'Ideo/Y',
'ideo=yes' => 'Ideo/Y',
'ideographic' => 'Ideo/Y',
'ideographicdescriptioncharacters' => '#/107',
'ids' => 'IDS/Y',
'ids=f' => '!IDS/Y',
'ids=false' => '!IDS/Y',
'ids=n' => '!IDS/Y',
'ids=no' => '!IDS/Y',
'ids=t' => 'IDS/Y',
'ids=true' => 'IDS/Y',
'ids=y' => 'IDS/Y',
'ids=yes' => 'IDS/Y',
'idsb' => '#/67',
'idsb=f' => '#/!67',
'idsb=false' => '#/!67',
'idsb=n' => '#/!67',
'idsb=no' => '#/!67',
'idsb=t' => '#/67',
'idsb=true' => '#/67',
'idsb=y' => '#/67',
'idsb=yes' => '#/67',
'idsbinaryoperator' => '#/67',
'idst' => '#/68',
'idst=f' => '#/!68',
'idst=false' => '#/!68',
'idst=n' => '#/!68',
'idst=no' => '#/!68',
'idst=t' => '#/68',
'idst=true' => '#/68',
'idst=y' => '#/68',
'idst=yes' => '#/68',
'idstart' => 'IDS/Y',
'idstrinaryoperator' => '#/68',
'imperialaramaic' => '#/544',
'in=unassigned' => 'Age/NA',
'inaegeannumbers' => '#/304',
'inahom' => '#/114',
'inalchemical' => '#/250',
'inalchemicalsymbols' => '#/250',
'inalphabeticpf' => '#/293',
'inalphabeticpresentationforms' => '#/293',
'inanatolianhieroglyphs' => '#/357',
'inancientgreekmusic' => '#/343',
'inancientgreekmusicalnotation' => '#/343',
'inancientgreeknumbers' => '#/351',
'inancientsymbols' => '#/311',
'inarabic' => '#/139',
'inarabicexta' => '#/251',
'inarabicextendeda' => '#/251',
'inarabicmath' => '#/252',
'inarabicmathematicalalphabeticsymbols' => '#/252',
'inarabicpfa' => '#/226',
'inarabicpfb' => '#/227',
'inarabicpresentationformsa' => '#/226',
'inarabicpresentationformsb' => '#/227',
'inarabicsup' => '#/228',
'inarabicsupplement' => '#/228',
'inarmenian' => '#/199',
'inarrows' => '#/140',
'inascii' => '#/124',
'inavestan' => '#/164',
'inbalinese' => '#/200',
'inbamum' => '#/125',
'inbamumsup' => '#/201',
'inbamumsupplement' => '#/201',
'inbasiclatin' => '#/124',
'inbassavah' => '#/202',
'inbatak' => '#/126',
'inbengali' => '#/165',
'inblockelements' => '#/305',
'inbopomofo' => '#/203',
'inbopomofoext' => '#/271',
'inbopomofoextended' => '#/271',
'inboxdrawing' => '#/253',
'inbrahmi' => '#/141',
'inbraille' => '#/166',
'inbraillepatterns' => '#/166',
'inbuginese' => '#/204',
'inbuhid' => '#/127',
'inbyzantinemusic' => '#/312',
'inbyzantinemusicalsymbols' => '#/312',
'incanadiansyllabics' => '#/123',
'incarian' => '#/142',
'incaucasianalbanian' => '#/344',
'inchakma' => '#/143',
'incham' => '#/115',
'incherokee' => '#/205',
'incherokeesup' => '#/272',
'incherokeesupplement' => '#/272',
'incjk' => '#/106',
'incjkcompat' => '#/229',
'incjkcompatforms' => '#/313',
'incjkcompatibility' => '#/229',
'incjkcompatibilityforms' => '#/313',
'incjkcompatibilityideographs' => '#/352',
'incjkcompatibilityideographssupplement' => '#/361',
'incjkcompatideographs' => '#/352',
'incjkcompatideographssup' => '#/361',
'incjkexta' => '#/167',
'incjkextb' => '#/168',
'incjkextc' => '#/169',
'incjkextd' => '#/170',
'incjkexte' => '#/171',
'incjkradicalssup' => '#/314',
'incjkradicalssupplement' => '#/314',
'incjkstrokes' => '#/254',
'incjksymbols' => '#/255',
'incjksymbolsandpunctuation' => '#/255',
'incjkunifiedideographs' => '#/106',
'incjkunifiedideographsextensiona' => '#/167',
'incjkunifiedideographsextensionb' => '#/168',
'incjkunifiedideographsextensionc' => '#/169',
'incjkunifiedideographsextensiond' => '#/170',
'incjkunifiedideographsextensione' => '#/171',
'incombiningdiacriticalmarks' => '#/296',
'incombiningdiacriticalmarksextended' => '#/322',
'incombiningdiacriticalmarksforsymbols' => '#/362',
'incombiningdiacriticalmarkssupplement' => '#/323',
'incombininghalfmarks' => '#/232',
'incombiningmarksforsymbols' => '#/362',
'incommonindicnumberforms' => '#/337',
'incompatjamo' => '#/256',
'incontrolpictures' => '#/320',
'incoptic' => '#/144',
'incopticepactnumbers' => '#/347',
'incountingrod' => '#/273',
'incountingrodnumerals' => '#/273',
'incuneiform' => '#/230',
'incuneiformnumbers' => '#/332',
'incuneiformnumbersandpunctuation' => '#/332',
'incurrencysymbols' => '#/321',
'incypriotsyllabary' => '#/333',
'incyrillic' => '#/206',
'incyrillicexta' => '#/294',
'incyrillicextb' => '#/295',
'incyrillicextendeda' => '#/294',
'incyrillicextendedb' => '#/295',
'incyrillicsup' => '#/274',
'incyrillicsupplement' => '#/274',
'incyrillicsupplementary' => '#/274',
'indeseret' => '#/172',
'indevanagari' => '#/257',
'indevanagariext' => '#/306',
'indevanagariextended' => '#/306',
'indiacriticals' => '#/296',
'indiacriticalsext' => '#/322',
'indiacriticalsforsymbols' => '#/362',
'indiacriticalssup' => '#/323',
'indicnumberforms' => '#/337',
'indingbats' => '#/207',
'indomino' => '#/145',
'indominotiles' => '#/145',
'induployan' => '#/208',
'inearlydynasticcuneiform' => '#/363',
'inegyptianhieroglyphs' => '#/353',
'inelbasan' => '#/173',
'inemoticons' => '#/231',
'inenclosedalphanum' => '#/334',
'inenclosedalphanumerics' => '#/334',
'inenclosedalphanumericsupplement' => '#/354',
'inenclosedalphanumsup' => '#/354',
'inenclosedcjk' => '#/275',
'inenclosedcjklettersandmonths' => '#/275',
'inenclosedideographicsup' => '#/364',
'inenclosedideographicsupplement' => '#/364',
'inethiopic' => '#/209',
'inethiopicext' => '#/276',
'inethiopicexta' => '#/297',
'inethiopicextended' => '#/276',
'inethiopicextendeda' => '#/297',
'inethiopicsup' => '#/277',
'inethiopicsupplement' => '#/277',
'ingeneralpunctuation' => '#/287',
'ingeometricshapes' => '#/324',
'ingeometricshapesext' => '#/348',
'ingeometricshapesextended' => '#/348',
'ingeorgian' => '#/210',
'ingeorgiansup' => '#/278',
'ingeorgiansupplement' => '#/278',
'inglagolitic' => '#/258',
'ingothic' => '#/146',
'ingrantha' => '#/174',
'ingreek' => '#/128',
'ingreekandcoptic' => '#/128',
'ingreekext' => '#/211',
'ingreekextended' => '#/211',
'ingujarati' => '#/212',
'ingurmukhi' => '#/213',
'inhalfandfullforms' => '#/335',
'inhalfmarks' => '#/232',
'inhalfwidthandfullwidthforms' => '#/335',
'inhangul' => '#/147',
'inhangulcompatibilityjamo' => '#/256',
'inhanguljamo' => '#/116',
'inhanguljamoextendeda' => '#/215',
'inhanguljamoextendedb' => '#/216',
'inhangulsyllables' => '#/147',
'inhanunoo' => '#/175',
'inhatran' => '#/148',
'inhebrew' => '#/149',
'inherited' => 'Sc/Zinh',
'inhighprivateusesurrogates' => '#/336',
'inhighpusurrogates' => '#/336',
'inhighsurrogates' => '#/315',
'inhiragana' => '#/214',
'inidc' => '#/107',
'inideographicdescriptioncharacters' => '#/107',
'inimperialaramaic' => '#/325',
'inindicnumberforms' => '#/337',
'ininscriptionalpahlavi' => '#/358',
'ininscriptionalparthian' => '#/359',
'inipaext' => '#/150',
'inipaextensions' => '#/150',
'initialpunctuation' => 'Gc/Pi',
'injamo' => '#/116',
'injamoexta' => '#/215',
'injamoextb' => '#/216',
'injavanese' => '#/217',
'inkaithi' => '#/151',
'inkanasup' => '#/176',
'inkanasupplement' => '#/176',
'inkanbun' => '#/152',
'inkangxi' => '#/153',
'inkangxiradicals' => '#/153',
'inkannada' => '#/177',
'inkatakana' => '#/218',
'inkatakanaext' => '#/279',
'inkatakanaphoneticextensions' => '#/279',
'inkayahli' => '#/178',
'inkharoshthi' => '#/259',
'inkhmer' => '#/129',
'inkhmersymbols' => '#/298',
'inkhojki' => '#/154',
'inkhudawadi' => '#/233',
'inlao' => '#/108',
'inlatin1' => '#/155',
'inlatin1sup' => '#/155',
'inlatin1supplement' => '#/155',
'inlatinexta' => '#/234',
'inlatinextadditional' => '#/349',
'inlatinextb' => '#/235',
'inlatinextc' => '#/236',
'inlatinextd' => '#/237',
'inlatinexte' => '#/238',
'inlatinextendeda' => '#/234',
'inlatinextendedadditional' => '#/349',
'inlatinextendedb' => '#/235',
'inlatinextendedc' => '#/236',
'inlatinextendedd' => '#/237',
'inlatinextendede' => '#/238',
'inlepcha' => '#/156',
'inletterlikesymbols' => '#/345',
'inlimbu' => '#/130',
'inlineara' => '#/179',
'inlinearbideograms' => '#/338',
'inlinearbsyllabary' => '#/339',
'inlisu' => '#/117',
'inlowsurrogates' => '#/307',
'inlycian' => '#/157',
'inlydian' => '#/158',
'inmahajani' => '#/219',
'inmahjong' => '#/180',
'inmahjongtiles' => '#/180',
'inmalayalam' => '#/239',
'inmandaic' => '#/181',
'inmanichaean' => '#/260',
'inmathalphanum' => '#/299',
'inmathematicalalphanumericsymbols' => '#/299',
'inmathematicaloperators' => '#/308',
'inmathoperators' => '#/308',
'inmeeteimayek' => '#/280',
'inmeeteimayekext' => '#/316',
'inmeeteimayekextensions' => '#/316',
'inmendekikakui' => '#/300',
'inmeroiticcursive' => '#/326',
'inmeroitichieroglyphs' => '#/355',
'inmiao' => '#/118',
'inmiscarrows' => '#/261',
'inmiscellaneousmathematicalsymbolsa' => '#/340',
'inmiscellaneousmathematicalsymbolsb' => '#/341',
'inmiscellaneoussymbols' => '#/281',
'inmiscellaneoussymbolsandarrows' => '#/261',
'inmiscellaneoussymbolsandpictographs' => '#/327',
'inmiscellaneoustechnical' => '#/309',
'inmiscmathsymbolsa' => '#/340',
'inmiscmathsymbolsb' => '#/341',
'inmiscpictographs' => '#/327',
'inmiscsymbols' => '#/281',
'inmisctechnical' => '#/309',
'inmodi' => '#/119',
'inmodifierletters' => '#/328',
'inmodifiertoneletters' => '#/356',
'inmongolian' => '#/240',
'inmro' => '#/109',
'inmultani' => '#/182',
'inmusic' => '#/131',
'inmusicalsymbols' => '#/131',
'inmyanmar' => '#/183',
'inmyanmarexta' => '#/282',
'inmyanmarextb' => '#/283',
'inmyanmarextendeda' => '#/282',
'inmyanmarextendedb' => '#/283',
'innabataean' => '#/241',
'innb' => 'Blk/NB',
'innewtailue' => '#/242',
'innko' => '#/110',
'innoblock' => 'Blk/NB',
'innumberforms' => '#/284',
'inocr' => '#/111',
'inogham' => '#/132',
'inolchiki' => '#/184',
'inoldhungarian' => '#/301',
'inolditalic' => '#/243',
'inoldnortharabian' => '#/329',
'inoldpermic' => '#/244',
'inoldpersian' => '#/262',
'inoldsoutharabian' => '#/330',
'inoldturkic' => '#/245',
'inopticalcharacterrecognition' => '#/111',
'inoriya' => '#/133',
'inornamentaldingbats' => '#/350',
'inosmanya' => '#/185',
'inpahawhhmong' => '#/285',
'inpalmyrene' => '#/246',
'inpaucinhau' => '#/247',
'inpc=bottom' => 'InPC/Bottom',
'inpc=bottomandright' => '#/69',
'inpc=left' => 'InPC/Left',
'inpc=leftandright' => 'InPC/LeftAndR',
'inpc=na' => 'InPC/NA',
'inpc=overstruck' => 'InPC/Overstru',
'inpc=right' => 'InPC/Right',
'inpc=top' => 'InPC/Top',
'inpc=topandbottom' => 'InPC/TopAndBo',
'inpc=topandbottomandright' => '#/70',
'inpc=topandleft' => 'InPC/TopAndLe',
'inpc=topandleftandright' => 'InPC/TopAndL2',
'inpc=topandright' => 'InPC/TopAndRi',
'inpc=visualorderleft' => 'InPC/VisualOr',
'inphagspa' => '#/186',
'inphaistos' => '#/220',
'inphaistosdisc' => '#/220',
'inphoenician' => '#/263',
'inphoneticext' => '#/286',
'inphoneticextensions' => '#/286',
'inphoneticextensionssupplement' => '#/317',
'inphoneticextsup' => '#/317',
'inplayingcards' => '#/302',
'inprivateuse' => '#/112',
'inprivateusearea' => '#/112',
'inpsalterpahlavi' => '#/318',
'inpua' => '#/112',
'inpunctuation' => '#/287',
'inrejang' => '#/159',
'inrumi' => '#/120',
'inruminumeralsymbols' => '#/120',
'inrunic' => '#/134',
'insamaritan' => '#/248',
'insaurashtra' => '#/264',
'insc=avagraha' => 'InSC/Avagraha',
'insc=bindu' => 'InSC/Bindu',
'insc=brahmijoiningnumber' => '#/81',
'insc=cantillationmark' => 'InSC/Cantilla',
'insc=consonant' => 'InSC/Consonan',
'insc=consonantdead' => '#/75',
'insc=consonantfinal' => 'InSC/Consona2',
'insc=consonantheadletter' => '#/82',
'insc=consonantkiller' => '#/77',
'insc=consonantmedial' => 'InSC/Consona3',
'insc=consonantplaceholder' => 'InSC/Consona5',
'insc=consonantprecedingrepha' => '#/84',
'insc=consonantprefixed' => '#/80',
'insc=consonantsubjoined' => 'InSC/Consona4',
'insc=consonantsucceedingrepha' => 'InSC/Consona6',
'insc=consonantwithstacker' => '#/83',
'insc=geminationmark' => '#/76',
'insc=invisiblestacker' => 'InSC/Invisibl',
'insc=joiner' => '#/71',
'insc=modifyingletter' => '#/78',
'insc=nonjoiner' => '#/72',
'insc=nukta' => 'InSC/Nukta',
'insc=number' => 'InSC/Number',
'insc=numberjoiner' => '#/74',
'insc=other' => 'InSC/Other',
'insc=purekiller' => 'InSC/PureKill',
'insc=registershifter' => '#/79',
'insc=syllablemodifier' => 'InSC/Syllable',
'insc=toneletter' => '#/73',
'insc=tonemark' => 'InSC/ToneMark',
'insc=virama' => 'InSC/Virama',
'insc=visarga' => 'InSC/Visarga',
'insc=vowel' => 'InSC/Vowel',
'insc=voweldependent' => 'InSC/VowelDep',
'insc=vowelindependent' => 'InSC/VowelInd',
'inscriptionalpahlavi' => '#/592',
'inscriptionalparthian' => '#/595',
'insharada' => '#/187',
'inshavian' => '#/188',
'inshorthandformatcontrols' => '#/365',
'insiddham' => '#/189',
'insinhala' => '#/190',
'insinhalaarchaicnumbers' => '#/360',
'insmallforms' => '#/265',
'insmallformvariants' => '#/265',
'insorasompeng' => '#/288',
'inspacingmodifierletters' => '#/328',
'inspecials' => '#/221',
'insundanese' => '#/249',
'insundanesesup' => '#/303',
'insundanesesupplement' => '#/303',
'insuparrowsa' => '#/266',
'insuparrowsb' => '#/267',
'insuparrowsc' => '#/268',
'insuperandsub' => '#/289',
'insuperscriptsandsubscripts' => '#/289',
'insupmathoperators' => '#/342',
'insupplementalarrowsa' => '#/266',
'insupplementalarrowsb' => '#/267',
'insupplementalarrowsc' => '#/268',
'insupplementalmathematicaloperators' => '#/342',
'insupplementalpunctuation' => '#/319',
'insupplementalsymbolsandpictographs' => '#/366',
'insupplementaryprivateuseareaa' => '#/191',
'insupplementaryprivateuseareab' => '#/192',
'insuppuaa' => '#/191',
'insuppuab' => '#/192',
'insuppunctuation' => '#/319',
'insupsymbolsandpictographs' => '#/366',
'insuttonsignwriting' => '#/346',
'insylotinagri' => '#/290',
'insyriac' => '#/160',
'intagalog' => '#/193',
'intagbanwa' => '#/222',
'intags' => '#/121',
'intaile' => '#/135',
'intaitham' => '#/194',
'intaiviet' => '#/195',
'intaixuanjing' => '#/291',
'intaixuanjingsymbols' => '#/291',
'intakri' => '#/136',
'intamil' => '#/137',
'intelugu' => '#/161',
'inthaana' => '#/162',
'inthai' => '#/122',
'intibetan' => '#/196',
'intifinagh' => '#/223',
'intirhuta' => '#/197',
'intransportandmap' => '#/331',
'intransportandmapsymbols' => '#/331',
'inucas' => '#/123',
'inucasext' => '#/198',
'inugaritic' => '#/224',
'inunifiedcanadianaboriginalsyllabics' => '#/123',
'inunifiedcanadianaboriginalsyllabicsextended' => '#/198',
'invai' => '#/113',
'invariationselectors' => '#/105',
'invariationselectorssupplement' => '#/138',
'invedicext' => '#/225',
'invedicextensions' => '#/225',
'inverticalforms' => '#/310',
'invs' => '#/105',
'invssup' => '#/138',
'inwarangciti' => '#/269',
'inyijing' => '#/163',
'inyijinghexagramsymbols' => '#/163',
'inyiradicals' => '#/270',
'inyisyllables' => '#/292',
'ipaext' => '#/150',
'ipaextensions' => '#/150',
'isaegeannumbers' => '#/304',
'isaghb' => '#/542',
'isahex' => '#/60',
'isahom' => '#/543',
'isalchemical' => '#/250',
'isalchemicalsymbols' => '#/250',
'isall' => '#/1',
'isalnum' => 'Perl/Alnum',
'isalpha' => 'Alpha/Y',
'isalphabetic' => 'Alpha/Y',
'isalphabeticpf' => '#/293',
'isalphabeticpresentationforms' => '#/293',
'isanatolianhieroglyphs' => '#/565',
'isancientgreekmusic' => '#/343',
'isancientgreekmusicalnotation' => '#/343',
'isancientgreeknumbers' => '#/351',
'isancientsymbols' => '#/311',
'isany' => '#/2',
'isarab' => 'Sc/Arab',
'isarabic' => 'Sc/Arab',
'isarabicexta' => '#/251',
'isarabicextendeda' => '#/251',
'isarabicmath' => '#/252',
'isarabicmathematicalalphabeticsymbols' => '#/252',
'isarabicpfa' => '#/226',
'isarabicpfb' => '#/227',
'isarabicpresentationformsa' => '#/226',
'isarabicpresentationformsb' => '#/227',
'isarabicsup' => '#/228',
'isarabicsupplement' => '#/228',
'isarmenian' => 'Sc/Armn',
'isarmi' => '#/544',
'isarmn' => 'Sc/Armn',
'isarrows' => '#/140',
'isascii' => '#/124',
'isasciihexdigit' => '#/60',
'isassigned' => 'Perl/Assigned',
'isavestan' => '#/545',
'isavst' => '#/545',
'isbali' => '#/546',
'isbalinese' => '#/546',
'isbamu' => '#/547',
'isbamum' => '#/547',
'isbamumsup' => '#/201',
'isbamumsupplement' => '#/201',
'isbasiclatin' => '#/124',
'isbass' => '#/548',
'isbassavah' => '#/548',
'isbatak' => '#/549',
'isbatk' => '#/549',
'isbeng' => 'Sc/Beng',
'isbengali' => 'Sc/Beng',
'isbidic' => 'BidiC/Y',
'isbidicontrol' => 'BidiC/Y',
'isbidim' => 'BidiM/Y',
'isbidimirrored' => 'BidiM/Y',
'isblank' => 'Perl/Blank',
'isblockelements' => '#/305',
'isbopo' => '#/550',
'isbopomofo' => '#/550',
'isbopomofoext' => '#/271',
'isbopomofoextended' => '#/271',
'isboxdrawing' => '#/253',
'isbrah' => '#/551',
'isbrahmi' => '#/551',
'isbrai' => '#/166',
'isbraille' => '#/166',
'isbraillepatterns' => '#/166',
'isbugi' => '#/552',
'isbuginese' => '#/552',
'isbuhd' => '#/553',
'isbuhid' => '#/553',
'isbyzantinemusic' => '#/312',
'isbyzantinemusicalsymbols' => '#/312',
'isc' => 'Gc/C',
'iscakm' => '#/554',
'iscanadianaboriginal' => '#/555',
'iscanadiansyllabics' => '#/123',
'iscans' => '#/555',
'iscari' => '#/556',
'iscarian' => '#/556',
'iscased' => 'Cased/Y',
'iscasedletter' => 'Gc/LC',
'iscaseignorable' => 'CI/Y',
'iscaucasianalbanian' => '#/542',
'iscc' => '#/370',
'isce' => 'CE/Y',
'iscf' => 'Gc/Cf',
'ischakma' => '#/554',
'ischam' => 'Sc/Cham',
'ischangeswhencasefolded' => 'CWCF/Y',
'ischangeswhencasemapped' => 'CWCM/Y',
'ischangeswhenlowercased' => 'CWL/Y',
'ischangeswhennfkccasefolded' => 'CWKCF/Y',
'ischangeswhentitlecased' => 'CWT/Y',
'ischangeswhenuppercased' => 'CWU/Y',
'ischer' => '#/557',
'ischerokee' => '#/557',
'ischerokeesup' => '#/272',
'ischerokeesupplement' => '#/272',
'isci' => 'CI/Y',
'iscjk' => '#/106',
'iscjkcompat' => '#/229',
'iscjkcompatforms' => '#/313',
'iscjkcompatibility' => '#/229',
'iscjkcompatibilityforms' => '#/313',
'iscjkcompatibilityideographs' => '#/352',
'iscjkcompatibilityideographssupplement' => '#/361',
'iscjkcompatideographs' => '#/352',
'iscjkcompatideographssup' => '#/361',
'iscjkexta' => '#/167',
'iscjkextb' => '#/168',
'iscjkextc' => '#/169',
'iscjkextd' => '#/170',
'iscjkexte' => '#/171',
'iscjkradicalssup' => '#/314',
'iscjkradicalssupplement' => '#/314',
'iscjkstrokes' => '#/254',
'iscjksymbols' => '#/255',
'iscjksymbolsandpunctuation' => '#/255',
'iscjkunifiedideographs' => '#/106',
'iscjkunifiedideographsextensiona' => '#/167',
'iscjkunifiedideographsextensionb' => '#/168',
'iscjkunifiedideographsextensionc' => '#/169',
'iscjkunifiedideographsextensiond' => '#/170',
'iscjkunifiedideographsextensione' => '#/171',
'isclosepunctuation' => 'Gc/Pe',
'iscn' => 'Gc/Cn',
'iscntrl' => '#/370',
'isco' => '#/371',
'iscombiningdiacriticalmarks' => '#/296',
'iscombiningdiacriticalmarksextended' => '#/322',
'iscombiningdiacriticalmarksforsymbols' => '#/362',
'iscombiningdiacriticalmarkssupplement' => '#/323',
'iscombininghalfmarks' => '#/232',
'iscombiningmark' => 'Gc/M',
'iscombiningmarksforsymbols' => '#/362',
'iscommon' => 'Sc/Zyyy',
'iscommonindicnumberforms' => '#/337',
'iscompatjamo' => '#/256',
'iscompex' => 'CompEx/Y',
'iscompositionexclusion' => 'CE/Y',
'isconnectorpunctuation' => 'WB/EX',
'iscontrol' => '#/370',
'iscontrolpictures' => '#/320',
'iscopt' => '#/558',
'iscoptic' => '#/558',
'iscopticepactnumbers' => '#/347',
'iscountingrod' => '#/273',
'iscountingrodnumerals' => '#/273',
'iscprt' => 'Sc/Cprt',
'iscs' => '#/14',
'iscuneiform' => 'Sc/Xsux',
'iscuneiformnumbers' => '#/332',
'iscuneiformnumbersandpunctuation' => '#/332',
'iscurrencysymbol' => 'Gc/Sc',
'iscurrencysymbols' => '#/321',
'iscwcf' => 'CWCF/Y',
'iscwcm' => 'CWCM/Y',
'iscwkcf' => 'CWKCF/Y',
'iscwl' => 'CWL/Y',
'iscwt' => 'CWT/Y',
'iscwu' => 'CWU/Y',
'iscypriot' => 'Sc/Cprt',
'iscypriotsyllabary' => '#/333',
'iscyrillic' => 'Sc/Cyrl',
'iscyrillicexta' => '#/294',
'iscyrillicextb' => '#/295',
'iscyrillicextendeda' => '#/294',
'iscyrillicextendedb' => '#/295',
'iscyrillicsup' => '#/274',
'iscyrillicsupplement' => '#/274',
'iscyrillicsupplementary' => '#/274',
'iscyrl' => 'Sc/Cyrl',
'isdash' => 'Dash/Y',
'isdashpunctuation' => 'Gc/Pd',
'isdecimalnumber' => 'Gc/Nd',
'isdefaultignorablecodepoint' => 'DI/Y',
'isdep' => 'Dep/Y',
'isdeprecated' => 'Dep/Y',
'isdeseret' => '#/172',
'isdeva' => 'Sc/Deva',
'isdevanagari' => 'Sc/Deva',
'isdevanagariext' => '#/306',
'isdevanagariextended' => '#/306',
'isdi' => 'DI/Y',
'isdia' => 'Dia/Y',
'isdiacritic' => 'Dia/Y',
'isdiacriticals' => '#/296',
'isdiacriticalsext' => '#/322',
'isdiacriticalsforsymbols' => '#/362',
'isdiacriticalssup' => '#/323',
'isdigit' => 'Gc/Nd',
'isdingbats' => '#/207',
'isdomino' => '#/145',
'isdominotiles' => '#/145',
'isdsrt' => '#/172',
'isdupl' => 'Sc/Dupl',
'isduployan' => 'Sc/Dupl',
'isearlydynasticcuneiform' => '#/363',
'isegyp' => '#/559',
'isegyptianhieroglyphs' => '#/559',
'iselba' => '#/560',
'iselbasan' => '#/560',
'isemoticons' => '#/231',
'isenclosedalphanum' => '#/334',
'isenclosedalphanumerics' => '#/334',
'isenclosedalphanumericsupplement' => '#/354',
'isenclosedalphanumsup' => '#/354',
'isenclosedcjk' => '#/275',
'isenclosedcjklettersandmonths' => '#/275',
'isenclosedideographicsup' => '#/364',
'isenclosedideographicsupplement' => '#/364',
'isenclosingmark' => 'Gc/Me',
'isethi' => 'Sc/Ethi',
'isethiopic' => 'Sc/Ethi',
'isethiopicext' => '#/276',
'isethiopicexta' => '#/297',
'isethiopicextended' => '#/276',
'isethiopicextendeda' => '#/297',
'isethiopicsup' => '#/277',
'isethiopicsupplement' => '#/277',
'isext' => 'Ext/Y',
'isextender' => 'Ext/Y',
'isfinalpunctuation' => 'Gc/Pf',
'isformat' => 'Gc/Cf',
'isfullcompositionexclusion' => 'CompEx/Y',
'isgeneralpunctuation' => '#/287',
'isgeometricshapes' => '#/324',
'isgeometricshapesext' => '#/348',
'isgeometricshapesextended' => '#/348',
'isgeor' => 'Sc/Geor',
'isgeorgian' => 'Sc/Geor',
'isgeorgiansup' => '#/278',
'isgeorgiansupplement' => '#/278',
'isglag' => '#/561',
'isglagolitic' => '#/561',
'isgoth' => '#/562',
'isgothic' => '#/562',
'isgran' => 'Sc/Gran',
'isgrantha' => 'Sc/Gran',
'isgraph' => 'Perl/Graph',
'isgraphemebase' => 'GrBase/Y',
'isgraphemeextend' => 'GCB/EX',
'isgrbase' => 'GrBase/Y',
'isgreek' => 'Sc/Grek',
'isgreekandcoptic' => '#/128',
'isgreekext' => '#/211',
'isgreekextended' => '#/211',
'isgrek' => 'Sc/Grek',
'isgrext' => 'GCB/EX',
'isgujarati' => 'Sc/Gujr',
'isgujr' => 'Sc/Gujr',
'isgurmukhi' => 'Sc/Guru',
'isguru' => 'Sc/Guru',
'ishalfandfullforms' => '#/335',
'ishalfmarks' => '#/232',
'ishalfwidthandfullwidthforms' => '#/335',
'ishan' => 'Sc/Han',
'ishang' => 'Sc/Hang',
'ishangul' => 'Sc/Hang',
'ishangulcompatibilityjamo' => '#/256',
'ishanguljamo' => '#/116',
'ishanguljamoextendeda' => '#/215',
'ishanguljamoextendedb' => '#/216',
'ishangulsyllables' => '#/147',
'ishani' => 'Sc/Han',
'ishano' => '#/563',
'ishanunoo' => '#/563',
'ishatr' => '#/564',
'ishatran' => '#/564',
'ishebr' => 'Sc/Hebr',
'ishebrew' => 'Sc/Hebr',
'ishex' => 'Hex/Y',
'ishexdigit' => 'Hex/Y',
'ishighprivateusesurrogates' => '#/336',
'ishighpusurrogates' => '#/336',
'ishighsurrogates' => '#/315',
'ishira' => 'Sc/Hira',
'ishiragana' => 'Sc/Hira',
'ishluw' => '#/565',
'ishmng' => 'Sc/Hmng',
'ishorizspace' => 'Perl/Blank',
'ishung' => '#/566',
'ishyphen' => 'Hyphen/T',
'isidc' => 'IDC/Y',
'isidcontinue' => 'IDC/Y',
'isideo' => 'Ideo/Y',
'isideographic' => 'Ideo/Y',
'isideographicdescriptioncharacters' => '#/107',
'isids' => 'IDS/Y',
'isidsb' => '#/67',
'isidsbinaryoperator' => '#/67',
'isidst' => '#/68',
'isidstart' => 'IDS/Y',
'isidstrinaryoperator' => '#/68',
'isimperialaramaic' => '#/544',
'isindicnumberforms' => '#/337',
'isinherited' => 'Sc/Zinh',
'isinitialpunctuation' => 'Gc/Pi',
'isinscriptionalpahlavi' => '#/592',
'isinscriptionalparthian' => '#/595',
'isipaext' => '#/150',
'isipaextensions' => '#/150',
'isital' => '#/567',
'isjamo' => '#/116',
'isjamoexta' => '#/215',
'isjamoextb' => '#/216',
'isjava' => '#/568',
'isjavanese' => '#/568',
'isjoinc' => '#/85',
'isjoincontrol' => '#/85',
'iskaithi' => '#/571',
'iskali' => '#/569',
'iskana' => 'Sc/Kana',
'iskanasup' => '#/176',
'iskanasupplement' => '#/176',
'iskanbun' => '#/152',
'iskangxi' => '#/153',
'iskangxiradicals' => '#/153',
'iskannada' => 'Sc/Knda',
'iskatakana' => 'Sc/Kana',
'iskatakanaext' => '#/279',
'iskatakanaphoneticextensions' => '#/279',
'iskayahli' => '#/569',
'iskhar' => 'Sc/Khar',
'iskharoshthi' => 'Sc/Khar',
'iskhmer' => 'Sc/Khmr',
'iskhmersymbols' => '#/298',
'iskhmr' => 'Sc/Khmr',
'iskhoj' => '#/570',
'iskhojki' => '#/570',
'iskhudawadi' => '#/603',
'isknda' => 'Sc/Knda',
'iskthi' => '#/571',
'isl' => 'Gc/L',
'isl&' => 'Gc/LC',
'isl_' => 'Gc/LC',
'islana' => 'Sc/Lana',
'islao' => 'Sc/Lao',
'islaoo' => 'Sc/Lao',
'islatin' => 'Sc/Latn',
'islatin1' => '#/155',
'islatin1sup' => '#/155',
'islatin1supplement' => '#/155',
'islatinexta' => '#/234',
'islatinextadditional' => '#/349',
'islatinextb' => '#/235',
'islatinextc' => '#/236',
'islatinextd' => '#/237',
'islatinexte' => '#/238',
'islatinextendeda' => '#/234',
'islatinextendedadditional' => '#/349',
'islatinextendedb' => '#/235',
'islatinextendedc' => '#/236',
'islatinextendedd' => '#/237',
'islatinextendede' => '#/238',
'islatn' => 'Sc/Latn',
'islc' => 'Gc/LC',
'islepc' => '#/572',
'islepcha' => '#/572',
'isletter' => 'Gc/L',
'isletterlikesymbols' => '#/345',
'isletternumber' => 'Gc/Nl',
'islimb' => 'Sc/Limb',
'islimbu' => 'Sc/Limb',
'islina' => '#/573',
'islinb' => 'Sc/Linb',
'islineara' => '#/573',
'islinearb' => 'Sc/Linb',
'islinearbideograms' => '#/338',
'islinearbsyllabary' => '#/339',
'islineseparator' => '#/372',
'islisu' => '#/117',
'isll' => 'Gc/Ll',
'islm' => 'Gc/Lm',
'islo' => 'Gc/Lo',
'isloe' => 'InPC/VisualOr',
'islogicalorderexception' => 'InPC/VisualOr',
'islower' => 'Lower/Y',
'islowercase' => 'Lower/Y',
'islowercaseletter' => 'Gc/Ll',
'islowsurrogates' => '#/307',
'islt' => 'Perl/Title',
'islu' => 'Gc/Lu',
'islyci' => '#/574',
'islycian' => '#/574',
'islydi' => '#/575',
'islydian' => '#/575',
'ism' => 'Gc/M',
'ismahajani' => '#/576',
'ismahj' => '#/576',
'ismahjong' => '#/180',
'ismahjongtiles' => '#/180',
'ismalayalam' => 'Sc/Mlym',
'ismand' => '#/577',
'ismandaic' => '#/577',
'ismani' => '#/578',
'ismanichaean' => '#/578',
'ismark' => 'Gc/M',
'ismath' => 'Math/Y',
'ismathalphanum' => '#/299',
'ismathematicalalphanumericsymbols' => '#/299',
'ismathematicaloperators' => '#/308',
'ismathoperators' => '#/308',
'ismathsymbol' => 'Gc/Sm',
'ismc' => 'Gc/Mc',
'isme' => 'Gc/Me',
'ismeeteimayek' => '#/583',
'ismeeteimayekext' => '#/316',
'ismeeteimayekextensions' => '#/316',
'ismend' => '#/579',
'ismendekikakui' => '#/579',
'ismerc' => '#/580',
'ismero' => '#/355',
'ismeroiticcursive' => '#/580',
'ismeroitichieroglyphs' => '#/355',
'ismiao' => '#/581',
'ismiscarrows' => '#/261',
'ismiscellaneousmathematicalsymbolsa' => '#/340',
'ismiscellaneousmathematicalsymbolsb' => '#/341',
'ismiscellaneoussymbols' => '#/281',
'ismiscellaneoussymbolsandarrows' => '#/261',
'ismiscellaneoussymbolsandpictographs' => '#/327',
'ismiscellaneoustechnical' => '#/309',
'ismiscmathsymbolsa' => '#/340',
'ismiscmathsymbolsb' => '#/341',
'ismiscpictographs' => '#/327',
'ismiscsymbols' => '#/281',
'ismisctechnical' => '#/309',
'ismlym' => 'Sc/Mlym',
'ismn' => 'Gc/Mn',
'ismodi' => '#/582',
'ismodifierletter' => 'Gc/Lm',
'ismodifierletters' => '#/328',
'ismodifiersymbol' => 'Gc/Sk',
'ismodifiertoneletters' => '#/356',
'ismong' => 'Sc/Mong',
'ismongolian' => 'Sc/Mong',
'ismro' => '#/539',
'ismroo' => '#/539',
'ismtei' => '#/583',
'ismult' => 'Sc/Mult',
'ismultani' => 'Sc/Mult',
'ismusic' => '#/131',
'ismusicalsymbols' => '#/131',
'ismyanmar' => '#/584',
'ismyanmarexta' => '#/282',
'ismyanmarextb' => '#/283',
'ismyanmarextendeda' => '#/282',
'ismyanmarextendedb' => '#/283',
'ismymr' => '#/584',
'isn' => 'Gc/N',
'isnabataean' => '#/585',
'isnarb' => '#/329',
'isnb' => 'Blk/NB',
'isnbat' => '#/585',
'isnchar' => 'Perl/_PerlNch',
'isnd' => 'Gc/Nd',
'isnewtailue' => 'Sc/Talu',
'isnko' => '#/540',
'isnkoo' => '#/540',
'isnl' => 'Gc/Nl',
'isno' => 'Gc/No',
'isnoblock' => 'Blk/NB',
'isnoncharactercodepoint' => 'Perl/_PerlNch',
'isnonspacingmark' => 'Gc/Mn',
'isnumber' => 'Gc/N',
'isnumberforms' => '#/284',
'isocr' => '#/111',
'isogam' => '#/586',
'isogham' => '#/586',
'isolchiki' => '#/184',
'isolck' => '#/184',
'isoldhungarian' => '#/566',
'isolditalic' => '#/567',
'isoldnortharabian' => '#/329',
'isoldpermic' => '#/590',
'isoldpersian' => '#/619',
'isoldsoutharabian' => '#/330',
'isoldturkic' => '#/587',
'isopenpunctuation' => 'Gc/Ps',
'isopticalcharacterrecognition' => '#/111',
'isoriya' => 'Sc/Orya',
'isorkh' => '#/587',
'isornamentaldingbats' => '#/350',
'isorya' => 'Sc/Orya',
'isosma' => '#/588',
'isosmanya' => '#/588',
'isother' => 'Gc/C',
'isotherletter' => 'Gc/Lo',
'isothernumber' => 'Gc/No',
'isotherpunctuation' => 'Gc/Po',
'isothersymbol' => 'Gc/So',
'isp' => 'Gc/P',
'ispahawhhmong' => 'Sc/Hmng',
'ispalm' => '#/246',
'ispalmyrene' => '#/246',
'isparagraphseparator' => '#/373',
'ispatsyn' => 'PatSyn/Y',
'ispatternsyntax' => 'PatSyn/Y',
'ispatternwhitespace' => 'Perl/_PerlPat',
'ispatws' => 'Perl/_PerlPat',
'ispauc' => '#/589',
'ispaucinhau' => '#/589',
'ispc' => 'WB/EX',
'ispd' => 'Gc/Pd',
'ispe' => 'Gc/Pe',
'isperlspace' => '#/3',
'isperlword' => 'Perl/PerlWord',
'isperm' => '#/590',
'ispf' => 'Gc/Pf',
'isphag' => '#/591',
'isphagspa' => '#/591',
'isphaistos' => '#/220',
'isphaistosdisc' => '#/220',
'isphli' => '#/592',
'isphlp' => '#/593',
'isphnx' => '#/594',
'isphoenician' => '#/594',
'isphoneticext' => '#/286',
'isphoneticextensions' => '#/286',
'isphoneticextensionssupplement' => '#/317',
'isphoneticextsup' => '#/317',
'ispi' => 'Gc/Pi',
'isplayingcards' => '#/302',
'isplrd' => '#/581',
'ispo' => 'Gc/Po',
'isposixalnum' => '#/5',
'isposixalpha' => '#/6',
'isposixblank' => '#/7',
'isposixcntrl' => '#/8',
'isposixdigit' => '#/9',
'isposixgraph' => '#/10',
'isposixlower' => '#/11',
'isposixprint' => '#/12',
'isposixpunct' => 'Perl/PosixPun',
'isposixspace' => '#/3',
'isposixupper' => '#/13',
'isposixword' => 'Perl/PerlWord',
'isposixxdigit' => '#/60',
'isprint' => 'Perl/Print',
'isprivateuse' => '#/371',
'isprivateusearea' => '#/112',
'isprti' => '#/595',
'isps' => 'Gc/Ps',
'ispsalterpahlavi' => '#/593',
'ispua' => '#/112',
'ispunct' => 'Gc/P',
'ispunctuation' => 'Gc/P',
'isqaac' => '#/558',
'isqaai' => 'Sc/Zinh',
'isqmark' => 'QMark/Y',
'isquotationmark' => 'QMark/Y',
'isradical' => '#/86',
'isrejang' => '#/596',
'isrjng' => '#/596',
'isrumi' => '#/120',
'isruminumeralsymbols' => '#/120',
'isrunic' => '#/597',
'isrunr' => '#/597',
'iss' => 'Gc/S',
'issamaritan' => '#/598',
'issamr' => '#/598',
'issarb' => '#/330',
'issaur' => '#/599',
'issaurashtra' => '#/599',
'issc' => 'Gc/Sc',
'issd' => 'SD/Y',
'isseparator' => 'Gc/Z',
'issgnw' => '#/600',
'issharada' => '#/601',
'isshavian' => '#/188',
'isshaw' => '#/188',
'isshorthandformatcontrols' => '#/365',
'isshrd' => '#/601',
'issidd' => '#/602',
'issiddham' => '#/602',
'issignwriting' => '#/600',
'issind' => '#/603',
'issinh' => 'Sc/Sinh',
'issinhala' => 'Sc/Sinh',
'issinhalaarchaicnumbers' => '#/360',
'issk' => 'Gc/Sk',
'issm' => 'Gc/Sm',
'issmallforms' => '#/265',
'issmallformvariants' => '#/265',
'isso' => 'Gc/So',
'issoftdotted' => 'SD/Y',
'issora' => '#/604',
'issorasompeng' => '#/604',
'isspace' => 'Perl/SpacePer',
'isspaceperl' => 'Perl/SpacePer',
'isspaceseparator' => 'Gc/Zs',
'isspacingmark' => 'Gc/Mc',
'isspacingmodifierletters' => '#/328',
'isspecials' => '#/221',
'issterm' => 'STerm/Y',
'issund' => '#/605',
'issundanese' => '#/605',
'issundanesesup' => '#/303',
'issundanesesupplement' => '#/303',
'issuparrowsa' => '#/266',
'issuparrowsb' => '#/267',
'issuparrowsc' => '#/268',
'issuperandsub' => '#/289',
'issuperscriptsandsubscripts' => '#/289',
'issupmathoperators' => '#/342',
'issupplementalarrowsa' => '#/266',
'issupplementalarrowsb' => '#/267',
'issupplementalarrowsc' => '#/268',
'issupplementalmathematicaloperators' => '#/342',
'issupplementalpunctuation' => '#/319',
'issupplementalsymbolsandpictographs' => '#/366',
'issupplementaryprivateuseareaa' => '#/191',
'issupplementaryprivateuseareab' => '#/192',
'issuppuaa' => '#/191',
'issuppuab' => '#/192',
'issuppunctuation' => '#/319',
'issupsymbolsandpictographs' => '#/366',
'issurrogate' => '#/14',
'issuttonsignwriting' => '#/346',
'issylo' => '#/606',
'issylotinagri' => '#/606',
'issymbol' => 'Gc/S',
'issyrc' => '#/607',
'issyriac' => '#/607',
'istagalog' => '#/613',
'istagb' => '#/608',
'istagbanwa' => '#/608',
'istags' => '#/121',
'istaile' => '#/610',
'istaitham' => 'Sc/Lana',
'istaiviet' => '#/611',
'istaixuanjing' => '#/291',
'istaixuanjingsymbols' => '#/291',
'istakr' => '#/609',
'istakri' => '#/609',
'istale' => '#/610',
'istalu' => 'Sc/Talu',
'istamil' => 'Sc/Taml',
'istaml' => 'Sc/Taml',
'istavt' => '#/611',
'istelu' => 'Sc/Telu',
'istelugu' => 'Sc/Telu',
'isterm' => 'Term/Y',
'isterminalpunctuation' => 'Term/Y',
'istfng' => '#/612',
'istglg' => '#/613',
'isthaa' => '#/614',
'isthaana' => '#/614',
'isthai' => '#/615',
'istibetan' => 'Sc/Tibt',
'istibt' => 'Sc/Tibt',
'istifinagh' => '#/612',
'istirh' => '#/616',
'istirhuta' => '#/616',
'istitle' => 'Perl/Title',
'istitlecase' => 'Perl/Title',
'istitlecaseletter' => 'Perl/Title',
'istransportandmap' => '#/331',
'istransportandmapsymbols' => '#/331',
'isucas' => '#/123',
'isucasext' => '#/198',
'isugar' => '#/617',
'isugaritic' => '#/617',
'isuideo' => 'UIdeo/Y',
'isunassigned' => 'Gc/Cn',
'isunicode' => '#/2',
'isunifiedcanadianaboriginalsyllabics' => '#/123',
'isunifiedcanadianaboriginalsyllabicsextended' => '#/198',
'isunifiedideograph' => 'UIdeo/Y',
'isunknown' => 'Sc/Zzzz',
'isupper' => 'Upper/Y',
'isuppercase' => 'Upper/Y',
'isuppercaseletter' => 'Gc/Lu',
'isvai' => '#/541',
'isvaii' => '#/541',
'isvariationselector' => '#/88',
'isvariationselectors' => '#/105',
'isvariationselectorssupplement' => '#/138',
'isvedicext' => '#/225',
'isvedicextensions' => '#/225',
'isverticalforms' => '#/310',
'isvertspace' => '#/4',
'isvs' => '#/88',
'isvssup' => '#/138',
'iswara' => '#/618',
'iswarangciti' => '#/618',
'iswhitespace' => 'Perl/SpacePer',
'isword' => 'Perl/Word',
'iswspace' => 'Perl/SpacePer',
'isxdigit' => 'Hex/Y',
'isxidc' => 'XIDC/Y',
'isxidcontinue' => 'XIDC/Y',
'isxids' => 'XIDS/Y',
'isxidstart' => 'XIDS/Y',
'isxpeo' => '#/619',
'isxperlspace' => 'Perl/SpacePer',
'isxposixalnum' => 'Perl/Alnum',
'isxposixalpha' => 'Alpha/Y',
'isxposixblank' => 'Perl/Blank',
'isxposixcntrl' => '#/370',
'isxposixdigit' => 'Gc/Nd',
'isxposixgraph' => 'Perl/Graph',
'isxposixlower' => 'Lower/Y',
'isxposixprint' => 'Perl/Print',
'isxposixpunct' => 'Perl/XPosixPu',
'isxposixspace' => 'Perl/SpacePer',
'isxposixupper' => 'Upper/Y',
'isxposixword' => 'Perl/Word',
'isxposixxdigit' => 'Hex/Y',
'isxsux' => 'Sc/Xsux',
'isyi' => '#/538',
'isyiii' => '#/538',
'isyijing' => '#/163',
'isyijinghexagramsymbols' => '#/163',
'isyiradicals' => '#/270',
'isyisyllables' => '#/292',
'isz' => 'Gc/Z',
'iszinh' => 'Sc/Zinh',
'iszl' => '#/372',
'iszp' => '#/373',
'iszs' => 'Gc/Zs',
'iszyyy' => 'Sc/Zyyy',
'iszzzz' => 'Sc/Zzzz',
'ital' => '#/567',
'jamo' => '#/116',
'jamoexta' => '#/215',
'jamoextb' => '#/216',
'java' => '#/568',
'javanese' => '#/568',
'jg=ain' => 'Jg/Ain',
'jg=alaph' => '#/394',
'jg=alef' => 'Jg/Alef',
'jg=beh' => 'Jg/Beh',
'jg=beth' => '#/384',
'jg=burushaskiyehbarree' => '#/442',
'jg=dal' => 'Jg/Dal',
'jg=dalathrish' => '#/406',
'jg=e' => '#/374',
'jg=farsiyeh' => 'Jg/FarsiYeh',
'jg=fe' => '#/375',
'jg=feh' => 'Jg/Feh',
'jg=finalsemkath' => '#/413',
'jg=gaf' => 'Jg/Gaf',
'jg=gamal' => '#/395',
'jg=hah' => 'Jg/Hah',
'jg=hamzaonhehgoal' => '#/421',
'jg=he' => '#/376',
'jg=heh' => '#/378',
'jg=hehgoal' => '#/401',
'jg=heth' => '#/385',
'jg=kaf' => 'Jg/Kaf',
'jg=kaph' => '#/386',
'jg=khaph' => '#/396',
'jg=knottedheh' => '#/407',
'jg=lam' => 'Jg/Lam',
'jg=lamadh' => '#/399',
'jg=manichaeanaleph' => '#/431',
'jg=manichaeanayin' => '#/422',
'jg=manichaeanbeth' => '#/423',
'jg=manichaeandaleth' => '#/435',
'jg=manichaeandhamedh' => '#/439',
'jg=manichaeanfive' => '#/424',
'jg=manichaeangimel' => '#/432',
'jg=manichaeanheth' => '#/425',
'jg=manichaeanhundred' => '#/440',
'jg=manichaeankaph' => '#/426',
'jg=manichaeanlamedh' => '#/436',
'jg=manichaeanmem' => '#/415',
'jg=manichaeannun' => '#/416',
'jg=manichaeanone' => '#/417',
'jg=manichaeanpe' => '#/414',
'jg=manichaeanqoph' => '#/427',
'jg=manichaeanresh' => '#/428',
'jg=manichaeansadhe' => '#/433',
'jg=manichaeansamekh' => '#/437',
'jg=manichaeantaw' => '#/418',
'jg=manichaeanten' => '#/419',
'jg=manichaeanteth' => '#/429',
'jg=manichaeanthamedh' => '#/441',
'jg=manichaeantwenty' => '#/438',
'jg=manichaeanwaw' => '#/420',
'jg=manichaeanyodh' => '#/430',
'jg=manichaeanzayin' => '#/434',
'jg=meem' => '#/387',
'jg=mim' => '#/379',
'jg=nojoininggroup' => 'Jg/NoJoinin',
'jg=noon' => '#/388',
'jg=nun' => '#/380',
'jg=nya' => '#/381',
'jg=pe' => '#/377',
'jg=qaf' => 'Jg/Qaf',
'jg=qaph' => '#/389',
'jg=reh' => 'Jg/Reh',
'jg=reversedpe' => '#/408',
'jg=rohingyayeh' => '#/410',
'jg=sad' => 'Jg/Sad',
'jg=sadhe' => '#/397',
'jg=seen' => 'Jg/Seen',
'jg=semkath' => '#/402',
'jg=shin' => '#/390',
'jg=straightwaw' => '#/411',
'jg=swashkaf' => '#/403',
'jg=syriacwaw' => '#/404',
'jg=tah' => '#/382',
'jg=taw' => '#/383',
'jg=tehmarbuta' => '#/409',
'jg=tehmarbutagoal' => '#/421',
'jg=teth' => '#/391',
'jg=waw' => 'Jg/Waw',
'jg=yeh' => 'Jg/Yeh',
'jg=yehbarree' => '#/405',
'jg=yehwithtail' => '#/412',
'jg=yudh' => '#/392',
'jg=yudhhe' => '#/400',
'jg=zain' => '#/393',
'jg=zhain' => '#/398',
'joinc' => '#/85',
'joinc=f' => '#/!85',
'joinc=false' => '#/!85',
'joinc=n' => '#/!85',
'joinc=no' => '#/!85',
'joinc=t' => '#/85',
'joinc=true' => '#/85',
'joinc=y' => '#/85',
'joinc=yes' => '#/85',
'joincontrol' => '#/85',
'jt=c' => 'Jt/C',
'jt=d' => 'Jt/D',
'jt=dualjoining' => 'Jt/D',
'jt=joincausing' => 'Jt/C',
'jt=l' => '#/443',
'jt=leftjoining' => '#/443',
'jt=nonjoining' => 'Jt/U',
'jt=r' => 'Jt/R',
'jt=rightjoining' => 'Jt/R',
'jt=t' => 'Jt/T',
'jt=transparent' => 'Jt/T',
'jt=u' => 'Jt/U',
'kaithi' => '#/571',
'kali' => '#/569',
'kana' => 'Sc/Kana',
'kanasup' => '#/176',
'kanasupplement' => '#/176',
'kanbun' => '#/152',
'kangxi' => '#/153',
'kangxiradicals' => '#/153',
'kannada' => 'Sc/Knda',
'katakana' => 'Sc/Kana',
'katakanaext' => '#/279',
'katakanaphoneticextensions' => '#/279',
'kayahli' => '#/569',
'khar' => 'Sc/Khar',
'kharoshthi' => 'Sc/Khar',
'khmer' => 'Sc/Khmr',
'khmersymbols' => '#/298',
'khmr' => 'Sc/Khmr',
'khoj' => '#/570',
'khojki' => '#/570',
'khudawadi' => '#/603',
'knda' => 'Sc/Knda',
'kthi' => '#/571',
'l' => 'Gc/L',
'l&' => 'Gc/LC',
'l_' => 'Gc/LC',
'lana' => 'Sc/Lana',
'lao' => 'Sc/Lao',
'laoo' => 'Sc/Lao',
'latin' => 'Sc/Latn',
'latin1' => '#/155',
'latin1sup' => '#/155',
'latin1supplement' => '#/155',
'latinexta' => '#/234',
'latinextadditional' => '#/349',
'latinextb' => '#/235',
'latinextc' => '#/236',
'latinextd' => '#/237',
'latinexte' => '#/238',
'latinextendeda' => '#/234',
'latinextendedadditional' => '#/349',
'latinextendedb' => '#/235',
'latinextendedc' => '#/236',
'latinextendedd' => '#/237',
'latinextendede' => '#/238',
'latn' => 'Sc/Latn',
'lb=ai' => 'Lb/AI',
'lb=al' => 'Lb/AL',
'lb=alphabetic' => 'Lb/AL',
'lb=ambiguous' => 'Lb/AI',
'lb=b2' => '#/444',
'lb=ba' => 'Lb/BA',
'lb=bb' => 'Lb/BB',
'lb=bk' => '#/445',
'lb=breakafter' => 'Lb/BA',
'lb=breakbefore' => 'Lb/BB',
'lb=breakboth' => '#/444',
'lb=breaksymbols' => '#/452',
'lb=carriagereturn' => '#/64',
'lb=cb' => '#/446',
'lb=cj' => 'Lb/CJ',
'lb=cl' => 'Lb/CL',
'lb=closeparenthesis' => '#/447',
'lb=closepunctuation' => 'Lb/CL',
'lb=cm' => 'Lb/CM',
'lb=combiningmark' => 'Lb/CM',
'lb=complexcontext' => 'Lb/SA',
'lb=conditionaljapanesestarter' => 'Lb/CJ',
'lb=contingentbreak' => '#/446',
'lb=cp' => '#/447',
'lb=cr' => '#/64',
'lb=ex' => 'Lb/EX',
'lb=exclamation' => 'Lb/EX',
'lb=gl' => 'Lb/GL',
'lb=glue' => 'Lb/GL',
'lb=h2' => 'GCB/LV',
'lb=h3' => 'GCB/LVT',
'lb=hebrewletter' => 'WB/HL',
'lb=hl' => 'WB/HL',
'lb=hy' => '#/448',
'lb=hyphen' => '#/448',
'lb=id' => 'Lb/ID',
'lb=ideographic' => 'Lb/ID',
'lb=in' => 'Lb/IN',
'lb=infixnumeric' => 'Lb/IS',
'lb=inseparable' => 'Lb/IN',
'lb=inseperable' => 'Lb/IN',
'lb=is' => 'Lb/IS',
'lb=jl' => '#/61',
'lb=jt' => '#/62',
'lb=jv' => '#/63',
'lb=lf' => '#/65',
'lb=linefeed' => '#/65',
'lb=mandatorybreak' => '#/445',
'lb=nextline' => '#/449',
'lb=nl' => '#/449',
'lb=nonstarter' => 'Lb/NS',
'lb=ns' => 'Lb/NS',
'lb=nu' => 'SB/NU',
'lb=numeric' => 'SB/NU',
'lb=op' => 'Lb/OP',
'lb=openpunctuation' => 'Lb/OP',
'lb=po' => 'Lb/PO',
'lb=postfixnumeric' => 'Lb/PO',
'lb=pr' => 'Lb/PR',
'lb=prefixnumeric' => 'Lb/PR',
'lb=qu' => 'Lb/QU',
'lb=quotation' => 'Lb/QU',
'lb=regionalindicator' => '#/66',
'lb=ri' => '#/66',
'lb=sa' => 'Lb/SA',
'lb=sg' => '#/450',
'lb=sp' => '#/451',
'lb=space' => '#/451',
'lb=surrogate' => '#/450',
'lb=sy' => '#/452',
'lb=unknown' => 'Lb/XX',
'lb=wj' => '#/453',
'lb=wordjoiner' => '#/453',
'lb=xx' => 'Lb/XX',
'lb=zw' => '#/454',
'lb=zwspace' => '#/454',
'lc' => 'Gc/LC',
'lepc' => '#/572',
'lepcha' => '#/572',
'letter' => 'Gc/L',
'letterlikesymbols' => '#/345',
'letternumber' => 'Gc/Nl',
'limb' => 'Sc/Limb',
'limbu' => 'Sc/Limb',
'lina' => '#/573',
'linb' => 'Sc/Linb',
'lineara' => '#/573',
'linearb' => 'Sc/Linb',
'linearbideograms' => '#/338',
'linearbsyllabary' => '#/339',
'lineseparator' => '#/372',
'lisu' => '#/117',
'll' => 'Gc/Ll',
'lm' => 'Gc/Lm',
'lo' => 'Gc/Lo',
'loe' => 'InPC/VisualOr',
'loe=f' => '!InPC/VisualOr',
'loe=false' => '!InPC/VisualOr',
'loe=n' => '!InPC/VisualOr',
'loe=no' => '!InPC/VisualOr',
'loe=t' => 'InPC/VisualOr',
'loe=true' => 'InPC/VisualOr',
'loe=y' => 'InPC/VisualOr',
'loe=yes' => 'InPC/VisualOr',
'logicalorderexception' => 'InPC/VisualOr',
'lower' => 'Lower/Y',
'lower=f' => '!Lower/Y',
'lower=false' => '!Lower/Y',
'lower=n' => '!Lower/Y',
'lower=no' => '!Lower/Y',
'lower=t' => 'Lower/Y',
'lower=true' => 'Lower/Y',
'lower=y' => 'Lower/Y',
'lower=yes' => 'Lower/Y',
'lowercase' => 'Lower/Y',
'lowercaseletter' => 'Gc/Ll',
'lowsurrogates' => '#/307',
'lt' => 'Perl/Title',
'lu' => 'Gc/Lu',
'lyci' => '#/574',
'lycian' => '#/574',
'lydi' => '#/575',
'lydian' => '#/575',
'm' => 'Gc/M',
'mahajani' => '#/576',
'mahj' => '#/576',
'mahjong' => '#/180',
'mahjongtiles' => '#/180',
'malayalam' => 'Sc/Mlym',
'mand' => '#/577',
'mandaic' => '#/577',
'mani' => '#/578',
'manichaean' => '#/578',
'mark' => 'Gc/M',
'math' => 'Math/Y',
'math=f' => '!Math/Y',
'math=false' => '!Math/Y',
'math=n' => '!Math/Y',
'math=no' => '!Math/Y',
'math=t' => 'Math/Y',
'math=true' => 'Math/Y',
'math=y' => 'Math/Y',
'math=yes' => 'Math/Y',
'mathalphanum' => '#/299',
'mathematicalalphanumericsymbols' => '#/299',
'mathematicaloperators' => '#/308',
'mathoperators' => '#/308',
'mathsymbol' => 'Gc/Sm',
'mc' => 'Gc/Mc',
'me' => 'Gc/Me',
'meeteimayek' => '#/583',
'meeteimayekext' => '#/316',
'meeteimayekextensions' => '#/316',
'mend' => '#/579',
'mendekikakui' => '#/579',
'merc' => '#/580',
'mero' => '#/355',
'meroiticcursive' => '#/580',
'meroitichieroglyphs' => '#/355',
'miao' => '#/581',
'miscarrows' => '#/261',
'miscellaneousmathematicalsymbolsa' => '#/340',
'miscellaneousmathematicalsymbolsb' => '#/341',
'miscellaneoussymbols' => '#/281',
'miscellaneoussymbolsandarrows' => '#/261',
'miscellaneoussymbolsandpictographs' => '#/327',
'miscellaneoustechnical' => '#/309',
'miscmathsymbolsa' => '#/340',
'miscmathsymbolsb' => '#/341',
'miscpictographs' => '#/327',
'miscsymbols' => '#/281',
'misctechnical' => '#/309',
'mlym' => 'Sc/Mlym',
'mn' => 'Gc/Mn',
'modi' => '#/582',
'modifierletter' => 'Gc/Lm',
'modifierletters' => '#/328',
'modifiersymbol' => 'Gc/Sk',
'modifiertoneletters' => '#/356',
'mong' => 'Sc/Mong',
'mongolian' => 'Sc/Mong',
'mro' => '#/539',
'mroo' => '#/539',
'mtei' => '#/583',
'mult' => 'Sc/Mult',
'multani' => 'Sc/Mult',
'music' => '#/131',
'musicalsymbols' => '#/131',
'myanmar' => '#/584',
'myanmarexta' => '#/282',
'myanmarextb' => '#/283',
'myanmarextendeda' => '#/282',
'myanmarextendedb' => '#/283',
'mymr' => '#/584',
'n' => 'Gc/N',
'nabataean' => '#/585',
'narb' => '#/329',
'nb' => 'Blk/NB',
'nbat' => '#/585',
'nchar' => 'Perl/_PerlNch',
'nchar=f' => '!Perl/_PerlNch',
'nchar=false' => '!Perl/_PerlNch',
'nchar=n' => '!Perl/_PerlNch',
'nchar=no' => '!Perl/_PerlNch',
'nchar=t' => 'Perl/_PerlNch',
'nchar=true' => 'Perl/_PerlNch',
'nchar=y' => 'Perl/_PerlNch',
'nchar=yes' => 'Perl/_PerlNch',
'nd' => 'Gc/Nd',
'newtailue' => 'Sc/Talu',
'nfcqc=m' => 'NFCQC/M',
'nfcqc=maybe' => 'NFCQC/M',
'nfcqc=n' => 'CompEx/Y',
'nfcqc=no' => 'CompEx/Y',
'nfcqc=y' => 'NFCQC/Y',
'nfcqc=yes' => 'NFCQC/Y',
'nfdqc=n' => 'NFDQC/N',
'nfdqc=no' => 'NFDQC/N',
'nfdqc=y' => 'NFDQC/Y',
'nfdqc=yes' => 'NFDQC/Y',
'nfkcqc=m' => 'NFCQC/M',
'nfkcqc=maybe' => 'NFCQC/M',
'nfkcqc=n' => 'NFKCQC/N',
'nfkcqc=no' => 'NFKCQC/N',
'nfkcqc=y' => 'NFKCQC/Y',
'nfkcqc=yes' => 'NFKCQC/Y',
'nfkdqc=n' => 'NFKDQC/N',
'nfkdqc=no' => 'NFKDQC/N',
'nfkdqc=y' => 'NFKDQC/Y',
'nfkdqc=yes' => 'NFKDQC/Y',
'nko' => '#/540',
'nkoo' => '#/540',
'nl' => 'Gc/Nl',
'no' => 'Gc/No',
'noblock' => 'Blk/NB',
'noncharactercodepoint' => 'Perl/_PerlNch',
'nonspacingmark' => 'Gc/Mn',
'nt=de' => 'Gc/Nd',
'nt=decimal' => 'Gc/Nd',
'nt=di' => 'Nt/Di',
'nt=digit' => 'Nt/Di',
'nt=none' => 'Nt/None',
'nt=nu' => 'Nt/Nu',
'nt=numeric' => 'Nt/Nu',
'number' => 'Gc/N',
'numberforms' => '#/284',
'nv=nan' => 'Nt/None',
'ocr' => '#/111',
'ogam' => '#/586',
'ogham' => '#/586',
'olchiki' => '#/184',
'olck' => '#/184',
'oldhungarian' => '#/566',
'olditalic' => '#/567',
'oldnortharabian' => '#/329',
'oldpermic' => '#/590',
'oldpersian' => '#/619',
'oldsoutharabian' => '#/330',
'oldturkic' => '#/587',
'openpunctuation' => 'Gc/Ps',
'opticalcharacterrecognition' => '#/111',
'oriya' => 'Sc/Orya',
'orkh' => '#/587',
'ornamentaldingbats' => '#/350',
'orya' => 'Sc/Orya',
'osma' => '#/588',
'osmanya' => '#/588',
'other' => 'Gc/C',
'otherletter' => 'Gc/Lo',
'othernumber' => 'Gc/No',
'otherpunctuation' => 'Gc/Po',
'othersymbol' => 'Gc/So',
'p' => 'Gc/P',
'pahawhhmong' => 'Sc/Hmng',
'palm' => '#/246',
'palmyrene' => '#/246',
'paragraphseparator' => '#/373',
'patsyn' => 'PatSyn/Y',
'patsyn=f' => '!PatSyn/Y',
'patsyn=false' => '!PatSyn/Y',
'patsyn=n' => '!PatSyn/Y',
'patsyn=no' => '!PatSyn/Y',
'patsyn=t' => 'PatSyn/Y',
'patsyn=true' => 'PatSyn/Y',
'patsyn=y' => 'PatSyn/Y',
'patsyn=yes' => 'PatSyn/Y',
'patternsyntax' => 'PatSyn/Y',
'patternwhitespace' => 'Perl/_PerlPat',
'patws' => 'Perl/_PerlPat',
'patws=f' => '!Perl/_PerlPat',
'patws=false' => '!Perl/_PerlPat',
'patws=n' => '!Perl/_PerlPat',
'patws=no' => '!Perl/_PerlPat',
'patws=t' => 'Perl/_PerlPat',
'patws=true' => 'Perl/_PerlPat',
'patws=y' => 'Perl/_PerlPat',
'patws=yes' => 'Perl/_PerlPat',
'pauc' => '#/589',
'paucinhau' => '#/589',
'pc' => 'WB/EX',
'pd' => 'Gc/Pd',
'pe' => 'Gc/Pe',
'perlspace' => '#/3',
'perlword' => 'Perl/PerlWord',
'perm' => '#/590',
'pf' => 'Gc/Pf',
'phag' => '#/591',
'phagspa' => '#/591',
'phaistos' => '#/220',
'phaistosdisc' => '#/220',
'phli' => '#/592',
'phlp' => '#/593',
'phnx' => '#/594',
'phoenician' => '#/594',
'phoneticext' => '#/286',
'phoneticextensions' => '#/286',
'phoneticextensionssupplement' => '#/317',
'phoneticextsup' => '#/317',
'pi' => 'Gc/Pi',
'playingcards' => '#/302',
'plrd' => '#/581',
'po' => 'Gc/Po',
'posixalnum' => '#/5',
'posixalpha' => '#/6',
'posixblank' => '#/7',
'posixcntrl' => '#/8',
'posixdigit' => '#/9',
'posixgraph' => '#/10',
'posixlower' => '#/11',
'posixprint' => '#/12',
'posixpunct' => 'Perl/PosixPun',
'posixspace' => '#/3',
'posixupper' => '#/13',
'posixword' => 'Perl/PerlWord',
'posixxdigit' => '#/60',
'print' => 'Perl/Print',
'privateuse' => '#/371',
'privateusearea' => '#/112',
'prti' => '#/595',
'ps' => 'Gc/Ps',
'psalterpahlavi' => '#/593',
'pua' => '#/112',
'punct' => 'Gc/P',
'punctuation' => 'Gc/P',
'qaac' => '#/558',
'qaai' => 'Sc/Zinh',
'qmark' => 'QMark/Y',
'qmark=f' => '!QMark/Y',
'qmark=false' => '!QMark/Y',
'qmark=n' => '!QMark/Y',
'qmark=no' => '!QMark/Y',
'qmark=t' => 'QMark/Y',
'qmark=true' => 'QMark/Y',
'qmark=y' => 'QMark/Y',
'qmark=yes' => 'QMark/Y',
'quotationmark' => 'QMark/Y',
'radical' => '#/86',
'radical=f' => '#/!86',
'radical=false' => '#/!86',
'radical=n' => '#/!86',
'radical=no' => '#/!86',
'radical=t' => '#/86',
'radical=true' => '#/86',
'radical=y' => '#/86',
'radical=yes' => '#/86',
'rejang' => '#/596',
'rjng' => '#/596',
'rumi' => '#/120',
'ruminumeralsymbols' => '#/120',
'runic' => '#/597',
'runr' => '#/597',
's' => 'Gc/S',
'samaritan' => '#/598',
'samr' => '#/598',
'sarb' => '#/330',
'saur' => '#/599',
'saurashtra' => '#/599',
'sb=at' => 'SB/AT',
'sb=aterm' => 'SB/AT',
'sb=cl' => 'SB/CL',
'sb=close' => 'SB/CL',
'sb=cr' => '#/64',
'sb=ex' => 'SB/EX',
'sb=extend' => 'SB/EX',
'sb=fo' => 'SB/FO',
'sb=format' => 'SB/FO',
'sb=le' => 'SB/LE',
'sb=lf' => '#/65',
'sb=lo' => 'SB/LO',
'sb=lower' => 'SB/LO',
'sb=nu' => 'SB/NU',
'sb=numeric' => 'SB/NU',
'sb=oletter' => 'SB/LE',
'sb=other' => 'SB/XX',
'sb=sc' => 'SB/SC',
'sb=scontinue' => 'SB/SC',
'sb=se' => '#/87',
'sb=sep' => '#/87',
'sb=sp' => 'SB/Sp',
'sb=st' => 'SB/ST',
'sb=sterm' => 'SB/ST',
'sb=up' => 'SB/UP',
'sb=upper' => 'SB/UP',
'sb=xx' => 'SB/XX',
'sc' => 'Gc/Sc',
'sc=aghb' => '#/542',
'sc=ahom' => '#/543',
'sc=anatolianhieroglyphs' => '#/565',
'sc=arab' => 'Sc/Arab',
'sc=arabic' => 'Sc/Arab',
'sc=armenian' => 'Sc/Armn',
'sc=armi' => '#/544',
'sc=armn' => 'Sc/Armn',
'sc=avestan' => '#/545',
'sc=avst' => '#/545',
'sc=bali' => '#/546',
'sc=balinese' => '#/546',
'sc=bamu' => '#/547',
'sc=bamum' => '#/547',
'sc=bass' => '#/548',
'sc=bassavah' => '#/548',
'sc=batak' => '#/549',
'sc=batk' => '#/549',
'sc=beng' => 'Sc/Beng',
'sc=bengali' => 'Sc/Beng',
'sc=bopo' => '#/550',
'sc=bopomofo' => '#/550',
'sc=brah' => '#/551',
'sc=brahmi' => '#/551',
'sc=brai' => '#/166',
'sc=braille' => '#/166',
'sc=bugi' => '#/552',
'sc=buginese' => '#/552',
'sc=buhd' => '#/553',
'sc=buhid' => '#/553',
'sc=cakm' => '#/554',
'sc=canadianaboriginal' => '#/555',
'sc=cans' => '#/555',
'sc=cari' => '#/556',
'sc=carian' => '#/556',
'sc=caucasianalbanian' => '#/542',
'sc=chakma' => '#/554',
'sc=cham' => 'Sc/Cham',
'sc=cher' => '#/557',
'sc=cherokee' => '#/557',
'sc=common' => 'Sc/Zyyy',
'sc=copt' => '#/558',
'sc=coptic' => '#/558',
'sc=cprt' => 'Sc/Cprt',
'sc=cuneiform' => 'Sc/Xsux',
'sc=cypriot' => 'Sc/Cprt',
'sc=cyrillic' => 'Sc/Cyrl',
'sc=cyrl' => 'Sc/Cyrl',
'sc=deseret' => '#/172',
'sc=deva' => 'Sc/Deva',
'sc=devanagari' => 'Sc/Deva',
'sc=dsrt' => '#/172',
'sc=dupl' => 'Sc/Dupl',
'sc=duployan' => 'Sc/Dupl',
'sc=egyp' => '#/559',
'sc=egyptianhieroglyphs' => '#/559',
'sc=elba' => '#/560',
'sc=elbasan' => '#/560',
'sc=ethi' => 'Sc/Ethi',
'sc=ethiopic' => 'Sc/Ethi',
'sc=geor' => 'Sc/Geor',
'sc=georgian' => 'Sc/Geor',
'sc=glag' => '#/561',
'sc=glagolitic' => '#/561',
'sc=goth' => '#/562',
'sc=gothic' => '#/562',
'sc=gran' => 'Sc/Gran',
'sc=grantha' => 'Sc/Gran',
'sc=greek' => 'Sc/Grek',
'sc=grek' => 'Sc/Grek',
'sc=gujarati' => 'Sc/Gujr',
'sc=gujr' => 'Sc/Gujr',
'sc=gurmukhi' => 'Sc/Guru',
'sc=guru' => 'Sc/Guru',
'sc=han' => 'Sc/Han',
'sc=hang' => 'Sc/Hang',
'sc=hangul' => 'Sc/Hang',
'sc=hani' => 'Sc/Han',
'sc=hano' => '#/563',
'sc=hanunoo' => '#/563',
'sc=hatr' => '#/564',
'sc=hatran' => '#/564',
'sc=hebr' => 'Sc/Hebr',
'sc=hebrew' => 'Sc/Hebr',
'sc=hira' => 'Sc/Hira',
'sc=hiragana' => 'Sc/Hira',
'sc=hluw' => '#/565',
'sc=hmng' => 'Sc/Hmng',
'sc=hung' => '#/566',
'sc=imperialaramaic' => '#/544',
'sc=inherited' => 'Sc/Zinh',
'sc=inscriptionalpahlavi' => '#/592',
'sc=inscriptionalparthian' => '#/595',
'sc=ital' => '#/567',
'sc=java' => '#/568',
'sc=javanese' => '#/568',
'sc=kaithi' => '#/571',
'sc=kali' => '#/569',
'sc=kana' => 'Sc/Kana',
'sc=kannada' => 'Sc/Knda',
'sc=katakana' => 'Sc/Kana',
'sc=kayahli' => '#/569',
'sc=khar' => 'Sc/Khar',
'sc=kharoshthi' => 'Sc/Khar',
'sc=khmer' => 'Sc/Khmr',
'sc=khmr' => 'Sc/Khmr',
'sc=khoj' => '#/570',
'sc=khojki' => '#/570',
'sc=khudawadi' => '#/603',
'sc=knda' => 'Sc/Knda',
'sc=kthi' => '#/571',
'sc=lana' => 'Sc/Lana',
'sc=lao' => 'Sc/Lao',
'sc=laoo' => 'Sc/Lao',
'sc=latin' => 'Sc/Latn',
'sc=latn' => 'Sc/Latn',
'sc=lepc' => '#/572',
'sc=lepcha' => '#/572',
'sc=limb' => 'Sc/Limb',
'sc=limbu' => 'Sc/Limb',
'sc=lina' => '#/573',
'sc=linb' => 'Sc/Linb',
'sc=lineara' => '#/573',
'sc=linearb' => 'Sc/Linb',
'sc=lisu' => '#/117',
'sc=lyci' => '#/574',
'sc=lycian' => '#/574',
'sc=lydi' => '#/575',
'sc=lydian' => '#/575',
'sc=mahajani' => '#/576',
'sc=mahj' => '#/576',
'sc=malayalam' => 'Sc/Mlym',
'sc=mand' => '#/577',
'sc=mandaic' => '#/577',
'sc=mani' => '#/578',
'sc=manichaean' => '#/578',
'sc=meeteimayek' => '#/583',
'sc=mend' => '#/579',
'sc=mendekikakui' => '#/579',
'sc=merc' => '#/580',
'sc=mero' => '#/355',
'sc=meroiticcursive' => '#/580',
'sc=meroitichieroglyphs' => '#/355',
'sc=miao' => '#/581',
'sc=mlym' => 'Sc/Mlym',
'sc=modi' => '#/582',
'sc=mong' => 'Sc/Mong',
'sc=mongolian' => 'Sc/Mong',
'sc=mro' => '#/539',
'sc=mroo' => '#/539',
'sc=mtei' => '#/583',
'sc=mult' => 'Sc/Mult',
'sc=multani' => 'Sc/Mult',
'sc=myanmar' => '#/584',
'sc=mymr' => '#/584',
'sc=nabataean' => '#/585',
'sc=narb' => '#/329',
'sc=nbat' => '#/585',
'sc=newtailue' => 'Sc/Talu',
'sc=nko' => '#/540',
'sc=nkoo' => '#/540',
'sc=ogam' => '#/586',
'sc=ogham' => '#/586',
'sc=olchiki' => '#/184',
'sc=olck' => '#/184',
'sc=oldhungarian' => '#/566',
'sc=olditalic' => '#/567',
'sc=oldnortharabian' => '#/329',
'sc=oldpermic' => '#/590',
'sc=oldpersian' => '#/619',
'sc=oldsoutharabian' => '#/330',
'sc=oldturkic' => '#/587',
'sc=oriya' => 'Sc/Orya',
'sc=orkh' => '#/587',
'sc=orya' => 'Sc/Orya',
'sc=osma' => '#/588',
'sc=osmanya' => '#/588',
'sc=pahawhhmong' => 'Sc/Hmng',
'sc=palm' => '#/246',
'sc=palmyrene' => '#/246',
'sc=pauc' => '#/589',
'sc=paucinhau' => '#/589',
'sc=perm' => '#/590',
'sc=phag' => '#/591',
'sc=phagspa' => '#/591',
'sc=phli' => '#/592',
'sc=phlp' => '#/593',
'sc=phnx' => '#/594',
'sc=phoenician' => '#/594',
'sc=plrd' => '#/581',
'sc=prti' => '#/595',
'sc=psalterpahlavi' => '#/593',
'sc=qaac' => '#/558',
'sc=qaai' => 'Sc/Zinh',
'sc=rejang' => '#/596',
'sc=rjng' => '#/596',
'sc=runic' => '#/597',
'sc=runr' => '#/597',
'sc=samaritan' => '#/598',
'sc=samr' => '#/598',
'sc=sarb' => '#/330',
'sc=saur' => '#/599',
'sc=saurashtra' => '#/599',
'sc=sgnw' => '#/600',
'sc=sharada' => '#/601',
'sc=shavian' => '#/188',
'sc=shaw' => '#/188',
'sc=shrd' => '#/601',
'sc=sidd' => '#/602',
'sc=siddham' => '#/602',
'sc=signwriting' => '#/600',
'sc=sind' => '#/603',
'sc=sinh' => 'Sc/Sinh',
'sc=sinhala' => 'Sc/Sinh',
'sc=sora' => '#/604',
'sc=sorasompeng' => '#/604',
'sc=sund' => '#/605',
'sc=sundanese' => '#/605',
'sc=sylo' => '#/606',
'sc=sylotinagri' => '#/606',
'sc=syrc' => '#/607',
'sc=syriac' => '#/607',
'sc=tagalog' => '#/613',
'sc=tagb' => '#/608',
'sc=tagbanwa' => '#/608',
'sc=taile' => '#/610',
'sc=taitham' => 'Sc/Lana',
'sc=taiviet' => '#/611',
'sc=takr' => '#/609',
'sc=takri' => '#/609',
'sc=tale' => '#/610',
'sc=talu' => 'Sc/Talu',
'sc=tamil' => 'Sc/Taml',
'sc=taml' => 'Sc/Taml',
'sc=tavt' => '#/611',
'sc=telu' => 'Sc/Telu',
'sc=telugu' => 'Sc/Telu',
'sc=tfng' => '#/612',
'sc=tglg' => '#/613',
'sc=thaa' => '#/614',
'sc=thaana' => '#/614',
'sc=thai' => '#/615',
'sc=tibetan' => 'Sc/Tibt',
'sc=tibt' => 'Sc/Tibt',
'sc=tifinagh' => '#/612',
'sc=tirh' => '#/616',
'sc=tirhuta' => '#/616',
'sc=ugar' => '#/617',
'sc=ugaritic' => '#/617',
'sc=unknown' => 'Sc/Zzzz',
'sc=vai' => '#/541',
'sc=vaii' => '#/541',
'sc=wara' => '#/618',
'sc=warangciti' => '#/618',
'sc=xpeo' => '#/619',
'sc=xsux' => 'Sc/Xsux',
'sc=yi' => '#/538',
'sc=yiii' => '#/538',
'sc=zinh' => 'Sc/Zinh',
'sc=zyyy' => 'Sc/Zyyy',
'sc=zzzz' => 'Sc/Zzzz',
'scx=aghb' => '#/542',
'scx=ahom' => '#/543',
'scx=anatolianhieroglyphs' => '#/565',
'scx=arab' => 'Scx/Arab',
'scx=arabic' => 'Scx/Arab',
'scx=armenian' => 'Scx/Armn',
'scx=armi' => '#/544',
'scx=armn' => 'Scx/Armn',
'scx=avestan' => '#/545',
'scx=avst' => '#/545',
'scx=bali' => '#/546',
'scx=balinese' => '#/546',
'scx=bamu' => '#/547',
'scx=bamum' => '#/547',
'scx=bass' => '#/548',
'scx=bassavah' => '#/548',
'scx=batak' => '#/549',
'scx=batk' => '#/549',
'scx=beng' => 'Scx/Beng',
'scx=bengali' => 'Scx/Beng',
'scx=bopo' => 'Scx/Bopo',
'scx=bopomofo' => 'Scx/Bopo',
'scx=brah' => '#/551',
'scx=brahmi' => '#/551',
'scx=brai' => '#/166',
'scx=braille' => '#/166',
'scx=bugi' => '#/620',
'scx=buginese' => '#/620',
'scx=buhd' => '#/621',
'scx=buhid' => '#/621',
'scx=cakm' => 'Scx/Cakm',
'scx=canadianaboriginal' => '#/555',
'scx=cans' => '#/555',
'scx=cari' => '#/556',
'scx=carian' => '#/556',
'scx=caucasianalbanian' => '#/542',
'scx=chakma' => 'Scx/Cakm',
'scx=cham' => 'Sc/Cham',
'scx=cher' => '#/557',
'scx=cherokee' => '#/557',
'scx=common' => 'Scx/Zyyy',
'scx=copt' => 'Scx/Copt',
'scx=coptic' => 'Scx/Copt',
'scx=cprt' => 'Scx/Cprt',
'scx=cuneiform' => 'Sc/Xsux',
'scx=cypriot' => 'Scx/Cprt',
'scx=cyrillic' => 'Scx/Cyrl',
'scx=cyrl' => 'Scx/Cyrl',
'scx=deseret' => '#/172',
'scx=deva' => 'Scx/Deva',
'scx=devanagari' => 'Scx/Deva',
'scx=dsrt' => '#/172',
'scx=dupl' => 'Scx/Dupl',
'scx=duployan' => 'Scx/Dupl',
'scx=egyp' => '#/559',
'scx=egyptianhieroglyphs' => '#/559',
'scx=elba' => '#/560',
'scx=elbasan' => '#/560',
'scx=ethi' => 'Sc/Ethi',
'scx=ethiopic' => 'Sc/Ethi',
'scx=geor' => 'Scx/Geor',
'scx=georgian' => 'Scx/Geor',
'scx=glag' => 'Scx/Glag',
'scx=glagolitic' => 'Scx/Glag',
'scx=goth' => '#/562',
'scx=gothic' => '#/562',
'scx=gran' => 'Scx/Gran',
'scx=grantha' => 'Scx/Gran',
'scx=greek' => 'Scx/Grek',
'scx=grek' => 'Scx/Grek',
'scx=gujarati' => 'Scx/Gujr',
'scx=gujr' => 'Scx/Gujr',
'scx=gurmukhi' => 'Scx/Guru',
'scx=guru' => 'Scx/Guru',
'scx=han' => 'Scx/Han',
'scx=hang' => 'Scx/Hang',
'scx=hangul' => 'Scx/Hang',
'scx=hani' => 'Scx/Han',
'scx=hano' => '#/622',
'scx=hanunoo' => '#/622',
'scx=hatr' => '#/564',
'scx=hatran' => '#/564',
'scx=hebr' => 'Sc/Hebr',
'scx=hebrew' => 'Sc/Hebr',
'scx=hira' => 'Scx/Hira',
'scx=hiragana' => 'Scx/Hira',
'scx=hluw' => '#/565',
'scx=hmng' => 'Sc/Hmng',
'scx=hung' => '#/566',
'scx=imperialaramaic' => '#/544',
'scx=inherited' => 'Scx/Zinh',
'scx=inscriptionalpahlavi' => '#/592',
'scx=inscriptionalparthian' => '#/595',
'scx=ital' => '#/567',
'scx=java' => '#/623',
'scx=javanese' => '#/623',
'scx=kaithi' => '#/625',
'scx=kali' => '#/178',
'scx=kana' => 'Scx/Kana',
'scx=kannada' => 'Scx/Knda',
'scx=katakana' => 'Scx/Kana',
'scx=kayahli' => '#/178',
'scx=khar' => 'Sc/Khar',
'scx=kharoshthi' => 'Sc/Khar',
'scx=khmer' => 'Sc/Khmr',
'scx=khmr' => 'Sc/Khmr',
'scx=khoj' => '#/624',
'scx=khojki' => '#/624',
'scx=khudawadi' => 'Scx/Sind',
'scx=knda' => 'Scx/Knda',
'scx=kthi' => '#/625',
'scx=lana' => 'Sc/Lana',
'scx=lao' => 'Sc/Lao',
'scx=laoo' => 'Sc/Lao',
'scx=latin' => 'Scx/Latn',
'scx=latn' => 'Scx/Latn',
'scx=lepc' => '#/572',
'scx=lepcha' => '#/572',
'scx=limb' => 'Scx/Limb',
'scx=limbu' => 'Scx/Limb',
'scx=lina' => '#/573',
'scx=linb' => 'Scx/Linb',
'scx=lineara' => '#/573',
'scx=linearb' => 'Scx/Linb',
'scx=lisu' => '#/117',
'scx=lyci' => '#/574',
'scx=lycian' => '#/574',
'scx=lydi' => '#/575',
'scx=lydian' => '#/575',
'scx=mahajani' => '#/626',
'scx=mahj' => '#/626',
'scx=malayalam' => 'Scx/Mlym',
'scx=mand' => '#/627',
'scx=mandaic' => '#/627',
'scx=mani' => '#/628',
'scx=manichaean' => '#/628',
'scx=meeteimayek' => '#/583',
'scx=mend' => '#/579',
'scx=mendekikakui' => '#/579',
'scx=merc' => '#/580',
'scx=mero' => '#/355',
'scx=meroiticcursive' => '#/580',
'scx=meroitichieroglyphs' => '#/355',
'scx=miao' => '#/581',
'scx=mlym' => 'Scx/Mlym',
'scx=modi' => '#/629',
'scx=mong' => 'Scx/Mong',
'scx=mongolian' => 'Scx/Mong',
'scx=mro' => '#/539',
'scx=mroo' => '#/539',
'scx=mtei' => '#/583',
'scx=mult' => 'Scx/Mult',
'scx=multani' => 'Scx/Mult',
'scx=myanmar' => 'Scx/Mymr',
'scx=mymr' => 'Scx/Mymr',
'scx=nabataean' => '#/585',
'scx=narb' => '#/329',
'scx=nbat' => '#/585',
'scx=newtailue' => 'Sc/Talu',
'scx=nko' => '#/540',
'scx=nkoo' => '#/540',
'scx=ogam' => '#/586',
'scx=ogham' => '#/586',
'scx=olchiki' => '#/184',
'scx=olck' => '#/184',
'scx=oldhungarian' => '#/566',
'scx=olditalic' => '#/567',
'scx=oldnortharabian' => '#/329',
'scx=oldpermic' => '#/630',
'scx=oldpersian' => '#/619',
'scx=oldsoutharabian' => '#/330',
'scx=oldturkic' => '#/587',
'scx=oriya' => 'Scx/Orya',
'scx=orkh' => '#/587',
'scx=orya' => 'Scx/Orya',
'scx=osma' => '#/588',
'scx=osmanya' => '#/588',
'scx=pahawhhmong' => 'Sc/Hmng',
'scx=palm' => '#/246',
'scx=palmyrene' => '#/246',
'scx=pauc' => '#/589',
'scx=paucinhau' => '#/589',
'scx=perm' => '#/630',
'scx=phag' => '#/631',
'scx=phagspa' => '#/631',
'scx=phli' => '#/592',
'scx=phlp' => 'Scx/Phlp',
'scx=phnx' => '#/594',
'scx=phoenician' => '#/594',
'scx=plrd' => '#/581',
'scx=prti' => '#/595',
'scx=psalterpahlavi' => 'Scx/Phlp',
'scx=qaac' => 'Scx/Copt',
'scx=qaai' => 'Scx/Zinh',
'scx=rejang' => '#/596',
'scx=rjng' => '#/596',
'scx=runic' => '#/597',
'scx=runr' => '#/597',
'scx=samaritan' => '#/598',
'scx=samr' => '#/598',
'scx=sarb' => '#/330',
'scx=saur' => '#/599',
'scx=saurashtra' => '#/599',
'scx=sgnw' => '#/600',
'scx=sharada' => 'Scx/Shrd',
'scx=shavian' => '#/188',
'scx=shaw' => '#/188',
'scx=shrd' => 'Scx/Shrd',
'scx=sidd' => '#/602',
'scx=siddham' => '#/602',
'scx=signwriting' => '#/600',
'scx=sind' => 'Scx/Sind',
'scx=sinh' => 'Scx/Sinh',
'scx=sinhala' => 'Scx/Sinh',
'scx=sora' => '#/604',
'scx=sorasompeng' => '#/604',
'scx=sund' => '#/605',
'scx=sundanese' => '#/605',
'scx=sylo' => '#/632',
'scx=sylotinagri' => '#/632',
'scx=syrc' => 'Scx/Syrc',
'scx=syriac' => 'Scx/Syrc',
'scx=tagalog' => '#/634',
'scx=tagb' => 'Scx/Tagb',
'scx=tagbanwa' => 'Scx/Tagb',
'scx=taile' => '#/633',
'scx=taitham' => 'Sc/Lana',
'scx=taiviet' => '#/611',
'scx=takr' => 'Scx/Takr',
'scx=takri' => 'Scx/Takr',
'scx=tale' => '#/633',
'scx=talu' => 'Sc/Talu',
'scx=tamil' => 'Scx/Taml',
'scx=taml' => 'Scx/Taml',
'scx=tavt' => '#/611',
'scx=telu' => 'Scx/Telu',
'scx=telugu' => 'Scx/Telu',
'scx=tfng' => '#/612',
'scx=tglg' => '#/634',
'scx=thaa' => 'Scx/Thaa',
'scx=thaana' => 'Scx/Thaa',
'scx=thai' => '#/615',
'scx=tibetan' => 'Sc/Tibt',
'scx=tibt' => 'Sc/Tibt',
'scx=tifinagh' => '#/612',
'scx=tirh' => 'Scx/Tirh',
'scx=tirhuta' => 'Scx/Tirh',
'scx=ugar' => '#/617',
'scx=ugaritic' => '#/617',
'scx=unknown' => 'Sc/Zzzz',
'scx=vai' => '#/541',
'scx=vaii' => '#/541',
'scx=wara' => '#/618',
'scx=warangciti' => '#/618',
'scx=xpeo' => '#/619',
'scx=xsux' => 'Sc/Xsux',
'scx=yi' => 'Scx/Yi',
'scx=yiii' => 'Scx/Yi',
'scx=zinh' => 'Scx/Zinh',
'scx=zyyy' => 'Scx/Zyyy',
'scx=zzzz' => 'Sc/Zzzz',
'sd' => 'SD/Y',
'sd=f' => '!SD/Y',
'sd=false' => '!SD/Y',
'sd=n' => '!SD/Y',
'sd=no' => '!SD/Y',
'sd=t' => 'SD/Y',
'sd=true' => 'SD/Y',
'sd=y' => 'SD/Y',
'sd=yes' => 'SD/Y',
'separator' => 'Gc/Z',
'sgnw' => '#/600',
'sharada' => '#/601',
'shavian' => '#/188',
'shaw' => '#/188',
'shorthandformatcontrols' => '#/365',
'shrd' => '#/601',
'sidd' => '#/602',
'siddham' => '#/602',
'signwriting' => '#/600',
'sind' => '#/603',
'sinh' => 'Sc/Sinh',
'sinhala' => 'Sc/Sinh',
'sinhalaarchaicnumbers' => '#/360',
'sk' => 'Gc/Sk',
'sm' => 'Gc/Sm',
'smallforms' => '#/265',
'smallformvariants' => '#/265',
'so' => 'Gc/So',
'softdotted' => 'SD/Y',
'sora' => '#/604',
'sorasompeng' => '#/604',
'space' => 'Perl/SpacePer',
'spaceperl' => 'Perl/SpacePer',
'spaceseparator' => 'Gc/Zs',
'spacingmark' => 'Gc/Mc',
'spacingmodifierletters' => '#/328',
'specials' => '#/221',
'sterm' => 'STerm/Y',
'sterm=f' => '!STerm/Y',
'sterm=false' => '!STerm/Y',
'sterm=n' => '!STerm/Y',
'sterm=no' => '!STerm/Y',
'sterm=t' => 'STerm/Y',
'sterm=true' => 'STerm/Y',
'sterm=y' => 'STerm/Y',
'sterm=yes' => 'STerm/Y',
'sund' => '#/605',
'sundanese' => '#/605',
'sundanesesup' => '#/303',
'sundanesesupplement' => '#/303',
'suparrowsa' => '#/266',
'suparrowsb' => '#/267',
'suparrowsc' => '#/268',
'superandsub' => '#/289',
'superscriptsandsubscripts' => '#/289',
'supmathoperators' => '#/342',
'supplementalarrowsa' => '#/266',
'supplementalarrowsb' => '#/267',
'supplementalarrowsc' => '#/268',
'supplementalmathematicaloperators' => '#/342',
'supplementalpunctuation' => '#/319',
'supplementalsymbolsandpictographs' => '#/366',
'supplementaryprivateuseareaa' => '#/191',
'supplementaryprivateuseareab' => '#/192',
'suppuaa' => '#/191',
'suppuab' => '#/192',
'suppunctuation' => '#/319',
'supsymbolsandpictographs' => '#/366',
'surrogate' => '#/14',
'suttonsignwriting' => '#/346',
'sylo' => '#/606',
'sylotinagri' => '#/606',
'symbol' => 'Gc/S',
'syrc' => '#/607',
'syriac' => '#/607',
'tagalog' => '#/613',
'tagb' => '#/608',
'tagbanwa' => '#/608',
'tags' => '#/121',
'taile' => '#/610',
'taitham' => 'Sc/Lana',
'taiviet' => '#/611',
'taixuanjing' => '#/291',
'taixuanjingsymbols' => '#/291',
'takr' => '#/609',
'takri' => '#/609',
'tale' => '#/610',
'talu' => 'Sc/Talu',
'tamil' => 'Sc/Taml',
'taml' => 'Sc/Taml',
'tavt' => '#/611',
'telu' => 'Sc/Telu',
'telugu' => 'Sc/Telu',
'term' => 'Term/Y',
'term=f' => '!Term/Y',
'term=false' => '!Term/Y',
'term=n' => '!Term/Y',
'term=no' => '!Term/Y',
'term=t' => 'Term/Y',
'term=true' => 'Term/Y',
'term=y' => 'Term/Y',
'term=yes' => 'Term/Y',
'terminalpunctuation' => 'Term/Y',
'tfng' => '#/612',
'tglg' => '#/613',
'thaa' => '#/614',
'thaana' => '#/614',
'thai' => '#/615',
'tibetan' => 'Sc/Tibt',
'tibt' => 'Sc/Tibt',
'tifinagh' => '#/612',
'tirh' => '#/616',
'tirhuta' => '#/616',
'title' => 'Perl/Title',
'titlecase' => 'Perl/Title',
'titlecaseletter' => 'Perl/Title',
'transportandmap' => '#/331',
'transportandmapsymbols' => '#/331',
'ucas' => '#/123',
'ucasext' => '#/198',
'ugar' => '#/617',
'ugaritic' => '#/617',
'uideo' => 'UIdeo/Y',
'uideo=f' => '!UIdeo/Y',
'uideo=false' => '!UIdeo/Y',
'uideo=n' => '!UIdeo/Y',
'uideo=no' => '!UIdeo/Y',
'uideo=t' => 'UIdeo/Y',
'uideo=true' => 'UIdeo/Y',
'uideo=y' => 'UIdeo/Y',
'uideo=yes' => 'UIdeo/Y',
'unassigned' => 'Gc/Cn',
'unicode' => '#/2',
'unifiedcanadianaboriginalsyllabics' => '#/123',
'unifiedcanadianaboriginalsyllabicsextended' => '#/198',
'unifiedideograph' => 'UIdeo/Y',
'unknown' => 'Sc/Zzzz',
'upper' => 'Upper/Y',
'upper=f' => '!Upper/Y',
'upper=false' => '!Upper/Y',
'upper=n' => '!Upper/Y',
'upper=no' => '!Upper/Y',
'upper=t' => 'Upper/Y',
'upper=true' => 'Upper/Y',
'upper=y' => 'Upper/Y',
'upper=yes' => 'Upper/Y',
'uppercase' => 'Upper/Y',
'uppercaseletter' => 'Gc/Lu',
'vai' => '#/541',
'vaii' => '#/541',
'variationselector' => '#/88',
'variationselectors' => '#/105',
'variationselectorssupplement' => '#/138',
'vedicext' => '#/225',
'vedicextensions' => '#/225',
'verticalforms' => '#/310',
'vertspace' => '#/4',
'vs' => '#/88',
'vs=f' => '#/!88',
'vs=false' => '#/!88',
'vs=n' => '#/!88',
'vs=no' => '#/!88',
'vs=t' => '#/88',
'vs=true' => '#/88',
'vs=y' => '#/88',
'vs=yes' => '#/88',
'vssup' => '#/138',
'wara' => '#/618',
'warangciti' => '#/618',
'wb=aletter' => 'WB/LE',
'wb=cr' => '#/64',
'wb=doublequote' => '#/89',
'wb=dq' => '#/89',
'wb=ex' => 'WB/EX',
'wb=extend' => 'SB/EX',
'wb=extendnumlet' => 'WB/EX',
'wb=fo' => 'WB/FO',
'wb=format' => 'WB/FO',
'wb=hebrewletter' => 'WB/HL',
'wb=hl' => 'WB/HL',
'wb=ka' => 'WB/KA',
'wb=katakana' => 'WB/KA',
'wb=le' => 'WB/LE',
'wb=lf' => '#/65',
'wb=mb' => 'WB/MB',
'wb=midletter' => 'WB/ML',
'wb=midnum' => 'WB/MN',
'wb=midnumlet' => 'WB/MB',
'wb=ml' => 'WB/ML',
'wb=mn' => 'WB/MN',
'wb=newline' => '#/90',
'wb=nl' => '#/90',
'wb=nu' => 'WB/NU',
'wb=numeric' => 'WB/NU',
'wb=other' => 'WB/XX',
'wb=regionalindicator' => '#/66',
'wb=ri' => '#/66',
'wb=singlequote' => '#/91',
'wb=sq' => '#/91',
'wb=xx' => 'WB/XX',
'whitespace' => 'Perl/SpacePer',
'word' => 'Perl/Word',
'wspace' => 'Perl/SpacePer',
'wspace=f' => '!Perl/SpacePer',
'wspace=false' => '!Perl/SpacePer',
'wspace=n' => '!Perl/SpacePer',
'wspace=no' => '!Perl/SpacePer',
'wspace=t' => 'Perl/SpacePer',
'wspace=true' => 'Perl/SpacePer',
'wspace=y' => 'Perl/SpacePer',
'wspace=yes' => 'Perl/SpacePer',
'xdigit' => 'Hex/Y',
'xidc' => 'XIDC/Y',
'xidc=f' => '!XIDC/Y',
'xidc=false' => '!XIDC/Y',
'xidc=n' => '!XIDC/Y',
'xidc=no' => '!XIDC/Y',
'xidc=t' => 'XIDC/Y',
'xidc=true' => 'XIDC/Y',
'xidc=y' => 'XIDC/Y',
'xidc=yes' => 'XIDC/Y',
'xidcontinue' => 'XIDC/Y',
'xids' => 'XIDS/Y',
'xids=f' => '!XIDS/Y',
'xids=false' => '!XIDS/Y',
'xids=n' => '!XIDS/Y',
'xids=no' => '!XIDS/Y',
'xids=t' => 'XIDS/Y',
'xids=true' => 'XIDS/Y',
'xids=y' => 'XIDS/Y',
'xids=yes' => 'XIDS/Y',
'xidstart' => 'XIDS/Y',
'xpeo' => '#/619',
'xperlspace' => 'Perl/SpacePer',
'xposixalnum' => 'Perl/Alnum',
'xposixalpha' => 'Alpha/Y',
'xposixblank' => 'Perl/Blank',
'xposixcntrl' => '#/370',
'xposixdigit' => 'Gc/Nd',
'xposixgraph' => 'Perl/Graph',
'xposixlower' => 'Lower/Y',
'xposixprint' => 'Perl/Print',
'xposixpunct' => 'Perl/XPosixPu',
'xposixspace' => 'Perl/SpacePer',
'xposixupper' => 'Upper/Y',
'xposixword' => 'Perl/Word',
'xposixxdigit' => 'Hex/Y',
'xsux' => 'Sc/Xsux',
'yi' => '#/538',
'yiii' => '#/538',
'yijing' => '#/163',
'yijinghexagramsymbols' => '#/163',
'yiradicals' => '#/270',
'yisyllables' => '#/292',
'z' => 'Gc/Z',
'zinh' => 'Sc/Zinh',
'zl' => '#/372',
'zp' => '#/373',
'zs' => 'Gc/Zs',
'zyyy' => 'Sc/Zyyy',
'zzzz' => 'Sc/Zzzz',
);

# Maps floating point to fractional form
%utf8::nv_floating_to_rational = (
'-0.5' => '-1/2',
'0.0625' => '1/16',
'0.0833333333333333' => '1/12',
'0.1' => '1/10',
'0.111111111111111' => '1/9',
'0.125' => '1/8',
'0.142857142857143' => '1/7',
'0.166666666666667' => '1/6',
'0.1875' => '3/16',
'0.2' => '1/5',
'0.25' => '1/4',
'0.333333333333333' => '1/3',
'0.375' => '3/8',
'0.4' => '2/5',
'0.416666666666667' => '5/12',
'0.5' => '1/2',
'0.583333333333333' => '7/12',
'0.6' => '3/5',
'0.625' => '5/8',
'0.666666666666667' => '2/3',
'0.75' => '3/4',
'0.8' => '4/5',
'0.833333333333333' => '5/6',
'0.875' => '7/8',
'0.916666666666667' => '11/12',
'1.5' => '3/2',
'2.5' => '5/2',
'3.5' => '7/2',
'4.5' => '9/2',
'5.5' => '11/2',
'6.5' => '13/2',
'7.5' => '15/2',
'8.5' => '17/2',
);

# If a floating point number doesn't have enough digits in it to get this
# close to a fraction, it isn't considered to be that fraction even if all the
# digits it does have match.
$utf8::max_floating_slop = 0.001;

# Deprecated tables to generate a warning for.  The key is the file containing
# the table, so as to avoid duplication, as many property names can map to the
# file, but we only need one entry for all of them.
%utf8::why_deprecated = (
'#/450' => 'Deprecated by Unicode because surrogates should never appear in well-formed text, and therefore shouldn\'t be the basis for line breaking',
'Hyphen/T' => 'Supplanted by Line_Break property values; see www.unicode.org/reports/tr14',
);

# A few properties have different behavior under /i matching.  This maps
# those to substitute files to use under /i.
%utf8::caseless_equivalent = (
'gc=ll' => 'Gc/LC',
'gc=lowercaseletter' => 'Gc/LC',
'gc=lt' => 'Gc/LC',
'gc=lu' => 'Gc/LC',
'gc=titlecaseletter' => 'Gc/LC',
'gc=uppercaseletter' => 'Gc/LC',
'isll' => 'Gc/LC',
'islower' => 'Cased/Y',
'islowercase' => 'Cased/Y',
'islowercaseletter' => 'Gc/LC',
'islt' => 'Gc/LC',
'islu' => 'Gc/LC',
'isposixlower' => '#/6',
'isposixupper' => '#/6',
'istitle' => 'Cased/Y',
'istitlecase' => 'Cased/Y',
'istitlecaseletter' => 'Gc/LC',
'isupper' => 'Cased/Y',
'isuppercase' => 'Cased/Y',
'isuppercaseletter' => 'Gc/LC',
'isxposixlower' => 'Cased/Y',
'isxposixupper' => 'Cased/Y',
'll' => 'Gc/LC',
'lower' => 'Cased/Y',
'lower=f' => '!Cased/Y',
'lower=false' => '!Cased/Y',
'lower=n' => '!Cased/Y',
'lower=no' => '!Cased/Y',
'lower=t' => 'Cased/Y',
'lower=true' => 'Cased/Y',
'lower=y' => 'Cased/Y',
'lower=yes' => 'Cased/Y',
'lowercase' => 'Cased/Y',
'lowercaseletter' => 'Gc/LC',
'lt' => 'Gc/LC',
'lu' => 'Gc/LC',
'posixlower' => '#/6',
'posixupper' => '#/6',
'title' => 'Cased/Y',
'titlecase' => 'Cased/Y',
'titlecaseletter' => 'Gc/LC',
'upper' => 'Cased/Y',
'upper=f' => '!Cased/Y',
'upper=false' => '!Cased/Y',
'upper=n' => '!Cased/Y',
'upper=no' => '!Cased/Y',
'upper=t' => 'Cased/Y',
'upper=true' => 'Cased/Y',
'upper=y' => 'Cased/Y',
'upper=yes' => 'Cased/Y',
'uppercase' => 'Cased/Y',
'uppercaseletter' => 'Gc/LC',
'xposixlower' => 'Cased/Y',
'xposixupper' => 'Cased/Y',
);

# Property names to mapping files
%utf8::loose_property_to_file_of = (
'age' => 'To/Age',
'bc' => 'To/Bc',
'bidiclass' => 'To/Bc',
'bidimirroringglyph' => 'To/Bmg',
'bidipairedbracket' => 'To/Bpb',
'bidipairedbrackettype' => 'To/Bpt',
'bmg' => 'To/Bmg',
'bpb' => 'To/Bpb',
'bpt' => 'To/Bpt',
'canonicalcombiningclass' => 'CombiningClass',
'casefolding' => 'To/Cf',
'category' => 'To/Gc',
'ccc' => 'CombiningClass',
'cf' => 'To/Cf',
'ea' => 'To/Ea',
'eastasianwidth' => 'To/Ea',
'gc' => 'To/Gc',
'gcb' => 'To/GCB',
'generalcategory' => 'To/Gc',
'graphemeclusterbreak' => 'To/GCB',
'hangulsyllabletype' => 'To/Hst',
'hst' => 'To/Hst',
'indicpositionalcategory' => 'To/InPC',
'indicsyllabiccategory' => 'To/InSC',
'inpc' => 'To/InPC',
'insc' => 'To/InSC',
'isc' => 'To/Isc',
'isocomment' => 'To/Isc',
'jg' => 'To/Jg',
'joininggroup' => 'To/Jg',
'joiningtype' => 'To/Jt',
'jt' => 'To/Jt',
'lb' => 'To/Lb',
'lc' => 'To/Lc',
'linebreak' => 'To/Lb',
'lowercasemapping' => 'To/Lc',
'na1' => 'To/Na1',
'namealias' => 'To/NameAlia',
'nfcqc' => 'To/NFCQC',
'nfcquickcheck' => 'To/NFCQC',
'nfdqc' => 'To/NFDQC',
'nfdquickcheck' => 'To/NFDQC',
'nfkccasefold' => 'To/NFKCCF',
'nfkccf' => 'To/NFKCCF',
'nfkcqc' => 'To/NFKCQC',
'nfkcquickcheck' => 'To/NFKCQC',
'nfkdqc' => 'To/NFKDQC',
'nfkdquickcheck' => 'To/NFKDQC',
'nt' => 'To/Nt',
'numerictype' => 'To/Nt',
'numericvalue' => 'To/Nv',
'nv' => 'To/Nv',
'perldecimaldigit' => 'To/PerlDeci',
'sb' => 'To/SB',
'sc' => 'To/Sc',
'script' => 'To/Sc',
'scriptextensions' => 'To/Scx',
'scx' => 'To/Scx',
'sentencebreak' => 'To/SB',
'tc' => 'To/Tc',
'titlecasemapping' => 'To/Tc',
'uc' => 'To/Uc',
'unicode1name' => 'To/Na1',
'uppercasemapping' => 'To/Uc',
'wb' => 'To/WB',
'wordbreak' => 'To/WB',
);

# Property names to mapping files
%utf8::strict_property_to_file_of = (
'_perl_gcb' => 'To/GCB',
'_perl_lb' => 'To/_PerlLB',
'_perl_name_alias' => 'To/NameAlia',
'_perl_sb' => 'To/SB',
'_perl_wb' => 'To/_PerlWB',
);

# Files to the swash names within them.
%utf8::file_to_swash_name = (
'CombiningClass' => 'ToCombiningClass',
'To/_PerlLB' => 'To_PerlLB',
'To/_PerlWB' => 'To_PerlWB',
'To/Age' => 'ToAge',
'To/Bc' => 'ToBc',
'To/Bmg' => 'ToBmg',
'To/Bpb' => 'ToBpb',
'To/Bpt' => 'ToBpt',
'To/Cf' => 'ToCf',
'To/Ea' => 'ToEa',
'To/Gc' => 'ToGc',
'To/GCB' => 'ToGCB',
'To/Hst' => 'ToHst',
'To/InPC' => 'ToInPC',
'To/InSC' => 'ToInSC',
'To/Isc' => 'ToIsc',
'To/Jg' => 'ToJg',
'To/Jt' => 'ToJt',
'To/Lb' => 'ToLb',
'To/Lc' => 'ToLc',
'To/Na1' => 'ToNa1',
'To/NameAlia' => 'ToNameAlias',
'To/NFCQC' => 'ToNFCQC',
'To/NFDQC' => 'ToNFDQC',
'To/NFKCCF' => 'ToNFKCCF',
'To/NFKCQC' => 'ToNFKCQC',
'To/NFKDQC' => 'ToNFKDQC',
'To/Nt' => 'ToNt',
'To/Nv' => 'ToNv',
'To/PerlDeci' => 'ToPerlDecimalDigit',
'To/SB' => 'ToSB',
'To/Sc' => 'ToSc',
'To/Scx' => 'ToScx',
'To/Tc' => 'ToTc',
'To/Uc' => 'ToUc',
'To/WB' => 'ToWB',
);

1;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 8.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.


return <<'END';
00000	NULL
00000	NUL
00001	START OF HEADING
00001	SOH
00002	START OF TEXT
00002	STX
00003	END OF TEXT
00003	ETX
00004	END OF TRANSMISSION
00004	EOT
00005	ENQUIRY
00005	ENQ
00006	ACKNOWLEDGE
00006	ACK
00007	ALERT
00007	BEL
00008	BACKSPACE
00008	BS
00009	CHARACTER TABULATION
00009	HORIZONTAL TABULATION
00009	HT
00009	TAB
0000A	LINE FEED
0000A	NEW LINE
0000A	END OF LINE
0000A	LINE FEED (LF)
0000A	EOL
0000A	LF
0000A	NL
0000B	LINE TABULATION
0000B	VERTICAL TABULATION
0000B	VT
0000C	FORM FEED
0000C	FORM FEED (FF)
0000C	FF
0000D	CARRIAGE RETURN
0000D	CARRIAGE RETURN (CR)
0000D	CR
0000E	SHIFT OUT
0000E	LOCKING-SHIFT ONE
0000E	SO
0000F	SHIFT IN
0000F	LOCKING-SHIFT ZERO
0000F	SI
00010	DATA LINK ESCAPE
00010	DLE
00011	DEVICE CONTROL ONE
00011	DC1
00012	DEVICE CONTROL TWO
00012	DC2
00013	DEVICE CONTROL THREE
00013	DC3
00014	DEVICE CONTROL FOUR
00014	DC4
00015	NEGATIVE ACKNOWLEDGE
00015	NAK
00016	SYNCHRONOUS IDLE
00016	SYN
00017	END OF TRANSMISSION BLOCK
00017	ETB
00018	CANCEL
00018	CAN
00019	END OF MEDIUM
00019	EOM
0001A	SUBSTITUTE
0001A	SUB
0001B	ESCAPE
0001B	ESC
0001C	INFORMATION SEPARATOR FOUR
0001C	FILE SEPARATOR
0001C	FS
0001D	INFORMATION SEPARATOR THREE
0001D	GROUP SEPARATOR
0001D	GS
0001E	INFORMATION SEPARATOR TWO
0001E	RECORD SEPARATOR
0001E	RS
0001F	INFORMATION SEPARATOR ONE
0001F	UNIT SEPARATOR
0001F	US
00020	SPACE
00020	SP
00021	EXCLAMATION MARK
00022	QUOTATION MARK
00023	NUMBER SIGN
00024	DOLLAR SIGN
00025	PERCENT SIGN
00026	AMPERSAND
00027	APOSTROPHE
00028	LEFT PARENTHESIS
00029	RIGHT PARENTHESIS
0002A	ASTERISK
0002B	PLUS SIGN
0002C	COMMA
0002D	HYPHEN-MINUS
0002E	FULL STOP
0002F	SOLIDUS
00030	DIGIT ZERO
00031	DIGIT ONE
00032	DIGIT TWO
00033	DIGIT THREE
00034	DIGIT FOUR
00035	DIGIT FIVE
00036	DIGIT SIX
00037	DIGIT SEVEN
00038	DIGIT EIGHT
00039	DIGIT NINE
0003A	COLON
0003B	SEMICOLON
0003C	LESS-THAN SIGN
0003D	EQUALS SIGN
0003E	GREATER-THAN SIGN
0003F	QUESTION MARK
00040	COMMERCIAL AT
00041	LATIN CAPITAL LETTER A
00042	LATIN CAPITAL LETTER B
00043	LATIN CAPITAL LETTER C
00044	LATIN CAPITAL LETTER D
00045	LATIN CAPITAL LETTER E
00046	LATIN CAPITAL LETTER F
00047	LATIN CAPITAL LETTER G
00048	LATIN CAPITAL LETTER H
00049	LATIN CAPITAL LETTER I
0004A	LATIN CAPITAL LETTER J
0004B	LATIN CAPITAL LETTER K
0004C	LATIN CAPITAL LETTER L
0004D	LATIN CAPITAL LETTER M
0004E	LATIN CAPITAL LETTER N
0004F	LATIN CAPITAL LETTER O
00050	LATIN CAPITAL LETTER P
00051	LATIN CAPITAL LETTER Q
00052	LATIN CAPITAL LETTER R
00053	LATIN CAPITAL LETTER S
00054	LATIN CAPITAL LETTER T
00055	LATIN CAPITAL LETTER U
00056	LATIN CAPITAL LETTER V
00057	LATIN CAPITAL LETTER W
00058	LATIN CAPITAL LETTER X
00059	LATIN CAPITAL LETTER Y
0005A	LATIN CAPITAL LETTER Z
0005B	LEFT SQUARE BRACKET
0005C	REVERSE SOLIDUS
0005D	RIGHT SQUARE BRACKET
0005E	CIRCUMFLEX ACCENT
0005F	LOW LINE
00060	GRAVE ACCENT
00061	LATIN SMALL LETTER A
00062	LATIN SMALL LETTER B
00063	LATIN SMALL LETTER C
00064	LATIN SMALL LETTER D
00065	LATIN SMALL LETTER E
00066	LATIN SMALL LETTER F
00067	LATIN SMALL LETTER G
00068	LATIN SMALL LETTER H
00069	LATIN SMALL LETTER I
0006A	LATIN SMALL LETTER J
0006B	LATIN SMALL LETTER K
0006C	LATIN SMALL LETTER L
0006D	LATIN SMALL LETTER M
0006E	LATIN SMALL LETTER N
0006F	LATIN SMALL LETTER O
00070	LATIN SMALL LETTER P
00071	LATIN SMALL LETTER Q
00072	LATIN SMALL LETTER R
00073	LATIN SMALL LETTER S
00074	LATIN SMALL LETTER T
00075	LATIN SMALL LETTER U
00076	LATIN SMALL LETTER V
00077	LATIN SMALL LETTER W
00078	LATIN SMALL LETTER X
00079	LATIN SMALL LETTER Y
0007A	LATIN SMALL LETTER Z
0007B	LEFT CURLY BRACKET
0007C	VERTICAL LINE
0007D	RIGHT CURLY BRACKET
0007E	TILDE
0007F	DELETE
0007F	DEL
00080	PADDING CHARACTER
00080	PAD
00081	HIGH OCTET PRESET
00081	HOP
00082	BREAK PERMITTED HERE
00082	BPH
00083	NO BREAK HERE
00083	NBH
00084	INDEX
00084	IND
00085	NEXT LINE
00085	NEXT LINE (NEL)
00085	NEL
00086	START OF SELECTED AREA
00086	SSA
00087	END OF SELECTED AREA
00087	ESA
00088	CHARACTER TABULATION SET
00088	HORIZONTAL TABULATION SET
00088	HTS
00089	CHARACTER TABULATION WITH JUSTIFICATION
00089	HORIZONTAL TABULATION WITH JUSTIFICATION
00089	HTJ
0008A	LINE TABULATION SET
0008A	VERTICAL TABULATION SET
0008A	VTS
0008B	PARTIAL LINE FORWARD
0008B	PARTIAL LINE DOWN
0008B	PLD
0008C	PARTIAL LINE BACKWARD
0008C	PARTIAL LINE UP
0008C	PLU
0008D	REVERSE LINE FEED
0008D	REVERSE INDEX
0008D	RI
0008E	SINGLE SHIFT TWO
0008E	SINGLE-SHIFT-2
0008E	SS2
0008F	SINGLE SHIFT THREE
0008F	SINGLE-SHIFT-3
0008F	SS3
00090	DEVICE CONTROL STRING
00090	DCS
00091	PRIVATE USE ONE
00091	PRIVATE USE-1
00091	PU1
00092	PRIVATE USE TWO
00092	PRIVATE USE-2
00092	PU2
00093	SET TRANSMIT STATE
00093	STS
00094	CANCEL CHARACTER
00094	CCH
00095	MESSAGE WAITING
00095	MW
00096	START OF GUARDED AREA
00096	START OF PROTECTED AREA
00096	SPA
00097	END OF GUARDED AREA
00097	END OF PROTECTED AREA
00097	EPA
00098	START OF STRING
00098	SOS
00099	SINGLE GRAPHIC CHARACTER INTRODUCER
00099	SGC
0009A	SINGLE CHARACTER INTRODUCER
0009A	SCI
0009B	CONTROL SEQUENCE INTRODUCER
0009B	CSI
0009C	STRING TERMINATOR
0009C	ST
0009D	OPERATING SYSTEM COMMAND
0009D	OSC
0009E	PRIVACY MESSAGE
0009E	PM
0009F	APPLICATION PROGRAM COMMAND
0009F	APC
000A0	NO-BREAK SPACE
000A0	NBSP
000A1	INVERTED EXCLAMATION MARK
000A2	CENT SIGN
000A3	POUND SIGN
000A4	CURRENCY SIGN
000A5	YEN SIGN
000A6	BROKEN BAR
000A7	SECTION SIGN
000A8	DIAERESIS
000A9	COPYRIGHT SIGN
000AA	FEMININE ORDINAL INDICATOR
000AB	LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
000AC	NOT SIGN
000AD	SOFT HYPHEN
000AD	SHY
000AE	REGISTERED SIGN
000AF	MACRON
000B0	DEGREE SIGN
000B1	PLUS-MINUS SIGN
000B2	SUPERSCRIPT TWO
000B3	SUPERSCRIPT THREE
000B4	ACUTE ACCENT
000B5	MICRO SIGN
000B6	PILCROW SIGN
000B7	MIDDLE DOT
000B8	CEDILLA
000B9	SUPERSCRIPT ONE
000BA	MASCULINE ORDINAL INDICATOR
000BB	RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
000BC	VULGAR FRACTION ONE QUARTER
000BD	VULGAR FRACTION ONE HALF
000BE	VULGAR FRACTION THREE QUARTERS
000BF	INVERTED QUESTION MARK
000C0	LATIN CAPITAL LETTER A WITH GRAVE
000C1	LATIN CAPITAL LETTER A WITH ACUTE
000C2	LATIN CAPITAL LETTER A WITH CIRCUMFLEX
000C3	LATIN CAPITAL LETTER A WITH TILDE
000C4	LATIN CAPITAL LETTER A WITH DIAERESIS
000C5	LATIN CAPITAL LETTER A WITH RING ABOVE
000C6	LATIN CAPITAL LETTER AE
000C7	LATIN CAPITAL LETTER C WITH CEDILLA
000C8	LATIN CAPITAL LETTER E WITH GRAVE
000C9	LATIN CAPITAL LETTER E WITH ACUTE
000CA	LATIN CAPITAL LETTER E WITH CIRCUMFLEX
000CB	LATIN CAPITAL LETTER E WITH DIAERESIS
000CC	LATIN CAPITAL LETTER I WITH GRAVE
000CD	LATIN CAPITAL LETTER I WITH ACUTE
000CE	LATIN CAPITAL LETTER I WITH CIRCUMFLEX
000CF	LATIN CAPITAL LETTER I WITH DIAERESIS
000D0	LATIN CAPITAL LETTER ETH
000D1	LATIN CAPITAL LETTER N WITH TILDE
000D2	LATIN CAPITAL LETTER O WITH GRAVE
000D3	LATIN CAPITAL LETTER O WITH ACUTE
000D4	LATIN CAPITAL LETTER O WITH CIRCUMFLEX
000D5	LATIN CAPITAL LETTER O WITH TILDE
000D6	LATIN CAPITAL LETTER O WITH DIAERESIS
000D7	MULTIPLICATION SIGN
000D8	LATIN CAPITAL LETTER O WITH STROKE
000D9	LATIN CAPITAL LETTER U WITH GRAVE
000DA	LATIN CAPITAL LETTER U WITH ACUTE
000DB	LATIN CAPITAL LETTER U WITH CIRCUMFLEX
000DC	LATIN CAPITAL LETTER U WITH DIAERESIS
000DD	LATIN CAPITAL LETTER Y WITH ACUTE
000DE	LATIN CAPITAL LETTER THORN
000DF	LATIN SMALL LETTER SHARP S
000E0	LATIN SMALL LETTER A WITH GRAVE
000E1	LATIN SMALL LETTER A WITH ACUTE
000E2	LATIN SMALL LETTER A WITH CIRCUMFLEX
000E3	LATIN SMALL LETTER A WITH TILDE
000E4	LATIN SMALL LETTER A WITH DIAERESIS
000E5	LATIN SMALL LETTER A WITH RING ABOVE
000E6	LATIN SMALL LETTER AE
000E7	LATIN SMALL LETTER C WITH CEDILLA
000E8	LATIN SMALL LETTER E WITH GRAVE
000E9	LATIN SMALL LETTER E WITH ACUTE
000EA	LATIN SMALL LETTER E WITH CIRCUMFLEX
000EB	LATIN SMALL LETTER E WITH DIAERESIS
000EC	LATIN SMALL LETTER I WITH GRAVE
000ED	LATIN SMALL LETTER I WITH ACUTE
000EE	LATIN SMALL LETTER I WITH CIRCUMFLEX
000EF	LATIN SMALL LETTER I WITH DIAERESIS
000F0	LATIN SMALL LETTER ETH
000F1	LATIN SMALL LETTER N WITH TILDE
000F2	LATIN SMALL LETTER O WITH GRAVE
000F3	LATIN SMALL LETTER O WITH ACUTE
000F4	LATIN SMALL LETTER O WITH CIRCUMFLEX
000F5	LATIN SMALL LETTER O WITH TILDE
000F6	LATIN SMALL LETTER O WITH DIAERESIS
000F7	DIVISION SIGN
000F8	LATIN SMALL LETTER O WITH STROKE
000F9	LATIN SMALL LETTER U WITH GRAVE
000FA	LATIN SMALL LETTER U WITH ACUTE
000FB	LATIN SMALL LETTER U WITH CIRCUMFLEX
000FC	LATIN SMALL LETTER U WITH DIAERESIS
000FD	LATIN SMALL LETTER Y WITH ACUTE
000FE	LATIN SMALL LETTER THORN
000FF	LATIN SMALL LETTER Y WITH DIAERESIS
00100	LATIN CAPITAL LETTER A WITH MACRON
00101	LATIN SMALL LETTER A WITH MACRON
00102	LATIN CAPITAL LETTER A WITH BREVE
00103	LATIN SMALL LETTER A WITH BREVE
00104	LATIN CAPITAL LETTER A WITH OGONEK
00105	LATIN SMALL LETTER A WITH OGONEK
00106	LATIN CAPITAL LETTER C WITH ACUTE
00107	LATIN SMALL LETTER C WITH ACUTE
00108	LATIN CAPITAL LETTER C WITH CIRCUMFLEX
00109	LATIN SMALL LETTER C WITH CIRCUMFLEX
0010A	LATIN CAPITAL LETTER C WITH DOT ABOVE
0010B	LATIN SMALL LETTER C WITH DOT ABOVE
0010C	LATIN CAPITAL LETTER C WITH CARON
0010D	LATIN SMALL LETTER C WITH CARON
0010E	LATIN CAPITAL LETTER D WITH CARON
0010F	LATIN SMALL LETTER D WITH CARON
00110	LATIN CAPITAL LETTER D WITH STROKE
00111	LATIN SMALL LETTER D WITH STROKE
00112	LATIN CAPITAL LETTER E WITH MACRON
00113	LATIN SMALL LETTER E WITH MACRON
00114	LATIN CAPITAL LETTER E WITH BREVE
00115	LATIN SMALL LETTER E WITH BREVE
00116	LATIN CAPITAL LETTER E WITH DOT ABOVE
00117	LATIN SMALL LETTER E WITH DOT ABOVE
00118	LATIN CAPITAL LETTER E WITH OGONEK
00119	LATIN SMALL LETTER E WITH OGONEK
0011A	LATIN CAPITAL LETTER E WITH CARON
0011B	LATIN SMALL LETTER E WITH CARON
0011C	LATIN CAPITAL LETTER G WITH CIRCUMFLEX
0011D	LATIN SMALL LETTER G WITH CIRCUMFLEX
0011E	LATIN CAPITAL LETTER G WITH BREVE
0011F	LATIN SMALL LETTER G WITH BREVE
00120	LATIN CAPITAL LETTER G WITH DOT ABOVE
00121	LATIN SMALL LETTER G WITH DOT ABOVE
00122	LATIN CAPITAL LETTER G WITH CEDILLA
00123	LATIN SMALL LETTER G WITH CEDILLA
00124	LATIN CAPITAL LETTER H WITH CIRCUMFLEX
00125	LATIN SMALL LETTER H WITH CIRCUMFLEX
00126	LATIN CAPITAL LETTER H WITH STROKE
00127	LATIN SMALL LETTER H WITH STROKE
00128	LATIN CAPITAL LETTER I WITH TILDE
00129	LATIN SMALL LETTER I WITH TILDE
0012A	LATIN CAPITAL LETTER I WITH MACRON
0012B	LATIN SMALL LETTER I WITH MACRON
0012C	LATIN CAPITAL LETTER I WITH BREVE
0012D	LATIN SMALL LETTER I WITH BREVE
0012E	LATIN CAPITAL LETTER I WITH OGONEK
0012F	LATIN SMALL LETTER I WITH OGONEK
00130	LATIN CAPITAL LETTER I WITH DOT ABOVE
00131	LATIN SMALL LETTER DOTLESS I
00132	LATIN CAPITAL LIGATURE IJ
00133	LATIN SMALL LIGATURE IJ
00134	LATIN CAPITAL LETTER J WITH CIRCUMFLEX
00135	LATIN SMALL LETTER J WITH CIRCUMFLEX
00136	LATIN CAPITAL LETTER K WITH CEDILLA
00137	LATIN SMALL LETTER K WITH CEDILLA
00138	LATIN SMALL LETTER KRA
00139	LATIN CAPITAL LETTER L WITH ACUTE
0013A	LATIN SMALL LETTER L WITH ACUTE
0013B	LATIN CAPITAL LETTER L WITH CEDILLA
0013C	LATIN SMALL LETTER L WITH CEDILLA
0013D	LATIN CAPITAL LETTER L WITH CARON
0013E	LATIN SMALL LETTER L WITH CARON
0013F	LATIN CAPITAL LETTER L WITH MIDDLE DOT
00140	LATIN SMALL LETTER L WITH MIDDLE DOT
00141	LATIN CAPITAL LETTER L WITH STROKE
00142	LATIN SMALL LETTER L WITH STROKE
00143	LATIN CAPITAL LETTER N WITH ACUTE
00144	LATIN SMALL LETTER N WITH ACUTE
00145	LATIN CAPITAL LETTER N WITH CEDILLA
00146	LATIN SMALL LETTER N WITH CEDILLA
00147	LATIN CAPITAL LETTER N WITH CARON
00148	LATIN SMALL LETTER N WITH CARON
00149	LATIN SMALL LETTER N PRECEDED BY APOSTROPHE
0014A	LATIN CAPITAL LETTER ENG
0014B	LATIN SMALL LETTER ENG
0014C	LATIN CAPITAL LETTER O WITH MACRON
0014D	LATIN SMALL LETTER O WITH MACRON
0014E	LATIN CAPITAL LETTER O WITH BREVE
0014F	LATIN SMALL LETTER O WITH BREVE
00150	LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
00151	LATIN SMALL LETTER O WITH DOUBLE ACUTE
00152	LATIN CAPITAL LIGATURE OE
00153	LATIN SMALL LIGATURE OE
00154	LATIN CAPITAL LETTER R WITH ACUTE
00155	LATIN SMALL LETTER R WITH ACUTE
00156	LATIN CAPITAL LETTER R WITH CEDILLA
00157	LATIN SMALL LETTER R WITH CEDILLA
00158	LATIN CAPITAL LETTER R WITH CARON
00159	LATIN SMALL LETTER R WITH CARON
0015A	LATIN CAPITAL LETTER S WITH ACUTE
0015B	LATIN SMALL LETTER S WITH ACUTE
0015C	LATIN CAPITAL LETTER S WITH CIRCUMFLEX
0015D	LATIN SMALL LETTER S WITH CIRCUMFLEX
0015E	LATIN CAPITAL LETTER S WITH CEDILLA
0015F	LATIN SMALL LETTER S WITH CEDILLA
00160	LATIN CAPITAL LETTER S WITH CARON
00161	LATIN SMALL LETTER S WITH CARON
00162	LATIN CAPITAL LETTER T WITH CEDILLA
00163	LATIN SMALL LETTER T WITH CEDILLA
00164	LATIN CAPITAL LETTER T WITH CARON
00165	LATIN SMALL LETTER T WITH CARON
00166	LATIN CAPITAL LETTER T WITH STROKE
00167	LATIN SMALL LETTER T WITH STROKE
00168	LATIN CAPITAL LETTER U WITH TILDE
00169	LATIN SMALL LETTER U WITH TILDE
0016A	LATIN CAPITAL LETTER U WITH MACRON
0016B	LATIN SMALL LETTER U WITH MACRON
0016C	LATIN CAPITAL LETTER U WITH BREVE
0016D	LATIN SMALL LETTER U WITH BREVE
0016E	LATIN CAPITAL LETTER U WITH RING ABOVE
0016F	LATIN SMALL LETTER U WITH RING ABOVE
00170	LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
00171	LATIN SMALL LETTER U WITH DOUBLE ACUTE
00172	LATIN CAPITAL LETTER U WITH OGONEK
00173	LATIN SMALL LETTER U WITH OGONEK
00174	LATIN CAPITAL LETTER W WITH CIRCUMFLEX
00175	LATIN SMALL LETTER W WITH CIRCUMFLEX
00176	LATIN CAPITAL LETTER Y WITH CIRCUMFLEX
00177	LATIN SMALL LETTER Y WITH CIRCUMFLEX
00178	LATIN CAPITAL LETTER Y WITH DIAERESIS
00179	LATIN CAPITAL LETTER Z WITH ACUTE
0017A	LATIN SMALL LETTER Z WITH ACUTE
0017B	LATIN CAPITAL LETTER Z WITH DOT ABOVE
0017C	LATIN SMALL LETTER Z WITH DOT ABOVE
0017D	LATIN CAPITAL LETTER Z WITH CARON
0017E	LATIN SMALL LETTER Z WITH CARON
0017F	LATIN SMALL LETTER LONG S
00180	LATIN SMALL LETTER B WITH STROKE
00181	LATIN CAPITAL LETTER B WITH HOOK
00182	LATIN CAPITAL LETTER B WITH TOPBAR
00183	LATIN SMALL LETTER B WITH TOPBAR
00184	LATIN CAPITAL LETTER TONE SIX
00185	LATIN SMALL LETTER TONE SIX
00186	LATIN CAPITAL LETTER OPEN O
00187	LATIN CAPITAL LETTER C WITH HOOK
00188	LATIN SMALL LETTER C WITH HOOK
00189	LATIN CAPITAL LETTER AFRICAN D
0018A	LATIN CAPITAL LETTER D WITH HOOK
0018B	LATIN CAPITAL LETTER D WITH TOPBAR
0018C	LATIN SMALL LETTER D WITH TOPBAR
0018D	LATIN SMALL LETTER TURNED DELTA
0018E	LATIN CAPITAL LETTER REVERSED E
0018F	LATIN CAPITAL LETTER SCHWA
00190	LATIN CAPITAL LETTER OPEN E
00191	LATIN CAPITAL LETTER F WITH HOOK
00192	LATIN SMALL LETTER F WITH HOOK
00193	LATIN CAPITAL LETTER G WITH HOOK
00194	LATIN CAPITAL LETTER GAMMA
00195	LATIN SMALL LETTER HV
00196	LATIN CAPITAL LETTER IOTA
00197	LATIN CAPITAL LETTER I WITH STROKE
00198	LATIN CAPITAL LETTER K WITH HOOK
00199	LATIN SMALL LETTER K WITH HOOK
0019A	LATIN SMALL LETTER L WITH BAR
0019B	LATIN SMALL LETTER LAMBDA WITH STROKE
0019C	LATIN CAPITAL LETTER TURNED M
0019D	LATIN CAPITAL LETTER N WITH LEFT HOOK
0019E	LATIN SMALL LETTER N WITH LONG RIGHT LEG
0019F	LATIN CAPITAL LETTER O WITH MIDDLE TILDE
001A0	LATIN CAPITAL LETTER O WITH HORN
001A1	LATIN SMALL LETTER O WITH HORN
001A2	LATIN CAPITAL LETTER GHA
001A2	LATIN CAPITAL LETTER OI
001A3	LATIN SMALL LETTER GHA
001A3	LATIN SMALL LETTER OI
001A4	LATIN CAPITAL LETTER P WITH HOOK
001A5	LATIN SMALL LETTER P WITH HOOK
001A6	LATIN LETTER YR
001A7	LATIN CAPITAL LETTER TONE TWO
001A8	LATIN SMALL LETTER TONE TWO
001A9	LATIN CAPITAL LETTER ESH
001AA	LATIN LETTER REVERSED ESH LOOP
001AB	LATIN SMALL LETTER T WITH PALATAL HOOK
001AC	LATIN CAPITAL LETTER T WITH HOOK
001AD	LATIN SMALL LETTER T WITH HOOK
001AE	LATIN CAPITAL LETTER T WITH RETROFLEX HOOK
001AF	LATIN CAPITAL LETTER U WITH HORN
001B0	LATIN SMALL LETTER U WITH HORN
001B1	LATIN CAPITAL LETTER UPSILON
001B2	LATIN CAPITAL LETTER V WITH HOOK
001B3	LATIN CAPITAL LETTER Y WITH HOOK
001B4	LATIN SMALL LETTER Y WITH HOOK
001B5	LATIN CAPITAL LETTER Z WITH STROKE
001B6	LATIN SMALL LETTER Z WITH STROKE
001B7	LATIN CAPITAL LETTER EZH
001B8	LATIN CAPITAL LETTER EZH REVERSED
001B9	LATIN SMALL LETTER EZH REVERSED
001BA	LATIN SMALL LETTER EZH WITH TAIL
001BB	LATIN LETTER TWO WITH STROKE
001BC	LATIN CAPITAL LETTER TONE FIVE
001BD	LATIN SMALL LETTER TONE FIVE
001BE	LATIN LETTER INVERTED GLOTTAL STOP WITH STROKE
001BF	LATIN LETTER WYNN
001C0	LATIN LETTER DENTAL CLICK
001C1	LATIN LETTER LATERAL CLICK
001C2	LATIN LETTER ALVEOLAR CLICK
001C3	LATIN LETTER RETROFLEX CLICK
001C4	LATIN CAPITAL LETTER DZ WITH CARON
001C5	LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON
001C6	LATIN SMALL LETTER DZ WITH CARON
001C7	LATIN CAPITAL LETTER LJ
001C8	LATIN CAPITAL LETTER L WITH SMALL LETTER J
001C9	LATIN SMALL LETTER LJ
001CA	LATIN CAPITAL LETTER NJ
001CB	LATIN CAPITAL LETTER N WITH SMALL LETTER J
001CC	LATIN SMALL LETTER NJ
001CD	LATIN CAPITAL LETTER A WITH CARON
001CE	LATIN SMALL LETTER A WITH CARON
001CF	LATIN CAPITAL LETTER I WITH CARON
001D0	LATIN SMALL LETTER I WITH CARON
001D1	LATIN CAPITAL LETTER O WITH CARON
001D2	LATIN SMALL LETTER O WITH CARON
001D3	LATIN CAPITAL LETTER U WITH CARON
001D4	LATIN SMALL LETTER U WITH CARON
001D5	LATIN CAPITAL LETTER U WITH DIAERESIS AND MACRON
001D6	LATIN SMALL LETTER U WITH DIAERESIS AND MACRON
001D7	LATIN CAPITAL LETTER U WITH DIAERESIS AND ACUTE
001D8	LATIN SMALL LETTER U WITH DIAERESIS AND ACUTE
001D9	LATIN CAPITAL LETTER U WITH DIAERESIS AND CARON
001DA	LATIN SMALL LETTER U WITH DIAERESIS AND CARON
001DB	LATIN CAPITAL LETTER U WITH DIAERESIS AND GRAVE
001DC	LATIN SMALL LETTER U WITH DIAERESIS AND GRAVE
001DD	LATIN SMALL LETTER TURNED E
001DE	LATIN CAPITAL LETTER A WITH DIAERESIS AND MACRON
001DF	LATIN SMALL LETTER A WITH DIAERESIS AND MACRON
001E0	LATIN CAPITAL LETTER A WITH DOT ABOVE AND MACRON
001E1	LATIN SMALL LETTER A WITH DOT ABOVE AND MACRON
001E2	LATIN CAPITAL LETTER AE WITH MACRON
001E3	LATIN SMALL LETTER AE WITH MACRON
001E4	LATIN CAPITAL LETTER G WITH STROKE
001E5	LATIN SMALL LETTER G WITH STROKE
001E6	LATIN CAPITAL LETTER G WITH CARON
001E7	LATIN SMALL LETTER G WITH CARON
001E8	LATIN CAPITAL LETTER K WITH CARON
001E9	LATIN SMALL LETTER K WITH CARON
001EA	LATIN CAPITAL LETTER O WITH OGONEK
001EB	LATIN SMALL LETTER O WITH OGONEK
001EC	LATIN CAPITAL LETTER O WITH OGONEK AND MACRON
001ED	LATIN SMALL LETTER O WITH OGONEK AND MACRON
001EE	LATIN CAPITAL LETTER EZH WITH CARON
001EF	LATIN SMALL LETTER EZH WITH CARON
001F0	LATIN SMALL LETTER J WITH CARON
001F1	LATIN CAPITAL LETTER DZ
001F2	LATIN CAPITAL LETTER D WITH SMALL LETTER Z
001F3	LATIN SMALL LETTER DZ
001F4	LATIN CAPITAL LETTER G WITH ACUTE
001F5	LATIN SMALL LETTER G WITH ACUTE
001F6	LATIN CAPITAL LETTER HWAIR
001F7	LATIN CAPITAL LETTER WYNN
001F8	LATIN CAPITAL LETTER N WITH GRAVE
001F9	LATIN SMALL LETTER N WITH GRAVE
001FA	LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE
001FB	LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE
001FC	LATIN CAPITAL LETTER AE WITH ACUTE
001FD	LATIN SMALL LETTER AE WITH ACUTE
001FE	LATIN CAPITAL LETTER O WITH STROKE AND ACUTE
001FF	LATIN SMALL LETTER O WITH STROKE AND ACUTE
00200	LATIN CAPITAL LETTER A WITH DOUBLE GRAVE
00201	LATIN SMALL LETTER A WITH DOUBLE GRAVE
00202	LATIN CAPITAL LETTER A WITH INVERTED BREVE
00203	LATIN SMALL LETTER A WITH INVERTED BREVE
00204	LATIN CAPITAL LETTER E WITH DOUBLE GRAVE
00205	LATIN SMALL LETTER E WITH DOUBLE GRAVE
00206	LATIN CAPITAL LETTER E WITH INVERTED BREVE
00207	LATIN SMALL LETTER E WITH INVERTED BREVE
00208	LATIN CAPITAL LETTER I WITH DOUBLE GRAVE
00209	LATIN SMALL LETTER I WITH DOUBLE GRAVE
0020A	LATIN CAPITAL LETTER I WITH INVERTED BREVE
0020B	LATIN SMALL LETTER I WITH INVERTED BREVE
0020C	LATIN CAPITAL LETTER O WITH DOUBLE GRAVE
0020D	LATIN SMALL LETTER O WITH DOUBLE GRAVE
0020E	LATIN CAPITAL LETTER O WITH INVERTED BREVE
0020F	LATIN SMALL LETTER O WITH INVERTED BREVE
00210	LATIN CAPITAL LETTER R WITH DOUBLE GRAVE
00211	LATIN SMALL LETTER R WITH DOUBLE GRAVE
00212	LATIN CAPITAL LETTER R WITH INVERTED BREVE
00213	LATIN SMALL LETTER R WITH INVERTED BREVE
00214	LATIN CAPITAL LETTER U WITH DOUBLE GRAVE
00215	LATIN SMALL LETTER U WITH DOUBLE GRAVE
00216	LATIN CAPITAL LETTER U WITH INVERTED BREVE
00217	LATIN SMALL LETTER U WITH INVERTED BREVE
00218	LATIN CAPITAL LETTER S WITH COMMA BELOW
00219	LATIN SMALL LETTER S WITH COMMA BELOW
0021A	LATIN CAPITAL LETTER T WITH COMMA BELOW
0021B	LATIN SMALL LETTER T WITH COMMA BELOW
0021C	LATIN CAPITAL LETTER YOGH
0021D	LATIN SMALL LETTER YOGH
0021E	LATIN CAPITAL LETTER H WITH CARON
0021F	LATIN SMALL LETTER H WITH CARON
00220	LATIN CAPITAL LETTER N WITH LONG RIGHT LEG
00221	LATIN SMALL LETTER D WITH CURL
00222	LATIN CAPITAL LETTER OU
00223	LATIN SMALL LETTER OU
00224	LATIN CAPITAL LETTER Z WITH HOOK
00225	LATIN SMALL LETTER Z WITH HOOK
00226	LATIN CAPITAL LETTER A WITH DOT ABOVE
00227	LATIN SMALL LETTER A WITH DOT ABOVE
00228	LATIN CAPITAL LETTER E WITH CEDILLA
00229	LATIN SMALL LETTER E WITH CEDILLA
0022A	LATIN CAPITAL LETTER O WITH DIAERESIS AND MACRON
0022B	LATIN SMALL LETTER O WITH DIAERESIS AND MACRON
0022C	LATIN CAPITAL LETTER O WITH TILDE AND MACRON
0022D	LATIN SMALL LETTER O WITH TILDE AND MACRON
0022E	LATIN CAPITAL LETTER O WITH DOT ABOVE
0022F	LATIN SMALL LETTER O WITH DOT ABOVE
00230	LATIN CAPITAL LETTER O WITH DOT ABOVE AND MACRON
00231	LATIN SMALL LETTER O WITH DOT ABOVE AND MACRON
00232	LATIN CAPITAL LETTER Y WITH MACRON
00233	LATIN SMALL LETTER Y WITH MACRON
00234	LATIN SMALL LETTER L WITH CURL
00235	LATIN SMALL LETTER N WITH CURL
00236	LATIN SMALL LETTER T WITH CURL
00237	LATIN SMALL LETTER DOTLESS J
00238	LATIN SMALL LETTER DB DIGRAPH
00239	LATIN SMALL LETTER QP DIGRAPH
0023A	LATIN CAPITAL LETTER A WITH STROKE
0023B	LATIN CAPITAL LETTER C WITH STROKE
0023C	LATIN SMALL LETTER C WITH STROKE
0023D	LATIN CAPITAL LETTER L WITH BAR
0023E	LATIN CAPITAL LETTER T WITH DIAGONAL STROKE
0023F	LATIN SMALL LETTER S WITH SWASH TAIL
00240	LATIN SMALL LETTER Z WITH SWASH TAIL
00241	LATIN CAPITAL LETTER GLOTTAL STOP
00242	LATIN SMALL LETTER GLOTTAL STOP
00243	LATIN CAPITAL LETTER B WITH STROKE
00244	LATIN CAPITAL LETTER U BAR
00245	LATIN CAPITAL LETTER TURNED V
00246	LATIN CAPITAL LETTER E WITH STROKE
00247	LATIN SMALL LETTER E WITH STROKE
00248	LATIN CAPITAL LETTER J WITH STROKE
00249	LATIN SMALL LETTER J WITH STROKE
0024A	LATIN CAPITAL LETTER SMALL Q WITH HOOK TAIL
0024B	LATIN SMALL LETTER Q WITH HOOK TAIL
0024C	LATIN CAPITAL LETTER R WITH STROKE
0024D	LATIN SMALL LETTER R WITH STROKE
0024E	LATIN CAPITAL LETTER Y WITH STROKE
0024F	LATIN SMALL LETTER Y WITH STROKE
00250	LATIN SMALL LETTER TURNED A
00251	LATIN SMALL LETTER ALPHA
00252	LATIN SMALL LETTER TURNED ALPHA
00253	LATIN SMALL LETTER B WITH HOOK
00254	LATIN SMALL LETTER OPEN O
00255	LATIN SMALL LETTER C WITH CURL
00256	LATIN SMALL LETTER D WITH TAIL
00257	LATIN SMALL LETTER D WITH HOOK
00258	LATIN SMALL LETTER REVERSED E
00259	LATIN SMALL LETTER SCHWA
0025A	LATIN SMALL LETTER SCHWA WITH HOOK
0025B	LATIN SMALL LETTER OPEN E
0025C	LATIN SMALL LETTER REVERSED OPEN E
0025D	LATIN SMALL LETTER REVERSED OPEN E WITH HOOK
0025E	LATIN SMALL LETTER CLOSED REVERSED OPEN E
0025F	LATIN SMALL LETTER DOTLESS J WITH STROKE
00260	LATIN SMALL LETTER G WITH HOOK
00261	LATIN SMALL LETTER SCRIPT G
00262	LATIN LETTER SMALL CAPITAL G
00263	LATIN SMALL LETTER GAMMA
00264	LATIN SMALL LETTER RAMS HORN
00265	LATIN SMALL LETTER TURNED H
00266	LATIN SMALL LETTER H WITH HOOK
00267	LATIN SMALL LETTER HENG WITH HOOK
00268	LATIN SMALL LETTER I WITH STROKE
00269	LATIN SMALL LETTER IOTA
0026A	LATIN LETTER SMALL CAPITAL I
0026B	LATIN SMALL LETTER L WITH MIDDLE TILDE
0026C	LATIN SMALL LETTER L WITH BELT
0026D	LATIN SMALL LETTER L WITH RETROFLEX HOOK
0026E	LATIN SMALL LETTER LEZH
0026F	LATIN SMALL LETTER TURNED M
00270	LATIN SMALL LETTER TURNED M WITH LONG LEG
00271	LATIN SMALL LETTER M WITH HOOK
00272	LATIN SMALL LETTER N WITH LEFT HOOK
00273	LATIN SMALL LETTER N WITH RETROFLEX HOOK
00274	LATIN LETTER SMALL CAPITAL N
00275	LATIN SMALL LETTER BARRED O
00276	LATIN LETTER SMALL CAPITAL OE
00277	LATIN SMALL LETTER CLOSED OMEGA
00278	LATIN SMALL LETTER PHI
00279	LATIN SMALL LETTER TURNED R
0027A	LATIN SMALL LETTER TURNED R WITH LONG LEG
0027B	LATIN SMALL LETTER TURNED R WITH HOOK
0027C	LATIN SMALL LETTER R WITH LONG LEG
0027D	LATIN SMALL LETTER R WITH TAIL
0027E	LATIN SMALL LETTER R WITH FISHHOOK
0027F	LATIN SMALL LETTER REVERSED R WITH FISHHOOK
00280	LATIN LETTER SMALL CAPITAL R
00281	LATIN LETTER SMALL CAPITAL INVERTED R
00282	LATIN SMALL LETTER S WITH HOOK
00283	LATIN SMALL LETTER ESH
00284	LATIN SMALL LETTER DOTLESS J WITH STROKE AND HOOK
00285	LATIN SMALL LETTER SQUAT REVERSED ESH
00286	LATIN SMALL LETTER ESH WITH CURL
00287	LATIN SMALL LETTER TURNED T
00288	LATIN SMALL LETTER T WITH RETROFLEX HOOK
00289	LATIN SMALL LETTER U BAR
0028A	LATIN SMALL LETTER UPSILON
0028B	LATIN SMALL LETTER V WITH HOOK
0028C	LATIN SMALL LETTER TURNED V
0028D	LATIN SMALL LETTER TURNED W
0028E	LATIN SMALL LETTER TURNED Y
0028F	LATIN LETTER SMALL CAPITAL Y
00290	LATIN SMALL LETTER Z WITH RETROFLEX HOOK
00291	LATIN SMALL LETTER Z WITH CURL
00292	LATIN SMALL LETTER EZH
00293	LATIN SMALL LETTER EZH WITH CURL
00294	LATIN LETTER GLOTTAL STOP
00295	LATIN LETTER PHARYNGEAL VOICED FRICATIVE
00296	LATIN LETTER INVERTED GLOTTAL STOP
00297	LATIN LETTER STRETCHED C
00298	LATIN LETTER BILABIAL CLICK
00299	LATIN LETTER SMALL CAPITAL B
0029A	LATIN SMALL LETTER CLOSED OPEN E
0029B	LATIN LETTER SMALL CAPITAL G WITH HOOK
0029C	LATIN LETTER SMALL CAPITAL H
0029D	LATIN SMALL LETTER J WITH CROSSED-TAIL
0029E	LATIN SMALL LETTER TURNED K
0029F	LATIN LETTER SMALL CAPITAL L
002A0	LATIN SMALL LETTER Q WITH HOOK
002A1	LATIN LETTER GLOTTAL STOP WITH STROKE
002A2	LATIN LETTER REVERSED GLOTTAL STOP WITH STROKE
002A3	LATIN SMALL LETTER DZ DIGRAPH
002A4	LATIN SMALL LETTER DEZH DIGRAPH
002A5	LATIN SMALL LETTER DZ DIGRAPH WITH CURL
002A6	LATIN SMALL LETTER TS DIGRAPH
002A7	LATIN SMALL LETTER TESH DIGRAPH
002A8	LATIN SMALL LETTER TC DIGRAPH WITH CURL
002A9	LATIN SMALL LETTER FENG DIGRAPH
002AA	LATIN SMALL LETTER LS DIGRAPH
002AB	LATIN SMALL LETTER LZ DIGRAPH
002AC	LATIN LETTER BILABIAL PERCUSSIVE
002AD	LATIN LETTER BIDENTAL PERCUSSIVE
002AE	LATIN SMALL LETTER TURNED H WITH FISHHOOK
002AF	LATIN SMALL LETTER TURNED H WITH FISHHOOK AND TAIL
002B0	MODIFIER LETTER SMALL H
002B1	MODIFIER LETTER SMALL H WITH HOOK
002B2	MODIFIER LETTER SMALL J
002B3	MODIFIER LETTER SMALL R
002B4	MODIFIER LETTER SMALL TURNED R
002B5	MODIFIER LETTER SMALL TURNED R WITH HOOK
002B6	MODIFIER LETTER SMALL CAPITAL INVERTED R
002B7	MODIFIER LETTER SMALL W
002B8	MODIFIER LETTER SMALL Y
002B9	MODIFIER LETTER PRIME
002BA	MODIFIER LETTER DOUBLE PRIME
002BB	MODIFIER LETTER TURNED COMMA
002BC	MODIFIER LETTER APOSTROPHE
002BD	MODIFIER LETTER REVERSED COMMA
002BE	MODIFIER LETTER RIGHT HALF RING
002BF	MODIFIER LETTER LEFT HALF RING
002C0	MODIFIER LETTER GLOTTAL STOP
002C1	MODIFIER LETTER REVERSED GLOTTAL STOP
002C2	MODIFIER LETTER LEFT ARROWHEAD
002C3	MODIFIER LETTER RIGHT ARROWHEAD
002C4	MODIFIER LETTER UP ARROWHEAD
002C5	MODIFIER LETTER DOWN ARROWHEAD
002C6	MODIFIER LETTER CIRCUMFLEX ACCENT
002C7	CARON
002C8	MODIFIER LETTER VERTICAL LINE
002C9	MODIFIER LETTER MACRON
002CA	MODIFIER LETTER ACUTE ACCENT
002CB	MODIFIER LETTER GRAVE ACCENT
002CC	MODIFIER LETTER LOW VERTICAL LINE
002CD	MODIFIER LETTER LOW MACRON
002CE	MODIFIER LETTER LOW GRAVE ACCENT
002CF	MODIFIER LETTER LOW ACUTE ACCENT
002D0	MODIFIER LETTER TRIANGULAR COLON
002D1	MODIFIER LETTER HALF TRIANGULAR COLON
002D2	MODIFIER LETTER CENTRED RIGHT HALF RING
002D3	MODIFIER LETTER CENTRED LEFT HALF RING
002D4	MODIFIER LETTER UP TACK
002D5	MODIFIER LETTER DOWN TACK
002D6	MODIFIER LETTER PLUS SIGN
002D7	MODIFIER LETTER MINUS SIGN
002D8	BREVE
002D9	DOT ABOVE
002DA	RING ABOVE
002DB	OGONEK
002DC	SMALL TILDE
002DD	DOUBLE ACUTE ACCENT
002DE	MODIFIER LETTER RHOTIC HOOK
002DF	MODIFIER LETTER CROSS ACCENT
002E0	MODIFIER LETTER SMALL GAMMA
002E1	MODIFIER LETTER SMALL L
002E2	MODIFIER LETTER SMALL S
002E3	MODIFIER LETTER SMALL X
002E4	MODIFIER LETTER SMALL REVERSED GLOTTAL STOP
002E5	MODIFIER LETTER EXTRA-HIGH TONE BAR
002E6	MODIFIER LETTER HIGH TONE BAR
002E7	MODIFIER LETTER MID TONE BAR
002E8	MODIFIER LETTER LOW TONE BAR
002E9	MODIFIER LETTER EXTRA-LOW TONE BAR
002EA	MODIFIER LETTER YIN DEPARTING TONE MARK
002EB	MODIFIER LETTER YANG DEPARTING TONE MARK
002EC	MODIFIER LETTER VOICING
002ED	MODIFIER LETTER UNASPIRATED
002EE	MODIFIER LETTER DOUBLE APOSTROPHE
002EF	MODIFIER LETTER LOW DOWN ARROWHEAD
002F0	MODIFIER LETTER LOW UP ARROWHEAD
002F1	MODIFIER LETTER LOW LEFT ARROWHEAD
002F2	MODIFIER LETTER LOW RIGHT ARROWHEAD
002F3	MODIFIER LETTER LOW RING
002F4	MODIFIER LETTER MIDDLE GRAVE ACCENT
002F5	MODIFIER LETTER MIDDLE DOUBLE GRAVE ACCENT
002F6	MODIFIER LETTER MIDDLE DOUBLE ACUTE ACCENT
002F7	MODIFIER LETTER LOW TILDE
002F8	MODIFIER LETTER RAISED COLON
002F9	MODIFIER LETTER BEGIN HIGH TONE
002FA	MODIFIER LETTER END HIGH TONE
002FB	MODIFIER LETTER BEGIN LOW TONE
002FC	MODIFIER LETTER END LOW TONE
002FD	MODIFIER LETTER SHELF
002FE	MODIFIER LETTER OPEN SHELF
002FF	MODIFIER LETTER LOW LEFT ARROW
00300	COMBINING GRAVE ACCENT
00301	COMBINING ACUTE ACCENT
00302	COMBINING CIRCUMFLEX ACCENT
00303	COMBINING TILDE
00304	COMBINING MACRON
00305	COMBINING OVERLINE
00306	COMBINING BREVE
00307	COMBINING DOT ABOVE
00308	COMBINING DIAERESIS
00309	COMBINING HOOK ABOVE
0030A	COMBINING RING ABOVE
0030B	COMBINING DOUBLE ACUTE ACCENT
0030C	COMBINING CARON
0030D	COMBINING VERTICAL LINE ABOVE
0030E	COMBINING DOUBLE VERTICAL LINE ABOVE
0030F	COMBINING DOUBLE GRAVE ACCENT
00310	COMBINING CANDRABINDU
00311	COMBINING INVERTED BREVE
00312	COMBINING TURNED COMMA ABOVE
00313	COMBINING COMMA ABOVE
00314	COMBINING REVERSED COMMA ABOVE
00315	COMBINING COMMA ABOVE RIGHT
00316	COMBINING GRAVE ACCENT BELOW
00317	COMBINING ACUTE ACCENT BELOW
00318	COMBINING LEFT TACK BELOW
00319	COMBINING RIGHT TACK BELOW
0031A	COMBINING LEFT ANGLE ABOVE
0031B	COMBINING HORN
0031C	COMBINING LEFT HALF RING BELOW
0031D	COMBINING UP TACK BELOW
0031E	COMBINING DOWN TACK BELOW
0031F	COMBINING PLUS SIGN BELOW
00320	COMBINING MINUS SIGN BELOW
00321	COMBINING PALATALIZED HOOK BELOW
00322	COMBINING RETROFLEX HOOK BELOW
00323	COMBINING DOT BELOW
00324	COMBINING DIAERESIS BELOW
00325	COMBINING RING BELOW
00326	COMBINING COMMA BELOW
00327	COMBINING CEDILLA
00328	COMBINING OGONEK
00329	COMBINING VERTICAL LINE BELOW
0032A	COMBINING BRIDGE BELOW
0032B	COMBINING INVERTED DOUBLE ARCH BELOW
0032C	COMBINING CARON BELOW
0032D	COMBINING CIRCUMFLEX ACCENT BELOW
0032E	COMBINING BREVE BELOW
0032F	COMBINING INVERTED BREVE BELOW
00330	COMBINING TILDE BELOW
00331	COMBINING MACRON BELOW
00332	COMBINING LOW LINE
00333	COMBINING DOUBLE LOW LINE
00334	COMBINING TILDE OVERLAY
00335	COMBINING SHORT STROKE OVERLAY
00336	COMBINING LONG STROKE OVERLAY
00337	COMBINING SHORT SOLIDUS OVERLAY
00338	COMBINING LONG SOLIDUS OVERLAY
00339	COMBINING RIGHT HALF RING BELOW
0033A	COMBINING INVERTED BRIDGE BELOW
0033B	COMBINING SQUARE BELOW
0033C	COMBINING SEAGULL BELOW
0033D	COMBINING X ABOVE
0033E	COMBINING VERTICAL TILDE
0033F	COMBINING DOUBLE OVERLINE
00340	COMBINING GRAVE TONE MARK
00341	COMBINING ACUTE TONE MARK
00342	COMBINING GREEK PERISPOMENI
00343	COMBINING GREEK KORONIS
00344	COMBINING GREEK DIALYTIKA TONOS
00345	COMBINING GREEK YPOGEGRAMMENI
00346	COMBINING BRIDGE ABOVE
00347	COMBINING EQUALS SIGN BELOW
00348	COMBINING DOUBLE VERTICAL LINE BELOW
00349	COMBINING LEFT ANGLE BELOW
0034A	COMBINING NOT TILDE ABOVE
0034B	COMBINING HOMOTHETIC ABOVE
0034C	COMBINING ALMOST EQUAL TO ABOVE
0034D	COMBINING LEFT RIGHT ARROW BELOW
0034E	COMBINING UPWARDS ARROW BELOW
0034F	COMBINING GRAPHEME JOINER
0034F	CGJ
00350	COMBINING RIGHT ARROWHEAD ABOVE
00351	COMBINING LEFT HALF RING ABOVE
00352	COMBINING FERMATA
00353	COMBINING X BELOW
00354	COMBINING LEFT ARROWHEAD BELOW
00355	COMBINING RIGHT ARROWHEAD BELOW
00356	COMBINING RIGHT ARROWHEAD AND UP ARROWHEAD BELOW
00357	COMBINING RIGHT HALF RING ABOVE
00358	COMBINING DOT ABOVE RIGHT
00359	COMBINING ASTERISK BELOW
0035A	COMBINING DOUBLE RING BELOW
0035B	COMBINING ZIGZAG ABOVE
0035C	COMBINING DOUBLE BREVE BELOW
0035D	COMBINING DOUBLE BREVE
0035E	COMBINING DOUBLE MACRON
0035F	COMBINING DOUBLE MACRON BELOW
00360	COMBINING DOUBLE TILDE
00361	COMBINING DOUBLE INVERTED BREVE
00362	COMBINING DOUBLE RIGHTWARDS ARROW BELOW
00363	COMBINING LATIN SMALL LETTER A
00364	COMBINING LATIN SMALL LETTER E
00365	COMBINING LATIN SMALL LETTER I
00366	COMBINING LATIN SMALL LETTER O
00367	COMBINING LATIN SMALL LETTER U
00368	COMBINING LATIN SMALL LETTER C
00369	COMBINING LATIN SMALL LETTER D
0036A	COMBINING LATIN SMALL LETTER H
0036B	COMBINING LATIN SMALL LETTER M
0036C	COMBINING LATIN SMALL LETTER R
0036D	COMBINING LATIN SMALL LETTER T
0036E	COMBINING LATIN SMALL LETTER V
0036F	COMBINING LATIN SMALL LETTER X
00370	GREEK CAPITAL LETTER HETA
00371	GREEK SMALL LETTER HETA
00372	GREEK CAPITAL LETTER ARCHAIC SAMPI
00373	GREEK SMALL LETTER ARCHAIC SAMPI
00374	GREEK NUMERAL SIGN
00375	GREEK LOWER NUMERAL SIGN
00376	GREEK CAPITAL LETTER PAMPHYLIAN DIGAMMA
00377	GREEK SMALL LETTER PAMPHYLIAN DIGAMMA
0037A	GREEK YPOGEGRAMMENI
0037B	GREEK SMALL REVERSED LUNATE SIGMA SYMBOL
0037C	GREEK SMALL DOTTED LUNATE SIGMA SYMBOL
0037D	GREEK SMALL REVERSED DOTTED LUNATE SIGMA SYMBOL
0037E	GREEK QUESTION MARK
0037F	GREEK CAPITAL LETTER YOT
00384	GREEK TONOS
00385	GREEK DIALYTIKA TONOS
00386	GREEK CAPITAL LETTER ALPHA WITH TONOS
00387	GREEK ANO TELEIA
00388	GREEK CAPITAL LETTER EPSILON WITH TONOS
00389	GREEK CAPITAL LETTER ETA WITH TONOS
0038A	GREEK CAPITAL LETTER IOTA WITH TONOS
0038C	GREEK CAPITAL LETTER OMICRON WITH TONOS
0038E	GREEK CAPITAL LETTER UPSILON WITH TONOS
0038F	GREEK CAPITAL LETTER OMEGA WITH TONOS
00390	GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS
00391	GREEK CAPITAL LETTER ALPHA
00392	GREEK CAPITAL LETTER BETA
00393	GREEK CAPITAL LETTER GAMMA
00394	GREEK CAPITAL LETTER DELTA
00395	GREEK CAPITAL LETTER EPSILON
00396	GREEK CAPITAL LETTER ZETA
00397	GREEK CAPITAL LETTER ETA
00398	GREEK CAPITAL LETTER THETA
00399	GREEK CAPITAL LETTER IOTA
0039A	GREEK CAPITAL LETTER KAPPA
0039B	GREEK CAPITAL LETTER LAMDA
0039C	GREEK CAPITAL LETTER MU
0039D	GREEK CAPITAL LETTER NU
0039E	GREEK CAPITAL LETTER XI
0039F	GREEK CAPITAL LETTER OMICRON
003A0	GREEK CAPITAL LETTER PI
003A1	GREEK CAPITAL LETTER RHO
003A3	GREEK CAPITAL LETTER SIGMA
003A4	GREEK CAPITAL LETTER TAU
003A5	GREEK CAPITAL LETTER UPSILON
003A6	GREEK CAPITAL LETTER PHI
003A7	GREEK CAPITAL LETTER CHI
003A8	GREEK CAPITAL LETTER PSI
003A9	GREEK CAPITAL LETTER OMEGA
003AA	GREEK CAPITAL LETTER IOTA WITH DIALYTIKA
003AB	GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA
003AC	GREEK SMALL LETTER ALPHA WITH TONOS
003AD	GREEK SMALL LETTER EPSILON WITH TONOS
003AE	GREEK SMALL LETTER ETA WITH TONOS
003AF	GREEK SMALL LETTER IOTA WITH TONOS
003B0	GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS
003B1	GREEK SMALL LETTER ALPHA
003B2	GREEK SMALL LETTER BETA
003B3	GREEK SMALL LETTER GAMMA
003B4	GREEK SMALL LETTER DELTA
003B5	GREEK SMALL LETTER EPSILON
003B6	GREEK SMALL LETTER ZETA
003B7	GREEK SMALL LETTER ETA
003B8	GREEK SMALL LETTER THETA
003B9	GREEK SMALL LETTER IOTA
003BA	GREEK SMALL LETTER KAPPA
003BB	GREEK SMALL LETTER LAMDA
003BC	GREEK SMALL LETTER MU
003BD	GREEK SMALL LETTER NU
003BE	GREEK SMALL LETTER XI
003BF	GREEK SMALL LETTER OMICRON
003C0	GREEK SMALL LETTER PI
003C1	GREEK SMALL LETTER RHO
003C2	GREEK SMALL LETTER FINAL SIGMA
003C3	GREEK SMALL LETTER SIGMA
003C4	GREEK SMALL LETTER TAU
003C5	GREEK SMALL LETTER UPSILON
003C6	GREEK SMALL LETTER PHI
003C7	GREEK SMALL LETTER CHI
003C8	GREEK SMALL LETTER PSI
003C9	GREEK SMALL LETTER OMEGA
003CA	GREEK SMALL LETTER IOTA WITH DIALYTIKA
003CB	GREEK SMALL LETTER UPSILON WITH DIALYTIKA
003CC	GREEK SMALL LETTER OMICRON WITH TONOS
003CD	GREEK SMALL LETTER UPSILON WITH TONOS
003CE	GREEK SMALL LETTER OMEGA WITH TONOS
003CF	GREEK CAPITAL KAI SYMBOL
003D0	GREEK BETA SYMBOL
003D1	GREEK THETA SYMBOL
003D2	GREEK UPSILON WITH HOOK SYMBOL
003D3	GREEK UPSILON WITH ACUTE AND HOOK SYMBOL
003D4	GREEK UPSILON WITH DIAERESIS AND HOOK SYMBOL
003D5	GREEK PHI SYMBOL
003D6	GREEK PI SYMBOL
003D7	GREEK KAI SYMBOL
003D8	GREEK LETTER ARCHAIC KOPPA
003D9	GREEK SMALL LETTER ARCHAIC KOPPA
003DA	GREEK LETTER STIGMA
003DB	GREEK SMALL LETTER STIGMA
003DC	GREEK LETTER DIGAMMA
003DD	GREEK SMALL LETTER DIGAMMA
003DE	GREEK LETTER KOPPA
003DF	GREEK SMALL LETTER KOPPA
003E0	GREEK LETTER SAMPI
003E1	GREEK SMALL LETTER SAMPI
003E2	COPTIC CAPITAL LETTER SHEI
003E3	COPTIC SMALL LETTER SHEI
003E4	COPTIC CAPITAL LETTER FEI
003E5	COPTIC SMALL LETTER FEI
003E6	COPTIC CAPITAL LETTER KHEI
003E7	COPTIC SMALL LETTER KHEI
003E8	COPTIC CAPITAL LETTER HORI
003E9	COPTIC SMALL LETTER HORI
003EA	COPTIC CAPITAL LETTER GANGIA
003EB	COPTIC SMALL LETTER GANGIA
003EC	COPTIC CAPITAL LETTER SHIMA
003ED	COPTIC SMALL LETTER SHIMA
003EE	COPTIC CAPITAL LETTER DEI
003EF	COPTIC SMALL LETTER DEI
003F0	GREEK KAPPA SYMBOL
003F1	GREEK RHO SYMBOL
003F2	GREEK LUNATE SIGMA SYMBOL
003F3	GREEK LETTER YOT
003F4	GREEK CAPITAL THETA SYMBOL
003F5	GREEK LUNATE EPSILON SYMBOL
003F6	GREEK REVERSED LUNATE EPSILON SYMBOL
003F7	GREEK CAPITAL LETTER SHO
003F8	GREEK SMALL LETTER SHO
003F9	GREEK CAPITAL LUNATE SIGMA SYMBOL
003FA	GREEK CAPITAL LETTER SAN
003FB	GREEK SMALL LETTER SAN
003FC	GREEK RHO WITH STROKE SYMBOL
003FD	GREEK CAPITAL REVERSED LUNATE SIGMA SYMBOL
003FE	GREEK CAPITAL DOTTED LUNATE SIGMA SYMBOL
003FF	GREEK CAPITAL REVERSED DOTTED LUNATE SIGMA SYMBOL
00400	CYRILLIC CAPITAL LETTER IE WITH GRAVE
00401	CYRILLIC CAPITAL LETTER IO
00402	CYRILLIC CAPITAL LETTER DJE
00403	CYRILLIC CAPITAL LETTER GJE
00404	CYRILLIC CAPITAL LETTER UKRAINIAN IE
00405	CYRILLIC CAPITAL LETTER DZE
00406	CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I
00407	CYRILLIC CAPITAL LETTER YI
00408	CYRILLIC CAPITAL LETTER JE
00409	CYRILLIC CAPITAL LETTER LJE
0040A	CYRILLIC CAPITAL LETTER NJE
0040B	CYRILLIC CAPITAL LETTER TSHE
0040C	CYRILLIC CAPITAL LETTER KJE
0040D	CYRILLIC CAPITAL LETTER I WITH GRAVE
0040E	CYRILLIC CAPITAL LETTER SHORT U
0040F	CYRILLIC CAPITAL LETTER DZHE
00410	CYRILLIC CAPITAL LETTER A
00411	CYRILLIC CAPITAL LETTER BE
00412	CYRILLIC CAPITAL LETTER VE
00413	CYRILLIC CAPITAL LETTER GHE
00414	CYRILLIC CAPITAL LETTER DE
00415	CYRILLIC CAPITAL LETTER IE
00416	CYRILLIC CAPITAL LETTER ZHE
00417	CYRILLIC CAPITAL LETTER ZE
00418	CYRILLIC CAPITAL LETTER I
00419	CYRILLIC CAPITAL LETTER SHORT I
0041A	CYRILLIC CAPITAL LETTER KA
0041B	CYRILLIC CAPITAL LETTER EL
0041C	CYRILLIC CAPITAL LETTER EM
0041D	CYRILLIC CAPITAL LETTER EN
0041E	CYRILLIC CAPITAL LETTER O
0041F	CYRILLIC CAPITAL LETTER PE
00420	CYRILLIC CAPITAL LETTER ER
00421	CYRILLIC CAPITAL LETTER ES
00422	CYRILLIC CAPITAL LETTER TE
00423	CYRILLIC CAPITAL LETTER U
00424	CYRILLIC CAPITAL LETTER EF
00425	CYRILLIC CAPITAL LETTER HA
00426	CYRILLIC CAPITAL LETTER TSE
00427	CYRILLIC CAPITAL LETTER CHE
00428	CYRILLIC CAPITAL LETTER SHA
00429	CYRILLIC CAPITAL LETTER SHCHA
0042A	CYRILLIC CAPITAL LETTER HARD SIGN
0042B	CYRILLIC CAPITAL LETTER YERU
0042C	CYRILLIC CAPITAL LETTER SOFT SIGN
0042D	CYRILLIC CAPITAL LETTER E
0042E	CYRILLIC CAPITAL LETTER YU
0042F	CYRILLIC CAPITAL LETTER YA
00430	CYRILLIC SMALL LETTER A
00431	CYRILLIC SMALL LETTER BE
00432	CYRILLIC SMALL LETTER VE
00433	CYRILLIC SMALL LETTER GHE
00434	CYRILLIC SMALL LETTER DE
00435	CYRILLIC SMALL LETTER IE
00436	CYRILLIC SMALL LETTER ZHE
00437	CYRILLIC SMALL LETTER ZE
00438	CYRILLIC SMALL LETTER I
00439	CYRILLIC SMALL LETTER SHORT I
0043A	CYRILLIC SMALL LETTER KA
0043B	CYRILLIC SMALL LETTER EL
0043C	CYRILLIC SMALL LETTER EM
0043D	CYRILLIC SMALL LETTER EN
0043E	CYRILLIC SMALL LETTER O
0043F	CYRILLIC SMALL LETTER PE
00440	CYRILLIC SMALL LETTER ER
00441	CYRILLIC SMALL LETTER ES
00442	CYRILLIC SMALL LETTER TE
00443	CYRILLIC SMALL LETTER U
00444	CYRILLIC SMALL LETTER EF
00445	CYRILLIC SMALL LETTER HA
00446	CYRILLIC SMALL LETTER TSE
00447	CYRILLIC SMALL LETTER CHE
00448	CYRILLIC SMALL LETTER SHA
00449	CYRILLIC SMALL LETTER SHCHA
0044A	CYRILLIC SMALL LETTER HARD SIGN
0044B	CYRILLIC SMALL LETTER YERU
0044C	CYRILLIC SMALL LETTER SOFT SIGN
0044D	CYRILLIC SMALL LETTER E
0044E	CYRILLIC SMALL LETTER YU
0044F	CYRILLIC SMALL LETTER YA
00450	CYRILLIC SMALL LETTER IE WITH GRAVE
00451	CYRILLIC SMALL LETTER IO
00452	CYRILLIC SMALL LETTER DJE
00453	CYRILLIC SMALL LETTER GJE
00454	CYRILLIC SMALL LETTER UKRAINIAN IE
00455	CYRILLIC SMALL LETTER DZE
00456	CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I
00457	CYRILLIC SMALL LETTER YI
00458	CYRILLIC SMALL LETTER JE
00459	CYRILLIC SMALL LETTER LJE
0045A	CYRILLIC SMALL LETTER NJE
0045B	CYRILLIC SMALL LETTER TSHE
0045C	CYRILLIC SMALL LETTER KJE
0045D	CYRILLIC SMALL LETTER I WITH GRAVE
0045E	CYRILLIC SMALL LETTER SHORT U
0045F	CYRILLIC SMALL LETTER DZHE
00460	CYRILLIC CAPITAL LETTER OMEGA
00461	CYRILLIC SMALL LETTER OMEGA
00462	CYRILLIC CAPITAL LETTER YAT
00463	CYRILLIC SMALL LETTER YAT
00464	CYRILLIC CAPITAL LETTER IOTIFIED E
00465	CYRILLIC SMALL LETTER IOTIFIED E
00466	CYRILLIC CAPITAL LETTER LITTLE YUS
00467	CYRILLIC SMALL LETTER LITTLE YUS
00468	CYRILLIC CAPITAL LETTER IOTIFIED LITTLE YUS
00469	CYRILLIC SMALL LETTER IOTIFIED LITTLE YUS
0046A	CYRILLIC CAPITAL LETTER BIG YUS
0046B	CYRILLIC SMALL LETTER BIG YUS
0046C	CYRILLIC CAPITAL LETTER IOTIFIED BIG YUS
0046D	CYRILLIC SMALL LETTER IOTIFIED BIG YUS
0046E	CYRILLIC CAPITAL LETTER KSI
0046F	CYRILLIC SMALL LETTER KSI
00470	CYRILLIC CAPITAL LETTER PSI
00471	CYRILLIC SMALL LETTER PSI
00472	CYRILLIC CAPITAL LETTER FITA
00473	CYRILLIC SMALL LETTER FITA
00474	CYRILLIC CAPITAL LETTER IZHITSA
00475	CYRILLIC SMALL LETTER IZHITSA
00476	CYRILLIC CAPITAL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT
00477	CYRILLIC SMALL LETTER IZHITSA WITH DOUBLE GRAVE ACCENT
00478	CYRILLIC CAPITAL LETTER UK
00479	CYRILLIC SMALL LETTER UK
0047A	CYRILLIC CAPITAL LETTER ROUND OMEGA
0047B	CYRILLIC SMALL LETTER ROUND OMEGA
0047C	CYRILLIC CAPITAL LETTER OMEGA WITH TITLO
0047D	CYRILLIC SMALL LETTER OMEGA WITH TITLO
0047E	CYRILLIC CAPITAL LETTER OT
0047F	CYRILLIC SMALL LETTER OT
00480	CYRILLIC CAPITAL LETTER KOPPA
00481	CYRILLIC SMALL LETTER KOPPA
00482	CYRILLIC THOUSANDS SIGN
00483	COMBINING CYRILLIC TITLO
00484	COMBINING CYRILLIC PALATALIZATION
00485	COMBINING CYRILLIC DASIA PNEUMATA
00486	COMBINING CYRILLIC PSILI PNEUMATA
00487	COMBINING CYRILLIC POKRYTIE
00488	COMBINING CYRILLIC HUNDRED THOUSANDS SIGN
00489	COMBINING CYRILLIC MILLIONS SIGN
0048A	CYRILLIC CAPITAL LETTER SHORT I WITH TAIL
0048B	CYRILLIC SMALL LETTER SHORT I WITH TAIL
0048C	CYRILLIC CAPITAL LETTER SEMISOFT SIGN
0048D	CYRILLIC SMALL LETTER SEMISOFT SIGN
0048E	CYRILLIC CAPITAL LETTER ER WITH TICK
0048F	CYRILLIC SMALL LETTER ER WITH TICK
00490	CYRILLIC CAPITAL LETTER GHE WITH UPTURN
00491	CYRILLIC SMALL LETTER GHE WITH UPTURN
00492	CYRILLIC CAPITAL LETTER GHE WITH STROKE
00493	CYRILLIC SMALL LETTER GHE WITH STROKE
00494	CYRILLIC CAPITAL LETTER GHE WITH MIDDLE HOOK
00495	CYRILLIC SMALL LETTER GHE WITH MIDDLE HOOK
00496	CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER
00497	CYRILLIC SMALL LETTER ZHE WITH DESCENDER
00498	CYRILLIC CAPITAL LETTER ZE WITH DESCENDER
00499	CYRILLIC SMALL LETTER ZE WITH DESCENDER
0049A	CYRILLIC CAPITAL LETTER KA WITH DESCENDER
0049B	CYRILLIC SMALL LETTER KA WITH DESCENDER
0049C	CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE
0049D	CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE
0049E	CYRILLIC CAPITAL LETTER KA WITH STROKE
0049F	CYRILLIC SMALL LETTER KA WITH STROKE
004A0	CYRILLIC CAPITAL LETTER BASHKIR KA
004A1	CYRILLIC SMALL LETTER BASHKIR KA
004A2	CYRILLIC CAPITAL LETTER EN WITH DESCENDER
004A3	CYRILLIC SMALL LETTER EN WITH DESCENDER
004A4	CYRILLIC CAPITAL LIGATURE EN GHE
004A5	CYRILLIC SMALL LIGATURE EN GHE
004A6	CYRILLIC CAPITAL LETTER PE WITH MIDDLE HOOK
004A7	CYRILLIC SMALL LETTER PE WITH MIDDLE HOOK
004A8	CYRILLIC CAPITAL LETTER ABKHASIAN HA
004A9	CYRILLIC SMALL LETTER ABKHASIAN HA
004AA	CYRILLIC CAPITAL LETTER ES WITH DESCENDER
004AB	CYRILLIC SMALL LETTER ES WITH DESCENDER
004AC	CYRILLIC CAPITAL LETTER TE WITH DESCENDER
004AD	CYRILLIC SMALL LETTER TE WITH DESCENDER
004AE	CYRILLIC CAPITAL LETTER STRAIGHT U
004AF	CYRILLIC SMALL LETTER STRAIGHT U
004B0	CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE
004B1	CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE
004B2	CYRILLIC CAPITAL LETTER HA WITH DESCENDER
004B3	CYRILLIC SMALL LETTER HA WITH DESCENDER
004B4	CYRILLIC CAPITAL LIGATURE TE TSE
004B5	CYRILLIC SMALL LIGATURE TE TSE
004B6	CYRILLIC CAPITAL LETTER CHE WITH DESCENDER
004B7	CYRILLIC SMALL LETTER CHE WITH DESCENDER
004B8	CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE
004B9	CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE
004BA	CYRILLIC CAPITAL LETTER SHHA
004BB	CYRILLIC SMALL LETTER SHHA
004BC	CYRILLIC CAPITAL LETTER ABKHASIAN CHE
004BD	CYRILLIC SMALL LETTER ABKHASIAN CHE
004BE	CYRILLIC CAPITAL LETTER ABKHASIAN CHE WITH DESCENDER
004BF	CYRILLIC SMALL LETTER ABKHASIAN CHE WITH DESCENDER
004C0	CYRILLIC LETTER PALOCHKA
004C1	CYRILLIC CAPITAL LETTER ZHE WITH BREVE
004C2	CYRILLIC SMALL LETTER ZHE WITH BREVE
004C3	CYRILLIC CAPITAL LETTER KA WITH HOOK
004C4	CYRILLIC SMALL LETTER KA WITH HOOK
004C5	CYRILLIC CAPITAL LETTER EL WITH TAIL
004C6	CYRILLIC SMALL LETTER EL WITH TAIL
004C7	CYRILLIC CAPITAL LETTER EN WITH HOOK
004C8	CYRILLIC SMALL LETTER EN WITH HOOK
004C9	CYRILLIC CAPITAL LETTER EN WITH TAIL
004CA	CYRILLIC SMALL LETTER EN WITH TAIL
004CB	CYRILLIC CAPITAL LETTER KHAKASSIAN CHE
004CC	CYRILLIC SMALL LETTER KHAKASSIAN CHE
004CD	CYRILLIC CAPITAL LETTER EM WITH TAIL
004CE	CYRILLIC SMALL LETTER EM WITH TAIL
004CF	CYRILLIC SMALL LETTER PALOCHKA
004D0	CYRILLIC CAPITAL LETTER A WITH BREVE
004D1	CYRILLIC SMALL LETTER A WITH BREVE
004D2	CYRILLIC CAPITAL LETTER A WITH DIAERESIS
004D3	CYRILLIC SMALL LETTER A WITH DIAERESIS
004D4	CYRILLIC CAPITAL LIGATURE A IE
004D5	CYRILLIC SMALL LIGATURE A IE
004D6	CYRILLIC CAPITAL LETTER IE WITH BREVE
004D7	CYRILLIC SMALL LETTER IE WITH BREVE
004D8	CYRILLIC CAPITAL LETTER SCHWA
004D9	CYRILLIC SMALL LETTER SCHWA
004DA	CYRILLIC CAPITAL LETTER SCHWA WITH DIAERESIS
004DB	CYRILLIC SMALL LETTER SCHWA WITH DIAERESIS
004DC	CYRILLIC CAPITAL LETTER ZHE WITH DIAERESIS
004DD	CYRILLIC SMALL LETTER ZHE WITH DIAERESIS
004DE	CYRILLIC CAPITAL LETTER ZE WITH DIAERESIS
004DF	CYRILLIC SMALL LETTER ZE WITH DIAERESIS
004E0	CYRILLIC CAPITAL LETTER ABKHASIAN DZE
004E1	CYRILLIC SMALL LETTER ABKHASIAN DZE
004E2	CYRILLIC CAPITAL LETTER I WITH MACRON
004E3	CYRILLIC SMALL LETTER I WITH MACRON
004E4	CYRILLIC CAPITAL LETTER I WITH DIAERESIS
004E5	CYRILLIC SMALL LETTER I WITH DIAERESIS
004E6	CYRILLIC CAPITAL LETTER O WITH DIAERESIS
004E7	CYRILLIC SMALL LETTER O WITH DIAERESIS
004E8	CYRILLIC CAPITAL LETTER BARRED O
004E9	CYRILLIC SMALL LETTER BARRED O
004EA	CYRILLIC CAPITAL LETTER BARRED O WITH DIAERESIS
004EB	CYRILLIC SMALL LETTER BARRED O WITH DIAERESIS
004EC	CYRILLIC CAPITAL LETTER E WITH DIAERESIS
004ED	CYRILLIC SMALL LETTER E WITH DIAERESIS
004EE	CYRILLIC CAPITAL LETTER U WITH MACRON
004EF	CYRILLIC SMALL LETTER U WITH MACRON
004F0	CYRILLIC CAPITAL LETTER U WITH DIAERESIS
004F1	CYRILLIC SMALL LETTER U WITH DIAERESIS
004F2	CYRILLIC CAPITAL LETTER U WITH DOUBLE ACUTE
004F3	CYRILLIC SMALL LETTER U WITH DOUBLE ACUTE
004F4	CYRILLIC CAPITAL LETTER CHE WITH DIAERESIS
004F5	CYRILLIC SMALL LETTER CHE WITH DIAERESIS
004F6	CYRILLIC CAPITAL LETTER GHE WITH DESCENDER
004F7	CYRILLIC SMALL LETTER GHE WITH DESCENDER
004F8	CYRILLIC CAPITAL LETTER YERU WITH DIAERESIS
004F9	CYRILLIC SMALL LETTER YERU WITH DIAERESIS
004FA	CYRILLIC CAPITAL LETTER GHE WITH STROKE AND HOOK
004FB	CYRILLIC SMALL LETTER GHE WITH STROKE AND HOOK
004FC	CYRILLIC CAPITAL LETTER HA WITH HOOK
004FD	CYRILLIC SMALL LETTER HA WITH HOOK
004FE	CYRILLIC CAPITAL LETTER HA WITH STROKE
004FF	CYRILLIC SMALL LETTER HA WITH STROKE
00500	CYRILLIC CAPITAL LETTER KOMI DE
00501	CYRILLIC SMALL LETTER KOMI DE
00502	CYRILLIC CAPITAL LETTER KOMI DJE
00503	CYRILLIC SMALL LETTER KOMI DJE
00504	CYRILLIC CAPITAL LETTER KOMI ZJE
00505	CYRILLIC SMALL LETTER KOMI ZJE
00506	CYRILLIC CAPITAL LETTER KOMI DZJE
00507	CYRILLIC SMALL LETTER KOMI DZJE
00508	CYRILLIC CAPITAL LETTER KOMI LJE
00509	CYRILLIC SMALL LETTER KOMI LJE
0050A	CYRILLIC CAPITAL LETTER KOMI NJE
0050B	CYRILLIC SMALL LETTER KOMI NJE
0050C	CYRILLIC CAPITAL LETTER KOMI SJE
0050D	CYRILLIC SMALL LETTER KOMI SJE
0050E	CYRILLIC CAPITAL LETTER KOMI TJE
0050F	CYRILLIC SMALL LETTER KOMI TJE
00510	CYRILLIC CAPITAL LETTER REVERSED ZE
00511	CYRILLIC SMALL LETTER REVERSED ZE
00512	CYRILLIC CAPITAL LETTER EL WITH HOOK
00513	CYRILLIC SMALL LETTER EL WITH HOOK
00514	CYRILLIC CAPITAL LETTER LHA
00515	CYRILLIC SMALL LETTER LHA
00516	CYRILLIC CAPITAL LETTER RHA
00517	CYRILLIC SMALL LETTER RHA
00518	CYRILLIC CAPITAL LETTER YAE
00519	CYRILLIC SMALL LETTER YAE
0051A	CYRILLIC CAPITAL LETTER QA
0051B	CYRILLIC SMALL LETTER QA
0051C	CYRILLIC CAPITAL LETTER WE
0051D	CYRILLIC SMALL LETTER WE
0051E	CYRILLIC CAPITAL LETTER ALEUT KA
0051F	CYRILLIC SMALL LETTER ALEUT KA
00520	CYRILLIC CAPITAL LETTER EL WITH MIDDLE HOOK
00521	CYRILLIC SMALL LETTER EL WITH MIDDLE HOOK
00522	CYRILLIC CAPITAL LETTER EN WITH MIDDLE HOOK
00523	CYRILLIC SMALL LETTER EN WITH MIDDLE HOOK
00524	CYRILLIC CAPITAL LETTER PE WITH DESCENDER
00525	CYRILLIC SMALL LETTER PE WITH DESCENDER
00526	CYRILLIC CAPITAL LETTER SHHA WITH DESCENDER
00527	CYRILLIC SMALL LETTER SHHA WITH DESCENDER
00528	CYRILLIC CAPITAL LETTER EN WITH LEFT HOOK
00529	CYRILLIC SMALL LETTER EN WITH LEFT HOOK
0052A	CYRILLIC CAPITAL LETTER DZZHE
0052B	CYRILLIC SMALL LETTER DZZHE
0052C	CYRILLIC CAPITAL LETTER DCHE
0052D	CYRILLIC SMALL LETTER DCHE
0052E	CYRILLIC CAPITAL LETTER EL WITH DESCENDER
0052F	CYRILLIC SMALL LETTER EL WITH DESCENDER
00531	ARMENIAN CAPITAL LETTER AYB
00532	ARMENIAN CAPITAL LETTER BEN
00533	ARMENIAN CAPITAL LETTER GIM
00534	ARMENIAN CAPITAL LETTER DA
00535	ARMENIAN CAPITAL LETTER ECH
00536	ARMENIAN CAPITAL LETTER ZA
00537	ARMENIAN CAPITAL LETTER EH
00538	ARMENIAN CAPITAL LETTER ET
00539	ARMENIAN CAPITAL LETTER TO
0053A	ARMENIAN CAPITAL LETTER ZHE
0053B	ARMENIAN CAPITAL LETTER INI
0053C	ARMENIAN CAPITAL LETTER LIWN
0053D	ARMENIAN CAPITAL LETTER XEH
0053E	ARMENIAN CAPITAL LETTER CA
0053F	ARMENIAN CAPITAL LETTER KEN
00540	ARMENIAN CAPITAL LETTER HO
00541	ARMENIAN CAPITAL LETTER JA
00542	ARMENIAN CAPITAL LETTER GHAD
00543	ARMENIAN CAPITAL LETTER CHEH
00544	ARMENIAN CAPITAL LETTER MEN
00545	ARMENIAN CAPITAL LETTER YI
00546	ARMENIAN CAPITAL LETTER NOW
00547	ARMENIAN CAPITAL LETTER SHA
00548	ARMENIAN CAPITAL LETTER VO
00549	ARMENIAN CAPITAL LETTER CHA
0054A	ARMENIAN CAPITAL LETTER PEH
0054B	ARMENIAN CAPITAL LETTER JHEH
0054C	ARMENIAN CAPITAL LETTER RA
0054D	ARMENIAN CAPITAL LETTER SEH
0054E	ARMENIAN CAPITAL LETTER VEW
0054F	ARMENIAN CAPITAL LETTER TIWN
00550	ARMENIAN CAPITAL LETTER REH
00551	ARMENIAN CAPITAL LETTER CO
00552	ARMENIAN CAPITAL LETTER YIWN
00553	ARMENIAN CAPITAL LETTER PIWR
00554	ARMENIAN CAPITAL LETTER KEH
00555	ARMENIAN CAPITAL LETTER OH
00556	ARMENIAN CAPITAL LETTER FEH
00559	ARMENIAN MODIFIER LETTER LEFT HALF RING
0055A	ARMENIAN APOSTROPHE
0055B	ARMENIAN EMPHASIS MARK
0055C	ARMENIAN EXCLAMATION MARK
0055D	ARMENIAN COMMA
0055E	ARMENIAN QUESTION MARK
0055F	ARMENIAN ABBREVIATION MARK
00561	ARMENIAN SMALL LETTER AYB
00562	ARMENIAN SMALL LETTER BEN
00563	ARMENIAN SMALL LETTER GIM
00564	ARMENIAN SMALL LETTER DA
00565	ARMENIAN SMALL LETTER ECH
00566	ARMENIAN SMALL LETTER ZA
00567	ARMENIAN SMALL LETTER EH
00568	ARMENIAN SMALL LETTER ET
00569	ARMENIAN SMALL LETTER TO
0056A	ARMENIAN SMALL LETTER ZHE
0056B	ARMENIAN SMALL LETTER INI
0056C	ARMENIAN SMALL LETTER LIWN
0056D	ARMENIAN SMALL LETTER XEH
0056E	ARMENIAN SMALL LETTER CA
0056F	ARMENIAN SMALL LETTER KEN
00570	ARMENIAN SMALL LETTER HO
00571	ARMENIAN SMALL LETTER JA
00572	ARMENIAN SMALL LETTER GHAD
00573	ARMENIAN SMALL LETTER CHEH
00574	ARMENIAN SMALL LETTER MEN
00575	ARMENIAN SMALL LETTER YI
00576	ARMENIAN SMALL LETTER NOW
00577	ARMENIAN SMALL LETTER SHA
00578	ARMENIAN SMALL LETTER VO
00579	ARMENIAN SMALL LETTER CHA
0057A	ARMENIAN SMALL LETTER PEH
0057B	ARMENIAN SMALL LETTER JHEH
0057C	ARMENIAN SMALL LETTER RA
0057D	ARMENIAN SMALL LETTER SEH
0057E	ARMENIAN SMALL LETTER VEW
0057F	ARMENIAN SMALL LETTER TIWN
00580	ARMENIAN SMALL LETTER REH
00581	ARMENIAN SMALL LETTER CO
00582	ARMENIAN SMALL LETTER YIWN
00583	ARMENIAN SMALL LETTER PIWR
00584	ARMENIAN SMALL LETTER KEH
00585	ARMENIAN SMALL LETTER OH
00586	ARMENIAN SMALL LETTER FEH
00587	ARMENIAN SMALL LIGATURE ECH YIWN
00589	ARMENIAN FULL STOP
0058A	ARMENIAN HYPHEN
0058D	RIGHT-FACING ARMENIAN ETERNITY SIGN
0058E	LEFT-FACING ARMENIAN ETERNITY SIGN
0058F	ARMENIAN DRAM SIGN
00591	HEBREW ACCENT ETNAHTA
00592	HEBREW ACCENT SEGOL
00593	HEBREW ACCENT SHALSHELET
00594	HEBREW ACCENT ZAQEF QATAN
00595	HEBREW ACCENT ZAQEF GADOL
00596	HEBREW ACCENT TIPEHA
00597	HEBREW ACCENT REVIA
00598	HEBREW ACCENT ZARQA
00599	HEBREW ACCENT PASHTA
0059A	HEBREW ACCENT YETIV
0059B	HEBREW ACCENT TEVIR
0059C	HEBREW ACCENT GERESH
0059D	HEBREW ACCENT GERESH MUQDAM
0059E	HEBREW ACCENT GERSHAYIM
0059F	HEBREW ACCENT QARNEY PARA
005A0	HEBREW ACCENT TELISHA GEDOLA
005A1	HEBREW ACCENT PAZER
005A2	HEBREW ACCENT ATNAH HAFUKH
005A3	HEBREW ACCENT MUNAH
005A4	HEBREW ACCENT MAHAPAKH
005A5	HEBREW ACCENT MERKHA
005A6	HEBREW ACCENT MERKHA KEFULA
005A7	HEBREW ACCENT DARGA
005A8	HEBREW ACCENT QADMA
005A9	HEBREW ACCENT TELISHA QETANA
005AA	HEBREW ACCENT YERAH BEN YOMO
005AB	HEBREW ACCENT OLE
005AC	HEBREW ACCENT ILUY
005AD	HEBREW ACCENT DEHI
005AE	HEBREW ACCENT ZINOR
005AF	HEBREW MARK MASORA CIRCLE
005B0	HEBREW POINT SHEVA
005B1	HEBREW POINT HATAF SEGOL
005B2	HEBREW POINT HATAF PATAH
005B3	HEBREW POINT HATAF QAMATS
005B4	HEBREW POINT HIRIQ
005B5	HEBREW POINT TSERE
005B6	HEBREW POINT SEGOL
005B7	HEBREW POINT PATAH
005B8	HEBREW POINT QAMATS
005B9	HEBREW POINT HOLAM
005BA	HEBREW POINT HOLAM HASER FOR VAV
005BB	HEBREW POINT QUBUTS
005BC	HEBREW POINT DAGESH OR MAPIQ
005BD	HEBREW POINT METEG
005BE	HEBREW PUNCTUATION MAQAF
005BF	HEBREW POINT RAFE
005C0	HEBREW PUNCTUATION PASEQ
005C1	HEBREW POINT SHIN DOT
005C2	HEBREW POINT SIN DOT
005C3	HEBREW PUNCTUATION SOF PASUQ
005C4	HEBREW MARK UPPER DOT
005C5	HEBREW MARK LOWER DOT
005C6	HEBREW PUNCTUATION NUN HAFUKHA
005C7	HEBREW POINT QAMATS QATAN
005D0	HEBREW LETTER ALEF
005D1	HEBREW LETTER BET
005D2	HEBREW LETTER GIMEL
005D3	HEBREW LETTER DALET
005D4	HEBREW LETTER HE
005D5	HEBREW LETTER VAV
005D6	HEBREW LETTER ZAYIN
005D7	HEBREW LETTER HET
005D8	HEBREW LETTER TET
005D9	HEBREW LETTER YOD
005DA	HEBREW LETTER FINAL KAF
005DB	HEBREW LETTER KAF
005DC	HEBREW LETTER LAMED
005DD	HEBREW LETTER FINAL MEM
005DE	HEBREW LETTER MEM
005DF	HEBREW LETTER FINAL NUN
005E0	HEBREW LETTER NUN
005E1	HEBREW LETTER SAMEKH
005E2	HEBREW LETTER AYIN
005E3	HEBREW LETTER FINAL PE
005E4	HEBREW LETTER PE
005E5	HEBREW LETTER FINAL TSADI
005E6	HEBREW LETTER TSADI
005E7	HEBREW LETTER QOF
005E8	HEBREW LETTER RESH
005E9	HEBREW LETTER SHIN
005EA	HEBREW LETTER TAV
005F0	HEBREW LIGATURE YIDDISH DOUBLE VAV
005F1	HEBREW LIGATURE YIDDISH VAV YOD
005F2	HEBREW LIGATURE YIDDISH DOUBLE YOD
005F3	HEBREW PUNCTUATION GERESH
005F4	HEBREW PUNCTUATION GERSHAYIM
00600	ARABIC NUMBER SIGN
00601	ARABIC SIGN SANAH
00602	ARABIC FOOTNOTE MARKER
00603	ARABIC SIGN SAFHA
00604	ARABIC SIGN SAMVAT
00605	ARABIC NUMBER MARK ABOVE
00606	ARABIC-INDIC CUBE ROOT
00607	ARABIC-INDIC FOURTH ROOT
00608	ARABIC RAY
00609	ARABIC-INDIC PER MILLE SIGN
0060A	ARABIC-INDIC PER TEN THOUSAND SIGN
0060B	AFGHANI SIGN
0060C	ARABIC COMMA
0060D	ARABIC DATE SEPARATOR
0060E	ARABIC POETIC VERSE SIGN
0060F	ARABIC SIGN MISRA
00610	ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM
00611	ARABIC SIGN ALAYHE ASSALLAM
00612	ARABIC SIGN RAHMATULLAH ALAYHE
00613	ARABIC SIGN RADI ALLAHOU ANHU
00614	ARABIC SIGN TAKHALLUS
00615	ARABIC SMALL HIGH TAH
00616	ARABIC SMALL HIGH LIGATURE ALEF WITH LAM WITH YEH
00617	ARABIC SMALL HIGH ZAIN
00618	ARABIC SMALL FATHA
00619	ARABIC SMALL DAMMA
0061A	ARABIC SMALL KASRA
0061B	ARABIC SEMICOLON
0061C	ARABIC LETTER MARK
0061C	ALM
0061E	ARABIC TRIPLE DOT PUNCTUATION MARK
0061F	ARABIC QUESTION MARK
00620	ARABIC LETTER KASHMIRI YEH
00621	ARABIC LETTER HAMZA
00622	ARABIC LETTER ALEF WITH MADDA ABOVE
00623	ARABIC LETTER ALEF WITH HAMZA ABOVE
00624	ARABIC LETTER WAW WITH HAMZA ABOVE
00625	ARABIC LETTER ALEF WITH HAMZA BELOW
00626	ARABIC LETTER YEH WITH HAMZA ABOVE
00627	ARABIC LETTER ALEF
00628	ARABIC LETTER BEH
00629	ARABIC LETTER TEH MARBUTA
0062A	ARABIC LETTER TEH
0062B	ARABIC LETTER THEH
0062C	ARABIC LETTER JEEM
0062D	ARABIC LETTER HAH
0062E	ARABIC LETTER KHAH
0062F	ARABIC LETTER DAL
00630	ARABIC LETTER THAL
00631	ARABIC LETTER REH
00632	ARABIC LETTER ZAIN
00633	ARABIC LETTER SEEN
00634	ARABIC LETTER SHEEN
00635	ARABIC LETTER SAD
00636	ARABIC LETTER DAD
00637	ARABIC LETTER TAH
00638	ARABIC LETTER ZAH
00639	ARABIC LETTER AIN
0063A	ARABIC LETTER GHAIN
0063B	ARABIC LETTER KEHEH WITH TWO DOTS ABOVE
0063C	ARABIC LETTER KEHEH WITH THREE DOTS BELOW
0063D	ARABIC LETTER FARSI YEH WITH INVERTED V
0063E	ARABIC LETTER FARSI YEH WITH TWO DOTS ABOVE
0063F	ARABIC LETTER FARSI YEH WITH THREE DOTS ABOVE
00640	ARABIC TATWEEL
00641	ARABIC LETTER FEH
00642	ARABIC LETTER QAF
00643	ARABIC LETTER KAF
00644	ARABIC LETTER LAM
00645	ARABIC LETTER MEEM
00646	ARABIC LETTER NOON
00647	ARABIC LETTER HEH
00648	ARABIC LETTER WAW
00649	ARABIC LETTER ALEF MAKSURA
0064A	ARABIC LETTER YEH
0064B	ARABIC FATHATAN
0064C	ARABIC DAMMATAN
0064D	ARABIC KASRATAN
0064E	ARABIC FATHA
0064F	ARABIC DAMMA
00650	ARABIC KASRA
00651	ARABIC SHADDA
00652	ARABIC SUKUN
00653	ARABIC MADDAH ABOVE
00654	ARABIC HAMZA ABOVE
00655	ARABIC HAMZA BELOW
00656	ARABIC SUBSCRIPT ALEF
00657	ARABIC INVERTED DAMMA
00658	ARABIC MARK NOON GHUNNA
00659	ARABIC ZWARAKAY
0065A	ARABIC VOWEL SIGN SMALL V ABOVE
0065B	ARABIC VOWEL SIGN INVERTED SMALL V ABOVE
0065C	ARABIC VOWEL SIGN DOT BELOW
0065D	ARABIC REVERSED DAMMA
0065E	ARABIC FATHA WITH TWO DOTS
0065F	ARABIC WAVY HAMZA BELOW
00660	ARABIC-INDIC DIGIT ZERO
00661	ARABIC-INDIC DIGIT ONE
00662	ARABIC-INDIC DIGIT TWO
00663	ARABIC-INDIC DIGIT THREE
00664	ARABIC-INDIC DIGIT FOUR
00665	ARABIC-INDIC DIGIT FIVE
00666	ARABIC-INDIC DIGIT SIX
00667	ARABIC-INDIC DIGIT SEVEN
00668	ARABIC-INDIC DIGIT EIGHT
00669	ARABIC-INDIC DIGIT NINE
0066A	ARABIC PERCENT SIGN
0066B	ARABIC DECIMAL SEPARATOR
0066C	ARABIC THOUSANDS SEPARATOR
0066D	ARABIC FIVE POINTED STAR
0066E	ARABIC LETTER DOTLESS BEH
0066F	ARABIC LETTER DOTLESS QAF
00670	ARABIC LETTER SUPERSCRIPT ALEF
00671	ARABIC LETTER ALEF WASLA
00672	ARABIC LETTER ALEF WITH WAVY HAMZA ABOVE
00673	ARABIC LETTER ALEF WITH WAVY HAMZA BELOW
00674	ARABIC LETTER HIGH HAMZA
00675	ARABIC LETTER HIGH HAMZA ALEF
00676	ARABIC LETTER HIGH HAMZA WAW
00677	ARABIC LETTER U WITH HAMZA ABOVE
00678	ARABIC LETTER HIGH HAMZA YEH
00679	ARABIC LETTER TTEH
0067A	ARABIC LETTER TTEHEH
0067B	ARABIC LETTER BEEH
0067C	ARABIC LETTER TEH WITH RING
0067D	ARABIC LETTER TEH WITH THREE DOTS ABOVE DOWNWARDS
0067E	ARABIC LETTER PEH
0067F	ARABIC LETTER TEHEH
00680	ARABIC LETTER BEHEH
00681	ARABIC LETTER HAH WITH HAMZA ABOVE
00682	ARABIC LETTER HAH WITH TWO DOTS VERTICAL ABOVE
00683	ARABIC LETTER NYEH
00684	ARABIC LETTER DYEH
00685	ARABIC LETTER HAH WITH THREE DOTS ABOVE
00686	ARABIC LETTER TCHEH
00687	ARABIC LETTER TCHEHEH
00688	ARABIC LETTER DDAL
00689	ARABIC LETTER DAL WITH RING
0068A	ARABIC LETTER DAL WITH DOT BELOW
0068B	ARABIC LETTER DAL WITH DOT BELOW AND SMALL TAH
0068C	ARABIC LETTER DAHAL
0068D	ARABIC LETTER DDAHAL
0068E	ARABIC LETTER DUL
0068F	ARABIC LETTER DAL WITH THREE DOTS ABOVE DOWNWARDS
00690	ARABIC LETTER DAL WITH FOUR DOTS ABOVE
00691	ARABIC LETTER RREH
00692	ARABIC LETTER REH WITH SMALL V
00693	ARABIC LETTER REH WITH RING
00694	ARABIC LETTER REH WITH DOT BELOW
00695	ARABIC LETTER REH WITH SMALL V BELOW
00696	ARABIC LETTER REH WITH DOT BELOW AND DOT ABOVE
00697	ARABIC LETTER REH WITH TWO DOTS ABOVE
00698	ARABIC LETTER JEH
00699	ARABIC LETTER REH WITH FOUR DOTS ABOVE
0069A	ARABIC LETTER SEEN WITH DOT BELOW AND DOT ABOVE
0069B	ARABIC LETTER SEEN WITH THREE DOTS BELOW
0069C	ARABIC LETTER SEEN WITH THREE DOTS BELOW AND THREE DOTS ABOVE
0069D	ARABIC LETTER SAD WITH TWO DOTS BELOW
0069E	ARABIC LETTER SAD WITH THREE DOTS ABOVE
0069F	ARABIC LETTER TAH WITH THREE DOTS ABOVE
006A0	ARABIC LETTER AIN WITH THREE DOTS ABOVE
006A1	ARABIC LETTER DOTLESS FEH
006A2	ARABIC LETTER FEH WITH DOT MOVED BELOW
006A3	ARABIC LETTER FEH WITH DOT BELOW
006A4	ARABIC LETTER VEH
006A5	ARABIC LETTER FEH WITH THREE DOTS BELOW
006A6	ARABIC LETTER PEHEH
006A7	ARABIC LETTER QAF WITH DOT ABOVE
006A8	ARABIC LETTER QAF WITH THREE DOTS ABOVE
006A9	ARABIC LETTER KEHEH
006AA	ARABIC LETTER SWASH KAF
006AB	ARABIC LETTER KAF WITH RING
006AC	ARABIC LETTER KAF WITH DOT ABOVE
006AD	ARABIC LETTER NG
006AE	ARABIC LETTER KAF WITH THREE DOTS BELOW
006AF	ARABIC LETTER GAF
006B0	ARABIC LETTER GAF WITH RING
006B1	ARABIC LETTER NGOEH
006B2	ARABIC LETTER GAF WITH TWO DOTS BELOW
006B3	ARABIC LETTER GUEH
006B4	ARABIC LETTER GAF WITH THREE DOTS ABOVE
006B5	ARABIC LETTER LAM WITH SMALL V
006B6	ARABIC LETTER LAM WITH DOT ABOVE
006B7	ARABIC LETTER LAM WITH THREE DOTS ABOVE
006B8	ARABIC LETTER LAM WITH THREE DOTS BELOW
006B9	ARABIC LETTER NOON WITH DOT BELOW
006BA	ARABIC LETTER NOON GHUNNA
006BB	ARABIC LETTER RNOON
006BC	ARABIC LETTER NOON WITH RING
006BD	ARABIC LETTER NOON WITH THREE DOTS ABOVE
006BE	ARABIC LETTER HEH DOACHASHMEE
006BF	ARABIC LETTER TCHEH WITH DOT ABOVE
006C0	ARABIC LETTER HEH WITH YEH ABOVE
006C1	ARABIC LETTER HEH GOAL
006C2	ARABIC LETTER HEH GOAL WITH HAMZA ABOVE
006C3	ARABIC LETTER TEH MARBUTA GOAL
006C4	ARABIC LETTER WAW WITH RING
006C5	ARABIC LETTER KIRGHIZ OE
006C6	ARABIC LETTER OE
006C7	ARABIC LETTER U
006C8	ARABIC LETTER YU
006C9	ARABIC LETTER KIRGHIZ YU
006CA	ARABIC LETTER WAW WITH TWO DOTS ABOVE
006CB	ARABIC LETTER VE
006CC	ARABIC LETTER FARSI YEH
006CD	ARABIC LETTER YEH WITH TAIL
006CE	ARABIC LETTER YEH WITH SMALL V
006CF	ARABIC LETTER WAW WITH DOT ABOVE
006D0	ARABIC LETTER E
006D1	ARABIC LETTER YEH WITH THREE DOTS BELOW
006D2	ARABIC LETTER YEH BARREE
006D3	ARABIC LETTER YEH BARREE WITH HAMZA ABOVE
006D4	ARABIC FULL STOP
006D5	ARABIC LETTER AE
006D6	ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA
006D7	ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA
006D8	ARABIC SMALL HIGH MEEM INITIAL FORM
006D9	ARABIC SMALL HIGH LAM ALEF
006DA	ARABIC SMALL HIGH JEEM
006DB	ARABIC SMALL HIGH THREE DOTS
006DC	ARABIC SMALL HIGH SEEN
006DD	ARABIC END OF AYAH
006DE	ARABIC START OF RUB EL HIZB
006DF	ARABIC SMALL HIGH ROUNDED ZERO
006E0	ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO
006E1	ARABIC SMALL HIGH DOTLESS HEAD OF KHAH
006E2	ARABIC SMALL HIGH MEEM ISOLATED FORM
006E3	ARABIC SMALL LOW SEEN
006E4	ARABIC SMALL HIGH MADDA
006E5	ARABIC SMALL WAW
006E6	ARABIC SMALL YEH
006E7	ARABIC SMALL HIGH YEH
006E8	ARABIC SMALL HIGH NOON
006E9	ARABIC PLACE OF SAJDAH
006EA	ARABIC EMPTY CENTRE LOW STOP
006EB	ARABIC EMPTY CENTRE HIGH STOP
006EC	ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE
006ED	ARABIC SMALL LOW MEEM
006EE	ARABIC LETTER DAL WITH INVERTED V
006EF	ARABIC LETTER REH WITH INVERTED V
006F0	EXTENDED ARABIC-INDIC DIGIT ZERO
006F1	EXTENDED ARABIC-INDIC DIGIT ONE
006F2	EXTENDED ARABIC-INDIC DIGIT TWO
006F3	EXTENDED ARABIC-INDIC DIGIT THREE
006F4	EXTENDED ARABIC-INDIC DIGIT FOUR
006F5	EXTENDED ARABIC-INDIC DIGIT FIVE
006F6	EXTENDED ARABIC-INDIC DIGIT SIX
006F7	EXTENDED ARABIC-INDIC DIGIT SEVEN
006F8	EXTENDED ARABIC-INDIC DIGIT EIGHT
006F9	EXTENDED ARABIC-INDIC DIGIT NINE
006FA	ARABIC LETTER SHEEN WITH DOT BELOW
006FB	ARABIC LETTER DAD WITH DOT BELOW
006FC	ARABIC LETTER GHAIN WITH DOT BELOW
006FD	ARABIC SIGN SINDHI AMPERSAND
006FE	ARABIC SIGN SINDHI POSTPOSITION MEN
006FF	ARABIC LETTER HEH WITH INVERTED V
00700	SYRIAC END OF PARAGRAPH
00701	SYRIAC SUPRALINEAR FULL STOP
00702	SYRIAC SUBLINEAR FULL STOP
00703	SYRIAC SUPRALINEAR COLON
00704	SYRIAC SUBLINEAR COLON
00705	SYRIAC HORIZONTAL COLON
00706	SYRIAC COLON SKEWED LEFT
00707	SYRIAC COLON SKEWED RIGHT
00708	SYRIAC SUPRALINEAR COLON SKEWED LEFT
00709	SYRIAC SUBLINEAR COLON SKEWED LEFT
00709	SYRIAC SUBLINEAR COLON SKEWED RIGHT
0070A	SYRIAC CONTRACTION
0070B	SYRIAC HARKLEAN OBELUS
0070C	SYRIAC HARKLEAN METOBELUS
0070D	SYRIAC HARKLEAN ASTERISCUS
0070F	SYRIAC ABBREVIATION MARK
00710	SYRIAC LETTER ALAPH
00711	SYRIAC LETTER SUPERSCRIPT ALAPH
00712	SYRIAC LETTER BETH
00713	SYRIAC LETTER GAMAL
00714	SYRIAC LETTER GAMAL GARSHUNI
00715	SYRIAC LETTER DALATH
00716	SYRIAC LETTER DOTLESS DALATH RISH
00717	SYRIAC LETTER HE
00718	SYRIAC LETTER WAW
00719	SYRIAC LETTER ZAIN
0071A	SYRIAC LETTER HETH
0071B	SYRIAC LETTER TETH
0071C	SYRIAC LETTER TETH GARSHUNI
0071D	SYRIAC LETTER YUDH
0071E	SYRIAC LETTER YUDH HE
0071F	SYRIAC LETTER KAPH
00720	SYRIAC LETTER LAMADH
00721	SYRIAC LETTER MIM
00722	SYRIAC LETTER NUN
00723	SYRIAC LETTER SEMKATH
00724	SYRIAC LETTER FINAL SEMKATH
00725	SYRIAC LETTER E
00726	SYRIAC LETTER PE
00727	SYRIAC LETTER REVERSED PE
00728	SYRIAC LETTER SADHE
00729	SYRIAC LETTER QAPH
0072A	SYRIAC LETTER RISH
0072B	SYRIAC LETTER SHIN
0072C	SYRIAC LETTER TAW
0072D	SYRIAC LETTER PERSIAN BHETH
0072E	SYRIAC LETTER PERSIAN GHAMAL
0072F	SYRIAC LETTER PERSIAN DHALATH
00730	SYRIAC PTHAHA ABOVE
00731	SYRIAC PTHAHA BELOW
00732	SYRIAC PTHAHA DOTTED
00733	SYRIAC ZQAPHA ABOVE
00734	SYRIAC ZQAPHA BELOW
00735	SYRIAC ZQAPHA DOTTED
00736	SYRIAC RBASA ABOVE
00737	SYRIAC RBASA BELOW
00738	SYRIAC DOTTED ZLAMA HORIZONTAL
00739	SYRIAC DOTTED ZLAMA ANGULAR
0073A	SYRIAC HBASA ABOVE
0073B	SYRIAC HBASA BELOW
0073C	SYRIAC HBASA-ESASA DOTTED
0073D	SYRIAC ESASA ABOVE
0073E	SYRIAC ESASA BELOW
0073F	SYRIAC RWAHA
00740	SYRIAC FEMININE DOT
00741	SYRIAC QUSHSHAYA
00742	SYRIAC RUKKAKHA
00743	SYRIAC TWO VERTICAL DOTS ABOVE
00744	SYRIAC TWO VERTICAL DOTS BELOW
00745	SYRIAC THREE DOTS ABOVE
00746	SYRIAC THREE DOTS BELOW
00747	SYRIAC OBLIQUE LINE ABOVE
00748	SYRIAC OBLIQUE LINE BELOW
00749	SYRIAC MUSIC
0074A	SYRIAC BARREKH
0074D	SYRIAC LETTER SOGDIAN ZHAIN
0074E	SYRIAC LETTER SOGDIAN KHAPH
0074F	SYRIAC LETTER SOGDIAN FE
00750	ARABIC LETTER BEH WITH THREE DOTS HORIZONTALLY BELOW
00751	ARABIC LETTER BEH WITH DOT BELOW AND THREE DOTS ABOVE
00752	ARABIC LETTER BEH WITH THREE DOTS POINTING UPWARDS BELOW
00753	ARABIC LETTER BEH WITH THREE DOTS POINTING UPWARDS BELOW AND TWO DOTS ABOVE
00754	ARABIC LETTER BEH WITH TWO DOTS BELOW AND DOT ABOVE
00755	ARABIC LETTER BEH WITH INVERTED SMALL V BELOW
00756	ARABIC LETTER BEH WITH SMALL V
00757	ARABIC LETTER HAH WITH TWO DOTS ABOVE
00758	ARABIC LETTER HAH WITH THREE DOTS POINTING UPWARDS BELOW
00759	ARABIC LETTER DAL WITH TWO DOTS VERTICALLY BELOW AND SMALL TAH
0075A	ARABIC LETTER DAL WITH INVERTED SMALL V BELOW
0075B	ARABIC LETTER REH WITH STROKE
0075C	ARABIC LETTER SEEN WITH FOUR DOTS ABOVE
0075D	ARABIC LETTER AIN WITH TWO DOTS ABOVE
0075E	ARABIC LETTER AIN WITH THREE DOTS POINTING DOWNWARDS ABOVE
0075F	ARABIC LETTER AIN WITH TWO DOTS VERTICALLY ABOVE
00760	ARABIC LETTER FEH WITH TWO DOTS BELOW
00761	ARABIC LETTER FEH WITH THREE DOTS POINTING UPWARDS BELOW
00762	ARABIC LETTER KEHEH WITH DOT ABOVE
00763	ARABIC LETTER KEHEH WITH THREE DOTS ABOVE
00764	ARABIC LETTER KEHEH WITH THREE DOTS POINTING UPWARDS BELOW
00765	ARABIC LETTER MEEM WITH DOT ABOVE
00766	ARABIC LETTER MEEM WITH DOT BELOW
00767	ARABIC LETTER NOON WITH TWO DOTS BELOW
00768	ARABIC LETTER NOON WITH SMALL TAH
00769	ARABIC LETTER NOON WITH SMALL V
0076A	ARABIC LETTER LAM WITH BAR
0076B	ARABIC LETTER REH WITH TWO DOTS VERTICALLY ABOVE
0076C	ARABIC LETTER REH WITH HAMZA ABOVE
0076D	ARABIC LETTER SEEN WITH TWO DOTS VERTICALLY ABOVE
0076E	ARABIC LETTER HAH WITH SMALL ARABIC LETTER TAH BELOW
0076F	ARABIC LETTER HAH WITH SMALL ARABIC LETTER TAH AND TWO DOTS
00770	ARABIC LETTER SEEN WITH SMALL ARABIC LETTER TAH AND TWO DOTS
00771	ARABIC LETTER REH WITH SMALL ARABIC LETTER TAH AND TWO DOTS
00772	ARABIC LETTER HAH WITH SMALL ARABIC LETTER TAH ABOVE
00773	ARABIC LETTER ALEF WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE
00774	ARABIC LETTER ALEF WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE
00775	ARABIC LETTER FARSI YEH WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE
00776	ARABIC LETTER FARSI YEH WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE
00777	ARABIC LETTER FARSI YEH WITH EXTENDED ARABIC-INDIC DIGIT FOUR BELOW
00778	ARABIC LETTER WAW WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE
00779	ARABIC LETTER WAW WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE
0077A	ARABIC LETTER YEH BARREE WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE
0077B	ARABIC LETTER YEH BARREE WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE
0077C	ARABIC LETTER HAH WITH EXTENDED ARABIC-INDIC DIGIT FOUR BELOW
0077D	ARABIC LETTER SEEN WITH EXTENDED ARABIC-INDIC DIGIT FOUR ABOVE
0077E	ARABIC LETTER SEEN WITH INVERTED V
0077F	ARABIC LETTER KAF WITH TWO DOTS ABOVE
00780	THAANA LETTER HAA
00781	THAANA LETTER SHAVIYANI
00782	THAANA LETTER NOONU
00783	THAANA LETTER RAA
00784	THAANA LETTER BAA
00785	THAANA LETTER LHAVIYANI
00786	THAANA LETTER KAAFU
00787	THAANA LETTER ALIFU
00788	THAANA LETTER VAAVU
00789	THAANA LETTER MEEMU
0078A	THAANA LETTER FAAFU
0078B	THAANA LETTER DHAALU
0078C	THAANA LETTER THAA
0078D	THAANA LETTER LAAMU
0078E	THAANA LETTER GAAFU
0078F	THAANA LETTER GNAVIYANI
00790	THAANA LETTER SEENU
00791	THAANA LETTER DAVIYANI
00792	THAANA LETTER ZAVIYANI
00793	THAANA LETTER TAVIYANI
00794	THAANA LETTER YAA
00795	THAANA LETTER PAVIYANI
00796	THAANA LETTER JAVIYANI
00797	THAANA LETTER CHAVIYANI
00798	THAANA LETTER TTAA
00799	THAANA LETTER HHAA
0079A	THAANA LETTER KHAA
0079B	THAANA LETTER THAALU
0079C	THAANA LETTER ZAA
0079D	THAANA LETTER SHEENU
0079E	THAANA LETTER SAADHU
0079F	THAANA LETTER DAADHU
007A0	THAANA LETTER TO
007A1	THAANA LETTER ZO
007A2	THAANA LETTER AINU
007A3	THAANA LETTER GHAINU
007A4	THAANA LETTER QAAFU
007A5	THAANA LETTER WAAVU
007A6	THAANA ABAFILI
007A7	THAANA AABAAFILI
007A8	THAANA IBIFILI
007A9	THAANA EEBEEFILI
007AA	THAANA UBUFILI
007AB	THAANA OOBOOFILI
007AC	THAANA EBEFILI
007AD	THAANA EYBEYFILI
007AE	THAANA OBOFILI
007AF	THAANA OABOAFILI
007B0	THAANA SUKUN
007B1	THAANA LETTER NAA
007C0	NKO DIGIT ZERO
007C1	NKO DIGIT ONE
007C2	NKO DIGIT TWO
007C3	NKO DIGIT THREE
007C4	NKO DIGIT FOUR
007C5	NKO DIGIT FIVE
007C6	NKO DIGIT SIX
007C7	NKO DIGIT SEVEN
007C8	NKO DIGIT EIGHT
007C9	NKO DIGIT NINE
007CA	NKO LETTER A
007CB	NKO LETTER EE
007CC	NKO LETTER I
007CD	NKO LETTER E
007CE	NKO LETTER U
007CF	NKO LETTER OO
007D0	NKO LETTER O
007D1	NKO LETTER DAGBASINNA
007D2	NKO LETTER N
007D3	NKO LETTER BA
007D4	NKO LETTER PA
007D5	NKO LETTER TA
007D6	NKO LETTER JA
007D7	NKO LETTER CHA
007D8	NKO LETTER DA
007D9	NKO LETTER RA
007DA	NKO LETTER RRA
007DB	NKO LETTER SA
007DC	NKO LETTER GBA
007DD	NKO LETTER FA
007DE	NKO LETTER KA
007DF	NKO LETTER LA
007E0	NKO LETTER NA WOLOSO
007E1	NKO LETTER MA
007E2	NKO LETTER NYA
007E3	NKO LETTER NA
007E4	NKO LETTER HA
007E5	NKO LETTER WA
007E6	NKO LETTER YA
007E7	NKO LETTER NYA WOLOSO
007E8	NKO LETTER JONA JA
007E9	NKO LETTER JONA CHA
007EA	NKO LETTER JONA RA
007EB	NKO COMBINING SHORT HIGH TONE
007EC	NKO COMBINING SHORT LOW TONE
007ED	NKO COMBINING SHORT RISING TONE
007EE	NKO COMBINING LONG DESCENDING TONE
007EF	NKO COMBINING LONG HIGH TONE
007F0	NKO COMBINING LONG LOW TONE
007F1	NKO COMBINING LONG RISING TONE
007F2	NKO COMBINING NASALIZATION MARK
007F3	NKO COMBINING DOUBLE DOT ABOVE
007F4	NKO HIGH TONE APOSTROPHE
007F5	NKO LOW TONE APOSTROPHE
007F6	NKO SYMBOL OO DENNEN
007F7	NKO SYMBOL GBAKURUNEN
007F8	NKO COMMA
007F9	NKO EXCLAMATION MARK
007FA	NKO LAJANYALAN
00800	SAMARITAN LETTER ALAF
00801	SAMARITAN LETTER BIT
00802	SAMARITAN LETTER GAMAN
00803	SAMARITAN LETTER DALAT
00804	SAMARITAN LETTER IY
00805	SAMARITAN LETTER BAA
00806	SAMARITAN LETTER ZEN
00807	SAMARITAN LETTER IT
00808	SAMARITAN LETTER TIT
00809	SAMARITAN LETTER YUT
0080A	SAMARITAN LETTER KAAF
0080B	SAMARITAN LETTER LABAT
0080C	SAMARITAN LETTER MIM
0080D	SAMARITAN LETTER NUN
0080E	SAMARITAN LETTER SINGAAT
0080F	SAMARITAN LETTER IN
00810	SAMARITAN LETTER FI
00811	SAMARITAN LETTER TSAADIY
00812	SAMARITAN LETTER QUF
00813	SAMARITAN LETTER RISH
00814	SAMARITAN LETTER SHAN
00815	SAMARITAN LETTER TAAF
00816	SAMARITAN MARK IN
00817	SAMARITAN MARK IN-ALAF
00818	SAMARITAN MARK OCCLUSION
00819	SAMARITAN MARK DAGESH
0081A	SAMARITAN MODIFIER LETTER EPENTHETIC YUT
0081B	SAMARITAN MARK EPENTHETIC YUT
0081C	SAMARITAN VOWEL SIGN LONG E
0081D	SAMARITAN VOWEL SIGN E
0081E	SAMARITAN VOWEL SIGN OVERLONG AA
0081F	SAMARITAN VOWEL SIGN LONG AA
00820	SAMARITAN VOWEL SIGN AA
00821	SAMARITAN VOWEL SIGN OVERLONG A
00822	SAMARITAN VOWEL SIGN LONG A
00823	SAMARITAN VOWEL SIGN A
00824	SAMARITAN MODIFIER LETTER SHORT A
00825	SAMARITAN VOWEL SIGN SHORT A
00826	SAMARITAN VOWEL SIGN LONG U
00827	SAMARITAN VOWEL SIGN U
00828	SAMARITAN MODIFIER LETTER I
00829	SAMARITAN VOWEL SIGN LONG I
0082A	SAMARITAN VOWEL SIGN I
0082B	SAMARITAN VOWEL SIGN O
0082C	SAMARITAN VOWEL SIGN SUKUN
0082D	SAMARITAN MARK NEQUDAA
00830	SAMARITAN PUNCTUATION NEQUDAA
00831	SAMARITAN PUNCTUATION AFSAAQ
00832	SAMARITAN PUNCTUATION ANGED
00833	SAMARITAN PUNCTUATION BAU
00834	SAMARITAN PUNCTUATION ATMAAU
00835	SAMARITAN PUNCTUATION SHIYYAALAA
00836	SAMARITAN ABBREVIATION MARK
00837	SAMARITAN PUNCTUATION MELODIC QITSA
00838	SAMARITAN PUNCTUATION ZIQAA
00839	SAMARITAN PUNCTUATION QITSA
0083A	SAMARITAN PUNCTUATION ZAEF
0083B	SAMARITAN PUNCTUATION TURU
0083C	SAMARITAN PUNCTUATION ARKAANU
0083D	SAMARITAN PUNCTUATION SOF MASHFAAT
0083E	SAMARITAN PUNCTUATION ANNAAU
00840	MANDAIC LETTER HALQA
00841	MANDAIC LETTER AB
00842	MANDAIC LETTER AG
00843	MANDAIC LETTER AD
00844	MANDAIC LETTER AH
00845	MANDAIC LETTER USHENNA
00846	MANDAIC LETTER AZ
00847	MANDAIC LETTER IT
00848	MANDAIC LETTER ATT
00849	MANDAIC LETTER AKSA
0084A	MANDAIC LETTER AK
0084B	MANDAIC LETTER AL
0084C	MANDAIC LETTER AM
0084D	MANDAIC LETTER AN
0084E	MANDAIC LETTER AS
0084F	MANDAIC LETTER IN
00850	MANDAIC LETTER AP
00851	MANDAIC LETTER ASZ
00852	MANDAIC LETTER AQ
00853	MANDAIC LETTER AR
00854	MANDAIC LETTER ASH
00855	MANDAIC LETTER AT
00856	MANDAIC LETTER DUSHENNA
00857	MANDAIC LETTER KAD
00858	MANDAIC LETTER AIN
00859	MANDAIC AFFRICATION MARK
0085A	MANDAIC VOCALIZATION MARK
0085B	MANDAIC GEMINATION MARK
0085E	MANDAIC PUNCTUATION
008A0	ARABIC LETTER BEH WITH SMALL V BELOW
008A1	ARABIC LETTER BEH WITH HAMZA ABOVE
008A2	ARABIC LETTER JEEM WITH TWO DOTS ABOVE
008A3	ARABIC LETTER TAH WITH TWO DOTS ABOVE
008A4	ARABIC LETTER FEH WITH DOT BELOW AND THREE DOTS ABOVE
008A5	ARABIC LETTER QAF WITH DOT BELOW
008A6	ARABIC LETTER LAM WITH DOUBLE BAR
008A7	ARABIC LETTER MEEM WITH THREE DOTS ABOVE
008A8	ARABIC LETTER YEH WITH TWO DOTS BELOW AND HAMZA ABOVE
008A9	ARABIC LETTER YEH WITH TWO DOTS BELOW AND DOT ABOVE
008AA	ARABIC LETTER REH WITH LOOP
008AB	ARABIC LETTER WAW WITH DOT WITHIN
008AC	ARABIC LETTER ROHINGYA YEH
008AD	ARABIC LETTER LOW ALEF
008AE	ARABIC LETTER DAL WITH THREE DOTS BELOW
008AF	ARABIC LETTER SAD WITH THREE DOTS BELOW
008B0	ARABIC LETTER GAF WITH INVERTED STROKE
008B1	ARABIC LETTER STRAIGHT WAW
008B2	ARABIC LETTER ZAIN WITH INVERTED V ABOVE
008B3	ARABIC LETTER AIN WITH THREE DOTS BELOW
008B4	ARABIC LETTER KAF WITH DOT BELOW
008E3	ARABIC TURNED DAMMA BELOW
008E4	ARABIC CURLY FATHA
008E5	ARABIC CURLY DAMMA
008E6	ARABIC CURLY KASRA
008E7	ARABIC CURLY FATHATAN
008E8	ARABIC CURLY DAMMATAN
008E9	ARABIC CURLY KASRATAN
008EA	ARABIC TONE ONE DOT ABOVE
008EB	ARABIC TONE TWO DOTS ABOVE
008EC	ARABIC TONE LOOP ABOVE
008ED	ARABIC TONE ONE DOT BELOW
008EE	ARABIC TONE TWO DOTS BELOW
008EF	ARABIC TONE LOOP BELOW
008F0	ARABIC OPEN FATHATAN
008F1	ARABIC OPEN DAMMATAN
008F2	ARABIC OPEN KASRATAN
008F3	ARABIC SMALL HIGH WAW
008F4	ARABIC FATHA WITH RING
008F5	ARABIC FATHA WITH DOT ABOVE
008F6	ARABIC KASRA WITH DOT BELOW
008F7	ARABIC LEFT ARROWHEAD ABOVE
008F8	ARABIC RIGHT ARROWHEAD ABOVE
008F9	ARABIC LEFT ARROWHEAD BELOW
008FA	ARABIC RIGHT ARROWHEAD BELOW
008FB	ARABIC DOUBLE RIGHT ARROWHEAD ABOVE
008FC	ARABIC DOUBLE RIGHT ARROWHEAD ABOVE WITH DOT
008FD	ARABIC RIGHT ARROWHEAD ABOVE WITH DOT
008FE	ARABIC DAMMA WITH DOT
008FF	ARABIC MARK SIDEWAYS NOON GHUNNA
00900	DEVANAGARI SIGN INVERTED CANDRABINDU
00901	DEVANAGARI SIGN CANDRABINDU
00902	DEVANAGARI SIGN ANUSVARA
00903	DEVANAGARI SIGN VISARGA
00904	DEVANAGARI LETTER SHORT A
00905	DEVANAGARI LETTER A
00906	DEVANAGARI LETTER AA
00907	DEVANAGARI LETTER I
00908	DEVANAGARI LETTER II
00909	DEVANAGARI LETTER U
0090A	DEVANAGARI LETTER UU
0090B	DEVANAGARI LETTER VOCALIC R
0090C	DEVANAGARI LETTER VOCALIC L
0090D	DEVANAGARI LETTER CANDRA E
0090E	DEVANAGARI LETTER SHORT E
0090F	DEVANAGARI LETTER E
00910	DEVANAGARI LETTER AI
00911	DEVANAGARI LETTER CANDRA O
00912	DEVANAGARI LETTER SHORT O
00913	DEVANAGARI LETTER O
00914	DEVANAGARI LETTER AU
00915	DEVANAGARI LETTER KA
00916	DEVANAGARI LETTER KHA
00917	DEVANAGARI LETTER GA
00918	DEVANAGARI LETTER GHA
00919	DEVANAGARI LETTER NGA
0091A	DEVANAGARI LETTER CA
0091B	DEVANAGARI LETTER CHA
0091C	DEVANAGARI LETTER JA
0091D	DEVANAGARI LETTER JHA
0091E	DEVANAGARI LETTER NYA
0091F	DEVANAGARI LETTER TTA
00920	DEVANAGARI LETTER TTHA
00921	DEVANAGARI LETTER DDA
00922	DEVANAGARI LETTER DDHA
00923	DEVANAGARI LETTER NNA
00924	DEVANAGARI LETTER TA
00925	DEVANAGARI LETTER THA
00926	DEVANAGARI LETTER DA
00927	DEVANAGARI LETTER DHA
00928	DEVANAGARI LETTER NA
00929	DEVANAGARI LETTER NNNA
0092A	DEVANAGARI LETTER PA
0092B	DEVANAGARI LETTER PHA
0092C	DEVANAGARI LETTER BA
0092D	DEVANAGARI LETTER BHA
0092E	DEVANAGARI LETTER MA
0092F	DEVANAGARI LETTER YA
00930	DEVANAGARI LETTER RA
00931	DEVANAGARI LETTER RRA
00932	DEVANAGARI LETTER LA
00933	DEVANAGARI LETTER LLA
00934	DEVANAGARI LETTER LLLA
00935	DEVANAGARI LETTER VA
00936	DEVANAGARI LETTER SHA
00937	DEVANAGARI LETTER SSA
00938	DEVANAGARI LETTER SA
00939	DEVANAGARI LETTER HA
0093A	DEVANAGARI VOWEL SIGN OE
0093B	DEVANAGARI VOWEL SIGN OOE
0093C	DEVANAGARI SIGN NUKTA
0093D	DEVANAGARI SIGN AVAGRAHA
0093E	DEVANAGARI VOWEL SIGN AA
0093F	DEVANAGARI VOWEL SIGN I
00940	DEVANAGARI VOWEL SIGN II
00941	DEVANAGARI VOWEL SIGN U
00942	DEVANAGARI VOWEL SIGN UU
00943	DEVANAGARI VOWEL SIGN VOCALIC R
00944	DEVANAGARI VOWEL SIGN VOCALIC RR
00945	DEVANAGARI VOWEL SIGN CANDRA E
00946	DEVANAGARI VOWEL SIGN SHORT E
00947	DEVANAGARI VOWEL SIGN E
00948	DEVANAGARI VOWEL SIGN AI
00949	DEVANAGARI VOWEL SIGN CANDRA O
0094A	DEVANAGARI VOWEL SIGN SHORT O
0094B	DEVANAGARI VOWEL SIGN O
0094C	DEVANAGARI VOWEL SIGN AU
0094D	DEVANAGARI SIGN VIRAMA
0094E	DEVANAGARI VOWEL SIGN PRISHTHAMATRA E
0094F	DEVANAGARI VOWEL SIGN AW
00950	DEVANAGARI OM
00951	DEVANAGARI STRESS SIGN UDATTA
00952	DEVANAGARI STRESS SIGN ANUDATTA
00953	DEVANAGARI GRAVE ACCENT
00954	DEVANAGARI ACUTE ACCENT
00955	DEVANAGARI VOWEL SIGN CANDRA LONG E
00956	DEVANAGARI VOWEL SIGN UE
00957	DEVANAGARI VOWEL SIGN UUE
00958	DEVANAGARI LETTER QA
00959	DEVANAGARI LETTER KHHA
0095A	DEVANAGARI LETTER GHHA
0095B	DEVANAGARI LETTER ZA
0095C	DEVANAGARI LETTER DDDHA
0095D	DEVANAGARI LETTER RHA
0095E	DEVANAGARI LETTER FA
0095F	DEVANAGARI LETTER YYA
00960	DEVANAGARI LETTER VOCALIC RR
00961	DEVANAGARI LETTER VOCALIC LL
00962	DEVANAGARI VOWEL SIGN VOCALIC L
00963	DEVANAGARI VOWEL SIGN VOCALIC LL
00964	DEVANAGARI DANDA
00965	DEVANAGARI DOUBLE DANDA
00966	DEVANAGARI DIGIT ZERO
00967	DEVANAGARI DIGIT ONE
00968	DEVANAGARI DIGIT TWO
00969	DEVANAGARI DIGIT THREE
0096A	DEVANAGARI DIGIT FOUR
0096B	DEVANAGARI DIGIT FIVE
0096C	DEVANAGARI DIGIT SIX
0096D	DEVANAGARI DIGIT SEVEN
0096E	DEVANAGARI DIGIT EIGHT
0096F	DEVANAGARI DIGIT NINE
00970	DEVANAGARI ABBREVIATION SIGN
00971	DEVANAGARI SIGN HIGH SPACING DOT
00972	DEVANAGARI LETTER CANDRA A
00973	DEVANAGARI LETTER OE
00974	DEVANAGARI LETTER OOE
00975	DEVANAGARI LETTER AW
00976	DEVANAGARI LETTER UE
00977	DEVANAGARI LETTER UUE
00978	DEVANAGARI LETTER MARWARI DDA
00979	DEVANAGARI LETTER ZHA
0097A	DEVANAGARI LETTER HEAVY YA
0097B	DEVANAGARI LETTER GGA
0097C	DEVANAGARI LETTER JJA
0097D	DEVANAGARI LETTER GLOTTAL STOP
0097E	DEVANAGARI LETTER DDDA
0097F	DEVANAGARI LETTER BBA
00980	BENGALI ANJI
00981	BENGALI SIGN CANDRABINDU
00982	BENGALI SIGN ANUSVARA
00983	BENGALI SIGN VISARGA
00985	BENGALI LETTER A
00986	BENGALI LETTER AA
00987	BENGALI LETTER I
00988	BENGALI LETTER II
00989	BENGALI LETTER U
0098A	BENGALI LETTER UU
0098B	BENGALI LETTER VOCALIC R
0098C	BENGALI LETTER VOCALIC L
0098F	BENGALI LETTER E
00990	BENGALI LETTER AI
00993	BENGALI LETTER O
00994	BENGALI LETTER AU
00995	BENGALI LETTER KA
00996	BENGALI LETTER KHA
00997	BENGALI LETTER GA
00998	BENGALI LETTER GHA
00999	BENGALI LETTER NGA
0099A	BENGALI LETTER CA
0099B	BENGALI LETTER CHA
0099C	BENGALI LETTER JA
0099D	BENGALI LETTER JHA
0099E	BENGALI LETTER NYA
0099F	BENGALI LETTER TTA
009A0	BENGALI LETTER TTHA
009A1	BENGALI LETTER DDA
009A2	BENGALI LETTER DDHA
009A3	BENGALI LETTER NNA
009A4	BENGALI LETTER TA
009A5	BENGALI LETTER THA
009A6	BENGALI LETTER DA
009A7	BENGALI LETTER DHA
009A8	BENGALI LETTER NA
009AA	BENGALI LETTER PA
009AB	BENGALI LETTER PHA
009AC	BENGALI LETTER BA
009AD	BENGALI LETTER BHA
009AE	BENGALI LETTER MA
009AF	BENGALI LETTER YA
009B0	BENGALI LETTER RA
009B2	BENGALI LETTER LA
009B6	BENGALI LETTER SHA
009B7	BENGALI LETTER SSA
009B8	BENGALI LETTER SA
009B9	BENGALI LETTER HA
009BC	BENGALI SIGN NUKTA
009BD	BENGALI SIGN AVAGRAHA
009BE	BENGALI VOWEL SIGN AA
009BF	BENGALI VOWEL SIGN I
009C0	BENGALI VOWEL SIGN II
009C1	BENGALI VOWEL SIGN U
009C2	BENGALI VOWEL SIGN UU
009C3	BENGALI VOWEL SIGN VOCALIC R
009C4	BENGALI VOWEL SIGN VOCALIC RR
009C7	BENGALI VOWEL SIGN E
009C8	BENGALI VOWEL SIGN AI
009CB	BENGALI VOWEL SIGN O
009CC	BENGALI VOWEL SIGN AU
009CD	BENGALI SIGN VIRAMA
009CE	BENGALI LETTER KHANDA TA
009D7	BENGALI AU LENGTH MARK
009DC	BENGALI LETTER RRA
009DD	BENGALI LETTER RHA
009DF	BENGALI LETTER YYA
009E0	BENGALI LETTER VOCALIC RR
009E1	BENGALI LETTER VOCALIC LL
009E2	BENGALI VOWEL SIGN VOCALIC L
009E3	BENGALI VOWEL SIGN VOCALIC LL
009E6	BENGALI DIGIT ZERO
009E7	BENGALI DIGIT ONE
009E8	BENGALI DIGIT TWO
009E9	BENGALI DIGIT THREE
009EA	BENGALI DIGIT FOUR
009EB	BENGALI DIGIT FIVE
009EC	BENGALI DIGIT SIX
009ED	BENGALI DIGIT SEVEN
009EE	BENGALI DIGIT EIGHT
009EF	BENGALI DIGIT NINE
009F0	BENGALI LETTER RA WITH MIDDLE DIAGONAL
009F1	BENGALI LETTER RA WITH LOWER DIAGONAL
009F2	BENGALI RUPEE MARK
009F3	BENGALI RUPEE SIGN
009F4	BENGALI CURRENCY NUMERATOR ONE
009F5	BENGALI CURRENCY NUMERATOR TWO
009F6	BENGALI CURRENCY NUMERATOR THREE
009F7	BENGALI CURRENCY NUMERATOR FOUR
009F8	BENGALI CURRENCY NUMERATOR ONE LESS THAN THE DENOMINATOR
009F9	BENGALI CURRENCY DENOMINATOR SIXTEEN
009FA	BENGALI ISSHAR
009FB	BENGALI GANDA MARK
00A01	GURMUKHI SIGN ADAK BINDI
00A02	GURMUKHI SIGN BINDI
00A03	GURMUKHI SIGN VISARGA
00A05	GURMUKHI LETTER A
00A06	GURMUKHI LETTER AA
00A07	GURMUKHI LETTER I
00A08	GURMUKHI LETTER II
00A09	GURMUKHI LETTER U
00A0A	GURMUKHI LETTER UU
00A0F	GURMUKHI LETTER EE
00A10	GURMUKHI LETTER AI
00A13	GURMUKHI LETTER OO
00A14	GURMUKHI LETTER AU
00A15	GURMUKHI LETTER KA
00A16	GURMUKHI LETTER KHA
00A17	GURMUKHI LETTER GA
00A18	GURMUKHI LETTER GHA
00A19	GURMUKHI LETTER NGA
00A1A	GURMUKHI LETTER CA
00A1B	GURMUKHI LETTER CHA
00A1C	GURMUKHI LETTER JA
00A1D	GURMUKHI LETTER JHA
00A1E	GURMUKHI LETTER NYA
00A1F	GURMUKHI LETTER TTA
00A20	GURMUKHI LETTER TTHA
00A21	GURMUKHI LETTER DDA
00A22	GURMUKHI LETTER DDHA
00A23	GURMUKHI LETTER NNA
00A24	GURMUKHI LETTER TA
00A25	GURMUKHI LETTER THA
00A26	GURMUKHI LETTER DA
00A27	GURMUKHI LETTER DHA
00A28	GURMUKHI LETTER NA
00A2A	GURMUKHI LETTER PA
00A2B	GURMUKHI LETTER PHA
00A2C	GURMUKHI LETTER BA
00A2D	GURMUKHI LETTER BHA
00A2E	GURMUKHI LETTER MA
00A2F	GURMUKHI LETTER YA
00A30	GURMUKHI LETTER RA
00A32	GURMUKHI LETTER LA
00A33	GURMUKHI LETTER LLA
00A35	GURMUKHI LETTER VA
00A36	GURMUKHI LETTER SHA
00A38	GURMUKHI LETTER SA
00A39	GURMUKHI LETTER HA
00A3C	GURMUKHI SIGN NUKTA
00A3E	GURMUKHI VOWEL SIGN AA
00A3F	GURMUKHI VOWEL SIGN I
00A40	GURMUKHI VOWEL SIGN II
00A41	GURMUKHI VOWEL SIGN U
00A42	GURMUKHI VOWEL SIGN UU
00A47	GURMUKHI VOWEL SIGN EE
00A48	GURMUKHI VOWEL SIGN AI
00A4B	GURMUKHI VOWEL SIGN OO
00A4C	GURMUKHI VOWEL SIGN AU
00A4D	GURMUKHI SIGN VIRAMA
00A51	GURMUKHI SIGN UDAAT
00A59	GURMUKHI LETTER KHHA
00A5A	GURMUKHI LETTER GHHA
00A5B	GURMUKHI LETTER ZA
00A5C	GURMUKHI LETTER RRA
00A5E	GURMUKHI LETTER FA
00A66	GURMUKHI DIGIT ZERO
00A67	GURMUKHI DIGIT ONE
00A68	GURMUKHI DIGIT TWO
00A69	GURMUKHI DIGIT THREE
00A6A	GURMUKHI DIGIT FOUR
00A6B	GURMUKHI DIGIT FIVE
00A6C	GURMUKHI DIGIT SIX
00A6D	GURMUKHI DIGIT SEVEN
00A6E	GURMUKHI DIGIT EIGHT
00A6F	GURMUKHI DIGIT NINE
00A70	GURMUKHI TIPPI
00A71	GURMUKHI ADDAK
00A72	GURMUKHI IRI
00A73	GURMUKHI URA
00A74	GURMUKHI EK ONKAR
00A75	GURMUKHI SIGN YAKASH
00A81	GUJARATI SIGN CANDRABINDU
00A82	GUJARATI SIGN ANUSVARA
00A83	GUJARATI SIGN VISARGA
00A85	GUJARATI LETTER A
00A86	GUJARATI LETTER AA
00A87	GUJARATI LETTER I
00A88	GUJARATI LETTER II
00A89	GUJARATI LETTER U
00A8A	GUJARATI LETTER UU
00A8B	GUJARATI LETTER VOCALIC R
00A8C	GUJARATI LETTER VOCALIC L
00A8D	GUJARATI VOWEL CANDRA E
00A8F	GUJARATI LETTER E
00A90	GUJARATI LETTER AI
00A91	GUJARATI VOWEL CANDRA O
00A93	GUJARATI LETTER O
00A94	GUJARATI LETTER AU
00A95	GUJARATI LETTER KA
00A96	GUJARATI LETTER KHA
00A97	GUJARATI LETTER GA
00A98	GUJARATI LETTER GHA
00A99	GUJARATI LETTER NGA
00A9A	GUJARATI LETTER CA
00A9B	GUJARATI LETTER CHA
00A9C	GUJARATI LETTER JA
00A9D	GUJARATI LETTER JHA
00A9E	GUJARATI LETTER NYA
00A9F	GUJARATI LETTER TTA
00AA0	GUJARATI LETTER TTHA
00AA1	GUJARATI LETTER DDA
00AA2	GUJARATI LETTER DDHA
00AA3	GUJARATI LETTER NNA
00AA4	GUJARATI LETTER TA
00AA5	GUJARATI LETTER THA
00AA6	GUJARATI LETTER DA
00AA7	GUJARATI LETTER DHA
00AA8	GUJARATI LETTER NA
00AAA	GUJARATI LETTER PA
00AAB	GUJARATI LETTER PHA
00AAC	GUJARATI LETTER BA
00AAD	GUJARATI LETTER BHA
00AAE	GUJARATI LETTER MA
00AAF	GUJARATI LETTER YA
00AB0	GUJARATI LETTER RA
00AB2	GUJARATI LETTER LA
00AB3	GUJARATI LETTER LLA
00AB5	GUJARATI LETTER VA
00AB6	GUJARATI LETTER SHA
00AB7	GUJARATI LETTER SSA
00AB8	GUJARATI LETTER SA
00AB9	GUJARATI LETTER HA
00ABC	GUJARATI SIGN NUKTA
00ABD	GUJARATI SIGN AVAGRAHA
00ABE	GUJARATI VOWEL SIGN AA
00ABF	GUJARATI VOWEL SIGN I
00AC0	GUJARATI VOWEL SIGN II
00AC1	GUJARATI VOWEL SIGN U
00AC2	GUJARATI VOWEL SIGN UU
00AC3	GUJARATI VOWEL SIGN VOCALIC R
00AC4	GUJARATI VOWEL SIGN VOCALIC RR
00AC5	GUJARATI VOWEL SIGN CANDRA E
00AC7	GUJARATI VOWEL SIGN E
00AC8	GUJARATI VOWEL SIGN AI
00AC9	GUJARATI VOWEL SIGN CANDRA O
00ACB	GUJARATI VOWEL SIGN O
00ACC	GUJARATI VOWEL SIGN AU
00ACD	GUJARATI SIGN VIRAMA
00AD0	GUJARATI OM
00AE0	GUJARATI LETTER VOCALIC RR
00AE1	GUJARATI LETTER VOCALIC LL
00AE2	GUJARATI VOWEL SIGN VOCALIC L
00AE3	GUJARATI VOWEL SIGN VOCALIC LL
00AE6	GUJARATI DIGIT ZERO
00AE7	GUJARATI DIGIT ONE
00AE8	GUJARATI DIGIT TWO
00AE9	GUJARATI DIGIT THREE
00AEA	GUJARATI DIGIT FOUR
00AEB	GUJARATI DIGIT FIVE
00AEC	GUJARATI DIGIT SIX
00AED	GUJARATI DIGIT SEVEN
00AEE	GUJARATI DIGIT EIGHT
00AEF	GUJARATI DIGIT NINE
00AF0	GUJARATI ABBREVIATION SIGN
00AF1	GUJARATI RUPEE SIGN
00AF9	GUJARATI LETTER ZHA
00B01	ORIYA SIGN CANDRABINDU
00B02	ORIYA SIGN ANUSVARA
00B03	ORIYA SIGN VISARGA
00B05	ORIYA LETTER A
00B06	ORIYA LETTER AA
00B07	ORIYA LETTER I
00B08	ORIYA LETTER II
00B09	ORIYA LETTER U
00B0A	ORIYA LETTER UU
00B0B	ORIYA LETTER VOCALIC R
00B0C	ORIYA LETTER VOCALIC L
00B0F	ORIYA LETTER E
00B10	ORIYA LETTER AI
00B13	ORIYA LETTER O
00B14	ORIYA LETTER AU
00B15	ORIYA LETTER KA
00B16	ORIYA LETTER KHA
00B17	ORIYA LETTER GA
00B18	ORIYA LETTER GHA
00B19	ORIYA LETTER NGA
00B1A	ORIYA LETTER CA
00B1B	ORIYA LETTER CHA
00B1C	ORIYA LETTER JA
00B1D	ORIYA LETTER JHA
00B1E	ORIYA LETTER NYA
00B1F	ORIYA LETTER TTA
00B20	ORIYA LETTER TTHA
00B21	ORIYA LETTER DDA
00B22	ORIYA LETTER DDHA
00B23	ORIYA LETTER NNA
00B24	ORIYA LETTER TA
00B25	ORIYA LETTER THA
00B26	ORIYA LETTER DA
00B27	ORIYA LETTER DHA
00B28	ORIYA LETTER NA
00B2A	ORIYA LETTER PA
00B2B	ORIYA LETTER PHA
00B2C	ORIYA LETTER BA
00B2D	ORIYA LETTER BHA
00B2E	ORIYA LETTER MA
00B2F	ORIYA LETTER YA
00B30	ORIYA LETTER RA
00B32	ORIYA LETTER LA
00B33	ORIYA LETTER LLA
00B35	ORIYA LETTER VA
00B36	ORIYA LETTER SHA
00B37	ORIYA LETTER SSA
00B38	ORIYA LETTER SA
00B39	ORIYA LETTER HA
00B3C	ORIYA SIGN NUKTA
00B3D	ORIYA SIGN AVAGRAHA
00B3E	ORIYA VOWEL SIGN AA
00B3F	ORIYA VOWEL SIGN I
00B40	ORIYA VOWEL SIGN II
00B41	ORIYA VOWEL SIGN U
00B42	ORIYA VOWEL SIGN UU
00B43	ORIYA VOWEL SIGN VOCALIC R
00B44	ORIYA VOWEL SIGN VOCALIC RR
00B47	ORIYA VOWEL SIGN E
00B48	ORIYA VOWEL SIGN AI
00B4B	ORIYA VOWEL SIGN O
00B4C	ORIYA VOWEL SIGN AU
00B4D	ORIYA SIGN VIRAMA
00B56	ORIYA AI LENGTH MARK
00B57	ORIYA AU LENGTH MARK
00B5C	ORIYA LETTER RRA
00B5D	ORIYA LETTER RHA
00B5F	ORIYA LETTER YYA
00B60	ORIYA LETTER VOCALIC RR
00B61	ORIYA LETTER VOCALIC LL
00B62	ORIYA VOWEL SIGN VOCALIC L
00B63	ORIYA VOWEL SIGN VOCALIC LL
00B66	ORIYA DIGIT ZERO
00B67	ORIYA DIGIT ONE
00B68	ORIYA DIGIT TWO
00B69	ORIYA DIGIT THREE
00B6A	ORIYA DIGIT FOUR
00B6B	ORIYA DIGIT FIVE
00B6C	ORIYA DIGIT SIX
00B6D	ORIYA DIGIT SEVEN
00B6E	ORIYA DIGIT EIGHT
00B6F	ORIYA DIGIT NINE
00B70	ORIYA ISSHAR
00B71	ORIYA LETTER WA
00B72	ORIYA FRACTION ONE QUARTER
00B73	ORIYA FRACTION ONE HALF
00B74	ORIYA FRACTION THREE QUARTERS
00B75	ORIYA FRACTION ONE SIXTEENTH
00B76	ORIYA FRACTION ONE EIGHTH
00B77	ORIYA FRACTION THREE SIXTEENTHS
00B82	TAMIL SIGN ANUSVARA
00B83	TAMIL SIGN VISARGA
00B85	TAMIL LETTER A
00B86	TAMIL LETTER AA
00B87	TAMIL LETTER I
00B88	TAMIL LETTER II
00B89	TAMIL LETTER U
00B8A	TAMIL LETTER UU
00B8E	TAMIL LETTER E
00B8F	TAMIL LETTER EE
00B90	TAMIL LETTER AI
00B92	TAMIL LETTER O
00B93	TAMIL LETTER OO
00B94	TAMIL LETTER AU
00B95	TAMIL LETTER KA
00B99	TAMIL LETTER NGA
00B9A	TAMIL LETTER CA
00B9C	TAMIL LETTER JA
00B9E	TAMIL LETTER NYA
00B9F	TAMIL LETTER TTA
00BA3	TAMIL LETTER NNA
00BA4	TAMIL LETTER TA
00BA8	TAMIL LETTER NA
00BA9	TAMIL LETTER NNNA
00BAA	TAMIL LETTER PA
00BAE	TAMIL LETTER MA
00BAF	TAMIL LETTER YA
00BB0	TAMIL LETTER RA
00BB1	TAMIL LETTER RRA
00BB2	TAMIL LETTER LA
00BB3	TAMIL LETTER LLA
00BB4	TAMIL LETTER LLLA
00BB5	TAMIL LETTER VA
00BB6	TAMIL LETTER SHA
00BB7	TAMIL LETTER SSA
00BB8	TAMIL LETTER SA
00BB9	TAMIL LETTER HA
00BBE	TAMIL VOWEL SIGN AA
00BBF	TAMIL VOWEL SIGN I
00BC0	TAMIL VOWEL SIGN II
00BC1	TAMIL VOWEL SIGN U
00BC2	TAMIL VOWEL SIGN UU
00BC6	TAMIL VOWEL SIGN E
00BC7	TAMIL VOWEL SIGN EE
00BC8	TAMIL VOWEL SIGN AI
00BCA	TAMIL VOWEL SIGN O
00BCB	TAMIL VOWEL SIGN OO
00BCC	TAMIL VOWEL SIGN AU
00BCD	TAMIL SIGN VIRAMA
00BD0	TAMIL OM
00BD7	TAMIL AU LENGTH MARK
00BE6	TAMIL DIGIT ZERO
00BE7	TAMIL DIGIT ONE
00BE8	TAMIL DIGIT TWO
00BE9	TAMIL DIGIT THREE
00BEA	TAMIL DIGIT FOUR
00BEB	TAMIL DIGIT FIVE
00BEC	TAMIL DIGIT SIX
00BED	TAMIL DIGIT SEVEN
00BEE	TAMIL DIGIT EIGHT
00BEF	TAMIL DIGIT NINE
00BF0	TAMIL NUMBER TEN
00BF1	TAMIL NUMBER ONE HUNDRED
00BF2	TAMIL NUMBER ONE THOUSAND
00BF3	TAMIL DAY SIGN
00BF4	TAMIL MONTH SIGN
00BF5	TAMIL YEAR SIGN
00BF6	TAMIL DEBIT SIGN
00BF7	TAMIL CREDIT SIGN
00BF8	TAMIL AS ABOVE SIGN
00BF9	TAMIL RUPEE SIGN
00BFA	TAMIL NUMBER SIGN
00C00	TELUGU SIGN COMBINING CANDRABINDU ABOVE
00C01	TELUGU SIGN CANDRABINDU
00C02	TELUGU SIGN ANUSVARA
00C03	TELUGU SIGN VISARGA
00C05	TELUGU LETTER A
00C06	TELUGU LETTER AA
00C07	TELUGU LETTER I
00C08	TELUGU LETTER II
00C09	TELUGU LETTER U
00C0A	TELUGU LETTER UU
00C0B	TELUGU LETTER VOCALIC R
00C0C	TELUGU LETTER VOCALIC L
00C0E	TELUGU LETTER E
00C0F	TELUGU LETTER EE
00C10	TELUGU LETTER AI
00C12	TELUGU LETTER O
00C13	TELUGU LETTER OO
00C14	TELUGU LETTER AU
00C15	TELUGU LETTER KA
00C16	TELUGU LETTER KHA
00C17	TELUGU LETTER GA
00C18	TELUGU LETTER GHA
00C19	TELUGU LETTER NGA
00C1A	TELUGU LETTER CA
00C1B	TELUGU LETTER CHA
00C1C	TELUGU LETTER JA
00C1D	TELUGU LETTER JHA
00C1E	TELUGU LETTER NYA
00C1F	TELUGU LETTER TTA
00C20	TELUGU LETTER TTHA
00C21	TELUGU LETTER DDA
00C22	TELUGU LETTER DDHA
00C23	TELUGU LETTER NNA
00C24	TELUGU LETTER TA
00C25	TELUGU LETTER THA
00C26	TELUGU LETTER DA
00C27	TELUGU LETTER DHA
00C28	TELUGU LETTER NA
00C2A	TELUGU LETTER PA
00C2B	TELUGU LETTER PHA
00C2C	TELUGU LETTER BA
00C2D	TELUGU LETTER BHA
00C2E	TELUGU LETTER MA
00C2F	TELUGU LETTER YA
00C30	TELUGU LETTER RA
00C31	TELUGU LETTER RRA
00C32	TELUGU LETTER LA
00C33	TELUGU LETTER LLA
00C34	TELUGU LETTER LLLA
00C35	TELUGU LETTER VA
00C36	TELUGU LETTER SHA
00C37	TELUGU LETTER SSA
00C38	TELUGU LETTER SA
00C39	TELUGU LETTER HA
00C3D	TELUGU SIGN AVAGRAHA
00C3E	TELUGU VOWEL SIGN AA
00C3F	TELUGU VOWEL SIGN I
00C40	TELUGU VOWEL SIGN II
00C41	TELUGU VOWEL SIGN U
00C42	TELUGU VOWEL SIGN UU
00C43	TELUGU VOWEL SIGN VOCALIC R
00C44	TELUGU VOWEL SIGN VOCALIC RR
00C46	TELUGU VOWEL SIGN E
00C47	TELUGU VOWEL SIGN EE
00C48	TELUGU VOWEL SIGN AI
00C4A	TELUGU VOWEL SIGN O
00C4B	TELUGU VOWEL SIGN OO
00C4C	TELUGU VOWEL SIGN AU
00C4D	TELUGU SIGN VIRAMA
00C55	TELUGU LENGTH MARK
00C56	TELUGU AI LENGTH MARK
00C58	TELUGU LETTER TSA
00C59	TELUGU LETTER DZA
00C5A	TELUGU LETTER RRRA
00C60	TELUGU LETTER VOCALIC RR
00C61	TELUGU LETTER VOCALIC LL
00C62	TELUGU VOWEL SIGN VOCALIC L
00C63	TELUGU VOWEL SIGN VOCALIC LL
00C66	TELUGU DIGIT ZERO
00C67	TELUGU DIGIT ONE
00C68	TELUGU DIGIT TWO
00C69	TELUGU DIGIT THREE
00C6A	TELUGU DIGIT FOUR
00C6B	TELUGU DIGIT FIVE
00C6C	TELUGU DIGIT SIX
00C6D	TELUGU DIGIT SEVEN
00C6E	TELUGU DIGIT EIGHT
00C6F	TELUGU DIGIT NINE
00C78	TELUGU FRACTION DIGIT ZERO FOR ODD POWERS OF FOUR
00C79	TELUGU FRACTION DIGIT ONE FOR ODD POWERS OF FOUR
00C7A	TELUGU FRACTION DIGIT TWO FOR ODD POWERS OF FOUR
00C7B	TELUGU FRACTION DIGIT THREE FOR ODD POWERS OF FOUR
00C7C	TELUGU FRACTION DIGIT ONE FOR EVEN POWERS OF FOUR
00C7D	TELUGU FRACTION DIGIT TWO FOR EVEN POWERS OF FOUR
00C7E	TELUGU FRACTION DIGIT THREE FOR EVEN POWERS OF FOUR
00C7F	TELUGU SIGN TUUMU
00C81	KANNADA SIGN CANDRABINDU
00C82	KANNADA SIGN ANUSVARA
00C83	KANNADA SIGN VISARGA
00C85	KANNADA LETTER A
00C86	KANNADA LETTER AA
00C87	KANNADA LETTER I
00C88	KANNADA LETTER II
00C89	KANNADA LETTER U
00C8A	KANNADA LETTER UU
00C8B	KANNADA LETTER VOCALIC R
00C8C	KANNADA LETTER VOCALIC L
00C8E	KANNADA LETTER E
00C8F	KANNADA LETTER EE
00C90	KANNADA LETTER AI
00C92	KANNADA LETTER O
00C93	KANNADA LETTER OO
00C94	KANNADA LETTER AU
00C95	KANNADA LETTER KA
00C96	KANNADA LETTER KHA
00C97	KANNADA LETTER GA
00C98	KANNADA LETTER GHA
00C99	KANNADA LETTER NGA
00C9A	KANNADA LETTER CA
00C9B	KANNADA LETTER CHA
00C9C	KANNADA LETTER JA
00C9D	KANNADA LETTER JHA
00C9E	KANNADA LETTER NYA
00C9F	KANNADA LETTER TTA
00CA0	KANNADA LETTER TTHA
00CA1	KANNADA LETTER DDA
00CA2	KANNADA LETTER DDHA
00CA3	KANNADA LETTER NNA
00CA4	KANNADA LETTER TA
00CA5	KANNADA LETTER THA
00CA6	KANNADA LETTER DA
00CA7	KANNADA LETTER DHA
00CA8	KANNADA LETTER NA
00CAA	KANNADA LETTER PA
00CAB	KANNADA LETTER PHA
00CAC	KANNADA LETTER BA
00CAD	KANNADA LETTER BHA
00CAE	KANNADA LETTER MA
00CAF	KANNADA LETTER YA
00CB0	KANNADA LETTER RA
00CB1	KANNADA LETTER RRA
00CB2	KANNADA LETTER LA
00CB3	KANNADA LETTER LLA
00CB5	KANNADA LETTER VA
00CB6	KANNADA LETTER SHA
00CB7	KANNADA LETTER SSA
00CB8	KANNADA LETTER SA
00CB9	KANNADA LETTER HA
00CBC	KANNADA SIGN NUKTA
00CBD	KANNADA SIGN AVAGRAHA
00CBE	KANNADA VOWEL SIGN AA
00CBF	KANNADA VOWEL SIGN I
00CC0	KANNADA VOWEL SIGN II
00CC1	KANNADA VOWEL SIGN U
00CC2	KANNADA VOWEL SIGN UU
00CC3	KANNADA VOWEL SIGN VOCALIC R
00CC4	KANNADA VOWEL SIGN VOCALIC RR
00CC6	KANNADA VOWEL SIGN E
00CC7	KANNADA VOWEL SIGN EE
00CC8	KANNADA VOWEL SIGN AI
00CCA	KANNADA VOWEL SIGN O
00CCB	KANNADA VOWEL SIGN OO
00CCC	KANNADA VOWEL SIGN AU
00CCD	KANNADA SIGN VIRAMA
00CD5	KANNADA LENGTH MARK
00CD6	KANNADA AI LENGTH MARK
00CDE	KANNADA LETTER LLLA
00CDE	KANNADA LETTER FA
00CE0	KANNADA LETTER VOCALIC RR
00CE1	KANNADA LETTER VOCALIC LL
00CE2	KANNADA VOWEL SIGN VOCALIC L
00CE3	KANNADA VOWEL SIGN VOCALIC LL
00CE6	KANNADA DIGIT ZERO
00CE7	KANNADA DIGIT ONE
00CE8	KANNADA DIGIT TWO
00CE9	KANNADA DIGIT THREE
00CEA	KANNADA DIGIT FOUR
00CEB	KANNADA DIGIT FIVE
00CEC	KANNADA DIGIT SIX
00CED	KANNADA DIGIT SEVEN
00CEE	KANNADA DIGIT EIGHT
00CEF	KANNADA DIGIT NINE
00CF1	KANNADA SIGN JIHVAMULIYA
00CF2	KANNADA SIGN UPADHMANIYA
00D01	MALAYALAM SIGN CANDRABINDU
00D02	MALAYALAM SIGN ANUSVARA
00D03	MALAYALAM SIGN VISARGA
00D05	MALAYALAM LETTER A
00D06	MALAYALAM LETTER AA
00D07	MALAYALAM LETTER I
00D08	MALAYALAM LETTER II
00D09	MALAYALAM LETTER U
00D0A	MALAYALAM LETTER UU
00D0B	MALAYALAM LETTER VOCALIC R
00D0C	MALAYALAM LETTER VOCALIC L
00D0E	MALAYALAM LETTER E
00D0F	MALAYALAM LETTER EE
00D10	MALAYALAM LETTER AI
00D12	MALAYALAM LETTER O
00D13	MALAYALAM LETTER OO
00D14	MALAYALAM LETTER AU
00D15	MALAYALAM LETTER KA
00D16	MALAYALAM LETTER KHA
00D17	MALAYALAM LETTER GA
00D18	MALAYALAM LETTER GHA
00D19	MALAYALAM LETTER NGA
00D1A	MALAYALAM LETTER CA
00D1B	MALAYALAM LETTER CHA
00D1C	MALAYALAM LETTER JA
00D1D	MALAYALAM LETTER JHA
00D1E	MALAYALAM LETTER NYA
00D1F	MALAYALAM LETTER TTA
00D20	MALAYALAM LETTER TTHA
00D21	MALAYALAM LETTER DDA
00D22	MALAYALAM LETTER DDHA
00D23	MALAYALAM LETTER NNA
00D24	MALAYALAM LETTER TA
00D25	MALAYALAM LETTER THA
00D26	MALAYALAM LETTER DA
00D27	MALAYALAM LETTER DHA
00D28	MALAYALAM LETTER NA
00D29	MALAYALAM LETTER NNNA
00D2A	MALAYALAM LETTER PA
00D2B	MALAYALAM LETTER PHA
00D2C	MALAYALAM LETTER BA
00D2D	MALAYALAM LETTER BHA
00D2E	MALAYALAM LETTER MA
00D2F	MALAYALAM LETTER YA
00D30	MALAYALAM LETTER RA
00D31	MALAYALAM LETTER RRA
00D32	MALAYALAM LETTER LA
00D33	MALAYALAM LETTER LLA
00D34	MALAYALAM LETTER LLLA
00D35	MALAYALAM LETTER VA
00D36	MALAYALAM LETTER SHA
00D37	MALAYALAM LETTER SSA
00D38	MALAYALAM LETTER SA
00D39	MALAYALAM LETTER HA
00D3A	MALAYALAM LETTER TTTA
00D3D	MALAYALAM SIGN AVAGRAHA
00D3E	MALAYALAM VOWEL SIGN AA
00D3F	MALAYALAM VOWEL SIGN I
00D40	MALAYALAM VOWEL SIGN II
00D41	MALAYALAM VOWEL SIGN U
00D42	MALAYALAM VOWEL SIGN UU
00D43	MALAYALAM VOWEL SIGN VOCALIC R
00D44	MALAYALAM VOWEL SIGN VOCALIC RR
00D46	MALAYALAM VOWEL SIGN E
00D47	MALAYALAM VOWEL SIGN EE
00D48	MALAYALAM VOWEL SIGN AI
00D4A	MALAYALAM VOWEL SIGN O
00D4B	MALAYALAM VOWEL SIGN OO
00D4C	MALAYALAM VOWEL SIGN AU
00D4D	MALAYALAM SIGN VIRAMA
00D4E	MALAYALAM LETTER DOT REPH
00D57	MALAYALAM AU LENGTH MARK
00D5F	MALAYALAM LETTER ARCHAIC II
00D60	MALAYALAM LETTER VOCALIC RR
00D61	MALAYALAM LETTER VOCALIC LL
00D62	MALAYALAM VOWEL SIGN VOCALIC L
00D63	MALAYALAM VOWEL SIGN VOCALIC LL
00D66	MALAYALAM DIGIT ZERO
00D67	MALAYALAM DIGIT ONE
00D68	MALAYALAM DIGIT TWO
00D69	MALAYALAM DIGIT THREE
00D6A	MALAYALAM DIGIT FOUR
00D6B	MALAYALAM DIGIT FIVE
00D6C	MALAYALAM DIGIT SIX
00D6D	MALAYALAM DIGIT SEVEN
00D6E	MALAYALAM DIGIT EIGHT
00D6F	MALAYALAM DIGIT NINE
00D70	MALAYALAM NUMBER TEN
00D71	MALAYALAM NUMBER ONE HUNDRED
00D72	MALAYALAM NUMBER ONE THOUSAND
00D73	MALAYALAM FRACTION ONE QUARTER
00D74	MALAYALAM FRACTION ONE HALF
00D75	MALAYALAM FRACTION THREE QUARTERS
00D79	MALAYALAM DATE MARK
00D7A	MALAYALAM LETTER CHILLU NN
00D7B	MALAYALAM LETTER CHILLU N
00D7C	MALAYALAM LETTER CHILLU RR
00D7D	MALAYALAM LETTER CHILLU L
00D7E	MALAYALAM LETTER CHILLU LL
00D7F	MALAYALAM LETTER CHILLU K
00D82	SINHALA SIGN ANUSVARAYA
00D83	SINHALA SIGN VISARGAYA
00D85	SINHALA LETTER AYANNA
00D86	SINHALA LETTER AAYANNA
00D87	SINHALA LETTER AEYANNA
00D88	SINHALA LETTER AEEYANNA
00D89	SINHALA LETTER IYANNA
00D8A	SINHALA LETTER IIYANNA
00D8B	SINHALA LETTER UYANNA
00D8C	SINHALA LETTER UUYANNA
00D8D	SINHALA LETTER IRUYANNA
00D8E	SINHALA LETTER IRUUYANNA
00D8F	SINHALA LETTER ILUYANNA
00D90	SINHALA LETTER ILUUYANNA
00D91	SINHALA LETTER EYANNA
00D92	SINHALA LETTER EEYANNA
00D93	SINHALA LETTER AIYANNA
00D94	SINHALA LETTER OYANNA
00D95	SINHALA LETTER OOYANNA
00D96	SINHALA LETTER AUYANNA
00D9A	SINHALA LETTER ALPAPRAANA KAYANNA
00D9B	SINHALA LETTER MAHAAPRAANA KAYANNA
00D9C	SINHALA LETTER ALPAPRAANA GAYANNA
00D9D	SINHALA LETTER MAHAAPRAANA GAYANNA
00D9E	SINHALA LETTER KANTAJA NAASIKYAYA
00D9F	SINHALA LETTER SANYAKA GAYANNA
00DA0	SINHALA LETTER ALPAPRAANA CAYANNA
00DA1	SINHALA LETTER MAHAAPRAANA CAYANNA
00DA2	SINHALA LETTER ALPAPRAANA JAYANNA
00DA3	SINHALA LETTER MAHAAPRAANA JAYANNA
00DA4	SINHALA LETTER TAALUJA NAASIKYAYA
00DA5	SINHALA LETTER TAALUJA SANYOOGA NAAKSIKYAYA
00DA6	SINHALA LETTER SANYAKA JAYANNA
00DA7	SINHALA LETTER ALPAPRAANA TTAYANNA
00DA8	SINHALA LETTER MAHAAPRAANA TTAYANNA
00DA9	SINHALA LETTER ALPAPRAANA DDAYANNA
00DAA	SINHALA LETTER MAHAAPRAANA DDAYANNA
00DAB	SINHALA LETTER MUURDHAJA NAYANNA
00DAC	SINHALA LETTER SANYAKA DDAYANNA
00DAD	SINHALA LETTER ALPAPRAANA TAYANNA
00DAE	SINHALA LETTER MAHAAPRAANA TAYANNA
00DAF	SINHALA LETTER ALPAPRAANA DAYANNA
00DB0	SINHALA LETTER MAHAAPRAANA DAYANNA
00DB1	SINHALA LETTER DANTAJA NAYANNA
00DB3	SINHALA LETTER SANYAKA DAYANNA
00DB4	SINHALA LETTER ALPAPRAANA PAYANNA
00DB5	SINHALA LETTER MAHAAPRAANA PAYANNA
00DB6	SINHALA LETTER ALPAPRAANA BAYANNA
00DB7	SINHALA LETTER MAHAAPRAANA BAYANNA
00DB8	SINHALA LETTER MAYANNA
00DB9	SINHALA LETTER AMBA BAYANNA
00DBA	SINHALA LETTER YAYANNA
00DBB	SINHALA LETTER RAYANNA
00DBD	SINHALA LETTER DANTAJA LAYANNA
00DC0	SINHALA LETTER VAYANNA
00DC1	SINHALA LETTER TAALUJA SAYANNA
00DC2	SINHALA LETTER MUURDHAJA SAYANNA
00DC3	SINHALA LETTER DANTAJA SAYANNA
00DC4	SINHALA LETTER HAYANNA
00DC5	SINHALA LETTER MUURDHAJA LAYANNA
00DC6	SINHALA LETTER FAYANNA
00DCA	SINHALA SIGN AL-LAKUNA
00DCF	SINHALA VOWEL SIGN AELA-PILLA
00DD0	SINHALA VOWEL SIGN KETTI AEDA-PILLA
00DD1	SINHALA VOWEL SIGN DIGA AEDA-PILLA
00DD2	SINHALA VOWEL SIGN KETTI IS-PILLA
00DD3	SINHALA VOWEL SIGN DIGA IS-PILLA
00DD4	SINHALA VOWEL SIGN KETTI PAA-PILLA
00DD6	SINHALA VOWEL SIGN DIGA PAA-PILLA
00DD8	SINHALA VOWEL SIGN GAETTA-PILLA
00DD9	SINHALA VOWEL SIGN KOMBUVA
00DDA	SINHALA VOWEL SIGN DIGA KOMBUVA
00DDB	SINHALA VOWEL SIGN KOMBU DEKA
00DDC	SINHALA VOWEL SIGN KOMBUVA HAA AELA-PILLA
00DDD	SINHALA VOWEL SIGN KOMBUVA HAA DIGA AELA-PILLA
00DDE	SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA
00DDF	SINHALA VOWEL SIGN GAYANUKITTA
00DE6	SINHALA LITH DIGIT ZERO
00DE7	SINHALA LITH DIGIT ONE
00DE8	SINHALA LITH DIGIT TWO
00DE9	SINHALA LITH DIGIT THREE
00DEA	SINHALA LITH DIGIT FOUR
00DEB	SINHALA LITH DIGIT FIVE
00DEC	SINHALA LITH DIGIT SIX
00DED	SINHALA LITH DIGIT SEVEN
00DEE	SINHALA LITH DIGIT EIGHT
00DEF	SINHALA LITH DIGIT NINE
00DF2	SINHALA VOWEL SIGN DIGA GAETTA-PILLA
00DF3	SINHALA VOWEL SIGN DIGA GAYANUKITTA
00DF4	SINHALA PUNCTUATION KUNDDALIYA
00E01	THAI CHARACTER KO KAI
00E02	THAI CHARACTER KHO KHAI
00E03	THAI CHARACTER KHO KHUAT
00E04	THAI CHARACTER KHO KHWAI
00E05	THAI CHARACTER KHO KHON
00E06	THAI CHARACTER KHO RAKHANG
00E07	THAI CHARACTER NGO NGU
00E08	THAI CHARACTER CHO CHAN
00E09	THAI CHARACTER CHO CHING
00E0A	THAI CHARACTER CHO CHANG
00E0B	THAI CHARACTER SO SO
00E0C	THAI CHARACTER CHO CHOE
00E0D	THAI CHARACTER YO YING
00E0E	THAI CHARACTER DO CHADA
00E0F	THAI CHARACTER TO PATAK
00E10	THAI CHARACTER THO THAN
00E11	THAI CHARACTER THO NANGMONTHO
00E12	THAI CHARACTER THO PHUTHAO
00E13	THAI CHARACTER NO NEN
00E14	THAI CHARACTER DO DEK
00E15	THAI CHARACTER TO TAO
00E16	THAI CHARACTER THO THUNG
00E17	THAI CHARACTER THO THAHAN
00E18	THAI CHARACTER THO THONG
00E19	THAI CHARACTER NO NU
00E1A	THAI CHARACTER BO BAIMAI
00E1B	THAI CHARACTER PO PLA
00E1C	THAI CHARACTER PHO PHUNG
00E1D	THAI CHARACTER FO FA
00E1E	THAI CHARACTER PHO PHAN
00E1F	THAI CHARACTER FO FAN
00E20	THAI CHARACTER PHO SAMPHAO
00E21	THAI CHARACTER MO MA
00E22	THAI CHARACTER YO YAK
00E23	THAI CHARACTER RO RUA
00E24	THAI CHARACTER RU
00E25	THAI CHARACTER LO LING
00E26	THAI CHARACTER LU
00E27	THAI CHARACTER WO WAEN
00E28	THAI CHARACTER SO SALA
00E29	THAI CHARACTER SO RUSI
00E2A	THAI CHARACTER SO SUA
00E2B	THAI CHARACTER HO HIP
00E2C	THAI CHARACTER LO CHULA
00E2D	THAI CHARACTER O ANG
00E2E	THAI CHARACTER HO NOKHUK
00E2F	THAI CHARACTER PAIYANNOI
00E30	THAI CHARACTER SARA A
00E31	THAI CHARACTER MAI HAN-AKAT
00E32	THAI CHARACTER SARA AA
00E33	THAI CHARACTER SARA AM
00E34	THAI CHARACTER SARA I
00E35	THAI CHARACTER SARA II
00E36	THAI CHARACTER SARA UE
00E37	THAI CHARACTER SARA UEE
00E38	THAI CHARACTER SARA U
00E39	THAI CHARACTER SARA UU
00E3A	THAI CHARACTER PHINTHU
00E3F	THAI CURRENCY SYMBOL BAHT
00E40	THAI CHARACTER SARA E
00E41	THAI CHARACTER SARA AE
00E42	THAI CHARACTER SARA O
00E43	THAI CHARACTER SARA AI MAIMUAN
00E44	THAI CHARACTER SARA AI MAIMALAI
00E45	THAI CHARACTER LAKKHANGYAO
00E46	THAI CHARACTER MAIYAMOK
00E47	THAI CHARACTER MAITAIKHU
00E48	THAI CHARACTER MAI EK
00E49	THAI CHARACTER MAI THO
00E4A	THAI CHARACTER MAI TRI
00E4B	THAI CHARACTER MAI CHATTAWA
00E4C	THAI CHARACTER THANTHAKHAT
00E4D	THAI CHARACTER NIKHAHIT
00E4E	THAI CHARACTER YAMAKKAN
00E4F	THAI CHARACTER FONGMAN
00E50	THAI DIGIT ZERO
00E51	THAI DIGIT ONE
00E52	THAI DIGIT TWO
00E53	THAI DIGIT THREE
00E54	THAI DIGIT FOUR
00E55	THAI DIGIT FIVE
00E56	THAI DIGIT SIX
00E57	THAI DIGIT SEVEN
00E58	THAI DIGIT EIGHT
00E59	THAI DIGIT NINE
00E5A	THAI CHARACTER ANGKHANKHU
00E5B	THAI CHARACTER KHOMUT
00E81	LAO LETTER KO
00E82	LAO LETTER KHO SUNG
00E84	LAO LETTER KHO TAM
00E87	LAO LETTER NGO
00E88	LAO LETTER CO
00E8A	LAO LETTER SO TAM
00E8D	LAO LETTER NYO
00E94	LAO LETTER DO
00E95	LAO LETTER TO
00E96	LAO LETTER THO SUNG
00E97	LAO LETTER THO TAM
00E99	LAO LETTER NO
00E9A	LAO LETTER BO
00E9B	LAO LETTER PO
00E9C	LAO LETTER PHO SUNG
00E9D	LAO LETTER FO FON
00E9D	LAO LETTER FO TAM
00E9E	LAO LETTER PHO TAM
00E9F	LAO LETTER FO FAY
00E9F	LAO LETTER FO SUNG
00EA1	LAO LETTER MO
00EA2	LAO LETTER YO
00EA3	LAO LETTER RO
00EA3	LAO LETTER LO LING
00EA5	LAO LETTER LO
00EA5	LAO LETTER LO LOOT
00EA7	LAO LETTER WO
00EAA	LAO LETTER SO SUNG
00EAB	LAO LETTER HO SUNG
00EAD	LAO LETTER O
00EAE	LAO LETTER HO TAM
00EAF	LAO ELLIPSIS
00EB0	LAO VOWEL SIGN A
00EB1	LAO VOWEL SIGN MAI KAN
00EB2	LAO VOWEL SIGN AA
00EB3	LAO VOWEL SIGN AM
00EB4	LAO VOWEL SIGN I
00EB5	LAO VOWEL SIGN II
00EB6	LAO VOWEL SIGN Y
00EB7	LAO VOWEL SIGN YY
00EB8	LAO VOWEL SIGN U
00EB9	LAO VOWEL SIGN UU
00EBB	LAO VOWEL SIGN MAI KON
00EBC	LAO SEMIVOWEL SIGN LO
00EBD	LAO SEMIVOWEL SIGN NYO
00EC0	LAO VOWEL SIGN E
00EC1	LAO VOWEL SIGN EI
00EC2	LAO VOWEL SIGN O
00EC3	LAO VOWEL SIGN AY
00EC4	LAO VOWEL SIGN AI
00EC6	LAO KO LA
00EC8	LAO TONE MAI EK
00EC9	LAO TONE MAI THO
00ECA	LAO TONE MAI TI
00ECB	LAO TONE MAI CATAWA
00ECC	LAO CANCELLATION MARK
00ECD	LAO NIGGAHITA
00ED0	LAO DIGIT ZERO
00ED1	LAO DIGIT ONE
00ED2	LAO DIGIT TWO
00ED3	LAO DIGIT THREE
00ED4	LAO DIGIT FOUR
00ED5	LAO DIGIT FIVE
00ED6	LAO DIGIT SIX
00ED7	LAO DIGIT SEVEN
00ED8	LAO DIGIT EIGHT
00ED9	LAO DIGIT NINE
00EDC	LAO HO NO
00EDD	LAO HO MO
00EDE	LAO LETTER KHMU GO
00EDF	LAO LETTER KHMU NYO
00F00	TIBETAN SYLLABLE OM
00F01	TIBETAN MARK GTER YIG MGO TRUNCATED A
00F02	TIBETAN MARK GTER YIG MGO -UM RNAM BCAD MA
00F03	TIBETAN MARK GTER YIG MGO -UM GTER TSHEG MA
00F04	TIBETAN MARK INITIAL YIG MGO MDUN MA
00F05	TIBETAN MARK CLOSING YIG MGO SGAB MA
00F06	TIBETAN MARK CARET YIG MGO PHUR SHAD MA
00F07	TIBETAN MARK YIG MGO TSHEG SHAD MA
00F08	TIBETAN MARK SBRUL SHAD
00F09	TIBETAN MARK BSKUR YIG MGO
00F0A	TIBETAN MARK BKA- SHOG YIG MGO
00F0B	TIBETAN MARK INTERSYLLABIC TSHEG
00F0C	TIBETAN MARK DELIMITER TSHEG BSTAR
00F0D	TIBETAN MARK SHAD
00F0E	TIBETAN MARK NYIS SHAD
00F0F	TIBETAN MARK TSHEG SHAD
00F10	TIBETAN MARK NYIS TSHEG SHAD
00F11	TIBETAN MARK RIN CHEN SPUNGS SHAD
00F12	TIBETAN MARK RGYA GRAM SHAD
00F13	TIBETAN MARK CARET -DZUD RTAGS ME LONG CAN
00F14	TIBETAN MARK GTER TSHEG
00F15	TIBETAN LOGOTYPE SIGN CHAD RTAGS
00F16	TIBETAN LOGOTYPE SIGN LHAG RTAGS
00F17	TIBETAN ASTROLOGICAL SIGN SGRA GCAN -CHAR RTAGS
00F18	TIBETAN ASTROLOGICAL SIGN -KHYUD PA
00F19	TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS
00F1A	TIBETAN SIGN RDEL DKAR GCIG
00F1B	TIBETAN SIGN RDEL DKAR GNYIS
00F1C	TIBETAN SIGN RDEL DKAR GSUM
00F1D	TIBETAN SIGN RDEL NAG GCIG
00F1E	TIBETAN SIGN RDEL NAG GNYIS
00F1F	TIBETAN SIGN RDEL DKAR RDEL NAG
00F20	TIBETAN DIGIT ZERO
00F21	TIBETAN DIGIT ONE
00F22	TIBETAN DIGIT TWO
00F23	TIBETAN DIGIT THREE
00F24	TIBETAN DIGIT FOUR
00F25	TIBETAN DIGIT FIVE
00F26	TIBETAN DIGIT SIX
00F27	TIBETAN DIGIT SEVEN
00F28	TIBETAN DIGIT EIGHT
00F29	TIBETAN DIGIT NINE
00F2A	TIBETAN DIGIT HALF ONE
00F2B	TIBETAN DIGIT HALF TWO
00F2C	TIBETAN DIGIT HALF THREE
00F2D	TIBETAN DIGIT HALF FOUR
00F2E	TIBETAN DIGIT HALF FIVE
00F2F	TIBETAN DIGIT HALF SIX
00F30	TIBETAN DIGIT HALF SEVEN
00F31	TIBETAN DIGIT HALF EIGHT
00F32	TIBETAN DIGIT HALF NINE
00F33	TIBETAN DIGIT HALF ZERO
00F34	TIBETAN MARK BSDUS RTAGS
00F35	TIBETAN MARK NGAS BZUNG NYI ZLA
00F36	TIBETAN MARK CARET -DZUD RTAGS BZHI MIG CAN
00F37	TIBETAN MARK NGAS BZUNG SGOR RTAGS
00F38	TIBETAN MARK CHE MGO
00F39	TIBETAN MARK TSA -PHRU
00F3A	TIBETAN MARK GUG RTAGS GYON
00F3B	TIBETAN MARK GUG RTAGS GYAS
00F3C	TIBETAN MARK ANG KHANG GYON
00F3D	TIBETAN MARK ANG KHANG GYAS
00F3E	TIBETAN SIGN YAR TSHES
00F3F	TIBETAN SIGN MAR TSHES
00F40	TIBETAN LETTER KA
00F41	TIBETAN LETTER KHA
00F42	TIBETAN LETTER GA
00F43	TIBETAN LETTER GHA
00F44	TIBETAN LETTER NGA
00F45	TIBETAN LETTER CA
00F46	TIBETAN LETTER CHA
00F47	TIBETAN LETTER JA
00F49	TIBETAN LETTER NYA
00F4A	TIBETAN LETTER TTA
00F4B	TIBETAN LETTER TTHA
00F4C	TIBETAN LETTER DDA
00F4D	TIBETAN LETTER DDHA
00F4E	TIBETAN LETTER NNA
00F4F	TIBETAN LETTER TA
00F50	TIBETAN LETTER THA
00F51	TIBETAN LETTER DA
00F52	TIBETAN LETTER DHA
00F53	TIBETAN LETTER NA
00F54	TIBETAN LETTER PA
00F55	TIBETAN LETTER PHA
00F56	TIBETAN LETTER BA
00F57	TIBETAN LETTER BHA
00F58	TIBETAN LETTER MA
00F59	TIBETAN LETTER TSA
00F5A	TIBETAN LETTER TSHA
00F5B	TIBETAN LETTER DZA
00F5C	TIBETAN LETTER DZHA
00F5D	TIBETAN LETTER WA
00F5E	TIBETAN LETTER ZHA
00F5F	TIBETAN LETTER ZA
00F60	TIBETAN LETTER -A
00F61	TIBETAN LETTER YA
00F62	TIBETAN LETTER RA
00F63	TIBETAN LETTER LA
00F64	TIBETAN LETTER SHA
00F65	TIBETAN LETTER SSA
00F66	TIBETAN LETTER SA
00F67	TIBETAN LETTER HA
00F68	TIBETAN LETTER A
00F69	TIBETAN LETTER KSSA
00F6A	TIBETAN LETTER FIXED-FORM RA
00F6B	TIBETAN LETTER KKA
00F6C	TIBETAN LETTER RRA
00F71	TIBETAN VOWEL SIGN AA
00F72	TIBETAN VOWEL SIGN I
00F73	TIBETAN VOWEL SIGN II
00F74	TIBETAN VOWEL SIGN U
00F75	TIBETAN VOWEL SIGN UU
00F76	TIBETAN VOWEL SIGN VOCALIC R
00F77	TIBETAN VOWEL SIGN VOCALIC RR
00F78	TIBETAN VOWEL SIGN VOCALIC L
00F79	TIBETAN VOWEL SIGN VOCALIC LL
00F7A	TIBETAN VOWEL SIGN E
00F7B	TIBETAN VOWEL SIGN EE
00F7C	TIBETAN VOWEL SIGN O
00F7D	TIBETAN VOWEL SIGN OO
00F7E	TIBETAN SIGN RJES SU NGA RO
00F7F	TIBETAN SIGN RNAM BCAD
00F80	TIBETAN VOWEL SIGN REVERSED I
00F81	TIBETAN VOWEL SIGN REVERSED II
00F82	TIBETAN SIGN NYI ZLA NAA DA
00F83	TIBETAN SIGN SNA LDAN
00F84	TIBETAN MARK HALANTA
00F85	TIBETAN MARK PALUTA
00F86	TIBETAN SIGN LCI RTAGS
00F87	TIBETAN SIGN YANG RTAGS
00F88	TIBETAN SIGN LCE TSA CAN
00F89	TIBETAN SIGN MCHU CAN
00F8A	TIBETAN SIGN GRU CAN RGYINGS
00F8B	TIBETAN SIGN GRU MED RGYINGS
00F8C	TIBETAN SIGN INVERTED MCHU CAN
00F8D	TIBETAN SUBJOINED SIGN LCE TSA CAN
00F8E	TIBETAN SUBJOINED SIGN MCHU CAN
00F8F	TIBETAN SUBJOINED SIGN INVERTED MCHU CAN
00F90	TIBETAN SUBJOINED LETTER KA
00F91	TIBETAN SUBJOINED LETTER KHA
00F92	TIBETAN SUBJOINED LETTER GA
00F93	TIBETAN SUBJOINED LETTER GHA
00F94	TIBETAN SUBJOINED LETTER NGA
00F95	TIBETAN SUBJOINED LETTER CA
00F96	TIBETAN SUBJOINED LETTER CHA
00F97	TIBETAN SUBJOINED LETTER JA
00F99	TIBETAN SUBJOINED LETTER NYA
00F9A	TIBETAN SUBJOINED LETTER TTA
00F9B	TIBETAN SUBJOINED LETTER TTHA
00F9C	TIBETAN SUBJOINED LETTER DDA
00F9D	TIBETAN SUBJOINED LETTER DDHA
00F9E	TIBETAN SUBJOINED LETTER NNA
00F9F	TIBETAN SUBJOINED LETTER TA
00FA0	TIBETAN SUBJOINED LETTER THA
00FA1	TIBETAN SUBJOINED LETTER DA
00FA2	TIBETAN SUBJOINED LETTER DHA
00FA3	TIBETAN SUBJOINED LETTER NA
00FA4	TIBETAN SUBJOINED LETTER PA
00FA5	TIBETAN SUBJOINED LETTER PHA
00FA6	TIBETAN SUBJOINED LETTER BA
00FA7	TIBETAN SUBJOINED LETTER BHA
00FA8	TIBETAN SUBJOINED LETTER MA
00FA9	TIBETAN SUBJOINED LETTER TSA
00FAA	TIBETAN SUBJOINED LETTER TSHA
00FAB	TIBETAN SUBJOINED LETTER DZA
00FAC	TIBETAN SUBJOINED LETTER DZHA
00FAD	TIBETAN SUBJOINED LETTER WA
00FAE	TIBETAN SUBJOINED LETTER ZHA
00FAF	TIBETAN SUBJOINED LETTER ZA
00FB0	TIBETAN SUBJOINED LETTER -A
00FB1	TIBETAN SUBJOINED LETTER YA
00FB2	TIBETAN SUBJOINED LETTER RA
00FB3	TIBETAN SUBJOINED LETTER LA
00FB4	TIBETAN SUBJOINED LETTER SHA
00FB5	TIBETAN SUBJOINED LETTER SSA
00FB6	TIBETAN SUBJOINED LETTER SA
00FB7	TIBETAN SUBJOINED LETTER HA
00FB8	TIBETAN SUBJOINED LETTER A
00FB9	TIBETAN SUBJOINED LETTER KSSA
00FBA	TIBETAN SUBJOINED LETTER FIXED-FORM WA
00FBB	TIBETAN SUBJOINED LETTER FIXED-FORM YA
00FBC	TIBETAN SUBJOINED LETTER FIXED-FORM RA
00FBE	TIBETAN KU RU KHA
00FBF	TIBETAN KU RU KHA BZHI MIG CAN
00FC0	TIBETAN CANTILLATION SIGN HEAVY BEAT
00FC1	TIBETAN CANTILLATION SIGN LIGHT BEAT
00FC2	TIBETAN CANTILLATION SIGN CANG TE-U
00FC3	TIBETAN CANTILLATION SIGN SBUB -CHAL
00FC4	TIBETAN SYMBOL DRIL BU
00FC5	TIBETAN SYMBOL RDO RJE
00FC6	TIBETAN SYMBOL PADMA GDAN
00FC7	TIBETAN SYMBOL RDO RJE RGYA GRAM
00FC8	TIBETAN SYMBOL PHUR PA
00FC9	TIBETAN SYMBOL NOR BU
00FCA	TIBETAN SYMBOL NOR BU NYIS -KHYIL
00FCB	TIBETAN SYMBOL NOR BU GSUM -KHYIL
00FCC	TIBETAN SYMBOL NOR BU BZHI -KHYIL
00FCE	TIBETAN SIGN RDEL NAG RDEL DKAR
00FCF	TIBETAN SIGN RDEL NAG GSUM
00FD0	TIBETAN MARK BKA- SHOG GI MGO RGYAN
00FD0	TIBETAN MARK BSKA- SHOG GI MGO RGYAN
00FD1	TIBETAN MARK MNYAM YIG GI MGO RGYAN
00FD2	TIBETAN MARK NYIS TSHEG
00FD3	TIBETAN MARK INITIAL BRDA RNYING YIG MGO MDUN MA
00FD4	TIBETAN MARK CLOSING BRDA RNYING YIG MGO SGAB MA
00FD5	RIGHT-FACING SVASTI SIGN
00FD6	LEFT-FACING SVASTI SIGN
00FD7	RIGHT-FACING SVASTI SIGN WITH DOTS
00FD8	LEFT-FACING SVASTI SIGN WITH DOTS
00FD9	TIBETAN MARK LEADING MCHAN RTAGS
00FDA	TIBETAN MARK TRAILING MCHAN RTAGS
01000	MYANMAR LETTER KA
01001	MYANMAR LETTER KHA
01002	MYANMAR LETTER GA
01003	MYANMAR LETTER GHA
01004	MYANMAR LETTER NGA
01005	MYANMAR LETTER CA
01006	MYANMAR LETTER CHA
01007	MYANMAR LETTER JA
01008	MYANMAR LETTER JHA
01009	MYANMAR LETTER NYA
0100A	MYANMAR LETTER NNYA
0100B	MYANMAR LETTER TTA
0100C	MYANMAR LETTER TTHA
0100D	MYANMAR LETTER DDA
0100E	MYANMAR LETTER DDHA
0100F	MYANMAR LETTER NNA
01010	MYANMAR LETTER TA
01011	MYANMAR LETTER THA
01012	MYANMAR LETTER DA
01013	MYANMAR LETTER DHA
01014	MYANMAR LETTER NA
01015	MYANMAR LETTER PA
01016	MYANMAR LETTER PHA
01017	MYANMAR LETTER BA
01018	MYANMAR LETTER BHA
01019	MYANMAR LETTER MA
0101A	MYANMAR LETTER YA
0101B	MYANMAR LETTER RA
0101C	MYANMAR LETTER LA
0101D	MYANMAR LETTER WA
0101E	MYANMAR LETTER SA
0101F	MYANMAR LETTER HA
01020	MYANMAR LETTER LLA
01021	MYANMAR LETTER A
01022	MYANMAR LETTER SHAN A
01023	MYANMAR LETTER I
01024	MYANMAR LETTER II
01025	MYANMAR LETTER U
01026	MYANMAR LETTER UU
01027	MYANMAR LETTER E
01028	MYANMAR LETTER MON E
01029	MYANMAR LETTER O
0102A	MYANMAR LETTER AU
0102B	MYANMAR VOWEL SIGN TALL AA
0102C	MYANMAR VOWEL SIGN AA
0102D	MYANMAR VOWEL SIGN I
0102E	MYANMAR VOWEL SIGN II
0102F	MYANMAR VOWEL SIGN U
01030	MYANMAR VOWEL SIGN UU
01031	MYANMAR VOWEL SIGN E
01032	MYANMAR VOWEL SIGN AI
01033	MYANMAR VOWEL SIGN MON II
01034	MYANMAR VOWEL SIGN MON O
01035	MYANMAR VOWEL SIGN E ABOVE
01036	MYANMAR SIGN ANUSVARA
01037	MYANMAR SIGN DOT BELOW
01038	MYANMAR SIGN VISARGA
01039	MYANMAR SIGN VIRAMA
0103A	MYANMAR SIGN ASAT
0103B	MYANMAR CONSONANT SIGN MEDIAL YA
0103C	MYANMAR CONSONANT SIGN MEDIAL RA
0103D	MYANMAR CONSONANT SIGN MEDIAL WA
0103E	MYANMAR CONSONANT SIGN MEDIAL HA
0103F	MYANMAR LETTER GREAT SA
01040	MYANMAR DIGIT ZERO
01041	MYANMAR DIGIT ONE
01042	MYANMAR DIGIT TWO
01043	MYANMAR DIGIT THREE
01044	MYANMAR DIGIT FOUR
01045	MYANMAR DIGIT FIVE
01046	MYANMAR DIGIT SIX
01047	MYANMAR DIGIT SEVEN
01048	MYANMAR DIGIT EIGHT
01049	MYANMAR DIGIT NINE
0104A	MYANMAR SIGN LITTLE SECTION
0104B	MYANMAR SIGN SECTION
0104C	MYANMAR SYMBOL LOCATIVE
0104D	MYANMAR SYMBOL COMPLETED
0104E	MYANMAR SYMBOL AFOREMENTIONED
0104F	MYANMAR SYMBOL GENITIVE
01050	MYANMAR LETTER SHA
01051	MYANMAR LETTER SSA
01052	MYANMAR LETTER VOCALIC R
01053	MYANMAR LETTER VOCALIC RR
01054	MYANMAR LETTER VOCALIC L
01055	MYANMAR LETTER VOCALIC LL
01056	MYANMAR VOWEL SIGN VOCALIC R
01057	MYANMAR VOWEL SIGN VOCALIC RR
01058	MYANMAR VOWEL SIGN VOCALIC L
01059	MYANMAR VOWEL SIGN VOCALIC LL
0105A	MYANMAR LETTER MON NGA
0105B	MYANMAR LETTER MON JHA
0105C	MYANMAR LETTER MON BBA
0105D	MYANMAR LETTER MON BBE
0105E	MYANMAR CONSONANT SIGN MON MEDIAL NA
0105F	MYANMAR CONSONANT SIGN MON MEDIAL MA
01060	MYANMAR CONSONANT SIGN MON MEDIAL LA
01061	MYANMAR LETTER SGAW KAREN SHA
01062	MYANMAR VOWEL SIGN SGAW KAREN EU
01063	MYANMAR TONE MARK SGAW KAREN HATHI
01064	MYANMAR TONE MARK SGAW KAREN KE PHO
01065	MYANMAR LETTER WESTERN PWO KAREN THA
01066	MYANMAR LETTER WESTERN PWO KAREN PWA
01067	MYANMAR VOWEL SIGN WESTERN PWO KAREN EU
01068	MYANMAR VOWEL SIGN WESTERN PWO KAREN UE
01069	MYANMAR SIGN WESTERN PWO KAREN TONE-1
0106A	MYANMAR SIGN WESTERN PWO KAREN TONE-2
0106B	MYANMAR SIGN WESTERN PWO KAREN TONE-3
0106C	MYANMAR SIGN WESTERN PWO KAREN TONE-4
0106D	MYANMAR SIGN WESTERN PWO KAREN TONE-5
0106E	MYANMAR LETTER EASTERN PWO KAREN NNA
0106F	MYANMAR LETTER EASTERN PWO KAREN YWA
01070	MYANMAR LETTER EASTERN PWO KAREN GHWA
01071	MYANMAR VOWEL SIGN GEBA KAREN I
01072	MYANMAR VOWEL SIGN KAYAH OE
01073	MYANMAR VOWEL SIGN KAYAH U
01074	MYANMAR VOWEL SIGN KAYAH EE
01075	MYANMAR LETTER SHAN KA
01076	MYANMAR LETTER SHAN KHA
01077	MYANMAR LETTER SHAN GA
01078	MYANMAR LETTER SHAN CA
01079	MYANMAR LETTER SHAN ZA
0107A	MYANMAR LETTER SHAN NYA
0107B	MYANMAR LETTER SHAN DA
0107C	MYANMAR LETTER SHAN NA
0107D	MYANMAR LETTER SHAN PHA
0107E	MYANMAR LETTER SHAN FA
0107F	MYANMAR LETTER SHAN BA
01080	MYANMAR LETTER SHAN THA
01081	MYANMAR LETTER SHAN HA
01082	MYANMAR CONSONANT SIGN SHAN MEDIAL WA
01083	MYANMAR VOWEL SIGN SHAN AA
01084	MYANMAR VOWEL SIGN SHAN E
01085	MYANMAR VOWEL SIGN SHAN E ABOVE
01086	MYANMAR VOWEL SIGN SHAN FINAL Y
01087	MYANMAR SIGN SHAN TONE-2
01088	MYANMAR SIGN SHAN TONE-3
01089	MYANMAR SIGN SHAN TONE-5
0108A	MYANMAR SIGN SHAN TONE-6
0108B	MYANMAR SIGN SHAN COUNCIL TONE-2
0108C	MYANMAR SIGN SHAN COUNCIL TONE-3
0108D	MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE
0108E	MYANMAR LETTER RUMAI PALAUNG FA
0108F	MYANMAR SIGN RUMAI PALAUNG TONE-5
01090	MYANMAR SHAN DIGIT ZERO
01091	MYANMAR SHAN DIGIT ONE
01092	MYANMAR SHAN DIGIT TWO
01093	MYANMAR SHAN DIGIT THREE
01094	MYANMAR SHAN DIGIT FOUR
01095	MYANMAR SHAN DIGIT FIVE
01096	MYANMAR SHAN DIGIT SIX
01097	MYANMAR SHAN DIGIT SEVEN
01098	MYANMAR SHAN DIGIT EIGHT
01099	MYANMAR SHAN DIGIT NINE
0109A	MYANMAR SIGN KHAMTI TONE-1
0109B	MYANMAR SIGN KHAMTI TONE-3
0109C	MYANMAR VOWEL SIGN AITON A
0109D	MYANMAR VOWEL SIGN AITON AI
0109E	MYANMAR SYMBOL SHAN ONE
0109F	MYANMAR SYMBOL SHAN EXCLAMATION
010A0	GEORGIAN CAPITAL LETTER AN
010A1	GEORGIAN CAPITAL LETTER BAN
010A2	GEORGIAN CAPITAL LETTER GAN
010A3	GEORGIAN CAPITAL LETTER DON
010A4	GEORGIAN CAPITAL LETTER EN
010A5	GEORGIAN CAPITAL LETTER VIN
010A6	GEORGIAN CAPITAL LETTER ZEN
010A7	GEORGIAN CAPITAL LETTER TAN
010A8	GEORGIAN CAPITAL LETTER IN
010A9	GEORGIAN CAPITAL LETTER KAN
010AA	GEORGIAN CAPITAL LETTER LAS
010AB	GEORGIAN CAPITAL LETTER MAN
010AC	GEORGIAN CAPITAL LETTER NAR
010AD	GEORGIAN CAPITAL LETTER ON
010AE	GEORGIAN CAPITAL LETTER PAR
010AF	GEORGIAN CAPITAL LETTER ZHAR
010B0	GEORGIAN CAPITAL LETTER RAE
010B1	GEORGIAN CAPITAL LETTER SAN
010B2	GEORGIAN CAPITAL LETTER TAR
010B3	GEORGIAN CAPITAL LETTER UN
010B4	GEORGIAN CAPITAL LETTER PHAR
010B5	GEORGIAN CAPITAL LETTER KHAR
010B6	GEORGIAN CAPITAL LETTER GHAN
010B7	GEORGIAN CAPITAL LETTER QAR
010B8	GEORGIAN CAPITAL LETTER SHIN
010B9	GEORGIAN CAPITAL LETTER CHIN
010BA	GEORGIAN CAPITAL LETTER CAN
010BB	GEORGIAN CAPITAL LETTER JIL
010BC	GEORGIAN CAPITAL LETTER CIL
010BD	GEORGIAN CAPITAL LETTER CHAR
010BE	GEORGIAN CAPITAL LETTER XAN
010BF	GEORGIAN CAPITAL LETTER JHAN
010C0	GEORGIAN CAPITAL LETTER HAE
010C1	GEORGIAN CAPITAL LETTER HE
010C2	GEORGIAN CAPITAL LETTER HIE
010C3	GEORGIAN CAPITAL LETTER WE
010C4	GEORGIAN CAPITAL LETTER HAR
010C5	GEORGIAN CAPITAL LETTER HOE
010C7	GEORGIAN CAPITAL LETTER YN
010CD	GEORGIAN CAPITAL LETTER AEN
010D0	GEORGIAN LETTER AN
010D1	GEORGIAN LETTER BAN
010D2	GEORGIAN LETTER GAN
010D3	GEORGIAN LETTER DON
010D4	GEORGIAN LETTER EN
010D5	GEORGIAN LETTER VIN
010D6	GEORGIAN LETTER ZEN
010D7	GEORGIAN LETTER TAN
010D8	GEORGIAN LETTER IN
010D9	GEORGIAN LETTER KAN
010DA	GEORGIAN LETTER LAS
010DB	GEORGIAN LETTER MAN
010DC	GEORGIAN LETTER NAR
010DD	GEORGIAN LETTER ON
010DE	GEORGIAN LETTER PAR
010DF	GEORGIAN LETTER ZHAR
010E0	GEORGIAN LETTER RAE
010E1	GEORGIAN LETTER SAN
010E2	GEORGIAN LETTER TAR
010E3	GEORGIAN LETTER UN
010E4	GEORGIAN LETTER PHAR
010E5	GEORGIAN LETTER KHAR
010E6	GEORGIAN LETTER GHAN
010E7	GEORGIAN LETTER QAR
010E8	GEORGIAN LETTER SHIN
010E9	GEORGIAN LETTER CHIN
010EA	GEORGIAN LETTER CAN
010EB	GEORGIAN LETTER JIL
010EC	GEORGIAN LETTER CIL
010ED	GEORGIAN LETTER CHAR
010EE	GEORGIAN LETTER XAN
010EF	GEORGIAN LETTER JHAN
010F0	GEORGIAN LETTER HAE
010F1	GEORGIAN LETTER HE
010F2	GEORGIAN LETTER HIE
010F3	GEORGIAN LETTER WE
010F4	GEORGIAN LETTER HAR
010F5	GEORGIAN LETTER HOE
010F6	GEORGIAN LETTER FI
010F7	GEORGIAN LETTER YN
010F8	GEORGIAN LETTER ELIFI
010F9	GEORGIAN LETTER TURNED GAN
010FA	GEORGIAN LETTER AIN
010FB	GEORGIAN PARAGRAPH SEPARATOR
010FC	MODIFIER LETTER GEORGIAN NAR
010FD	GEORGIAN LETTER AEN
010FE	GEORGIAN LETTER HARD SIGN
010FF	GEORGIAN LETTER LABIAL SIGN
01100	HANGUL CHOSEONG KIYEOK
01101	HANGUL CHOSEONG SSANGKIYEOK
01102	HANGUL CHOSEONG NIEUN
01103	HANGUL CHOSEONG TIKEUT
01104	HANGUL CHOSEONG SSANGTIKEUT
01105	HANGUL CHOSEONG RIEUL
01106	HANGUL CHOSEONG MIEUM
01107	HANGUL CHOSEONG PIEUP
01108	HANGUL CHOSEONG SSANGPIEUP
01109	HANGUL CHOSEONG SIOS
0110A	HANGUL CHOSEONG SSANGSIOS
0110B	HANGUL CHOSEONG IEUNG
0110C	HANGUL CHOSEONG CIEUC
0110D	HANGUL CHOSEONG SSANGCIEUC
0110E	HANGUL CHOSEONG CHIEUCH
0110F	HANGUL CHOSEONG KHIEUKH
01110	HANGUL CHOSEONG THIEUTH
01111	HANGUL CHOSEONG PHIEUPH
01112	HANGUL CHOSEONG HIEUH
01113	HANGUL CHOSEONG NIEUN-KIYEOK
01114	HANGUL CHOSEONG SSANGNIEUN
01115	HANGUL CHOSEONG NIEUN-TIKEUT
01116	HANGUL CHOSEONG NIEUN-PIEUP
01117	HANGUL CHOSEONG TIKEUT-KIYEOK
01118	HANGUL CHOSEONG RIEUL-NIEUN
01119	HANGUL CHOSEONG SSANGRIEUL
0111A	HANGUL CHOSEONG RIEUL-HIEUH
0111B	HANGUL CHOSEONG KAPYEOUNRIEUL
0111C	HANGUL CHOSEONG MIEUM-PIEUP
0111D	HANGUL CHOSEONG KAPYEOUNMIEUM
0111E	HANGUL CHOSEONG PIEUP-KIYEOK
0111F	HANGUL CHOSEONG PIEUP-NIEUN
01120	HANGUL CHOSEONG PIEUP-TIKEUT
01121	HANGUL CHOSEONG PIEUP-SIOS
01122	HANGUL CHOSEONG PIEUP-SIOS-KIYEOK
01123	HANGUL CHOSEONG PIEUP-SIOS-TIKEUT
01124	HANGUL CHOSEONG PIEUP-SIOS-PIEUP
01125	HANGUL CHOSEONG PIEUP-SSANGSIOS
01126	HANGUL CHOSEONG PIEUP-SIOS-CIEUC
01127	HANGUL CHOSEONG PIEUP-CIEUC
01128	HANGUL CHOSEONG PIEUP-CHIEUCH
01129	HANGUL CHOSEONG PIEUP-THIEUTH
0112A	HANGUL CHOSEONG PIEUP-PHIEUPH
0112B	HANGUL CHOSEONG KAPYEOUNPIEUP
0112C	HANGUL CHOSEONG KAPYEOUNSSANGPIEUP
0112D	HANGUL CHOSEONG SIOS-KIYEOK
0112E	HANGUL CHOSEONG SIOS-NIEUN
0112F	HANGUL CHOSEONG SIOS-TIKEUT
01130	HANGUL CHOSEONG SIOS-RIEUL
01131	HANGUL CHOSEONG SIOS-MIEUM
01132	HANGUL CHOSEONG SIOS-PIEUP
01133	HANGUL CHOSEONG SIOS-PIEUP-KIYEOK
01134	HANGUL CHOSEONG SIOS-SSANGSIOS
01135	HANGUL CHOSEONG SIOS-IEUNG
01136	HANGUL CHOSEONG SIOS-CIEUC
01137	HANGUL CHOSEONG SIOS-CHIEUCH
01138	HANGUL CHOSEONG SIOS-KHIEUKH
01139	HANGUL CHOSEONG SIOS-THIEUTH
0113A	HANGUL CHOSEONG SIOS-PHIEUPH
0113B	HANGUL CHOSEONG SIOS-HIEUH
0113C	HANGUL CHOSEONG CHITUEUMSIOS
0113D	HANGUL CHOSEONG CHITUEUMSSANGSIOS
0113E	HANGUL CHOSEONG CEONGCHIEUMSIOS
0113F	HANGUL CHOSEONG CEONGCHIEUMSSANGSIOS
01140	HANGUL CHOSEONG PANSIOS
01141	HANGUL CHOSEONG IEUNG-KIYEOK
01142	HANGUL CHOSEONG IEUNG-TIKEUT
01143	HANGUL CHOSEONG IEUNG-MIEUM
01144	HANGUL CHOSEONG IEUNG-PIEUP
01145	HANGUL CHOSEONG IEUNG-SIOS
01146	HANGUL CHOSEONG IEUNG-PANSIOS
01147	HANGUL CHOSEONG SSANGIEUNG
01148	HANGUL CHOSEONG IEUNG-CIEUC
01149	HANGUL CHOSEONG IEUNG-CHIEUCH
0114A	HANGUL CHOSEONG IEUNG-THIEUTH
0114B	HANGUL CHOSEONG IEUNG-PHIEUPH
0114C	HANGUL CHOSEONG YESIEUNG
0114D	HANGUL CHOSEONG CIEUC-IEUNG
0114E	HANGUL CHOSEONG CHITUEUMCIEUC
0114F	HANGUL CHOSEONG CHITUEUMSSANGCIEUC
01150	HANGUL CHOSEONG CEONGCHIEUMCIEUC
01151	HANGUL CHOSEONG CEONGCHIEUMSSANGCIEUC
01152	HANGUL CHOSEONG CHIEUCH-KHIEUKH
01153	HANGUL CHOSEONG CHIEUCH-HIEUH
01154	HANGUL CHOSEONG CHITUEUMCHIEUCH
01155	HANGUL CHOSEONG CEONGCHIEUMCHIEUCH
01156	HANGUL CHOSEONG PHIEUPH-PIEUP
01157	HANGUL CHOSEONG KAPYEOUNPHIEUPH
01158	HANGUL CHOSEONG SSANGHIEUH
01159	HANGUL CHOSEONG YEORINHIEUH
0115A	HANGUL CHOSEONG KIYEOK-TIKEUT
0115B	HANGUL CHOSEONG NIEUN-SIOS
0115C	HANGUL CHOSEONG NIEUN-CIEUC
0115D	HANGUL CHOSEONG NIEUN-HIEUH
0115E	HANGUL CHOSEONG TIKEUT-RIEUL
0115F	HANGUL CHOSEONG FILLER
01160	HANGUL JUNGSEONG FILLER
01161	HANGUL JUNGSEONG A
01162	HANGUL JUNGSEONG AE
01163	HANGUL JUNGSEONG YA
01164	HANGUL JUNGSEONG YAE
01165	HANGUL JUNGSEONG EO
01166	HANGUL JUNGSEONG E
01167	HANGUL JUNGSEONG YEO
01168	HANGUL JUNGSEONG YE
01169	HANGUL JUNGSEONG O
0116A	HANGUL JUNGSEONG WA
0116B	HANGUL JUNGSEONG WAE
0116C	HANGUL JUNGSEONG OE
0116D	HANGUL JUNGSEONG YO
0116E	HANGUL JUNGSEONG U
0116F	HANGUL JUNGSEONG WEO
01170	HANGUL JUNGSEONG WE
01171	HANGUL JUNGSEONG WI
01172	HANGUL JUNGSEONG YU
01173	HANGUL JUNGSEONG EU
01174	HANGUL JUNGSEONG YI
01175	HANGUL JUNGSEONG I
01176	HANGUL JUNGSEONG A-O
01177	HANGUL JUNGSEONG A-U
01178	HANGUL JUNGSEONG YA-O
01179	HANGUL JUNGSEONG YA-YO
0117A	HANGUL JUNGSEONG EO-O
0117B	HANGUL JUNGSEONG EO-U
0117C	HANGUL JUNGSEONG EO-EU
0117D	HANGUL JUNGSEONG YEO-O
0117E	HANGUL JUNGSEONG YEO-U
0117F	HANGUL JUNGSEONG O-EO
01180	HANGUL JUNGSEONG O-E
01181	HANGUL JUNGSEONG O-YE
01182	HANGUL JUNGSEONG O-O
01183	HANGUL JUNGSEONG O-U
01184	HANGUL JUNGSEONG YO-YA
01185	HANGUL JUNGSEONG YO-YAE
01186	HANGUL JUNGSEONG YO-YEO
01187	HANGUL JUNGSEONG YO-O
01188	HANGUL JUNGSEONG YO-I
01189	HANGUL JUNGSEONG U-A
0118A	HANGUL JUNGSEONG U-AE
0118B	HANGUL JUNGSEONG U-EO-EU
0118C	HANGUL JUNGSEONG U-YE
0118D	HANGUL JUNGSEONG U-U
0118E	HANGUL JUNGSEONG YU-A
0118F	HANGUL JUNGSEONG YU-EO
01190	HANGUL JUNGSEONG YU-E
01191	HANGUL JUNGSEONG YU-YEO
01192	HANGUL JUNGSEONG YU-YE
01193	HANGUL JUNGSEONG YU-U
01194	HANGUL JUNGSEONG YU-I
01195	HANGUL JUNGSEONG EU-U
01196	HANGUL JUNGSEONG EU-EU
01197	HANGUL JUNGSEONG YI-U
01198	HANGUL JUNGSEONG I-A
01199	HANGUL JUNGSEONG I-YA
0119A	HANGUL JUNGSEONG I-O
0119B	HANGUL JUNGSEONG I-U
0119C	HANGUL JUNGSEONG I-EU
0119D	HANGUL JUNGSEONG I-ARAEA
0119E	HANGUL JUNGSEONG ARAEA
0119F	HANGUL JUNGSEONG ARAEA-EO
011A0	HANGUL JUNGSEONG ARAEA-U
011A1	HANGUL JUNGSEONG ARAEA-I
011A2	HANGUL JUNGSEONG SSANGARAEA
011A3	HANGUL JUNGSEONG A-EU
011A4	HANGUL JUNGSEONG YA-U
011A5	HANGUL JUNGSEONG YEO-YA
011A6	HANGUL JUNGSEONG O-YA
011A7	HANGUL JUNGSEONG O-YAE
011A8	HANGUL JONGSEONG KIYEOK
011A9	HANGUL JONGSEONG SSANGKIYEOK
011AA	HANGUL JONGSEONG KIYEOK-SIOS
011AB	HANGUL JONGSEONG NIEUN
011AC	HANGUL JONGSEONG NIEUN-CIEUC
011AD	HANGUL JONGSEONG NIEUN-HIEUH
011AE	HANGUL JONGSEONG TIKEUT
011AF	HANGUL JONGSEONG RIEUL
011B0	HANGUL JONGSEONG RIEUL-KIYEOK
011B1	HANGUL JONGSEONG RIEUL-MIEUM
011B2	HANGUL JONGSEONG RIEUL-PIEUP
011B3	HANGUL JONGSEONG RIEUL-SIOS
011B4	HANGUL JONGSEONG RIEUL-THIEUTH
011B5	HANGUL JONGSEONG RIEUL-PHIEUPH
011B6	HANGUL JONGSEONG RIEUL-HIEUH
011B7	HANGUL JONGSEONG MIEUM
011B8	HANGUL JONGSEONG PIEUP
011B9	HANGUL JONGSEONG PIEUP-SIOS
011BA	HANGUL JONGSEONG SIOS
011BB	HANGUL JONGSEONG SSANGSIOS
011BC	HANGUL JONGSEONG IEUNG
011BD	HANGUL JONGSEONG CIEUC
011BE	HANGUL JONGSEONG CHIEUCH
011BF	HANGUL JONGSEONG KHIEUKH
011C0	HANGUL JONGSEONG THIEUTH
011C1	HANGUL JONGSEONG PHIEUPH
011C2	HANGUL JONGSEONG HIEUH
011C3	HANGUL JONGSEONG KIYEOK-RIEUL
011C4	HANGUL JONGSEONG KIYEOK-SIOS-KIYEOK
011C5	HANGUL JONGSEONG NIEUN-KIYEOK
011C6	HANGUL JONGSEONG NIEUN-TIKEUT
011C7	HANGUL JONGSEONG NIEUN-SIOS
011C8	HANGUL JONGSEONG NIEUN-PANSIOS
011C9	HANGUL JONGSEONG NIEUN-THIEUTH
011CA	HANGUL JONGSEONG TIKEUT-KIYEOK
011CB	HANGUL JONGSEONG TIKEUT-RIEUL
011CC	HANGUL JONGSEONG RIEUL-KIYEOK-SIOS
011CD	HANGUL JONGSEONG RIEUL-NIEUN
011CE	HANGUL JONGSEONG RIEUL-TIKEUT
011CF	HANGUL JONGSEONG RIEUL-TIKEUT-HIEUH
011D0	HANGUL JONGSEONG SSANGRIEUL
011D1	HANGUL JONGSEONG RIEUL-MIEUM-KIYEOK
011D2	HANGUL JONGSEONG RIEUL-MIEUM-SIOS
011D3	HANGUL JONGSEONG RIEUL-PIEUP-SIOS
011D4	HANGUL JONGSEONG RIEUL-PIEUP-HIEUH
011D5	HANGUL JONGSEONG RIEUL-KAPYEOUNPIEUP
011D6	HANGUL JONGSEONG RIEUL-SSANGSIOS
011D7	HANGUL JONGSEONG RIEUL-PANSIOS
011D8	HANGUL JONGSEONG RIEUL-KHIEUKH
011D9	HANGUL JONGSEONG RIEUL-YEORINHIEUH
011DA	HANGUL JONGSEONG MIEUM-KIYEOK
011DB	HANGUL JONGSEONG MIEUM-RIEUL
011DC	HANGUL JONGSEONG MIEUM-PIEUP
011DD	HANGUL JONGSEONG MIEUM-SIOS
011DE	HANGUL JONGSEONG MIEUM-SSANGSIOS
011DF	HANGUL JONGSEONG MIEUM-PANSIOS
011E0	HANGUL JONGSEONG MIEUM-CHIEUCH
011E1	HANGUL JONGSEONG MIEUM-HIEUH
011E2	HANGUL JONGSEONG KAPYEOUNMIEUM
011E3	HANGUL JONGSEONG PIEUP-RIEUL
011E4	HANGUL JONGSEONG PIEUP-PHIEUPH
011E5	HANGUL JONGSEONG PIEUP-HIEUH
011E6	HANGUL JONGSEONG KAPYEOUNPIEUP
011E7	HANGUL JONGSEONG SIOS-KIYEOK
011E8	HANGUL JONGSEONG SIOS-TIKEUT
011E9	HANGUL JONGSEONG SIOS-RIEUL
011EA	HANGUL JONGSEONG SIOS-PIEUP
011EB	HANGUL JONGSEONG PANSIOS
011EC	HANGUL JONGSEONG IEUNG-KIYEOK
011ED	HANGUL JONGSEONG IEUNG-SSANGKIYEOK
011EE	HANGUL JONGSEONG SSANGIEUNG
011EF	HANGUL JONGSEONG IEUNG-KHIEUKH
011F0	HANGUL JONGSEONG YESIEUNG
011F1	HANGUL JONGSEONG YESIEUNG-SIOS
011F2	HANGUL JONGSEONG YESIEUNG-PANSIOS
011F3	HANGUL JONGSEONG PHIEUPH-PIEUP
011F4	HANGUL JONGSEONG KAPYEOUNPHIEUPH
011F5	HANGUL JONGSEONG HIEUH-NIEUN
011F6	HANGUL JONGSEONG HIEUH-RIEUL
011F7	HANGUL JONGSEONG HIEUH-MIEUM
011F8	HANGUL JONGSEONG HIEUH-PIEUP
011F9	HANGUL JONGSEONG YEORINHIEUH
011FA	HANGUL JONGSEONG KIYEOK-NIEUN
011FB	HANGUL JONGSEONG KIYEOK-PIEUP
011FC	HANGUL JONGSEONG KIYEOK-CHIEUCH
011FD	HANGUL JONGSEONG KIYEOK-KHIEUKH
011FE	HANGUL JONGSEONG KIYEOK-HIEUH
011FF	HANGUL JONGSEONG SSANGNIEUN
01200	ETHIOPIC SYLLABLE HA
01201	ETHIOPIC SYLLABLE HU
01202	ETHIOPIC SYLLABLE HI
01203	ETHIOPIC SYLLABLE HAA
01204	ETHIOPIC SYLLABLE HEE
01205	ETHIOPIC SYLLABLE HE
01206	ETHIOPIC SYLLABLE HO
01207	ETHIOPIC SYLLABLE HOA
01208	ETHIOPIC SYLLABLE LA
01209	ETHIOPIC SYLLABLE LU
0120A	ETHIOPIC SYLLABLE LI
0120B	ETHIOPIC SYLLABLE LAA
0120C	ETHIOPIC SYLLABLE LEE
0120D	ETHIOPIC SYLLABLE LE
0120E	ETHIOPIC SYLLABLE LO
0120F	ETHIOPIC SYLLABLE LWA
01210	ETHIOPIC SYLLABLE HHA
01211	ETHIOPIC SYLLABLE HHU
01212	ETHIOPIC SYLLABLE HHI
01213	ETHIOPIC SYLLABLE HHAA
01214	ETHIOPIC SYLLABLE HHEE
01215	ETHIOPIC SYLLABLE HHE
01216	ETHIOPIC SYLLABLE HHO
01217	ETHIOPIC SYLLABLE HHWA
01218	ETHIOPIC SYLLABLE MA
01219	ETHIOPIC SYLLABLE MU
0121A	ETHIOPIC SYLLABLE MI
0121B	ETHIOPIC SYLLABLE MAA
0121C	ETHIOPIC SYLLABLE MEE
0121D	ETHIOPIC SYLLABLE ME
0121E	ETHIOPIC SYLLABLE MO
0121F	ETHIOPIC SYLLABLE MWA
01220	ETHIOPIC SYLLABLE SZA
01221	ETHIOPIC SYLLABLE SZU
01222	ETHIOPIC SYLLABLE SZI
01223	ETHIOPIC SYLLABLE SZAA
01224	ETHIOPIC SYLLABLE SZEE
01225	ETHIOPIC SYLLABLE SZE
01226	ETHIOPIC SYLLABLE SZO
01227	ETHIOPIC SYLLABLE SZWA
01228	ETHIOPIC SYLLABLE RA
01229	ETHIOPIC SYLLABLE RU
0122A	ETHIOPIC SYLLABLE RI
0122B	ETHIOPIC SYLLABLE RAA
0122C	ETHIOPIC SYLLABLE REE
0122D	ETHIOPIC SYLLABLE RE
0122E	ETHIOPIC SYLLABLE RO
0122F	ETHIOPIC SYLLABLE RWA
01230	ETHIOPIC SYLLABLE SA
01231	ETHIOPIC SYLLABLE SU
01232	ETHIOPIC SYLLABLE SI
01233	ETHIOPIC SYLLABLE SAA
01234	ETHIOPIC SYLLABLE SEE
01235	ETHIOPIC SYLLABLE SE
01236	ETHIOPIC SYLLABLE SO
01237	ETHIOPIC SYLLABLE SWA
01238	ETHIOPIC SYLLABLE SHA
01239	ETHIOPIC SYLLABLE SHU
0123A	ETHIOPIC SYLLABLE SHI
0123B	ETHIOPIC SYLLABLE SHAA
0123C	ETHIOPIC SYLLABLE SHEE
0123D	ETHIOPIC SYLLABLE SHE
0123E	ETHIOPIC SYLLABLE SHO
0123F	ETHIOPIC SYLLABLE SHWA
01240	ETHIOPIC SYLLABLE QA
01241	ETHIOPIC SYLLABLE QU
01242	ETHIOPIC SYLLABLE QI
01243	ETHIOPIC SYLLABLE QAA
01244	ETHIOPIC SYLLABLE QEE
01245	ETHIOPIC SYLLABLE QE
01246	ETHIOPIC SYLLABLE QO
01247	ETHIOPIC SYLLABLE QOA
01248	ETHIOPIC SYLLABLE QWA
0124A	ETHIOPIC SYLLABLE QWI
0124B	ETHIOPIC SYLLABLE QWAA
0124C	ETHIOPIC SYLLABLE QWEE
0124D	ETHIOPIC SYLLABLE QWE
01250	ETHIOPIC SYLLABLE QHA
01251	ETHIOPIC SYLLABLE QHU
01252	ETHIOPIC SYLLABLE QHI
01253	ETHIOPIC SYLLABLE QHAA
01254	ETHIOPIC SYLLABLE QHEE
01255	ETHIOPIC SYLLABLE QHE
01256	ETHIOPIC SYLLABLE QHO
01258	ETHIOPIC SYLLABLE QHWA
0125A	ETHIOPIC SYLLABLE QHWI
0125B	ETHIOPIC SYLLABLE QHWAA
0125C	ETHIOPIC SYLLABLE QHWEE
0125D	ETHIOPIC SYLLABLE QHWE
01260	ETHIOPIC SYLLABLE BA
01261	ETHIOPIC SYLLABLE BU
01262	ETHIOPIC SYLLABLE BI
01263	ETHIOPIC SYLLABLE BAA
01264	ETHIOPIC SYLLABLE BEE
01265	ETHIOPIC SYLLABLE BE
01266	ETHIOPIC SYLLABLE BO
01267	ETHIOPIC SYLLABLE BWA
01268	ETHIOPIC SYLLABLE VA
01269	ETHIOPIC SYLLABLE VU
0126A	ETHIOPIC SYLLABLE VI
012