كى ھەرپتاختىسىدا دۆلەتلىك ھەرپلەرنى كىرگۈزۈشتە ئىشلىتىشكىمۇ بولىدۇ.
 .
 «ۋاقىتلىق ئۈزچات يوق»نى تاللاش ئارقىلىق بۇ ئىقتىدارىنى چەكلىيەلەيسىز.
Description-uk.UTF-8: Метод тимчасового перемикання між вводом національних та латинських символів:
 Під час знаходження клавіатури в режимі вводу національних символів іноді виникає потреба ввести декілька латинських символів. Для цього доречніше скористатись тимчасовим перемикачем до латинського режиму. Клавіатура залишається в цьому режимі доти, доки буде натиснута вказана вами клавіша. Також цією клавішею можна скористатись для вводу національних літер під час використання латинського режиму вводу символів.
 .
 Ви можете вимкнути цю можливість, обравши пункт "Без тимчасового перемикача".
Description-vi.UTF-8: Phương pháp bật/tắt tạm thời giữa cách gõ quốc gia và La-tinh:
 Khi bàn phím trong chế độ quốc gia và người dùng muốn gõ chỉ vài chữ La-tinh, có thể thích hợp để chuyển đổi tạm thời sang chế độ La-tinh. Bàn phím còn lại trong chế độ đó miễn là phím đã chọn vẫn còn được ấn giữ. Ngược lại, phím đó có khả năng gõ ký tự quốc gia khi bàn phím trong chế độ La-tinh.
 .
 Có thể tắt tính năng này bằng cách bật tùy chọn « Không có cái chuyển tạm thời ».
Description-zh_CN.UTF-8: 临时在国家和拉丁输入之间切换的方法：
 当键盘在国家模式下且您就想输入几个拉丁字母时，可能临时转换为拉丁模式会比较方便。只要按着所选择的切换键，键盘会保持在该模式下。该键在键盘处于拉丁模式下时也可用来输入国家字符。
 .
 您可以选择“无临时切换键”来禁用此功能。
Description-zh_TW.UTF-8: 在 national 及 Latin 模式間暫時切換的方式:
 當鍵盤處於 national 模式，而只是暫時要輸入幾個 Latin 文字的話，更適切的作法是暫時切換到 Latin 模式。只要這個鍵被按下的期間，鍵盤將會持續處於這個模式之下。這個鍵也可以用在 Latin 模式下作為輸入 national 文字之用。
 .
 你可以選擇 "不要暫時切換" 來關閉這個功能。

Template: keyboard-configuration/altgr
Type: select
Choices: The default for the keyboard layout, No AltGr key, Right Alt (AltGr), Right Control, Right Logo key, Menu key, Left Alt, Left Logo key, Keypad Enter key, Both Logo keys, Both Alt keys
Choices-am.UTF-8: ለፊደል ገበታው ቀዳሚ አጣጣል, AltGr ቁልፍ አልተገኘም, ቀኝ Alt (AltGr), ቀኝ Control, ቀኝ Logo key, ምናሌ ቁልፍ, ግራ Alt, ግራ Logo key, መልስ ቁልፍ, ሁለቱ Logo key, ሁለቱም Alt ቁልፎ
Choices-ar.UTF-8: تخطيط لوحة المفاتيح الافتراضي, لا تستخدم مفتاح AltGr, زر Alt اليمين (AltGr), زر Control الأيمن, مفتاح الشعار الأيمن, مفتاح القائمة, مفتاح Alt الأيسر, مفتاح الشعار الأيسر, مفتاح الإدخال في لوحة الأرقام, مفتاحي الشعار سويّة, مفتاحا Alt سويّة
Choices-ast.UTF-8: La disposición por defeutu pal tecláu, Ensin tecla AltGr, Alt drecha (AltGr), Control Derecha, Tecla Logu Derecha, Tecla Menú, Alt Izquierda, Tecla Logu Izquierda, Tecla Enter del Keypad, Dambes Tecles de Logu, Dambes tecles Alt
Choices-be.UTF-8: Перадвызначаная раскладка клавіятуры, Няма кнопкі AltGr, Правы Alt (AltGr), Правы Control, Правая кнопка Logo, Кнока меню, Левы Alt, Левая кнопка Logo, Enter на лічбавай клавіятуры, Дзве Logo кнопкі, Кнопкі Alt разам
Choices-bg.UTF-8: Избиране на клавиатурна подредба, Без клавиш AltGr, Десен Alt (AltGr), Десен Control, Десен клавиш с лого, Клавиш меню, Ляв Alt, Ляв клавиш с лого, Клавиш Enter (цифров блок), И двата клавиша с лого, Двата клавиша Alt
Choices-bn.UTF-8: কীবোর্ডের জন্য ডিফল্ট লেআউট, কোন AltGr কী নয়, ডান Alt  (AltGr), ডান কন্ট্রোল, ডান লোগো কী, মেনু কী, বাম Alt, বাম লোগো কী, কীপ্যাড এন্টার কী, উভয় লোগো কী, উভয় Alt কী
Choices-bo.UTF-8: མཐེབ་གཞོང་བཀོད་པ་དེའི་སྔོན་སྒྲིག, AltGr མཐེབ་མེད་པ, Alt གཡས (AltGr), Control གཡོན, མཚོན་རྟགས་མཐེབ་གཡས, འདེམས་ཐོ་མཐེབ, Alt གཡོན, མཚོན་རྟགས་མཐེབ་གཡོན, ཨང་གྲངས་ཁུལ་གྱི་Enter མཐེབ, མཚོན་རྟགས་མཐེབ་གཉིས་པོ, Alt མཐེབ་གཉིས་ཀ
Choices-bs.UTF-8: Standardni izbor za raspored tastature, Bez AltGr tipke, Desni Alt (AltGr), Desni Control taster, Desni Logo taster, Meni taster, Lijevi Alt, Lijevi Logo taster, Tastatura Enter tipka, Obje Logo tipke, Obje Alt tipke
Choices-ca.UTF-8: El predeterminat per a la disposició de teclat, Sense tecla AltGr, Alt dret (AltGr), Control dret, Tecla de logotip dreta, Tecla de menú dreta, Alt esquerra, Tecla de logotip esquerra, Tecla Intro del teclat numèric, Ambdues tecles de logotip, Ambues tecles Alt
Choices-cs.UTF-8: Výchozí pro klávesové rozložení, Bez klávesy AltGr, Pravý Alt (AltGr), Pravý Control, Pravá klávesa logo, Klávesa Menu, Levý Alt, Levá klávesa logo, Klávesa Enter v numerickém bloku, Obě klávesy logo, Obě klávesy Alt
Choices-cy.UTF-8: Y dewis diofyn ar gyfer cynllun y bysellfwrdd, Dim bysell AltGr, Alt Dde (AltGr), Control Dde, Bysell Logo Dde, Bysell bwydlen, Alt Chwith, Bysell Logo Chwith, Bysell Enter ar y rhifau, Y ddau fysell Logo, Y ddau fysell Alt
Choices-da.UTF-8: Standard for tastaturlayoutet, Ingen AltGr-tast, Højre Alt (AltGr), Højre Control, Højre Logo-tast, Menu-tast, Venstre Alt, Venstre Logo-tast, Enter-tast på numerisk tastatur, Begge Logo-taster, Begge ALT-taster
Choices-de.UTF-8: Der Standard für die Tastenbelegung, Keine AltGr-Taste, Alt rechts (AltGr), Strg rechts, Windows-Taste rechts, Menütaste, Alt links, Windows-Taste links, Eingabetaste des numerischen Feldes, Beide Windows-Tasten, Beide Alt-Tasten (Alt+AltGr)
Choices-dz.UTF-8: ལྡེ་སྒྲོམ་སྒྲིག་བཀོད་ཀྱི་དོན་ལུ་སྔོན་སྒྲིག་, AltGr ལྡེ་ཡིག་མེད།, གཡས་ཀྱི་གདམ་ལྡེ་ (AltGr), གཡས་ཀྱི་ཚད་འཛིན།, གཡས་ཀྱི་ལས་རྟགས་ལྡེ་ཡིག, དཀར་ཆག་ལྡེ་ཡིག, གཡོན་གྱི་གདམ་ལྡེ།, གཡོན་གྱི་ལས་རྟགས་ལྡེ་ཡིག, ལྡེ་གདན་བཙུགས་ལྡེ།, ལས་རྟགས་ལྡེ་ཡིག་གཉིས་ཆ་ར།, གདམ་ལྡེ་གཉིས་ཆ་ར།
Choices-el.UTF-8: Η προκαθορισμένη επιλογή για τη διάταξη πληκτρολογίου, Μη διαθέσιμο πλήκτρο AltGr, Δεξί Alt (AltGr), Right Control, Πλήκτρο Right Logo, Πλήκτρο Menu, Left Alt, Πλήκτρο Left Logo, πλήκτρο Enter για το keypad, Και τα δυο πλήκτρα Logo, Και τα δύο πλήκτρα Alt
Choices-eo.UTF-8: La originalo por la klavar-aranĝo, Neniu klavo AltGr, Dekstra Alt (AltGr), Dekstra Control, Dekstra Emblemo-klavo, Menu-klavo, Maldekstra Alt, Maldekstra Emblemo-klavo, Enig-klavo de ciferklavaro, Ambaŭ klavoj Logo, Ambaŭ klavoj Alt
Choices-es.UTF-8: Distribución por omisión del teclado, Sin tecla AltGr, Alt derecho (AltGr), Control derecho, Tecla derecha de logo, Tecla de menú, Alt izquierdo, Tecla izquierda de logo, Tecla «Intro» del teclado numérico, Ambas teclas del logo, Ambas teclas de Alt
Choices-et.UTF-8: Vaikimisi klaviatuuripaigutus, Pole AltGr klahvi, Parem Alt (AltGr), Parem Control, Parem logoklahv, Menüüklahv, Vasak Alt, Vasak logoklahv, Numbriklahvistiku Enter-klahv, Mõlemad logoklahvid, Mõlemad Alt-klahvid
Choices-eu.UTF-8: Teklatuaren diseinu lehenetsia, AltGr teklarik ez, Eskuineko Alt (AltGr), Eskuineko Ktrl, Eskuineko logotipoaren tekla, Menua tekla, Ezkerreko Alt, Ezkerreko Logotipoa tekla, Zenbakizko teklatuko Sartu tekla, Bi logotipo teklak, Bi Alt teklak
Choices-fa.UTF-8: طرح بندی پیش فرض صفحه کلید, No AltGr key, کلید Alt (AltGr) راست, کلید Control راست, کلید Logo راست, کلید MenuQ, کلید Alt چپ, کلید Logo چپ, Keypad Enter key, هر دو کلید Logo, هر دو کلید Alt
Choices-fi.UTF-8: Valitse näppäinasettelun oletusarvo, Ei AltGr-näppäintä, Oikea Alt (AltGr), Oikea Control, Oikea Logo-näppäin, Menu-näppäin, Vasen Alt, Vasen Logo-näppäin, Numeronäppäimistön Enter-näppäin, Molemmat Logo-näppäimet, Molemmat Alt-näppäimet
Choices-fr.UTF-8: Disposition par défaut pour le clavier, Pas de touche AltGr, Touche Alt de droite (AltGr), Touche Ctrl de droite, Touche « logo » de droite, Touche Menu, Touche Alt de gauche, Touche « logo » de gauche, Entrée (pavé numérique), Les deux touches « logo », Les deux touches Alt ensemble
Choices-ga.UTF-8: Leagan amach réamhshocraithe, Gan eochair AltGr, Alt Ar Dheis (AltGr), Ctrl Ar Dheis, Eochair lógó ar dheis, Eochair roghchláir, Alt Ar Chlé, Eochair lógó ar chlé, Eochair Enter ar an eochaircheap, An dá eochair lógó, An dá eochair Alt
Choices-gl.UTF-8: A disposición de teclado predeterminada, Sen tecla Alt Gr, Tecla Alt dereita (Alt Gr), Tecla Ctrl dereita, Tecla Logo dereita, Tecla Menú, Tecla Alt esquerda, Tecla Logo esquerda, Tecla Intro do teclado numérico, Ambas as dúas teclas Logo, Ambas as dúas teclas Alt
Choices-gu.UTF-8: કીબોર્ડ દેખાવ માટે મૂળભૂત, અલ્ટર કળ નહી, જમણી અલ્ટ (AltGr), જમણી કંટ્રોલ, જમણી લોગો કળ, મેનુ કળ, ડાબી અલ્ટ, ડાબી લોગો કળ, કીપેડ એન્ટર કળ, બન્ને લૉગો કળો, બન્ને અલ્ટર કળો
Choices-he.UTF-8: ברירת המחדל עבור פריסת המקלדת, ללא מקש AltGr, Alt ימני (AltGr), Control ימני, מקש לוגו ימני, מקש תפריט, Alt שמאלי, מקש לוגו שמאלי, מקש Enter ב-Keypad, שני מקשי הלוגו, שני מקשי Alt
Choices-hi.UTF-8: कुंजीपटल का डिफॉल्ट अभिन्यास, ऑल्ट-जीआर (AltGr) कुंजी नहीं., दाहिना ऑल्ट (AltGr), दाहिना कन्ट्रोल, दाहिनी चिह्न कुंजी, मेनु कुंजी, बाहिना ऑल्ट, बाहिनी चित्र कुंजी, कुंजी पैड एंटर कुंजी, दोनों लोगो वाले कुंजी, दोनों ऑल्ट कुंजी
Choices-hr.UTF-8: Izbor zadane tipkovnice, Nema AltGr tipke, Desni Alt (AltGr), Desna Control tipka, Desna Logo tipka, Tipka izbornika, Lijeva Alt tipka, Lijeva Logo tipka, Enter tipka na numeričkom dijelu, Obje Logo tipke, Obje tipke Alt
Choices-hu.UTF-8: Alapértelmezés a billentyűzetkiosztáshoz, Nincs AltGr billentyű, Jobb Alt (AltGr), Jobb Control, Jobb logó billentyű, Menü billentyű, Bal Alt, Bal logó billentyű, Numerikus Enter, Mindkét logó billentyű, Mindkét Alt billentyű
Choices-id.UTF-8: Pola keyboard standar, Tanpa tombol AltGr, Alt (AltGr) kanan, Ctrl Kanan, Tombol Logo Kanan, Tombol Menu, Alt Kiri, Tombol Logo Kiri, Tombol Enter numerik, Kedua tombol Logo, Kedua tombol Alt
Choices-is.UTF-8: Sjálfgefið í lyklaborðsuppsetningu, Enginn AltGr hnappur, Hægri Alt lykill (AltGr), Vinstri Ctrl, Hægri Merkja-lykill (Win), Menu-lykill, Vinstri Alt, Vinstri Merkja-lykill (Win), Enter-lykill á talnaborði, Báðir Merkja-lyklarnir (Win), Báðir Alt-lyklarnir
Choices-it.UTF-8: La disposizione predefinita della tastiera, Tasto Alt destro mancante, Alt destro (AltGr), Ctrl destro, Tasto Windows destro, Tasto menù, Alt sinistro, Tasto Windows sinistro, Tasto Enter del tastierino numerico, Entrambi i tasti Windows, Entrambi i tasti Alt
Choices-ja.UTF-8: キーボード配置のデフォルト, AltGr キーなし, 右 Alt (AltGr), 右 Control, 右ロゴキー, メニューキー, 左 Alt, 左ロゴキー, キーパッドの Enter キー, 両ロゴキー, 両 Alt キー
Choices-kk.UTF-8: Пернетақта жаймасы үшін бастапқы, AltGr пернесі жоқ, Оң жақ Alt (AltGr), Оң жақ Control, Оң жақ Logo пернесі, Menu пернесі, Сол жақ Alt, Сол жақ Logo пернесі, Сандық жақтағы Enter пернесі, Екі Logo пернесі, Екі Alt пернесі
Choices-km.UTF-8: លំនាំដើម​សម្រាប់​ប្លង់​ក្ដារចុច, គ្មាន​គ្រាប់ចុច​ AltGr, Alt (AltGr) ខាង​ស្ដាំ, គ្រាប់ចុច​បញ្ជា (Ctrl) ខាង​ស្ដាំ, គ្រាប់ចុច Logo ខាង​ស្ដាំ, គ្រាប់ចុច​ម៉ឺនុយ, គ្រាប់ Alt ខាង​ឆ្វេង, គ្រាប់ Logo ខាង​ឆ្វេង, គ្រាប់ចុច​បញ្ចូល​នៅ​លើ​បន្ទះ​លេខ, គ្រាប់ចុច​ Logo ទាំង​ពីរ, គ្រាប់ចុច Alt
Choices-kn.UTF-8: ಅಕ್ಷರಫಲಕದ ಪೂರ್ವನಿರ್ಧಾರಿತ ವಿನ್ಯಾಸ, AltGr ಕೀಲಿ ಇರುವುದಿಲ್ಲ, ಬಲ ಆಲ್ಟ್ (AltGr), ಬಲ ಕಂಟ್ರೋಲ್, ಬಲ ಲೋಗೊ ಕೀಲಿ, ಮೆನು ಕೀಲಿ, ಎಡ ಆಲ್ಟ್, ಎಡ ಲೋಗೊ ಕೀಲಿ, ಅಕ್ಷರಮಣೆಯ ಎಂಟರ್ ಕೀಲಿ, ಎರಡೂ ಲೋಗೋ ಕೀಲಿಗಳು, ಎರಡೂ Alt ಕೀಲಿಗಳು
Choices-ko.UTF-8: 기본 키보드 배치, AltGr 키 없음, 오른쪽 Alt (AltGr), 오른쪽 Control, 오른쪽 로고 키, 메뉴 키, 왼쪽 Alt, 왼쪽 로고 키, 키패드 Enter 키, 양쪽 로고 키, 양쪽 Alt 키
Choices-ku.UTF-8: Standarda cureyê klavyeyê, Ne bişkoja AltGr, Rast Alt (AlrGr), control a rastê, Bişkoka logo ya rastê, Mifteya Pêşekê, Alt a çepê, Bişkoka logo ya çepê, Klavye kilîlê binivîse, Herdu bişkokên logo yê, Her du bişkojên Alt bi hev re
Choices-lo.UTF-8: ຄ່າເລີ່ມຕົ້ນຂອງຜັງແປ້ນພິມ, AltGrສຳຄັນບໍ່ມີ, Alt ຂວາ (AltGr), ຄວບຄຸມຂວາ, ແປ້ນໂລໂກ້ຂວາ, ເມນູສຳຄັນ, Alt ຂ້າງຊ້າຍ, ແປ້ນໂລໂກ້ຊ້າຍ, ປຸ່ມກົດປຸ່ມ Enter, ທັ້ງສອງຄຣີໂລໂກ້, ທັ້ງສອງຄຣີ Alt
Choices-lt.UTF-8: Numatytasis klaviatūros išdėstyme, Lyg3 klavišo nenaudoti, Dešinysis Alt (Lyg3), Dešinysis Vald, Dešinysis Logo klavišas, Meniu klavišas, Kairysis Alt, Kairysis Logo klavišas, Skaitmenų srities klavišas Įvesti, Abu Logo klavišai, Abu Alt klavišai
Choices-lv.UTF-8: Tastatūras izklājuma noklusējuma vērtība, Bez AltGr taustiņa, Labais Alt (AltGr), Labais Ctrl, Labais Logo taustiņš, Izvēlnes taustiņš, Kreisais Alt, Kreisais Logo taustiņš, Ciparu tastatūras Enter, Abi Logo taustiņi, Abi Alt taustiņi
Choices-mk.UTF-8: Основен избор за распоредот на тастатурата, Без AltGr копче, Десен Alt (AltGr), Десен Control, Десното Лого копче, Мени копче, Лев Alt, Левото лого копче, Ентер на нумеричка тастатура, Двете лого копчиња, Двете Alt копчиња
Choices-ml.UTF-8: ഒരു കീബോര്‍ഡ് വിന്യാസത്തിന്റെ സഹജവില, ആള്‍ട്ട്ജിആര്‍ കീ ഇല്ല, വലത് ആള്‍ട്ട് (AltGr), വലത് കണ്ട്രോള്‍, വലത് ലോഗോ കീ, മെനു കീ, ഇടത് ആള്‍ട്ട്, ഇടത് ലോഗോ കീ, കീപാഡ് എന്‍ര്‍ കീ, രണ്ടു് ലോഗോ കീകളും, രണ്ടു് ആള്‍ട്ട് കീകളും
Choices-mr.UTF-8: कळफलकाचा मूलनिर्धारित आरखडा, AltGr कळ नाही, उजवी Alt (AltGr), उजवी Control, उजवी लोगो कळ, मेनू कळ, डावी Alt, डावी लोगो कळ, कळपॅड एंटर कळ, दोन्ही लोगो कळी, दोन्ही Alt कळी
Choices-nb.UTF-8: Standarden for tastaturutformingen, Ingen AltGr-tast, Høyre Alt (Alt Gr), Høyre Ctrl, Høyre logotast, Menytast, Venstre Alt, Venstre logotast, Enter-tasten på det numeriske tastaturet, Begge Logo-tastene, Begge Alt-tastene
Choices-nl.UTF-8: De standaard voor de toetsenbordindeling, Geen AltGr-toets, Alt-Rechts (AltGr), Control-Rechts, Logotoets-Rechts, Menutoets, Alt-Links, Logotoets-Links, Keypad Enter-toets, Beide Logotoetsen, Beide Alt-toetsen
Choices-no.UTF-8: Standarden for tastaturutformingen, Ingen AltGr-tast, Høyre Alt (Alt Gr), Høyre Ctrl, Høyre logotast, Menytast, Venstre Alt, Venstre logotast, Enter-tasten på det numeriske tastaturet, Begge Logo-tastene, Begge Alt-tastene
Choices-pa.UTF-8: ਆਪਣਾ ਕੀ-ਬੋਰਡ ਲੇਆਉਟ ਚੁਣੋ, ਕੋਈ altGr ਸਵਿੱਚ ਨਹੀਂ, ਸੱਜਾ Alt (AltGr), ਸੱਜਾ Ctrl, ਸੱਜੀ ਲੋਗੋ ਸਵਿੱਚ, ਮੇਨੂ ਸਵਿੱਚ, ਖੱਬਾ Alt, ਖੱਬੀ ਲੋਗੋ ਸਵਿੱਚ, ਕੀ-ਪੈਡ Enter ਸਵਿੱਚ, ਦੋਵੇਂ ਲੋਗੋ ਸਵਿੱਚ, ਦੋਵੇਂ Alt ਸਵਿੱਚ
Choices-pl.UTF-8: Domyślne ustawienie dla danego układu klawiatury, Bez klawisza AltGr, Prawy Alt (AltGr), Prawy Control, Prawy klawisz logo, Klawisz menu, Lewy Alt, Lewy klawisz logo, Klawisz ENTER klawiatury pomocniczej, Oba klawisze logo, Oba klawisze Alt
Choices-pt.UTF-8: O predefinido para a disposição do teclado, Sem tecla AltGr, Alt direito (AltGr), Control Direito, Tecla Logotipo Direito, Tecla Menu, Alt Esquerdo, Tecla de Logotipo Esquerdo, Tecla Enter do teclado numérico, Ambas as teclas de Logotipo, Ambas as teclas Alt
Choices-pt_BR.UTF-8: O padrão para o layout de teclado, Sem tecla AltGr, Alt Direito (AltGr), Control Direito, Tecla Logo Direita, Tecla Menu, Alt Esquerdo, Tecla Logo Esquerda, Tecla Enter do teclado numérico, Ambas teclas Logo, Ambas teclas Alt
Choices-ro.UTF-8: Valoarea implicită a aranjamentului de tastatură, Fără tastă AltGr, Alt dreapta (AltGr), Control dreapta, Tasta logo dreapta, Tasta meniu, Alt stânga, Tasta logo stânga, Tasta Enter de pe keypad, Ambele taste Logo, Ambele taste Alt
Choices-ru.UTF-8: Раскладка клавиатуры по умолчанию, нет клавиши AltGr, правый Alt (AltGr), правый Control, правая клавиша с логотипом, клавиша с меню, левый Alt, левая клавиша с логотипом, Enter на цифр. клавиатуре, обе клавиши с логотипом, обе клавиши Alt одновременно
Choices-si.UTF-8: යතුරුපුවරු ආකෘතිය සඳහා සම්මතය, AltGr යතුරක් නැත, දකුණු Alt (AltGr), දකුණු Control, දකුණු ලාංඡය යතුර, මෙනු යතුර, වම් Alt, වම් ලාංඡන යතුර, අංක පුවරුවේ Enter යතුර, ලෝගෝ යතුරු දෙකම, Alt යතුරු දෙකම
Choices-sk.UTF-8: Predvolené rozloženie klávesnice, Žiaden kláves Alt, Pravý Alt (AltGr), Pravý Control, Pravý kláves Logo, Kláves Menu, Ľavý Alt, Ľavý kláves Logo, Kláves Enter na numerickej klávesnici, Oba klávesy Logo, Oba klávesy Alt
Choices-sl.UTF-8: Privzeta postavitev tipkovnice, Brez Desne izmenjalke, Desna izmenjalka (AltGR), Desna krmilka (Control), Desna tipka z znakom, Menijska tipka, Leva izmenjalka (Alt), Leva tipka z znakom, Vnašalka na številski tipkovnici, Obe tipki z znakom, Obe izmenjalki
Choices-sr.UTF-8: Подразумевани распоред тастатуре, Нема AltGr тастера, Десни Alt (AltGr), Десни Control, Десни лого тастер, Мени тастер, Леви Alt, Леви лого тастер, Тастер Enter на нумеричкој тастатури, Оба лого тастера, Оба Alt тастера
Choices-sr@latin.UTF-8: Podrazumevani raspored tastature, Nema AltGr tastera, Desni Alt (AltGr), Desni Control, Desni logo taster, Meni taster, Levi Alt, Levi logo taster, Taster Enter na numeričkoj tastaturi, Oba logo tastera, Oba Alt tastera
Choices-sv.UTF-8: Standardvärdet för tangentbordslayouten, Ingen AltGr-tangent, Alt\, höger (AltGr), Control\, höger, Tangent med logotyp\, höger, Menyknapp, Alt\, vänster, Tangent med logotyp\, vänster, Enter på numeriskt tangentbord, Båda tangenterna med logotype, Båda Alt-tangenterna
Choices-ta.UTF-8: முன்னிருப்பு விசைப்பலகை இடஅமைவு , AltGr  விசை இல்லை, வலது ஆல்ட் (AltGr), வலது கன்ட்ரோல், வலது லோகோ விசை, மெனு விசை, இடது ஆல்ட், இடது லோகோ விசை, விசை பலக உள்ளீடு , இரண்டு லோகோ விசைகளும், இரண்டு ஆல்ட் விசைகளும்
Choices-te.UTF-8: ఒక కీబోర్డు లేఔటు  ఎంచుకోకపోతే  తీసుకొనేది, AltGr కీ లేదు, కుడి ఆల్ట్ (AltGr), కుడి కంట్రోల్, కుడి బొమ్మ కీ, మెనూ కీ, ఎడమ ఆల్ట్, ఎడమ బొమ్మ కీ, కీపాడ్ ఎంటర్ కీ, రెండు బొమ్మ(లోగో) కీలు, రెండు ఆల్ట్ కీలు
Choices-tg.UTF-8: Тарҳбандии пешфарз барои клавиатура, Бе тугмаи AltGr, Alt-и рост (AltGr), Control-и рост, Тугмаи рости тамға, Тугмаи меню, Alt-и чап, Тугмаи чапи тамға, Тугмаи Enter дар клавиатураи рақамӣ, Ҳар дуи тугмаи тамға, Ҳар дуи тугмаи Alt
Choices-th.UTF-8: ค่าปริยายของผังแป้นพิมพ์, ไม่ใช้ปุ่ม AltGr, Alt ขวา (AltGr), Control ขวา, ปุ่มโลโก้ขวา, ปุ่มเมนู, Alt ซ้าย, ปุ่มโลโก้ซ้าย, ปุ่ม Enter ในแป้นตัวเลข, ปุ่มโลโก้คู่, ปุ่ม Alt คู่
Choices-tr.UTF-8: Öntanımlı klavye düzeni, AltGr tuşu yok, Sağ Alt (AltGr), Sağ Control, Sağ Logo tuşu, Menü tuşu, Sol Alt, Sol Logo tuşu, Tuş takımı Enter tuşu, Her iki Logo tuşu, Her iki Alt tuşu
Choices-ug.UTF-8: ھەرپتاختا جايلاشتۇرۇشنىڭ كۆڭۈلدىكى قىممىتى, AltGr كۇنۇپكا يوق, ئوڭ Alt (AltGr), ئوڭ Control, ئوڭ  Logo كۇنۇپكا, تىزىملىك كۇنۇپكا, سول Alt, سول Logo كۇنۇپكا, كىچىك ھەرپتاختا Enter كۇنۇپكىسى, ئىككى Logo كۇنۇپكىسى, ئىككى Alt كۇنۇپكىسى
Choices-uk.UTF-8: Звична для даної розкладки клавіатури, Не AltGr клавіша, Правий Alt (AltGr), Правий Control, Права клавіша Logo, Клавіша Menu, Лівий Alt, Ліва клавіша Logo, Клавіша Enter на цифровій клавіатурі, Обидві клавіші Logo, Обидві клавіші Alt
Choices-vi.UTF-8: Giá trị mặc định cho bố trí bàn phím, Không có phím AltGr, Alt phải (AltGr), Ctrl phải, Phím biểu hình bên phải, Phím trình đơn, Alt trái, Phím biểu tượng bên trái, Phím Gõ Vùng Phím, Cả hai phím biểu hình, Cả hai phím Alt
Choices-zh_CN.UTF-8: 键盘布局默认值, 无 AltGr 键, 右 Alt 键 (AltGr), 右 Control 键, 右徽标键, 菜单键, 左 Alt, 左徽标键, 小键盘回车键, 两个徽标键, 两个 Alt 键
Choices-zh_TW.UTF-8: 鍵盤排列方式的預設值, 沒有 AltGr 鍵, 左邊的 Alt (AltGr), 右邊的 Control, 右邊的 Logo 鍵, Menu 鍵, 左邊的 Alt, 左邊的 Logo 鍵, 數字區的 Enter 鍵, 兩邊的 Logo 鍵, 兩邊的 Alt 鍵
Default: Right Alt (AltGr)
Description: Key to function as AltGr:
 With some keyboard layouts, AltGr is a modifier key used to input
 some characters, primarily ones that are unusual for the language of the
 keyboard layout, such as foreign currency symbols and accented letters.
 These are often printed as an extra symbol on keys.
Description-ar.UTF-8: المفتاح المطلوب استخدامه كمفتاح AltGr:
 ببعض مخططات لوحات المفاتيح، يكون مفتاح AltGr مفتاح التعديل المستخدم لإدخال بعض الحروف، بالأخص تلك التي ليست متوفرة في تخطيط اللغة للوحة المفاتيح، كرموز العملات والأحرف اللاتينية المشكّلة. تكون هذه الرموز عادة مطبوعة كرموز إضافية على المفاتيح.
Description-ast.UTF-8: Tecla pa la función AltGr:
 Con dalgunes disposiciones de tecláu, AltGr ye una tecla camudadora que s'usa pa introducir dalgunos caráuteres, principalmente aquellos que son inusuales pa la llingua de la distribución del tecláu, como símbolos de moneda extranxera y lletres acentuaes. Estes suelen amosase como un símbolu estra nes tecles.
Description-be.UTF-8: Кнопка, якая будзе працаваць як AltGr:
 У некаторах клавіятурных раскладках AltGr - кнопка-мадыфікатар для ўводу пэўных знакаў, што адсутнічаюць у мове клавіятурнай раскладкі: напрыклад, знакі іншаземнай валюты і літары з націскамі. Яны звычайна надрукаваны як дадатковы сімвал на клавішах.
Description-bg.UTF-8: Клавиш, използван като AltGr:
 При някои клавиатурни подредби клавишът AltGr e модификатор, който се използва за въвеждането на някои знаци, предимно такива, които са необичайни за езика на клавиатурната подредба, като знаци за различни парични единици и букви с диакритични знаци.  Тези знаци често са изрисувани като допълнителни символи на клавишите.
Description-bn.UTF-8: AltGr এর মত কাজের জন্য কী:
 কিছু কীবোর্ড লেআউটে AltGr একটি মডিফায়ার কী যা ব্যবহার হয় কিছু ক্যারেক্টার ইনপুট দিতে, সাধারণত যেগুলো কীবোর্ডের লেআউটে থাকেনা, যেমন বিদেশী টাকার চিহ্ন ও বিশেষ অক্ষর। এগুলোপ্রায়ই কী-র উপর অতিরিক্ত চিহ্ন হিসেবে প্রিন্ট করা থাকে।
Description-bo.UTF-8: AltGr སྤྱོད་ནུས་ཡོད་པའི་མཐེབ：
 མཐེབ་གཞོང་འགའ་ཞིག་གི་ཐོག་ཏུ་AltGr མཐེབ་ནི་སྐད་རིགས་ཀྱི་མཐེབ་གཞོང་ལ་ཐུན་མོང་མིན་པའི་ཡི་གེ་འཇུག་པར་སྤྱོད་པ དཔེར་ན་ཕྱི་རྒྱལ་གྱི་དངུལ་ལོའི་རྟགས་དང་ཡུལ་སྐད་དབྱེ་བྱེད་ཀྱི་ཡི་གེ་ལྟ་བུ འདི་དག་ནི་མཐེབ་ཐོག་ཏུ་ཟུར་སྣོན་གྱི་རྟགས་ཀྱི་ཚུལ་དུ་པར་འདེབས་བྱས་ཡོད
Description-bs.UTF-8: Tipka s funkcijom AltGr:
 Kod nekih rasporeda tastature, AltGr je modifikaciona tipka za unos određenih karaktera, uglavnom onih koji su neobični za jezik rasporeda tastature, poput simbola stranih valuta i slova sa akcentima. Ovi simboli su obično dopisani posebno na tipkama.
Description-ca.UTF-8: Tecla per a fer de AltGr:
 En algunes disposicions, AltGr és una tecla de modificació que s'empra per a introduir alguns caràcters, generalment alguns que són inusuals per a la llengua de la disposició del teclat, com poden ser símbols de divises estrangeres i lletres accentuades. Aquests són freqüentment impresos com símbols extra a les tecles.
Description-cs.UTF-8: Klávesa pro funkci AltGr:
 V některých klávesových rozloženích se modifikátor AltGr používá pro zadávání některých znaků, hlavně těch, které jsou pro daný jazyk neobvyklé, jako jsou cizí symboly měn nebo akcentovaná písmena. Tyto jsou obvykle vytištěny na klávesách jako další symbol (často odlišnou barvou).
Description-cy.UTF-8: Bysell i weithredu fel AltGr:
 Ar rhai cynlluniau bysellfwrdd, defnyddir AltGr fel bysell addasydd i deipio rhai nodau, yn bennaf rhai sydd yn anghyffredin i iaith y cynllun bysellfwrdd, fel symbolau arian tramor a llythrennau acennog. Yn aml mae'r rhain wedi eu argraffu fel symbol ychwanegol ar fysellau.
Description-da.UTF-8: Tast, der fungerer som AltGr:
 I nogle tastaturlayouts er AltGr en ændringstast, der bliver brugt til at indtaste visse tegn, primært de der er usædvanlige for tastaturlayoutets sprog. Det kan være symboler for fremmed valuta og accentuerede bogstaver.
Description-de.UTF-8: Taste, die als AltGr fungieren soll:
 Bei manchen Tastaturbelegungen ist AltGr eine Modifikatortaste, die zur Eingabe einiger Zeichen verwendet wird. Hauptsächlich wird sie für solche Zeichen verwendet, die für die Sprache der Tastatur ungewöhnlich sind, wie ausländische Währungssymbole und akzentuierte Buchstaben. Diese werden oft als Extrasymbol auf die Tasten gedruckt.
Description-dz.UTF-8: AltGr སྦེ་ལཱ་འབད་ནིའི་ལྡེ་ཡིག:
 ལྡེ་སྒྲོམ་སྒྲིག་བཀོད་ལ་ལོ་ཅིག་དང་གཅིག་ཁར་ AltGr འདི་ ལེགས་བཅོས་ལྡེ་ཡིག་ཨིནམ་དང་ དེ་ཡང་ གཙོ་བོ་ར་ ཨ་རྟག་དང་མ་འདྲ་བའི་ལྡེ་སྒྲོམ་སྒྲིག་བཀོད་སྐད་ཡིག་ དཔེར་ན་ ཕྱི་དངུལ་བརྡ་མཚོན་དང་སྒྲ་གདངས་ཅན་གྱི་ཡི་གུའི་རིགས་ཚུ་ཨིན་པུཊི་འབད་ནི་གི་དོན་ལུ་ལག་ལེན་འཐབ་དོ་ཡོདཔ་ཨིན། དེ་ཚུ་ འཕྲལ་འཕྲལ་ར་ ལྡེ་སྒྲོམ་གུ་བརྡ་མཚོན་ཐེབས་སྦེ་བཀོད་དོ་ཡོདཔ་ཨིན།
Description-el.UTF-8: Πλήκτρο για λειτουργία ως AltGr:
 Με μερικές διατάξεις πληκτρολογίου, το πλήκτρο AltGr χρησιμοποιείται ως πλήκτρο-μεταβολέας για την εισαγωγή μερικών χαρακτήρων, κυρίως κάποιων ασυνήθιστων για την γλώσσα που αντιστοιχεί στη διάταξη αυτή, για παράδειγμα σύμβολα ξένων νομισμάτων και γράμματα με διάφορους τόνους. Αυτά τυπώνονται συνήθως πάνω στα πλήκτρα σαν επιπλέον σύμβολα.
Description-eo.UTF-8: Klavo por funkcii kiel AltGr:
 En kelkaj klavar-aranĝoj, AltGr estas modifilo-klavo uzata por enigi kelkajn signojn, principe tiuj neordinaraj por la lingvo de la klavar-aranĝo, kiel fremdaj valut-simboloj kaj supersignitaj literoj. Tiuj signoj ofte estas printitaj kiel kroman simbolon sur la klavoj.
Description-es.UTF-8: Tecla a utilizar para AltGr:
 Con algunas distribuciones de teclados, AltGr es una tecla modificadora que se utiliza para introducir algunos caracteres, principalmente aquellos que no son usuales para el idioma de la distribución del teclado, tales como símbolos de monedas extranjeras y letras acentuadas. Éstas normalmente se muestran como un símbolo extra en las teclas.
Description-et.UTF-8: Klahv, mida kasutada AltGr klahvina:
 Mõnede klaviatuuripaigutuste korral on AltGr muuteklahv mõnede selles keeles või sel klaviatuuri harvaesinevate märkide sisestamiseks, nagu seda on välismaised valuutamärgid ja rõhumärkidega tähed. Need märgid on tihti ka klaviatuurile trükitud lisamärkidena.
Description-eu.UTF-8: AltGr funtzioa egiteko tekla:
 Teklatuaren diseinu batzuetan, AltGr tekla eraldatzaile bat da zenbait karaktere idazteko, nagusiki teklatuaren diseinuan gutxitan erabiltzen direnak, hala nola atzerriko diru ikurrak eta azentuak. Tekla batek hirugarren ikur bat badu AltGR sakatzea ikur hori idazteko modua izan ohi da.
Description-fa.UTF-8: کلیدی که مانند AltGr عمل کند: 
 در برخی از صفحه کلید ها کلید AltGr یک کلید کمکی برای وارد کردن برخی کاراکتر هاست، که برای طرح بندی صفحه کلید آن زبان غیر معمول است. برای نمونه می توان به نماد های واحد پول و حروف مربوط به تلفظ اشاره کرد. این ها اعلب به صورت نماد های اضافه در کنار دیگر حروف دیگر چاپ شده اند.
Description-fi.UTF-8: AltGr-näppäimenä toimiva näppäin:
 Joissain näppäinasetteluissa AltGr on muuntonäppäin, jonka avulla voidaan syöttää joitain merkkejä. Nämä on yleensä näppäinasettelun kielelle epätyypillisiä, kuten ulkomaisia valuuttasymboleita ja aksentoituja kirjaimia. Nämä merkit on usein merkitty ylimääräisenä symbolina näppäimiin.
Description-fr.UTF-8: Touche destinée à se substituer à AltGr :
 Avec certaines dispositions de claviers, AltGr est une touche de modification utilisée pour entrer de nombreux caractères, principalement ceux qui n'appartiennent pas à la langue correspondant à la disposition du clavier, comme les symboles des devises étrangères et les lettres accentuées. Ces caractères sont généralement indiqués sous forme de symboles supplémentaires sur les touches.
Description-ga.UTF-8: Eochair le húsáid mar AltGr:
 Le roinnt leaganacha amach, is eochair mhionathraithe é AltGr a úsáidtear chun litreacha áirithe a chlóscríobh, go háirithe litreacha nach bhfuil coitianta i dteanga leagan amach an mhéarchláir, mar shampla siombailí airgeadra eachtraigh agus litreacha le síntí fada. Go minic, tá na carachtair seo priontáilte mar shiombail bhreise ar na heochracha.
Description-gl.UTF-8: Tecla a usar como Alt Gr
 Con algunhas das disposicións de teclado, Alt Gr é unha tecla modificadora que se emprega para introducir algúns caracteres; principalmente algúns pouco habituais para o idioma da disposición de teclado, como símbolos de moedas estranxeiras ou letras acentuadas. Estes símbolos xeralmente están impresos nas teclas.
Description-gu.UTF-8: AltGr તરીકે કાર્ય કરવા માટેની કળ:
 કેટલાક કીબોર્ડ દેખાવની સાથે, AltGr બદલાવ કળ કેટલાક અક્ષરો દાખલ કરવા માટે વપરાય છે, મોટાભાગે જેઓ કીબોર્ડની ભાષા માટે અસામાન્ય હોય છે, દાખલા તરીકે વિદેશી ચલણ સંજ્ઞા અને એસેન્ટ અક્ષરો. આ મોટોભાગે કળો પર વધારાની સંજ્ઞા તરીકે છાપેલ હોય છે.
Description-he.UTF-8: מקש לשימוש כ-AltGr:
 בכמה פריסות מקלדת, AltGr הינו מקש לשינוי המשמש להקלדת כמה תווים, בעיקר תווים חריגים עבור שפת פריסת המקלדת, כגון מטבע זר, סמלים ואותיות עם אקצנטים. לעתים קרובות תווים אלה מודפסים כסמלים נוספים על המקשים.
Description-hi.UTF-8: ऑल्ट-जीआर (AltGr) का स्थान लेने वाली कुंजी:
 कुछ कुंजीपटल अभिन्यासों के साथ, ऑल्टजीआर "modifier" है, जिसके द्वाराकुछ अक्षर लिखे जा सकते हैं, साधारणतः वह अक्षर जिनका अधिक उपयोग उस कुंजीपटल के भाषामें न हों; उदारानातः विदेशी मुद्राओं का चिह्न एवं विशेष अक्षर. ये ज़्यादातर कुंजीपटल परअन्य अक्षरों के रूप में दिखते हैं.
Description-hr.UTF-8: Tipka koju želite da radi kao AltGr:
 Kod nekih rasporeda tipkovnice, AltGr je tipka izmjene koja se koristi za unos nekih znakova, prvenstveno onih koji nisu uobičajeni za jezik rasporeda tipkovnice, kao što su simboli za stranu valutu i akcentirana slova. Obično su ispisani kao dodatni simboli na tipkama.
Description-hu.UTF-8: AltGr-ként működő billentyű:
 Egyes billentyűzetkiosztásokon az AltGr egy olyan módosító billentyű, amely főként olyan karakterek bevitelére használható,amelyek szokatlanok a kiosztás nyelvén, például idegen pénzjelek és ékezetes betűk. Ezek gyakran extra jelekként vannak a billentyűkön feltüntetve.
Description-id.UTF-8: Tombol untuk AltGr:
 Pada beberapa pola keyboard, AltGr digunakan untuk mengetik beberapa aksara, terutama aksara tak biasa dari bahasa pada pola keyboard, seperti simbol mata uang asing dan aksara beraksen. Aksara-aksara ini seringkali tersedia sebagai simbol tambahan pada tombol.
Description-is.UTF-8: Lykill sem á að virka sem AltGr:
 Í sumum lyklaborðsframsetningum er AltGr notaður sem breytilykill til innsetningar stöfum, aðallega stöfum sem eru óalgengir í tungumálinu sem tilheyrir viðkomandi lyklaborðsframsetningu, t.d. erlend gjaldmiðlatákn og ýmsir broddstafir. Í sumum tilfellum eru þessir stafir prentuaðir sem aukatákn á lyklana.
Description-it.UTF-8: Tasto da usare come Alt destro:
 Con alcune disposizioni di tastiera, il tasto AltGr è un tasto modificatore usato per inserire determinati caratteri (essenzialmente quelli inusuali per la lingua corrispondente alla disposizione della tastiera) come, per esempio, simboli di monete straniere e lettere con le dieresi. Questi vengono spesso mostrati come simboli addizionali sui tasti.
Description-ja.UTF-8: AltGr として機能させるキー:
 いくつかのキーボード配置においては、AltGr は、外国の通貨文字やアクセント文字のように本来キーボード配置の言語では使われないいくつかの文字を入力するのに使われる修飾キーです。これらはたいてい、キーに追加文字として印字されています。
Description-kk.UTF-8: AltGr үшін перне:
 Кейбір пернетақта жаймаларымен, түрлендіргіш ретінде AltGr, кейбір таңбаларды енгізу үшін қолданылады, көбінесе, ағымдағы пернетақта жаймасының тілінде жоқ таңбалар, мысалы, шетел ақша таңбалары сияқты.
Description-km.UTF-8: គ្រាប់ចុច​​ត្រូវ​កំណត់​មុខងារ​ជា AltGr ៖
 With some keyboard layouts, AltGr is a modifier key used to input some characters, primarily ones that are unusual for the language of the keyboard layout, such as foreign currency symbols and accented letters. These are often printed as an extra symbol on keys.
Description-kn.UTF-8: AltGr ಆಗಿ ಕಾರ್ಯ ನಿರ್ವಹಿಸುವ ಕೀಲಿ:
 ಕೆಲವು ಕೀಲಿಮಣೆ ವಿನ್ಯಾಸಗಳಲ್ಲಿ ಕೆಲವು ಅಕ್ಷರಗಳನ್ನು ದಾಖಲಿಸಲು AltGr ಅನ್ನು ಪರಿವರ್ತಕ ಕೀಲಿಯಾಗಿ ಬಳಸಲಾಗುತ್ತದೆ, ಮುಖ್ಯವಾಗಿ ಕೀಲಿಮಣೆ ವಿನ್ಯಾಸದ ಭಾಷೆಗೆ ಅಸಾಮಾನ್ಯವಾದ ಅಕ್ಷರಗಳು, ಉದಾಹರಣೆಗೆ ವಿದೇಶಿ ಹಣದ ಚಿಹ್ನೆಗಳು ಮತ್ತು ಉಚ್ಛರಣಾ ಚಿಹ್ನೆಗಳು. ಇವುಗಳು ಸಾಮಾನ್ಯವಾಗಿ ಕೀಲಿಗಳು ಹೆಚ್ಚುವರಿ ಚಿಹ್ನೆಗಳಾಗಿ ಮುದ್ರಿಸಲಾಗುತ್ತದೆ.
Description-ko.UTF-8: AltGr 키로 동작할 키:
 몇몇 키보드 배치에서 AltGr 키는, 화폐 기호나 액센트가 들어간 문자 따위처럼 해당 언어에서 자주 쓰이지 않는 문자를 입력하는데 사용합니다. 이런 문자는 키의 추가 기호로 인쇄되어 있기도 합니다.
Description-ku.UTF-8: Kilîla fonksiyonê wekî AltGr:
 Bi hin cureyên klavyeyan, AltGr ji bo nivîsandina hin curenivîsan tê bikaranîn.
Description-lo.UTF-8: ກະແຈສຳຄັນໃນການໃຊ້ງານເປັນ AltGr:
 ບາງລາຍການໂຄງຮ່າງແປ້ນພິມ AltGr ເປັນກະແຈທີ່ສຳຄັນທີ່ໃຊ້ໃນການປັບປຸງໃສ່ອັກຄະລະບາງໂຕຫລັກຄົນທີ່ຜິດປົກກະຕິສສຳຫລັບພາສາຂອງຜັງແປ້ນພິມເຊັ່ນລັກສະນະສະກຸນເງີນຕ່າງປະເທດແລະໂຕອັກສອນເນັ້ນສຽງເຫລົ່ານີ້ຈະຖືກພິມມັກຈະເປັນລັກສະນະພິເສດເທິງແປ້ນ
Description-lt.UTF-8: Lyg3 funkciją atliksiantis klavišas:
 Kai kuriuose klaviatūros išdėstymuose naudojamas klavišas Lyg3 (AltGr), skirtas įvesti rečiau naudojamiems simboliams – užsienio valiutų ženklams, raidėms su diakritikais ir pan. Paprastai tokie simboliai atspausdinami ant klaviatūros papildomoje vietoje.
Description-lv.UTF-8: Taustiņš, kas kalpos kā AltGr:
 Dažos tastatūru izkārtojumos AltGr tiek lietots kā modifikācijas taustiņš, lai ievadītu dažus burtus, parasti tie neparastie burti un simboli, kā piemēram ārzemju valūtu simboli un akcentēties burti (piemēram, latviešu burti ar garumzīmēm). Bieži tie tiek attēloti uz tastatūras kā papildu simboli uz taustiņiem.
Description-mk.UTF-8: Копче со функција како AltGr:
 Кај некои распореди на тастатура, AltGr е копче за модификација кое се користи за внес на знаци кои се невообичаени за јазикот на распоредот на тастатурата, како странски валути и акцентирани букви. Тие се најчесто испишани како дополнителен симбол на копчето.
Description-ml.UTF-8: ആള്‍ട്ട്ജിആര്‍ കീ ആയി പ്രവര്‍ത്തിയ്ക്കേണ്ട കീ:
 ചില കീബോര്‍ഡ് വ്യന്യാസത്തില്‍, AltGr കീ ചില അക്ഷരങ്ങള്‍ കൊടുക്കാന്‍ ഉപയോഗിക്കുന്നു, പ്രത്യേകിച്ച് സാധാരണ കീബോര്‍ഡിലുള്ള ഭാഷയല്ലാതെയുള്ളതോ വേറേ അക്ഷരങ്ങളോ കൊടുക്കാന്‍ ഉപയോഗിക്കുന്നു. കീകളില്‍ അധികമായ ഒരു ചിഹ്നമായാണ് അത് ഉണ്ടാകുക.
Description-mr.UTF-8: AltGr म्हणून कार्य करण्यासाठीची कळ:
 परकीय चलनांची चिन्हे व जोर देण्याची अक्षरे यांसारखे कळफलक आराखड्याच्या भाषेत नसणारे वर्ण टाईप करण्यासाठी, काही कळफलक आराखड्यांमध्ये AltGr ही बदलाव कळ वापरली जाते. बहुतेकदा हे वर्ण अतिरिक्त चिन्हांच्या स्वरूपात कळींवर छापलेले असतात.
Description-nb.UTF-8: Tast som skal fungere som AltGr:
 I noen tastaturutforminger er AltGr en modifiseringstast som brukes for å skrive noen tegn, primært de som er uvanlig for språket i tastaturutformingen, som utenlandske valutasymbol og aksenttegn. Disse vises ofte som et ekstra symbol på tastene.
Description-nl.UTF-8: Toets om te functioneren als AltGr:
 Bij sommige toetsenborden is AltGr een aanpassingstoets nodig om sommige karakters in te voeren, voornamelijk die die ongewoon zijn voor de taal van de toetsenbordindeling (zoals b.v. buitenlandse valutasymbolen, en letters met accenten). Deze staan vaak als een extra symbool op de toetsen afgedrukt.
Description-no.UTF-8: Tast som skal fungere som AltGr:
 I noen tastaturutforminger er AltGr en modifiseringstast som brukes for å skrive noen tegn, primært de som er uvanlig for språket i tastaturutformingen, som utenlandske valutasymbol og aksenttegn. Disse vises ofte som et ekstra symbol på tastene.
Description-pa.UTF-8: ਸਵਿੱਚ AltGr ਵਾਂਗ ਕੰਮ ਕਰੇਗੀ:
 ਕਈ ਕੀ-ਬੋਰਡ ਲੇਆਉਟ ਵਿੱਚ AltGr ਇਕ ਬਦਲੀ ਹੋਈ ਸਵਿੱਚ ਹੁੰਦੀ ਹੈ ਜੋ ਨਾ-ਸੁਭਾਵਿਕ ਅੱਖਰ ਜੋ ਕਿ ਕੀ-ਬੋਰਡ ਲਈ ਆਮ ਨਹੀਂ ਹੁੰਦੇ, ਪਾਉਣ ਦੇ ਕੰਮ ਆਉਂਦੀ ਹੈ ਜਿਵੇਂ ਕਿ ਵਿਦੇਸ਼ੀ ਮੁਦਰਾ ਦਾ ਨਿਸ਼ਾਨ ਤੇ accented ਅੱਖਰ। ਇਹ ਆਮ ਤੋਰ ਤੇ ਵਾਧੂ ਨਿਸ਼ਾਨ ਬਣਾ ਕੇ ਸਵਿੱਚਾਂ ਤੇ ਉੱਕਰੀ ਹੁੰਦੀ ਹੈ ।
Description-pl.UTF-8: Klawisz który ma działać jak AltGr:
 W niektórych układach klawiatur AltGr to klawisz modyfikujący, używany do wprowadzania niektórych znaków, zwłaszcza tych, które są niecodzienne w języku danego układu klawiatury, na przykład symbole zagranicznych walut lub akcentowanych liter. Są one często wydrukowane jako dodatkowy symbol na klawiszach.
Description-pt.UTF-8: Tecla para funcionar como AltGr:
 Em alguns teclados, o AltGr serve de modificador para escrever alguns caracteres, especialmente alguns que são invulgares na língua configurada, tais como símbolos de moeda estrangeira e letras acentuadas. Estes símbolos são frequentemente indicados como símbolos extra nas teclas.
Description-pt_BR.UTF-8: Tecla para funcionar como AltGr:
 Com alguns layouts de teclado, AltGr é uma tecla modificadora usada para introduzir alguns caracteres, principalmente aqueles que não são usuais para o idioma do layout do teclado, como símbolos de moedas estrangeiras e letras acentuadas. Estes são frequentemente impressos como um símbolo extra sobre as teclas.
Description-ro.UTF-8: Tasta care funcționează ca AltGr:
 La anumite aranjamente de tastatură AltGr este o tastă de modificare, folosită pentru introducerea anumitor caractere, în special acelea care nu sunt uzuale pentru limba aranjamentului de tastatură, cum are fi simboluri pentru valute sau litere cu accent. Acestea sunt în multe cazuri inscripționate pe taste ca un simbol adițional.
Description-ru.UTF-8: Клавиша, используемая как AltGr:
 В некоторых раскладках клавиатуры есть клавиша-модификатор AltGr, используемая для ввода, в основном, редко используемых в языке раскладки клавиатуры символов, например, символа национальной валюты и символы с диакритическим знаком. Они часто указаны на клавишах как дополнительные символы.
Description-si.UTF-8: AltGr ලෙස ක්‍රියාකරන යතුර:
 ඇතැම් යතුරුපුවරු සැකසුම් වලදී, AltGr යතුර ඇතැම් අක්‍ෂර ඇතුලත් කිරීමට යොදාගන්නා විශේෂ යතුරකි. විදේශීය මූල්‍ය සංඛේත හා අක්‍ෂර වැනි යතුරුපුවරුවේ සාමාන්‍යෙන් නොපවතින යතුරු සඳහා ප්‍රධාන වශ්‍යෙන් යොදාගැනේ. මේවා බොහෝ විට අමතර අක්‍ෂර ලෙස යතුරු මත මුද්‍රණය කර ඇත.
Description-sk.UTF-8: Kláves, ktorý má fungovať ako AltGr:
 V niektorých rozloženiach klávesnice je AltGr modifikátor používaný na zadávanie niektorých znakov, predovšetkým takých, ktoré sú v jazyku rozloženia klávesnice nezvyčajné. Tieto sú na klávesnici často vyznačené ako ďalšie symboly.
Description-sl.UTF-8: Tipka, ki naj deluje kot desna izmenjalka:
 Pri nekaterih postavitvah tipkovnic je Desna izmenjalka tipka za spreminjaje. Uporablja se predvsem za vnos znakov, ki niso običajni za jezik postavitve tipkovnice. Taki znaki so lahko na primer znaki za valute ali naglašene črke. Pogosto so natisnjeni kot dodaten simbol na tipki.
Description-sr.UTF-8: Тастер за AltGr функцију:
 Код неких распореда тастатуре, AltGr је тастер којим се могу откуцати додатни карактери, обично они који нису уобичајни за језик или распоред тастатуре, као на пример симболи валута и акцентована слова. Такави знаци су обично додатно означени на тастерима.
Description-sr@latin.UTF-8: Taster za AltGr funkciju:
 Kod nekih rasporeda tastature, AltGr je taster kojim se mogu otkucati dodatni karakteri, obično oni koji nisu uobičajni za jezik ili raspored tastature, kao na primer simboli valuta i akcentovana slova. Takavi znaci su obično dodatno označeni na tasterima.
Description-sv.UTF-8: Tangent att fungera som AltGr:
 I en del tangentbordsupplägg så är AltGr en modifierande tanget som används för att skriva tecken som inte är vanliga i språket för tangentbordsupplägget. Exempelvis accenter eller symboler för utländsk valuta. Dessa finns vanliga utrskivna som extra tecken på tangenterna.
Description-ta.UTF-8: AltGr  ஆக செயல்பட வேண்டிய விசை:
 சில விசைப்பலகை இட அமைவுகளில் AltGr  சில எழுத்துருக்களை உள்ளிட மாற்றி விசையாக அமைக்கப்படும். இந்த சில எழுத்துருக்கள் அந்த அந்த மொழிக்கு சிறப்பானவை - வெளி நாட்டு பண குறிகள் சிறப்பு குறியிட்ட எழுத்துக்கள் போன்றவை. இவை பல சம்யங்களில் கூடுதல் சின்னங்களாக விசைகளில் காணப்படும்.
Description-te.UTF-8: AltGr గా పనిచేయటకు కీ:
 కొన్ని కీబోర్డు లేఔట్లలో, AltGr ని కొన్ని అక్షరాలు(వాడుక భాషకి సంబంధించని విదేశ ద్రవ్య చిహ్నాలు మరియు ప్రత్యేక అక్షరాలు) ప్రవేశపెట్టటానికి వాడతారు. కీలపై వాటిని అదనపు చిహ్నలుగా ముద్రించివుంటాయి.
Description-tg.UTF-8: Тугмае, ки ҳамчун AltGr амал мекунад:
 Баъзе тарҳбандиҳои клавиатура тугмаи тағйирёбандаи AltGr барои вуруди баъзе аломатҳо истифода мешавад, асосан аломатҳое, ки барои забони тарҳбандии клавиатура ғайриоддӣ мебошанд, монанди рамзҳои асъорӣ ва ҳарфҳои заданок. Бисёр мартаба ин аломатҳо ҳамчун иловагӣ дар тугмаҳои клавиатура чоп карда мешаванд.
Description-th.UTF-8: ปุ่มที่จะใช้เป็น AltGr:
 ในผังแป้นพิมพ์บางแบบ AltGr จะใช้เป็นปุ่มประกอบในการป้อนอักขระบางตัว ซึ่งมักเป็นอักขระแปลกปลอมสำหรับภาษาของผังแป้นพิมพ์ เช่นสัญลักษณ์หน่วยเงินตราต่างประเทศ และอักขระที่มีเครื่องหมายกำกับเสียง อักขระเหล่านี้มักจะแสดงไว้เป็นอักขระพิเศษบนปุ่ม
Description-tr.UTF-8: AltGR olarak işlev görecek olan tuş:
 Bazı klavye düzenlerinde AltGr çeşitli karakterlerin girilmesini sağlayan bir niteleyici tuştur.  Bu karakterlerin büyük bir bölümü, yabancı para simgeleri ve aksanlı harfler gibi, kullanılan klavye düzenine ait dilde yaygın olmayan karakterlerden oluşur. Eğer bir tuşta üçüncü bir simge görüyorsanız AltGr tuşu çoğunlukla bu simgenin girilmesini sağlamakta kullanılır.
Description-ug.UTF-8: AltGr ئىقتىدارى سۈپىتىدىكى كۇنۇپكا:
 بەزى ھەرپتاختا جايلاشتۇرۇشىدا، AltGr بەزى ھەرپلەرنى ئالماشتۇرۇپ كىرگۈزۈشكە ئىشلىتىلىدۇ، ئاساسلىقى نۆۋەتتىكى ھەرپتاختا جايلاشتۇرۇشىدا ئىنتايىن ئاز ئىشلىتىلىدىغان ھەرپلەرنى كىرگۈزۈشكە ئىشلىتىلىدۇ، مەسىلەن چەت تىللاردىكى پۇل بەلگىسى ۋە ئۇرغۇ بەلگىسى. بۇ ھەرپلەر ئادەتتە نورمىدىن ئارتۇق ھەرپلەر سۈپىتىدە ھەرپتاختىغا بېسىلغان بولىدۇ.
Description-uk.UTF-8: Клавіша з функцією AltGr:
 Для деяких розкладок клавіатури клавіша-модифікатор AltGr використовується для вводу деяких незвичних для мови розкладки клавіатури символів, таких як символи іноземних валют або акцентовані літери. Часто на клавішах роблять їх додаткові зображення.
Description-vi.UTF-8: Phím để dùng thay cho AltGr:
 Trên một số bố trí bàn phím nào đó, AltGr là một phím bổ trợ dùng để gõ một số ký tự, chính là ký tự khác với ngôn ngữ của bố trí bàn phím, v.d. ký hiệu tiền tệ nước ngoại và chữ có dấu phụ lạ. Ký tự như vậy thường được in trên phím dạng một ký hiệu bổ sung.
Description-zh_CN.UTF-8: 作为 AltGr 的键：
 在一些键盘布局中，AltGr 是用来输入某些字符的转换键，主要用来输入当前键盘布局很少使用到的字符，比如外语中的货币符号和口音字母。这些字符通常会作为额外符号印在键上。
Description-zh_TW.UTF-8: 做為 AltGr 的鍵
 在某些鍵盤的排列方式裡，會把 AltGr 當作修改鍵，用來輸入在該語言的鍵盤的排列方式裡一些不常用到的字元，像是別國的貨幣符號及重音字元之類的。這些鍵的上面常常會印有額外的符號。

Template: keyboard-configuration/compose
Type: select
Choices: No compose key, Right Alt (AltGr), Right Control, Right Logo key, Menu key, Left Logo key, Caps Lock
Choices-am.UTF-8: የማዘጋጃ ቁልፍ አልተገኘም, ቀኝ Alt (AltGr), ቀኝ Control, ቀኝ Logo key, ምናሌ ቁልፍ, ግራ Logo key, Caps Lock
Choices-ar.UTF-8: لا مفتاح تكوين, زر Alt اليمين (AltGr), زر Control الأيمن, مفتاح الشعار الأيمن, مفتاح القائمة, مفتاح الشعار الأيسر, Caps Lock
Choices-ast.UTF-8: Ensin tecla Compose, Alt drecha (AltGr), Control Derecha, Tecla Logu Derecha, Tecla Menú, Tecla Logu Izquierda, Caps Lock
Choices-be.UTF-8: Няма кнопкі compose, Правы Alt (AltGr), Правы Control, Правая кнопка Logo, Кнока меню, Левая кнопка Logo, Caps Lock
Choices-bg.UTF-8: Без клавиш „Compose“, Десен Alt (AltGr), Десен Control, Десен клавиш с лого, Клавиш меню, Ляв клавиш с лого, Caps Lock
Choices-bn.UTF-8: কোন কম্পোজ কী নয় , ডান Alt  (AltGr), ডান কন্ট্রোল, ডান লোগো কী, মেনু কী, বাম লোগো কী, ক্যাপস্ লক
Choices-bo.UTF-8: མཉམ་རྡེབ་མཐེབ་མེད་པ, Alt གཡས (AltGr), Control གཡོན, མཚོན་རྟགས་མཐེབ་གཡས, འདེམས་ཐོ་མཐེབ, མཚོན་རྟགས་མཐེབ་གཡོན, ཆེ་བྲིས་ཀྱི་ཟྭ
Choices-bs.UTF-8: Bez compose tipke, Desni Alt (AltGr), Desni Control taster, Desni Logo taster, Meni taster, Lijevi Logo taster, Caps Lock
Choices-ca.UTF-8: Sense tecla de composició, Alt dret (AltGr), Control dret, Tecla de logotip dreta, Tecla de menú dreta, Tecla de logotip esquerra, Fixació de majúscules
Choices-cs.UTF-8: Bez klávesy Compose, Pravý Alt (AltGr), Pravý Control, Pravá klávesa logo, Klávesa Menu, Levá klávesa logo, Caps Lock
Choices-cy.UTF-8: Dim bysell cyfansoddi, Alt Dde (AltGr), Control Dde, Bysell Logo Dde, Bysell bwydlen, Bysell Logo Chwith, Capiau Clo
Choices-da.UTF-8: Ingen Compose-tast, Højre Alt (AltGr), Højre Control, Højre Logo-tast, Menu-tast, Venstre Logo-tast, Caps Lock
Choices-de.UTF-8: Keine Compose-Taste, Alt rechts (AltGr), Strg rechts, Windows-Taste rechts, Menütaste, Windows-Taste links, Feststelltaste
Choices-dz.UTF-8: ཀོམ་པོསི་ལྡེ་ཡིག་མིན་འདུག, གཡས་ཀྱི་གདམ་ལྡེ་ (AltGr), གཡས་ཀྱི་ཚད་འཛིན།, གཡས་ཀྱི་ལས་རྟགས་ལྡེ་ཡིག, དཀར་ཆག་ལྡེ་ཡིག, གཡོན་གྱི་ལས་རྟགས་ལྡེ་ཡིག, ཚུགས་ལྡེ།
Choices-el.UTF-8: Μη διαθέσιμο πλήκτρο σύνθεσης (Compose), Δεξί Alt (AltGr), Right Control, Πλήκτρο Right Logo, Πλήκτρο Menu, Πλήκτρο Left Logo, Caps Lock
Choices-eo.UTF-8: Neniu kombino-klavo, Dekstra Alt (AltGr), Dekstra Control, Dekstra Emblemo-klavo, Menu-klavo, Maldekstra Emblemo-klavo, Majuskla Baskulo
Choices-es.UTF-8: Sin tecla modificadora, Alt derecho (AltGr), Control derecho, Tecla derecha de logo, Tecla de menú, Tecla izquierda de logo, Bloqueo de mayúsculas
Choices-et.UTF-8: Koosteklahvi pole, Parem Alt (AltGr), Parem Control, Parem logoklahv, Menüüklahv, Vasak logoklahv, Caps Lock
Choices-eu.UTF-8: Tekla konposaturik ez, Eskuineko Alt (AltGr), Eskuineko Ktrl, Eskuineko logotipoaren tekla, Menua tekla, Ezkerreko Logotipoa tekla, Blok Maius
Choices-fa.UTF-8: کلیدهای غیر ساختگی, کلید Alt (AltGr) راست, کلید Control راست, کلید Logo راست, کلید MenuQ, کلید Logo چپ, Caps Lock
Choices-fi.UTF-8: Ei yhdistelmänäppäintä, Oikea Alt (AltGr), Oikea Control, Oikea Logo-näppäin, Menu-näppäin, Vasen Logo-näppäin, Caps Lock
Choices-fr.UTF-8: Pas de touche « compose », Touche Alt de droite (AltGr), Touche Ctrl de droite, Touche « logo » de droite, Touche Menu, Touche « logo » de gauche, Verrouillage Majuscule
Choices-ga.UTF-8: Gan eochair athraithe, Alt Ar Dheis (AltGr), Ctrl Ar Dheis, Eochair lógó ar dheis, Eochair roghchláir, Eochair lógó ar chlé, Glas Ceannlitreacha
Choices-gl.UTF-8: Non hai tecla Compose, Tecla Alt dereita (Alt Gr), Tecla Ctrl dereita, Tecla Logo dereita, Tecla Menú, Tecla Logo esquerda, Bloq maiús
Choices-gu.UTF-8: કોઇ કોમ્પોઝ કળ નહીં, જમણી અલ્ટ (AltGr), જમણી કંટ્રોલ, જમણી લોગો કળ, મેનુ કળ, ડાબી લોગો કળ, કેપ્સ-લૉક
Choices-he.UTF-8: ללא מקש compose, Alt ימני (AltGr), Control ימני, מקש לוגו ימני, מקש תפריט, מקש לוגו שמאלי, Caps Lock
Choices-hi.UTF-8: कोई कम्पोज़ कुंजी नहीं., दाहिना ऑल्ट (AltGr), दाहिना कन्ट्रोल, दाहिनी चिह्न कुंजी, मेनु कुंजी, बाहिनी चित्र कुंजी, कैप्स लॉक
Choices-hr.UTF-8: Nema tipku compose, Desni Alt (AltGr), Desna Control tipka, Desna Logo tipka, Tipka izbornika, Lijeva Logo tipka, Caps Lock
Choices-hu.UTF-8: Nincs kombinációs billentyű, Jobb Alt (AltGr), Jobb Control, Jobb logó billentyű, Menü billentyű, Bal logó billentyű, Caps Lock
Choices-id.UTF-8: Tanpa tombol kombinasi, Alt (AltGr) kanan, Ctrl Kanan, Tombol Logo Kanan, Tombol Menu, Tombol Logo Kiri, Caps Lock
Choices-is.UTF-8: Enginn samsetningarlykill (compose key), Hægri Alt lykill (AltGr), Vinstri Ctrl, Hægri Merkja-lykill (Win), Menu-lykill, Vinstri Merkja-lykill (Win), Caps Lock
Choices-it.UTF-8: Nessun tasto «componi», Alt destro (AltGr), Ctrl destro, Tasto Windows destro, Tasto menù, Tasto Windows sinistro, Bloc Maiusc
Choices-ja.UTF-8: コンポーズキーなし, 右 Alt (AltGr), 右 Control, 右ロゴキー, メニューキー, 左ロゴキー, Caps Lock
Choices-kk.UTF-8: Compose пернесі жоқ, Оң жақ Alt (AltGr), Оң жақ Control, Оң жақ Logo пернесі, Menu пернесі, Сол жақ Logo пернесі, Caps Lock
Choices-km.UTF-8: គ្មាន​គ្រាប់ចុច​តែង​ទេ, Alt (AltGr) ខាង​ស្ដាំ, គ្រាប់ចុច​បញ្ជា (Ctrl) ខាង​ស្ដាំ, គ្រាប់ចុច Logo ខាង​ស្ដាំ, គ្រាប់ចុច​ម៉ឺនុយ, គ្រាប់ Logo ខាង​ឆ្វេង, ប្ដូរ​ជាប់ (Caps Lock)
Choices-kn.UTF-8: ಕಂಪೋಸ್ ಕೀಲಿ ಇರುವುದಿಲ್ಲ, ಬಲ ಆಲ್ಟ್ (AltGr), ಬಲ ಕಂಟ್ರೋಲ್, ಬಲ ಲೋಗೊ ಕೀಲಿ, ಮೆನು ಕೀಲಿ, ಎಡ ಲೋಗೊ ಕೀಲಿ, ಕ್ಯಾಪ್ಸ್ ಲಾಕ್
Choices-ko.UTF-8: Compose 키 없음, 오른쪽 Alt (AltGr), 오른쪽 Control, 오른쪽 로고 키, 메뉴 키, 왼쪽 로고 키, Caps Lock
Choices-ku.UTF-8: Bişkoka compose tuneye, Rast Alt (AlrGr), control a rastê, Bişkoka logo ya rastê, Mifteya Pêşekê, Bişkoka logo ya çepê, Caps Lock
Choices-lo.UTF-8: ບໍ່ມີການປະກອບເປັນສຳຄັນ, Alt ຂວາ (AltGr), ຄວບຄຸມຂວາ, ແປ້ນໂລໂກ້ຂວາ, ເມນູສຳຄັນ, ແປ້ນໂລໂກ້ຊ້າຍ, Caps Lock
Choices-lt.UTF-8: Komponavimo klavišo nenaudoti, Dešinysis Alt (Lyg3), Dešinysis Vald, Dešinysis Logo klavišas, Meniu klavišas, Kairysis Logo klavišas, Didžiosios raidės
Choices-lv.UTF-8: Bez compose taustiņa, Labais Alt (AltGr), Labais Ctrl, Labais Logo taustiņš, Izvēlnes taustiņš, Kreisais Logo taustiņš, Caps Lock
Choices-mk.UTF-8: Без копче за комбинирање, Десен Alt (AltGr), Десен Control, Десното Лого копче, Мени копче, Левото лого копче, Caps Lock
Choices-ml.UTF-8: കമ്പോസ് കീ ഇല്ല, വലത് ആള്‍ട്ട് (AltGr), വലത് കണ്ട്രോള്‍, വലത് ലോഗോ കീ, മെനു കീ, ഇടത് ലോഗോ കീ, കാപ്സ് ലോക്ക്
Choices-mr.UTF-8: काँपोझ कळ नाही, उजवी Alt (AltGr), उजवी Control, उजवी लोगो कळ, मेनू कळ, डावी लोगो कळ, Caps Lock
Choices-nb.UTF-8: Ingen Compose-tast, Høyre Alt (Alt Gr), Høyre Ctrl, Høyre logotast, Menytast, Venstre logotast, Caps Lock
Choices-nl.UTF-8: Geen samenstellingstoets, Alt-Rechts (AltGr), Control-Rechts, Logotoets-Rechts, Menutoets, Logotoets-Links, Caps Lock
Choices-no.UTF-8: Ingen Compose-tast, Høyre Alt (Alt Gr), Høyre Ctrl, Høyre logotast, Menytast, Venstre logotast, Caps Lock
Choices-pa.UTF-8: ਕੋਈ ਸੰਰਚਨਾ ਸਵਿੱਚ ਨਹੀਂ, ਸੱਜਾ Alt (AltGr), ਸੱਜਾ Ctrl, ਸੱਜੀ ਲੋਗੋ ਸਵਿੱਚ, ਮੇਨੂ ਸਵਿੱਚ, ਖੱਬੀ ਲੋਗੋ ਸਵਿੱਚ, ਕੈਪਸ ਲਾਕ
Choices-pl.UTF-8: Bez klawisza Compose, Prawy Alt (AltGr), Prawy Control, Prawy klawisz logo, Klawisz menu, Lewy klawisz logo, Caps Lock
Choices-pt.UTF-8: Sem tecla compose, Alt direito (AltGr), Control Direito, Tecla Logotipo Direito, Tecla Menu, Tecla de Logotipo Esquerdo, Caps Lock
Choices-pt_BR.UTF-8: Sem tecla Compose, Alt Direito (AltGr), Control Direito, Tecla Logo Direita, Tecla Menu, Tecla Logo Esquerda, Caps Lock
Choices-ro.UTF-8: Fără tastă de compunere, Alt dreapta (AltGr), Control dreapta, Tasta logo dreapta, Tasta meniu, Tasta logo stânga, Caps Lock
Choices-ru.UTF-8: нет составной клавиши, правый Alt (AltGr), правый Control, правая клавиша с логотипом, клавиша с меню, левая клавиша с логотипом, Caps Lock
Choices-si.UTF-8: සම්පාදන යතුරක් නැත, දකුණු Alt (AltGr), දකුණු Control, දකුණු ලාංඡය යතුර, මෙනු යතුර, වම් ලාංඡන යතුර, කැප්ස් යතුර
Choices-sk.UTF-8: Žiaden kombinačný kláves, Pravý Alt (AltGr), Pravý Control, Pravý kláves Logo, Kláves Menu, Ľavý kláves Logo, Caps Lock
Choices-sl.UTF-8: Brez tipke za sestavljanje, Desna izmenjalka (AltGR), Desna krmilka (Control), Desna tipka z znakom, Menijska tipka, Leva tipka z znakom, Caps Lock
Choices-sr.UTF-8: Без compose тастера, Десни Alt (AltGr), Десни Control, Десни лого тастер, Мени тастер, Леви лого тастер, Caps Lock
Choices-sr@latin.UTF-8: Bez compose tastera, Desni Alt (AltGr), Desni Control, Desni logo taster, Meni taster, Levi logo taster, Caps Lock
Choices-sv.UTF-8: Ingen komposittangent, Alt\, höger (AltGr), Control\, höger, Tangent med logotyp\, höger, Menyknapp, Tangent med logotyp\, vänster, Caps Lock
Choices-ta.UTF-8: உருவாக்க விசை இல்லை, வலது ஆல்ட் (AltGr), வலது கன்ட்ரோல், வலது லோகோ விசை, மெனு விசை, இடது லோகோ விசை, கேப்ஸ் பூட்டு
Choices-te.UTF-8: కంపోస్ కీ లేదు, కుడి ఆల్ట్ (AltGr), కుడి కంట్రోల్, కుడి బొమ్మ కీ, మెనూ కీ, ఎడమ బొమ్మ కీ, కేప్స్ లాక్
Choices-tg.UTF-8: Бе тугмаи эҷодкунӣ, Alt-и рост (AltGr), Control-и рост, Тугмаи рости тамға, Тугмаи меню, Тугмаи чапи тамға, Caps Lock
Choices-th.UTF-8: ไม่ใช้ปุ่มผสมอักขระ, Alt ขวา (AltGr), Control ขวา, ปุ่มโลโก้ขวา, ปุ่มเมนู, ปุ่มโลโก้ซ้าย, Caps Lock
Choices-tr.UTF-8: Birleştirme (Compose) tuşu yok, Sağ Alt (AltGr), Sağ Control, Sağ Logo tuşu, Menü tuşu, Sol Logo tuşu, Caps Lock (Büyük Harf Kilidi)
Choices-ug.UTF-8: بىرىكمە كۇنۇپكا يوق, ئوڭ Alt (AltGr), ئوڭ Control, ئوڭ  Logo كۇنۇپكا, تىزىملىك كۇنۇپكا, سول Logo كۇنۇپكا, CapsLock
Choices-uk.UTF-8: Без клавіші Compose, Правий Alt (AltGr), Правий Control, Права клавіша Logo, Клавіша Menu, Ліва клавіша Logo, Caps Lock
Choices-vi.UTF-8: Không có phím cấu tạo, Alt phải (AltGr), Ctrl phải, Phím biểu hình bên phải, Phím trình đơn, Phím biểu tượng bên trái, Caps Lock
Choices-zh_CN.UTF-8: 无组合键, 右 Alt 键 (AltGr), 右 Control 键, 右徽标键, 菜单键, 左徽标键, 大写锁键
Choices-zh_TW.UTF-8: 沒有 Compose 鍵, 左邊的 Alt (AltGr), 右邊的 Control, 右邊的 Logo 鍵, Menu 鍵, 左邊的 Logo 鍵, Caps Lock
Default: No compose key
Description: Compose key:
 The Compose key (known also as Multi_key) causes the computer to interpret
 the next few keystrokes as a combination in order to produce a character
 not found on the keyboard.
 .
 On the text console the Compose key does not work in Unicode mode. If not
 in Unicode mode, regardless of what you choose here, you can always also
 use the Control+period combination as a Compose key.
Description-ar.UTF-8: مفتاح التكوين:
 مفتاح التكوين (والمعروف أيضاً بمفتاح التعدد Multi_key) يجعل الحاسب يعتبرضربات المفاتيح التالية كمجموعة لإنتاج حرف غير موجود في لوحة المفاتيح.
 .
 في الطرفية النصيّة لا يعمل مفتاح التكوين في وضع يونيكود. وإن لم تكن في وضع يونيكود، فبغض النظر عما ستختار هنا، يمكنك دائماً استخدام زر Control+نقطة كمفتاح تكوين.
Description-ast.UTF-8: Tecla Compose:
 La tecla Compose (tamién conocida como Multi_key) fai que l'ordenador interprete les prósimes pulsaciones de tecla como una combinación, cola fin de producir un caráuter que nun s'alcuentra nel tecláu.
 .
 Na consola de testu la tecla Componer nun trabaya nel mou Unicode. Si non ye mou Unicode, independientemente de lo que escueyas equí, siempre pues también usar la combinación Control + períodu como tecla Componer.
Description-be.UTF-8: Кнопка Compose:
 Кнопка Compose (вядома таксама як Multi_key) паведамляе праграме сігналам, што наступныя націскі кнопак трэба апрацаваць як камбінацыю для вываду знака, якога няма на клавіятуры.
 .
 На тэкставай кансолі кнопка Compose не працуе ў рэжыме Unicode. Не ў рэжыме Unicode, безадносна таго, што тут выберыце, вы можаце заўсёды выкарыстаць камбінацыю Alt+. як кнопку Compose.
Description-bg.UTF-8: Клавиш „Compose“:
 Клавишът „Compose“ (известен също като Multi_key) е клавиш, който е предназначен да посочи на софтуера да интерпретира следващите няколко клавиша като комбинация с цел да генерира символ, който отсъства на клавиатурата.
 .
 На текстовата конзола клавишът „Compose“ не работи в режим „Уникод“.  Ако режимът не е „Уникод“, то независимо какво ще изберете тук, ще може да използвате също комбинацията Control+точка като клавиш „Compose“.
Description-bn.UTF-8: কম্পোজ কী
  কীবোর্ডে নেই এমন ক্যারেক্টার লিখতে কম্পোজ কী (যা  মাল্টি_কী হিসাবেও পরিচিত) পরবর্তী কিছু কীষ্ট্রোকের কম্বিনেশন দিয়ে কম্পিউটারকে ইন্টারপ্রেট করতে বলে।
 .
 ইউনিকোড মুডে টেক্সট কনসোলে কম্পোজ কী কাজ করে না। যদিইউনিকোড মুডে না থাকেন, এখানে যা ই পছন্দ করেন না কেন, আপনি কন্ট্রোল + পিরিয়ড কম্বিনেশন কম্পোজ কী হিসাবে ব্যবহার করতে পারেন।
Description-bo.UTF-8: མཉམ་རྡེབ་མཐེབ：
 མཉམ་རྡེབ་མཐེབ(Multi_key ཡང་ཟེར) མཐེབ་གཞོང་ཐོག་ཏུ་མེད་པའི་ཡི་གེ་ཞིག་མཐེབ་འགའ་ཞིག་མཉམ་དུ་བརྡབ་ནས་བཟོས་པར་གོ་དགོས
 .
 On the text console the Compose key does not work in Unicode mode. If not in Unicode mode, regardless of what you choose here, you can always also use the Control+period combination as a Compose key.
Description-bs.UTF-8: Compose tipka:
 Compose tipka (poznata i kao Multi_tipka) ima svrhu da računar interpretira sljedećih nekoliko pritisaka na tipke kao kombinaciju u svrhu ispisivanja karaktera koji nisu na Vašoj tastaturi.
 .
 U tekstualnoj konzoli Compose tipka ne radi u Unicode modu. Ako niste u Unicode modu, bez obzira šta izaberete ovdje, možete uvijek koristiti Control+tačka kombinaciju kao Compose tipku.
Description-ca.UTF-8: Tecla de composició:
 La tecla de composició (també coneguda com a Multi_key) fa que l'ordinador interprete les següents pulsacions com una combinació per a produir un caràcter que no és present al teclat.
 .
 A la consola de text, la tecla de composició no funciona en mode Unicode. Si no esteu en mode Unicode, independentment del que seleccioneu ací, sempre podeu emprar la combinació Control+punt com a tecla de composició.
Description-cs.UTF-8: Klávesa Compose:
 Klávesa Compose (také známá jako Multi_key) říká počítači, aby následující stisky kláves interpretoval jako kombinaci, čímž můžete napsat znak, který se normálně na klávesnici nenachází.
 .
 Klávesa Compose bohužel nefunguje na textové konzoli v unicodovém režimu. Nezávisle na tom, co zde vyberete, můžete vždy místo klávesy Compose použít kombinaci Control+tečka (tedy pouze pokud nepoužíváte režim unicode).
Description-cy.UTF-8: Y bysell Cyfansoddi:
 Mae'r bysell Cyfansoddi (hefyd yn cael ei nabod fel bysell Multi) yn achosi'r cyfrifiadur i ddehongli y trawiadau dilynol fel cyfuniad i greu nod sydd ddim i'w weld ar y bysellfwrdd.
 .
 Ar y consol testun nid yw'r bysell Cyfansoddi yn gweithio ym modd Unicode. Os nad yn y modd Unicode, dim ots beth rydych yn dewis yma, fe allwch chi bob amser ddefnyddio y cyfuniad Control+. fel y bysell Cyfansoddi.
Description-da.UTF-8: Compose-tast:
 Compose-tasten (også kendt som Multi_tast) gør computeren i stand til at tolke de følgende få anslag som en kombination med henblik på at frembringe et tegn, der ikke findes på tastaturet.
 .
 På tekstkonsollen virker Compose-tasten ikke i Unicode-tilstand. Hvis Unicode-tilstand ikke er aktiveret, kan du altid, uanset hvad du vælger her, bruge Control+punktum-kombinationen som en Compose-tast.
Description-de.UTF-8: Compose-Taste:
 Durch das Drücken der Compose-Taste (auch als Multi-Key bekannt) werden die nächsten Tastenanschläge vom Computer als Kombination interpretiert, die ein nicht auf der Tastatur vorhandenes Zeichen erzeugt.
 .
 Auf der Textkonsole funktioniert die Compose-Taste nicht im Unicode-Modus. Falls Sie nicht im Unicode-Modus arbeiten, können Sie unabhängig von Ihrer Auswahl hier immer auch die Kombination Strg+Satzpunkt (.) als Compose-Taste verwenden.
Description-dz.UTF-8: ལྡེ་ཡིག་བཟོ:
 ཀོམ་པོས་ལྡེ་ཡིག་ (ཡང་ན་ སྣ་མང་ལྡེ་ཡིག་)" གིས་ གློག་རིག་ལུ་ ལྡེ་སྒྲོམ་གུ་མེད་པའི་ཡིག་འབྲུ་བཟོ་ནིའི་དོན་ལས་ ཤུལ་མའི་ཀི་ཨིསི་ཊོཀ་འདི་ མཉམ་བསྡོམས་སྦེ་བསྒྱུར་བཅུགཔ་ཨིན།
 .
 ཚིག་ཡིག་མ་སྒྲོམ་གུ་ལུ་ ཀོམ་པོསི་ལྡེ་ཡིག་འདི་ ཡུ་ནི་ཀོཌི་གནས་ཐངས་ནང་ལཱ་མི་འབད། ཁྱོད་ཀྱིས་ ནཱ་ལུ་གདམ་ཁ་རྐྱབ་མི་དང་མ་འཁྲིལ་བར་ ཡུ་ནི་ཀོཌི་གནས་ཐངས་ནང་མེན་པ་ཅིན་ ཚད་འཛིན་+དུས་ཡུན་མཉམ་བསྡོམས་འདི་ ཀོམ་པོསི་ལྡེ་ཡིག་སྦེ་ལག་ལེན་འཐབ་བཏུབ།
Description-el.UTF-8: Πλήκτρο Compose:
 Το πλήκτρο Compose (γνωστό και ως Multi_key) κάνει τον υπολογιστή να μεταφράζει τα αμέσως επόμενα  χτυπήματα πλήκτρων ως συνδυασμούς για την παραγωγή ενός χαρακτήρα που δεν υπάρχει στο  πληκτρολόγιο.
 .
 Για εισαγωγή κειμένου στο τερματικό, το πλήκτο Compose δεν δουλεύει σε κατάσταση Unicode. Στην περίπτωση αυτή  μπορείτε πάντα, άσχετα από την επιλογή που θα κάνετε εδώ, να χρησιμοποιείτε τον συνδυασμό Control+περίοδος ως πλήκτρο Compose.
Description-eo.UTF-8: Kombino-klavo:
 La Kombino-klavo (ankaŭ konata kiel klavo Multi) igas ke la komputilo interpretu la sekvajn klavpremojn kiel kombinaĵon, por generi signon ne troveblan en la klavaro.
 .
 En la teksta konzolo la Kombino-klavo ne funkcias laŭ Unikoda reĝimo. Se vi ne laboros laŭ Unikodo, sendepende je kion vi elektas ĉi tie, vi ĉiam povos uzi la kombinaĵon Control+punkto kiel Kombino-klavon.
Description-es.UTF-8: Tecla modificadora:
 La tecla modificadora (conocida también como la Multi Tecla) es una tecla diseñada para indicarle a la máquina que interprete las próximas pulsaciones de teclas como una combinación, para producir un carácter que no se encuentra en el teclado.
 .
 En la consola de texto, la tecla modificadora no funciona en el modo Unicode. Si no está en el modo Unicode, a pesar de lo que escoja aquí, siempre puede usar la combinación Control+punto como si fuera una tecla modificadora.
Description-et.UTF-8: Koosteklahv:
 Koosteklahv (tuntud ka Multi_key nime all) tõlgendab järgmiseid klahvivajutusi kombinatsioonina, et saaks sisestada klaviatuurilt puuduvaid märke.
 .
 Tekstikonsoolis ei tööta koosteklahv Unicode režiimis. Kui ei olda Unicode režiimis, siis ükskõik mille sa siin valid, saad koosteklahvina alati kasutada Control+punkt kombinatsiooni.
Description-eu.UTF-8: Tekla konposatua:
 Konposaturiko tekla (Multi_key izenez ere ezaguna) sakatuz gero, softwareak tekla-konbinazio gisa interpretatuko ditu zapaltzen diren hurrengo teklak horrela teklatuan ez dauden ikurrak idatz daitezke.
 .
 Testuzko kontsola batean tekla konposatuak ez dute funtzionatzen Unicode moduan. Unicode moduan ez dagoenean, berdin izanik hemen zer aukeratzen duzun, Ktrl + puntua teklen konbinazioa erabil dezakezu beti tekla konposatu gisa.
Description-fa.UTF-8: کلید های ساختگی:
 کلید ساختگی (که به عنوان Multi_key نیز شناخته می شوند) فشار چندین کلید را که باعث ایجاد کاراکتری می شود که بر روی صفحه کلید نیست، فراهم می کند.
 .
 در میرکار متنی کلید های ساختگی در حالت Unicode عمل نمی کنند. در صورتی که در حالت Unicode نیستید، فارق از آنچه انتخاب کرده اید ، می توانید از Control+period به عنوان یک کلید ساختگی استفاده کنید.
Description-fi.UTF-8: Yhdistelmänäppäin:
 Yhdistelmänäppäin (Compose key tai Multi_key) käskee tietokonetta tulkitsemaan pari seuraavaa näppäilyä yhdistelmäksi. Näin voidaan tuottaa merkkejä, joita ei löydy näppäimistöltä.
 .
 Tekstikonsolilla yhdistelmänäppäin ei toimi Unicode-tilassa. Muussa kuin Unicode-tilassa voidaan tästä valinnasta riippumatta aina käyttää yhdistelmää Control+piste yhdistelmänäppäimenä.
Description-fr.UTF-8: Touche « compose » :
 La touche « compose » (encore appelée « touche multi ») sert à indiquer que les touches utilisées ensuite doivent être combinées de façon à produire un caractère qui n'existe pas sur le clavier.
 .
 Sur les consoles en mode texte, la touche « compose » ne fonctionne pas en mode Unicode. Si l'on n'est pas en mode Unicode, indépendamment de ce que vous avez choisi ici, vous pouvez toujours utiliser la combinaison Ctrl+point comme touche « compose ».
Description-ga.UTF-8: Eochair athraithe:
 Nuair a bhrúitear an eochair athraithe, glacann an ríomhaire leis na carachtair ina dhiaidh mar theaglaim, chun carachtar nach bhfuil ar an méarchlár a ghiniúint.
 .
 Ar an gconsól téacs, ní oibríonn an eochair athraithe sa mhód Unicode.  Mura bhfuil tú sa mhód Unicode, is féidir an teaglaim Ctrl+ponc a úsáid mar eochair athraithe i gcónaí, is cuma céard atá roghnaithe anseo.
Description-gl.UTF-8: Tecla Compose:
 A tecla Compose (tamén coñecida como «Multi_key») fai que o computador interprete as seguintes pulsacións de teclas como unha combinación para producir un carácter que non figura no teclado.
 .
 Na consola de texto, a tecla Compose non funciona no modo Unicode. Se non está no modo Unicode, independentemente do que escolla aquí, sempre ha poder empregar a combinación Ctrl+punto como tecla Compose.
Description-gu.UTF-8: કોમ્પોઝ કળ:
 જોડાણ કળ (અનેક_કળ તરીકે પણ જાણીતી) કોમ્પ્યુટરને કેટલાક આગામી કળનું અનુમાન કરવા દે છે જે કીબોર્ડ પર ન મળતાં અક્ષરો રજૂ કરવા માટે વપરાય છે.
 .
 લખાણ કોન્સોલ પર જોડાણ કળ યુનિકોડ સ્થિતિમાં કામ કરતી નથી. જો યુનિકોડ સ્થિતિમાં ન હોય તો, તમે અહીં ગમે તે પસંદ કરેલ હોય, તમે હંમેશા કંટ્રોલ+ટપકું જોડાણ કળ તરીકે વાપરી શકો છો.
Description-he.UTF-8: מקש compose:
 מקש compose (ידוע גם כ-Multi_key) גורם למחשב לפרש את ההקלדות הבאות כצירוף כדי ליצור תו שלא נמצא על המקלדת.
 .
 במסוף הטקסט, מקש ה-Compose אינו עובד במצב Unicode. אם אינך נמצא במצב Unicode, ללא תלות בבחירתך כאן, ביכולתך תמיד להשתמש בצירוף Control+נקודה כמקש Compose.
Description-hi.UTF-8: कम्पोज़ कुंजी:
 कम्पोज़ कुंजी, जिसे मल्टी कुंजी भी कहा जाता है, यन्त्र को अगले कुंजियों को एक विशेषसंयुक्त कुंजी के रूप में व्याख्या करने के लिए कहता है, जिससे एक ऐसे अक्षर को बनायाजा सकता है जो कुंजीपटल पर स्थित नहीं हों.
 .
 टेक्स्ट कंसोल पर यूनीकोड विकल्प के साथ कम्पोज़ कुंजी का उपयोग नहीं किया जा सकता. अगरयूनीकोड विकल्प स्थित नहीं हो, तो यहाँ पर आप कुछ भी चुनें, पर हमेशा कंट्रोल+पूर्ण विराम (Control+period)को कम्पोज़ कुंजी के रूप में उपयोग किया जा सकता है.
Description-hr.UTF-8: Tipka Compose:
 Tipka Compose (poznata kao i Multi_key) čini da računalo interpretira idućih nekoliko pritisaka na tipke kao kombinaciju koja služi za stvaranje znaka koji se ne nalazi na tipkovnici.
 .
 U tekstualnoj konzoli u Unicode načinu rada tipka Compose ne radi. Ako niste u Unicode načinu rada, što god ovdje ovdje izaberete, uvijek možete koristiti i kombinaciju Control+točka za tipku Compose.
Description-hu.UTF-8: Kombinációs billentyű:
 A kombinációs billentyű (másképp: Multi_billentyű) hatására a gép a következő pár billentyűt kombinációként értelmezi a billentyűzeten nem található karakterek előállítására.
 .
 Szöveges konzolon a Kombinációs billentyű nem működik Unicode módban. Nem Unicode módban - az itteni beállítástól függetlenül - a Control+pont kombináció is mindig használható kombinációs billentyűként.
Description-id.UTF-8: Tombol Kombinasi:
 Tombol Kombinasi (juga dikenal sebagai Multi_key) membuat komputer menganggap beberapa tombol berikutnya sebagai sebuah kombinasi untuk menghasilkan aksara yang tidak ada di keyboard.
 .
 Pada konsol teks, tombol Kombinasi tidak berlaku pada moda Unicode. Jika tidak dalam moda Unicode, tanpa melihat pilihan Anda, Anda selalu bisa menggukanan kombinasi Ctrl+.(titik) sebagai tombol Kombinasi.
Description-is.UTF-8: Samsetningarlykill:
 Samsetningarlykillinn (einnig þekktur sem Compose eða Multi lykill) lætur tölvuna túlka næstu áslætti sem samsetningu til að búa til tákn sem ekki fyrirfinnst á lyklaborðinu.
 .
 Á textastjórnskjá virkar samsetningarlykillinn ekki í Unicode ham. Ef ekki er verið í Unicode ham, skiptir þá ekki máli hvað þú velur hér, þá geturðu alltaf notað saman Control+punktur sem samsetningarlykil.
Description-it.UTF-8: Tasto «componi»:
 Il tasto «componi» (anche conosciuto come Multitasto) imporrà al computer di interpretare i tasti premuti successivamente come una combinazione, al fine di riprodurre un carattere non trovato nella tastiera.
 .
 Nella console di testo il tasto «componi» non funziona in modalità Unicode. Se non si è in modalità Unicode, indipendentemente dalla scelta fatta qui, è sempre possibile usare anche la combinazione Ctrl + punto come tasto «componi».
Description-ja.UTF-8: コンポーズキー:
 コンポーズキー (マルチキーとしても知られています) は、続くいくつかのキーストロークを、キーボード上にない文字を生成するための組み合わせとして解釈するようにコンピュータに命令します。
 .
 テキストコンソールでは、コンポーズキーは Unicode モードでは動作しません。Unicode モードでなければ、ここで何を選択するにせよ、Control + ピリオドの組み合わせをコンポーズキーのひとつとして常に利用できます。
Description-kk.UTF-8: Compose пернесі:
 Compose пернесі (тағы да Multi_key ретінде белгілі), компьютерді келесі перне басылуларды пернетақтада жоқ таңбаны енгізу тіркесі ретінде қабылдауды мәжбүрлетеді.
 .
 Мәтін консолінде Compose пернесі Unicode режимінде жұмыс істемейді. Егер Unicode режимі емес болса, осындағы қалауыңызға тәуелсіз, сіз Control+нүкте тіркесін әрқашан Compose пернесі ретінде қолдана аласыз.
Description-km.UTF-8: គ្រាប់ចុច​តែង ៖
 គ្រាប់ចុច​តែង(Compose) (ដែល​ស្គាល់​ថា​ជា Multi_key) ពីព្រោះ​កុំព្យូទ័រ​ត្រូវ​បកប្រែ​កា​រចុច​គ្រាប់ចុច​មួយ​ចំនួន​នៅពេល​ក្រោយ ជា​បន្សំ ដើម្បី​​បង្កើត​ជា​តួអក្សរ​ដែលមិន​មាន​នៅ​ក្នុង​ក្ដារចុច ។
 .
 នៅ​ក្នុង​កុងសូល​អត្ថបទ​គ្រាប់ចុច​តែង (Compose) មិន​ដំណើរការ​ជា​មួយ​របៀប​យូនីកូដ​ទេ ។ ប្រសិនបើ​មិន​ស្ថិត​ក្នុង​របៀប​យូនីកូដ​ទេ ទាក់ទង​នឹង​អ្វី​ដែល​អ្នក​ជ្រើស​នៅ​ទីនេះ អ្នក​តែងតែ​អាច​ប្រើ​បន្សំ (Control+period) ជា​គ្រាប់ចុច​តែង (Compose) ។
Description-kn.UTF-8: ಕಂಪೋಸ್ ಕೀಲಿ :
 ಕಂಪೋಸ್ ಕೀಲಿಯು ( ಮಲ್ಟೀ_ಕೀ ಎಂದೂ ಕರೆಯಲ್ಪಡುವ) ಗಣಕವನ್ನು ಮುಂದಿನ ಹಲವು ಕೀಲಿ ಒತ್ತುಗಳನ್ನು ಒಂದೇ ಸಂಯೋಜನೆಯಾಗಿ ಅರ್ಥೈಸುವಂತೆ ಮಾಡಿ ಕೀಲಿಮಣೆಯಲ್ಲಿರದ ಅಕ್ಷರವನ್ನು ಉತ್ಪಾದಿಸುವಂತೆ ಮಾಡುತ್ತದೆ.
 .
 ಅಕ್ಷರಿಕ ಆಜ್ಞಾಫಲಕದಲ್ಲಿ ಕಂಪೋಸ್ ಕೀಲಿಯು ಯೂನಿಕೋಡ್ ಮಾಧ್ಯಮದಲ್ಲಿ ಕೆಲಸ ಮಾಡುವುದಿಲ್ಲ. ಯೂನಿಕೋಡ್ ಮಾಧ್ಯಮದಲ್ಲಿ ಅಲ್ಲದಿದ್ದರೂ ಕೂಡ, ನೀವೇನೆ ಆಯ್ಕೆಮಾಡಿ, ನೀವು ಸದಾ ಕಂಟ್ರೋಲ್+ಪೂರ್ಣವಿರಾಮ ಸಂಯೋಜನೆಯನ್ನು ಕಂಪೋಸ್ ಕೀಲಿಯ ಬದಲಾಗಿ ಬಳಸಬಹುದು.
Description-ko.UTF-8: Compose 키:
 Compose (또는 Multi) 키를 누르면 그 다음 몇 개의 키는 키보드에 없는 문자를 조합한다고 해석합니다.
 .
 텍스트 콘솔의 유니코드 모드에서는 Compose 키가 동작하지 않습니다. 유니코드 모드가 아니라면 여기 설정과 관계없이 Control+점 조합을 Compose 키로 사용할 수 있습니다.
Description-ku.UTF-8: Bişkoka compose:
 Kilîla serastkirinê (wekî Multî_key jî tê nasîn) dike ku kompîter bi hin kombînasyonan klavyeyê biguherîne.
 .
 Di konsola pêş de kilîla Serastkirinê bi moda Unicodeê naxebite. Eger ne di moda Unicodeê de be dikarî metodeke din hilbijêrî.
Description-lo.UTF-8: ຂຽນສຳຄັນ
 ທີ່ສຳຄັນການຂຽນ(ທີ່ຮູ້ຈັກກັນວ່າ Multi_key) ຈະເຮັດໃຫ້ເຄື່ອງຄອມພິວເຕີໃນການຕີຄວາມການກົດແປ້ນພິມຕໍ່ໄປເປັນຊຸດຄ່າປະສົມເພື່ອຜະລິດ ບໍ່ເຫັນໂຕອັກສອນເທິງແປ້ນພິມ
 .
 ໃນຂໍ້ຄວາມທີ່ຂຽນຄອນໂຊລຄຣີບໍ່ໃຊ້ງານໃນໂໝດ Unicode ຖ້າບໍ່ໄດ້ຢູ່ໃນໂໝດ Unicode ໂດຍບໍ່ຄຳນຶງເຖີງສິ່ງທີ່ທ່ານເລືອກໃນທີ່ນີ້ມ່ານກໍ່ຍັງສາມາດໃຊ້ຮ່ວມກັນ ຄວບຄຸມໄລຍະເວລາ + ເປັນສ່ວນປະສົມຫລັກ
Description-lt.UTF-8: Komponavimo klavišas:
 Komponavimo klavišo („Compose“, arba „Multi_key“) nuspaudimas nurodo kompiuteriui interpretuoti kelių toliau einančių klavišų paspaudimus kaip seką, sukomponuojančią klaviatūroje nesantį simbolį.
 .
 Tekstiniame terminale Komponavimo klavišas neveiks unikodo veiksenoje. Nesant unikodo veiksenoje, nepriklausomai nuo čia atlikto pasirinkimo, kaip Komponavimo klavišą galėsite naudoti Vald+taškas kombinaciją.
Description-lv.UTF-8: Compose taustiņš:
 Compose taustiņš (zināms arī kā Multi_taustiņš) liek datoram interpretēt nākamos pāris taustiņu uzsitienus ka kombināciju, lai izveidotu rakstzīmi, kas nav atrodama uz tastatūras.
 .
 Teksta konsolē Compose taustiņš nestrādā Unicode režīmā. Ārpus Unicode režīma (neatkarīgi no šeit izvēlētā režīma) vienmēr var izmantot Ctrl+punkts kombināciju kā Compose taustiņu.
Description-mk.UTF-8: Копче за комбинирање:
 Ако го стиснете копчето за комбинирање (познато како Мулти копче) компјутерот ќе ги интерпретира следните неколку копчиња како комбинација, за да испише знак кој не се наоѓа на тастатурата.
 .
 Во текстуалната конзола копчето за комбинација не работи во Unicode режим. Ако не сте во Unicode режим, без разлика што ќе изберете тука, секогаш ќе можете да ја користите комбинацијата Control+точка како копче за комбинирање.
Description-ml.UTF-8: കമ്പോസ് കീ:
 കീബോര്‍ഡിലില്ലാത്ത ഒരക്ഷരം  സൃഷ്ടിക്കുന്നതിനായി  അടുത്ത ഏതാനും  കീസ്റ്റ്രോക്കുകള്‍ സംയോജിപ്പിച്ച് ഇന്റര്‍പ്രെട്ട് ചെയ്യാന്‍ കമ്പ്യൂട്ടറിനെ കോമ്പോസ് കീ (അഥവാ മള്‍ട്ടി_കീ) സജ്ജമാക്കും 
 .
 അടുത്ത കണ്‍സോളില്‍ കോമ്പോസ് കീ യൂണിക്കോഡ് മോഡില്‍ പ്രവര്‍ത്തിക്കില്ല. യൂണിക്കോഡ് മോഡിലല്ലെങ്കില്‍ കണ്‍ട്രോ‌‌ള്‍ + പിരീഡ് കോമ്പിനേഷന്‍ ഒരു കോമ്പോസ് കീ ആയി ഉപയോഗിക്കാവുന്നതാണ്. ഇവിടെ താങ്കള്‍ തിരഞ്ഞെടുത്തത് അതിനെ ബാധിക്കില്ല
Description-mr.UTF-8: काँपोझ कळ:
 कळफलकावर नसलेला वर्ण निर्माण करण्यासाठी निर्माण कळ (जिला मल्टी_कळ असेही म्हटले जाते) पुढचे काही कळफटके एकत्रितपणे विचारात घेते.
 .
 मजकूर कन्सोलवर निर्माण कळ युनिकोड मोडमध्ये कार्य करत नाही. युनिकोड मोडमध्ये नसल्यास, तुम्ही येथे काहीही निवडले तरी,  तुम्ही नेहमीच Control+period एकत्रीकरणसुद्धा निर्माण कळ म्हणून वापरू शकता.
Description-nb.UTF-8: Compose-tast:
 Compose-tasten (også kjent som Multi_key) gjør at datamaskinen tolker de neste tastetrykkene som en kombinasjon slik at man kan lage et tegn som ikke finnes på tastaturet.
 .
 I tekstkonsollen virker ikke Compose-tasten i Unicode-modus. Hvis man ikke er i Unicode-modus, uavhengig av hva du velger her, kan du alltid bruke kombinasjonen Ctrl + punktum som en Compose-tast.
Description-nl.UTF-8: Samenstellingstoets:
 De samenstellingstoets (ook bekend als de Multi-toets) laat de computer de volgende toetsaanslag als een combinatie te interpreteren, om zo een karakter te produceren dat niet op het toetsenbord terug te vinden is.
 .
 Op de tekstconsole werkt de samenstellingstoets niet in Unicode-modus. Wanneer u zich niet in Unicode-modus bevindt kunt u -onafhankelijk van wat u hier kiest- altijd de Control+punt combinatie gebruiken als samenstellingstoets.
Description-no.UTF-8: Compose-tast:
 Compose-tasten (også kjent som Multi_key) gjør at datamaskinen tolker de neste tastetrykkene som en kombinasjon slik at man kan lage et tegn som ikke finnes på tastaturet.
 .
 I tekstkonsollen virker ikke Compose-tasten i Unicode-modus. Hvis man ikke er i Unicode-modus, uavhengig av hva du velger her, kan du alltid bruke kombinasjonen Ctrl + punktum som en Compose-tast.
Description-pa.UTF-8: ਸੰਰਚਨਾ ਸਵਿੱਚ:
 ਸੰਰਚਨਾ ਸਵਿੱਚ (ਜੋ ਕਿ ਬਹੁ-ਸਵਿੱਚ ਵਜੋਂ ਵੀ ਜਾਣਿਆ ਜਾਂਦਾ ਏ )  ਅਗਲੇ ਕੁਝ ਦਬਾਏ ਸਵਿੱਚ ਜੋੜ ਨਾਲ ਕੰਪਿਊਟਰ ਨੂੰ ਓਹ ਅੱਖਰ ਬਣਾਉਣ ਦੀ ਮਦੱਦ ਕਰਦਾ ਏ ਜੋ ਕੀਬੋਰਡ ਉੱਤੇ ਨਹੀਂ ਲਭਦੇ।
 .
 ਟੇਕਸਤ ਕੰਸੋਲ ਉੱਤੇ ਸੰਰਚਨਾ ਸਵਿੱਚ ਯੂਨੀਕੋਡ ਮੋਡ ਵਿੱਚ ਕੰਮ ਨਹੀਂ ਕਰਦਾ। ਜੇਕਰ ਯੂਨੀਕੋਡ ਮੋਡ ਵਿੱਚ ਨਹੀਂ ਹੋ , ਤਾਂ ਇਥੇ ਭਾਵੇਂ ਕੁਝ ਵੀ ਚੁਣ ਲਵੋ, ਤੁਸੀਂ ਕੰਟ੍ਰੋਲ+ਬਿੰਦੀ  ਜੋੜ ਸੰਰਚਨਾ ਸਵਿੱਚ ਵਾਂਗ ਹਮੇਸ਼ਾ ਵਰਤ ਸਕਦੇ ਹੋ ।
Description-pl.UTF-8: Klawisz Compose:
 Klawisz Compose (znany także jako Multi_klawisz) powoduje, że komputer interpretuje następnych kilka uderzeń klawiszy jako kombinację mającą na celu wprowadzenie znaku nie dostępnego na klawiaturze.
 .
 Na konsoli tekstowej klawisz Compose nie działa w trybie Unicode. Poza tym trybem, niezależnie od wyboru można jako klawisza Compose używać kombinacji Control+kropka.
Description-pt.UTF-8: Tecla compose:
 A tecla Compose (também conhecida como Multi) é uma tecla que sinaliza o software para interpretar os batimentos de teclas seguintes como uma combinação de símbolos para produzir um caracter não existente no teclado.
 .
 Na consola de texto a tecla Compose não funciona em modo Unicode. Se não estiver em modo Unicode, independentemente do que escolher aqui, pode sempre utilizar a combinação Alt+ponto como tecla Compose.
Description-pt_BR.UTF-8: Tecla Compose:
 A tecla Compose (também conhecida como tecla Multi) faz com que o computador interprete as próximas teclas como uma combinação para produzir um caractere não encontrado no teclado.
 .
 No console texto a tecla Compose não funciona no modo Unicode. Se não estiver no modo Unicode, independentemente do que você escolher aqui, você sempre pode usar também a combinação Control+ponto como uma tecla Compose.
Description-ro.UTF-8: Tasta de compunere:
 Tasta de compunere (cunoscută și ca Multi_key) determină computerul să interpreteze următoarele apăsări de taste ca o combinație, pentru a produce caractere care nu se găsesc pe tastatură.
 .
 Tasta de compunere nu funcționează în consola text în mod unicode. Dacă nu este în mod unicode, indiferent de alegerea de aici puteți să folosiți oricând combinația Control+punct ca și tastă de compunere în consola text.
Description-ru.UTF-8: Составная клавиша:
 Составная клавиша (также называемая Multi_key) -- это клавиша, которая подаёт сигнал программе, что последующие нажатия следует воспринимать как комбинацию для получения символа, которого нет на клавиатуре.
 .
 На текстовых консолях в режиме Юникода составная клавиша не работает. Если режим Юникода не используется, то независимо, что вы сейчас выберете, всегда можно пользоваться также комбинацией Control+точка как составной клавишей.
Description-si.UTF-8: සම්පාදන යතුර:
 සම්පාදන යතුර (බහු_යතුර ලෙසද හැඳින් වෙන) පරිගණකයට ඊලඟට යොදන යතුරු කිහිපය යතුරු පුවරුවේ නොමැති අක්‍ෂර නිර්මාණය සඳහා වන යතුරු සංයුක්ත ලෙස යොදාගැනීමට සලස්වයි.
 .
 පෙළ කොන්සෝලයේදී සම්පාදන යතුර යුනිකේත ප්‍රකාරයේදී ක්‍රියා නොකරයි. යුනිකේත ප්‍රකාරයේ නොසිටී නම්, මෙහිදී කුමක් තෝරාගත්තද ඔබට Control+හිස් තැන යතුරු සංයුක්තය සම්පාදන යතුර ලෙස යොදාගත හැක.
Description-sk.UTF-8: Kombinačný kláves:
 Kombinačný kláves (tiež známy ako kláves Multi) spôsobí, že počítač interpretuje niekoľko ďalších stlačení kláves ako kombináciu, ktorá vytvorí znak nenachádzajúci sa na klávesnici.
 .
 Na textovej konzole nefunguje kombinačný kláves v režime Unicode. Ak nie ste v režime Unicode, nezávisle od toho čo tu zvolíte môžete vždy použiť ako kombinačný kláves aj kombináciu Ctrl+bodka.
Description-sl.UTF-8: Tipka za sestavljanje:
 Tipka za sestavljanje (imenovana tudi tipka Multi) povzroči, da računalnik tolmači naslednjih nekaj udarcev na tipke kot kombinacijo za znak, ki ga ni na tipkovnici.
 .
 V tekstovni konzoli tipka za sestavljanje ne deluje v načinu Unicode. V primeru, da niste v načinu Unicode, lahko  vedno uporabite kombinacijo Krmilka+pika (Control+.), ne glede na to kaj izberete tukaj kot tipko za sestavljanje.
Description-sr.UTF-8: Compose тастер:
 Compose тастером (познатим и као Multi_key) могуће је рачунару задати секвенцу наредних карактера како би се откуцао карактер који не постоји на тастатури.
 .
 У текстуалној конзоли Compose тастер не ради у уникод моду. У том случају, без обзора шта овде изаберете, увек можете користити Control+тачка комбинацију као Compose тастер.
Description-sr@latin.UTF-8: Compose taster:
 Compose tasterom (poznatim i kao Multi_key) moguće je računaru zadati sekvencu narednih karaktera kako bi se otkucao karakter koji ne postoji na tastaturi.
 .
 U tekstualnoj konzoli Compose taster ne radi u unikod modu. U tom slučaju, bez obzora šta ovde izaberete, uvek možete koristiti Control+tačka kombinaciju kao Compose taster.
Description-sv.UTF-8: Komposittangent:
 Komposittangenten (kallas även multitangent) tvingar datorn att tolka de kommande tangenttrycken som en del av en sekvens för att kunna skapa tecken som inte finns på tangentbordet.
 .
 I textläge fungerar inte komposittangenten i Unicode. Om du inte befinner dig i Unicode-läge, oberoende vad du väljer här, så kan du använda Kontrolltangenten+punkt(".") som en komposittangent.
Description-ta.UTF-8: உருவாக்க விசை:
 உருவாக்க விசையானது (மல்டிகீ என்றும் வழங்கப்படும்) அடுத்த சில தட்டுக்களை விசைப்பலகையில் காணப்படாத கூட்டு எழுத்துருவாக கணிக்கும் படி செய்கிறது 
 .
 உரை கான்சோலில் உருவாக்க விசை யூனிக்கோட் பாங்கில் செயல்படுவதில்லை. யூனிக்கோட் பாங்கில் இல்லை எனில் இங்கு நீங்கள் என்ன தேர்ந்தெடுத்தாலும் பின்னர் எப்போது வேண்டுமானாலும் கன்ட்ரோல்+புள்ளி ஜோடியை உருவக்க விசையாக பயன்படுத்தலாம்.
Description-te.UTF-8: కంపోస్ కీ:
 కంపోస్ కీ (మల్టీకీ అనబడే) వలన తరువాత వచ్చే కీ నొక్కలను కలిపి కీబోర్డు పై లేని అక్షరము ప్రవేశ పెట్టటానికి వాడతారు.
 .
 పాఠ్య కన్సోల్ లో కంపోస్ కీ యూనికోడి విధానంలో పనిచేయదు.యూనికోడ్ లో లేకపోతే ఇక్కడ ఎంచుకున్నదానికి కంట్రోల్ +పూర్ణ విరామం(పీరియడ్) కలయికని కంపోస్ కీ గా వాడవచ్చు.
Description-tg.UTF-8: Тугмаи эҷодкунӣ:
 Тугмаи эҷодкунӣ (инчунин номи "Тугмаи чанд_вазифа" дорад) фармон медиҳад, ки компютер якчанд зарби тугмаро ҳамчун тугмабандии эҷоди ҳарфи дар клавиатура ёфтнашуда тарҷума кунад.
 .
 Дар консоли матнӣ Тугмаи эҷодкунӣ дар ҳолати Юникод кор намекунад. Агар ҳолати Юникод истифода нашавад, вобаста аз интихоби инҷоӣ, шумо инчунин доимо метавонед тугмабандии Control+фосила-ро ҳамчун Тугмаи эҷодкунӣ истифода баред.
Description-th.UTF-8: ปุ่มผสมอักขระ (Compose key):
 ปุ่มผสมอักขระ (Compose key หรือเรียกอีกชื่อหนึ่งว่า Multi_key) จะทำให้เครื่องตีความปุ่มกดสองสามครั้งถัดไปเป็นลำดับสำหรับผสมเป็นอักขระที่ไม่มีในแป้นพิมพ์
 .
 บนคอนโซลในโหมดอักขระ จะใช้ปุ่มผสมอักขระในโหมดยูนิโค้ดไม่ได้ แต่ถ้าไม่ได้อยู่ในโหมดยูนิโค้ด ไม่ว่าคุณจะเลือกปุ่มอะไรที่นี่ คุณจะยังคงสามารถใช้ปุ่ม Control+จุด เป็นปุ่มผสมอักขระได้เสมอ
Description-tr.UTF-8: Birleştirme (Compose) tuşu:
 Birleştirme tuşu ("Multi_key" olarak da bilinir); bilgisayarın, ard arda girilen bir dizi tuş vuruşunu, klavyede bulunmayan bir karakteri üretmek için birleşik olarak yorumlamasını sağlar.
 .
 Birleştirme tuşu, Unikod kipli metin uçbiriminde çalışmaz. Unikod kipinin haricindeki her durumda Ctrl+nokta bileşimini birleştirme tuşu olarak kullanabilirsiniz.
Description-ug.UTF-8: بىرىكمە كۇنۇپكا:
 بىرىكمە كۇنۇپكا (Multi_key تېز كۇنۇپكا دەپمۇ ئاتىلىدۇ) بىرلا ۋاقىتتا كۇنۇپكا تاختىسىدىكى بىر قانچە ھەرپنى بېسىپ كۇنۇپكا تاختىسىدا يوق ھەرپلەرنى كىرگۈزۈشكە ئىشلىتىلىدۇ.
 .
 تېكىست تىزگىن سۇپىسىدا بىرىكمە كۇنۇپكا يۇنىكود ھالەتتە ئىشلىمەيدۇ. ئەگەر يۇنىكود ھالەتتە بولمىسا، مەيلى سىز قانداق تاللىماڭ، Control + . (چېكىت)بىرىكمە كۇنۇپكىسى قىلىپ  ئىشلەتكىلى بولىدۇ.
Description-uk.UTF-8: Клавіша Compose:
 Клавіша Compose (також відома під назвою "мультиклавіша") змушує комп'ютер інтерпретувати декілька наступних натискань клавіш у вигляді комбінації з метою компонування невластивого для даної клавіатури символу.
 .
 Клавіша Compose не працює на текстових консолях в режимі Unicode. В інших режимах, незалежно від від того, що ви оберете тут, завжди можна замінити клавішу Compose комбінацією клавіш Control+код та отримати аналогічний функціонал.
Description-vi.UTF-8: Phím cấu tạo :
 Phím cấu tạo (cũng được gọi như là Multi_key) gây ra máy tính đọc vài cú nhấn phím kế tiếp như là một tổ hợp để nhập một ký tự không nằm trên bàn phím đó.
 .
 Trên bàn giao tiếp văn bản, phím cấu tạo không hoạt động ở chế độ Unicode. Khi không ở chế độ Unicode, bất chấp sự chọn ở đây, bạn cũng có thể sử dụng tổ hợp Control+dấu_chấm như là một phím cấu tạo.
Description-zh_CN.UTF-8: 组合键：
 组合键(或者叫复合键)使得计算机将之后输入的一些字母解释为组合以产生键盘上没有的祖父。
 .
 在字符控制台组合键在 Unicode 模式下不起作用。如果不是在 Unicode 模式下，无论您如何选择，您都可以使用 Control+句点组合作为组合键。
Description-zh_TW.UTF-8: Compose 鍵:
 Compose 鍵 (也就是 Multi_key) 會讓電腦將接下來幾個鍵擊轉譯為複合鍵，以便能產生在鍵盤上找不到的字元。
 .
 在終端文字模式下，Compose 鍵無法在 Unicode 模式下運作。若不是在 Unicode 模式下，不管您在此選擇的是什麼，您還是可以用 Control+period 這個組合鍵做為 Compose 鍵。

Template: keyboard-configuration/ctrl_alt_bksp
Type: boolean
Default: false
Description: Use Control+Alt+Backspace to terminate the X server?
 By default the combination Control+Alt+Backspace does nothing.  If
 you want it can be used to terminate the X server.
Description-ar.UTF-8: هل تريد السماح باستخدام Control+Alt+Backspace لإيقاف خادم X؟
 بطبيعة الحال لا يؤثر استخدام Control+Alt+Backspace بأي شيء. إن كنت تريديمكنك استخدامه لإيقاف خادم X.
Description-ast.UTF-8: ¿Usar Control+Alt+Retrocesu pa finar el sirvidor X?
 Por defeutu la combinación Control+Alt+Retrocesu nun fae na. Si quies pues usala pa finar el sirvidor X.
Description-be.UTF-8: Ужываць Control+Alt+Backspace, каб спыніць X сервер?
 Ад пачатку камбінацыя Control+Alt+Backspace нічога не робіць.  Калі хочаце, яе можна выкарыстоўваць для спынення X сервера.
Description-bg.UTF-8: Използване на Control+Alt+Backspace за аварийно спиране на графичния сървър.
 По подразбиране клавишната комбинация Control+Alt+Backspace не прави нищо. При желание може да се използва за аварийно прекратяване на работата на графичната система.
Description-bn.UTF-8: এক্স সার্ভার টার্মিনেট করতে Control+Alt+Backspace ব্যবহার করবেন?
 Control+Alt+Backspace এই কম্বিনেশনের ডিফল্ট কোন কাজ নির্দেশিত নেই। আপনি চাইলে X সার্ভার টার্মিনেট করতে এটি ব্যবহার করতে পারবেন।
Description-bs.UTF-8: Uključi Control+Alt+Backspace za gašenje X servera?
 Standardno, kombinacija Control+Alt+Backspace ne radi ništa.  Ako želite, može se koristiti za gašenje X servera.
Description-ca.UTF-8: Voleu emprar Control+Alt+Retrocés per a terminar el servidor X?
 Per defecte, la combinació Control+Alt+Retrocés no fa res. Si voleu, podeu emprar-la per a terminar el servidor X.
Description-cs.UTF-8: Použít Control+Alt+Backspace pro ukončení X serveru?
 Ve výchozím nastavení nedělá klávesová kombinace Control+Alt+Backspace nic. Pokud chcete, můžete ji použít pro ukončení X serveru.
Description-cy.UTF-8: Defnyddio Control+Alt+Backspace i derfynu'r gweinydd X?
 Yn arferol, nid yw'r cyfuniad Control+Alt+Backspace yn gwneud dim. Os hoffech chi, fe all gael ei ddefnyddio i derfynu'r gweinydd X.
Description-da.UTF-8: Brug Ctrl+Alt+Backspace til at terminere X-server?
 Som standard gør kombinationen Ctrl+Alt+Backspace intet.  Hvis du ønsker, kan den blive brugt til at terminere X-serveren.
Description-de.UTF-8: Strg+Alt+Zurück (Ctrl+Alt+Backspace) verwenden, um den X-Server zu beenden?
 Standardmäßig ist die Tastenkombination Strg+Alt+Zurück ohne Funktion. Wenn Sie möchten, kann Sie jedoch verwendet werden, um den X-Server zu beenden.
Description-dz.UTF-8: ཨེགསི་ སར་བར་འདི་བཏོན་བཏང་ནི་གི་དོན་ལས་ ཚད་འཛིན་+གདམ་ལྡེ་+རྒྱབ་བཤུད་ལག་ལེན་འཐབ།
 སྔོན་སྒྲིག་ཐོག་ལུ་ མཉམ་བསྡོམས་ཚད་འཛིན་+གདམ་ལྡེ་+རྒྱབ་བཤུད་ཀྱིས་ ག་ཅི་ཡང་མི་འབད། གལ་སྲིད་དགོ་པ་ཅིན་ ཨེགསི་སར་བར་བཏོན་བཏང་ནི་དོན་ལས་ལག་ལེན་འཐབ་བཏུབ།
Description-el.UTF-8: Να γίνει χρήση του Control+Alt+Backspace για τον τερματισμό του εξυπηρετητή X; 
 Εξ ορισμού ο συνδυασμός Control+Alt+Backspace δεν παράγει κάποιο αποτέλεσμα. Αν το επιθυμείτε μπορεί να χρησιμοποιηθεί για τον τερματισμό του εξυπηρετητή X.
Description-eo.UTF-8: Ĉu uzi Ctrl+Alt+Retropaŝo por finigi la X-servilon?
 Apriore, la kombino Ctrl+Alt+Retropaŝo faras nenion. Se vi deziras, ĝi povos esti uzata por ĉesigi la X-servilon.
Description-es.UTF-8: ¿Desea utilizar Control+Alt+Retroceso para terminar el servidor X?
 Por omisión la combinación Control+Alt+Retroceso no hace nada. Si lo desea, puede utilizarse para terminar el servidor X.
Description-et.UTF-8: Kas kasutada kombinatsiooni Control+Alt+Backspace X-serveri tapmiseks?
 Vaikimisi ei tee kombinatsioon Control+Alt+Backspace mitte midagi. Kui sa tahad, saab sellega X-serveri töö lõpetada.
Description-eu.UTF-8: Erabili Ktrl+Alt+Atzera tekla X zerbitzaria amaitzeko?
 Lehenetsi gisa, Ktrl+Alt+Atzera tekla konbinazioak ez du ezer egiten. Nahi baduzu, X zerbitzaria amaitzeko erabili daiteke.
Description-fa.UTF-8: از کلید های Control+Alt+Backspace برای خاتمه دادن به سرویس X استفاده شود؟
 به طور پیش فرض ترکیب کلید های Control+Alt+Backspace کاری انجام نمی دهد. در صورتی که تمایل دارید می تواند برای خاتمه دادن به سرویس X استفاده شود.
Description-fi.UTF-8: Tulisiko näppäinyhdistelmän Control+Alt+Askelpalautin lopettaa X-palvelin?
 Oletuksena näppäinyhdistelmä Control+Alt+Askelpalautin ei tee mitään. Sitä voidaan halutessasi käyttää X-palvelimen lopettamiseen.
Description-fr.UTF-8: Faut-il utiliser Control+Alt+Ret.Arr. pour arrêter le serveur X ?
 Par défaut, la combinaison de touches Ctrl+Alt+Ret.Arr. (« Ctrl+Alt+Backspace ») n'a pas d'action. Vous pouvez choisir de l'utiliser pour arrêter le serveur X.
Description-ga.UTF-8: An bhfuil fonn ort Ctrl+Alt+Backspace a úsáid chun an freastalaí X a mharú?
 De réir réamhshocraithe, ní dhéanann Ctrl+Alt+Backspace faic.  Más mian leat, is féidir é a úsáid chun an freastalaí X a mharú.
Description-gl.UTF-8: Desexa usar Ctrl+Alt+Retroceso para abortar o servidor X?
 A combinación Ctrl+Alt+Retroceso non fai nada de forma predeterminada. Se quere, pode usarse para abortar o servidor X.
Description-gu.UTF-8: X સર્વર બંધ કરવા માટે કંટ્રોલ+અલ્ટર+બેકસ્પેસ વાપરશો?
 મૂળભૂત રીતે કંટ્રોલ+અલ્ટર+બેકસ્પેસ જોડાણ કંઈ કરતું નથી.  જો તમે ઈચ્છો તો તે X સર્વરને બંધ કરવા વાપરી શકાય છે.
Description-he.UTF-8: האם להשתמש ב-Control+Alt+Backspace כדי לסגור את ה-X server?
 ברירת המחדל של צירוף המקשים Control+Alt+Backspace היא לא לעשות כלום. אם רצונך בכך, ניתן להשתמש בצירוף זה כדי לסגור את ה-X server.
Description-hi.UTF-8: कंट्रोल+आल्ट+बैकस्पेस द्वारा एक्स सर्वर को बंद करने दें?
 डिफाल्ट में कंट्रोल+आल्ट+बैकस्पेस से कुछ असर नहीं होता. पर अगर आप चाहें तो आप इससेएक्स सर्वर को बंद कर सकते हैं.
Description-hr.UTF-8: Želite li koristiti Control+Alt+Backspace za prekidanje izvođenja X servera?
 Kombinacija Control+Alt+Backspace prema zadanim postavkama ne čini ništa. Ako želite, može se koristiti za prekidanje izvođenja X servera.
Description-hu.UTF-8: A Control+Alt+Backspace bezárja az X kiszolgálót?
 Alapban a Control+Alt+Backspace nem tesz semmit. Ha akarod, az X kiszolgáló leállítására használható.
Description-id.UTF-8: Gunakan Ctrl+Alt+Backspace untuk menghentikan X server?
 Kombinasi Ctrl+Alt+Backspace tidak berfungsi apapun. Jika Anda mau, kombinasi ini dapat digunakan untuk menghentikan X server.
Description-is.UTF-8: Nota Control+Alt+Backspace til að slökkva á X-þjóninum?
 Sjálfgefið gerir lyklasamsetningin Control+Alt+Backspace ekki neitt.  Ef þú vilt, þá má nota hana til að slökkva á grafíska X þjóninum.
Description-it.UTF-8: Usare Ctrl+Alt+Backspace per terminare il server X?
 La combinazione di tasti Ctrl+Alt+Backspace non ha alcun effetto predefinito. È possibile utilizzarla per terminare il server X.
Description-ja.UTF-8: X サーバを強制終了するのに Control+Alt+Backspace を使いますか?
 デフォルトでは Control+Alt+Backspace の組み合わせは何も起こしません。望むなら X サーバを強制終了するのに使うことができます。
Description-kk.UTF-8: Control+Alt+Backspace пернелерін X серверінің жұмысын үзу үшін қолдану керек пе?
 Бастапқыда, Control+Alt+Backspace тіркесі ешнәрсе істемейді. Қаласаңыз, ол X серверінің жұмысын үзу үшін қолданыла алады.
Description-km.UTF-8: ប្រើ​គ្រាប់ចុច​ Control+Alt+Backspace ដើម្បី​កំណត់​ម៉ាស៊ីន​បម្រើ X ?
 តាម​លំនាំដើម បន្សំ​គ្រាប់​ចុច Control+Alt+Backspace មិន​មាន​អំពើ​ទេ​ ។ ប្រសិនបើ​អ្នក​ចង់​​ឲ្យ​វា​អាច​ប្រើ​បាន​សម្រាប់​បញ្ចប់​​ម៉ាស៊ីន​​បម្រើ X ។
Description-kn.UTF-8: X ಪರಿಚಾರಕವನ್ನು ನಿಲ್ಲಿಸಲು Control+Alt+Backspace ಅನ್ನು ಬಳಸುವುದೇ?
 ಸಾಮಾನ್ಯವಾಗಿ Control+Alt+Backspace ಸಂಯೋಜನೆಯು ಏನನ್ನು ಮಾಡುವುದಿಲ್ಲ. ನಿಮಗೆ ಬೇಕಾದಲ್ಲಿ X ಪರಿಚಾರಕವನ್ನು ನಿಲ್ಲಿಸಲು ಬಳಸಬಹುದು.
Description-ko.UTF-8: Control+Alt+백스페이스 키를 누르면 X 서버를 중단합니까?
 기본값으로 Control+Alt+백스페이스 키는 아무 것도 하지 않습니다. X 서버를 중단시키는 목적으로 사용할 수 있습니다.
Description-ku.UTF-8: Ji bo girtinê Control+Alt+Backspaceê bi kar bîne?
 Kombînasyona standard a Control+Alt+Backspaceê tu tiştî nake. Eger bixwazî, dikare ji bo girtina X serverê bê bikaranîn.
Description-lo.UTF-8: ໃຊ້ Control+Alt+Backspace ເພື່ອຍຸດຕິ ເຊີບເວີ X ?
 ໂດຍຄ່າເລີ່ມຕົ້ນການຮ່ວມກັນ Control+Alt+Backspace ບໍ່ເຮັດຫຍັງເລີຍ ຖ້າທ່ານຕ້ອງການທີ່ຈະສາມາດບອກຍົກເລີກ X
Description-lt.UTF-8: Ar naudoti klavišų kombinaciją Vald+Alt+Naikinti iš kairės X serverio darbui nutraukti?
 Numatytuoju atveju klavišų kombinacija Vald+Alt+Naikinimas iš kairės nedaro nieko. Jeigu norite, galite šią klavišų kombinaciją naudoti priverstinai nutraukti X serverio darbą.
Description-lv.UTF-8: Lietot Control+Alt+Backspace, lai nobeigtu X serveri?
 Pēc noklusējuma taustiņu kombinācijai Control+Alt+Backspace nav nekāda efekta, taču ir iespējams lietot to X servera darbības piespiedu pārtraukšanai.
Description-mk.UTF-8: Користи Control+Alt+Backspace за терминирање на X серверот?
 Иницијално комбинацијата Control+Alt+Backspace не прави ништо. Ако сакате може да се користи за терминирање на X серверот.
Description-ml.UTF-8: X സേവകന്‍ അവസാനിപ്പിക്കാന്‍ Ctrl+Alt+Backspace ഉപയോഗിക്കണോ?
 സാധാരണ ഗതിയില്‍ Ctrl+Alt+Backspace കീ സംയോജനം ഒന്നും ചെയ്യുന്നില്ല. താങ്കള്‍ക്ക് വേണമെങ്കിള്‍ X സേവകന്‍ അവസാനിപ്പിക്കാന്‍ അതുപയോഗിക്കാം
Description-mr.UTF-8: X परिसेवक संपवण्यासाठी Control+Alt+Backspace वापरायचे?
 Control+Alt+Backspace हा संयोग मूलनिर्धारितपणे काहीच करत नाही. इच्छा असल्यास X परिसेवक संपवण्यासाठी तुम्ही याचा वापर करू शकता.
Description-nb.UTF-8: Bruk Ctrl + Alt + Rettetast for å stoppe X-tjeneren?
 Som standard gjør kombinasjonen Ctrl + Alt + Rettetast ingenting. Hvis du vil, kan den brukes til å stoppe X-tjeneren.
Description-nl.UTF-8: Wilt u Control+Alt+Backspace gebruiken om de X-server af te sluiten?
 Standaard doet de combinatie Control+Alt+Backspace niets. Als u wilt, kan deze worden gebruikt om de X-server af te sluiten.
Description-no.UTF-8: Bruk Ctrl + Alt + Rettetast for å stoppe X-tjeneren?
 Som standard gjør kombinasjonen Ctrl + Alt + Rettetast ingenting. Hvis du vil, kan den brukes til å stoppe X-tjeneren.
Description-pa.UTF-8: ਕੀ Control+Alt+Backspace ਨੂੰ X ਸੇਰ੍ਵੇਰ ਨੂੰ ਬੰਦ ਕਰਨ ਲਈ ਵਰਤਣਾ ਚਾਹੁੰਦੇ ਹੋ?
 ਆਮ ਤੋਰ ਤੇ Control+Alt+Backspace ਦਾ ਜੋੜ ਕੁਝ ਨਹੀਂ ਕਰਦਾ। ਜੇ ਤੁਸੀਂ ਇਹ ਚਾਹੁੰਦੇ  ਹੋ, ਤਾਂ ਇਸ ਨੂੰ X Server ਬੰਦ ਕਰਨ ਲਈ ਵਰਤਿਆ ਜਾ ਸਕਦਾ ਹੈ।
Description-pl.UTF-8: Używać Control+Alt+Backspace aby zakończyć pracę X serwera?
 Domyślnie kombinacja Control+Alt+Backspace nie robi nic. Jeśli chcesz, można jej używać do zakańczania pracy X serwera.
Description-pt.UTF-8: Utilizar Control+Alt+Backspace para terminar o servidor de X?
 Por predefinição a combinação Control+Alt+Backspace não faz nada. Se desejar pode ser utilizada para terminar o servidor de X.
Description-pt_BR.UTF-8: Usar Control+Alt+Backspace para terminar o servidor X?
 Por padrão, a combinação Control+Alt+Backspace não faz nada. Se você quiser, ela pode ser usada para terminar o servidor X.
Description-ro.UTF-8: Se folosește Control+Alt+Backspace pentru a închide serverul X?
 Combinația Control+Alt+Backspace implicit nu face nimic. Dacă doriți poate fi folosită pentru a închide serverul X.
Description-ru.UTF-8: Использовать Control+Alt+Backspace для прерывания работы X-сервера?
 По умолчанию, по нажатию комбинации Control+Alt+Backspace ничего не происходит. Если хотите, то она будет использоваться для прерывания работы X-сервера.
Description-si.UTF-8: Control+Alt+Backspace යතුරු X සේවාව වසාදැමීමට යොදාගන්න?
 පෙරනිමියෙන් Control+Alt+Backspace  සංයුක්තය කිසිවක් නොකරයි. එහෙත් ඔබට ඇවැසිනම් එය X සේවාදායකය වසාදැමීමට භාවිත කල හැක.
Description-sk.UTF-8: Povoliť ukončenie X servera pomocou Control+Alt+Backspace?
 Štandardne kombinácia Control+Alt+Backspace nerobí nič. Ak chcete, možno ju použiť na ukončenie X servera.
Description-sl.UTF-8: Želite, da se s pritiskom na Krmilko+Izmenjalko+Vračalko prekine strežnik X?
 Po privzetem kombinacija  Krmilka+Izmenjalka+Vračalka ne naredi ničesar. V primeru,da to želite jo lahko uporabite za prekinitev strežnika X.
Description-sr.UTF-8: Користити Control+Alt+Backspace за рестартовање X сервера?
 Можете укључити да комбинација тастера Control+Alt+Backspace рестартује „X“ сервер.
Description-sr@latin.UTF-8: Koristiti Control+Alt+Backspace za restartovanje X servera?
 Možete uključiti da kombinacija tastera Control+Alt+Backspace restartuje „X“ server.
Description-sv.UTF-8: Använd Control+Alt+Backsteg för att avsluta X-servern?
 Som standard så gör kombinationen Control+Alt+Backsteg ingenting.  Om du vill så kan den användas för att avsluta X-servern.
Description-ta.UTF-8: கன்ட்ரோல்+ஆல்ட்+பின்நகர் விசைகளை எக்ஸ் சேவையகத்தை நிறுத்த பயன்படுத்தலாமா?
 முன்னிருப்பாக கன்ட்ரோல்+ஆல்ட்+பின்நகர் விசைகள் ஒன்றும் செய்வதில்லை. நீங்கள் விரும்பினால்  அவற்றை எக்ஸ் சேவையகத்தை நிறுத்த பயன்படுத்தலாம்.
Description-te.UTF-8: కంట్రోల్+ఆల్ట్+బ్యాక్ స్పేస్  తో  X సేవికను ముగించుము?
 అప్రమేయంగా కంట్రోల్+ఆల్ట్+బ్యాక్ స్పేస్   ఏమీ చేయదు. మీరు కావాలంటే, దీనితో  X సేవికను ముగించవచ్చు.
Description-tg.UTF-8: Тугмаҳои "Control+Alt+Backspace"-ро барои қатъ кардани X server истифода мебаред?
 Ба таври пешфарз, маҷмӯи тугмаҳои Control+Alt+Backspace ягон амалро иҷро намекунад.  Агар хоҳед, он метавонад барои қатъ кардани X server истифода шавад.
Description-th.UTF-8: จะใช้ Control+Alt+Backspace ปิดการทำงานของ X server หรือไม่?
 โดยปกติแล้ว การกด Control+Alt+Backspace จะไม่ทำอะไร แต่ถ้าคุณต้องการ ก็สามารถกำหนดให้การกดปุ่มดังกล่าวปิดการทำงานของ X server ได้
Description-tr.UTF-8: X sunucusunu sonlandırmak için Control+Alt+Backspace kullanılsın mı?
 Öntanımlı olarak  Control+Alt+Backspace bileşimi hiçbir şey yapmaz. İstediğiniz takdirde bu bileşimi X sunucusunu sonlandırmakta kullanabilirsiniz.
Description-ug.UTF-8: Control+Alt+Backspace نى ئىشلىتىپ X مۇلازىمېتىرنى توختىتامدۇ؟
 كۆڭۈلدىىكى ئەھۋالدا Control+Alt+Backspace بىرىكمە كۇنۇپكىدا ھېچقانداق مەشغۇلات ئېلىپ بېرىلمايدۇ. ئەگەر سىز خالىسىڭىز ئۇنى X مۇلازىمېتىرنى توختىتىشقا ئىشلەتكىلى بولىدۇ.
Description-uk.UTF-8: Використовувати Control+Alt+Backspace для переривання роботи X-серверу?
 За замовчуванням комбінація Control+Alt+Backspace не здійснює жодних дій. За бажанням її можна використовувати для переривання роботи X-серверу.
Description-vi.UTF-8: Dùng Control+Alt+Backspace để chấm dứt trình phục vụ X ?
 Mặc định là tổ hợp phím Control+Alt+Backspace không làm gì. Tuy nhiên, tuỳ chọn bạn có thể sử dụng nó để chấm dứt trình phục vụ X.
Description-zh_CN.UTF-8: 使用 Control+Alt+Backspace 来终止 X 服务器吗？
 默认时 Control+Alt+Backspace 组合键不做任何事情。如果您愿意它可用来终止 X 服务器。
Description-zh_TW.UTF-8: 是否使用 Control+Alt+Backspace 來中斷 X server？
 在預設上 Control+Alt+Backspace 這個組合鍵沒有作用。若您希望的話，可以把它做為中斷 X server 之用。

Template: keyboard-configuration/xkb-keymap
Type: select
Choices-C: us, al, ara, es(ast), bd, by, in(ben), be, ba, br, gb, bg, bg(phonetic), mm, ca, ca(multi), es(cat), cn, hr, cz, dk, nl, us(dvorak), bt, epo, ee, et, fi, fr(latin9), ge, de, gr, in(guj), in(jhelum), il, in, hu, is, ie, it, jp, in(kan), kz, kh, kg, kr(kr104), tr(ku_f), tr(ku), la, latam, lv, lt, mk, in(mal), np, no(smi), no, ir, ph, pl, pt, in(guru), ro, ru, rs, pk(snd), lk, sk, si, es, se, ch(fr), ch, tj, in(tam), in(tel), th, cn(tib), tr(f), tr, ua, cn(ug), vn
Choices: American English, Albanian, Arabic, Asturian, Bangladesh, Belarusian, Bengali, Belgian, Bosnian, Brazilian, British English, Bulgarian (BDS layout), Bulgarian (phonetic layout), Burmese, Canadian French, Canadian Multilingual, Catalan, Chinese, Croatian, Czech, Danish, Dutch, Dvorak, Dzongkha, Esperanto, Estonian, Ethiopian, Finnish, French, Georgian, German, Greek, Gujarati, Gurmukhi, Hebrew, Hindi, Hungarian, Icelandic, Irish, Italian, Japanese, Kannada, Kazakh, Khmer, Kirghiz, Korean, Kurdish (F layout), Kurdish (Q layout), Lao, Latin American, Latvian, Lithuanian, Macedonian, Malayalam, Nepali, Northern Sami, Norwegian, Persian, Philippines, Polish, Portuguese, Punjabi, Romanian, Russian, Serbian (Cyrillic), Sindhi, Sinhala, Slovak, Slovenian, Spanish, Swedish, Swiss French, Swiss German, Tajik, Tamil, Telugu, Thai, Tibetan, Turkish (F layout), Turkish (Q layout), Ukrainian, Uyghur, Vietnamese
Choices-am.UTF-8: የአሜሪካን እንግሊዘኛ, አልቤኒኛ, ዐርቢኛ, አስቱራዊ, ባንግላዴሻዊ, ቤሎሩሳዊ, በንጋሊኛ, ቤልጅጋዊ, ቦስንያዊ, ብራዚላዊ, የእንግሊዝ እንግሊዘኛ, Bulgarian (BDS layout), ቡልጋርኛ  (phonetic layout), Burmese, ካናዲያዊ ፍረንሳይ, ካናዳ የቡዙ ቋንቋ, ካታላዊ, ቻይንኛ, ኮራሽያኛ, ቸኪያዊ, ዴንማርክኛ, ሆላንዳዊ, ድቮርካዊ, ድዞንግኻኛ, ኤስፐራንቶ, ኢስቶንያዊ, ኢትዮጵያዊ, ፊንላንድኛ, ፈረንሳዊ, ጊዮርጊያን, ጀርመናዊ, ግሪካዊ, ጉጃርቲኛ, ጉርሙካዊ, ኣይሁዳዊ, ሐንድኛ, ሁንጋሪያዊ, አይስላንድኛ, አይሪሽ, ጣሊያናዊ, ጃፓናዊ, ካናዳኛ, ካዛክኛ, ኮመራዊ, ኪርጊዛዊ, ኮሪያኛ, ኩርዳዊ F, ኩርዳዊ Q, ላውስኛ, ላቲን አሜሪካ, ላትቪኛ, ሊቱዌንኛ, መቀዶንኛ, ማላያላምኛ, ኔፓሊኛ, ሰሜን ሳምኛ, ኖርዌይኛ, ፐርሲያኛ, Philippines, ፖላንድኛ, ፖርቱጋልኛ, ፓንጃቢኛ, ሩማንኛ, ሩስኛ, ሰርብኛ, ሲንድኛ, ኒናልኛ, ስሎቫኪኛ, ስሎቪኛ, ስፓኝኛ, ስዊድንኛ, የስዊስ ፈረንሳይኛ, ያስዊስ ጀርመንኛ, ታጂክኛ, ታሚልኛ, ተሉጉኛ, ታይኛ, ቲቤትኛ, ቱርክኛ  (F layout), ቱርክኛ  (Q layout), ዩክሬንኛ, ዑይጉርኛ, ቪትናምኛ
Choices-ar.UTF-8: الأميركية, الألبانية, العربية, الأستورية, بنغلادش, البيلاروسية, البنغالية, البلجيكية, البوسنية, البرازيلية, البريطانية, Bulgarian (BDS layout), البلغارية - تخطيط phonetic, Burmese, الفرنسيّة الكندية, الكندية متعددة اللغات, كاتالان, الصينية, الكرواتية, التشيكية, الدنماركية, الهولندية, dvorak, الزونخاية, الإسبرانتو, الإستونية, الإثيوبية, الفنلندية, الفرنسية, الجرجية, الألمانية, اليونانية, الغوجاراتية, الجرمخى, العبرية, الهندية, المجرية, الآيسلندية, الأيرلندية, الإيطالية, اليابانية, الكنّادا, الكازاخيّة, الخميرية, قيرغيز, الكورية, الكرديّة (التخطيط F), الكردية (التخطيط Q), اللاو, اللاتينية, اللاتفية, اللثوانية, المقدونية, الماليالامية, النيبالية, الساميّة الشمالية, النرويجية, الفارسية, Philippines, البولندية, البرتغالية, البنجابية, الرومانية, الروسية, الصربية - السيريلية, السنديّة, السنهالية, السلوفاكية, السلوفينية, الإسبانية, السويدية, الفرنسية السويسرية, الألمانية السويسرية, الطاجيكية, التاميلية, التيلوغو, التايلندية, التيبت, التركية (التخطيط F), التركية (التخطيط Q), الأوكرانية, الأويغورية, الفييتنامية
Choices-ast.UTF-8: Inglés americanu, Albanu, Árabe, Asturianu, Bangladesh, Bielorrusu, Bengalí, Belga, Bosniu, Brasileñu, Inglés británicu, Bulgarian (BDS layout), Búlgaru (disposición fonética), Burmese, Francés canadianu, Canadianu multillingüaxe, Catalán, Chinu, Croata, Checu, Danés, Holandés, Dvorak, Dzongkha, Esperantu, Estoniu, Etíope, Finladés, Francés, Xeorxanu, Alemán, Griegu, Gujarati, Gurmuqui, Hebréu, Hindí, Húngaru, Islandés, Irlandés, Italianu, Xaponés, Kannada, Kazaḥu, Camboyanu, Kirghiz, Coreanu, Kurdu (F layout), Kurdu (Q layout), Laosianu, Llatinoamericanu, Letón, Lituanu, Macedoniu, Malayalam, Nepalí, Sami del norte, Noruegu, Persa, Philippines, Polacu, Portués, Panyabi, Rumanu, Rusu, Serbiu (Cirílicu), Sindhi, Cingalés, Eslovacu, Eslovenu, Castellanu, Suecu, Francés de Suiza, Alemán de Suiza, Tajik, Tamil, Telugu, Tailandés, Tibetan, Turcu (F layout), Turcu (Q layout), Ucraín, Uigur, Vietnamín
Choices-be.UTF-8: Амерыканская англійская, Албанская, Арабская, Астурыйская, Бангладэш, Беларуская, Бенгальская, Бельгійская, Баснійская, Бразільская, Брытанская англійская, Балгарская (раскладка БДС), Балгарская (раскладка phonetic), Бірманская, Канадская французская (amiga), Канадская шматмоўная, Каталонская, Кітайская, Харвацкая, Чэшская, Дацкая, Галандская, Дворак, Дзонг-хэ, Эсперанта, Эстонская, Эфіёпская, Фінская, Французская, Грузінская, Нямецкая, Грэцкая, Гуджараці, Гурмукхі, Ізраільская, Хіндзі, Венгерская, Ісландская, Ірландская, Італьянская, Японская, Канада, Казахская, Кхмерская, Кыргізская, Карэйская, Курдская (раскладка F), Курдская (раскладка Q), Лаоская, Лацінаамерынская, Латышская, Літоўская, Македонская, Малаялам, Непалі, Паўночна-саамская, Нарвежская, Персідская, Філіпінская, Польская, Партугальская, Панджабі, Румынская, Руская, Сербская (кірыліца), Сіндхі, Сінгальская, Славацкая, Славенская, Іспанская, Шведская, Швейцарская французская, Швейцарская нямецкая, Таджыкская, Тамільская, Тэлугу, Тайская, Тыбецкая, Турэцкая (раскладка F), Турэцкая (раскладка Q), Украінская, Уйгурская, В'етнамская
Choices-bg.UTF-8: Американски английски, Албански, Арабски, Астурска, Бангладеш, Беларуска, Бенгалски, Белгийска, Босненски, Бразилска, Британски английски, Българска (подредба БДС), Българска (подредба phonetic), Бирмански, Канадски френски, Канадска многоезична, Каталунска, Китайски, Хърватска, Чешка, Датска, Датска, Дворак, Дзонгкха, Есперанто, Естонска, Етиопска, Финландска, Френска, Грузински, Германска, Гръцка, Гуджаратски, Гурмукхи, Еврейска, Хинди, Унгарска, Исландска, Ирландски, Италианска, Японска, Каннада, Казахски, Кхмерска, Киргизка, Корейски, Кюрдски (подредба F), Кюрдски (подредба Q), Лаоски, Латински американски, Латвийски, Литовска, Македонска, Малаялам, Непалски, Северносаамска, Норвежка, Персийски (Фарси), Филипини, Полска, Португалска, Панджабска, Румънска, Руска, Сръбска (кирилица), Синдхи, Синхалска, Словашка, Словенска, Испанска, Шведска, Швейцарски френски, Швейцарска, Таджикска, Тамилски, Телугу, Тайска, Тибетска, Турска (подредба F), Турска (подредба Q), Украинска, Уйгурска, Виетнамски
Choices-bn.UTF-8: মার্কিন ইংরেজী, আলবেনিয়, আরবি, আস্তুরীয়, বাংলাদেশ, বেলারুশীয়, বাংলা, বেলজিয়, বসনিয়া, ব্রাজিলীয়, বৃটিশ ইংরেজী, Bulgarian (BDS layout), বুলগেরীয় (phonetic লেআউট), Burmese, কানাডীয় ফরাসি, কানাডিয় মিশ্র ভাষা, ক্যাটালান, চাইনিজ, ক্রোয়েশিয়, চেক্, ড্যানিশ, ওলন্দাজ, ডিভোরাক (Dvorak), ঝোঙ্খা, এসপারান্তো, এস্তোনীয়, ইথোপীয়, ফিনীয়, ফরাসি, জর্জীয়, জার্মান, গ্রীক, গুজরাটি, গুরুমুখী, হিব্রু, হিন্দি, হাঙ্গেরীয়, আইসল্যান্ডীয়, আইরিশ, ইতালীয়, জাপানি, কান্নাড়া, কাজাখ, খেমার, কিরঘিজ, কোরিয়ান, কুর্দী (F লেআউট), কুর্দী (Q লেআউট), লাও, লাতিন আমেরিকান, লাটভীয়, লিথুনীয়, মেসেডোনীয়, মালায়ালাম, নেপালি, উত্তরীয় সামি, নরওয়েজীয়, ফারসি, Philippines, পোলীয়, পর্তুগিজ, পাঞ্জাবি, রোমানীয়, রাশিয়ান, সার্বীয় (সিরিলিক), সিন্ধি, সিনহালা, স্লোভাক, স্লোভেনিয়ান, স্প্যানীয়, সুইডিশ, সুইস ফরাসি, সুইস জার্মান, Tajik, তামিল, তেলেগু, থাই, Tibetan, তুর্কি (F লেআউট), তুর্কি (Q লেআউট), ইউক্রেনীয়, উইঘুর, ভিয়েতনামী
Choices-bo.UTF-8: ཨ་རིའི་དབྱིན་སྐད, ཨར་པ་མི་ཡ་སྐད, ཨ་རབ་སྐད, ཨོ་སི་ཁྲུ་རི་ཡ་སྐད, བྷང་ག་ལའི་སྐད, བེ་ལ་ཨུ་རུ་སུ་སྐད, བྷང་ག་་ལའི་སྐད, བེར་གྲེམ་སྐད, པོ་སི་ནི་ཡ་སྐད, པ་ར་ཟིའི་སྐད, དབྱིན་ཇིའི་དབྱིན་སྐད, Bulgarian (BDS layout), པུར་ཀ་རི་ཡ་སྐད (གསལ་བྱེད་ཀྱི་བཀོད་པ), Burmese, ཁ་ན་ཏའི་ཧྥ་རན་སེའི་སྐད, ཁ་ན་ཏའི་སྐད་རིགས་སྣ་མང, ཁ་ཏ་ལའི་སྐད, རྒྱ་ནག་སྐད, ཁུ་རོ་ཨ་ཏིའི་སྐད, ཅེ་ཁེའི་སྐད, ཏེན་མག་སྐད, ཧོ་ལན་སྐད, Dvorak ཡི་མཐེབ་གཞོང, རྫོང་ཁའི་སྐད, འཛམ་གླིང་སྐད, ཨེ་སོ་ནི་ཡ་སྐད, ཨེ་ཚི་ཨོ་ཕི་ཡ་སྐད, ཧྥིན་ལན་སྐད, ཧྥ་རན་སེའི་སྐད, གེ་རོ་ཇི་ཡ་སྐད, འཇར་མན་སྐད, ཀེ་རི་སེའི་སྐད, གུ་ཇ་ར་ཏིའི་སྐད, གུ་རུ་མུ་ཁི་སྐད, ཧེ་པོ་རུ་སྐད, ཧིན་རྡིའི་སྐད, ཧང་ག་རིའི་སྐད, འཁྱགས་གླིང་གི་སྐད, ཨིར་ལན་གྱི་སྐད, དབྱི་ཐ་ལིའི་སྐད, འཇར་པན་སྐད, ཀན་ན་དའི་སྐད, ཁ་ས་ཁའི་སྐད, ཁེ་མེར་སྐད, གི་རི་ཇི་སི་སྐད, ཀོ་རི་ཡ་སྐད, གུར་དི་སྐད (F ཡི་བཀོད་པ), གུར་དི་སྐད (Q ཡི་བཀོད་པ), ལའོ་ཝོ་སྐད, ལ་ཏིང་ཨ་རིའི་སྐད, ལ་ཏོ་ཝི་ཡ་སྐད, ལི་ཐུ་ཝན་མི་ཡ་སྐད, མ་ཆི་དོ་ནི་ཡ་སྐད, མ་ལ་ཡ་ལམ་སྐད, ནེ་པ་ལའི་སྐད, བྱང་ས་མིའི་སྐད, ནོར་ཝེའི་སྐད, པར་སིའི་སྐད, Philippines, ཕོ་ལན་སྐད, ཕོར་ཐིའུ་ཀལ་སྐད, ཕང་ཇི་པེ་སྐད, རོ་མའི་སྐད, ཨུ་རུ་སི་སྐད, སེ་རེ་པེ་ཡ་སྐད (Cyrillic གསལ་བྱེད), སིན་རྡི་སྐད, སིན་ཧ་ལ་སྐད, སི་ལོ་ཝ་ཁེའི་སྐད, སི་ལོ་ཝེ་ནི་ཡ་སྐད, སི་ཕེན་སྐད, སུའེ་ཏེན་སྐད, སུའེ་ཙེར་གྱི་ཧྥ་རན་སེའི་སྐད, སུའེ་ཙེར་གྱི་མཇར་མན་སྐད, Tajik, ཐ་མི་ལི་སྐད, ཐེ་ལུ་རྒུ་སྐད, ཐེ་ལན་སྐད, Tibetan, ཐུར་ཁེའི་སྐད (F ཡི་བཀོད་པ), ཐུར་ཁེའི་སྐད (Q ཡི་བཀོད་པ), ཨུ་ཁུ་རན་ནི་ཡ་སྐད, ཡུ་གུར་སྐད, ཝེ་ཐེ་ནམ་གྱི་སྐད
Choices-bs.UTF-8: Američki engleski, Albanski, Arapski, Asturijski, Bangladeš, Bjeloruski, Bengalski, Belgijski, Bosanski, Brazilski, Britanski engleski, Bulgarian (BDS layout), Bugarski (fonetski raspored), Burmese, Kanadski francuski, Kanadski višejezični, Katalonski, Kineski, Hrvatski, Češki, Danski, Holandski, Dvorak, Dzongkha, Esperanto, Estonski, Etiopijski, Finski, Francuski, Gruzijski, Njemački, Grčki, Gudžaratski, Gurmukijski, Hebrejski, Hindi, Mađarski, Islandski, Irski, Italijanski, Japanski, Kannada, Kazahstanski, Kmerski, Kirgiški, Korejski, Kurdski (F raspored), Kurdski (Q raspored), Laoski, Latinoamerički, Latvijski, Litvanski, Makedonski, Malayalam, Nepalski, Sjeverni Sami, Norveški, Perzijski, Philippines, Poljski, Portugalski, Pandžabi, Rumunski, Ruski, Srpski (ćirilični), Sindi, Sinhala, Slovački, Slovenski, Španski, Švedski, Švicarski francuski, Švicarski njemački, Tadžički, Tamilski, Telugu, Tajlandski, Tibetanski, Turski (F raspored), Turski (Q raspored), Ukrajinski, Ujgurski, Vijetnamski
Choices-ca.UTF-8: Anglès americà, Albanès, Àrab, Asturià, Bangla Desh, Bielorús, Bengalí, Belga, Bosnià, Brasiler, Anglès britànic, Búlgar (disposició BDS), Búlgar (disposició fonètica), Birmà, Francès canadenc, Canadenc multilingüe, Català, Xinès, Croat, Txec, Danès, Holandès, Dvorak, Bhutanès, Esperanto, Estonià, Etíop, Finès, Francès, Georgià, Alemany, Grec, Gujarati, Gurmukhi, Hebreu, Hindi, Hongarès, Islandès, Irlandès, Italià, Japonès, Kanarès, Kazakh, Khmer, Kirguís, Coreà, Kurd (disposició F), Kurd (disposició Q), Laosià, Llatinoamericà, Letó, Lituà, Macedoni, Malaiàlam, Nepalès, Sami septrentional, Noruec, Persa, Filipí, Polonès, Portuguès, Panjabi, Romanès, Rus, Serbi (Ciríl·lic), Sindhi, Singalès, Eslovac, Eslovè, Espanyol, Suec, Francès suís, Alemany suís, Tadjik, Tàmil, Telugu, Tai, Tibetà, Turc (disposició F), Turc (disposició Q), Ucraïnès, Uigur, Vietnamita
Choices-cs.UTF-8: americká angličtina, albánská, arabská, asturská, bangladéšská, běloruská, bengálská, belgická, bosenská, brazilská, britská angličtina, bulharská (rozložení BDS), bulharská (rozložení phonetic), barmská, kanadská francouzština, kanadská vícejazyčná, katalánská, čínská, chorvatská, česká, dánská, holandská, dvořák, bhútánská, esperanto, estonská, etiopská, finská, francouzská, gruzínská, německá, řecká, gudžarátská, Gurmukhí, hebrejská, hindská, maďarská, islandská, irská, italská, japonská, kannadská, kazašská, khmerská, kirgizská, korejská, kurdská (rozložení F), kurdská (rozložení Q), laoská, latinsko americká, lotyšská, litevská, makedonská, malajálamská, nepálská, Severní Sami, norská, perská, filipínská, polská, portugalská, paňdžábská, rumunská, ruská, srbská (azbuka), sindhská, sinhálská, slovenská, slovinská, španělská, švédská, švýcarská - francouzština, švýcarská - němčina, tádžická, tamilská, telugu, thajská, tibetská, turecká (rozložení F), turecká (rozložení Q), ukrajinská, ujgurská, vietnamská
Choices-cy.UTF-8: Saesneg Americanaidd, Albaneg, Arabeg, Astwrieg, Bangladesh, Belarwseg, Bengaleg, Belgeg, Bosnieg, Brasilaidd, Saesneg Prydeinig, Bulgarian (BDS layout), Bwlgareg (cynllun ffonetig), Burmese, Ffrangeg Canadiaidd, Amlieithog Canadiaidd, Catalaneg, Tsieinëeg, Croateg, Tsieceg, Daneg, Iseldireg, Dvorak, Dsonca, Esperanto, Estoneg, Ethiopeg, Ffineg, Ffrangeg, Georgeg, Almaeneg, Groeg, Gwjwrati, Gurmukhi, Hebraeg, Hindi, Hwngareg, Islandeg, Gwyddeleg, Eidaleg, Siapaneeg, Canareg, Cazacheg, Khmer, Kirghiz, Corëeg, Cwrdeg (Cynllun F), Cwrdeg (Cynllun Q), Laoeg, America Ladin, Latfieg, Lithwaneg, Macedoneg, Malaialameg, Nepaleg, Sami Gogleddol, Norwyeg, Perseg, Philippines, Pwyleg, Portiwgaleg, Pwnjabeg, Romaneg, Rwsieg, Serbeg (Syrilig), Sindi, Sinhaleg, Slofeg, Slofeneg, Sbaeneg, Swedeg, Ffrangeg y Swistir, Almaeneg y Swistir, Tajik, Tamileg, Telwgw, Siameg, Tibetan, Tyrceg (Cynllun F), Tyrceg (Cynllun Q), Wcreineg, Uighur, Fietnameg
Choices-da.UTF-8: Amerikansk-engelsk, Albansk, Arabisk, Asturiansk, Bangladesh, Hviderussisk, Bengali, Belgisk, Bosnisk, Brasiliansk, Britisk-engelsk, Bulgarsk (BDS-layout), Bulgarsk kyrillisk (phonetic-layout), Burmesisk, Fransk-canadisk, Canadisk flersproget, Catalansk, Kinesisk, Kroatisk, Tjekkisk, Dansk, Hollandsk, Dvorak, Dzongkha, Esperanto, Estisk, Etiopisk, Finsk, Fransk, Georgisk, Tysk, Græsk, Gujarati, Gurmukhi, Hebraisk, Hindi, Ungarsk, Islandsk, Irsk; Gælisk (irsk), Italiensk, Japansk, Kannaresisk, Kasakhisk, Khmerisk, Kirgisisk, Koreansk, Kurdisk (F-layout), Kurdisk (Q-layout), Laotisk, Latin-amerikansk, Lettisk, Litauisk, Makedonsk, Malayalam, Nepalesisk, Nordligt samisk, Norsk, Persisk, Filippinsk, Polsk, Portugisisk, Punjabi, Rumænsk, Russisk, Serbisk (kyrillisk), Sindhi, Singalesisk, Slovakisk, Slovensk, Spansk, Svensk, Schweitzerfransk, Schweitzertysk, Tadsjikisk, Tamilsk, Telugu, Thailandsk, Tibetansk, Tyrkisk (F-layout), Tyrkisk (Q-layout), Ukrainsk, Uyghur, Vietnamesisk
Choices-de.UTF-8: Amerikanisches Englisch, Albanisch, Arabisch, Asturisch, Bangladesch, Weißrussisch, Bengali, Belgisch, Bosnisch, Brasilianisch, Britisches Englisch, Bulgarisch (BDS-Anordnung), Bulgarisch (Phonetic-Anordnung), Burmesisch, Kanadisches Französisch, Kanadisch (mehrsprachig), Katalanisch, Chinesisch, Kroatisch, Tschechisch, Dänisch, Niederländisch, Dvorak, Dzongkha, Esperanto, Estnisch, Äthiopisch, Finnisch, Französisch, Georgisch, Deutsch, Griechisch, Gujarati-Sprache, Gurmukhi, Hebräisch, Hindi, Ungarisch, Isländisch, Irisch, Italienisch, Japanisch, Kannada, Kasachisch, Khmer, Kirgisisch, Koreanisch, Kurdisch (F-Anordnung), Kurdisch (Q-Anordnung), Laotisch, Lateinamerikanisch, Lettisch, Litauisch, Mazedonisch, Malayalam, Nepali, Nordsamisch, Norwegisch, Persisch, Philippinen, Polnisch, Portugiesisch, Panjabi, Rumänisch, Russisch, Serbisch (Kyrillisch), Sindhi, Singhalesisch, Slowakisch, Slowenisch, Spanisch, Schwedisch, Schweizerisches Französisch, Schweizerdeutsch, Tadschikisch (Neupersisch), Tamil, Telugu, Thailändisch, Tibetanisch, Türkisch (F-Anordnung), Türkisch (Q-Anordnung), Ukrainisch, Uigurisch, Vietnamesisch
Choices-dz.UTF-8: ཨ་མི་རི་ཀཱན་ ཨིང་ལིཤ།, Albanian, ཨ་ར་བིཀ།, Asturian, བང་ལ་དེཤི།, བེ་ལ་རུ་སི་ཡཱན། , Bengali, བེལ་ཇི་ཡཱན།, Bosnian, བཱ་ར་ཛི་ལི་ཡཱན།, བིརི་ཊིཤ་ཨིང་ལིཤ།, Bulgarian (BDS layout), བཱལ་ག་རི་ཡཱན། (phonetic layout), Burmese, ཀེ་ན་ཌི་ཡཱན་ ཕིརེནཆི།, ཀེ་ན་ཌི་ཡཱན་ སྐད་སྣ།, Catalan, Chinese, ཀོརོ་ཤི་ཡཱན།, ཅེཛི།, ཌེ་ནིཤ།, ཌཆ།, ཌབ་རག, Dzongkha, Esperanto, ཨིསི་ཊོ་ནི་ཡཱན།, Ethiopian, ཕིན་ནིཤ།, ཕིརེནཆི།, ཇིའོར་ཇི་ཡཱན།, ཇར་མཱན།, གི་རིཀ།, Gujarati, Gurmukhi, ཧེབ་བིརིའུ།, Hindi, ཧང་ག་རི་ཡཱན།, ཨའིསི་ལེན་ཌིཀ།, Irish, ཨི་ཊ་ལི་ཡཱན།, ཇ་པ་ནིསི།, Kannada, Kazakh, Khmer, ཀིར་གིསི་, Korean, Kurdish (F layout), Kurdish (Q layout), ལའོ།, ལེ་ཊིན་ཨ་མི་རི་ཀ, ལེཊི་བི་ཡཱན།, ལི་ཐུ་འ་ནི་ཡཱན།, མེ་སི་ཌོ་ནི་ཡཱན།, Malayalam, Nepali, Northern Sami, ནོར་ཝེ་ཇི་ཡཱན།, Persian, Philippines, པོ་ལིཤ།, པོར་ཊུ་གིསི། , Punjabi, རོ་མ་ནི་ཡཱན། , ར་ཤི་ཡཱན།, སར་བི་ཡཱན། (སི་རི་ལིཀ), Sindhi, Sinhala, Slovak, Slovenian, སིཔེ་ནིཤི།, སུའི་ཌིཤི།, སུའིསི་ ཕིརེནཆི།, སུའིསི་ཇར་མཱན།, Tajik, Tamil, Telugu, ཐཱེ།, Tibetan, ཊར་ཀིཤ། (ཨེཕ་སྒྲིག་བཀོད།), ཊར་ཀིཤ།(ཀེཡུ་ སྒྲིག་བཀོད།), ཡུཀ་རའི་ནི་ཡཱན།, Uyghur, Vietnamese
Choices-el.UTF-8: Αγγλική ΗΠΑ, Αλβανικά, Αραβικά, Αστουρίας, Μπανγκλαντές, Λευκορωσική, Βεγκάζης, Βελγική, Βοσνιακά, Βραζιλιάνικη, Αγγλική, Bulgarian (BDS layout), Βουλγάρικη (φωνητική διάταξη), Burmese, Γαλλική Καναδά, Καναδική πολυγλωσσική , Καταλανική, Κινέζικα, Κροατική, Τσεχική, Δανέζικη, Ολλανδική, Dvorak, Dzongkha, Εσπεράντο, Εσθονική, Αιθιοπική, Φινλανδική, Γαλλική, Γεωργιανά, Γερμανική, Ελληνική, Gujarati, Gurmukhi, Εβραϊκή, Ινδουικά, Ουγγρική, Ισλανδική, Ιρλανδέζικα, Ιταλική, Ιαπωνική, Kannada, Καζακική, Χμερ, Κιργιζική, Κορεάτικα, Κούρδικα (διάταξη F), Κούρδικα (διάταξη Q), Λαοτινή, Λατινικής Αμερικής, Λεττονική, Λιθουανική, Σλαβομακεδονική, Μαλαισιανή, Νεπάλ, Βόρεια Σάμι, Νορβηγική, Περσικά, Philippines, Πολωνική, Πορτογαλική, Punjabi, Ρουμανική, Ρωσική, Σερβική (Κυριλλική), Σίντι, Sinhala, Σλοβακική, Σλοβενική, Ισπανική, Σουηδική, Γαλλική Ελβετίας, Γερμανική Ελβετίας, Τατζικική, Ταϊλανδέζικα, Telugu, Ταϊλανδική , Θιβετιανή, Τουρκική (διάταξη F), Τουρκική (διάταξη Q), Ουκρανική, Uyghur, Βιετναμέζικα
Choices-eo.UTF-8: Usona, Albana, Araba, Astura, Bangladeŝo, Belorusa, Bengala, Belga, Bosna, Brazila, Brita, Bulgarian (BDS layout), Bulgara (phonetic), Burmese, Kanada (franclingvo), Kanada plurlingva, Kataluna, Ĉina, Kroata, Ĉeĥa, Dana, Nederlanda, Dvoraka, Dzonka, Esperanto, Estona, Etiopia, Finna, Franca, Kartvela, Germana, Greka, Guĝarata, Gurmuka, Hebrea, Hindia, Hungara, Islanda, Irlanda, Itala, Japana, Kanara, Kazaĥa, Kmera, Kirgiza, Korea, Kurda (F), Kurda (Q), Laosa, Latin-amerika, Latva, Litava, Makedona, Malajala, Nepala, Nord-Samea, Norvega, Persa, Philippines, Pola, Portugala, Panĝaba, Rumana, Rusa, Cirila serba, Sinda, Sinhala, Slovaka, Slovena, Hispana, Sveda, Romanda svisa, Alemana svisa, Taĝika, Tamila, Telugua, Tajlanda, Tibeta, Turka (F), Turka (Q), Ukraina, Ujgura, Vjetnama
Choices-es.UTF-8: Inglés estadounidense, Albanés, Árábe, Asturiano, Bangladesh, Bielorruso, Bengalí, Belga, Bosnio, Brasileño, Inglés británico, Búlgaro (variante BDS), Búlgaro (variante fonética), Birmano, Francés canadiense, Canadiense multilingüe, Catalán, Chino, Croata, Checo, Danés, Holandés, Dvorak, Butaní, Esperanto, Estonio, Etíope, Finlandés, Francés, Georgiano, Alemán, Griego, Guyaratí, Gurmukhi, Hebreo, Hindi, Húngaro, Islandés, Irlandés, Italiano, Japonés, Canarés, Kazajo, Jemer, Kirghizo, Coreano, Kurdo (variante F), Kurdo (variante Q), Laosiano, Latinoamericano, Letón, Lituano, Macedonio, Malayalamo, Nepalés, Sami septentrional, Noruego, Persa, Filipino, Polaco, Portugués, Panyabí, Rumano, Ruso, Serbio (cirílico), Sindhi, Cingalés, Eslovaco, Esloveno, Español, Sueco, Francés suizo, Alemán suizo, Tayiko, Tamil, Telugú, Tailandés, Tibetano, Turco (variante F), Turco (variante Q), Ucraniano, Uigur, Vietnamita
Choices-et.UTF-8: ameerika inglise, Albaania, Araabia, astuuria, Bangladesh, valgevene, bengali, belgia, bosnia, brasiilia, briti inglise, Bulgarian (BDS layout), bulgaaria (foneetiline asetus), Burmese, kanada prantsuse, kanada mitmekeelne, katalaani, Hiina, horvaatia, tšehhi, taani, hollandi, Dvoraki, dzongkha, Esperanto, eesti, etioopia, soome, prantsuse, gruusia, saksa, kreeka, gudžarati, gurmukhi, heebrea, hindi, ungari, islandi, Iiri, itaalia, jaapani, kannada, kasahhi, khmeeri, kirgiisi, Korea, kurdi (F asetus), kurdi (Q asetus), lao, ladina-ameerika, läti, leedu, makedoonia, malajalami, nepali, põhjasaami, norra, pärsia, Philippines, poola, portugali, pandžabi, rumeenia, vene, serbia (krillits), sindhi, singali, slovakkia, sloveenia, hispaania, rootsi, šveitsi prantsuse, šveitsi, Tadžiki, tamili, telugu, Tai, Tiibeti, türgi (F asetus), türgi (Q asetus), ukraina, uiguuri, Vietnami
Choices-eu.UTF-8: AEBko ingelesa, Albaniera, Arabiera, Asturiarra, Bangladesh, Bielorrusiarra, Bengalera, Belgikarra, Bosniera, Brasildarra, Erresuma Batuko ingelesa, Bulgarian (BDS layout), Bulgariarra (diseinu fonetikoa), Burmese, Kanadako frantsesa, Kanadar eleanitza, Katalana, Txinera, Kroaziarra, Txekiarra, Daniarra, Nederlandera, Dvorak, Dzongkha, Esperantoa, Estoniarra, Etiopiarra, Finlandiarra, Frantsesa, Georgiera, Alemaniarra, Greziarra, Gujeratera, Gurmukhi, Hebrearra, Hindi, Hungariarra, Islandiarra, Irlandera, Italiarra, Japoniarra, Kannada, Kazakhera, Khmer, Kirghizarra, Koreera, Kurduera (F diseinua), Kurduera (Q diseinua), Laosera, Latinoamerikarra, Letoniarra, Lituaniarra, Mazedoniarra, Malayalamera, Nepalera, Iparraldeko Samiarra, Norvegiarra, Persiera, Philippines, Poloniarra, Portugesa, Panjabiarra, Errumaniarra, Errusiarra, Serbiarra (Zirilikoa), Sindhia, Sinhala, Eslovakiarra, Esloveniarra, Espainiarra, Suediarra, Suitzako frantsesa, Suitzako alemaniarra, Tajik, Tamil-a, Telugu-a, Thailandiarra, Tibetan, Turkiarra (F diseinua), Turkiarra (Q diseinua), Ukraniarra, Uyghur, Vietnamera
Choices-fa.UTF-8: انگليسي (امريكايي) , آلبانیایی, عربی, Asturian, بنگلادش, بلاروس, بنگالی, بلژيكي, بوسنیایی, برزیلی, انگليسي بريتانيا, Bulgarian (BDS layout), بلغاري (phonetic layout), Burmese, كانادايي فرانسه, كانادا چند زبانه, Catalan, چینی, كرواسي, چك, دانماركي, هلندي, Dvorak, بوتانی, اسپرانتو, استوني, اتیوپیایی, فنلاندي, فرانسه, گرجی, الماني, يوناني, گجراتی, Gurmukhi, عبري, هندی, مجارستاني, ايسلندي, ایرلندی, ايتالييايي, ژاپني, کاناده‌ای, قزاقی, Khmer, قرقيزي, کره‌ای, کردی (طرح F), کردی (طرح Q), لائوسی, امريكاي لاتين, لتوني, لیتوانیایی, مقدونی, مالایالامی, نپالی, سامی شمالی, نروژي, فارسی, Philippines, لهستاني, پرتغالي, Punjabi, روماني, روسي, صربی (سیریلیک), سندی, Sinhala, اسلواک, اسلوونیایی, اسپانيايي, سوئدي, سوييس( فرانسه), سوييس الماني, Tajik, تامیلی, تلوگویی, تايلندي, Tibetan, تركي, تركي, اكرايني, Uyghur, ویتنامی
Choices-fi.UTF-8: amerikanenglantilainen, Albania, Arabia, Asturia, Bangladesh, valkovenäläinen, Bengali, belgialainen, Bosnia, brasilialainen, brittienglantilainen, Bulgarian (BDS layout), bulgarialainen (phonetic-asettelu), Burmese, kanadanranskalainen, Kanadan monikielinen, katalaani, Kiina, kroatialainen, tšekkiläinen, tanskalainen, hollantilainen, Dvorak, Dzongkha, Esperanto, virolainen, etiopialainen, suomalainen, ranskalainen, Georgia, saksalainen, kreikkalainen, Gujarati, Gurmukhi, heprealainen, Hindi, unkarilainen, islantilainen, Iiri, italialainen, japanilainen, Kannada, Kazakki, Khmer, kirgiisi, Korea, Kurdi (F-asettelu), Kurdi (Q-asettelu), Lao, latinalaisamerikkalainen, latvianlainen, liettualainen, makedonialainen, Malayalam, Nepali, pohjoissaame, norjalainen, Persia, Philippines, puolalainen, portugalilainen, punjabi, romanialainen, venäläinen, serbialainen (kyrillinen), sindhi, sinhala, slovakialainen, slovenialainen, espanjalainen, ruotsalainen, sveitsinranskalainen, sveitsinsaksalainen, Tajik, Tamili, Telugu, thai, Tibetan, turkkilainen (F-asettelu), turkkilainen (Q-asettelu), ukrainalainen, uiguuri, Vietnam
Choices-fr.UTF-8: États-Unis, Albanais, Arabe, Asturien, Bangladesh, Bélarusse, Bengali, Belge, Bosniaque, Brésilien, Britannique, Bulgare (BDS), Bulgare (phonétique), Birman, Canadien français, Canadien multilingue, Catalan, Chinois, Croate, Tchèque, Danois, Néerlandais, Dvorak, Dzongkha, Espéranto, Estonien, Éthiopien, Finnois, Français, Géorgien, Allemand, Grec, Gujarati, Gourmoukhî, Hébreu, Hindi, Hongrois, Islandais, Irlandais, Italien, Japonais, Kannada, Kazakh, Khmer, Kirghize, Coréen, Kurde (f), Kurde (q), Lao, Amérique latine, Letton, Lithuanien, Macédonien, Malayalam, Népalais, Sami septentrional, Norvégien, Persan, Philippines, Polonais, Portugais, Punjabi, Roumain, Russe, Serbe cyrillique, Sindhi, Singhalais, Slovaque, Slovène, Espagnol, Suédois, Suisse romand, Suisse alémanique, Tadjik, Tamoul, Télougou, Thaï, Tibétain, Turc (trfu), Turc (trqu), Ukrainien, Ouïgour, Vietnamien
Choices-ga.UTF-8: Béarla Meiriceánach, Albánach, Arabach, Astúrach, An Bhanglaidéis, Bealarúiseach, Beangálach, Beilgeach, Boisniach, Brasaíleach, Béarla Sasanach, Bulgárach (leagan amach BDS), Bulgárach (leagan amach phonetic), Burmais, Francach (Ceanada), Ceanadach Ilteangach, Catalónach, Síneach, Crótach, Seiceach, Danmhargach, Ollannach, Dvorak, Seoiniach, Esperanto, Eastónach, Aetópach, Fionlannach, Francach, Seoirseach, Gearmánach, Gréagach, Gúisearátach, Gurmúcaí, Eabhrach, Hiondúis, Ungárach, Íoslannach, Gaeilge, Iodálach, Seapánach, Cannadach, Casacach, Ciméarach, Cirgiseach, Cóiréach, Coirdínach (leagan amach F), Coirdíneach (leagan amach Q), Laoch, Meiriceánach Laidineach, Laitviach, Liotuánach, Macadónach, Mailéalamach, Neipealach, Sáimis Thuaidh, Ioruach, Peirseach, Na hOileáin Fhilipíneacha, Polannach, Portaingéalach, Puinseábach, Rómánach, Rúiseach, Seirbiach (Coireallach), Sindeach, Siolónach, Slóvacach, Slóivéanach, Spáinneach, Sualannach, Francach (An Eilvéis), Gearmánach (An Eilvéis), Táidsíceastánach, Tamalach, Teileagúch, Téalannach, Tibéadach, Turcach (leagan amach F), Turcach (leagan amach Q), Úcránach, Uigiúrach, Vítneamach
Choices-gl.UTF-8: Inglés americano, Albanés, Árabe, Asturiano, Bangladesh, Bielorruso, Bengalí, Belga, Bosnio, Brasileiro, Inglés británico, Bulgarian (BDS layout), Búlgaro (esquema phonetic), Birmano, Francés do Canadá, Canadense multilingüe, Catalán, Chinés, Croata, Checo, Dinamarqués, Holandés, Dvorak, Dzongkha, Esperanto, Estoniano, Etíope, Finés, Francés, Xeorxiano, Alemán, Grego, Guxaratí, Gurmukhi, Hebreo, Hindi, Húngaro, Islandés, Irlandés; Gaélico irlandés, Italiano, Xaponés, Canarés, Kazaxo, Camboxano, Quirguiz, Coreano, Kurdo (esquema F), Kurdo (esquema Q), Laosiano, Latinoamericano, Letón, Lituano, Macedonio, Malaio, Nepalés, Sami do norte, Noruegués, Persa, Filipino, Polaco, Portugués, Panxabi, Romanés, Ruso, Serbio (cirílico), Sindhi, Sinhala, Eslovaco, Esloveno, Español, Sueco, Francés de Suíza, Alemán de Suíza, Taxico, Tamil, Telugu, Thai, Tibetano, Turco (esquema F), Turco (esquema Q), Ucraíno, Uigure, Vietnamita
Choices-gu.UTF-8: અમેરિકન અંગ્રેજી, અલ્બેનિયન, અરેબિક, એસ્ટુરિઅન, બાંગ્લાદેશ, બેલારશિયન, બંગાળી, બેલ્જીયન, બોસનીયન, બ્રાજીલિયન, બ્રિટિશ અંગ્રેજી, Bulgarian (BDS layout), બલ્ગેરિયન (ફોનેટિક દેખાવ), Burmese, કેનેડિયન ફ્રેન્ચ, કેનેડિયન બહુભાષીય, કેટેલાન, ચીની, ક્રોએશિયન, ચૅઝ, ડેનિશ, ડચ, ડવોરાક, ડ્જોન્ગખા, ઇસ્પેરાન્ટો, ઇસ્ટોનિયન, ઇથિઓપિક, ફિનિશ, ફ્રેન્ચ, જોર્જિયન, જર્મન, ગ્રીક, ગુજરાતી, ગુરુમુખી, હિબ્રુ, હિન્દી, હંગેરિયન, આઇસલેન્ડિક, ઇરિશ, ઇટાલિયન, જાપાનીઝ, કન્નડ, કઝાખ, ખ્મેર, કિર્ગિઝ, કોરિયન, કુર્દીશ (F દેખાવ), કુર્દીશ (Q દેખાવ), લાઓ, લેટિન અમેરિકન, લેટવિયન, લિથુઆનિયન, મેસેડોનિયન, મલયાલમ, નેપાળી, ઉત્તરી સામી, નોર્વેજીયન, પર્સિયન, Philippines, પોલીશ, પોર્ટુગીઝ, પંજાબી, રોમાનિયન, રશિયન, સર્બિયન (સિરીલીક), સિંધી, સિંહાલા, સ્લોવેક, સ્લોવેનિઅન, સ્પેનિશ, સ્વિડિશ, સ્વીશ ફ્રેન્ચ, સ્વીસ જર્મન, તાજિક, તમિલ, તેલુગુ, થાઇ, તિબેટાન, તુર્કિશ (F દેખાવ), તુર્કિશ (Q દેખાવ), યુક્રેનિયન, ઉગ્હુર, વિયેતનામી
Choices-he.UTF-8: אנגלית אמריקאית, אלבנית, ערבית, אסטורית, בנגלדש, בלרוסית, בנגלית, בלגית, בוסנית, ברזילאית, אנגלית בריטית, Bulgarian (BDS layout), בולגרית (פריסה פונטית), בורמזית, צרפתית קנדית, קנדית (ריבוי שפות), קטלאנית, סינית, קרואטית, צ'כית, דנית, הולנדית, דובראק, דזונגקה, אספרנטו, אסטונית, אתיופית, פינית, צרפתית, גאורגית, גרמנית, יוונית, גוג'ראטית, גורמוקהי, עברית, הינדי, הונגרית, איסלנדית, אירית, איטלקית, יפנית, קאנדה, קזחית, קמרית, קירגיזית, קוריאנית, כורדית (פריסת F), כורדית (פריסת Q), לאו, לטינית אמריקאית, לאטבית, ליטואנית, מקדונית, מלאיאלאם, נפאלית, סאמי צפוני, נורבגית, פרסית, פיליפינית, פולנית, פורטוגזית, פנג'אבי, רומנית, רוסית, סרבית (קרילית), סינדהי, סינהלה, סלובקית, סלובנית, ספרדית, שוודית, צרפתית שווצרית, גרמנית שווצרית, טג'יקית, טמילית, טלוגו, תיאלנדית, טיבטית, טורקית (פריסת F), טורקית (פריסת Q), אוקראינית, אויגור, וייטנאמית
Choices-hi.UTF-8: अमरीकी अंग्रेज़ी, अल्बेनियन्, अरबी, अस्तूरी, बांग्लादेश, बेलारुसियाई, बँगाली, बेल्जियाई, बोस्नियाई, ब्राजीलियाई, ब्रिटिश अंग्रेज़ी, Bulgarian (BDS layout), बल्गारियाई (phonetic खाका), Burmese, कनाडाई फ्रांसीसी, कनाडाई बहुभाषी, कैटलन, चीनी, क्रोएशियाई, चेक, डेनिश, डच, द्वोराक, भुटानी, एस्पेरान्तो, एस्तोनियाई, ईथोपियाई, फ़िनिश, फ्रांसीसी, जॉर्जीयन्, जर्मनी, ग्रीक, गुज़राती, गुरमुखी, हिब्रू, हिंदी, हंगरीयाई, आइसलेंडिक, आईरिश, इतालवी, जापानी, कन्नड़, कज़ाख, खमेर, किरघिज़, कोरीयन्, कुरदीश (F खाका), कुरदीश (Q खाका), लाओथीयन्, लातिन अमरीकी, लाटवियाई, लिथुआनियाई, मकदूनियाई, मलयालम, नेपाली, उत्तरी समी, नॉर्वेजियाई, पर्शियन्, Philippines, पोलिश, पुर्तगाली, पंजाबी, रोमानियाई, रूसी, सर्बियाई (साइरिलिक), सिन्धी, सिंहला, स्लोवाकियाई, स्लोवीनियाई, स्पेनी, स्वीडिश, स्विस फ्रांसीसी, स्विस जर्मनी, Tajik, तमिल, तेलेगु, थाई, Tibetan, तुर्की (F खाका), तुर्की (Q खाका), उक्रेनियाई, उइघुर, वियेतनामी
Choices-hr.UTF-8: američka engleska, albanska, arapska, asturijska, bangladeška, bjeloruska, bengalska, belgijska, bosanska, brazilska, britanska engleska, bugarska (BDS raspored), bugarska (fonetski raspored), burmanska, kanadska francuska, kanadska višejezična, katalonska, kineska, hrvatska, češka, danska, nizozemska, Dvorak, Dzongkha, Esperanto, estonska, etiopska, finska, francuska, gruzijska, njemačka, grčka, Gujarati, Gurmukhi, hebrejska, Hindi, mađarska, islandska, irska, talijanska, japanska, Kannada, kazaška, kmerska, kirgiška, korejska, kurdska (F raspored), kurdska (Q raspored), Lao, latinoamerička, latvijska, litavska, makedonska, Malayalam, nepalska, Northern Sami, norveška, perzijska, filipinska, poljska, portugalska, Punjabi, rumunjska, ruska, srpska (ćirilična), Sindhi, Sinhala, slovačka, slovenska, španjolska, švedska, švicarsko-francuska, švicarsko-njemačka, tadžikistanska, tamilska, Telugu, tajlandska, tibetska, turska (F raspored), turska (Q raspored), ukrajinska, ujgurska, vijetnamska
Choices-hu.UTF-8: amerikai angol, albán, arab, asztúriai, bangladesi, belorusz, bengáli, belga, bosnyák, brazil, brit angol, Bulgarian (BDS layout), bolgár (fonetikus elrendezés), Burmese, kanadai francia, kanadai többnyelvű, katalán, kínai, horvát, cseh, dán, holland, Dvorak, dzongkha, eszperantó, észt, etióp, finn, francia, grúz, német, görög, gudzsaráti, gurmukhi, héber, hindi, magyar, izlandi, Ír, olasz, japán, kannada, kazak, khmer, kirgiz, koreai, kurd (F kiosztású), kurd (Q kiosztású), lao, latin-amerikai, lett, litván, macedón, malajálam, nepáli, északi számi, norvég, perzsa, Philippines, lengyel, portugál, pandzsábi, román, orosz, szerb (cirill), sindhi, sinhala, szlovák, szlovén, spanyol, svéd, svájci francia, svájci német, tádzsik, tamil, telugu, thai, tibeti, török (F kiosztású), török (Q kiosztású), ukrán, ujgur, vietnami
Choices-hy.UTF-8: American English, Albanian, Arabic, Asturian, Bangladesh, Belarusian, Bengali, Belgian, Bosnian, Brazilian, British English, Bulgarian (BDS layout), Bulgarian (phonetic layout), Burmese, Canadian French, Canadian Multilingual, Catalan, Chinese, Croatian, Czech, Danish, Dutch, Dvorak, Dzongkha, Esperanto, Estonian, Ethiopian, Finnish, French, Georgian, German, Greek, Gujarati, Gurmukhi, Hebrew, Hindi, Hungarian, Icelandic, Irish, Italian, Japanese, Kannada, Kazakh, Khmer, Kirghiz, Korean, Kurdish (F layout), Kurdish (Q layout), Lao, Latin American, Latvian, Lithuanian, Macedonian, Malayalam, Nepali, Northern Sami, Norwegian, Persian, Philippines, Polish, Portuguese, Punjabi, Romanian, Russian, Serbian (Cyrillic), Sindhi, Sinhala, Slovak, Slovenian, Spanish, Swedish, Swiss French, Swiss German, Tajik, Tamil, Telugu, Thai, Tibetan, Turkish (F layout), Turkish (Q layout), Ukrainian, Uyghur, Vietnamese
Choices-id.UTF-8: Inggris Amerika, Albania, Arab, Asturia, Banglades, Belarusia, Bengali, Belgia, Bosnia, Brasil, Inggris Inggris, Bulgarian (BDS layout), Bulgaria (phonetic), Burmese, Perancis Kanada, Kanada Multibahasa, Catalan, Cina, Kroasia, Ceko, Denmark, Belanda, Dvorak, Dzongkha, Esperanto, Estonia, Ethiopia, Finlandia, Perancis, Georgia, Jerman, Yunani, Gujarati, Gurmukhi, Ibrani, Hindi, Hongaria, Islandia, Irlandia, Italia, Jepang, Kanada, Kazakh, Khmer, Kirghiz, Korea, Kurdish (Pola F), Kurdish (Pola Q), Lao, Amerika Latin, Latvia, Lithuania, Macedonia, Malayalam, Nepal, Sami Utara, Norwegia, Persia, Philippines, Polandia, Portugis, Punjabi, Rumania, Rusia, Serbia (Cyrillic), Sindh, Sinhala, Slovakia, Slovenia, Spanyol, Swedia, Prancis Swiss, Jerman Swiss, Tajik, Tamil, Telugu, Thailand, Tibetan, Turki (Pola F), Turki (Pola Q), Ukrania, Uygur, Vietnam
Choices-is.UTF-8: Bandarísk enskt, Албански, Arabískt, Astúrískt, Bangladess, Hvítrússneskt, Bengalst, Belgískt, Bosnískt, Brasilískt, Bresk enskt, Bulgarian (BDS layout), Búlgarskt (phonetic uppsetning), Burmese, Kanadískt franskt, Kanadískt fjöltyngt, Katalónska, Kínverskt, Króatískt, Tékkneskt, Danskt, Hollenskt, Dvorak, Dzongkha, Esperantó, Eistneskt, Eþíópískt, Finnskt, Franskt, Georgísk skrift, Þýskt, Grískt, Gújaratí, Gurmukískt, Hebreskt, Hindí, Ungverskt, Íslenskt, Írskt, Ítalskt, Japanskt, Kannadískt, Kasakískt, Khmerískt, Kirgisískt, Kóreskt, Kúrdískt (F uppsetning), Kúrdískt (Q uppsetning), Laóskt, Latínu-amerískt, Lettneskt, Litháískt, Makedónískt, Malayanskt, Nepalskt, Norðursamískt, Norskt, Persneskt, Philippines, Pólskt, Portúgalskt, Punjabískt, Rúmenskt, Rússneskt, Serbneskt (kýrílískt letur), Sindí, Sinhala, Slóvakíska, Slóvenska, Spænskt, Sænskt, Svissnensk franskt, Svissnesk þýskt, Tadzjikiskt, Tamílskt, Telúgú, Taílenskt, Tíbetskt, Tyrkneskt (F uppsetning), Tyrkneskt (Q uppsetning), Úkraínskt, Uyghur, Víetnamskt
Choices-it.UTF-8: Inglese (Stati Uniti), Albanese, Arabo, Asturiano, Bangladesh, Bielorussa, Bengalese, Belga, Bosniaco, Brasiliana, Inglese (Gran Bretagna), Bulgara (disposizione BDS), Bulgara (disposizione fonetica), Birmana, Francese (Canada), Canadese (multilingua), Catalano, Cinese, Croata, Ceca, Danese, Olandese, Dvorak, Dzongkha, Esperanto, Estone, Etiope, Finlandese, Francese, Georgiano, Tedesca, Greca, Gujarati, Gurmukhi, Ebraica, Hindi, Ungherese, Islandese, Irlandese, Italiana, Giapponese, Kannada, Kazako, Khmer, Chirghisa, Coreano, Curdo (disposizione F), Curdo (disposizione Q), Lao, Latino-americana, Lettone, Lituana, Macedone, Malayalam, Nepalese, Sami del Nord, Norvegese, Persiano, Filippino, Polacca, Portoghese, Punjabi, Rumena, Russa, Serba (cirillica), Sindhi, Sinhala, Slovacca, Slovena, Spagnola, Svedese, Francese (Svizzera), Tedesca (Svizzera), Tagica, Tamil, Telugu, Tailandese, Tibetana, Turca (disposizione F), Turca (disposizione Q), Ucraina, Uyghur, Vietnamita
Choices-ja.UTF-8: 米国, アルバニア語, アラビア語, アストゥリアス語, バングラデシュ語, ベラルーシ語, ベンガル語, ベルギー語, ボスニア語, ブラジル語, イギリス英語, ブルガリア語 (BDS レイアウト), ブルガリア語 (phonetic レイアウト), ビルマ語, カナダ (フランス語), カナダ (多言語), カタルニア語, 中国語, クロアチア語, チェコ語, デンマーク語, オランダ語, Dvorak, ゾンカ語, エスペラント語, エストニア語, エチオピア語, フィンランド語, フランス語, ジョージア語, ドイツ語, ギリシャ語, グジャラーティー語, グルムキー文字, ヘブライ語, ヒンディー語, ハンガリー語, アイスランド語, アイルランド語, イタリア語, 日本語, カンナダ語, カザーフ語, クメール語, キルギス語, 朝鮮語, クルド語 (F 配置), クルド語 (Q レイアウト), ラオ語, ラテンアメリカ語, ラトビア語, リトアニア語, マケドニア語, マラヤーラム語, ネパール語, 北サーメ, ノルウェー語, ペルシア語, フィリピン, ポーランド語, ポルトガル語, パンジャブ語, ルーマニア語, ロシア語, セルビア語 (キリル文字), シンド語, シンハラ語, スロバキア語, スロベニア語, スペイン語, スウェーデン語, スイス (フランス語), スイス (ドイツ語), タジク語, タミル語, テルグ語, タイ語, チベット語, トルコ語 (F 配置), トルコ語 (Q レイアウト), ウクライナ語, ウイグル語, ベトナム語
Choices-ka.UTF-8: ამერიკული ინგლისური, Albanian, არაბული, Asturian, ბანგლადეში, ბელორუსიული, Bengali, ბელგიური, Bosnian, ბრაზილიური, ბრიტანული ინგლისური, Bulgarian (BDS layout), ბულგარული (phonetic განლაგება), Burmese, კანადური ფრანგული, კანადური - მრავალენოვანი, Catalan, Chinese, ხორვატიული, ჩეხური, დანიური, ნიდერლანდური, Dvorak განლაგება, Dzongkha, Esperanto, ესტონური, Ethiopian, ფინური, ფრანგული, ქართული, გერმანული, ბერძნული, Gujarati, Gurmukhi, ებრაული, Hindi, უნგრული, აისლენდური, Irish, იტალიური, იაპონური, Kannada, Kazakh, Khmer, ყირგიზული, Korean, Kurdish (F layout), Kurdish (Q layout), ლაო, ლათინურ ამერიკული, ლატვიური, ლიტვური, მაკედონიური, Malayalam, Nepali, Northern Sami, ნორვეგიული, Persian, Philippines, პოლონური, პორტუგალიური, Punjabi, რუმინული, რუსული, სერბული (კირილიცა), Sindhi, Sinhala, Slovak, Slovenian, ესპანური, შვედური, შვეიცარული ფრანგული, შვეიცარული გერმანული, Tajik, Tamil, Telugu, ტაილანდური, Tibetan, თურქული (F განლაგება), თურქული (Q განლაგება), უკრაინული, Uyghur, Vietnamese
Choices-kk.UTF-8: Американ ағылшын, Албаниялық, Араб, Астуриялық, Бангладеш, Беларус, Бенгал, Бельгиялық, Босниялық, Бразилиялық, Ұлыбританиялық ағылшын, Болгар (BDS layout), Болгар (phonetic layout), Бирмалық, Канадалық француз, Канадалық көптілді, Каталан, Қытайша, Хорват, Чех, Даниялық, Голланд, Дворак, Дзонг-кэ, Эсперанто, Эстон, Эфиопиялық, Финн, Француз, Грузия, Неміс, Грек, Гуджарати, Гурмукхи, Иврит, Хинди, Венгр, Исландиялық, Ирландиялық, Италиян, Жапон, Каннада, Қазақ, Хмер, Қырғыз, Кореялық, Курд (F layout), Курд (Q layout), Лао, Латын америкалық, Латвиялық, Литвалық, Македон, Малаялам, Непалдық, Солтүстік Сами, Норвегиялық, Парсы, Филиппин, Польшалық, Португал, Панджаби, Румын, Орыс, Серб (Cyrillic), Синди, Синхала, Словакиялық, Словениялық, Испан, Швециялық, Швейцариялық француз, Швейцариялық неміс, Тәжік, Тамил, Телугу, Тай, Тибет, Түрік (F layout), Түрік (Q layout), Украин, Ұйғыр, Вьетнам
Choices-km.UTF-8: អង់គ្លេស អាមេរិក, អាល់បានី, អារ៉ាប់, អូតួរៀន, បង់ក្លាដេស, បេឡារុស្ស​​, បង់ហ្គាលី, បែលហ្សិក-ឡាតាំង១, ប៊ូស្នី, ប្រេស៊ីល, ​អង់គ្លេស អង់គ្លេស, Bulgarian (BDS layout), ប៊ុលហ្គារី-phonetic, Burmese, បារាំង​ កាណាដា, ច្រើន​ភាសា កាណាដៀន, កាតាឡាន, ចិន, ក្រូអាត, ឆេក, ដាណឺម៉ាក, ហូល្លង់, dvorak, ហ្សុងខា, អេស្ពីរ៉េនតូ, អេស្តូនី, អេត្យូពី, ហ្វាំងឡង់, បារាំង, ហ្សកហ្ស៊ី, អាល្លឺម៉ង់, ក្រិក, ហ្គូយ៉ារ៉ាទី, ហ្គូមូឃី, ហេប្រូ, ហិណ្ឌូ, ហុងគ្រី, អ៊ីស្លង់, អៀឡង់, អ៊ីតាលី, ជប៉ុន, កាណាដា, កាហ្សាក, ខ្មែរ, ឃឺកហីស, កូរ៉េ, ទួរគី (ប្លង់ F), ទួរគី (ប្លង់ Q), ឡាវ, អាមេរិក​ឡាទីន-ឡាតាំង១, ឡាតវីយ៉ា, លីទុយអានី, ម៉ាសេដូនី, ម៉ាឡេស៊ី, នេប៉ាល់, សាមី​ខាង​ជើង​, ន័រវ៉ែស, ភឺសៀន​​, Philippines, ប៉ូឡូញ, ព័រទុយហ្គាល់, ប៉ុនយ៉ាប៊ី, រ៉ូម៉ានី, រុស្ស៊ី, ស៊ែរប៊ី-ស៊ីពរ៍, ស៊ីន្តី, ស្រីលង្កា, ស្លូវ៉ាគី, ស្លូវ៉ានា, អេស្ប៉ាញ, ស៊ុយអែដ, បារាំង ស្វីស, ស្វីស អាល្លឺម៉ង់, Tajik, តាមីល, តេឡូហ្គូ, ថៃ, Tibetan, ទួរគី (ប្លង់ F), ទួរគី (ប្លង់ Q), អ៊ុយក្រែន, អុយហ្គូរ, វៀតណាម
Choices-kn.UTF-8: ಅಮೆರಿಕನ್ ಇಂಗ್ಲೀಷ, ಅಲ್ಬೇನಿಯನ್, ಅರೇಬಿಕ್, ಅಸ್ತುರಿಯನ್, ಬಾಂಗ್ಲಾದೇಶ, ಬೆಲಾರೂಸಿಯನ್, ಬೆಂಗಾಲಿ, ಬೆಲ್ಜಿಯನ್, ಬೋಸ್ನಿಯನ್, ಬ್ರೆಝಿಲಿನ, ಬ್ರಿಟಿಷ್ ಇಂಗ್ಲೀಷ್, Bulgarian (BDS layout), ಬಲ್ಗೇರಿಯನ್ (ಉಚ್ಚಾರಣಾನುರೂಪವಾಗಿರುವ ವಿನ್ಯಾಸ), Burmese, ಕೆನೆಡಿಯನ್ ಫ್ರೆಂಚ್, ಕೆನೆಡಿಯನ್ Multilingual, ಕ್ಯಾಟಲಾನ್, ಚೈನೀಸ್, ಕ್ರೊಏಶಿಯನ್, ಝೆಕ್, ಡ್ಯಾನಿಶ್, ಡಚ್, ಡೊರಾಕ್, ಜೋಂಗ್‌ಕಾ, ಎಸ್ಪರಾಂಟೊ, ಎಸ್ಟೊನಿಯನ್, ಇತಿಯೋಪಿಯನ್ನಿನ, ಫಿನ್ನಿಶ್, ಫ್ರೆಂಚ್, ಜಾರ್ಜಿಯನ್, ಜರ್ಮನ್, ಗ್ರೀಕ್, ಗುಜರಾತಿ, ಗುರ್ಮುಖಿ, ಹೀಬ್ರೂ, ಹಿಂದಿ, ಹಂಗೇರಿಯನ್, ಐಸ್ಲಾಂಡಿಕ್, ಐರಿಶ್, ಇಟಾಲಿಯನ್, ಜಪನೀಸ್, ಕನ್ನಡ, ಕಜಕ್, ಖ್ಮೆರ್, ಕಿರ್ಘಿಸ್, ಕೊರಿಯನ್, ಕುರ್ದಿಶ್ (F ವಿನ್ಯಾಸ), ಕುರ್ದಿಶ್ (Q ವಿನ್ಯಾಸ), ಲಾವೋ, ಲತಿನ್ ಅಮೆರಿಕನ್, ಲಾಟ್ವಿಯನ್, ಲಿಥುವೆನಿಯನ್, ಮೆಸಿಡೊನಿಯನ್, ಮಲಯಾಳಂ, ನೇಪಾಲಿ, ಉತ್ತರ ಸಾಮಿ, ನೊರ್ವೆಜಿಯನ್, ಪರ್ಶಿಯನ್, Philippines, ಪೋಲಿಶ್, ಪೋರ್ಚುಗೀಸ್, ಪಂಜಾಬಿ, ರೊಮೇನಿಯನ್, ರಷಿಯನ್, ಸರ್ಬಿಯನ್ (ಸಿರಿಲಿಕ್), ಸಿಂಧಿ, ಸಿನ್ಹಲ, ಸ್ಲೋವಾಕ್, ಸ್ಲೋವೆನಿಯನ್, ಸ್ಪಾನಿಷ್ , ಸ್ವೀಡಿಷ್, ಸ್ವಿಸ್ ಫ್ರೆಂಚ್, ಸ್ವಿಸ್ ಜರ್ಮನ್, ತಾಜೀಕ್, ತಮಿಳು, ತೆಲುಗು, ಥಾಯ್, ಟಿಬೆಟ, ತುರ್ಕಿಶ್ (F ವಿನ್ಯಾಸ), ತುರ್ಕಿಶ್ (Q ವಿನ್ಯಾಸ), ಉಕ್ರೇನಿಯನ್, ಉಯ್ಘುರ್, ವಿಯೆಟ್ನಾಮೀಸ್
Choices-ko.UTF-8: 미국 영어, 알바니아어, 아랍어, 아스투리아스어, 방글라데시, 벨라루시아어, 벵골어, 벨기에어, 보스니아어, 브라질 포르투갈어, 영국 영어, 불가리아어 (BDS 배치), 불가리아어 (음성 표기), 미얀마, 캐나다 프랑스어, 캐나다 다국어, 카탈루냐어, 중국어, 크로아티아어, 체코어, 덴마크어, 네덜란드어, 드보락, 종카어, 에스페란토어, 에스토니아어, 에티오피아어, 핀란드어, 프랑스어, 조지아어, 독일어, 그리스어, 구자라트어, 구르무키 문자, 히브리어, 힌두어, 헝가리어, 아이슬란드어, 아일랜드어, 이탈리아어, 일본어, 칸나다어, 카자흐어, 크메르어, 키르기스어, 한국어, 쿠르드어 (F 배치), 쿠르드어 (Q 배치), 라오어, 중남미, 라트비아어, 리투아니아어, 마케도니아어, 말라얄람어, 네팔어, 사미어 (북부), 노르웨이어, 페르시아어, 필리핀, 폴란드어, 포르투갈어, 펀잡어, 루마이나어, 러시아어, 세르비아어 (키릴 문자), 신디어, 싱할라어, 슬로바키아어, 슬로베니아어, 스페인어, 스웨덴어, 스위스 프랑스어, 스위스 독일어, 타지크어, 타밀어, 텔루구어, 타이어, 티벳어, 터키어 (F 배치), 터키어 (Q 배치), 우크라니아어, 위구르어, 베트남어
Choices-ku.UTF-8: Îngilîziya Amerîka, Albanian, Erebî, Asturian, Banglades, Belarûsî, Bengali, Belçîkî, Bosnian, Brazîlî, Îngilîziya Brîtanya, Bulgarian (BDS layout), Bulgarî (phonetic), Burmese, Fransiya Kanadayê, Kanada ya Pirzimanî, Catalan, Chinese, Kroatî, Çekî, Danimarkî, Hollandî, Dvorak, Dzongkha, Esperanto, Estonî, Ethiopian, Finî, Fransî, Gurcî, Almanî, Yewnanî, Gujarati, Gurmukhi, Îbranî, Hindi, Macarî, Îzlandî, Irish, Îtalî, Japonî, Kannada, Kazakh, Khmer, Qirxizî, Korean, Kurdish (F layout), Kurdish (Q layout), Laoyî, Amerîkiya Latîn, Latwî, Lîtwanî, Makedonî, Malayalam, Nepali, Northern Sami, Norwecî, Persian, Philippines, Polonî, Portekîzî, Punjabi, Romanî, Rûsî, Sirbî (Kîrîl), Sindhi, Sinhala, Slovak, Slovenian, Spanî, Swêdî, Fransiya Swîsrê, Almaniya Swîsrê, Tajik, Tamil, Telugu, Tay, Tibetan, Tirkî (F), Tirkî (Q), Ukraynî, Uyghur, vîyetnamî
Choices-lo.UTF-8: ພາສາອັງກິດອາເມລິກັນ, ອາເບເນຍ, ອາລັບ, ເເອຊ໌ທູລ້ຽນ, ບັງກະລາເດດ, ກ່ຽວກັບເບລະຣູສ, ພາສາບັງກະລາເດດ, ຊາວເບລຢຽມ, ພາສາບອສເນຍ, ບຣາຊິວ, ພາສາອັງກິດ, Bulgarian (BDS layout), ບັລເກເຣຍຮູບແບບການອອກສຽງ, Burmese, ຝຣັ່ງເສດ ແຄນາດາ, ເວົ້າໄດ້ຫລາຍພາສາ ຊາວແຄນາດາ, ພາສາກັດຕະລານ, ພາສາຈີນ, ພາສາໂຄຣເອເຊຍ, ພາສາເຊັກ, ພາສາເດັນມາຣກ, ພາສາດັດຊ, ພາສາໂວລັກ, ພາສາດອງກາ, ພາສາເອສເປີລານໂຕ, ພາສາເອສໂຕເນຍ, ພາສາອີຕີໂອປຽຍ, ພາສາຟິນແລນ, ພາສາຝຣັ່ງເສດ, ພາສາຈໍເຈຍ, ພາສາເຢີລະມັນ, ພາສາກຣີກ, ພາສາກູຈາລາຕີ, ພາສາເກີມູກີ, ພາສາຮິບຣູ, ພາສາຮີນດິ, ພາສາຮັງກາຣີ, ພາສາໄອຊແລນ, ພາສາໃອຣີຊ໌, ພາສາອິຕາລີ, ພາສາຢີ່ປຸ່ນ, ພາສາຄັນນາດາ, ພາສາກາຊາກ, ພາສາກໍາພູຊາ, ພາສາເຄີກີຊ, ພາສາເກົາຫຼີ, ພາສາເຄີດ (ແບບ F), ພາສາເຄີດ (ແບບ Q ), ພາສາລາວ, ລາຕິນອາເມຣິກາ, ພາສາລັດເວຍ, ພາສາລິຮົວເນຍ, ພາສາແມກຊີໂດເນຍ, ພາສາມາລາຍາມ, ພາສາເນປາລີ, ສາມິ ເໜືອ, ພາສານໍເວ, ພາສາເພີເຊຍ, Philippines, ພາສາໂປເເລນ, ໂປຣຕຸເກດ, ພາສາພຸນຈາບິ, ພາສາໂຣມາເນຍ, ພາສາຣັສເຊຍ, ພາສາເຊີເບຍ (ຊີຣິລລິກ), ພາສາສີນຮີ, ພາສາສີນຫາລາ, ພາສາສະໂລວັກ, ພາສາສະໂລວັກ, ພາສາສະເປນ, ພາສາສະວີເດັນ, ພາສາຝຣັ່ງເສດ ສະວິສ, ພາສາເຢີຣະມັນ ສະວິສ, Tajik, ພາສາທາມມີວ, ພາສາເທກາລູ, ພາສາໄທ, Tibetan, ພາສາຕຸຣະກີ (ແບບ F), ພາສາຕຸລະກີ (ແບບ Q ), ພາສາຢູເຄຣນ, ພາສາອູເກີ, ພາສາຫວຽດ
Choices-lt.UTF-8: Amerikiečių angliškas, Albanų, Arabų, Astūrų, Bangladešas, Baltarusių, Bengalų, Belgų, Bosnių, Brazilų, Britų angliškas, Bulgarian (BDS layout), Bulgarų (fonetinis), Burmese, Kanadiečių prancūziškas, Kanadiečių daugiakalbis, Katalonų, Kinų, Kroatų, Čekų, Danų, Olandų, Dvorako, Botijų, Esperanto, Estų, Etiopų, Suomių, Prancūzų, Gruzinų, Vokiečių, Graikų, Gudžaratų, Gurmukhų, Hebrajų, Hindi, Vengrų, Islandų, Airių, Italų, Japonų, Kanadų, Kazachų, Khmerų, Kirgizų, Korėjiečių, Kurdų (F), Kurdų (Q), Laosiečių, Lotynų Amerikos, Latvių, Lietuvių, Makedonų, Malajalių, Nepalų, Šiaurės samių, Norvegų, Persų, Philippines, Lenkų, Portugalų, Pandžabų, Rumunų, Rusų, Serbų (kirilica), Sindų, Singalų, Slovakų, Slovėnų, Ispanų, Švedų, Šveicarų prancūziškas, Šveicarų vokiškas, Tajik, Tamilų, Telugų, Tajų, Tibetan, Turkų (F), Turkų (Q), Ukrainiečių, Uigūrų, Vietnamiečių
Choices-lv.UTF-8: Amerikāņu angļu, Albāņu, Arābu, Astūriešu, Bangladešas, Baltkrievu, Bengāļu, Beļģu, Bosniešu, Brazīļu, Britu angļu, Bulgarian (BDS layout), Bulgāru (fonētiskais izkārtojums), Burmese, Kanādiešu franču, Kanādas daudzvalodu, Katalāņu, Ķīniešu, Horvātu, Čehu, Dāņu, Holandiešu, Dvorak, Dzongke, Esperanto, Igauņu, Etiopiešu, Somu, Franču, Gruzīnu, Vācu, Grieķu, Gudžaratu, Gurmuku, Ivrits, Hindi, Ungāru, Islandiešu, Īru, Itāliešu, Japāņu, Kannadu, Kazahu, Khmeru, Kirgīzu, Korejiešu, Kurdu (F izklājums), Kurdu (Q izklājums), Laosiešu, Latīņamerikas, Latviešu, Lietuviešu, Maķedoniešu, Malajalu, Nepāliešu, Ziemeļsāmu, Norvēģu, Persiešu, Philippines, Poļu, Portugāļu, Pandžabu, Rumāņu, Krievu, Serbu (kirilica), Sindhu, Singāļu, Slovāku, Slovēņu, Spāņu, Zviedru, Šveices franču, Šveices vāciešu, Tadžiku, Tamilu, Telugu, Taju, Tibetiešu, Turku (F izklājums), Turku (Q izklājums), Ukraiņu, Uiguru, Vjetnamiešu
Choices-mk.UTF-8: Американско-англиски, Албански, Арапски, Австриски, Бангладеш, Белоруски, Бенгалски, Белгиски, Босански, Бразилски, Британски англиски, Bulgarian (BDS layout), Бугарски (фонетски распоред), Burmese, Канадско француски, Канадско повеќејазично, Каталонски, Кинески, Хрватски, Чешки, Дански, Холандски, Дворак, Џонгха, Есперанто, Естониски, Етиопски, Фински, Француски, Грузиски, германска, Грчки, Гујарати, Гуркмуки, Хебрејски, Хинду, Унгарски, Исландски, Ирски, италијанска, Јапонски, Каннада, Казак, Кмер, Киргиз, Корејски, Курдски (F распоред), Курдски (Q распоред), Лаошки, Латино американски, Латвиски, Литвански, Македонски, Малајалам, Непалска, Северено самиска, Норвешка, Персиска, Philippines, Полска, Португалска, Панџаби, Романска, Руска, Српски (Кирилица), Синди, Синхала, Словачки, Словенечки, Шпански, Шведски, Швајцарско француски, Шведско-германски, Tajik, Тамилски, Телуг, Тајландски, Tibetan, турска fu, турска qu, украинска, Ујгхур, Виетнамски
Choices-ml.UTF-8: അമേരിക്കന്‍ ഇംഗ്ലീഷ്, അല്‍ബാനിയന്‍, അറബിക്, അസ്തൂറിയന്‍, ബംഗ്ലാദേശ്, ബെലാറൂസ്യന്‍, ബംഗാളി, ബെല്‍ജിയന്‍, ബോസ്നിയന്‍, ബ്രസീലിയന്‍, ബ്രിട്ടീഷ് ഇംഗ്ലീഷ്, Bulgarian (BDS layout), ബള്‍ഗേറിയന്‍ (phonetic layout), Burmese, കനേഡിയന്‍ ഫ്രഞ്ച്, കനേഡിയന്‍ ബഹുഭാഷ, കറ്റാലന്‍, ചൈനീസ്, ക്രൊയേഷ്യന്‍, ചെക്ക്, ഡാനിഷ്, ഡച്ച്, ഡ്വൊറാക്, സോങ്കാ, എസ്പറാന്റോ, എസ്തോണിയന്‍, എത്യോപ്യന്‍, ഫിന്നിഷ്, ഫ്രഞ്ച്, ജോര്‍ജ്യന്‍, ജര്‍മന്‍, ഗ്രീക്ക്, ഗുജറാത്തി, ഗുരുമുഖി, ഹീബ്രൂ, ഹിന്ദി, ഹങ്കേറിയന്‍, ഐസ്‌ലാന്‍ഡിക് , ഐറിഷ്, ഇറ്റാലിയന്‍, ജപ്പാനീസ്, കന്നഡ, ഖസക്, ഖമര്‍, കിര്‍ഗിസ്സ് , കൊറിയന്‍, കര്‍ഡിഷ് (F വിന്യാസം), കര്‍ഡിഷ് (Q വിന്യാസം), ലാവോ, ലാറ്റിന്‍ അമേരിക്കന്‍, ലാത്വിയന്‍, ലിത്വാനിയന്‍, മാസിഡോണിയന്‍, മലയാളം, നേപ്പാളി, വടക്കന്‍ സാമി, നോര്‍വീജിയന്‍ , പേര്‍ശ്യന്‍, Philippines, പോളിഷ്, പോര്‍ച്ചുഗീസ്, പഞ്ചാബി, റുമേനിയന്‍, റഷ്യന്‍, സെര്‍ബിയന്‍ (സിറിലിക്), സിന്ദി, സിംഹള, സ്ലോവാക്ക്, സ്ലോവേനിയന്‍, സ്പാനിഷ്, സ്വീഡിഷ്, സ്വിസ്സ് ഫ്രഞ്ച്, സ്വിസ്സ് ജര്‍മന്‍, താജിക്, തമിഴ്, തെലുങ്കു, തായി, ടിബറ്റിയന്‍, തുര്‍ക്കിഷ് (F വിന്യാസം), തുര്‍ക്കിഷ് (Q വിന്യാസം), ഉക്രേനിയന്‍, വീഗോര്‍, വിയറ്റ്നാമീസ്
Choices-mr.UTF-8: अमेरिकन इंग्लिश, अल्बनिअन, अरबीक, ऍस्टुरिअन, बांगलादेश, बेलेरशिअन, बंगाली, बेल्जिअन, बोस्नीयन, ब्राझिलिअन, ब्रिटिश इंग्लिश, Bulgarian (BDS layout), बल्गेरिअन (फोनेटिक आरखडा), बर्मीज, कॅनेडियन फ्रेंच, कॅनेडियन मल्टिलिंग्वल, कॅटालान, चायनीज, क्रोएशीअन, झेक, डॅनिश, डच, डीव्होरॅक, ड्जोन्गखा, इस्पेरान्टो, एस्टोनिअन, इथिओपिअन, फिनीश, फ्रेंच, जार्जियन, जर्मन, ग्रीक, गुजराती, गुरुमुखी, हिब्र्यु, हिंदी, हंगेरीअन, आईसलॅंडीक, आयरिश, इटालियन, जपानी, कन्नड, कजाक, ख्मेर, क०रॴग०ृॣ, कोरियन, कुर्दिश (एफ आराखडा), कुर्दिश (ओ आराखडा), लाओ, लॅटिन अमेरिकन, लॅटेव्हिअन, लिथूआनिअन, मेसेडोनिअन, मल्याळम, नेपाळी, नॉर्थ सामी, नोर्वेजिअन, पर्शियन, फिलिपिनीज, पोलिश, पोर्तुगीज, पंजाबी, रोमानिअन, रशियन, सर्बिअन, सिंधी, सिंहला, स्लोव्हाक, स्लोव्हेनिअन, स्पॅनिश, स्विडीश, स्विस फ्रेंच, स्विस जर्मन, ताजिक, तमिळ, तेलुगू, थाई, तिबेटियन, तुर्किश (एफ आराखडा), तुर्किश (ओ आराखडा), युक्रेनिअन, युघूर, विएतनामिज
Choices-nb.UTF-8: Engelsk (USA), Albansk, Arabisk, Asturisk, Bangladesh, Hviterussisk, bengali, Belgisk, Bosnisk, Brasiliansk, Engelsk (Storbritannia), Bulgarian (BDS layout), Bulgarsk (phonetic-oppsett), Burmesisk, Fransk (Canada), Kanadisk\, flerspråklig, Katalansk, Kinesisk, Kroatisk, Tsjekkisk, Dansk, Nederlandsk, Dvorak, dzongkha, Esperanto, Estisk, Etiopisk, Finsk, Fransk, Georgisk, Tysk, Gresk, gujarati, gurmukhi, Hebraisk, hindi, Ungarsk, Islandsk, Irsk, Italiensk, Japansk, kannada, kasakhisk, Khmer, kirgisisk, Koreansk, Kurdisk (F-oppsett), Kurdisk (Q-oppsett), laotisk, Latinamerikansk, Latvisk, Litauisk, Makedonsk, malayalam, nepalsk, Nord-samisk, Norsk, Persisk, Filippinsk, Polsk, Portugisisk, Punjabi, Rumensk, Russisk, Serbisk (kyrillisk), Sindhi, Singalesisk, Slovakisk, Slovensk, Spansk, Svensk, Fransk (Sveits), Tysk (Sveits), Tadsjikisk, Tamilsk, telugu, Thai, Tibetansk, Tyrkisk (F-oppsett), Tyrkisk (Q-oppsett), Ukrainsk, Uigursk, Vietnamesisk
Choices-ne.UTF-8: अमेरिकि अङ्ग्रेजी, Albanian, Arabic, Asturian, बंगलादेश, द्वारा, Bengali, बेल्जियन, Bosnian, ब्राजिली, ब्रिटिस अङ्ग्रेजी, Bulgarian (BDS layout), बुल्गेरिया (phonetic सजावट), Burmese, क्यानडा फ्रान्सेली, Canadian Multilingual, Catalan, Chinese, क्रोएसियाली, चेक, डेनिस, डच, डिभोरक, Dzongkha, Esperanto, इस्टोनियाली, Ethiopian, फिनीस, फ्रान्सेली, Georgian, जर्मन, ग्रिक, Gujarati, Gurmukhi, हिब्रु, Hindi, हङ्गेरियन, आइसल्यान्डिक, Irish, इटालियन, जापानी, Kannada, Kazakh, Khmer, Kirghiz, Korean, Kurdish (F layout), Kurdish (Q layout), Lao, ल्याटिन-अमेरिकि, ल्याटभियन, लिथुनियन, म्यासडोनियन, Malayalam, Nepali, Northern Sami, नर्वेली, Persian, Philippines, पोलिस, पोर्तुगाली, Punjabi, रोमानियन, रसियाली, सर्बियन-सिरिलिक, Sindhi, Sinhala, Slovak, Slovenian, स्पेनी, स्विडिस, स्विस-फ्रान्सेली, स्वीस जर्मनी, Tajik, Tamil, Telugu, Thai, Tibetan, टर्किस, टर्किस (Q सजावट), युक्रेनी, Uyghur, Vietnamese
Choices-nl.UTF-8: Amerikaans Engels, Albanees, Arabisch, Asturisch, Bangladesh, Wit-Russisch, Bengaals, Belgisch, Bosnisch, Braziliaans, Brits Engels, Bulgaars (BDS indeling), Bulgaars (fonetische indeling), Birmaans/Birmees, Canadees Frans, Canadees meertalig, Catalaans, Chinees, Kroatisch, Tsjechisch, Deens, Nederlands, Engels met minimale vingerbeweging (dvorak), Dzongkha, Esperanto, Estlands, Ethiopisch, Fins, Frans, Georgisch, Duits, Grieks, Gujarati, Gurmukhi, Hebreeuws, Hindi, Hongaars, IJslands, Iers, Italiaans, Japans, Kannada\, Kanarees, Kazachs, Khmer, Kirgizisch, Koreaans, Koerdisch (F-indeling), Koerdisch (Q-indeling), Lao, Latijns-Amerikaans, Lets, Litouws, Macedonisch, Malayalam, Nepalees, Noord-Samisch, Noors, Perzisch, Filipijns, Pools, Portugees, Punjabi, Roemeens, Russisch, Servisch (Cyrillisch), Sindhisch, Singalees, Slowaaks, Sloveens, Spaans, Zweeds, Zwitsers Frans, Zwitsers Duits, Tadzjieks, Tamil, Telugu, Thais, Tibetaans, Turks (F-indeling), Turks (Q-indeling), Oekraïens, Oeigoers, Vietnamees
Choices-nn.UTF-8: Engelsk (USA), Albansk, Arabisk, Asturian, Bangladesh, Kviterussisk, Bengali, Belgisk, Bosnisk, Brasiliansk, Engelsk (Storbritannia), Bulgarian (BDS layout), Bulgarsk (phonetic-oppsett), Burmese, Fransk (Canada), Kanadisk\, fleirspråkleg, Catalan, Kinesisk, Kroatisk, Tsjekkisk, Dansk, Nederlandsk, Dvorak, Dzongkha, Esperanto, Estisk, Ethiopian, Finsk, Fransk, Georgisk, Tysk, Gresk, Gujarati, gurmukhi, Hebraisk, Hindi, Ungarsk, Islandsk, Irsk, Italiensk, Japansk, Kannada, Kasakhisk, Khmer, Kirgisisk, Koreansk, Kurdisk (F-oppsett), Kurdisk (Q-oppsett), Laotisk, Latinamerikansk, Latvisk, Litauisk, Makedonsk, Malayalam, Nepali, Northern Sami, Norsk, Persisk, Philippines, Polsk, Portugisisk, Punjabi, Rumensk, Russisk, Serbisk (kyrillisk), Sindhi, Sinhala, Slovak, Slovenian, Spansk, Svensk, Fransk (Sveits), Tysk (Sveits), Tajik, Tamil, Telugu, Thai, Tibetan, Russisk, Tyrkisk (Q-oppsett), Ukrainsk, Uyghur, Vietnamesisk
Choices-no.UTF-8: Engelsk (USA), Albansk, Arabisk, Asturisk, Bangladesh, Hviterussisk, bengali, Belgisk, Bosnisk, Brasiliansk, Engelsk (Storbritannia), Bulgarian (BDS layout), Bulgarsk (phonetic-oppsett), Burmesisk, Fransk (Canada), Kanadisk\, flerspråklig, Katalansk, Kinesisk, Kroatisk, Tsjekkisk, Dansk, Nederlandsk, Dvorak, dzongkha, Esperanto, Estisk, Etiopisk, Finsk, Fransk, Georgisk, Tysk, Gresk, gujarati, gurmukhi, Hebraisk, hindi, Ungarsk, Islandsk, Irsk, Italiensk, Japansk, kannada, kasakhisk, Khmer, kirgisisk, Koreansk, Kurdisk (F-oppsett), Kurdisk (Q-oppsett), laotisk, Latinamerikansk, Latvisk, Litauisk, Makedonsk, malayalam, nepalsk, Nord-samisk, Norsk, Persisk, Filippinsk, Polsk, Portugisisk, Punjabi, Rumensk, Russisk, Serbisk (kyrillisk), Sindhi, Singalesisk, Slovakisk, Slovensk, Spansk, Svensk, Fransk (Sveits), Tysk (Sveits), Tadsjikisk, Tamilsk, telugu, Thai, Tibetansk, Tyrkisk (F-oppsett), Tyrkisk (Q-oppsett), Ukrainsk, Uigursk, Vietnamesisk
Choices-pa.UTF-8: ਅਮਰੀਕਨ ਅੰਗ੍ਰੇਜ਼ੀ, ਅਲਬਾਨੀਆਈ, ਅਰਬੀ, ਅਸੁਟਰੀਆਈ, ਬੰਗਲਾਦੇਸ਼, ਬੇਲਾਰੂਸੀਅਨ, ਬੰਗਾਲੀ, ਬੈਲਜੀਅਨ, ਬੋਸਨੀਆਈ, ਬ੍ਰਾਜ਼ੀਲੀਅਨ, ਬਰਤਾਨਵੀ ਅੰਗ੍ਰੇਜ਼ੀ, Bulgarian (BDS layout), ਬੁਲਗਾਰੀਅਨ (ਫਨੋਟਿਕ ਲੇਆਉਟ), Burmese, ਕਨੇਡੀਅਨ ਫ੍ਰੈਂਚ, ਕਨੇਡੀਅਨ ਬਹੁ-ਭਾਸ਼ਾਈ, ਕਾਟਾਲਾਨ, ਚੀਨੀ, ਕਰੋਟੀਆਈ, ਚੇਕ, ਡੈਨਿਸ਼, ਡੱਚ, ਡਵੋਰਕ, ਡਜ਼ੌਂਗਖਾ, ਇਸਪੇਰਾਂਟੋ, ਏਸਟੋਨੀਅਨ, ਇਥੀਪੀਆਈ, ਫਿੰਨਿਸ਼, ਫਰੈਂਚ, ਜਾਰਜੀਆਈ, ਜਰਮਨ, ਗਰੀਕ, ਗੁਜਰਾਤੀ, ਗੁਰਮੁਖੀ, ਹੈਬਰਿਉ, ਹਿੰਦੀ, ਹੰਗੇਰਿਅਨ, ਆਈਸਲੈਨਡਿਕ, ਆਈਰਸ਼, ਇਟਾਲੀਅਨ, ਜਾਪਾਨੀ, ਕੰਨੜ, ਕਾਜ਼ਾਖ, ਖਮੀਰ, ਕਿਰਗਿਜ਼, ਕੋਰੀਆਈ, ਕੁਰਦ (F ਲੇਆਊਟ ), ਕੁਰਦ (Q ਲੇਆਊਟ ), ਲਾਓ, ਲਾਤੀਨੀ ਅਮਰੀਕਨ, ਲਾਤੀਵੀਅਨ, ਲਿਥੁਏਨਿਅਨ, ਮੈਸੇਡੋਨੀਅਨ, ਮਲਿਆਲਮ, ਨੇਪਾਲੀ, ਉੱਤਰੀ ਸਾਮੀ, # ਜਾਰਜੀਆਈ, ਫਾਰਸੀ, Philippines, ਪੋਲਿਸ਼, ਪੁਰਤਗਾਲੀ, ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ), ਰੋਮਾਨੀਅਨ , ਰੂਸੀ, ਸਰਬੀਅਨ (Cyrillic), ਸਿੰਧੀ, ਸਿੰਹਾਲਾ, ਸਲੋਵਾਕ, ਸਲੋਵੀਨੀਆਈ, ਸਪੈਨਿਸ਼, ਸਵੀਡਿਸ਼, ਸਵਿਸ  ਫ੍ਰੈਂਚ, ਸਵਿਸ ਜਰਮਨ, ਤਾਜਿਕ, ਤਾਮਿਲ, ਤੇਲਗੂ, # ਥਾਈ, ਤਿੱਬਤੀ, ਤੁਰਕੀ (F ਲੇਆਊਟ ), ਤੁਰਕੀ (Q ਲੇਆਊਟ ), ਯੂਕਰੇਨੀਅਨ, ਉਘੁਰ, ਵੀਅਤਨਾਮੀ
Choices-pl.UTF-8: angielski w wersji amerykańskiej, Albański, Arabski, asturyjski, Bangladesz, białoruski, Bengalski, belgijski, Bośniacki, brazylijski, angielski w wersji brytyjskiej, bułgarski (układ BDS), bułgarski (układ fonetyczny), birmański, francuski w wersji kanadyjskiej, kanadyjski wielojęzykowy, kataloński, Chiński, chorwacki, czeski, duński, niderlandzki, Dvorak, Dzongka, Esperanto, estoński, etiopski, fiński, francuski, Gruziński, niemiecki, grecki, Gudźarati, Gurmukhi, hebrajski, Hindi, węgierski, islandzki, Irlandzki, włoski, japoński, Kannada, Kazaski; kazachski, khmerski, kirgiski, Koreański, Kurdyjski (układ F), Kurdyjski (układ Q), Laotański, latynoamerykański, łotewski, litewski, macedoński, Malajalam, Nepalski, północnolapoński, norweski, Perski; nowoperski; farsi, filipiński, polski, portugalski, pendżabski, rumuński, rosyjski, serbski (cyrylica), Sindhi, syngaleski, słowacki, słoweński, hiszpański, szwedzki, francuski w wersji szwajcarskiej, niemiecki w wersji szwajcarskiej, tadżycki, Tamilski, Telugu, tajski, tybetański, turecki (układ F), turecki (układ Q), ukraiński, ujgurski, Wietnamski
Choices-pt.UTF-8: Inglês Americano, Albanês, Arábico, Asturiano, Bangladesh, Bielorusso, Bengali, Belga, Bósnio, Português Brasileiro, Inglês Britânico, Búlgaro (layout BDS), Búlgaro (layout phonetic), Birmanês, Francês Canadá, Canadiano (Multilíngua), Catalão, Chinês, Croata, Checo, Dinamarquês, Holandês, Dvorak, dzonga, Esperanto, Estoniano, Etíope, Finlandês, Francês, Georgiano, Alemão, Grego, guzerate, gurmuqui, Hebraico, Hindi, Húngaro, Islandês, Irlandês, Italiano, Japonês, Canarês, Cazaque, Khmer, quirguiz, Coreano, Curdo (layout F), Curdo (layout Q), laosiano, Latino Americano, Letão, Lituano, Macedónio, Malaiala, Nepalês, Sami Setentrional, Norueguês, Persa, Filipino, Polaco, Português, Punjabi, Romeno, Russo, Sérvio (Cirílico), Sindhi, Sinhala, Eslovaco, Eslovaco, Espanhol, Sueco, Francês Suíço, Alemão Suíço, Tajik, Tamil, telugu, Tailandês, Tibetano, Turco (layout F), Turco (layout Q), Ucraniano, Uigur, Vietnamita
Choices-pt_BR.UTF-8: Inglês Americano, Albanês, Árabe, Asturiano, Bangladesh, Bielorrusso, Bengali, Belga, Bósnio, Português Brasileiro, Inglês Britânico, Búlgaro (layout BDS), Búlgaro (layout fonético), Birmanês, Francês Canadense, Multilinguagem canadense, Catalão, Chinês, Croata, Tcheco, Dinamarquês, Holandês, Dvorak, Butanês, Esperanto, Estoniano, Etíope, Finlandês, Francês, Georgiano, Alemão, Grego, Guzerate, Gurmukhi, Hebraico, Hindi, Húngaro, Islandês, Irlandês, Italiano, Japonês, Canarês, Cazaque, Khmer, Quirguiz, Coreano, Curdo (layout F), Curdo (layout Q), Laosiano, Latino Americano, Letão, Lituano, Macedônio, Malaiala, Nepali, Sami Setentrional, Norueguês, Persa, Filipino, Polonês, Português, Punjabi, Romeno, Russo, Sérvio (cirílico), Sindi, Sinhala (cingalês), Eslovaco, Esloveno, Espanhol, Sueco, Francês Suíço, Alemão Suíço, Tajique, Tâmil, Télugo, Tailandês, Tibetano, Turco (layout F), Turco (layout Q), Ucraniano, Uigur, Vietnamita
Choices-ro.UTF-8: Engleză Americană, Albaneză, Arabă, Asturiană, Bangladeș, Bielorusă, Bengaleză, Belgiană, Bosniacă, Braziliană, Engleză Britanică, Bulgarian (BDS layout), Bulgară (aranjament fonetic), Burmeză, Franceză canadiană, Canadiană multi-lingvistică, Catalană, Chineză, Croată, Cehă, Daneză, Olandeză, Dvorak, Dzongkhană, Esperanto, Estonă, Etiopian, Finlandeză, Franceză, Georgiană, Germană, Greacă, Gujaratineză, Gurmukhi, Ebraică, Hindusă, Ungară, Islandeză, Irlandeză, Italiană, Japoneză, Kannada, Cazacă, Khmer, Kirghiză, Coreeană, Curdă (aranjament F), Curdă (aranjament Q), Loațiană, Latino-americană, Letonă, Lituaniană, Macedoniană, Malayalam, Nepaleză, Sami de nord, Norvegiană, Persană, Filipineză, Poloneză, Portugheză, Punjabi, Română, Rusă, Sârbă (chirilică), Sindhi, Sinhala, Slovacă, Slovenă, Spaniolă, Suedeză, Franceză elvețiană, Germană elvețiană, Tajik, Tamilă, Teluguă, Tai, Tibetană, Turcă (aranjament F), Turcă (aranjament Q), Ucrainiană, Uyghură, Vietnameză
Choices-ru.UTF-8: Английская американская, Албанская, Арабская, Астурианская, Бангладеш, Белорусская, Бенгальский, Бельгийская, Боснийская, Бразильская, Английская великобританская, Болгарская (раскладка BDS), Болгарская (раскладка phonetic), Бирманская, Французская канадская, Канадская многоязычная, Каталанская, Китайская, Хорватская, Чешская, Датская, Голландская, Дворак, Дзонг-кэ, Эсперанто, Эстонская, Эфиопская, Финская, Французская, Грузинская, Немецкая, Греческая, Гуджарати, Гурмукхи, Иврит, Хинди, Венгерская, Исландская, Ирландская, Итальянская, Японская, Каннада, Казахская, Кхмерская, Киргизская, Корейская, Курдская (раскладка F), Курдская (раскладка Q), Лаосская, Латиноамериканская, Латышская, Литовская, Македонская, Малаялам, Непальская, Северо-саамская, Норвежская, Персидская, Филиппинская, Польская, Португальская, Панджаби, Румынская, Русская, Сербская (Кириллица), Синдхи, Синхала, Словацкая, Словенская, Испанская, Шведская, Французская общая, Немецкая (Швейцария), Таджикская, Тамильская, Телугу, Тайская, Тибетская, Турецкая (раскладка F), Турецкая (раскладка Q), Украинская, Уйгурская, Вьетнамская
Choices-se.UTF-8: American English, Albanian, Arabic, Asturian, Bangladesh, Belarusian, Bengali, Belgian, Bosnian, Brazilian, British English, Bulgarian (BDS layout), Bulgarian (phonetic layout), Burmese, Canadian French, Canadian Multilingual, Catalan, Chinese, Croatian, Czech, Danish, Dutch, Dvorak, Dzongkha, Esperanto, Estonian, Ethiopian, Finnish, French, Georgian, German, Greek, Gujarati, Gurmukhi, Hebrew, Hindi, Hungarian, Icelandic, Irish, Italian, Japanese, Kannada, Kazakh, Khmer, Kirghiz, Korean, Kurdish (F layout), Kurdish (Q layout), Lao, Latin American, Latvian, Lithuanian, Macedonian, Malayalam, Nepali, Northern Sami, Norwegian, Persian, Philippines, Polish, Portuguese, Punjabi, Romanian, Russian, Serbian (Cyrillic), Sindhi, Sinhala, Slovak, Slovenian, Spanish, Swedish, Swiss French, Swiss German, Tajik, Tamil, Telugu, Thai, Tibetan, Turkish (F layout), Turkish (Q layout), Ukrainian, Uyghur, Vietnamese
Choices-si.UTF-8: ඇමරිකානු ඉංග්‍රීසි, ඇල්බේනියානු, අරාබි, ඇස්ටූරියානු, බංලාදේශ, බෙලෝරුසියානු, බෙන්ගාලි, බෙල්ජියානු, බොස්නියානු, බ්‍රසීලියානු, බ්‍රිතාන්‍ය ඉංග්‍රීසි, Bulgarian (BDS layout), බල්ගේරියානු (ශබ්දානුකූල), Burmese, කැනේඩියානු ප්‍රංශ, කැනේඩියානු බහුබාශා, කැටලානු, චීන, ක්‍රෝශියානු, චෙච්, ඩෙන්මාක, ඕලන්ද, Dvorak, සොංකා, එස්පරෙන්ටෝ, එස්තෝනියානු, ඉතියෝපියානු, ෆින්, ප්‍රංශ, ජෝජියානු, ජර්මානු, ග්‍රීක, ගුජරාටි, ගුර්මුඛි, හීබෲ, හින්දි, හංගේරියානු, අයිස්ලන්ත, අයිරිශ්, ඉතාලි, ජපාන, කන්නඩ, කසකස්, ක්හමෙර්, කිරිගිස්, කොරියානු, කුර්දි (F සැකසුම), කුර්දි (Q සැකැස්ම), ලාඕ, ලතින් ඇමරිකානු, ලැට්වියානු, ලිතුවේනියානු, මැසිඩෝනියානු, මලයාසියානු, නේපාල, උතුරු සාමි, නෝවීජියානු, පර්සියානු, Philippines, පෝලන්ත, පෘතුගීසි, පන්ජාබ, රොමේනියානු, රුසියානු, සර්බියානු (සිරිලික්), සින්දි, සිංහල, ස්ලෝවැක්, ස්ලෝවීනියානු, ස්පාඥ්ඤ, ස්විස්, ස්විස් ප්‍රංශ, ස්විස් ජර්මානු, Tajik, දෙමළ, තෙළඟු, තායි, Tibetan, තුර්කි (F සැකැස්ම), තුර්කි (Q සැකැස්ම), යුක්රේනියානු, යූගුර්, වියෙට්නාම
Choices-sk.UTF-8: americká angličtina, albánska, arabská, astúrska, bangladéšska, bieloruská, bengálska, belgická, bosniacka, brazílska, britská angličtina, bulharská (rozloženie BDS), bulharská (fonetické rozloženie), barmská, kanadská francúzština, kanadská viacjazyčná, katalánska, čínska, chorvátska, česká, dánska, holandská, dvorak, dzongkä, esperanto, estónska, etiópska, fínska, francúzska, gruzínska, nemecká, grécka, gudžarátska, gurmukhí, hebrejská, hindská, maďarská, islandská, írska, talianska, japonská, kannadská, kazašská, khmérska, kirgizská, kórejská, kurdská (rozloženie F), kurdská (rozloženie Q), laoská, latinsko-americká, lotyšská, litovská, macedónska, malajálamska, nepálska, severosaamska, nórska, perzská, filipínska, poľská, portugalská, pandžábska, rumunská, ruská, srbská (cyrilika), sindhská, sinhalská, slovenská, slovinská, španielska, švédska, švajčiarska francúzština, švajčiarska nemčina, tadžická, tamilská, telugská, thajská, tibetská, turecká (rozloženie F), turecká (rozloženie Q), ukrajinská, ujgurská, vietnamská
Choices-sl.UTF-8: Angleška (ZDA), Albanščina, Arabščina, Asturijska, Bangladeš, Beloruska, Bengalščina, Belgijska, Bošnjaščina, Brazilska, Angleška (Velika Britanija), Bulgarian (BDS layout), Bolgarska (phonetic), Burmanska, Kanadska (Francoska), Kanadska (večjezikovna), Katalanska, Kitajščina, Hrvaška, Češka, Danska, Nizozemska, Dvorak, Dzonka, Esperanto, Estonska, Etijopski, Finska, Francoska, Gruzinščina, Nemška, Grška, Gudžaratščina, Gurmuki, Hebrejska, Hindijščina, Madžarska, Islandska, Irščina, Italijanska, Japonska, Kanareščina, Kazaščina, Khmer, kirgiščina, Korejščina, Kurdščina (F ureditev), Kurdščina (Q ureditev), Laoščina, Latinsko ameriška, Latvijska, Litovska, Makedonska, Malajalščina, Nepalščina, Severni Sami, Norveška, Perzijščina, Filipinska, Poljska, Portugalska, Pandžab, Romunska, Ruska, Srbska (cirilična), Sindhi, Sinhala, Slovaška, Slovenska, Španska, Švedska, Švicarska (Francoska), Švicarska (Nemška), Tadžiščina, Tamilščina, Teluščina, Tajska, Tibetanščina, Turška (F ureditev), Turška (Q ureditev), Ukrajinska, Ujgur, Vietnamščina
Choices-sq.UTF-8: Angleze (SHBA), Albanian, Arabe, Asturian, Bangladesh, Bjelloruse, Bengali, Belge, Bosnian, Braziliane, Angleze (Britania e Madhe), Bulgarian (BDS layout), Bullgare (planimetri phonetic), Burmese, Franceze (Kanada), Kanadisht Multigjuhëshe, Catalan, Chinese, Kroate, Çeke, Daneze, Hollandeze, Dvorak, Dzongkha, Esperanto, Estone, Ethiopian, Finlandeze, Franceze, Gjeorgjiane, Gjermane, Greke, Gujarati, Gurmukhi, Hebraike, Hindi, Hungareze, Islandeze, Irish, Italiane, Japoneze, Kannada, Kazakh, Khmer, Kirghiz, Korean, Kurdish (F layout), Kurdish (Q layout), Lao, Amerikano-Latine, Letone, Lituane, Maqedonase, Malayalam, Nepali, Northern Sami, Norvegjeze, Persian, Philippines, Polake, Portugeze, Punjabi, Rumune, Ruse, Serbe (Cirilike), Sindhi, Sinhala, Slovak, Slovenian, Spanjolle, Suedeze, Franceze (Zvicra), Gjermane (Zvicra), Tajik, Tamil, Telugu, Thai, Tibetan, Turke (planimetri F), Turke (planimetri Q), Ukraine, Uyghur, Vietnamisht
Choices-sr.UTF-8: амерички енглески, албански, арапски, астуриjски, бангладешки, белоруски, бенгалски, белгијски, бошњачки, бразилски, британски енглески, бугарски (BSD распоред), бугарски (phonetic распоред), бурмански, канадски француски, канадски вишејезични, каталонски, кинески, хрватски, чешки, дански, холандски, Dvorak, Дзонгка, Есперанто, естонски, етиопски, фински, француски, грузијски, немачки, грчки, гујаратски, гурмукски, хебрејски, Хинду, мађарски, исландски, ирски, италијански, јапански, Канада, казахстански, кмерски, киргиски, корејски, курдски (F распоред), курдски (Q распоред), лао, латиноамерички, летонски, литвански, македонски, малајамски, непалски, северносамски, норвежански, персијски, филипински, пољски, португалски, панџабски, румунски, руски, српски (ћирилица), синди, синалски, словачки, словеначки, шпански, шведски, швајцарски француски, швајцарски немачки, таџикистански, тамилски, телугу, таи, тибетански, турски (F распоред), турски (Q распоред), украјински, ујгурски, вијетнамски
Choices-sr@latin.UTF-8: American English, Albanian, Arabic, Asturian, Bangladesh, Belarusian, Bengali, Belgian, Bosnian, Brazilian, British English, Bulgarian (BDS layout), Bulgarian (phonetic layout), Burmese, Canadian French, Canadian Multilingual, Catalan, Chinese, Croatian, Czech, Danish, Dutch, Dvorak, Dzongkha, Esperanto, Estonian, Ethiopian, Finnish, French, Georgian, German, Greek, Gujarati, Gurmukhi, Hebrew, Hindi, Hungarian, Icelandic, Irish, Italian, Japanese, Kannada, Kazakh, Khmer, Kirghiz, Korean, Kurdish (F layout), Kurdish (Q layout), Lao, Latin American, Latvian, Lithuanian, Macedonian, Malayalam, Nepali, Northern Sami, Norwegian, Persian, Philippines, Polish, Portuguese, Punjabi, Romanian, Russian, Serbian (Cyrillic), Sindhi, Sinhala, Slovak, Slovenian, Spanish, Swedish, Swiss French, Swiss German, Tajik, Tamil, Telugu, Thai, Tibetan, Turkish (F layout), Turkish (Q layout), Ukrainian, Uyghur, Vietnamese
Choices-sv.UTF-8: Engelskamerikansk, Albanska, Arabiska, Asturiska, Bangladesh, Vitrysk, Bengali, Belgisk (latin1), Bosniska, Brasiliansk, Engelskbrittisk, Bulgarian (BDS layout), Bulgarisk (fonetisk), Burmesiska, Franskkanadensisk, Kanadensisk\, flerspråkigt arrangemang, Katalanska, Kinesiska, Kroatisk, Tjeckisk, Dansk, Holländsk, Dvorak, Bhutanesiska (Dzongkha), Esperanto, Estländsk, Etiopisk, Finsk, Fransk, Georgiska, Tysk, Grekisk, Gujarati, gurmukhi, Hebreisk, Hindi, Ungersk, Isländsk, Iriska, Italiensk, Japansk, Kannada, Kazakiska, Khmer, Kirgisiska, Koreanska, Kurdiska (F-arrangemang), Kurdiska (Q-arrangemang), Laotiska, Latinamerikansk, Lettisk, Litauisk, Makedonsk, Malayalam, Nepali, Nordsamiska, Norska, Persiska, Filippinerna, Polsk, Portugisisk, Punjabi, Rumänsk, Rysk, Serbisk (Kyrillisk), Sindhi, Singalesiska, Slovakiska, Slovenska, Spansk, Svensk, Franskschweizisk, Tyskschweizisk, Tadzjikiska, Tamil, Telugo, Thai, Tibetanska, Turkisk (F-arrangemang), Turkisk (Q-arrangemang), Ukrainsk, Uiguriska, Vietnamesiska
Choices-ta.UTF-8: அமெரிக்க ஆங்கிலம் , அல்பேனியன், அராபிக், அஸ்டுரியன், வங்காளதேசம், பெலாருசியன் , பெங்காலி, பெல்ஜியன், போஸ்னியன், ப்ரேசிலியன், ப்ரிட்டிஷ் ஆங்கிலம், Bulgarian (BDS layout), பல்கேரியன்  (phonetic அமைப்பு), பர்மீஸ், கனடியன் ப்ரென்ச், கனடியன்-பலமொழி, கடலான், சைனீஸ், க்ரோசியன் , செக் , டானிஷ், டச்சு, ட்வோரக், ட்சொங்க்ஹா, எஸ்பெரான்டொ, எஸ்டோனியன், எத்தியோபிய, பின்னிஷ், ப்ரென்ச், ஜியார்ஜியன், ஜெர்மன் , கிரேக்க, குஜராத்தி, குர்முகி, ஹீப்ரூ, ஹிந்தி, ஹங்கேரியன், ஐஸ்லான்டிக், ஐரிஷ், இத்தாலியன், ஜப்பானிய, கன்னடம், கசாக்ஷ், கெமர், கிர்கிஷ், கொரியன், குர்திஷ் (F வடிவமைப்பு), குர்திஷ் (Q வடிவமைப்பு), லாவோ, லத்தீன் அமெரிக்கன், லாட்வியன், லிதுவேனியன், மெசிடோனியன், மலையாளம், நேபாலி, வட சமி, நார்வேஜியன், பெர்சியன், பிலிபைன்ஸ், போலிஷ், போர்துக்கீஸ், பஞ்சாபி, ரோமானியன், ரஷ்யன், செர்பியன் (சிரிலிக்), சிந்தி, சிங்கள, ஸ்லோவாக், ஸ்லோவீனியன், ஸ்பானிஷ், ஸ்வீடிஷ், ஸ்விஸ் ப்ரென்ச், ஸ்விஸ் ஜெர்மன் , தாஜிக் , தமிழ், தெலுங்கு, தாய் , திபேத்தியன் , துருக்கிய (F வடிவமைப்பு), துருக்கிய (Q வடிவமைப்பு), உக்கிரேனியன், உய்குர், வியட்னாம்
Choices-te.UTF-8: అమెరికా ఇంగ్లీషు, అల్బేనియన్, అరబిక్, అస్తురియన్, బాంగ్లాదేశ్, బెలారసియన్, బెంగాలి, బెల్జియన్, బొస్నియన్, బ్రెజిలియన్, బ్రిటీష్ ఇంగ్లీష్, Bulgarian (BDS layout), బల్గేరియన్ (phonetic అమరిక), Burmese, కెనడియన్ ఫ్రెంచ్, బహుబాషా కెనడియన్, కాటలాన్, చైనీస్, క్రొయేషియన్, చెక్, డానిష్, డచ్, డ్వొరాక్, ఝొంఖా, ఎస్పెరాంటొ, ఎస్టోనియన్, ఇథియోపియన్, ఫిన్నిష్, ఫ్రెంచ్, జార్జియన్, జర్మన్, గ్రీకు, గుజరాతి, గుర్ముఖి, హీబ్రూ, హింది, హంగేరియన్, ఐస్‌లాండిక్, ఐరిష్, ఇటాలియన్, జపనీస్, కన్నడ, కజఖ్, ఖ్మేర్, కిర్ఘిజ్, కొరియన్, కుర్దిష్ (F అమరిక), కుర్దిష్ (Q అమరిక), లౌ, లాటిన్ అమెరికన్, లాత్వియన్, లిథువేనియన్, మాసిడోనియన్, మలయాళం, నేపాలి, ఉత్తర శామి, నార్వేజియన్, పర్షియన్, Philippines, పోలిష్, పోర్చుగీస్, పంజాబీ, రొమేనియన్, రష్యన్, సెర్బియన్ (సిరిల్లిక్), సింధీ, సింహాళ, స్లొవేకియన్, స్లొవేనియన్, స్పానిష్, స్వీడిష్, స్విస్ ఫ్రెంచ్, స్విస్ జర్మన్, Tajik, తమిళం, తెలుగు, థాయ్, Tibetan, టర్కిష్ (F అమరిక), టర్కిష్ (Q అమరిక), ఉక్రేనియన్, యుఘుర్, వియత్నాంసీ
Choices-tg.UTF-8: Англисии амрикоӣ, Албанӣ, Арабӣ, Астурӣ, Бангладешӣ, Белорусӣ, Банголӣ, Белгиягӣ, Босниягӣ, Бразилиягӣ, Англисии британӣ, Bulgarian (BDS layout), Булғорӣ (тарҳбандии фонетикӣ), Burmese, Франсузии канадӣ, Бисёрзабонаи канадӣ, Каталонӣ, Хитоӣ, Хорватӣ, Чехӣ, Даниягӣ, Голландӣ, Дровакӣ, Дзонгха, Эсперанто, Эстонӣ, Эфиопӣ, Финнӣ, Франсузӣ, Гурҷӣ, Олмонӣ, Юнонӣ, Гуҷаротӣ, Гурмухӣ, Ибрӣ, Ҳиндӣ, Венгерӣ, Исландӣ, Ирландӣ, Италиявӣ, Ҷопонӣ, Каннада, Қазоқӣ, Кхмерӣ, Кирғизӣ, Кореягӣ, Курдӣ (Тарҳбандии F), Курдӣ (Тарҳбандии Q), Лао, Америкаи Лотинӣ, Латишӣ, Литвиягӣ, Мақдунӣ, Малаялам, Непалӣ, Самии Шимолӣ, Норвегӣ, Форсӣ, Philippines, Полякӣ, Португалӣ, Панҷобӣ, Руминӣ, Русӣ, Сербӣ (Кириллӣ), Синдӣ, Синҳалӣ, Словакӣ, Словенӣ, Испанӣ, Шведӣ, Франсузии шведӣ, Олмонии шведӣ, Тоҷикӣ, Тамилӣ, Телугу, Тайӣ, Тибетӣ, Туркӣ (Тарҳбандии F), Туркӣ (Тарҳбандии Q), Украинӣ, Ӯйғурӣ, Ветнамӣ
Choices-th.UTF-8: อังกฤษอเมริกัน, แอลเบเนีย, อาหรับ, อัสตูเรียส, บังกลาเทศ, เบลารุส, เบ็งกาลี, เบลเยียม, บอสเนีย, บราซิล, อังกฤษบริเตน, บัลแกเรีย (ผัง BDS), บัลแกเรีย (ผัง phonetic), พม่า, ฝรั่งเศสแคนาดา, แคนาดา (ประสมภาษา), คาตะลาน, จีน, โครเอเชีย, เช็ก, เดนมาร์ก, ดัตช์, Dvorak, ภูฏาน, เอสเปอรันโต, เอสโตเนีย, เอธิโอเปีย, ฟินแลนด์, ฝรั่งเศส, จอร์เจีย, เยอรมัน, กรีก, คุชราตี, คุรุมุขี, ฮีบรู, ฮินดี, ฮังการี, ไอซ์แลนด์, ไอริช, อิตาลี, ญี่ปุ่น, กัณณาท, คาซัคสถาน, เขมร, คีร์กีซสถาน, เกาหลี, เคิร์ด (ผัง F), เคิร์ด (ผัง Q), ลาว, ละตินอเมริกัน, ลัตเวีย, ลิทัวเนีย, มาซิโดเนีย, มลยาฬัม, เนปาล, ซามิเหนือ, นอร์เวย์, เปอร์เซีย, ฟิลิปปินส์, โปแลนด์, โปรตุเกส, ปัญจาบี, โรมาเนีย, รัสเซีย, เซอร์เบีย (ซีริลลิก), สินธี, สิงหล, สโลวัก, สโลวีเนีย, สเปน, สวีเดน, ฝรั่งเศสสวิส, เยอรมันสวิส, ทาจิกิสถาน, ทมิฬ, เตลุคู, ไทย, ทิเบต, ตุรกี (ผัง F), ตุรกี (ผัง Q), ยูเครน, อุยกูร์, เวียดนาม
Choices-tl.UTF-8: Ingles ng Amerikano, Albanian, Arabic, Asturian, Bangladesh, Belarusian, Bengali, Belgian, Bosnian, Brazilian, Ingles ng Britanya, Bulgarian (BDS layout), Bulgarian (phonetic layout), Burmese, Canadian French, Canadian na multilingual, Catalan, Chinese, Croatian, Czech, Danish, Dutch, Dvorak, Dzongkha, Esperanto, Estonian, Ethiopian, Finnish, French, Georgian, Aleman, Griyego, Gujarati, Gurmukhi, Hebreo, Hindi, Hungarian, Icelandic, Irish, Italyano, Hapones, Kannada, Kazakh, Khmer, Kirghiz, Korean, Kurdish (F layout), Kurdish (Q layout), Lao, Latin American, Latvian, Lithuanian, Macedonian, Malayalam, Nepali, Northern Sami, Norwegian, Persian, Philippines, Polish, Portuges, Punjabi, Romanian, Ruso, Serbian (Cyrillic), Sindhi, Sinhala, Slovak, Slovenian, Espanyol, Swedish, Swiss French, Swiss German, Tajik, Tamil, Telugu, Thai, Tibetan, Turkish (F layout), Turkish (Q layout), Ukrainian, Uyghur, Vietnamese
Choices-tr.UTF-8: Amerikan İngilizcesi, Arnavutça, Arapça, Asturyasça, Bangladeş, Beyaz Rusça, Bengalce, Belçika dili, Boşnakça, Brezilya dili, Britanya İngilizcesi, Bulgarca (BDS düzeni), Bulgarca (fonetik düzeni), Burmaca, Kanada Fransızcası, Kanada Çokdilli, Katalanca, Çince, Hırvatça, Çekçe, Danimarka dili, Flâmanca, Dvorak, Dzongkha (Butan), Esperanto, Estonya dili, Etiyopya, Fince, Fransızca, Gürcüce, Almanca, Yunanca, Gujarati (Hindistan), Gurmukhi, İbranice, Hindu, Macarca, İzlanda dili, İrlandaca, İtalyanca, Japonca, Kannada, Kazak Dili, Kmer dili, Kırgızca, Korece, Kürtçe (F düzeni), Kürtçe (Q düzeni), Laos Dili, Latin Amerikan, Litvanya dili, Letonya dili, Makedonca, Malayalam, Nepal, Kuzey Sami, Norveççe, Persce, Filipinler, Lehçe, Portekizce, Punjabi, Romanca, Rusça, Sırpça (Kiril alfabesi), Sintçe, Sinhala, Slovakça, Slovence, İspanyolca, İsveççe, İsviçre Fransızcası, İsviçre Almancası, Tacik, Tamil, Telugu, Tayca, Tibet, Türkçe (F düzeni), Türkçe (Q düzeni), Ukrayna dili, Uygurca, Vietnamca
Choices-ug.UTF-8: ئامېرىكا ئىنگلىزچە, ئالبانچە, ئەرەبچە, ئاستۇرىيەچە, باڭلادىش, بېلارۇسچە, بېنگالچە, بىلگىيەچە, بوسنىيەچە, بىرازىلىيەچە, ئەنگلىيە ئىنگلىزچە, Bulgarian (BDS layout), بۇلغارچە (فونېتىكىلىق جايلاشتۇرۇش), Burmese, كانادا فىرانسۇزچە, كانادا كۆپ تىل, كاتالانچە, خەنزۇچە, خورۋاتچە, چېخچە, دانىشچە, گوللاندىيەچە, Dvorak, بۇتانچە, ئېسپېرانتو (دۇنيا تىلى), ئېستونچە, ئېفىيوپىيەچە, فىنچە, فىرانسۇزچە, گىرۇزىنچە, گېرمانچە, گىرېكچە, گۇجاراتچە, گۇرمۇكىچە, ئىبرانىچە, ھىندىچە, ماجارچە, ئىسلاندچە, ئىرېلاندچە, ئىتاليانچە, ياپونچە, كانناداچە, قازاقچە, كېخمېرچە, قىرغىزچە, كورېيەچە, كۇردچە(F جايلاشتۇرۇش), كۇردچە(Q جايلاشتۇرۇش), لائوسچە, لاتىن ئامېرىكا, لاتۋىيەچە, لىتۋاچە, ماكېدونچە, مالايالامچە, نېپالچە, شىمالىي سامىچە, نورۋېگچە, پارىسچە, Philippines, پولەكچە, پورتۇگالچە, پەنجابچە, رۇمىنىيەچە, رۇسچە, سېربچە (سلاۋىيان), سىندىچە, سىنگالچە, سلوۋاكچە, سلوۋىنچە, ئىسپانچە, شۋېدچە, شىۋېتسىيە فىرانسۇزچە, شىۋېتسىيە  گېرمانچە, تاجىكچە, تامىلچە, تېلۇگۇچە, تايلاندچە, تىبەتچە, تۈركچە (F جايلاشتۇرۇش), تۈركچە (Q جايلاشتۇرۇش), ئۇكرائىنچە, ئۇيغۇرچە, ۋىيېتنامچە
Choices-uk.UTF-8: Американська англійська, Албанська, Арабська, Астурійська, Бангладеш, Білоруська, Бенгальська, Бельгійська, Боснійська, Бразильська, Британська англійська, Болгарська (розкладка BDS), Болгарська (розкладка phonetic), Бурмезька, Канадська французька, Канадська багатомовна, Каталонська, Китайська, Хорватська, Чеська, Датська, Нідерландська, Дворак, Дзонг-ке, Есперанто, Естонська, Ефіопська, Фінська, Французька, Грузинська, Німецька, Грецька, Гуджараті, Гурмукі, Ізраїльська, Хінді, Угорська, Ісландська, Ірландська, Італійська, Японська, Каннада, Казахська, Кхмерська, Киргизька, Корейська, Курдська (розкладка F), Курдська (розкладка Q), Лаоська, Латиноамериканська, Латвійська, Литовська, Македонська, Малаялам, Непальська, Північносаамська, Норвезька, Перська, Філіппінська, Польська, Португальська, Пенджабська, Румунська, Російська, Сербська (кирилична), Сіндхі, Сингальська, Словацька, Словенська, Іспанська, Шведська, Швейцарська французька, Швейцарська німецька, Таджицька, Тамільська, Телугу, Тайська, Тибетська, Турецька (розкладка F), Турецька (розкладка Q), Українська, Уйгурська, В'єтнамська
Choices-vi.UTF-8: Anh Mỹ, Tiếng An-ba-ni, Tiếng A Rập, Asturian, Bang-la-đesợ, Be-la-ru-xợ, Tiếng Băng Gan, Bỉ, Tiếng Bô-xni-a, Bra-xin, Anh Quốc Anh, Bulgarian (BDS layout), Bảo Gia Lơi (bố trí phonetic), Miến Điện, Pháp Ca-na-đa, Ca-na-đa đa ngôn ngữ, Catalan, Tiếng Trung Quốc, Cợ-rô-a-ti-a, Séc, Dan Mạch, Hoà Lan, Dvorak, Tiếng Đ-xong-kha, Tiếng E-x-pê-ran-tô, E-x-tô-ni-a, Ê-ti-ô-pi, Phần Lan, Pháp, Tiếng Gi-oa-gi-a, Đức, Hy Lạp, Tiếng Gu-gia-ra-ti, Gổ-mu-khi, Do Thái, Tiếng Hin-đi, Hung-ga-ri, Băng Đảo, Tiếng Ái Nhĩ Lan, Ý, Nhật, Tiếng Kan-na-đa, Tiếng Ca-xakh, Khơ-me, Tiếng Kit-ki-dơ, Tiếng Hàn, Tiếng Kurd (bố trí F), Tiếng Kurd (bố trí Q), Tiếng Lào, Châu Mỹ Latinh, Lát-vi-a, Li-tu-a-ni, Ma-xê-đô-ni, Tiếng Ma-lay-am, Tiếng Nê-pan, Bắc Sami, Na Uy, Tiếng Ba Tư, Phi-líp-pin, Ba Lan, Bồ Đào Nha, Pun-gia-bi, Rô-ma-ni, Nga, Séc-bi (kir-in), Sindhi, Sinhala, Xlô-vác, Xlô-ve-nia, Tây Ban Nha, Thuỵ-điển, Pháp Thuỵ Sĩ, Đức Thuỵ Sĩ, Tajik, Tiếng Ta-min, Tiếng Te-lu-gu, Thái, Tiếng Ti-bê, Thổ Nhĩ Kỳ (bố trí F), Thổ Nhĩ Kỳ (bố trí Q), U-cợ-rainh, Uyghur, Tiếng Việt
Choices-zh_CN.UTF-8: 美国英语, 阿尔巴尼亚语, 阿拉伯语, 阿斯图利亚斯语, 孟加拉语, 白俄罗斯语, 孟加拉语, 比利时语-拉丁1, 波斯尼亚语, 巴西, 英国英语, Bulgarian (BDS layout), 保加利亚语 (phonetic 布局), Burmese, 加拿大法语, 加拿大-多語言, 加泰罗尼亚语, 汉语, 克罗地亚语, 捷克语, 丹麦语, 荷兰语, 多冉柯键盘(Dvorak), 不丹语, 世界语, 爱沙尼亚语, 埃塞俄比亚语, 芬兰语, 法语, 格鲁吉亚语, 德语, 希腊语, 古吉拉特语, 果鲁穆奇语, 希伯来语, 印地语, 匈牙利语, 冰岛语, 爱尔兰语, 意大利语, 日语, 卡纳达语, 哈萨克语, 高棉语, 吉尔吉斯语, 朝鲜语, 库尔德语(F 布局), 库尔德语(Q 布局), 老挝语, 拉丁美洲语, 拉脱维亚语, 立陶宛语, 马其顿语, 马拉雅拉姆语, 尼泊尔语, 北萨马语, 挪威语, 波斯语, Philippines, 波兰语, 葡萄牙语, 旁遮普语, 罗马尼亚语, 俄语, 塞尔维亚语-西里尔字母, 辛达语, 僧伽罗语, 斯洛伐克语, 斯洛文尼亚语, 西班牙语, 瑞典语, 瑞士法语, 瑞士德语, 塔吉克语, 泰米尔语, 泰卢固语, 泰语, 藏语, 土耳其语(F 布局), 土耳其语(Q 布局), 乌克兰语, 维吾尔语, 越南语
Choices-zh_TW.UTF-8: 美語, 阿爾巴尼亞語, 阿拉伯語, 阿斯圖里亞斯語, 孟加拉, 白俄羅斯語, 孟加拉語, 比利時語, 波士尼亞語, 巴西語, 英語, Bulgarian (BDS layout), 保加利亞語 (拼音排列), Burmese, 加拿大法語, 加拿大多語系, 加泰隆尼亞語, 漢語, 克羅埃西亞語, 捷克語, 丹麥語, 荷蘭語, Dvorak 式, 宗卡語 (不丹), 世界語, 愛沙尼亞語, 衣索比亞語, 芬蘭語, 法語, 喬治亞語, 德語, 希臘語, 古吉拉特語, 果魯穆其文, 希伯來語, 印地語 (北印度), 匈牙利語, 冰島語, 愛爾蘭語, 義大利語, 日語, 卡納達語 (西南印度), 哈薩克語, 高棉, 吉爾吉斯語, 韓語, 庫德語 (F 佈局), 庫德語 (Q 佈局), 老撾語, 拉丁美洲語, 拉脫維亞語 拉丁(4), 立陶宛語, 馬其頓語, 馬來亞拉姆語, 尼泊爾語, 北方薩米語, 挪威語, 波斯語, Philippines, 波蘭語, 葡萄牙語, 旁遮普語, 羅馬尼亞語, 俄羅斯語, 塞爾維亞語 (斯拉夫), 信德語, 僧伽羅語, 斯洛伐克語, 斯洛維尼亞語, 西班牙語, 瑞典語, 瑞士法語, 瑞士德語, 塔吉克語, 坦米爾語, 特拉古語, 泰語, 藏語, 土耳其語 (F 佈局), 土耳其語 (Q 佈局), 烏克蘭語, 維吾爾語, 越南語
Description: Keymap to use:
Description-am.UTF-8: ጥቅም ላይ የሚውልው የፊደል ገበታ፦
Description-ar.UTF-8: خارطة المفاتيح التي ستستخدم:
Description-ast.UTF-8: Keymap a usar:
Description-be.UTF-8: Ужываць кодавы набор:
Description-bg.UTF-8: Клавишна подредба за ползване:
Description-bn.UTF-8: যে কি-ম্যাপ ব্যবহার করা হবে:
Description-bo.UTF-8: སྤྱོད་དགོས་པའི་མཐེབ་གཞོང་སྒྲིག་བཀོད：
Description-bs.UTF-8: Raspored tipki za upotrebu:
Description-ca.UTF-8: Mapa de teclat a emprar:
Description-cs.UTF-8: Klávesová mapa:
Description-cy.UTF-8: Map bysell i'w ddefnyddio:
Description-da.UTF-8: Tastaturudlæg der skal bruges:
Description-de.UTF-8: Wählen Sie das Layout der Tastatur aus:
Description-dz.UTF-8: ལག་ལེན་འཐབ་ནིའི་དོན་ལུ་ས་ཁྲ་གཙོ་བོ :
Description-el.UTF-8: Απεικόνιση πληκτρολογίου για χρήση:
Description-eo.UTF-8: Uzota klavmapo :
Description-es.UTF-8: Mapa de teclado a usar:
Description-et.UTF-8: Kasutatav klahvide asetus:
Description-eu.UTF-8: Erabiliko den teklatu-mapa:
Description-fa.UTF-8: ﻦﻘﺸﻫ ﻚﻠﻳﺪﻫﺍ
Description-fi.UTF-8: Käytettävä näppäinkartta:
Description-fr.UTF-8: Disposition de clavier à utiliser :
Description-ga.UTF-8: Eochairmhapáil le húsáid:
Description-gl.UTF-8: Esquema de teclado a empregar:
Description-gu.UTF-8: ઉપયોગ કરવાનો કીમેપ:
Description-he.UTF-8: מפת תווים לשימוש:
Description-hi.UTF-8: कुंजीपट खाका जिसे इस्तेमाल करना है:
Description-hr.UTF-8: Tipkovnička mapa:
Description-hu.UTF-8: Használni kívánt billentyűkiosztás:
Description-id.UTF-8: Peta tombol yang dipakai:
Description-is.UTF-8: Lyklaborðsvörpun sem á að nota:
Description-it.UTF-8: Mappa della tastiera da usare:
Description-ja.UTF-8: 利用するキーマップ:
Description-ka.UTF-8: სასურველი განლაგება:
Description-kk.UTF-8: Қолданылатын пернетақта жаймасы:
Description-km.UTF-8: ផែនទី​គ្រាប់ចុច​ត្រូវ​ប្រើ ៖
Description-kn.UTF-8: ಉಪಯೇಗಿಸುವ ಕೀಲಿ ಗಾತ್ರ::
Description-ko.UTF-8: 사용할 키맵:
Description-ku.UTF-8: Plana bişkojan a dê were bikaranîn:
Description-lo.UTF-8: ຜັງແປ້ນພິມທີ່ໃຊ້:
Description-lt.UTF-8: Naudotinas klavišų išdėstymas:
Description-lv.UTF-8: Izklājums:
Description-mk.UTF-8: Распоред на тастатура кој ќе се користи:
Description-ml.UTF-8: ഉപയോഗിയ്ക്കേണ്ട കീമാപ്:
Description-mr.UTF-8: वापरायचा कीमॅप:
Description-nb.UTF-8: Tasteoppsett som skal brukes:
Description-ne.UTF-8: प्रयोग गर्नका लागि कुञ्जी मानचित्र:
Description-nl.UTF-8: Te gebruiken toetsenbordindeling:
Description-nn.UTF-8: Tasteoppsett som skal brukast:
Description-no.UTF-8: Tasteoppsett som skal brukes:
Description-pa.UTF-8: ਵਰਤਣ ਲਈ ਕੀਮੈਪ:
Description-pl.UTF-8: Układ klawiatury:
Description-pt.UTF-8: Mapa de teclado a utilizar:
Description-pt_BR.UTF-8: Mapa de teclado a ser usado:
Description-ro.UTF-8: Configurația de taste utilizată:
Description-ru.UTF-8: Выберите клавиатурную раскладку:
Description-si.UTF-8: භාවිත යතුරු සැකැස්ම:
Description-sk.UTF-8: Klávesová mapa:
Description-sl.UTF-8: Postavitev tipkovnice, ki jo želite uporabljati:
Description-sq.UTF-8: Lloji i tastierës në përdorim:
Description-sr.UTF-8: Распоред тастатуре за употребу:
Description-sv.UTF-8: Tangentuppsättning som ska användas:
Description-ta.UTF-8: பயன் படுத்த விசைப் பலகை அமைப்பு:
Description-te.UTF-8: ఉపయోగించాల్సిన కీమ్యాప్:
Description-tg.UTF-8: Тарҳбандии клавиатура барои истифода:
Description-th.UTF-8: ผังแป้นพิมพ์ที่จะใช้:
Description-tl.UTF-8: Anyo ng tiklado na gamitin:
Description-tr.UTF-8: Kullanılacak klavye düzeni:
Description-ug.UTF-8: ئىشلىتىدىغان ھەرپتاختا خەرىتىسى:
Description-uk.UTF-8: Розкладка клавіатури:
Description-vi.UTF-8: Bàn phím cần dùng:
Description-zh_CN.UTF-8: 请选择键盘映射：
Description-zh_TW.UTF-8: 要使用的鍵盤對應:

Template: keyboard-configuration/modelcode
Type: string
Description: for internal use

Template: keyboard-configuration/layoutcode
Type: string
Description: for internal use

Template: keyboard-configuration/variantcode
Type: string
Description: for internal use

Template: keyboard-configuration/optionscode
Type: string
Description: for internal use

Template: keyboard-configuration/store_defaults_in_debconf_db
Type: boolean
Default: true
Description: for internal use
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                libasound.so.2 libasound2 #MINVER#
 ALSA_0.9.0@ALSA_0.9.0 1.0.16
 ALSA_0.9.0rc4@ALSA_0.9.0rc4 1.0.16
 ALSA_0.9.0rc8@ALSA_0.9.0rc8 1.0.16
 ALSA_0.9.3@ALSA_0.9.3 1.0.16
 ALSA_0.9.5@ALSA_0.9.5 1.0.16
 ALSA_0.9.7@ALSA_0.9.7 1.0.16
 ALSA_0.9@ALSA_0.9 1.0.16
 __snd_ctl_hw_open_dlsym_control_001@ALSA_0.9 1.0.16
 __snd_ctl_shm_open_dlsym_control_001@ALSA_0.9 1.0.16
 __snd_hwdep_hw_open_dlsym_hwdep_001@ALSA_0.9 1.0.16
 __snd_pcm_adpcm_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_alaw_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_asym_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_copy_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_dmix_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_dshare_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_dsnoop_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_empty_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_file_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_hook_ctl_elems_install_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_hooks_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_hw_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_access@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_buffer_size@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_buffer_size_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_buffer_size_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_buffer_time@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_buffer_time_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_buffer_time_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_channels@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_channels_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_channels_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_format@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_period_size@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_period_size_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_period_size_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_period_time@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_period_time_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_period_time_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_periods@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_periods_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_periods_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_rate@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_rate_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_rate_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_subformat@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_tick_time@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_tick_time_max@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_get_tick_time_min@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_access_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_access_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_buffer_size_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_buffer_size_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_buffer_size_near@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_buffer_time_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_buffer_time_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_buffer_time_near@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_channels_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_channels_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_channels_near@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_format_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_format_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_period_size_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_period_size_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_period_size_near@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_period_time_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_period_time_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_period_time_near@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_periods_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_periods_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_periods_near@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_rate_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_rate_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_rate_near@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_subformat_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_subformat_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_tick_time_first@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_tick_time_last@ALSA_0.9 1.0.16
 __snd_pcm_hw_params_set_tick_time_near@ALSA_0.9 1.0.16
 __snd_pcm_iec958_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_ladspa_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_lfloat_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_linear_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_meter_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_mmap_emul_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_mulaw_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_multi_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_null_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_plug_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_rate_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_route_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_share_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_shm_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_softvol_open_dlsym_pcm_001@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_avail_min@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_silence_size@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_silence_threshold@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_sleep_min@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_start_threshold@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_stop_threshold@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_tstamp_mode@ALSA_0.9 1.0.16
 __snd_pcm_sw_params_get_xfer_align@ALSA_0.9 1.0.16
 __snd_rawmidi_hw_open_dlsym_rawmidi_001@ALSA_0.9 1.0.16
 __snd_rawmidi_virtual_open_dlsym_rawmidi_001@ALSA_0.9 1.0.16
 __snd_seq_hw_open_dlsym_seq_001@ALSA_0.9 1.0.16
 __snd_timer_hw_open_dlsym_timer_001@ALSA_0.9 1.0.16
 __snd_timer_query_hw_open_dlsym_timer_query_001@ALSA_0.9 1.0.16
 _snd_config_hook_load_dlsym_config_hook_001@ALSA_0.9 1.0.16
 _snd_config_hook_load_for_all_cards_dlsym_config_hook_001@ALSA_0.9 1.0.16
 _snd_ctl_hw_open@ALSA_0.9 1.0.16
 _snd_ctl_poll_descriptor@ALSA_0.9 1.0.16
 _snd_ctl_shm_open@ALSA_0.9 1.0.16
 _snd_func_card_driver_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_card_id_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_card_inum_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_card_name_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_concat_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_datadir_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_getenv_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_iadd_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_igetenv_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_imul_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_pcm_args_by_class_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_pcm_id_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_private_card_driver_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_private_pcm_subdevice_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_private_string_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_func_refer_dlsym_config_evaluate_001@ALSA_0.9 1.0.16
 _snd_hwdep_hw_open@ALSA_0.9 1.0.16
 _snd_pcm_adpcm_open@ALSA_0.9 1.0.16
 _snd_pcm_alaw_open@ALSA_0.9 1.0.16
 _snd_pcm_asym_open@ALSA_0.9 1.0.16
 _snd_pcm_copy_open@ALSA_0.9 1.0.16
 _snd_pcm_dmix_open@ALSA_0.9 1.0.16
 _snd_pcm_dshare_open@ALSA_0.9 1.0.16
 _snd_pcm_dsnoop_open@ALSA_0.9 1.0.16
 _snd_pcm_empty_open@ALSA_0.9 1.0.16
 _snd_pcm_file_open@ALSA_0.9 1.0.16
 _snd_pcm_hook_ctl_elems_install@ALSA_0.9 1.0.16
 _snd_pcm_hooks_open@ALSA_0.9 1.0.16
 _snd_pcm_hw_open@ALSA_0.9 1.0.16
 _snd_pcm_iec958_open@ALSA_0.9 1.0.16
 _snd_pcm_ladspa_open@ALSA_0.9 1.0.16
 _snd_pcm_lfloat_open@ALSA_0.9 1.0.16
 _snd_pcm_linear_open@ALSA_0.9 1.0.16
 _snd_pcm_meter_open@ALSA_0.9 1.0.16
 _snd_pcm_mmap_emul_open@ALSA_0.9 1.0.16
 _snd_pcm_mulaw_open@ALSA_0.9 1.0.16
 _snd_pcm_multi_open@ALSA_0.9 1.0.16
 _snd_pcm_null_open@ALSA_0.9 1.0.16
 _snd_pcm_plug_open@ALSA_0.9 1.0.16
 _snd_pcm_poll_descriptor@ALSA_0.9 1.0.16
 _snd_pcm_rate_linear_open@ALSA_0.9 1.0.16
 _snd_pcm_rate_open@ALSA_0.9 1.0.16
 _snd_pcm_route_open@ALSA_0.9 1.0.16
 _snd_pcm_share_open@ALSA_0.9 1.0.16
 _snd_pcm_shm_open@ALSA_0.9 1.0.16
 _snd_pcm_softvol_open@ALSA_0.9 1.0.16
 _snd_rawmidi_hw_open@ALSA_0.9 1.0.16
 _snd_rawmidi_virtual_open@ALSA_0.9 1.0.16
 _snd_seq_hw_open@ALSA_0.9 1.0.16
 _snd_timer_hw_open@ALSA_0.9 1.0.16
 _snd_timer_query_hw_open@ALSA_0.9 1.0.16
 alsa_lisp@ALSA_0.9.5 1.0.16
 alsa_lisp_default_cfg@ALSA_0.9.7 1.0.16
 alsa_lisp_default_cfg_free@ALSA_0.9.7 1.0.16
 alsa_lisp_free@ALSA_0.9.7 1.0.16
 alsa_lisp_function@ALSA_0.9.7 1.0.16
 alsa_lisp_init_objects@ALSA_0.9.7 1.0.16
 alsa_lisp_nil@ALSA_0.9.7 1.0.16
 alsa_lisp_result_free@ALSA_0.9.7 1.0.16
 alsa_lisp_seq_count@ALSA_0.9.7 1.0.16
 alsa_lisp_seq_first@ALSA_0.9.7 1.0.16
 alsa_lisp_seq_integer@ALSA_0.9.7 1.0.16
 alsa_lisp_seq_next@ALSA_0.9.7 1.0.16
 alsa_lisp_seq_pointer@ALSA_0.9.7 1.0.16
 alsa_lisp_t@ALSA_0.9.7 1.0.16
 snd_asoundlib_version@ALSA_0.9 1.0.16
 snd_async_add_ctl_handler@ALSA_0.9 1.0.16
 snd_async_add_handler@ALSA_0.9 1.0.16
 snd_async_add_pcm_handler@ALSA_0.9 1.0.16
 snd_async_add_timer_handler@ALSA_0.9 1.0.16
 snd_async_del_handler@ALSA_0.9 1.0.16
 snd_async_handler_get_callback_private@ALSA_0.9 1.0.16
 snd_async_handler_get_ctl@ALSA_0.9 1.0.16
 snd_async_handler_get_fd@ALSA_0.9 1.0.16
 snd_async_handler_get_pcm@ALSA_0.9 1.0.16
 snd_async_handler_get_signo@ALSA_0.9 1.0.16
 snd_async_handler_get_timer@ALSA_0.9 1.0.16
 snd_card_get_index@ALSA_0.9 1.0.16
 snd_card_get_longname@ALSA_0.9 1.0.16
 snd_card_get_name@ALSA_0.9 1.0.16
 snd_card_load@ALSA_0.9 1.0.16
 snd_card_next@ALSA_0.9 1.0.16
 snd_config@ALSA_0.9 1.0.16
 snd_config_add@ALSA_0.9 1.0.16
 snd_config_copy@ALSA_0.9 1.0.16
 snd_config_delete@ALSA_0.9 1.0.16
 snd_config_delete_compound_members@ALSA_0.9 1.0.16
 snd_config_evaluate@ALSA_0.9 1.0.16
 snd_config_expand@ALSA_0.9 1.0.16
 snd_config_get_ascii@ALSA_0.9 1.0.16
 snd_config_get_bool@ALSA_0.9 1.0.16
 snd_config_get_bool_ascii@ALSA_0.9 1.0.16
 snd_config_get_ctl_iface@ALSA_0.9 1.0.16
 snd_config_get_ctl_iface_ascii@ALSA_0.9 1.0.16
 snd_config_get_id@ALSA_0.9 1.0.16
 snd_config_get_integer64@ALSA_0.9 1.0.16
 snd_config_get_integer@ALSA_0.9 1.0.16
 snd_config_get_ireal@ALSA_0.9 1.0.16
 snd_config_get_pointer@ALSA_0.9 1.0.16
 snd_config_get_real@ALSA_0.9 1.0.16
 snd_config_get_string@ALSA_0.9 1.0.16
 snd_config_get_type@ALSA_0.9 1.0.16
 snd_config_get_type_ascii@ALSA_0.9 1.0.16
 snd_config_hook_load@ALSA_0.9 1.0.16
 snd_config_hook_load_for_all_cards@ALSA_0.9 1.0.16
 snd_config_imake_integer64@ALSA_0.9 1.0.16
 snd_config_imake_integer@ALSA_0.9 1.0.16
 snd_config_imake_pointer@ALSA_0.9 1.0.16
 snd_config_imake_real@ALSA_0.9 1.0.16
 snd_config_imake_safe_string@ALSA_0.9 1.1.0
 snd_config_imake_string@ALSA_0.9 1.0.16
 snd_config_iterator_end@ALSA_0.9 1.0.16
 snd_config_iterator_entry@ALSA_0.9 1.0.16
 snd_config_iterator_first@ALSA_0.9 1.0.16
 snd_config_iterator_next@ALSA_0.9 1.0.16
 snd_config_load@ALSA_0.9 1.0.16
 snd_config_load_override@ALSA_0.9 1.0.16
 snd_config_make@ALSA_0.9 1.0.16
 snd_config_make_compound@ALSA_0.9 1.0.16
 snd_config_make_integer64@ALSA_0.9 1.0.16
 snd_config_make_integer@ALSA_0.9 1.0.16
 snd_config_make_pointer@ALSA_0.9 1.0.16
 snd_config_make_real@ALSA_0.9 1.0.16
 snd_config_make_string@ALSA_0.9 1.0.16
 snd_config_ref@ALSA_0.9 1.1.2
 snd_config_remove@ALSA_0.9 1.0.16
 snd_config_save@ALSA_0.9 1.0.16
 snd_config_search@ALSA_0.9 1.0.16
 snd_config_search_alias@ALSA_0.9 1.0.16
 snd_config_search_definition@ALSA_0.9 1.0.16
 snd_config_search_hooks@ALSA_0.9 1.0.16
 snd_config_searcha@ALSA_0.9 1.0.16
 snd_config_searcha_hooks@ALSA_0.9 1.0.16
 snd_config_searchv@ALSA_0.9 1.0.16
 snd_config_searchva@ALSA_0.9 1.0.16
 snd_config_searchva_hooks@ALSA_0.9 1.0.16
 snd_config_set_ascii@ALSA_0.9 1.0.16
 snd_config_set_id@ALSA_0.9 1.0.16
 snd_config_set_integer64@ALSA_0.9 1.0.16
 snd_config_set_integer@ALSA_0.9 1.0.16
 snd_config_set_pointer@ALSA_0.9 1.0.16
 snd_config_set_real@ALSA_0.9 1.0.16
 snd_config_set_string@ALSA_0.9 1.0.16
 snd_config_substitute@ALSA_0.9 1.0.16
 snd_config_test_id@ALSA_0.9 1.0.16
 snd_config_top@ALSA_0.9 1.0.16
 snd_config_unref@ALSA_0.9 1.1.2
 snd_config_update@ALSA_0.9 1.0.16
 snd_config_update_free@ALSA_0.9 1.0.16
 snd_config_update_free_global@ALSA_0.9 1.0.16
 snd_config_update_r@ALSA_0.9 1.0.16
 snd_config_update_ref@ALSA_0.9 1.1.2
 snd_ctl_add_boolean_elem_set@ALSA_0.9 1.1.2
 snd_ctl_add_bytes_elem_set@ALSA_0.9 1.1.2
 snd_ctl_add_enumerated_elem_set@ALSA_0.9 1.1.2
 snd_ctl_add_integer64_elem_set@ALSA_0.9 1.1.2
 snd_ctl_add_integer_elem_set@ALSA_0.9 1.1.2
 snd_ctl_ascii_elem_id_get@ALSA_0.9 1.0.24.1
 snd_ctl_ascii_elem_id_parse@ALSA_0.9 1.0.24.1
 snd_ctl_ascii_value_parse@ALSA_0.9 1.0.24.1
 snd_ctl_async@ALSA_0.9 1.0.16
 snd_ctl_card_info@ALSA_0.9 1.0.16
 snd_ctl_card_info_clear@ALSA_0.9 1.0.16
 snd_ctl_card_info_copy@ALSA_0.9 1.0.16
 snd_ctl_card_info_free@ALSA_0.9 1.0.16
 snd_ctl_card_info_get_card@ALSA_0.9 1.0.16
 snd_ctl_card_info_get_components@ALSA_0.9 1.0.16
 snd_ctl_card_info_get_driver@ALSA_0.9 1.0.16
 snd_ctl_card_info_get_id@ALSA_0.9 1.0.16
 snd_ctl_card_info_get_longname@ALSA_0.9 1.0.16
 snd_ctl_card_info_get_mixername@ALSA_0.9 1.0.16
 snd_ctl_card_info_get_name@ALSA_0.9 1.0.16
 snd_ctl_card_info_malloc@ALSA_0.9 1.0.16
 snd_ctl_card_info_sizeof@ALSA_0.9 1.0.16
 snd_ctl_close@ALSA_0.9 1.0.16
 snd_ctl_convert_from_dB@ALSA_0.9 1.0.16
 snd_ctl_convert_to_dB@ALSA_0.9 1.0.16
 snd_ctl_elem_add_boolean@ALSA_0.9 1.0.16
 snd_ctl_elem_add_enumerated@ALSA_0.9 1.0.25
 snd_ctl_elem_add_iec958@ALSA_0.9 1.0.16
 snd_ctl_elem_add_integer64@ALSA_0.9 1.0.16
 snd_ctl_elem_add_integer@ALSA_0.9 1.0.16
 snd_ctl_elem_id_clear@ALSA_0.9 1.0.16
 snd_ctl_elem_id_copy@ALSA_0.9 1.0.16
 snd_ctl_elem_id_free@ALSA_0.9 1.0.16
 snd_ctl_elem_id_get_device@ALSA_0.9 1.0.16
 snd_ctl_elem_id_get_index@ALSA_0.9 1.0.16
 snd_ctl_elem_id_get_interface@ALSA_0.9 1.0.16
 snd_ctl_elem_id_get_name@ALSA_0.9 1.0.16
 snd_ctl_elem_id_get_numid@ALSA_0.9 1.0.16
 snd_ctl_elem_id_get_subdevice@ALSA_0.9 1.0.16
 snd_ctl_elem_id_malloc@ALSA_0.9 1.0.16
 snd_ctl_elem_id_set_device@ALSA_0.9 1.0.16
 snd_ctl_elem_id_set_index@ALSA_0.9 1.0.16
 snd_ctl_elem_id_set_interface@ALSA_0.9 1.0.16
 snd_ctl_elem_id_set_name@ALSA_0.9 1.0.16
 snd_ctl_elem_id_set_numid@ALSA_0.9 1.0.16
 snd_ctl_elem_id_set_subdevice@ALSA_0.9 1.0.16
 snd_ctl_elem_id_sizeof@ALSA_0.9 1.0.16
 snd_ctl_elem_iface_name@ALSA_0.9 1.0.16
 snd_ctl_elem_info@ALSA_0.9 1.0.16
 snd_ctl_elem_info_clear@ALSA_0.9 1.0.16
 snd_ctl_elem_info_copy@ALSA_0.9 1.0.16
 snd_ctl_elem_info_free@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_count@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_device@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_dimension@ALSA_0.9.3 1.0.16
 snd_ctl_elem_info_get_dimensions@ALSA_0.9.3 1.0.16
 snd_ctl_elem_info_get_id@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_index@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_interface@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_item_name@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_items@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_max64@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_max@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_min64@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_min@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_name@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_numid@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_owner@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_step64@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_step@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_subdevice@ALSA_0.9 1.0.16
 snd_ctl_elem_info_get_type@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_inactive@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_indirect@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_locked@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_owner@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_readable@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_tlv_commandable@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_tlv_readable@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_tlv_writable@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_user@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_volatile@ALSA_0.9 1.0.16
 snd_ctl_elem_info_is_writable@ALSA_0.9 1.0.16
 snd_ctl_elem_info_malloc@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_device@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_dimension@ALSA_0.9 1.1.2
 snd_ctl_elem_info_set_id@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_index@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_interface@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_item@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_name@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_numid@ALSA_0.9 1.0.16
 snd_ctl_elem_info_set_subdevice@ALSA_0.9 1.0.16
 snd_ctl_elem_info_sizeof@ALSA_0.9 1.0.16
 snd_ctl_elem_list@ALSA_0.9 1.0.16
 snd_ctl_elem_list_alloc_space@ALSA_0.9 1.0.16
 snd_ctl_elem_list_clear@ALSA_0.9 1.0.16
 snd_ctl_elem_list_copy@ALSA_0.9 1.0.16
 snd_ctl_elem_list_free@ALSA_0.9 1.0.16
 snd_ctl_elem_list_free_space@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_count@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_device@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_id@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_index@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_interface@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_name@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_numid@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_subdevice@ALSA_0.9 1.0.16
 snd_ctl_elem_list_get_used@ALSA_0.9 1.0.16
 snd_ctl_elem_list_malloc@ALSA_0.9 1.0.16
 snd_ctl_elem_list_set_offset@ALSA_0.9 1.0.16
 snd_ctl_elem_list_sizeof@ALSA_0.9 1.0.16
 snd_ctl_elem_lock@ALSA_0.9 1.0.16
 snd_ctl_elem_read@ALSA_0.9 1.0.16
 snd_ctl_elem_remove@ALSA_0.9 1.0.16
 snd_ctl_elem_set_bytes@ALSA_0.9 1.0.16
 snd_ctl_elem_tlv_command@ALSA_0.9 1.0.16
 snd_ctl_elem_tlv_read@ALSA_0.9 1.0.16
 snd_ctl_elem_tlv_write@ALSA_0.9 1.0.16
 snd_ctl_elem_type_name@ALSA_0.9 1.0.16
 snd_ctl_elem_unlock@ALSA_0.9 1.0.16
 snd_ctl_elem_value_clear@ALSA_0.9 1.0.16
 snd_ctl_elem_value_compare@ALSA_0.9 1.0.23
 snd_ctl_elem_value_copy@ALSA_0.9 1.0.16
 snd_ctl_elem_value_free@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_boolean@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_byte@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_bytes@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_device@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_enumerated@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_id@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_iec958@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_index@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_integer64@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_integer@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_interface@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_name@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_numid@ALSA_0.9 1.0.16
 snd_ctl_elem_value_get_subdevice@ALSA_0.9 1.0.16
 snd_ctl_elem_value_malloc@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_boolean@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_byte@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_device@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_enumerated@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_id@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_iec958@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_index@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_integer64@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_integer@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_interface@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_name@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_numid@ALSA_0.9 1.0.16
 snd_ctl_elem_value_set_subdevice@ALSA_0.9 1.0.16
 snd_ctl_elem_value_sizeof@ALSA_0.9 1.0.16
 snd_ctl_elem_write@ALSA_0.9 1.0.16
 snd_ctl_event_clear@ALSA_0.9 1.0.16
 snd_ctl_event_copy@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_device@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_id@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_index@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_interface@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_mask@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_name@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_numid@ALSA_0.9 1.0.16
 snd_ctl_event_elem_get_subdevice@ALSA_0.9 1.0.16
 snd_ctl_event_free@ALSA_0.9 1.0.16
 snd_ctl_event_get_type@ALSA_0.9 1.0.16
 snd_ctl_event_malloc@ALSA_0.9 1.0.16
 snd_ctl_event_sizeof@ALSA_0.9 1.0.16
 snd_ctl_event_type_name@ALSA_0.9 1.0.16
 snd_ctl_ext_create@ALSA_0.9 1.0.16
 snd_ctl_ext_delete@ALSA_0.9 1.0.16
 snd_ctl_get_dB_range@ALSA_0.9 1.0.16
 snd_ctl_get_power_state@ALSA_0.9 1.0.16
 snd_ctl_hw_open@ALSA_0.9 1.0.16
 snd_ctl_hwdep_info@ALSA_0.9 1.0.16
 snd_ctl_hwdep_next_device@ALSA_0.9 1.0.16
 snd_ctl_name@ALSA_0.9 1.0.16
 snd_ctl_nonblock@ALSA_0.9 1.0.16
 snd_ctl_open@ALSA_0.9 1.0.16
 snd_ctl_open_fallback@ALSA_0.9 1.0.25
 snd_ctl_open_lconf@ALSA_0.9 1.0.16
 snd_ctl_pcm_info@ALSA_0.9 1.0.16
 snd_ctl_pcm_next_device@ALSA_0.9 1.0.16
 snd_ctl_pcm_prefer_subdevice@ALSA_0.9 1.0.16
 snd_ctl_poll_descriptors@ALSA_0.9 1.0.16
 snd_ctl_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_ctl_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_ctl_rawmidi_info@ALSA_0.9 1.0.16
 snd_ctl_rawmidi_next_device@ALSA_0.9 1.0.16
 snd_ctl_rawmidi_prefer_subdevice@ALSA_0.9 1.0.16
 snd_ctl_read@ALSA_0.9 1.0.16
 snd_ctl_set_power_state@ALSA_0.9 1.0.16
 snd_ctl_shm_open@ALSA_0.9 1.0.16
 snd_ctl_subscribe_events@ALSA_0.9 1.0.16
 snd_ctl_type@ALSA_0.9 1.0.16
 snd_ctl_wait@ALSA_0.9 1.0.16
 snd_determine_driver@ALSA_0.9 1.0.16
 snd_device_name_free_hint@ALSA_0.9 1.0.16
 snd_device_name_get_hint@ALSA_0.9 1.0.16
 snd_device_name_hint@ALSA_0.9 1.0.16
 snd_dlclose@ALSA_0.9 1.0.16
 snd_dlopen@ALSA_0.9 1.0.16
 snd_dlsym@ALSA_0.9 1.0.16
 snd_err_msg@ALSA_0.9 1.0.16
 snd_func_card_driver@ALSA_0.9 1.0.16
 snd_func_card_id@ALSA_0.9 1.0.16
 snd_func_card_inum@ALSA_0.9 1.0.16
 snd_func_card_name@ALSA_0.9 1.0.16
 snd_func_concat@ALSA_0.9 1.0.16
 snd_func_datadir@ALSA_0.9 1.0.16
 snd_func_getenv@ALSA_0.9 1.0.16
 snd_func_iadd@ALSA_0.9 1.0.16
 snd_func_igetenv@ALSA_0.9 1.0.16
 snd_func_imul@ALSA_0.9 1.0.16
 snd_func_pcm_args_by_class@ALSA_0.9 1.0.16
 snd_func_pcm_id@ALSA_0.9 1.0.16
 snd_func_private_card_driver@ALSA_0.9 1.0.16
 snd_func_private_pcm_subdevice@ALSA_0.9 1.0.16
 snd_func_private_string@ALSA_0.9 1.0.16
 snd_func_refer@ALSA_0.9 1.0.16
 snd_hctl_async@ALSA_0.9 1.0.16
 snd_hctl_close@ALSA_0.9 1.0.16
 snd_hctl_compare_fast@ALSA_0.9 1.0.16
 snd_hctl_ctl@ALSA_0.9 1.0.16
 snd_hctl_elem_get_callback_private@ALSA_0.9 1.0.16
 snd_hctl_elem_get_device@ALSA_0.9 1.0.16
 snd_hctl_elem_get_hctl@ALSA_0.9 1.0.16
 snd_hctl_elem_get_id@ALSA_0.9 1.0.16
 snd_hctl_elem_get_index@ALSA_0.9 1.0.16
 snd_hctl_elem_get_interface@ALSA_0.9 1.0.16
 snd_hctl_elem_get_name@ALSA_0.9 1.0.16
 snd_hctl_elem_get_numid@ALSA_0.9 1.0.16
 snd_hctl_elem_get_subdevice@ALSA_0.9 1.0.16
 snd_hctl_elem_info@ALSA_0.9 1.0.16
 snd_hctl_elem_next@ALSA_0.9 1.0.16
 snd_hctl_elem_prev@ALSA_0.9 1.0.16
 snd_hctl_elem_read@ALSA_0.9 1.0.16
 snd_hctl_elem_set_callback@ALSA_0.9 1.0.16
 snd_hctl_elem_set_callback_private@ALSA_0.9 1.0.16
 snd_hctl_elem_tlv_command@ALSA_0.9 1.0.16
 snd_hctl_elem_tlv_read@ALSA_0.9 1.0.16
 snd_hctl_elem_tlv_write@ALSA_0.9 1.0.16
 snd_hctl_elem_write@ALSA_0.9 1.0.16
 snd_hctl_find_elem@ALSA_0.9 1.0.16
 snd_hctl_first_elem@ALSA_0.9 1.0.16
 snd_hctl_free@ALSA_0.9 1.0.16
 snd_hctl_get_callback_private@ALSA_0.9 1.0.16
 snd_hctl_get_count@ALSA_0.9 1.0.16
 snd_hctl_handle_events@ALSA_0.9 1.0.16
 snd_hctl_last_elem@ALSA_0.9 1.0.16
 snd_hctl_load@ALSA_0.9 1.0.16
 snd_hctl_name@ALSA_0.9 1.0.16
 snd_hctl_nonblock@ALSA_0.9 1.0.16
 snd_hctl_open@ALSA_0.9 1.0.16
 snd_hctl_open_ctl@ALSA_0.9 1.0.16
 snd_hctl_poll_descriptors@ALSA_0.9 1.0.16
 snd_hctl_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_hctl_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_hctl_set_callback@ALSA_0.9 1.0.16
 snd_hctl_set_callback_private@ALSA_0.9 1.0.16
 snd_hctl_set_compare@ALSA_0.9 1.0.16
 snd_hctl_wait@ALSA_0.9 1.0.16
 snd_hwdep_close@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_copy@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_free@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_get_image@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_get_index@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_get_length@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_get_name@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_malloc@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_set_image@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_set_index@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_set_length@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_set_name@ALSA_0.9 1.0.16
 snd_hwdep_dsp_image_sizeof@ALSA_0.9 1.0.16
 snd_hwdep_dsp_load@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_copy@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_free@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_get_chip_ready@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_get_dsp_loaded@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_get_id@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_get_num_dsps@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_get_version@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_malloc@ALSA_0.9 1.0.16
 snd_hwdep_dsp_status_sizeof@ALSA_0.9 1.0.16
 snd_hwdep_hw_open@ALSA_0.9 1.0.16
 snd_hwdep_info@ALSA_0.9 1.0.16
 snd_hwdep_info_copy@ALSA_0.9 1.0.16
 snd_hwdep_info_free@ALSA_0.9 1.0.16
 snd_hwdep_info_get_card@ALSA_0.9 1.0.16
 snd_hwdep_info_get_device@ALSA_0.9 1.0.16
 snd_hwdep_info_get_id@ALSA_0.9 1.0.16
 snd_hwdep_info_get_iface@ALSA_0.9 1.0.16
 snd_hwdep_info_get_name@ALSA_0.9 1.0.16
 snd_hwdep_info_malloc@ALSA_0.9 1.0.16
 snd_hwdep_info_set_device@ALSA_0.9 1.0.16
 snd_hwdep_info_sizeof@ALSA_0.9 1.0.16
 snd_hwdep_ioctl@ALSA_0.9 1.0.16
 snd_hwdep_name@ALSA_0.9 1.0.16
 snd_hwdep_nonblock@ALSA_0.9 1.0.16
 snd_hwdep_open@ALSA_0.9 1.0.16
 snd_hwdep_open_lconf@ALSA_0.9 1.0.16
 snd_hwdep_poll_descriptors@ALSA_0.9 1.0.16
 snd_hwdep_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_hwdep_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_hwdep_read@ALSA_0.9 1.0.16
 snd_hwdep_type@ALSA_0.9 1.0.16
 snd_hwdep_write@ALSA_0.9 1.0.16
 snd_input_buffer_open@ALSA_0.9 1.0.16
 snd_input_close@ALSA_0.9 1.0.16
 snd_input_getc@ALSA_0.9 1.0.16
 snd_input_gets@ALSA_0.9 1.0.16
 snd_input_scanf@ALSA_0.9 1.0.16
 snd_input_stdio_attach@ALSA_0.9 1.0.16
 snd_input_stdio_open@ALSA_0.9 1.0.16
 snd_input_ungetc@ALSA_0.9 1.0.16
 snd_instr_fm_convert_from_stream@ALSA_0.9 1.0.16
 snd_instr_fm_convert_to_stream@ALSA_0.9 1.0.16
 snd_instr_fm_free@ALSA_0.9 1.0.16
 snd_instr_header_copy@ALSA_0.9 1.0.16
 snd_instr_header_free@ALSA_0.9 1.0.16
 snd_instr_header_get_alias@ALSA_0.9 1.0.16
 snd_instr_header_get_cluster@ALSA_0.9 1.0.16
 snd_instr_header_get_cmd@ALSA_0.9 1.0.16
 snd_instr_header_get_data@ALSA_0.9 1.0.16
 snd_instr_header_get_follow_alias@ALSA_0.9 1.0.16
 snd_instr_header_get_format@ALSA_0.9 1.0.16
 snd_instr_header_get_id@ALSA_0.9 1.0.16
 snd_instr_header_get_len@ALSA_0.9 1.0.16
 snd_instr_header_get_name@ALSA_0.9 1.0.16
 snd_instr_header_get_type@ALSA_0.9 1.0.16
 snd_instr_header_malloc@ALSA_0.9 1.0.16
 snd_instr_header_set_alias@ALSA_0.9 1.0.16
 snd_instr_header_set_cluster@ALSA_0.9 1.0.16
 snd_instr_header_set_cmd@ALSA_0.9 1.0.16
 snd_instr_header_set_follow_alias@ALSA_0.9 1.0.16
 snd_instr_header_set_format@ALSA_0.9 1.0.16
 snd_instr_header_set_id@ALSA_0.9 1.0.16
 snd_instr_header_set_len@ALSA_0.9 1.0.16
 snd_instr_header_set_name@ALSA_0.9 1.0.16
 snd_instr_header_set_type@ALSA_0.9 1.0.16
 snd_instr_header_sizeof@ALSA_0.9 1.0.16
 snd_instr_iwffff_close@ALSA_0.9 1.0.16
 snd_instr_iwffff_convert_from_stream@ALSA_0.9 1.0.16
 snd_instr_iwffff_convert_to_stream@ALSA_0.9 1.0.16
 snd_instr_iwffff_free@ALSA_0.9 1.0.16
 snd_instr_iwffff_load@ALSA_0.9 1.0.16
 snd_instr_iwffff_open@ALSA_0.9 1.0.16
 snd_instr_iwffff_open_rom@ALSA_0.9 1.0.16
 snd_instr_iwffff_open_rom_file@ALSA_0.9 1.0.16
 snd_instr_simple_convert_from_stream@ALSA_0.9 1.0.16
 snd_instr_simple_convert_to_stream@ALSA_0.9 1.0.16
 snd_instr_simple_free@ALSA_0.9 1.0.16
 snd_lib_error@ALSA_0.9 1.0.16
 snd_lib_error_set_handler@ALSA_0.9 1.0.16
 snd_lib_error_set_local@ALSA_0.9 1.0.27
 snd_midi_event_decode@ALSA_0.9 1.0.16
 snd_midi_event_encode@ALSA_0.9 1.0.16
 snd_midi_event_encode_byte@ALSA_0.9 1.0.16
 snd_midi_event_free@ALSA_0.9 1.0.16
 snd_midi_event_init@ALSA_0.9 1.0.16
 snd_midi_event_new@ALSA_0.9 1.0.16
 snd_midi_event_no_status@ALSA_0.9 1.0.16
 snd_midi_event_reset_decode@ALSA_0.9 1.0.16
 snd_midi_event_reset_encode@ALSA_0.9 1.0.16
 snd_midi_event_resize_buffer@ALSA_0.9 1.0.16
 snd_mixer_attach@ALSA_0.9 1.0.16
 snd_mixer_attach_hctl@ALSA_0.9 1.0.16
 snd_mixer_class_copy@ALSA_0.9 1.0.16
 snd_mixer_class_free@ALSA_0.9 1.0.16
 snd_mixer_class_get_compare@ALSA_0.9 1.0.16
 snd_mixer_class_get_event@ALSA_0.9 1.0.16
 snd_mixer_class_get_mixer@ALSA_0.9 1.0.16
 snd_mixer_class_get_private@ALSA_0.9 1.0.16
 snd_mixer_class_malloc@ALSA_0.9 1.0.16
 snd_mixer_class_register@ALSA_0.9 1.0.16
 snd_mixer_class_set_compare@ALSA_0.9 1.0.16
 snd_mixer_class_set_event@ALSA_0.9 1.0.16
 snd_mixer_class_set_private@ALSA_0.9 1.0.16
 snd_mixer_class_set_private_free@ALSA_0.9 1.0.16
 snd_mixer_class_sizeof@ALSA_0.9 1.0.16
 snd_mixer_class_unregister@ALSA_0.9 1.0.16
 snd_mixer_close@ALSA_0.9 1.0.16
 snd_mixer_detach@ALSA_0.9 1.0.16
 snd_mixer_detach_hctl@ALSA_0.9 1.0.16
 snd_mixer_elem_add@ALSA_0.9 1.0.16
 snd_mixer_elem_attach@ALSA_0.9 1.0.16
 snd_mixer_elem_detach@ALSA_0.9 1.0.16
 snd_mixer_elem_empty@ALSA_0.9 1.0.16
 snd_mixer_elem_free@ALSA_0.9 1.0.16
 snd_mixer_elem_get_callback_private@ALSA_0.9 1.0.16
 snd_mixer_elem_get_private@ALSA_0.9 1.0.16
 snd_mixer_elem_get_type@ALSA_0.9 1.0.16
 snd_mixer_elem_info@ALSA_0.9 1.0.16
 snd_mixer_elem_new@ALSA_0.9 1.0.16
 snd_mixer_elem_next@ALSA_0.9 1.0.16
 snd_mixer_elem_prev@ALSA_0.9 1.0.16
 snd_mixer_elem_remove@ALSA_0.9 1.0.16
 snd_mixer_elem_set_callback@ALSA_0.9 1.0.16
 snd_mixer_elem_set_callback_private@ALSA_0.9 1.0.16
 snd_mixer_elem_value@ALSA_0.9 1.0.16
 snd_mixer_find_selem@ALSA_0.9 1.0.16
 snd_mixer_first_elem@ALSA_0.9 1.0.16
 snd_mixer_free@ALSA_0.9 1.0.16
 snd_mixer_get_callback_private@ALSA_0.9 1.0.16
 snd_mixer_get_count@ALSA_0.9 1.0.16
 snd_mixer_get_hctl@ALSA_0.9 1.0.16
 snd_mixer_handle_events@ALSA_0.9 1.0.16
 snd_mixer_last_elem@ALSA_0.9 1.0.16
 snd_mixer_load@ALSA_0.9 1.0.16
 snd_mixer_open@ALSA_0.9 1.0.16
 snd_mixer_poll_descriptors@ALSA_0.9 1.0.16
 snd_mixer_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_mixer_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_mixer_sbasic_get_private@ALSA_0.9 1.0.16
 snd_mixer_sbasic_info@ALSA_0.9 1.0.16
 snd_mixer_sbasic_set_private@ALSA_0.9 1.0.16
 snd_mixer_sbasic_set_private_free@ALSA_0.9 1.0.16
 snd_mixer_selem_ask_capture_dB_vol@ALSA_0.9 1.0.17
 snd_mixer_selem_ask_capture_vol_dB@ALSA_0.9 1.0.17
 snd_mixer_selem_ask_playback_dB_vol@ALSA_0.9 1.0.17
 snd_mixer_selem_ask_playback_vol_dB@ALSA_0.9 1.0.17
 snd_mixer_selem_channel_name@ALSA_0.9 1.0.16
 snd_mixer_selem_compare@ALSA_0.9 1.0.16
 snd_mixer_selem_get_capture_dB@ALSA_0.9 1.0.16
 snd_mixer_selem_get_capture_dB_range@ALSA_0.9 1.0.16
 snd_mixer_selem_get_capture_group@ALSA_0.9 1.0.16
 snd_mixer_selem_get_capture_switch@ALSA_0.9 1.0.16
 snd_mixer_selem_get_capture_volume@ALSA_0.9 1.0.16
 snd_mixer_selem_get_capture_volume_range@ALSA_0.9 1.0.16
 snd_mixer_selem_get_enum_item@ALSA_0.9 1.0.16
 snd_mixer_selem_get_enum_item_name@ALSA_0.9 1.0.16
 snd_mixer_selem_get_enum_items@ALSA_0.9 1.0.16
 snd_mixer_selem_get_id@ALSA_0.9 1.0.16
 snd_mixer_selem_get_index@ALSA_0.9 1.0.16
 snd_mixer_selem_get_name@ALSA_0.9 1.0.16
 snd_mixer_selem_get_playback_dB@ALSA_0.9 1.0.16
 snd_mixer_selem_get_playback_dB_range@ALSA_0.9 1.0.16
 snd_mixer_selem_get_playback_switch@ALSA_0.9 1.0.16
 snd_mixer_selem_get_playback_volume@ALSA_0.9 1.0.16
 snd_mixer_selem_get_playback_volume_range@ALSA_0.9 1.0.16
 snd_mixer_selem_has_capture_channel@ALSA_0.9 1.0.16
 snd_mixer_selem_has_capture_switch@ALSA_0.9 1.0.16
 snd_mixer_selem_has_capture_switch_exclusive@ALSA_0.9 1.0.16
 snd_mixer_selem_has_capture_switch_joined@ALSA_0.9 1.0.16
 snd_mixer_selem_has_capture_volume@ALSA_0.9 1.0.16
 snd_mixer_selem_has_capture_volume_joined@ALSA_0.9 1.0.16
 snd_mixer_selem_has_common_switch@ALSA_0.9 1.0.16
 snd_mixer_selem_has_common_volume@ALSA_0.9 1.0.16
 snd_mixer_selem_has_playback_channel@ALSA_0.9 1.0.16
 snd_mixer_selem_has_playback_switch@ALSA_0.9 1.0.16
 snd_mixer_selem_has_playback_switch_joined@ALSA_0.9 1.0.16
 snd_mixer_selem_has_playback_volume@ALSA_0.9 1.0.16
 snd_mixer_selem_has_playback_volume_joined@ALSA_0.9 1.0.16
 snd_mixer_selem_id_copy@ALSA_0.9 1.0.16
 snd_mixer_selem_id_free@ALSA_0.9 1.0.16
 snd_mixer_selem_id_get_index@ALSA_0.9 1.0.16
 snd_mixer_selem_id_get_name@ALSA_0.9 1.0.16
 snd_mixer_selem_id_malloc@ALSA_0.9 1.0.16
 snd_mixer_selem_id_set_index@ALSA_0.9 1.0.16
 snd_mixer_selem_id_set_name@ALSA_0.9 1.0.16
 snd_mixer_selem_id_sizeof@ALSA_0.9 1.0.16
 snd_mixer_selem_is_active@ALSA_0.9 1.0.16
 snd_mixer_selem_is_capture_mono@ALSA_0.9 1.0.16
 snd_mixer_selem_is_enum_capture@ALSA_0.9 1.0.16
 snd_mixer_selem_is_enum_playback@ALSA_0.9 1.0.16
 snd_mixer_selem_is_enumerated@ALSA_0.9 1.0.16
 snd_mixer_selem_is_playback_mono@ALSA_0.9 1.0.16
 snd_mixer_selem_register@ALSA_0.9 1.0.16
 snd_mixer_selem_set_capture_dB@ALSA_0.9 1.0.16
 snd_mixer_selem_set_capture_dB_all@ALSA_0.9 1.0.16
 snd_mixer_selem_set_capture_switch@ALSA_0.9 1.0.16
 snd_mixer_selem_set_capture_switch_all@ALSA_0.9 1.0.16
 snd_mixer_selem_set_capture_volume@ALSA_0.9 1.0.16
 snd_mixer_selem_set_capture_volume_all@ALSA_0.9 1.0.16
 snd_mixer_selem_set_capture_volume_range@ALSA_0.9 1.0.16
 snd_mixer_selem_set_enum_item@ALSA_0.9 1.0.16
 snd_mixer_selem_set_playback_dB@ALSA_0.9 1.0.16
 snd_mixer_selem_set_playback_dB_all@ALSA_0.9 1.0.16
 snd_mixer_selem_set_playback_switch@ALSA_0.9 1.0.16
 snd_mixer_selem_set_playback_switch_all@ALSA_0.9 1.0.16
 snd_mixer_selem_set_playback_volume@ALSA_0.9 1.0.16
 snd_mixer_selem_set_playback_volume_all@ALSA_0.9 1.0.16
 snd_mixer_selem_set_playback_volume_range@ALSA_0.9 1.0.16
 snd_mixer_set_callback@ALSA_0.9 1.0.16
 snd_mixer_set_callback_private@ALSA_0.9 1.0.16
 snd_mixer_set_compare@ALSA_0.9 1.0.16
 snd_mixer_wait@ALSA_0.9 1.0.16
 snd_names_list@ALSA_0.9 1.0.16
 snd_names_list_free@ALSA_0.9 1.0.16
 snd_output_buffer_open@ALSA_0.9 1.0.16
 snd_output_buffer_string@ALSA_0.9 1.0.16
 snd_output_close@ALSA_0.9 1.0.16
 snd_output_flush@ALSA_0.9 1.0.16
 snd_output_printf@ALSA_0.9 1.0.16
 snd_output_putc@ALSA_0.9 1.0.16
 snd_output_puts@ALSA_0.9 1.0.16
 snd_output_stdio_attach@ALSA_0.9 1.0.16
 snd_output_stdio_open@ALSA_0.9 1.0.16
 snd_output_vprintf@ALSA_0.9 1.0.16
 snd_pcm_access_mask_any@ALSA_0.9 1.0.16
 snd_pcm_access_mask_copy@ALSA_0.9 1.0.16
 snd_pcm_access_mask_empty@ALSA_0.9 1.0.16
 snd_pcm_access_mask_free@ALSA_0.9 1.0.16
 snd_pcm_access_mask_malloc@ALSA_0.9 1.0.16
 snd_pcm_access_mask_none@ALSA_0.9 1.0.16
 snd_pcm_access_mask_reset@ALSA_0.9 1.0.16
 snd_pcm_access_mask_set@ALSA_0.9 1.0.16
 snd_pcm_access_mask_sizeof@ALSA_0.9 1.0.16
 snd_pcm_access_mask_test@ALSA_0.9 1.0.16
 snd_pcm_access_name@ALSA_0.9 1.0.16
 snd_pcm_adpcm_open@ALSA_0.9 1.0.16
 snd_pcm_alaw_open@ALSA_0.9 1.0.16
 snd_pcm_area_copy@ALSA_0.9 1.0.16
 snd_pcm_area_silence@ALSA_0.9 1.0.16
 snd_pcm_areas_copy@ALSA_0.9 1.0.16
 snd_pcm_areas_silence@ALSA_0.9 1.0.16
 snd_pcm_async@ALSA_0.9 1.0.16
 snd_pcm_avail@ALSA_0.9 1.0.18
 snd_pcm_avail_delay@ALSA_0.9 1.0.18
 snd_pcm_avail_update@ALSA_0.9 1.0.16
 snd_pcm_build_linear_format@ALSA_0.9 1.0.16
 snd_pcm_bytes_to_frames@ALSA_0.9 1.0.16
 snd_pcm_bytes_to_samples@ALSA_0.9 1.0.16
 snd_pcm_chmap_from_string@ALSA_0.9 1.0.27
 snd_pcm_chmap_long_name@ALSA_0.9 1.0.27
 snd_pcm_chmap_name@ALSA_0.9 1.0.27
 snd_pcm_chmap_parse_string@ALSA_0.9 1.0.27
 snd_pcm_chmap_print@ALSA_0.9 1.0.27
 snd_pcm_chmap_type_name@ALSA_0.9 1.0.27
 snd_pcm_close@ALSA_0.9 1.0.16
 snd_pcm_copy_open@ALSA_0.9 1.0.16
 snd_pcm_delay@ALSA_0.9 1.0.16
 snd_pcm_dmix_open@ALSA_0.9 1.0.16
 snd_pcm_drain@ALSA_0.9 1.0.16
 snd_pcm_drop@ALSA_0.9 1.0.16
 snd_pcm_dshare_open@ALSA_0.9 1.0.16
 snd_pcm_dsnoop_open@ALSA_0.9 1.0.16
 snd_pcm_dump@ALSA_0.9 1.0.16
 snd_pcm_dump_hw_setup@ALSA_0.9 1.0.16
 snd_pcm_dump_setup@ALSA_0.9 1.0.16
 snd_pcm_dump_sw_setup@ALSA_0.9 1.0.16
 snd_pcm_extplug_create@ALSA_0.9 1.0.16
 snd_pcm_extplug_delete@ALSA_0.9 1.0.16
 snd_pcm_extplug_params_reset@ALSA_0.9 1.0.16
 snd_pcm_extplug_set_param_list@ALSA_0.9 1.0.16
 snd_pcm_extplug_set_param_minmax@ALSA_0.9 1.0.16
 snd_pcm_extplug_set_slave_param_list@ALSA_0.9 1.0.16
 snd_pcm_extplug_set_slave_param_minmax@ALSA_0.9 1.0.16
 snd_pcm_file_open@ALSA_0.9 1.0.16
 snd_pcm_format_big_endian@ALSA_0.9 1.0.16
 snd_pcm_format_cpu_endian@ALSA_0.9 1.0.16
 snd_pcm_format_description@ALSA_0.9 1.0.16
 snd_pcm_format_float@ALSA_0.9 1.0.16
 snd_pcm_format_linear@ALSA_0.9 1.0.16
 snd_pcm_format_little_endian@ALSA_0.9 1.0.16
 snd_pcm_format_mask_any@ALSA_0.9 1.0.16
 snd_pcm_format_mask_copy@ALSA_0.9 1.0.16
 snd_pcm_format_mask_empty@ALSA_0.9 1.0.16
 snd_pcm_format_mask_free@ALSA_0.9 1.0.16
 snd_pcm_format_mask_malloc@ALSA_0.9 1.0.16
 snd_pcm_format_mask_none@ALSA_0.9 1.0.16
 snd_pcm_format_mask_reset@ALSA_0.9 1.0.16
 snd_pcm_format_mask_set@ALSA_0.9 1.0.16
 snd_pcm_format_mask_sizeof@ALSA_0.9 1.0.16
 snd_pcm_format_mask_test@ALSA_0.9 1.0.16
 snd_pcm_format_name@ALSA_0.9 1.0.16
 snd_pcm_format_physical_width@ALSA_0.9 1.0.16
 snd_pcm_format_set_silence@ALSA_0.9 1.0.16
 snd_pcm_format_signed@ALSA_0.9 1.0.16
 snd_pcm_format_silence@ALSA_0.9 1.0.16
 snd_pcm_format_silence_16@ALSA_0.9 1.0.16
 snd_pcm_format_silence_32@ALSA_0.9 1.0.16
 snd_pcm_format_silence_64@ALSA_0.9 1.0.16
 snd_pcm_format_size@ALSA_0.9 1.0.16
 snd_pcm_format_unsigned@ALSA_0.9 1.0.16
 snd_pcm_format_value@ALSA_0.9 1.0.16
 snd_pcm_format_width@ALSA_0.9 1.0.16
 snd_pcm_forward@ALSA_0.9.0rc8 1.0.16
 snd_pcm_forwardable@ALSA_0.9 1.0.17
 snd_pcm_frames_to_bytes@ALSA_0.9 1.0.16
 snd_pcm_free_chmaps@ALSA_0.9 1.0.27
 snd_pcm_generic_htimestamp@ALSA_0.9 1.0.16
 snd_pcm_generic_real_htimestamp@ALSA_0.9 1.0.16
 snd_pcm_get_chmap@ALSA_0.9 1.0.27
 snd_pcm_get_params@ALSA_0.9 1.0.16
 snd_pcm_hook_add@ALSA_0.9 1.0.16
 snd_pcm_hook_get_pcm@ALSA_0.9 1.0.16
 snd_pcm_hook_get_private@ALSA_0.9 1.0.16
 snd_pcm_hook_remove@ALSA_0.9 1.0.16
 snd_pcm_hook_set_private@ALSA_0.9 1.0.16
 snd_pcm_hooks_open@ALSA_0.9 1.0.16
 snd_pcm_htimestamp@ALSA_0.9 1.0.16
 snd_pcm_hw_fast_tstamp@ALSA_0.9 1.0.16
 snd_pcm_hw_free@ALSA_0.9 1.0.16
 snd_pcm_hw_open@ALSA_0.9 1.0.16
 snd_pcm_hw_param_dump@ALSA_0.9 1.0.16
 snd_pcm_hw_params@ALSA_0.9 1.0.16
 snd_pcm_hw_params_any@ALSA_0.9 1.0.16
 snd_pcm_hw_params_can_disable_period_wakeup@ALSA_0.9 1.0.24.1
 snd_pcm_hw_params_can_mmap_sample_resolution@ALSA_0.9 1.0.16
 snd_pcm_hw_params_can_overrange@ALSA_0.9 1.0.16
 snd_pcm_hw_params_can_pause@ALSA_0.9 1.0.16
 snd_pcm_hw_params_can_resume@ALSA_0.9 1.0.16
 snd_pcm_hw_params_can_sync_start@ALSA_0.9 1.0.16
 snd_pcm_hw_params_copy@ALSA_0.9 1.0.16
 snd_pcm_hw_params_current@ALSA_0.9 1.0.16
 snd_pcm_hw_params_dump@ALSA_0.9 1.0.16
 snd_pcm_hw_params_free@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_access@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_access@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_access_mask@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_buffer_size@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_buffer_size@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_buffer_size_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_buffer_size_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_buffer_size_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_buffer_size_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_buffer_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_buffer_time@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_buffer_time_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_buffer_time_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_buffer_time_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_buffer_time_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_channels@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_channels@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_channels_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_channels_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_channels_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_channels_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_export_buffer@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_fifo_size@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_format@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_format@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_format_mask@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_min_align@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_period_size@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_period_size@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_period_size_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_period_size_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_period_size_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_period_size_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_period_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_period_time@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_period_time_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_period_time_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_period_time_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_period_time_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_period_wakeup@ALSA_0.9 1.0.24.1
 snd_pcm_hw_params_get_periods@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_periods@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_periods_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_periods_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_periods_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_periods_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_rate@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_rate@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_rate_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_rate_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_rate_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_rate_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_rate_numden@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_rate_resample@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_sbits@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_subformat@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_subformat@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_subformat_mask@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_tick_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_tick_time@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_tick_time_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_tick_time_max@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_get_tick_time_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_get_tick_time_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_is_batch@ALSA_0.9 1.0.16
 snd_pcm_hw_params_is_block_transfer@ALSA_0.9 1.0.16
 snd_pcm_hw_params_is_double@ALSA_0.9 1.0.16
 snd_pcm_hw_params_is_half_duplex@ALSA_0.9 1.0.16
 snd_pcm_hw_params_is_joint_duplex@ALSA_0.9 1.0.16
 snd_pcm_hw_params_is_monotonic@ALSA_0.9 1.0.17
 snd_pcm_hw_params_malloc@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_access@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_access_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_access_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_access_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_access_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_access_mask@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_buffer_size_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_buffer_size_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_size_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_buffer_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_time_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_time_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_buffer_time_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_time_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_buffer_time_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_time_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_time_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_time_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_buffer_time_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_channels@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_channels_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_channels_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_channels_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_channels_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_channels_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_channels_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_channels_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_channels_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_channels_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_export_buffer@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_format@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_format_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_format_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_format_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_format_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_format_mask@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_period_size_integer@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_period_size_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_size_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_period_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_time_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_time_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_period_time_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_time_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_period_time_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_time_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_time_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_time_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_period_time_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_period_wakeup@ALSA_0.9 1.0.24.1
 snd_pcm_hw_params_set_periods@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_periods_integer@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_periods_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_periods_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_rate@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_rate_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_rate_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_rate_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_rate_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_rate_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_rate_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_rate_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_rate_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_rate_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_rate_resample@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_subformat@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_subformat_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_subformat_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_subformat_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_subformat_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_subformat_mask@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time_first@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time_first@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_tick_time_last@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time_last@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_set_tick_time_max@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time_min@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time_minmax@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time_near@ALSA_0.9 1.0.16
 snd_pcm_hw_params_set_tick_time_near@ALSA_0.9.0rc4 1.0.16
 snd_pcm_hw_params_sizeof@ALSA_0.9 1.0.16
 snd_pcm_hw_params_supports_audio_ts_type@ALSA_0.9 1.1.0
 snd_pcm_hw_params_supports_audio_wallclock_ts@ALSA_0.9 1.0.27
 snd_pcm_hw_params_test_access@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_buffer_size@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_buffer_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_channels@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_format@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_period_size@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_period_time@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_periods@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_rate@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_subformat@ALSA_0.9 1.0.16
 snd_pcm_hw_params_test_tick_time@ALSA_0.9 1.0.16
 snd_pcm_hw_refine@ALSA_0.9 1.0.16
 snd_pcm_hwsync@ALSA_0.9 1.0.16
 snd_pcm_iec958_open@ALSA_0.9 1.0.16
 snd_pcm_info@ALSA_0.9 1.0.16
 snd_pcm_info_copy@ALSA_0.9 1.0.16
 snd_pcm_info_free@ALSA_0.9 1.0.16
 snd_pcm_info_get_card@ALSA_0.9 1.0.16
 snd_pcm_info_get_class@ALSA_0.9 1.0.16
 snd_pcm_info_get_device@ALSA_0.9 1.0.16
 snd_pcm_info_get_id@ALSA_0.9 1.0.16
 snd_pcm_info_get_name@ALSA_0.9 1.0.16
 snd_pcm_info_get_stream@ALSA_0.9 1.0.16
 snd_pcm_info_get_subclass@ALSA_0.9 1.0.16
 snd_pcm_info_get_subdevice@ALSA_0.9 1.0.16
 snd_pcm_info_get_subdevice_name@ALSA_0.9 1.0.16
 snd_pcm_info_get_subdevices_avail@ALSA_0.9 1.0.16
 snd_pcm_info_get_subdevices_count@ALSA_0.9 1.0.16
 snd_pcm_info_get_sync@ALSA_0.9 1.0.16
 snd_pcm_info_malloc@ALSA_0.9 1.0.16
 snd_pcm_info_set_device@ALSA_0.9 1.0.16
 snd_pcm_info_set_stream@ALSA_0.9 1.0.16
 snd_pcm_info_set_subdevice@ALSA_0.9 1.0.16
 snd_pcm_info_sizeof@ALSA_0.9 1.0.16
 snd_pcm_ioplug_create@ALSA_0.9 1.0.16
 snd_pcm_ioplug_delete@ALSA_0.9 1.0.16
 snd_pcm_ioplug_mmap_areas@ALSA_0.9 1.0.16
 snd_pcm_ioplug_params_reset@ALSA_0.9 1.0.16
 snd_pcm_ioplug_reinit_status@ALSA_0.9 1.0.16
 snd_pcm_ioplug_set_param_list@ALSA_0.9 1.0.16
 snd_pcm_ioplug_set_param_minmax@ALSA_0.9 1.0.16
 snd_pcm_ioplug_set_state@ALSA_0.9 1.0.16
 snd_pcm_ladspa_open@ALSA_0.9 1.0.16
 snd_pcm_lfloat_convert_float_integer@ALSA_0.9 1.0.16
 snd_pcm_lfloat_convert_integer_float@ALSA_0.9 1.0.16
 snd_pcm_lfloat_get_s32_index@ALSA_0.9 1.0.16
 snd_pcm_lfloat_open@ALSA_0.9 1.0.16
 snd_pcm_lfloat_put_s32_index@ALSA_0.9 1.0.16
 snd_pcm_linear_open@ALSA_0.9 1.0.16
 snd_pcm_link@ALSA_0.9 1.0.16
 snd_pcm_meter_add_scope@ALSA_0.9 1.0.16
 snd_pcm_meter_get_boundary@ALSA_0.9 1.0.16
 snd_pcm_meter_get_bufsize@ALSA_0.9 1.0.16
 snd_pcm_meter_get_channels@ALSA_0.9 1.0.16
 snd_pcm_meter_get_now@ALSA_0.9 1.0.16
 snd_pcm_meter_get_rate@ALSA_0.9 1.0.16
 snd_pcm_meter_open@ALSA_0.9 1.0.16
 snd_pcm_meter_search_scope@ALSA_0.9 1.0.16
 snd_pcm_mmap@ALSA_0.9 1.0.16
 snd_pcm_mmap_begin@ALSA_0.9 1.0.16
 snd_pcm_mmap_commit@ALSA_0.9 1.0.16
 snd_pcm_mmap_readi@ALSA_0.9 1.0.16
 snd_pcm_mmap_readn@ALSA_0.9 1.0.16
 snd_pcm_mmap_writei@ALSA_0.9 1.0.16
 snd_pcm_mmap_writen@ALSA_0.9 1.0.16
 snd_pcm_mulaw_open@ALSA_0.9 1.0.16
 snd_pcm_multi_open@ALSA_0.9 1.0.16
 snd_pcm_munmap@ALSA_0.9 1.0.16
 snd_pcm_name@ALSA_0.9 1.0.16
 snd_pcm_nonblock@ALSA_0.9 1.0.16
 snd_pcm_null_open@ALSA_0.9 1.0.16
 snd_pcm_open@ALSA_0.9 1.0.16
 snd_pcm_open_fallback@ALSA_0.9 1.0.25
 snd_pcm_open_lconf@ALSA_0.9 1.0.16
 snd_pcm_parse_control_id@ALSA_0.9 1.0.16
 snd_pcm_pause@ALSA_0.9 1.0.16
 snd_pcm_plug_open@ALSA_0.9 1.0.16
 snd_pcm_poll_descriptors@ALSA_0.9 1.0.16
 snd_pcm_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_pcm_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_pcm_prepare@ALSA_0.9 1.0.16
 snd_pcm_query_chmaps@ALSA_0.9 1.0.27
 snd_pcm_query_chmaps_from_hw@ALSA_0.9 1.0.27
 snd_pcm_rate_open@ALSA_0.9 1.0.16
 snd_pcm_readi@ALSA_0.9 1.0.16
 snd_pcm_readn@ALSA_0.9 1.0.16
 snd_pcm_recover@ALSA_0.9 1.0.16
 snd_pcm_reset@ALSA_0.9 1.0.16
 snd_pcm_resume@ALSA_0.9 1.0.16
 snd_pcm_rewind@ALSA_0.9 1.0.16
 snd_pcm_rewindable@ALSA_0.9 1.0.17
 snd_pcm_route_determine_ttable@ALSA_0.9 1.0.16
 snd_pcm_route_load_ttable@ALSA_0.9 1.0.16
 snd_pcm_route_open@ALSA_0.9 1.0.16
 snd_pcm_samples_to_bytes@ALSA_0.9 1.0.16
 snd_pcm_scope_get_callback_private@ALSA_0.9 1.0.16
 snd_pcm_scope_get_name@ALSA_0.9 1.0.16
 snd_pcm_scope_malloc@ALSA_0.9 1.0.16
 snd_pcm_scope_s16_get_channel_buffer@ALSA_0.9 1.0.16
 snd_pcm_scope_s16_open@ALSA_0.9 1.0.16
 snd_pcm_scope_set_callback_private@ALSA_0.9 1.0.16
 snd_pcm_scope_set_name@ALSA_0.9 1.0.16
 snd_pcm_scope_set_ops@ALSA_0.9 1.0.16
 snd_pcm_set_chmap@ALSA_0.9 1.0.27
 snd_pcm_set_params@ALSA_0.9 1.0.16
 snd_pcm_share_open@ALSA_0.9 1.0.16
 snd_pcm_shm_open@ALSA_0.9 1.0.16
 snd_pcm_slave_conf@ALSA_0.9 1.0.16
 snd_pcm_softvol_open@ALSA_0.9 1.0.16
 snd_pcm_start@ALSA_0.9 1.0.16
 snd_pcm_start_mode_name@ALSA_0.9 1.0.16
 snd_pcm_state@ALSA_0.9 1.0.16
 snd_pcm_state_name@ALSA_0.9 1.0.16
 snd_pcm_status@ALSA_0.9 1.0.16
 snd_pcm_status_copy@ALSA_0.9 1.0.16
 snd_pcm_status_dump@ALSA_0.9 1.0.16
 snd_pcm_status_free@ALSA_0.9 1.0.16
 snd_pcm_status_get_audio_htstamp@ALSA_0.9 1.0.27
 snd_pcm_status_get_audio_htstamp_report@ALSA_0.9 1.1.0
 snd_pcm_status_get_avail@ALSA_0.9 1.0.16
 snd_pcm_status_get_avail_max@ALSA_0.9 1.0.16
 snd_pcm_status_get_delay@ALSA_0.9 1.0.16
 snd_pcm_status_get_driver_htstamp@ALSA_0.9 1.1.0
 snd_pcm_status_get_htstamp@ALSA_0.9.0rc8 1.0.16
 snd_pcm_status_get_overrange@ALSA_0.9 1.0.16
 snd_pcm_status_get_state@ALSA_0.9 1.0.16
 snd_pcm_status_get_trigger_htstamp@ALSA_0.9.0rc8 1.0.16
 snd_pcm_status_get_trigger_tstamp@ALSA_0.9 1.0.16
 snd_pcm_status_get_tstamp@ALSA_0.9 1.0.16
 snd_pcm_status_malloc@ALSA_0.9 1.0.16
 snd_pcm_status_set_audio_htstamp_config@ALSA_0.9 1.1.0
 snd_pcm_status_sizeof@ALSA_0.9 1.0.16
 snd_pcm_stream@ALSA_0.9 1.0.16
 snd_pcm_stream_name@ALSA_0.9 1.0.16
 snd_pcm_subformat_description@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_any@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_copy@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_empty@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_free@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_malloc@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_none@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_reset@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_set@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_sizeof@ALSA_0.9 1.0.16
 snd_pcm_subformat_mask_test@ALSA_0.9 1.0.16
 snd_pcm_subformat_name@ALSA_0.9 1.0.16
 snd_pcm_sw_params@ALSA_0.9 1.0.16
 snd_pcm_sw_params_copy@ALSA_0.9 1.0.16
 snd_pcm_sw_params_current@ALSA_0.9 1.0.16
 snd_pcm_sw_params_dump@ALSA_0.9 1.0.16
 snd_pcm_sw_params_free@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_avail_min@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_avail_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_boundary@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_period_event@ALSA_0.9 1.0.17
 snd_pcm_sw_params_get_silence_size@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_silence_size@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_silence_threshold@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_silence_threshold@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_sleep_min@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_sleep_min@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_start_mode@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_start_threshold@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_start_threshold@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_stop_threshold@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_stop_threshold@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_tstamp_mode@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_tstamp_mode@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_tstamp_type@ALSA_0.9 1.0.29
 snd_pcm_sw_params_get_xfer_align@ALSA_0.9 1.0.16
 snd_pcm_sw_params_get_xfer_align@ALSA_0.9.0rc4 1.0.16
 snd_pcm_sw_params_get_xrun_mode@ALSA_0.9 1.0.16
 snd_pcm_sw_params_malloc@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_avail_min@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_period_event@ALSA_0.9 1.0.17
 snd_pcm_sw_params_set_silence_size@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_silence_threshold@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_sleep_min@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_start_mode@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_start_threshold@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_stop_threshold@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_tstamp_mode@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_tstamp_type@ALSA_0.9 1.0.29
 snd_pcm_sw_params_set_xfer_align@ALSA_0.9 1.0.16
 snd_pcm_sw_params_set_xrun_mode@ALSA_0.9 1.0.16
 snd_pcm_sw_params_sizeof@ALSA_0.9 1.0.16
 snd_pcm_tstamp_mode_name@ALSA_0.9 1.0.16
 snd_pcm_tstamp_type_name@ALSA_0.9 1.0.29
 snd_pcm_type@ALSA_0.9 1.0.16
 snd_pcm_type_name@ALSA_0.9.0 1.0.16
 snd_pcm_unlink@ALSA_0.9 1.0.16
 snd_pcm_wait@ALSA_0.9 1.0.16
 snd_pcm_writei@ALSA_0.9 1.0.16
 snd_pcm_writen@ALSA_0.9 1.0.16
 snd_pcm_xrun_mode_name@ALSA_0.9 1.0.16
 snd_rawmidi_close@ALSA_0.9 1.0.16
 snd_rawmidi_drain@ALSA_0.9 1.0.16
 snd_rawmidi_drop@ALSA_0.9 1.0.16
 snd_rawmidi_hw_open@ALSA_0.9 1.0.16
 snd_rawmidi_info@ALSA_0.9 1.0.16
 snd_rawmidi_info_copy@ALSA_0.9 1.0.16
 snd_rawmidi_info_free@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_card@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_device@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_flags@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_id@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_name@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_stream@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_subdevice@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_subdevice_name@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_subdevices_avail@ALSA_0.9 1.0.16
 snd_rawmidi_info_get_subdevices_count@ALSA_0.9 1.0.16
 snd_rawmidi_info_malloc@ALSA_0.9 1.0.16
 snd_rawmidi_info_set_device@ALSA_0.9 1.0.16
 snd_rawmidi_info_set_stream@ALSA_0.9 1.0.16
 snd_rawmidi_info_set_subdevice@ALSA_0.9 1.0.16
 snd_rawmidi_info_sizeof@ALSA_0.9 1.0.16
 snd_rawmidi_name@ALSA_0.9 1.0.16
 snd_rawmidi_nonblock@ALSA_0.9 1.0.16
 snd_rawmidi_open@ALSA_0.9 1.0.16
 snd_rawmidi_open_lconf@ALSA_0.9 1.0.16
 snd_rawmidi_params@ALSA_0.9 1.0.16
 snd_rawmidi_params_copy@ALSA_0.9 1.0.16
 snd_rawmidi_params_current@ALSA_0.9 1.0.16
 snd_rawmidi_params_free@ALSA_0.9 1.0.16
 snd_rawmidi_params_get_avail_min@ALSA_0.9 1.0.16
 snd_rawmidi_params_get_buffer_size@ALSA_0.9 1.0.16
 snd_rawmidi_params_get_no_active_sensing@ALSA_0.9 1.0.16
 snd_rawmidi_params_malloc@ALSA_0.9 1.0.16
 snd_rawmidi_params_set_avail_min@ALSA_0.9 1.0.16
 snd_rawmidi_params_set_buffer_size@ALSA_0.9 1.0.16
 snd_rawmidi_params_set_no_active_sensing@ALSA_0.9 1.0.16
 snd_rawmidi_params_sizeof@ALSA_0.9 1.0.16
 snd_rawmidi_poll_descriptors@ALSA_0.9 1.0.16
 snd_rawmidi_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_rawmidi_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_rawmidi_read@ALSA_0.9 1.0.16
 snd_rawmidi_status@ALSA_0.9 1.0.16
 snd_rawmidi_status_copy@ALSA_0.9 1.0.16
 snd_rawmidi_status_free@ALSA_0.9 1.0.16
 snd_rawmidi_status_get_avail@ALSA_0.9 1.0.16
 snd_rawmidi_status_get_tstamp@ALSA_0.9 1.0.16
 snd_rawmidi_status_get_xruns@ALSA_0.9 1.0.16
 snd_rawmidi_status_malloc@ALSA_0.9 1.0.16
 snd_rawmidi_status_sizeof@ALSA_0.9 1.0.16
 snd_rawmidi_stream@ALSA_0.9 1.0.16
 snd_rawmidi_type@ALSA_0.9 1.0.16
 snd_rawmidi_virtual_open@ALSA_0.9 1.0.16
 snd_rawmidi_write@ALSA_0.9 1.0.16
 snd_receive_fd@ALSA_0.9 1.0.16
 snd_sctl_build@ALSA_0.9 1.0.16
 snd_sctl_free@ALSA_0.9 1.0.16
 snd_sctl_install@ALSA_0.9 1.0.16
 snd_sctl_remove@ALSA_0.9 1.0.16
 snd_send_fd@ALSA_0.9 1.0.16
 snd_seq_alloc_named_queue@ALSA_0.9 1.0.16
 snd_seq_alloc_queue@ALSA_0.9 1.0.16
 snd_seq_change_bit@ALSA_0.9 1.0.16
 snd_seq_client_id@ALSA_0.9 1.0.16
 snd_seq_client_info_copy@ALSA_0.9 1.0.16
 snd_seq_client_info_event_filter_add@ALSA_0.9 1.0.17
 snd_seq_client_info_event_filter_check@ALSA_0.9 1.0.17
 snd_seq_client_info_event_filter_clear@ALSA_0.9 1.0.17
 snd_seq_client_info_event_filter_del@ALSA_0.9 1.0.17
 snd_seq_client_info_free@ALSA_0.9 1.0.16
 snd_seq_client_info_get_broadcast_filter@ALSA_0.9 1.0.16
 snd_seq_client_info_get_card@ALSA_0.9 1.1.1
 snd_seq_client_info_get_client@ALSA_0.9 1.0.16
 snd_seq_client_info_get_error_bounce@ALSA_0.9 1.0.16
 snd_seq_client_info_get_event_filter@ALSA_0.9 1.0.16
 snd_seq_client_info_get_event_lost@ALSA_0.9 1.0.16
 snd_seq_client_info_get_name@ALSA_0.9 1.0.16
 snd_seq_client_info_get_num_ports@ALSA_0.9 1.0.16
 snd_seq_client_info_get_pid@ALSA_0.9 1.1.1
 snd_seq_client_info_get_type@ALSA_0.9 1.0.16
 snd_seq_client_info_malloc@ALSA_0.9 1.0.16
 snd_seq_client_info_set_broadcast_filter@ALSA_0.9 1.0.16
 snd_seq_client_info_set_client@ALSA_0.9 1.0.16
 snd_seq_client_info_set_error_bounce@ALSA_0.9 1.0.16
 snd_seq_client_info_set_event_filter@ALSA_0.9 1.0.16
 snd_seq_client_info_set_name@ALSA_0.9 1.0.16
 snd_seq_client_info_sizeof@ALSA_0.9 1.0.16
 snd_seq_client_pool_copy@ALSA_0.9 1.0.16
 snd_seq_client_pool_free@ALSA_0.9 1.0.16
 snd_seq_client_pool_get_client@ALSA_0.9 1.0.16
 snd_seq_client_pool_get_input_free@ALSA_0.9 1.0.16
 snd_seq_client_pool_get_input_pool@ALSA_0.9 1.0.16
 snd_seq_client_pool_get_output_free@ALSA_0.9 1.0.16
 snd_seq_client_pool_get_output_pool@ALSA_0.9 1.0.16
 snd_seq_client_pool_get_output_room@ALSA_0.9 1.0.16
 snd_seq_client_pool_malloc@ALSA_0.9 1.0.16
 snd_seq_client_pool_set_input_pool@ALSA_0.9 1.0.16
 snd_seq_client_pool_set_output_pool@ALSA_0.9 1.0.16
 snd_seq_client_pool_set_output_room@ALSA_0.9 1.0.16
 snd_seq_client_pool_sizeof@ALSA_0.9 1.0.16
 snd_seq_close@ALSA_0.9 1.0.16
 snd_seq_connect_from@ALSA_0.9 1.0.16
 snd_seq_connect_to@ALSA_0.9 1.0.16
 snd_seq_control_queue@ALSA_0.9 1.0.16
 snd_seq_create_event@ALSA_0.9 1.0.16
 snd_seq_create_port@ALSA_0.9 1.0.16
 snd_seq_create_queue@ALSA_0.9 1.0.16
 snd_seq_create_simple_port@ALSA_0.9 1.0.16
 snd_seq_delete_port@ALSA_0.9 1.0.16
 snd_seq_delete_simple_port@ALSA_0.9 1.0.16
 snd_seq_disconnect_from@ALSA_0.9 1.0.16
 snd_seq_disconnect_to@ALSA_0.9 1.0.16
 snd_seq_drain_output@ALSA_0.9 1.0.16
 snd_seq_drop_input@ALSA_0.9 1.0.16
 snd_seq_drop_input_buffer@ALSA_0.9 1.0.16
 snd_seq_drop_output@ALSA_0.9 1.0.16
 snd_seq_drop_output_buffer@ALSA_0.9 1.0.16
 snd_seq_event_input@ALSA_0.9 1.0.16
 snd_seq_event_input_pending@ALSA_0.9 1.0.16
 snd_seq_event_length@ALSA_0.9 1.0.16
 snd_seq_event_output@ALSA_0.9 1.0.16
 snd_seq_event_output_buffer@ALSA_0.9 1.0.16
 snd_seq_event_output_direct@ALSA_0.9 1.0.16
 snd_seq_event_output_pending@ALSA_0.9 1.0.16
 snd_seq_event_types@ALSA_0.9 1.0.16
 snd_seq_extract_output@ALSA_0.9 1.0.16
 snd_seq_free_event@ALSA_0.9 1.0.16
 snd_seq_free_queue@ALSA_0.9 1.0.16
 snd_seq_get_any_client_info@ALSA_0.9 1.0.16
 snd_seq_get_any_port_info@ALSA_0.9 1.0.16
 snd_seq_get_bit@ALSA_0.9 1.0.16
 snd_seq_get_client_info@ALSA_0.9 1.0.16
 snd_seq_get_client_pool@ALSA_0.9 1.0.16
 snd_seq_get_input_buffer_size@ALSA_0.9 1.0.16
 snd_seq_get_output_buffer_size@ALSA_0.9 1.0.16
 snd_seq_get_port_info@ALSA_0.9 1.0.16
 snd_seq_get_port_subscription@ALSA_0.9 1.0.16
 snd_seq_get_queue_info@ALSA_0.9 1.0.16
 snd_seq_get_queue_status@ALSA_0.9 1.0.16
 snd_seq_get_queue_tempo@ALSA_0.9 1.0.16
 snd_seq_get_queue_timer@ALSA_0.9 1.0.16
 snd_seq_get_queue_usage@ALSA_0.9 1.0.16
 snd_seq_hw_open@ALSA_0.9 1.0.16
 snd_seq_name@ALSA_0.9 1.0.16
 snd_seq_nonblock@ALSA_0.9 1.0.16
 snd_seq_open@ALSA_0.9 1.0.16
 snd_seq_open_lconf@ALSA_0.9 1.0.16
 snd_seq_parse_address@ALSA_0.9 1.0.16
 snd_seq_poll_descriptors@ALSA_0.9 1.0.16
 snd_seq_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_seq_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_seq_port_info_copy@ALSA_0.9 1.0.16
 snd_seq_port_info_free@ALSA_0.9 1.0.16
 snd_seq_port_info_get_addr@ALSA_0.9 1.0.16
 snd_seq_port_info_get_capability@ALSA_0.9 1.0.16
 snd_seq_port_info_get_client@ALSA_0.9 1.0.16
 snd_seq_port_info_get_midi_channels@ALSA_0.9 1.0.16
 snd_seq_port_info_get_midi_voices@ALSA_0.9 1.0.16
 snd_seq_port_info_get_name@ALSA_0.9 1.0.16
 snd_seq_port_info_get_port@ALSA_0.9 1.0.16
 snd_seq_port_info_get_port_specified@ALSA_0.9 1.0.16
 snd_seq_port_info_get_read_use@ALSA_0.9 1.0.16
 snd_seq_port_info_get_synth_voices@ALSA_0.9 1.0.16
 snd_seq_port_info_get_timestamp_queue@ALSA_0.9 1.0.16
 snd_seq_port_info_get_timestamp_real@ALSA_0.9 1.0.16
 snd_seq_port_info_get_timestamping@ALSA_0.9 1.0.16
 snd_seq_port_info_get_type@ALSA_0.9 1.0.16
 snd_seq_port_info_get_write_use@ALSA_0.9 1.0.16
 snd_seq_port_info_malloc@ALSA_0.9 1.0.16
 snd_seq_port_info_set_addr@ALSA_0.9 1.0.16
 snd_seq_port_info_set_capability@ALSA_0.9 1.0.16
 snd_seq_port_info_set_client@ALSA_0.9 1.0.16
 snd_seq_port_info_set_midi_channels@ALSA_0.9 1.0.16
 snd_seq_port_info_set_midi_voices@ALSA_0.9 1.0.16
 snd_seq_port_info_set_name@ALSA_0.9 1.0.16
 snd_seq_port_info_set_port@ALSA_0.9 1.0.16
 snd_seq_port_info_set_port_specified@ALSA_0.9 1.0.16
 snd_seq_port_info_set_synth_voices@ALSA_0.9 1.0.16
 snd_seq_port_info_set_timestamp_queue@ALSA_0.9 1.0.16
 snd_seq_port_info_set_timestamp_real@ALSA_0.9 1.0.16
 snd_seq_port_info_set_timestamping@ALSA_0.9 1.0.16
 snd_seq_port_info_set_type@ALSA_0.9 1.0.16
 snd_seq_port_info_sizeof@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_copy@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_free@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_get_dest@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_get_exclusive@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_get_queue@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_get_sender@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_get_time_real@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_get_time_update@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_malloc@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_set_dest@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_set_exclusive@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_set_queue@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_set_sender@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_set_time_real@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_set_time_update@ALSA_0.9 1.0.16
 snd_seq_port_subscribe_sizeof@ALSA_0.9 1.0.16
 snd_seq_query_named_queue@ALSA_0.9 1.0.16
 snd_seq_query_next_client@ALSA_0.9 1.0.16
 snd_seq_query_next_port@ALSA_0.9 1.0.16
 snd_seq_query_port_subscribers@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_copy@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_free@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_addr@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_client@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_exclusive@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_index@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_num_subs@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_port@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_queue@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_root@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_time_real@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_time_update@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_get_type@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_malloc@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_set_client@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_set_index@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_set_port@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_set_root@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_set_type@ALSA_0.9 1.0.16
 snd_seq_query_subscribe_sizeof@ALSA_0.9 1.0.16
 snd_seq_queue_info_copy@ALSA_0.9 1.0.16
 snd_seq_queue_info_free@ALSA_0.9 1.0.16
 snd_seq_queue_info_get_flags@ALSA_0.9 1.0.16
 snd_seq_queue_info_get_locked@ALSA_0.9 1.0.16
 snd_seq_queue_info_get_name@ALSA_0.9 1.0.16
 snd_seq_queue_info_get_owner@ALSA_0.9 1.0.16
 snd_seq_queue_info_get_queue@ALSA_0.9 1.0.16
 snd_seq_queue_info_malloc@ALSA_0.9 1.0.16
 snd_seq_queue_info_set_flags@ALSA_0.9 1.0.16
 snd_seq_queue_info_set_locked@ALSA_0.9 1.0.16
 snd_seq_queue_info_set_name@ALSA_0.9 1.0.16
 snd_seq_queue_info_set_owner@ALSA_0.9 1.0.16
 snd_seq_queue_info_sizeof@ALSA_0.9 1.0.16
 snd_seq_queue_status_copy@ALSA_0.9 1.0.16
 snd_seq_queue_status_free@ALSA_0.9 1.0.16
 snd_seq_queue_status_get_events@ALSA_0.9 1.0.16
 snd_seq_queue_status_get_queue@ALSA_0.9 1.0.16
 snd_seq_queue_status_get_real_time@ALSA_0.9 1.0.16
 snd_seq_queue_status_get_status@ALSA_0.9 1.0.16
 snd_seq_queue_status_get_tick_time@ALSA_0.9 1.0.16
 snd_seq_queue_status_malloc@ALSA_0.9 1.0.16
 snd_seq_queue_status_sizeof@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_copy@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_free@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_get_ppq@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_get_queue@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_get_skew@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_get_skew_base@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_get_tempo@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_malloc@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_set_ppq@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_set_skew@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_set_skew_base@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_set_tempo@ALSA_0.9 1.0.16
 snd_seq_queue_tempo_sizeof@ALSA_0.9 1.0.16
 snd_seq_queue_timer_copy@ALSA_0.9 1.0.16
 snd_seq_queue_timer_free@ALSA_0.9 1.0.16
 snd_seq_queue_timer_get_id@ALSA_0.9 1.0.16
 snd_seq_queue_timer_get_queue@ALSA_0.9 1.0.16
 snd_seq_queue_timer_get_resolution@ALSA_0.9 1.0.16
 snd_seq_queue_timer_get_type@ALSA_0.9 1.0.16
 snd_seq_queue_timer_malloc@ALSA_0.9 1.0.16
 snd_seq_queue_timer_set_id@ALSA_0.9 1.0.16
 snd_seq_queue_timer_set_resolution@ALSA_0.9 1.0.16
 snd_seq_queue_timer_set_type@ALSA_0.9 1.0.16
 snd_seq_queue_timer_sizeof@ALSA_0.9 1.0.16
 snd_seq_remove_events@ALSA_0.9 1.0.16
 snd_seq_remove_events_copy@ALSA_0.9 1.0.16
 snd_seq_remove_events_free@ALSA_0.9 1.0.16
 snd_seq_remove_events_get_channel@ALSA_0.9 1.0.16
 snd_seq_remove_events_get_condition@ALSA_0.9 1.0.16
 snd_seq_remove_events_get_dest@ALSA_0.9 1.0.16
 snd_seq_remove_events_get_event_type@ALSA_0.9 1.0.16
 snd_seq_remove_events_get_queue@ALSA_0.9 1.0.16
 snd_seq_remove_events_get_tag@ALSA_0.9 1.0.16
 snd_seq_remove_events_get_time@ALSA_0.9 1.0.16
 snd_seq_remove_events_malloc@ALSA_0.9 1.0.16
 snd_seq_remove_events_set_channel@ALSA_0.9 1.0.16
 snd_seq_remove_events_set_condition@ALSA_0.9 1.0.16
 snd_seq_remove_events_set_dest@ALSA_0.9 1.0.16
 snd_seq_remove_events_set_event_type@ALSA_0.9 1.0.16
 snd_seq_remove_events_set_queue@ALSA_0.9 1.0.16
 snd_seq_remove_events_set_tag@ALSA_0.9 1.0.16
 snd_seq_remove_events_set_time@ALSA_0.9 1.0.16
 snd_seq_remove_events_sizeof@ALSA_0.9 1.0.16
 snd_seq_reset_pool_input@ALSA_0.9 1.0.16
 snd_seq_reset_pool_output@ALSA_0.9 1.0.16
 snd_seq_set_bit@ALSA_0.9 1.0.16
 snd_seq_set_client_event_filter@ALSA_0.9 1.0.16
 snd_seq_set_client_info@ALSA_0.9 1.0.16
 snd_seq_set_client_name@ALSA_0.9 1.0.16
 snd_seq_set_client_pool@ALSA_0.9 1.0.16
 snd_seq_set_client_pool_input@ALSA_0.9 1.0.16
 snd_seq_set_client_pool_output@ALSA_0.9 1.0.16
 snd_seq_set_client_pool_output_room@ALSA_0.9 1.0.16
 snd_seq_set_input_buffer_size@ALSA_0.9 1.0.16
 snd_seq_set_output_buffer_size@ALSA_0.9 1.0.16
 snd_seq_set_port_info@ALSA_0.9 1.0.16
 snd_seq_set_queue_info@ALSA_0.9 1.0.16
 snd_seq_set_queue_tempo@ALSA_0.9 1.0.16
 snd_seq_set_queue_timer@ALSA_0.9 1.0.16
 snd_seq_set_queue_usage@ALSA_0.9 1.0.16
 snd_seq_subscribe_port@ALSA_0.9 1.0.16
 snd_seq_sync_output_queue@ALSA_0.9 1.0.16
 snd_seq_system_info@ALSA_0.9 1.0.16
 snd_seq_system_info_copy@ALSA_0.9 1.0.16
 snd_seq_system_info_free@ALSA_0.9 1.0.16
 snd_seq_system_info_get_channels@ALSA_0.9 1.0.16
 snd_seq_system_info_get_clients@ALSA_0.9 1.0.16
 snd_seq_system_info_get_cur_clients@ALSA_0.9 1.0.16
 snd_seq_system_info_get_cur_queues@ALSA_0.9 1.0.16
 snd_seq_system_info_get_ports@ALSA_0.9 1.0.16
 snd_seq_system_info_get_queues@ALSA_0.9 1.0.16
 snd_seq_system_info_malloc@ALSA_0.9 1.0.16
 snd_seq_system_info_sizeof@ALSA_0.9 1.0.16
 snd_seq_type@ALSA_0.9 1.0.16
 snd_seq_unset_bit@ALSA_0.9 1.0.17
 snd_seq_unsubscribe_port@ALSA_0.9 1.0.16
 snd_shm_area_create@ALSA_0.9 1.0.16
 snd_shm_area_destroy@ALSA_0.9 1.0.16
 snd_shm_area_destructor@ALSA_0.9 1.0.16
 snd_shm_area_share@ALSA_0.9 1.0.16
 snd_spcm_init@ALSA_0.9 1.0.16
 snd_spcm_init_duplex@ALSA_0.9 1.0.16
 snd_spcm_init_get_params@ALSA_0.9 1.0.16
 snd_strerror@ALSA_0.9 1.0.16
 snd_timer_async@ALSA_0.9 1.0.16
 snd_timer_close@ALSA_0.9 1.0.16
 snd_timer_continue@ALSA_0.9 1.0.16
 snd_timer_ginfo_copy@ALSA_0.9 1.0.16
 snd_timer_ginfo_free@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_card@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_clients@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_flags@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_id@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_name@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_resolution@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_resolution_max@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_resolution_min@ALSA_0.9 1.0.16
 snd_timer_ginfo_get_tid@ALSA_0.9 1.0.16
 snd_timer_ginfo_malloc@ALSA_0.9 1.0.16
 snd_timer_ginfo_set_tid@ALSA_0.9 1.0.16
 snd_timer_ginfo_sizeof@ALSA_0.9 1.0.16
 snd_timer_hw_open@ALSA_0.9 1.0.16
 snd_timer_id_copy@ALSA_0.9 1.0.16
 snd_timer_id_free@ALSA_0.9 1.0.16
 snd_timer_id_get_card@ALSA_0.9 1.0.16
 snd_timer_id_get_class@ALSA_0.9 1.0.16
 snd_timer_id_get_device@ALSA_0.9 1.0.16
 snd_timer_id_get_sclass@ALSA_0.9 1.0.16
 snd_timer_id_get_subdevice@ALSA_0.9 1.0.16
 snd_timer_id_malloc@ALSA_0.9 1.0.16
 snd_timer_id_set_card@ALSA_0.9 1.0.16
 snd_timer_id_set_class@ALSA_0.9 1.0.16
 snd_timer_id_set_device@ALSA_0.9 1.0.16
 snd_timer_id_set_sclass@ALSA_0.9 1.0.16
 snd_timer_id_set_subdevice@ALSA_0.9 1.0.16
 snd_timer_id_sizeof@ALSA_0.9 1.0.16
 snd_timer_info@ALSA_0.9 1.0.16
 snd_timer_info_copy@ALSA_0.9 1.0.16
 snd_timer_info_free@ALSA_0.9 1.0.16
 snd_timer_info_get_card@ALSA_0.9 1.0.16
 snd_timer_info_get_id@ALSA_0.9 1.0.16
 snd_timer_info_get_name@ALSA_0.9 1.0.16
 snd_timer_info_get_resolution@ALSA_0.9 1.0.16
 snd_timer_info_get_ticks@ALSA_0.9 1.0.16
 snd_timer_info_is_slave@ALSA_0.9 1.0.16
 snd_timer_info_malloc@ALSA_0.9 1.0.16
 snd_timer_info_sizeof@ALSA_0.9 1.0.16
 snd_timer_name@ALSA_0.9 1.0.16
 snd_timer_nonblock@ALSA_0.9 1.0.16
 snd_timer_open@ALSA_0.9 1.0.16
 snd_timer_open_lconf@ALSA_0.9 1.0.16
 snd_timer_params@ALSA_0.9 1.0.16
 snd_timer_params_copy@ALSA_0.9 1.0.16
 snd_timer_params_free@ALSA_0.9 1.0.16
 snd_timer_params_get_auto_start@ALSA_0.9 1.0.16
 snd_timer_params_get_early_event@ALSA_0.9 1.0.16
 snd_timer_params_get_exclusive@ALSA_0.9.0 1.0.16
 snd_timer_params_get_filter@ALSA_0.9.0 1.0.16
 snd_timer_params_get_queue_size@ALSA_0.9 1.0.16
 snd_timer_params_get_ticks@ALSA_0.9 1.0.16
 snd_timer_params_malloc@ALSA_0.9 1.0.16
 snd_timer_params_set_auto_start@ALSA_0.9 1.0.16
 snd_timer_params_set_early_event@ALSA_0.9 1.0.16
 snd_timer_params_set_exclusive@ALSA_0.9.0 1.0.16
 snd_timer_params_set_filter@ALSA_0.9.0 1.0.16
 snd_timer_params_set_queue_size@ALSA_0.9 1.0.16
 snd_timer_params_set_ticks@ALSA_0.9 1.0.16
 snd_timer_params_sizeof@ALSA_0.9 1.0.16
 snd_timer_poll_descriptors@ALSA_0.9 1.0.16
 snd_timer_poll_descriptors_count@ALSA_0.9 1.0.16
 snd_timer_poll_descriptors_revents@ALSA_0.9 1.0.16
 snd_timer_query_close@ALSA_0.9 1.0.16
 snd_timer_query_hw_open@ALSA_0.9 1.0.16
 snd_timer_query_info@ALSA_0.9.0 1.0.16
 snd_timer_query_next_device@ALSA_0.9 1.0.16
 snd_timer_query_open@ALSA_0.9 1.0.16
 snd_timer_query_open_lconf@ALSA_0.9 1.0.16
 snd_timer_query_params@ALSA_0.9.0 1.0.16
 snd_timer_query_status@ALSA_0.9.0 1.0.16
 snd_timer_read@ALSA_0.9 1.0.16
 snd_timer_start@ALSA_0.9 1.0.16
 snd_timer_status@ALSA_0.9 1.0.16
 snd_timer_status_copy@ALSA_0.9 1.0.16
 snd_timer_status_free@ALSA_0.9 1.0.16
 snd_timer_status_get_lost@ALSA_0.9 1.0.16
 snd_timer_status_get_overrun@ALSA_0.9 1.0.16
 snd_timer_status_get_queue@ALSA_0.9 1.0.16
 snd_timer_status_get_resolution@ALSA_0.9 1.0.16
 snd_timer_status_get_timestamp@ALSA_0.9 1.0.16
 snd_timer_status_malloc@ALSA_0.9 1.0.16
 snd_timer_status_sizeof@ALSA_0.9 1.0.16
 snd_timer_stop@ALSA_0.9 1.0.16
 snd_timer_type@ALSA_0.9 1.0.16
 snd_tlv_convert_from_dB@ALSA_0.9 1.0.16
 snd_tlv_convert_to_dB@ALSA_0.9 1.0.16
 snd_tlv_get_dB_range@ALSA_0.9 1.0.16
 snd_tlv_parse_dB_info@ALSA_0.9 1.0.16
 snd_tplg_add_object@ALSA_0.9 1.1.0
 snd_tplg_build@ALSA_0.9 1.1.0
 snd_tplg_build_file@ALSA_0.9 1.1.0
 snd_tplg_free@ALSA_0.9 1.1.0
 snd_tplg_new@ALSA_0.9 1.1.0
 snd_tplg_set_manifest_data@ALSA_0.9 1.1.0
 snd_tplg_set_version@ALSA_0.9 1.1.0
 snd_tplg_verbose@ALSA_0.9 1.1.0
 snd_use_case_free_list@ALSA_0.9 1.0.24.1
 snd_use_case_get@ALSA_0.9 1.0.24.1
 snd_use_case_get_list@ALSA_0.9 1.0.24.1
 snd_use_case_geti@ALSA_0.9 1.0.24.1
 snd_use_case_identifier@ALSA_0.9 1.0.24.1
 snd_use_case_mgr_close@ALSA_0.9 1.0.24.1
 snd_use_case_mgr_open@ALSA_0.9 1.0.24.1
 snd_use_case_mgr_reload@ALSA_0.9 1.0.24.1
 snd_use_case_mgr_reset@ALSA_0.9 1.0.24.1
 snd_use_case_set@ALSA_0.9 1.0.24.1
 snd_user_file@ALSA_0.9 1.0.16
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Intel Low Power Subsystem clocks.
 *
 * Copyright (C) 2013, Intel Corporation
 * Authors: Mika Westerberg <mika.westerberg@linux.intel.com>
 *          Rafael J. Wysocki <rafael.j.wysocki@intel.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __CLK_LPSS_H
#define __CLK_LPSS_H

struct lpss_clk_data {
	const char *name;
	struct clk *clk;
};

extern int lpt_clk_init(void);

#endif /* __CLK_LPSS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 *  MMP Platform AUDIO Management
 *
 *  Copyright (c) 2011 Marvell Semiconductors Inc.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 */

#ifndef MMP_AUDIO_H
#define MMP_AUDIO_H

struct mmp_audio_platdata {
	u32 period_max_capture;
	u32 buffer_max_capture;
	u32 period_max_playback;
	u32 buffer_max_playback;
};

#endif /* MMP_AUDIO_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * AD7887 SPI ADC driver
 *
 * Copyright 2010 Analog Devices Inc.
 *
 * Licensed under the GPL-2 or later.
 */
#ifndef IIO_ADC_AD7887_H_
#define IIO_ADC_AD7887_H_

/**
 * struct ad7887_platform_data - AD7887 ADC driver platform data
 * @en_dual: Whether to use dual channel mode. If set to true AIN1 becomes the
 *	second input channel, and Vref is internally connected to Vdd. If set to
 *	false the device is used in single channel mode and AIN1/Vref is used as
 *	VREF input.
 * @use_onchip_ref: Whether to use the onchip reference. If set to true the
 *	internal 2.5V reference is used. If set to false a external reference is
 *	used.
 */
struct ad7887_platform_data {
	bool en_dual;
	bool use_onchip_ref;
};

#endif /* IIO_ADC_AD7887_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * Definitions for TI EMIF device platform data
 *
 * Copyright (C) 2012 Texas Instruments, Inc.
 *
 * Aneesh V <aneesh@ti.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __EMIF_PLAT_H
#define __EMIF_PLAT_H

/* Low power modes - EMIF_PWR_MGMT_CTRL */
#define EMIF_LP_MODE_DISABLE				0
#define EMIF_LP_MODE_CLOCK_STOP				1
#define EMIF_LP_MODE_SELF_REFRESH			2
#define EMIF_LP_MODE_PWR_DN				4

/* Hardware capabilities */
#define	EMIF_HW_CAPS_LL_INTERFACE			0x00000001

/*
 * EMIF IP Revisions
 *	EMIF4D  - Used in OMAP4
 *	EMIF4D5 - Used in OMAP5
 */
#define	EMIF_4D						1
#define	EMIF_4D5					2

/*
 * PHY types
 *	ATTILAPHY  - Used in OMAP4
 *	INTELLIPHY - Used in OMAP5
 */
#define	EMIF_PHY_TYPE_ATTILAPHY				1
#define	EMIF_PHY_TYPE_INTELLIPHY			2

/* Custom config requests */
#define EMIF_CUSTOM_CONFIG_LPMODE			0x00000001
#define EMIF_CUSTOM_CONFIG_TEMP_ALERT_POLL_INTERVAL	0x00000002
#define EMIF_CUSTOM_CONFIG_EXTENDED_TEMP_PART		0x00000004

#ifndef __ASSEMBLY__
/**
 * struct ddr_device_info - All information about the DDR device except AC
 *		timing parameters
 * @type:	Device type (LPDDR2-S4, LPDDR2-S2 etc)
 * @density:	Device density
 * @io_width:	Bus width
 * @cs1_used:	Whether there is a DDR device attached to the second
 *		chip-select(CS1) of this EMIF instance
 * @cal_resistors_per_cs: Whether there is one calibration resistor per
 *		chip-select or whether it's a single one for both
 * @manufacturer: Manufacturer name string
 */
struct ddr_device_info {
	u32	type;
	u32	density;
	u32	io_width;
	u32	cs1_used;
	u32	cal_resistors_per_cs;
	char	manufacturer[10];
};

/**
 * struct emif_custom_configs - Custom configuration parameters/policies
 *		passed from the platform layer
 * @mask:	Mask to indicate which configs are requested
 * @lpmode:	LPMODE to be used in PWR_MGMT_CTRL register
 * @lpmode_timeout_performance: Timeout before LPMODE entry when higher
 *		performance is desired at the cost of power (typically
 *		at higher OPPs)
 * @lpmode_timeout_power: Timeout before LPMODE entry when better power
 *		savings is desired and performance is not important
 *		(typically at lower loads indicated by lower OPPs)
 * @lpmode_freq_threshold: The DDR frequency threshold to identify between
 *		the above two cases:
 *		timeout = (freq >= lpmode_freq_threshold) ?
 *			lpmode_timeout_performance :
 *			lpmode_timeout_power;
 * @temp_alert_poll_interval_ms: LPDDR2 MR4 polling interval at nominal
 *		temperature(in milliseconds). When temperature is high
 *		polling is done 4 times as frequently.
 */
struct emif_custom_configs {
	u32 mask;
	u32 lpmode;
	u32 lpmode_timeout_performance;
	u32 lpmode_timeout_power;
	u32 lpmode_freq_threshold;
	u32 temp_alert_poll_interval_ms;
};

/**
 * struct emif_platform_data - Platform data passed on EMIF platform
 *				device creation. Used by the driver.
 * @hw_caps:		Hw capabilities of the EMIF IP in the respective SoC
 * @device_info:	Device info structure containing information such
 *			as type, bus width, density etc
 * @timings:		Timings information from device datasheet passed
 *			as an array of 'struct lpddr2_timings'. Can be NULL
 *			if if default timings are ok
 * @timings_arr_size:	Size of the timings array. Depends on the number
 *			of different frequencies for which timings data
 *			is provided
 * @min_tck:		Minimum value of some timing parameters in terms
 *			of number of cycles. Can be NULL if default values
 *			are ok
 * @custom_configs:	Custom configurations requested by SoC or board
 *			code and the data for them. Can be NULL if default
 *			configurations done by the driver are ok. See
 *			documentation for 'struct emif_custom_configs' for
 *			more details
 */
struct emif_platform_data {
	u32 hw_caps;
	struct ddr_device_info *device_info;
	const struct lpddr2_timings *timings;
	u32 timings_arr_size;
	const struct lpddr2_min_tck *min_tck;
	struct emif_custom_configs *custom_configs;
	u32 ip_rev;
	u32 phy_type;
};
#endif /* __ASSEMBLY__ */

#endif /* __LINUX_EMIF_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #ifndef _ARCH_MCI_H
#define _ARCH_MCI_H

/**
 * struct s3c24xx_mci_pdata - sd/mmc controller platform data
 * @no_wprotect: Set this to indicate there is no write-protect switch.
 * @no_detect: Set this if there is no detect switch.
 * @wprotect_invert: Invert the default sense of the write protect switch.
 * @detect_invert: Invert the default sense of the write protect switch.
 * @use_dma: Set to allow the use of DMA.
 * @gpio_detect: GPIO number for the card detect line.
 * @gpio_wprotect: GPIO number for the write protect line.
 * @ocr_avail: The mask of the available power states, non-zero to use.
 * @set_power: Callback to control the power mode.
 *
 * The @gpio_detect is used for card detection when @no_wprotect is unset,
 * and the default sense is that 0 returned from gpio_get_value() means
 * that a card is inserted. If @detect_invert is set, then the value from
 * gpio_get_value() is inverted, which makes 1 mean card inserted.
 *
 * The driver will use @gpio_wprotect to signal whether the card is write
 * protected if @no_wprotect is not set. A 0 returned from gpio_get_value()
 * means the card is read/write, and 1 means read-only. The @wprotect_invert
 * will invert the value returned from gpio_get_value().
 *
 * Card power is set by @ocr_availa, using MCC_VDD_ constants if it is set
 * to a non-zero value, otherwise the default of 3.2-3.4V is used.
 */
struct s3c24xx_mci_pdata {
	unsigned int	no_wprotect:1;
	unsigned int	no_detect:1;
	unsigned int	wprotect_invert:1;
	unsigned int	detect_invert:1;	/* set => detect active high */
	unsigned int	use_dma:1;

	unsigned int	gpio_detect;
	unsigned int	gpio_wprotect;
	unsigned long	ocr_avail;
	void		(*set_power)(unsigned char power_mode,
				     unsigned short vdd);
};

/**
 * s3c24xx_mci_set_platdata - set platform data for mmc/sdi device
 * @pdata: The platform data
 *
 * Copy the platform data supplied by @pdata so that this can be marked
 * __initdata.
 */
extern void s3c24xx_mci_set_platdata(struct s3c24xx_mci_pdata *pdata);

#endif /* _ARCH_NCI_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * atmel platform data
 *
 * GPL v2 Only
 */

#ifndef __ATMEL_H__
#define __ATMEL_H__

#include <linux/mtd/nand.h>
#include <linux/mtd/partitions.h>
#include <linux/serial.h>

 /* Compact Flash */
struct at91_cf_data {
	int	irq_pin;		/* I/O IRQ */
	int	det_pin;		/* Card detect */
	int	vcc_pin;		/* power switching */
	int	rst_pin;		/* card reset */
	u8	chipselect;		/* EBI Chip Select number */
	u8	flags;
#define AT91_CF_TRUE_IDE	0x01
#define AT91_IDE_SWAP_A0_A2	0x02
};

 /* NAND / SmartMedia */
struct atmel_nand_data {
	int		enable_pin;		/* chip enable */
	int		det_pin;		/* card detect */
	int		rdy_pin;		/* ready/busy */
	u8		rdy_pin_active_low;	/* rdy_pin value is inverted */
	u8		ale;			/* address line number connected to ALE */
	u8		cle;			/* address line number connected to CLE */
	u8		bus_width_16;		/* buswidth is 16 bit */
	u8		ecc_mode;		/* ecc mode */
	u8		on_flash_bbt;		/* bbt on flash */
	struct mtd_partition *parts;
	unsigned int	num_parts;
	bool		has_dma;		/* support dma transfer */

	/* default is false, only for at32ap7000 chip is true */
	bool		need_reset_workaround;
};

 /* Serial */
struct atmel_uart_data {
	int			num;		/* port num */
	short			use_dma_tx;	/* use transmit DMA? */
	short			use_dma_rx;	/* use receive DMA? */
	void __iomem		*regs;		/* virt. base address, if any */
	struct serial_rs485	rs485;		/* rs485 settings */
};

/* FIXME: this needs a better location, but gets stuff building again */
extern int at91_suspend_entering_slow_clock(void);

#endif /* __ATMEL_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #ifndef __USB3503_H__
#define __USB3503_H__

#define USB3503_I2C_NAME	"usb3503"

#define USB3503_OFF_PORT1	(1 << 1)
#define USB3503_OFF_PORT2	(1 << 2)
#define USB3503_OFF_PORT3	(1 << 3)

enum usb3503_mode {
	USB3503_MODE_UNKNOWN,
	USB3503_MODE_HUB,
	USB3503_MODE_STANDBY,
};

struct usb3503_platform_data {
	enum usb3503_mode	initial_mode;
	u8	port_off_mask;
	int	gpio_intn;
	int	gpio_connect;
	int	gpio_reset;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 *  Copyright (C) 2006 Komal Shah <komal_shah802003@yahoo.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __KEYPAD_OMAP_H
#define __KEYPAD_OMAP_H

#ifndef CONFIG_ARCH_OMAP1
#warning Please update the board to use matrix-keypad driver
#define omap_readw(reg)		0
#define omap_writew(val, reg)	do {} while (0)
#endif
#include <linux/input/matrix_keypad.h>

struct omap_kp_platform_data {
	int rows;
	int cols;
	const struct matrix_keymap_data *keymap_data;
	bool rep;
	unsigned long delay;
	bool dbounce;
	/* specific to OMAP242x*/
	unsigned int *row_gpios;
	unsigned int *col_gpios;
};

/* Group (0..3) -- when multiple keys are pressed, only the
 * keys pressed in the same group are considered as pressed. This is
 * in order to workaround certain crappy HW designs that produce ghost
 * keypresses. Two free bits, not used by neither row/col nor keynum,
 * must be available for use as group bits. The below GROUP_SHIFT
 * macro definition is based on some prior knowledge of the
 * matrix_keypad defined KEY() macro internals.
 */
#define GROUP_SHIFT	14
#define GROUP_0		(0 << GROUP_SHIFT)
#define GROUP_1		(1 << GROUP_SHIFT)
#define GROUP_2		(2 << GROUP_SHIFT)
#define GROUP_3		(3 << GROUP_SHIFT)
#define GROUP_MASK	GROUP_3
#if KEY_MAX & GROUP_MASK
#error Group bits in conflict with keynum bits
#endif


#endif

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 * Copyright 2004-2009 Freescale Semiconductor, Inc. All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __ASM_ARCH_MXC_DMA_H__
#define __ASM_ARCH_MXC_DMA_H__

#include <linux/scatterlist.h>
#include <linux/device.h>
#include <linux/dmaengine.h>

/*
 * This enumerates peripheral types. Used for SDMA.
 */
enum sdma_peripheral_type {
	IMX_DMATYPE_SSI,	/* MCU domain SSI */
	IMX_DMATYPE_SSI_SP,	/* Shared SSI */
	IMX_DMATYPE_MMC,	/* MMC */
	IMX_DMATYPE_SDHC,	/* SDHC */
	IMX_DMATYPE_UART,	/* MCU domain UART */
	IMX_DMATYPE_UART_SP,	/* Shared UART */
	IMX_DMATYPE_FIRI,	/* FIRI */
	IMX_DMATYPE_CSPI,	/* MCU domain CSPI */
	IMX_DMATYPE_CSPI_SP,	/* Shared CSPI */
	IMX_DMATYPE_SIM,	/* SIM */
	IMX_DMATYPE_ATA,	/* ATA */
	IMX_DMATYPE_CCM,	/* CCM */
	IMX_DMATYPE_EXT,	/* External peripheral */
	IMX_DMATYPE_MSHC,	/* Memory Stick Host Controller */
	IMX_DMATYPE_MSHC_SP,	/* Shared Memory Stick Host Controller */
	IMX_DMATYPE_DSP,	/* DSP */
	IMX_DMATYPE_MEMORY,	/* Memory */
	IMX_DMATYPE_FIFO_MEMORY,/* FIFO type Memory */
	IMX_DMATYPE_SPDIF,	/* SPDIF */
	IMX_DMATYPE_IPU_MEMORY,	/* IPU Memory */
	IMX_DMATYPE_ASRC,	/* ASRC */
	IMX_DMATYPE_ESAI,	/* ESAI */
	IMX_DMATYPE_SSI_DUAL,	/* SSI Dual FIFO */
	IMX_DMATYPE_ASRC_SP,	/* Shared ASRC */
	IMX_DMATYPE_SAI,	/* SAI */
};

enum imx_dma_prio {
	DMA_PRIO_HIGH = 0,
	DMA_PRIO_MEDIUM = 1,
	DMA_PRIO_LOW = 2
};

struct imx_dma_data {
	int dma_request; /* DMA request line */
	int dma_request2; /* secondary DMA request line */
	enum sdma_peripheral_type peripheral_type;
	int priority;
};

static inline int imx_dma_is_ipu(struct dma_chan *chan)
{
	return !strcmp(dev_name(chan->device->dev), "ipu-core");
}

static inline int imx_dma_is_general_purpose(struct dma_chan *chan)
{
	return !strcmp(chan->device->dev->driver->name, "imx-sdma") ||
		!strcmp(chan->device->dev->driver->name, "imx-dma");
}

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Platform data structure for g762 fan controller driver
 *
 * Copyright (C) 2013, Arnaud EBALARD <arno@natisbad.org>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
#ifndef __LINUX_PLATFORM_DATA_G762_H__
#define __LINUX_PLATFORM_DATA_G762_H__

/*
 * Following structure can be used to set g762 driver platform specific data
 * during board init. Note that passing a sparse structure is possible but
 * will result in non-specified attributes to be set to default value, hence
 * overloading those installed during boot (e.g. by u-boot).
 */

struct g762_platform_data {
	u32 fan_startv;
	u32 fan_gear_mode;
	u32 pwm_polarity;
	u32 clk_freq;
};

#endif /* __LINUX_PLATFORM_DATA_G762_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 *  MMP Platform DMA Management
 *
 *  Copyright (c) 2011 Marvell Semiconductors Inc.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 *
 */

#ifndef MMP_DMA_H
#define MMP_DMA_H

struct mmp_dma_platdata {
	int dma_channels;
	int nb_requestors;
};

#endif /* MMP_DMA_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             /*
 * EHCI SuperH driver platform data
 *
 * Copyright (C) 2012  Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>
 * Copyright (C) 2012  Renesas Solutions Corp.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

#ifndef __USB_EHCI_SH_H
#define __USB_EHCI_SH_H

struct ehci_sh_platdata {
	void (*phy_init)(void); /* Phy init function */
};

#endif /* __USB_EHCI_SH_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef __LINUX_CRYPTO_ATMEL_H
#define __LINUX_CRYPTO_ATMEL_H

#include <linux/platform_data/dma-atmel.h>

/**
 * struct crypto_dma_data - DMA data for AES/TDES/SHA
 */
struct crypto_dma_data {
	struct at_dma_slave	txdata;
	struct at_dma_slave	rxdata;
};

/**
 * struct crypto_platform_data - board-specific AES/TDES/SHA configuration
 * @dma_slave: DMA slave interface to use in data transfers.
 */
struct crypto_platform_data {
	struct crypto_dma_data	*dma_slave;
};

#endif /* __LINUX_CRYPTO_ATMEL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #ifndef __KEYPAD_EP93XX_H
#define __KEYPAD_EP93XX_H

struct matrix_keymap_data;

/* flags for the ep93xx_keypad driver */
#define EP93XX_KEYPAD_DISABLE_3_KEY	(1<<0)	/* disable 3-key reset */
#define EP93XX_KEYPAD_DIAG_MODE		(1<<1)	/* diagnostic mode */
#define EP93XX_KEYPAD_BACK_DRIVE	(1<<2)	/* back driving mode */
#define EP93XX_KEYPAD_TEST_MODE		(1<<3)	/* scan only column 0 */
#define EP93XX_KEYPAD_KDIV		(1<<4)	/* 1/4 clock or 1/16 clock */
#define EP93XX_KEYPAD_AUTOREPEAT	(1<<5)	/* enable key autorepeat */

/**
 * struct ep93xx_keypad_platform_data - platform specific device structure
 * @keymap_data:	pointer to &matrix_keymap_data
 * @debounce:		debounce start count; terminal count is 0xff
 * @prescale:		row/column counter pre-scaler load value
 * @flags:		see above
 */
struct ep93xx_keypad_platform_data {
	struct matrix_keymap_data *keymap_data;
	unsigned int	debounce;
	unsigned int	prescale;
	unsigned int	flags;
};

#define EP93XX_MATRIX_ROWS		(8)
#define EP93XX_MATRIX_COLS		(8)

#endif	/* __KEYPAD_EP93XX_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * i2c.h - i.MX I2C driver header file
 *
 * Copyright (c) 2008, Darius Augulis <augulis.darius@gmail.com>
 *
 * This file is released under the GPLv2
 */

#ifndef __ASM_ARCH_I2C_H_
#define __ASM_ARCH_I2C_H_

/**
 * struct imxi2c_platform_data - structure of platform data for MXC I2C driver
 * @bitrate:	Bus speed measured in Hz
 *
 **/
struct imxi2c_platform_data {
	u32 bitrate;
};

#endif /* __ASM_ARCH_I2C_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 * Platform data for NXP SC18IS602/603
 *
 * Copyright (C) 2012 Guenter Roeck <linux@roeck-us.net>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * For further information, see the Documentation/spi/sc18is602 file.
 */

/**
 * struct sc18is602_platform_data - sc18is602 info
 * @clock_frequency		SC18IS603 oscillator frequency
 */
struct sc18is602_platform_data {
	u32 clock_frequency;
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright 2010 Wolfram Sang <w.sang@pengutronix.de>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; version 2
 * of the License.
 */

#ifndef __ASM_ARCH_IMX_ESDHC_H
#define __ASM_ARCH_IMX_ESDHC_H

#include <linux/types.h>

enum wp_types {
	ESDHC_WP_NONE,		/* no WP, neither controller nor gpio */
	ESDHC_WP_CONTROLLER,	/* mmc controller internal WP */
	ESDHC_WP_GPIO,		/* external gpio pin for WP */
};

enum cd_types {
	ESDHC_CD_NONE,		/* no CD, neither controller nor gpio */
	ESDHC_CD_CONTROLLER,	/* mmc controller internal CD */
	ESDHC_CD_GPIO,		/* external gpio pin for CD */
	ESDHC_CD_PERMANENT,	/* no CD, card permanently wired to host */
};

/**
 * struct esdhc_platform_data - platform data for esdhc on i.MX
 *
 * ESDHC_WP(CD)_CONTROLLER type is not available on i.MX25/35.
 *
 * @wp_gpio:	gpio for write_protect
 * @cd_gpio:	gpio for card_detect interrupt
 * @wp_type:	type of write_protect method (see wp_types enum above)
 * @cd_type:	type of card_detect method (see cd_types enum above)
 * @support_vsel:  indicate it supports 1.8v switching
 */

struct esdhc_platform_data {
	unsigned int wp_gpio;
	unsigned int cd_gpio;
	enum wp_types wp_type;
	enum cd_types cd_type;
	int max_bus_width;
	bool support_vsel;
	unsigned int delay_line;
	unsigned int tuning_step;       /* The delay cell steps in tuning procedure */
	unsigned int tuning_start_tap;	/* The start delay cell point in tuning procedure */
};
#endif /* __ASM_ARCH_IMX_ESDHC_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * TI ADS7828 A/D Converter platform data definition
 *
 * Copyright (c) 2012 Savoir-faire Linux Inc.
 *          Vivien Didelot <vivien.didelot@savoirfairelinux.com>
 *
 * For further information, see the Documentation/hwmon/ads7828 file.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _PDATA_ADS7828_H
#define _PDATA_ADS7828_H

/**
 * struct ads7828_platform_data - optional ADS7828 connectivity info
 * @diff_input:		Differential input mode.
 * @ext_vref:		Use an external voltage reference.
 * @vref_mv:		Voltage reference value, if external.
 */
struct ads7828_platform_data {
	bool diff_input;
	bool ext_vref;
	unsigned int vref_mv;
};

#endif /* _PDATA_ADS7828_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * Copyright (C) 2008
 * Guennadi Liakhovetski, DENX Software Engineering, <lg@denx.de>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __ASM_ARCH_MX3FB_H__
#define __ASM_ARCH_MX3FB_H__

#include <linux/device.h>
#include <linux/fb.h>

/* Proprietary FB_SYNC_ flags */
#define FB_SYNC_OE_ACT_HIGH	0x80000000
#define FB_SYNC_CLK_INVERT	0x40000000
#define FB_SYNC_DATA_INVERT	0x20000000
#define FB_SYNC_CLK_IDLE_EN	0x10000000
#define FB_SYNC_SHARP_MODE	0x08000000
#define FB_SYNC_SWAP_RGB	0x04000000
#define FB_SYNC_CLK_SEL_EN	0x02000000

/*
 * Specify the way your display is connected. The IPU can arbitrarily
 * map the internal colors to the external data lines. We only support
 * the following mappings at the moment.
 */
enum disp_data_mapping {
	/* blue -> d[0..5], green -> d[6..11], red -> d[12..17] */
	IPU_DISP_DATA_MAPPING_RGB666,
	/* blue -> d[0..4], green -> d[5..10], red -> d[11..15] */
	IPU_DISP_DATA_MAPPING_RGB565,
	/* blue -> d[0..7], green -> d[8..15], red -> d[16..23] */
	IPU_DISP_DATA_MAPPING_RGB888,
};

/**
 * struct mx3fb_platform_data - mx3fb platform data
 *
 * @dma_dev:	pointer to the dma-device, used for dma-slave connection
 * @mode:	pointer to a platform-provided per mxc_register_fb() videomode
 */
struct mx3fb_platform_data {
	struct device			*dma_dev;
	const char			*name;
	const struct fb_videomode	*mode;
	int				num_modes;
	enum disp_data_mapping		disp_data_fmt;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #ifndef __ASM_ARCH_PXA930_TRKBALL_H
#define __ASM_ARCH_PXA930_TRKBALL_H

struct pxa930_trkball_platform_data {
	int x_filter;
	int y_filter;
};

#endif /* __ASM_ARCH_PXA930_TRKBALL_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Purna Chandra Mandal, purna.mandal@microchip.com
 * Copyright (C) 2015 Microchip Technology Inc.  All rights reserved.
 *
 *  This program is free software; you can distribute it and/or modify it
 *  under the terms of the GNU General Public License (Version 2) as
 *  published by the Free Software Foundation.
 *
 *  This program is distributed in the hope it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 *  for more details.
 */
#ifndef __PIC32_SDHCI_PDATA_H__
#define __PIC32_SDHCI_PDATA_H__

struct pic32_sdhci_platform_data {
	/* read & write fifo threshold */
	int (*setup_dma)(u32 rfifo, u32 wfifo);
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
* Copyright (C) 2012 Texas Instruments
*
* License Terms: GNU General Public License v2
*
* Simple driver for Texas Instruments LM3642 LED driver chip
*
* Author: G.Shark Jeong <gshark.jeong@gmail.com>
*         Daniel Jeong <daniel.jeong@ti.com>
*/

#ifndef __LINUX_LM3642_H
#define __LINUX_LM3642_H

#define LM3642_NAME "leds-lm3642"

enum lm3642_torch_pin_enable {
	LM3642_TORCH_PIN_DISABLE = 0x00,
	LM3642_TORCH_PIN_ENABLE = 0x10,
};

enum lm3642_strobe_pin_enable {
	LM3642_STROBE_PIN_DISABLE = 0x00,
	LM3642_STROBE_PIN_ENABLE = 0x20,
};

enum lm3642_tx_pin_enable {
	LM3642_TX_PIN_DISABLE = 0x00,
	LM3642_TX_PIN_ENABLE = 0x40,
};

struct lm3642_platform_data {
	enum lm3642_torch_pin_enable torch_pin;
	enum lm3642_strobe_pin_enable strobe_pin;
	enum lm3642_tx_pin_enable tx_pin;
};

#endif /* __LINUX_LM3642_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         #ifndef __INCLUDE_ASM_ARCH_MXC_EHCI_H
#define __INCLUDE_ASM_ARCH_MXC_EHCI_H

struct mxc_usbh_platform_data {
	int (*init)(struct platform_device *pdev);
	int (*exit)(struct platform_device *pdev);

	unsigned int		 portsc;
	struct usb_phy		*otg;
};

#endif /* __INCLUDE_ASM_ARCH_MXC_EHCI_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * PCA963X LED chip driver.
 *
 * Copyright 2012 bct electronic GmbH
 * Copyright 2013 Qtechnology A/S
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 */

#ifndef __LINUX_PCA963X_H
#define __LINUX_PCA963X_H
#include <linux/leds.h>

enum pca963x_outdrv {
	PCA963X_OPEN_DRAIN,
	PCA963X_TOTEM_POLE, /* aka push-pull */
};

enum pca963x_blink_type {
	PCA963X_SW_BLINK,
	PCA963X_HW_BLINK,
};

struct pca963x_platform_data {
	struct led_platform_data leds;
	enum pca963x_outdrv outdrv;
	enum pca963x_blink_type blink_type;
};

#endif /* __LINUX_PCA963X_H*/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * Copyright (c) 2005 Sascha Hauer <s.hauer@pengutronix.de>, Pengutronix
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef __ETH_NETX_H
#define __ETH_NETX_H

struct netxeth_platform_data {
	unsigned int xcno;	/* number of xmac/xpec engine this eth uses */
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 *  arch/arm/include/asm/mach/irda.h
 *
 *  Copyright (C) 2004 Russell King.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __ASM_ARM_MACH_IRDA_H
#define __ASM_ARM_MACH_IRDA_H

struct irda_platform_data {
	int (*startup)(struct device *);
	void (*shutdown)(struct device *);
	int (*set_power)(struct device *, unsigned int state);
	void (*set_speed)(struct device *, unsigned int speed);
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #ifndef __LINUX_PLATFORM_DATA_BCMGENET_H__
#define __LINUX_PLATFORM_DATA_BCMGENET_H__

#include <linux/types.h>
#include <linux/if_ether.h>
#include <linux/phy.h>

struct bcmgenet_platform_data {
	bool		mdio_enabled;
	phy_interface_t	phy_interface;
	int		phy_address;
	int		phy_speed;
	int		phy_duplex;
	u8		mac_address[ETH_ALEN];
	int		genet_version;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     #ifndef _LINUX_PCA953X_H
#define _LINUX_PCA953X_H

#include <linux/types.h>
#include <linux/i2c.h>

/* platform data for the PCA9539 16-bit I/O expander driver */

struct pca953x_platform_data {
	/* number of the first GPIO */
	unsigned	gpio_base;

	/* initial polarity inversion setting */
	u32		invert;

	/* interrupt base */
	int		irq_base;

	void		*context;	/* param to setup/teardown */

	int		(*setup)(struct i2c_client *client,
				unsigned gpio, unsigned ngpio,
				void *context);
	int		(*teardown)(struct i2c_client *client,
				unsigned gpio, unsigned ngpio,
				void *context);
	const char	*const *names;
};

#endif /* _LINUX_PCA953X_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * This structure describes the machine which we are running on.
 */
#ifndef __MACH_IMXFB_H__
#define __MACH_IMXFB_H__

#include <linux/fb.h>

#define PCR_TFT		(1 << 31)
#define PCR_COLOR	(1 << 30)
#define PCR_PBSIZ_1	(0 << 28)
#define PCR_PBSIZ_2	(1 << 28)
#define PCR_PBSIZ_4	(2 << 28)
#define PCR_PBSIZ_8	(3 << 28)
#define PCR_BPIX_1	(0 << 25)
#define PCR_BPIX_2	(1 << 25)
#define PCR_BPIX_4	(2 << 25)
#define PCR_BPIX_8	(3 << 25)
#define PCR_BPIX_12	(4 << 25)
#define PCR_BPIX_16	(5 << 25)
#define PCR_BPIX_18	(6 << 25)
#define PCR_PIXPOL	(1 << 24)
#define PCR_FLMPOL	(1 << 23)
#define PCR_LPPOL	(1 << 22)
#define PCR_CLKPOL	(1 << 21)
#define PCR_OEPOL	(1 << 20)
#define PCR_SCLKIDLE	(1 << 19)
#define PCR_END_SEL	(1 << 18)
#define PCR_END_BYTE_SWAP (1 << 17)
#define PCR_REV_VS	(1 << 16)
#define PCR_ACD_SEL	(1 << 15)
#define PCR_ACD(x)	(((x) & 0x7f) << 8)
#define PCR_SCLK_SEL	(1 << 7)
#define PCR_SHARP	(1 << 6)
#define PCR_PCD(x)	((x) & 0x3f)

#define PWMR_CLS(x)	(((x) & 0x1ff) << 16)
#define PWMR_LDMSK	(1 << 15)
#define PWMR_SCR1	(1 << 10)
#define PWMR_SCR0	(1 << 9)
#define PWMR_CC_EN	(1 << 8)
#define PWMR_PW(x)	((x) & 0xff)

#define LSCR1_PS_RISE_DELAY(x)    (((x) & 0x7f) << 26)
#define LSCR1_CLS_RISE_DELAY(x)   (((x) & 0x3f) << 16)
#define LSCR1_REV_TOGGLE_DELAY(x) (((x) & 0xf) << 8)
#define LSCR1_GRAY2(x)            (((x) & 0xf) << 4)
#define LSCR1_GRAY1(x)            (((x) & 0xf))

#define DMACR_BURST	(1 << 31)
#define DMACR_HM(x)	(((x) & 0xf) << 16)
#define DMACR_TM(x)	((x) & 0xf)

struct imx_fb_videomode {
	struct fb_videomode mode;
	u32 pcr;
	unsigned char	bpp;
};

struct imx_fb_platform_data {
	struct imx_fb_videomode *mode;
	int		num_modes;

	u_int		pwmr;
	u_int		lscr1;
	u_int		dmacr;

	int (*init)(struct platform_device *);
	void (*exit)(struct platform_device *);
};

#endif /* ifndef __MACH_IMXFB_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 * Platform data for the Intel TCO Watchdog
 */

#ifndef _ITCO_WDT_H_
#define _ITCO_WDT_H_

/* Watchdog resources */
#define ICH_RES_IO_TCO		0
#define ICH_RES_IO_SMI		1
#define ICH_RES_MEM_OFF		2
#define ICH_RES_MEM_GCS_PMC	0

struct itco_wdt_platform_data {
	char name[32];
	unsigned int version;
};

#endif /* _ITCO_WDT_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * include/linux/platform_data/bcm2708.h
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * (C) 2014 Julian Scheel <julian@jusst.de>
 *
 */
#ifndef __BCM2708_H_
#define __BCM2708_H_

typedef enum {
	BCM2708_PULL_OFF,
	BCM2708_PULL_UP,
	BCM2708_PULL_DOWN
} bcm2708_gpio_pull_t;

extern int bcm2708_gpio_setpull(struct gpio_chip *gc, unsigned offset,
		bcm2708_gpio_pull_t value);

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         #ifndef ASMARM_ARCH_IRDA_H
#define ASMARM_ARCH_IRDA_H

/* board specific transceiver capabilities */

#define IR_OFF		1
#define IR_SIRMODE	2
#define IR_FIRMODE	4

struct pxaficp_platform_data {
	int transceiver_cap;
	void (*transceiver_mode)(struct device *dev, int mode);
	int (*startup)(struct device *dev);
	void (*shutdown)(struct device *dev);
	int gpio_pwdown;		/* powerdown GPIO for the IrDA chip */
	bool gpio_pwdown_inverted;	/* gpio_pwdown is inverted */
};

extern void pxa_set_ficp_info(struct pxaficp_platform_data *info);

#if defined(CONFIG_PXA25x) || defined(CONFIG_PXA27x)
void pxa2xx_transceiver_mode(struct device *dev, int mode);
#endif

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * Header file for the Atmel AHB DMA Controller driver
 *
 * Copyright (C) 2008 Atmel Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */
#ifndef AT_HDMAC_H
#define AT_HDMAC_H

#include <linux/dmaengine.h>

/**
 * struct at_dma_platform_data - Controller configuration parameters
 * @nr_channels: Number of channels supported by hardware (max 8)
 * @cap_mask: dma_capability flags supported by the platform
 */
struct at_dma_platform_data {
	unsigned int	nr_channels;
	dma_cap_mask_t  cap_mask;
};

/**
 * struct at_dma_slave - Controller-specific information about a slave
 * @dma_dev: required DMA master device
 * @cfg: Platform-specific initializer for the CFG register
 */
struct at_dma_slave {
	struct device		*dma_dev;
	u32			cfg;
};


/* Platform-configurable bits in CFG */
#define ATC_PER_MSB(h)	((0x30U & (h)) >> 4)	/* Extract most significant bits of a handshaking identifier */

#define	ATC_SRC_PER(h)		(0xFU & (h))	/* Channel src rq associated with periph handshaking ifc h */
#define	ATC_DST_PER(h)		((0xFU & (h)) <<  4)	/* Channel dst rq associated with periph handshaking ifc h */
#define	ATC_SRC_REP		(0x1 <<  8)	/* Source Replay Mod */
#define	ATC_SRC_H2SEL		(0x1 <<  9)	/* Source Handshaking Mod */
#define		ATC_SRC_H2SEL_SW	(0x0 <<  9)
#define		ATC_SRC_H2SEL_HW	(0x1 <<  9)
#define	ATC_SRC_PER_MSB(h)	(ATC_PER_MSB(h) << 10)	/* Channel src rq (most significant bits) */
#define	ATC_DST_REP		(0x1 << 12)	/* Destination Replay Mod */
#define	ATC_DST_H2SEL		(0x1 << 13)	/* Destination Handshaking Mod */
#define		ATC_DST_H2SEL_SW	(0x0 << 13)
#define		ATC_DST_H2SEL_HW	(0x1 << 13)
#define	ATC_DST_PER_MSB(h)	(ATC_PER_MSB(h) << 14)	/* Channel dst rq (most significant bits) */
#define	ATC_SOD			(0x1 << 16)	/* Stop On Done */
#define	ATC_LOCK_IF		(0x1 << 20)	/* Interface Lock */
#define	ATC_LOCK_B		(0x1 << 21)	/* AHB Bus Lock */
#define	ATC_LOCK_IF_L		(0x1 << 22)	/* Master Interface Arbiter Lock */
#define		ATC_LOCK_IF_L_CHUNK	(0x0 << 22)
#define		ATC_LOCK_IF_L_BUFFER	(0x1 << 22)
#define	ATC_AHB_PROT_MASK	(0x7 << 24)	/* AHB Protection */
#define	ATC_FIFOCFG_MASK	(0x3 << 28)	/* FIFO Request Configuration */
#define		ATC_FIFOCFG_LARGESTBURST	(0x0 << 28)
#define		ATC_FIFOCFG_HALFFIFO		(0x1 << 28)
#define		ATC_FIFOCFG_ENOUGHSPACE		(0x2 << 28)


#endif /* AT_HDMAC_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * at24.h - platform_data for the at24 (generic eeprom) driver
 * (C) Copyright 2008 by Pengutronix
 * (C) Copyright 2012 by Wolfram Sang
 * same license as the driver
 */

#ifndef _LINUX_AT24_H
#define _LINUX_AT24_H

#include <linux/types.h>
#include <linux/nvmem-consumer.h>
#include <linux/bitops.h>

/**
 * struct at24_platform_data - data to set up at24 (generic eeprom) driver
 * @byte_len: size of eeprom in byte
 * @page_size: number of byte which can be written in one go
 * @flags: tunable options, check AT24_FLAG_* defines
 * @setup: an optional callback invoked after eeprom is probed; enables kernel
	code to access eeprom via nvmem, see example
 * @context: optional parameter passed to setup()
 *
 * If you set up a custom eeprom type, please double-check the parameters.
 * Especially page_size needs extra care, as you risk data loss if your value
 * is bigger than what the chip actually supports!
 *
 * An example in pseudo code for a setup() callback:
 *
 * void get_mac_addr(struct nvmem_device *nvmem, void *context)
 * {
 *	u8 *mac_addr = ethernet_pdata->mac_addr;
 *	off_t offset = context;
 *
 *	// Read MAC addr from EEPROM
 *	if (nvmem_device_read(nvmem, offset, ETH_ALEN, mac_addr) == ETH_ALEN)
 *		pr_info("Read MAC addr from EEPROM: %pM\n", mac_addr);
 * }
 *
 * This function pointer and context can now be set up in at24_platform_data.
 */

struct at24_platform_data {
	u32		byte_len;		/* size (sum of all addr) */
	u16		page_size;		/* for writes */
	u8		flags;
#define AT24_FLAG_ADDR16	BIT(7)	/* address pointer is 16 bit */
#define AT24_FLAG_READONLY	BIT(6)	/* sysfs-entry will be read-only */
#define AT24_FLAG_IRUGO		BIT(5)	/* sysfs-entry will be world-readable */
#define AT24_FLAG_TAKE8ADDR	BIT(4)	/* take always 8 addresses (24c00) */
#define AT24_FLAG_SERIAL	BIT(3)	/* factory-programmed serial number */
#define AT24_FLAG_MAC		BIT(2)	/* factory-programmed mac address */

	void		(*setup)(struct nvmem_device *nvmem, void *context);
	void		*context;
};

#endif /* _LINUX_AT24_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * Copyright (C) 2006 Micron Technology Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef	_MTD_NAND_OMAP2_H
#define	_MTD_NAND_OMAP2_H

#include <linux/mtd/partitions.h>

#define	GPMC_BCH_NUM_REMAINDER	8

enum nand_io {
	NAND_OMAP_PREFETCH_POLLED = 0,	/* prefetch polled mode, default */
	NAND_OMAP_POLLED,		/* polled mode, without prefetch */
	NAND_OMAP_PREFETCH_DMA,		/* prefetch enabled sDMA mode */
	NAND_OMAP_PREFETCH_IRQ		/* prefetch enabled irq mode */
};

enum omap_ecc {
	/*
	 * 1-bit ECC: calculation and correction by SW
	 * ECC stored at end of spare area
	 */
	OMAP_ECC_HAM1_CODE_SW = 0,

	/*
	 * 1-bit ECC: calculation by GPMC, Error detection by Software
	 * ECC layout compatible with ROM code layout
	 */
	OMAP_ECC_HAM1_CODE_HW,
	/* 4-bit  ECC calculation by GPMC, Error detection by Software */
	OMAP_ECC_BCH4_CODE_HW_DETECTION_SW,
	/* 4-bit  ECC calculation by GPMC, Error detection by ELM */
	OMAP_ECC_BCH4_CODE_HW,
	/* 8-bit  ECC calculation by GPMC, Error detection by Software */
	OMAP_ECC_BCH8_CODE_HW_DETECTION_SW,
	/* 8-bit  ECC calculation by GPMC, Error detection by ELM */
	OMAP_ECC_BCH8_CODE_HW,
	/* 16-bit ECC calculation by GPMC, Error detection by ELM */
	OMAP_ECC_BCH16_CODE_HW,
};

struct gpmc_nand_regs {
	void __iomem	*gpmc_nand_command;
	void __iomem	*gpmc_nand_address;
	void __iomem	*gpmc_nand_data;
	void __iomem	*gpmc_prefetch_config1;
	void __iomem	*gpmc_prefetch_config2;
	void __iomem	*gpmc_prefetch_control;
	void __iomem	*gpmc_prefetch_status;
	void __iomem	*gpmc_ecc_config;
	void __iomem	*gpmc_ecc_control;
	void __iomem	*gpmc_ecc_size_config;
	void __iomem	*gpmc_ecc1_result;
	void __iomem	*gpmc_bch_result0[GPMC_BCH_NUM_REMAINDER];
	void __iomem	*gpmc_bch_result1[GPMC_BCH_NUM_REMAINDER];
	void __iomem	*gpmc_bch_result2[GPMC_BCH_NUM_REMAINDER];
	void __iomem	*gpmc_bch_result3[GPMC_BCH_NUM_REMAINDER];
	void __iomem	*gpmc_bch_result4[GPMC_BCH_NUM_REMAINDER];
	void __iomem	*gpmc_bch_result5[GPMC_BCH_NUM_REMAINDER];
	void __iomem	*gpmc_bch_result6[GPMC_BCH_NUM_REMAINDER];
	/* Deprecated. Do not use */
	void __iomem	*gpmc_status;
};

struct omap_nand_platform_data {
	int			cs;
	struct mtd_partition	*parts;
	int			nr_parts;
	bool			flash_bbt;
	enum nand_io		xfer_type;
	int			devsize;
	enum omap_ecc           ecc_opt;

	struct device_node	*elm_of_node;

	/* deprecated */
	struct gpmc_nand_regs	reg;
	struct device_node	*of_node;
	bool			dev_ready;
};
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #ifndef	_PIXCIR_I2C_TS_H
#define	_PIXCIR_I2C_TS_H

/*
 * Register map
 */
#define PIXCIR_REG_POWER_MODE	51
#define PIXCIR_REG_INT_MODE	52

/*
 * Power modes:
 * active: max scan speed
 * idle: lower scan speed with automatic transition to active on touch
 * halt: datasheet says sleep but this is more like halt as the chip
 *       clocks are cut and it can only be brought out of this mode
 *	 using the RESET pin.
 */
enum pixcir_power_mode {
	PIXCIR_POWER_ACTIVE,
	PIXCIR_POWER_IDLE,
	PIXCIR_POWER_HALT,
};

#define PIXCIR_POWER_MODE_MASK	0x03
#define PIXCIR_POWER_ALLOW_IDLE (1UL << 2)

/*
 * Interrupt modes:
 * periodical: interrupt is asserted periodicaly
 * diff coordinates: interrupt is asserted when coordinates change
 * level on touch: interrupt level asserted during touch
 * pulse on touch: interrupt pulse asserted druing touch
 *
 */
enum pixcir_int_mode {
	PIXCIR_INT_PERIODICAL,
	PIXCIR_INT_DIFF_COORD,
	PIXCIR_INT_LEVEL_TOUCH,
	PIXCIR_INT_PULSE_TOUCH,
};

#define PIXCIR_INT_MODE_MASK	0x03
#define PIXCIR_INT_ENABLE	(1UL << 3)
#define PIXCIR_INT_POL_HIGH	(1UL << 2)

/**
 * struct pixcir_irc_chip_data - chip related data
 * @max_fingers:	Max number of fingers reported simultaneously by h/w
 * @has_hw_ids:		Hardware supports finger tracking IDs
 *
 */
struct pixcir_i2c_chip_data {
	u8 max_fingers;
	bool has_hw_ids;
};

struct pixcir_ts_platform_data {
	int x_max;
	int y_max;
	struct pixcir_i2c_chip_data chip;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         #ifndef __ARCOM_PCMCIA_H
#define __ARCOM_PCMCIA_H

struct arcom_pcmcia_pdata {
	int	cd_gpio;
	int	rdy_gpio;
	int	pwr_gpio;
	void	(*reset)(int state);
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Generic PXA PATA driver
 *
 * Copyright (C) 2010 Marek Vasut <marek.vasut@gmail.com>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; see the file COPYING.  If not, write to
 *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#ifndef	__MACH_PATA_PXA_H__
#define	__MACH_PATA_PXA_H__

struct pata_pxa_pdata {
	/* PXA DMA DREQ<0:2> pin */
	uint32_t	dma_dreq;
	/* Register shift */
	uint32_t	reg_shift;
	/* IRQ flags */
	uint32_t	irq_flags;
};

#endif	/* __MACH_PATA_PXA_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Copyright(c) 2014 Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 */

#ifndef GPIO_DW_APB_H
#define GPIO_DW_APB_H

struct dwapb_port_property {
	struct fwnode_handle *fwnode;
	unsigned int	idx;
	unsigned int	ngpio;
	unsigned int	gpio_base;
	unsigned int	irq;
	bool		irq_shared;
};

struct dwapb_platform_data {
	struct dwapb_port_property *properties;
	unsigned int nports;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  /**
 * dwc3-omap.h - OMAP Specific Glue layer, header.
 *
 * Copyright (C) 2010-2011 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Author: Felipe Balbi <balbi@ti.com>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions, and the following disclaimer,
 *    without modification.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The names of the above-listed copyright holders may not be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * ALTERNATIVELY, this software may be distributed under the terms of the
 * GNU General Public License ("GPL") version 2, as published by the Free
 * Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

enum dwc3_omap_utmi_mode {
	DWC3_OMAP_UTMI_MODE_UNKNOWN = 0,
	DWC3_OMAP_UTMI_MODE_HW,
	DWC3_OMAP_UTMI_MODE_SW,
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 *  MTK SPI bus driver definitions
 *
 * Copyright (c) 2015 MediaTek Inc.
 * Author: Leilk Liu <leilk.liu@mediatek.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef ____LINUX_PLATFORM_DATA_SPI_MTK_H
#define ____LINUX_PLATFORM_DATA_SPI_MTK_H

/* Board specific platform_data */
struct mtk_chip_config {
	u32 tx_mlsb;
	u32 rx_mlsb;
};
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 *  Copyright (C) 2006 Samsung Electronics
 *  Kyungmin Park <kyungmin.park@samsung.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef ASMARM_ARCH_LED_H
#define ASMARM_ARCH_LED_H

struct omap_led_config {
	struct led_classdev	cdev;
	s16			gpio;
};

struct omap_led_platform_data {
	s16			nr_leds;
	struct omap_led_config	*leds;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * include/linux/platform_data/pxa_sdhci.h
 *
 * Copyright 2010 Marvell
 *	Zhangfei Gao <zhangfei.gao@marvell.com>
 *
 * PXA Platform - SDHCI platform data definitions
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _PXA_SDHCI_H_
#define _PXA_SDHCI_H_

/* pxa specific flag */
/* Require clock free running */
#define PXA_FLAG_ENABLE_CLOCK_GATING (1<<0)
/* card always wired to host, like on-chip emmc */
#define PXA_FLAG_CARD_PERMANENT	(1<<1)
/* Board design supports 8-bit data on SD/SDIO BUS */
#define PXA_FLAG_SD_8_BIT_CAPABLE_SLOT (1<<2)

/*
 * struct pxa_sdhci_platdata() - Platform device data for PXA SDHCI
 * @flags: flags for platform requirement
 * @clk_delay_cycles:
 *	mmp2: each step is roughly 100ps, 5bits width
 *	pxa910: each step is 1ns, 4bits width
 * @clk_delay_sel: select clk_delay, used on pxa910
 *	0: choose feedback clk
 *	1: choose feedback clk + delay value
 *	2: choose internal clk
 * @clk_delay_enable: enable clk_delay or not, used on pxa910
 * @ext_cd_gpio: gpio pin used for external CD line
 * @ext_cd_gpio_invert: invert values for external CD gpio line
 * @max_speed: the maximum speed supported
 * @host_caps: Standard MMC host capabilities bit field.
 * @quirks: quirks of platfrom
 * @quirks2: quirks2 of platfrom
 * @pm_caps: pm_caps of platfrom
 */
struct sdhci_pxa_platdata {
	unsigned int	flags;
	unsigned int	clk_delay_cycles;
	unsigned int	clk_delay_sel;
	bool		clk_delay_enable;
	unsigned int	ext_cd_gpio;
	bool		ext_cd_gpio_invert;
	unsigned int	max_speed;
	u32		host_caps;
	u32		host_caps2;
	unsigned int	quirks;
	unsigned int	quirks2;
	unsigned int	pm_caps;
};
#endif /* _PXA_SDHCI_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 *  Support for the xscale frame buffer.
 *
 *  Author:     Jean-Frederic Clere
 *  Created:    Sep 22, 2003
 *  Copyright:  jfclere@sinix.net
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 */

#include <linux/fb.h>
#include <mach/regs-lcd.h>

/*
 * Supported LCD connections
 *
 * bits 0 - 3: for LCD panel type:
 *
 *   STN  - for passive matrix
 *   DSTN - for dual scan passive matrix
 *   TFT  - for active matrix
 *
 * bits 4 - 9 : for bus width
 * bits 10-17 : for AC Bias Pin Frequency
 * bit     18 : for output enable polarity
 * bit     19 : for pixel clock edge
 * bit     20 : for output pixel format when base is RGBT16
 */
#define LCD_CONN_TYPE(_x)	((_x) & 0x0f)
#define LCD_CONN_WIDTH(_x)	(((_x) >> 4) & 0x1f)

#define LCD_TYPE_MASK		0xf
#define LCD_TYPE_UNKNOWN	0
#define LCD_TYPE_MONO_STN	1
#define LCD_TYPE_MONO_DSTN	2
#define LCD_TYPE_COLOR_STN	3
#define LCD_TYPE_COLOR_DSTN	4
#define LCD_TYPE_COLOR_TFT	5
#define LCD_TYPE_SMART_PANEL	6
#define LCD_TYPE_MAX		7

#define LCD_MONO_STN_4BPP	((4  << 4) | LCD_TYPE_MONO_STN)
#define LCD_MONO_STN_8BPP	((8  << 4) | LCD_TYPE_MONO_STN)
#define LCD_MONO_DSTN_8BPP	((8  << 4) | LCD_TYPE_MONO_DSTN)
#define LCD_COLOR_STN_8BPP	((8  << 4) | LCD_TYPE_COLOR_STN)
#define LCD_COLOR_DSTN_16BPP	((16 << 4) | LCD_TYPE_COLOR_DSTN)
#define LCD_COLOR_TFT_8BPP	((8  << 4) | LCD_TYPE_COLOR_TFT)
#define LCD_COLOR_TFT_16BPP	((16 << 4) | LCD_TYPE_COLOR_TFT)
#define LCD_COLOR_TFT_18BPP	((18 << 4) | LCD_TYPE_COLOR_TFT)
#define LCD_SMART_PANEL_8BPP	((8  << 4) | LCD_TYPE_SMART_PANEL)
#define LCD_SMART_PANEL_16BPP	((16 << 4) | LCD_TYPE_SMART_PANEL)
#define LCD_SMART_PANEL_18BPP	((18 << 4) | LCD_TYPE_SMART_PANEL)

#define LCD_AC_BIAS_FREQ(x)	(((x) & 0xff) << 10)
#define LCD_BIAS_ACTIVE_HIGH	(0 << 18)
#define LCD_BIAS_ACTIVE_LOW	(1 << 18)
#define LCD_PCLK_EDGE_RISE	(0 << 19)
#define LCD_PCLK_EDGE_FALL	(1 << 19)
#define LCD_ALTERNATE_MAPPING	(1 << 20)

/*
 * This structure describes the machine which we are running on.
 * It is set in linux/arch/arm/mach-pxa/machine_name.c and used in the probe routine
 * of linux/drivers/video/pxafb.c
 */
struct pxafb_mode_info {
	u_long		pixclock;

	u_short		xres;
	u_short		yres;

	u_char		bpp;
	u_int		cmap_greyscale:1,
			depth:8,
			transparency:1,
			unused:22;

	/* Parallel Mode Timing */
	u_char		hsync_len;
	u_char		left_margin;
	u_char		right_margin;

	u_char		vsync_len;
	u_char		upper_margin;
	u_char		lower_margin;
	u_char		sync;

	/* Smart Panel Mode Timing - see PXA27x DM 7.4.15.0.3 for details
	 * Note:
	 * 1. all parameters in nanosecond (ns)
	 * 2. a0cs{rd,wr}_set_hld are controlled by the same register bits
	 *    in pxa27x and pxa3xx, initialize them to the same value or
	 *    the larger one will be used
	 * 3. same to {rd,wr}_pulse_width
	 *
	 * 4. LCD_PCLK_EDGE_{RISE,FALL} controls the L_PCLK_WR polarity
	 * 5. sync & FB_SYNC_HOR_HIGH_ACT controls the L_LCLK_A0
	 * 6. sync & FB_SYNC_VERT_HIGH_ACT controls the L_LCLK_RD
	 */
	unsigned	a0csrd_set_hld;	/* A0 and CS Setup/Hold Time before/after L_FCLK_RD */
	unsigned	a0cswr_set_hld;	/* A0 and CS Setup/Hold Time before/after L_PCLK_WR */
	unsigned	wr_pulse_width;	/* L_PCLK_WR pulse width */
	unsigned	rd_pulse_width;	/* L_FCLK_RD pulse width */
	unsigned	cmd_inh_time;	/* Command Inhibit time between two writes */
	unsigned	op_hold_time;	/* Output Hold time from L_FCLK_RD negation */
};

struct pxafb_mach_info {
	struct pxafb_mode_info *modes;
	unsigned int num_modes;

	unsigned int	lcd_conn;
	unsigned long	video_mem_size;

	u_int		fixed_modes:1,
			cmap_inverse:1,
			cmap_static:1,
			acceleration_enabled:1,
			unused:28;

	/* The following should be defined in LCCR0
	 *      LCCR0_Act or LCCR0_Pas          Active or Passive
	 *      LCCR0_Sngl or LCCR0_Dual        Single/Dual panel
	 *      LCCR0_Mono or LCCR0_Color       Mono/Color
	 *      LCCR0_4PixMono or LCCR0_8PixMono (in mono single mode)
	 *      LCCR0_DMADel(Tcpu) (optional)   DMA request delay
	 *
	 * The following should not be defined in LCCR0:
	 *      LCCR0_OUM, LCCR0_BM, LCCR0_QDM, LCCR0_DIS, LCCR0_EFM
	 *      LCCR0_IUM, LCCR0_SFM, LCCR0_LDM, LCCR0_ENB
	 */
	u_int		lccr0;
	/* The following should be defined in LCCR3
	 *      LCCR3_OutEnH or LCCR3_OutEnL    Output enable polarity
	 *      LCCR3_PixRsEdg or LCCR3_PixFlEdg Pixel clock edge type
	 *      LCCR3_Acb(X)                    AB Bias pin frequency
	 *      LCCR3_DPC (optional)            Double Pixel Clock mode (untested)
	 *
	 * The following should not be defined in LCCR3
	 *      LCCR3_HSP, LCCR3_VSP, LCCR0_Pcd(x), LCCR3_Bpp
	 */
	u_int		lccr3;
	/* The following should be defined in LCCR4
	 *	LCCR4_PAL_FOR_0 or LCCR4_PAL_FOR_1 or LCCR4_PAL_FOR_2
	 *
	 * All other bits in LCCR4 should be left alone.
	 */
	u_int		lccr4;
	void (*pxafb_backlight_power)(int);
	void (*pxafb_lcd_power)(int, struct fb_var_screeninfo *);
	void (*smart_update)(struct fb_info *);
};

void pxa_set_fb_info(struct device *, struct pxafb_mach_info *);
unsigned long pxafb_get_hsync_time(struct device *dev);

#ifdef CONFIG_FB_PXA_SMARTPANEL
extern int pxafb_smart_queue(struct fb_info *info, uint16_t *cmds, int);
extern int pxafb_smart_flush(struct fb_info *info);
#else
static inline int pxafb_smart_queue(struct fb_info *info,
				    uint16_t *cmds, int n)
{
	return 0;
}

static inline int pxafb_smart_flush(struct fb_info *info)
{
	return 0;
}
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright(c) 2014 Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 */

#ifndef I2C_DESIGNWARE_H
#define I2C_DESIGNWARE_H

struct dw_i2c_platform_data {
	unsigned int i2c_scl_freq;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright (C) 2015, Marvell International Ltd.
 *
 * This software file (the "File") is distributed by Marvell International
 * Ltd. under the terms of the GNU General Public License Version 2, June 1991
 * (the "License").  You may use, redistribute and/or modify this File in
 * accordance with the terms and conditions of the License, a copy of which
 * is available on the worldwide web at
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
 *
 * THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE
 * ARE EXPRESSLY DISCLAIMED.  The License provides additional details about
 * this warranty disclaimer.
 */

#ifndef _NFCMRVL_PTF_H_
#define _NFCMRVL_PTF_H_

struct nfcmrvl_platform_data {
	/*
	 * Generic
	 */

	/* GPIO that is wired to RESET_N signal */
	unsigned int reset_n_io;
	/* Tell if transport is muxed in HCI one */
	unsigned int hci_muxed;

	/*
	 * UART specific
	 */

	/* Tell if UART needs flow control at init */
	unsigned int flow_control;
	/* Tell if firmware supports break control for power management */
	unsigned int break_control;


	/*
	 * I2C specific
	 */

	unsigned int irq;
	unsigned int irq_polarity;
};

#endif /* _NFCMRVL_PTF_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * sky81452.h	SKY81452 backlight driver
 *
 * Copyright 2014 Skyworks Solutions Inc.
 * Author : Gyungoh Yoo <jack.yoo@skyworksinc.com>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _SKY81452_BACKLIGHT_H
#define _SKY81452_BACKLIGHT_H

/**
 * struct sky81452_platform_data
 * @name:	backlight driver name.
		If it is not defined, default name is lcd-backlight.
 * @gpio_enable:GPIO number which control EN pin
 * @enable:	Enable mask for current sink channel 1, 2, 3, 4, 5 and 6.
 * @ignore_pwm:	true if DPWMI should be ignored.
 * @dpwm_mode:	true is DPWM dimming mode, otherwise Analog dimming mode.
 * @phase_shift:true is phase shift mode.
 * @short_detecion_threshold:	It should be one of 4, 5, 6 and 7V.
 * @boost_current_limit:	It should be one of 2300, 2750mA.
 */
struct sky81452_bl_platform_data {
	const char *name;
	int gpio_enable;
	unsigned int enable;
	bool ignore_pwm;
	bool dpwm_mode;
	bool phase_shift;
	unsigned int short_detection_threshold;
	unsigned int boost_current_limit;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #ifndef __MACH_SSI_H
#define __MACH_SSI_H

struct snd_ac97;

extern unsigned char imx_ssi_fiq_start, imx_ssi_fiq_end;
extern unsigned long imx_ssi_fiq_base, imx_ssi_fiq_tx_buffer, imx_ssi_fiq_rx_buffer;

struct imx_ssi_platform_data {
	unsigned int flags;
#define IMX_SSI_DMA            (1 << 0)
#define IMX_SSI_USE_AC97       (1 << 1)
#define IMX_SSI_NET            (1 << 2)
#define IMX_SSI_SYN            (1 << 3)
#define IMX_SSI_USE_I2S_SLAVE  (1 << 4)
	void (*ac97_reset) (struct snd_ac97 *ac97);
	void (*ac97_warm_reset)(struct snd_ac97 *ac97);
};

extern int mxc_set_irq_fiq(unsigned int irq, unsigned int type);

#endif /* __MACH_SSI_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * ST M48T86 / Dallas DS12887 RTC driver
 * Copyright (c) 2006 Tower Technologies
 *
 * Author: Alessandro Zummo <a.zummo@towertech.it>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

struct m48t86_ops
{
	void (*writebyte)(unsigned char value, unsigned long addr);
	unsigned char (*readbyte)(unsigned long addr);
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Copyright (C) 2010 ST Microelectronics
 * Rajeev Kumar <rajeevkumar.linux@gmail.com>
 *
 * This file is licensed under the terms of the GNU General Public
 * License version 2. This program is licensed "as is" without any
 * warranty of any kind, whether express or implied.
 */

#ifndef __PLAT_KEYBOARD_H
#define __PLAT_KEYBOARD_H

#include <linux/bitops.h>
#include <linux/input.h>
#include <linux/input/matrix_keypad.h>
#include <linux/types.h>

#define DECLARE_9x9_KEYMAP(_name) \
int _name[] = { \
	KEY(0, 0, KEY_ESC), \
	KEY(0, 1, KEY_1), \
	KEY(0, 2, KEY_2), \
	KEY(0, 3, KEY_3), \
	KEY(0, 4, KEY_4), \
	KEY(0, 5, KEY_5), \
	KEY(0, 6, KEY_6), \
	KEY(0, 7, KEY_7), \
	KEY(0, 8, KEY_8), \
	KEY(1, 0, KEY_9), \
	KEY(1, 1, KEY_MINUS), \
	KEY(1, 2, KEY_EQUAL), \
	KEY(1, 3, KEY_BACKSPACE), \
	KEY(1, 4, KEY_TAB), \
	KEY(1, 5, KEY_Q), \
	KEY(1, 6, KEY_W), \
	KEY(1, 7, KEY_E), \
	KEY(1, 8, KEY_R), \
	KEY(2, 0, KEY_T), \
	KEY(2, 1, KEY_Y), \
	KEY(2, 2, KEY_U), \
	KEY(2, 3, KEY_I), \
	KEY(2, 4, KEY_O), \
	KEY(2, 5, KEY_P), \
	KEY(2, 6, KEY_LEFTBRACE), \
	KEY(2, 7, KEY_RIGHTBRACE), \
	KEY(2, 8, KEY_ENTER), \
	KEY(3, 0, KEY_LEFTCTRL), \
	KEY(3, 1, KEY_A), \
	KEY(3, 2, KEY_S), \
	KEY(3, 3, KEY_D), \
	KEY(3, 4, KEY_F), \
	KEY(3, 5, KEY_G), \
	KEY(3, 6, KEY_H), \
	KEY(3, 7, KEY_J), \
	KEY(3, 8, KEY_K), \
	KEY(4, 0, KEY_L), \
	KEY(4, 1, KEY_SEMICOLON), \
	KEY(4, 2, KEY_APOSTROPHE), \
	KEY(4, 3, KEY_GRAVE), \
	KEY(4, 4, KEY_LEFTSHIFT), \
	KEY(4, 5, KEY_BACKSLASH), \
	KEY(4, 6, KEY_Z), \
	KEY(4, 7, KEY_X), \
	KEY(4, 8, KEY_C), \
	KEY(5, 0, KEY_V), \
	KEY(5, 1, KEY_B), \
	KEY(5, 2, KEY_N), \
	KEY(5, 3, KEY_M), \
	KEY(5, 4, KEY_COMMA), \
	KEY(5, 5, KEY_DOT), \
	KEY(5, 6, KEY_SLASH), \
	KEY(5, 7, KEY_RIGHTSHIFT), \
	KEY(5, 8, KEY_KPASTERISK), \
	KEY(6, 0, KEY_LEFTALT), \
	KEY(6, 1, KEY_SPACE), \
	KEY(6, 2, KEY_CAPSLOCK), \
	KEY(6, 3, KEY_F1), \
	KEY(6, 4, KEY_F2), \
	KEY(6, 5, KEY_F3), \
	KEY(6, 6, KEY_F4), \
	KEY(6, 7, KEY_F5), \
	KEY(6, 8, KEY_F6), \
	KEY(7, 0, KEY_F7), \
	KEY(7, 1, KEY_F8), \
	KEY(7, 2, KEY_F9), \
	KEY(7, 3, KEY_F10), \
	KEY(7, 4, KEY_NUMLOCK), \
	KEY(7, 5, KEY_SCROLLLOCK), \
	KEY(7, 6, KEY_KP7), \
	KEY(7, 7, KEY_KP8), \
	KEY(7, 8, KEY_KP9), \
	KEY(8, 0, KEY_KPMINUS), \
	KEY(8, 1, KEY_KP4), \
	KEY(8, 2, KEY_KP5), \
	KEY(8, 3, KEY_KP6), \
	KEY(8, 4, KEY_KPPLUS), \
	KEY(8, 5, KEY_KP1), \
	KEY(8, 6, KEY_KP2), \
	KEY(8, 7, KEY_KP3), \
	KEY(8, 8, KEY_KP0), \
}

#define DECLARE_6x6_KEYMAP(_name) \
int _name[] = { \
	KEY(0, 0, KEY_RESERVED), \
	KEY(0, 1, KEY_1), \
	KEY(0, 2, KEY_2), \
	KEY(0, 3, KEY_3), \
	KEY(0, 4, KEY_4), \
	KEY(0, 5, KEY_5), \
	KEY(1, 0, KEY_Q), \
	KEY(1, 1, KEY_W), \
	KEY(1, 2, KEY_E), \
	KEY(1, 3, KEY_R), \
	KEY(1, 4, KEY_T), \
	KEY(1, 5, KEY_Y), \
	KEY(2, 0, KEY_D), \
	KEY(2, 1, KEY_F), \
	KEY(2, 2, KEY_G), \
	KEY(2, 3, KEY_H), \
	KEY(2, 4, KEY_J), \
	KEY(2, 5, KEY_K), \
	KEY(3, 0, KEY_B), \
	KEY(3, 1, KEY_N), \
	KEY(3, 2, KEY_M), \
	KEY(3, 3, KEY_COMMA), \
	KEY(3, 4, KEY_DOT), \
	KEY(3, 5, KEY_SLASH), \
	KEY(4, 0, KEY_F6), \
	KEY(4, 1, KEY_F7), \
	KEY(4, 2, KEY_F8), \
	KEY(4, 3, KEY_F9), \
	KEY(4, 4, KEY_F10), \
	KEY(4, 5, KEY_NUMLOCK), \
	KEY(5, 0, KEY_KP2), \
	KEY(5, 1, KEY_KP3), \
	KEY(5, 2, KEY_KP0), \
	KEY(5, 3, KEY_KPDOT), \
	KEY(5, 4, KEY_RO), \
	KEY(5, 5, KEY_ZENKAKUHANKAKU), \
}

#define KEYPAD_9x9     0
#define KEYPAD_6x6     1
#define KEYPAD_2x2     2

/**
 * struct kbd_platform_data - spear keyboard platform data
 * keymap: pointer to keymap data (table and size)
 * rep: enables key autorepeat
 * mode: choose keyboard support(9x9, 6x6, 2x2)
 * suspended_rate: rate at which keyboard would operate in suspended mode
 *
 * This structure is supposed to be used by platform code to supply
 * keymaps to drivers that implement keyboards.
 */
struct kbd_platform_data {
	const struct matrix_keymap_data *keymap;
	bool rep;
	unsigned int mode;
	unsigned int suspended_rate;
};

#endif /* __PLAT_KEYBOARD_H */
                                                                                                                                                                                                       /*
 * Copyright (c) 2006 Simtec Electronics
 *	http://armlinux.simtec.co.uk/
 *	Ben Dooks <ben@simtec.co.uk>
 *
 * S3C24XX - LEDs GPIO connector
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __LEDS_S3C24XX_H
#define __LEDS_S3C24XX_H

#define S3C24XX_LEDF_ACTLOW	(1<<0)		/* LED is on when GPIO low */
#define S3C24XX_LEDF_TRISTATE	(1<<1)		/* tristate to turn off */

struct s3c24xx_led_platdata {
	unsigned int		 gpio;
	unsigned int		 flags;

	char			*name;
	char			*def_trigger;
};

#endif /* __LEDS_S3C24XX_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * Copyright (c) 201 Broadcom Corporation
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _LINUX_BRCMFMAC_PLATFORM_H
#define _LINUX_BRCMFMAC_PLATFORM_H


#define BRCMFMAC_PDATA_NAME		"brcmfmac"

#define BRCMFMAC_COUNTRY_BUF_SZ		4


/*
 * Platform specific driver functions and data. Through the platform specific
 * device data functions and data can be provided to help the brcmfmac driver to
 * operate with the device in combination with the used platform.
 */


/**
 * Note: the brcmfmac can be loaded as module or be statically built-in into
 * the kernel. If built-in then do note that it uses module_init (and
 * module_exit) routines which equal device_initcall. So if you intend to
 * create a module with the platform specific data for the brcmfmac and have
 * it built-in to the kernel then use a higher initcall then device_initcall
 * (see init.h). If this is not done then brcmfmac will load without problems
 * but will not pickup the platform data.
 *
 * When the driver does not "detect" platform driver data then it will continue
 * without reporting anything and just assume there is no data needed. Which is
 * probably true for most platforms.
 */

/**
 * enum brcmf_bus_type - Bus type identifier. Currently SDIO, USB and PCIE are
 *			 supported.
 */
enum brcmf_bus_type {
	BRCMF_BUSTYPE_SDIO,
	BRCMF_BUSTYPE_USB,
	BRCMF_BUSTYPE_PCIE
};


/**
 * struct brcmfmac_sdio_pd - SDIO Device specific platform data.
 *
 * @txglomsz:		SDIO txglom size. Use 0 if default of driver is to be
 *			used.
 * @drive_strength:	is the preferred drive_strength to be used for the SDIO
 *			pins. If 0 then a default value will be used. This is
 *			the target drive strength, the exact drive strength
 *			which will be used depends on the capabilities of the
 *			device.
 * @oob_irq_supported:	does the board have support for OOB interrupts. SDIO
 *			in-band interrupts are relatively slow and for having
 *			less overhead on interrupt processing an out of band
 *			interrupt can be used. If the HW supports this then
 *			enable this by setting this field to true and configure
 *			the oob related fields.
 * @oob_irq_nr,
 * @oob_irq_flags:	the OOB interrupt information. The values are used for
 *			registering the irq using request_irq function.
 * @broken_sg_support:	flag for broken sg list support of SDIO host controller.
 *			Set this to true if the SDIO host controller has higher
 *			align requirement than 32 bytes for each scatterlist
 *			item.
 * @sd_head_align:	alignment requirement for start of data buffer.
 * @sd_sgentry_align:	length alignment requirement for each sg entry.
 * @reset:		This function can get called if the device communication
 *			broke down. This functionality is particularly useful in
 *			case of SDIO type devices. It is possible to reset a
 *			dongle via sdio data interface, but it requires that
 *			this is fully functional. This function is chip/module
 *			specific and this function should return only after the
 *			complete reset has completed.
 */
struct brcmfmac_sdio_pd {
	int		txglomsz;
	unsigned int	drive_strength;
	bool		oob_irq_supported;
	unsigned int	oob_irq_nr;
	unsigned long	oob_irq_flags;
	bool		broken_sg_support;
	unsigned short	sd_head_align;
	unsigned short	sd_sgentry_align;
	void		(*reset)(void);
};

/**
 * struct brcmfmac_pd_cc_entry - Struct for translating user space country code
 *				 (iso3166) to firmware country code and
 *				 revision.
 *
 * @iso3166:	iso3166 alpha 2 country code string.
 * @cc:		firmware country code string.
 * @rev:	firmware country code revision.
 */
struct brcmfmac_pd_cc_entry {
	char	iso3166[BRCMFMAC_COUNTRY_BUF_SZ];
	char	cc[BRCMFMAC_COUNTRY_BUF_SZ];
	s32	rev;
};

/**
 * struct brcmfmac_pd_cc - Struct for translating country codes as set by user
 *			   space to a country code and rev which can be used by
 *			   firmware.
 *
 * @table_size:	number of entries in table (> 0)
 * @table:	array of 1 or more elements with translation information.
 */
struct brcmfmac_pd_cc {
	int				table_size;
	struct brcmfmac_pd_cc_entry	table[0];
};

/**
 * struct brcmfmac_pd_device - Device specific platform data. (id/rev/bus_type)
 *			       is the unique identifier of the device.
 *
 * @id:			ID of the device for which this data is. In case of SDIO
 *			or PCIE this is the chipid as identified by chip.c In
 *			case of USB this is the chipid as identified by the
 *			device query.
 * @rev:		chip revision, see id.
 * @bus_type:		The type of bus. Some chipid/rev exist for different bus
 *			types. Each bus type has its own set of settings.
 * @feature_disable:	Bitmask of features to disable (override), See feature.c
 *			in brcmfmac for details.
 * @country_codes:	If available, pointer to struct for translating country
 *			codes.
 * @bus:		Bus specific (union) device settings. Currently only
 *			SDIO.
 */
struct brcmfmac_pd_device {
	unsigned int		id;
	unsigned int		rev;
	enum brcmf_bus_type	bus_type;
	unsigned int		feature_disable;
	struct brcmfmac_pd_cc	*country_codes;
	union {
		struct brcmfmac_sdio_pd sdio;
	} bus;
};

/**
 * struct brcmfmac_platform_data - BRCMFMAC specific platform data.
 *
 * @power_on:	This function is called by the brcmfmac driver when the module
 *		gets loaded. This can be particularly useful for low power
 *		devices. The platform spcific routine may for example decide to
 *		power up the complete device. If there is no use-case for this
 *		function then provide NULL.
 * @power_off:	This function is called by the brcmfmac when the module gets
 *		unloaded. At this point the devices can be powered down or
 *		otherwise be reset. So if an actual power_off is not supported
 *		but reset is supported by the devices then reset the devices
 *		when this function gets called. This can be particularly useful
 *		for low power devices. If there is no use-case for this
 *		function then provide NULL.
 */
struct brcmfmac_platform_data {
	void	(*power_on)(void);
	void	(*power_off)(void);
	char	*fw_alternative_path;
	int	device_count;
	struct brcmfmac_pd_device devices[0];
};


#endif /* _LINUX_BRCMFMAC_PLATFORM_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /* drivers/input/touchscreen/zforce.c
 *
 * Copyright (C) 2012-2013 MundoReader S.L.
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef _LINUX_INPUT_ZFORCE_TS_H
#define _LINUX_INPUT_ZFORCE_TS_H

struct zforce_ts_platdata {
	unsigned int x_max;
	unsigned int y_max;
};

#endif /* _LINUX_INPUT_ZFORCE_TS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 *
 *
 */
#ifndef __LINUX_PLATFORM_DATA_EFM32_UART_H__
#define __LINUX_PLATFORM_DATA_EFM32_UART_H__

#include <linux/types.h>

/**
 * struct efm32_uart_pdata
 * @location: pinmux location for the I/O pins (to be written to the ROUTE
 * 	register)
 */
struct efm32_uart_pdata {
	u8 location;
};
#endif /* ifndef __LINUX_PLATFORM_DATA_EFM32_UART_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #ifndef _OMAP2_MCSPI_H
#define _OMAP2_MCSPI_H

#define OMAP2_MCSPI_REV 0
#define OMAP3_MCSPI_REV 1
#define OMAP4_MCSPI_REV 2

#define OMAP4_MCSPI_REG_OFFSET 0x100

#define MCSPI_PINDIR_D0_IN_D1_OUT	0
#define MCSPI_PINDIR_D0_OUT_D1_IN	1

struct omap2_mcspi_platform_config {
	unsigned short	num_cs;
	unsigned int regs_offset;
	unsigned int pin_dir:1;
};

struct omap2_mcspi_dev_attr {
	unsigned short num_chipselect;
};

struct omap2_mcspi_device_config {
	unsigned turbo_mode:1;

	/* toggle chip select after every word */
	unsigned cs_per_word:1;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright (C) ST-Ericsson SA 2011
 *
 * Author: Dmitry Tarnyagin <dmitry.tarnyagin@stericsson.com>
 * License terms: GNU General Public License (GPL) version 2
 */

#ifndef CW1200_PLAT_H_INCLUDED
#define CW1200_PLAT_H_INCLUDED

struct cw1200_platform_data_spi {
	u8 spi_bits_per_word;           /* REQUIRED */
	u16 ref_clk;                    /* REQUIRED (in KHz) */

	/* All others are optional */
	bool have_5ghz;
	int reset;                     /* GPIO to RSTn signal (0 disables) */
	int powerup;                   /* GPIO to POWERUP signal (0 disables) */
	int (*power_ctrl)(const struct cw1200_platform_data_spi *pdata,
			  bool enable); /* Control 3v3 / 1v8 supply */
	int (*clk_ctrl)(const struct cw1200_platform_data_spi *pdata,
			bool enable); /* Control CLK32K */
	const u8 *macaddr;  /* if NULL, use cw1200_mac_template module parameter */
	const char *sdd_file;  /* if NULL, will use default for detected hw type */
};

struct cw1200_platform_data_sdio {
	u16 ref_clk;                    /* REQUIRED (in KHz) */

	/* All others are optional */
	bool have_5ghz;
	bool no_nptb;       /* SDIO hardware does not support non-power-of-2-blocksizes */
	int reset;          /* GPIO to RSTn signal (0 disables) */
	int powerup;        /* GPIO to POWERUP signal (0 disables) */
	int irq;            /* IRQ line or 0 to use SDIO IRQ */
	int (*power_ctrl)(const struct cw1200_platform_data_sdio *pdata,
			  bool enable); /* Control 3v3 / 1v8 supply */
	int (*clk_ctrl)(const struct cw1200_platform_data_sdio *pdata,
			bool enable); /* Control CLK32K */
	const u8 *macaddr;  /* if NULL, use cw1200_mac_template module parameter */
	const char *sdd_file;  /* if NULL, will use default for detected hw type */
};


/* An example of SPI support in your board setup file:

   static struct cw1200_platform_data_spi cw1200_platform_data = {
       .ref_clk = 38400,
       .spi_bits_per_word = 16,
       .reset = GPIO_RF_RESET,
       .powerup = GPIO_RF_POWERUP,
       .macaddr = wifi_mac_addr,
       .sdd_file = "sdd_sagrad_1091_1098.bin",
  };
  static struct spi_board_info myboard_spi_devices[] __initdata = {
       {
               .modalias = "cw1200_wlan_spi",
               .max_speed_hz = 52000000,
               .bus_num = 0,
               .irq = WIFI_IRQ,
               .platform_data = &cw1200_platform_data,
               .chip_select = 0,
       },
  };

 */

/* An example of SDIO support in your board setup file:

  static struct cw1200_platform_data_sdio my_cw1200_platform_data = {
	.ref_clk = 38400,
	.have_5ghz = false,
	.sdd_file = "sdd_myplatform.bin",
  };
  cw1200_sdio_set_platform_data(&my_cw1200_platform_data);

 */

void __init cw1200_sdio_set_platform_data(struct cw1200_platform_data_sdio *pdata);

#endif /* CW1200_PLAT_H_INCLUDED */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /**
 * omap-twl4030.h - ASoC machine driver for TI SoC based boards with twl4030
 *		    codec, header.
 *
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 */

#ifndef _OMAP_TWL4030_H_
#define _OMAP_TWL4030_H_

/* To select if only one channel is connected in a stereo port */
#define OMAP_TWL4030_LEFT	(1 << 0)
#define OMAP_TWL4030_RIGHT	(1 << 1)

struct omap_tw4030_pdata {
	const char *card_name;
	/* Voice port is connected to McBSP3 */
	bool voice_connected;

	/* The driver will parse the connection flags if this flag is set */
	bool	custom_routing;
	/* Flags to indicate connected audio ports. */
	u8	has_hs;
	u8	has_hf;
	u8	has_predriv;
	u8	has_carkit;
	bool	has_ear;

	bool	has_mainmic;
	bool	has_submic;
	bool	has_hsmic;
	bool	has_carkitmic;
	bool	has_digimic0;
	bool	has_digimic1;
	u8	has_linein;

	/* Jack detect GPIO or  <= 0 if it is not implemented */
	int jack_detect;
};

#endif /* _OMAP_TWL4030_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
* Simple driver for Texas Instruments LM3630 LED Flash driver chip
* Copyright (C) 2012 Texas Instruments
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation.
*
*/

#ifndef __LINUX_LM3639_H
#define __LINUX_LM3639_H

#define LM3639_NAME "lm3639_bl"

enum lm3639_pwm {
	LM3639_PWM_DISABLE = 0x00,
	LM3639_PWM_EN_ACTLOW = 0x48,
	LM3639_PWM_EN_ACTHIGH = 0x40,
};

enum lm3639_strobe {
	LM3639_STROBE_DISABLE = 0x00,
	LM3639_STROBE_EN_ACTLOW = 0x10,
	LM3639_STROBE_EN_ACTHIGH = 0x30,
};

enum lm3639_txpin {
	LM3639_TXPIN_DISABLE = 0x00,
	LM3639_TXPIN_EN_ACTLOW = 0x04,
	LM3639_TXPIN_EN_ACTHIGH = 0x0C,
};

enum lm3639_fleds {
	LM3639_FLED_DIASBLE_ALL = 0x00,
	LM3639_FLED_EN_1 = 0x40,
	LM3639_FLED_EN_2 = 0x20,
	LM3639_FLED_EN_ALL = 0x60,
};

enum lm3639_bleds {
	LM3639_BLED_DIASBLE_ALL = 0x00,
	LM3639_BLED_EN_1 = 0x10,
	LM3639_BLED_EN_2 = 0x08,
	LM3639_BLED_EN_ALL = 0x18,
};
enum lm3639_bled_mode {
	LM3639_BLED_MODE_EXPONETIAL = 0x00,
	LM3639_BLED_MODE_LINEAR = 0x10,
};

struct lm3639_platform_data {
	unsigned int max_brt_led;
	unsigned int init_brt_led;

	/* input pins */
	enum lm3639_pwm pin_pwm;
	enum lm3639_strobe pin_strobe;
	enum lm3639_txpin pin_tx;

	/* output pins */
	enum lm3639_fleds fled_pins;
	enum lm3639_bleds bled_pins;
	enum lm3639_bled_mode bled_mode;

	void (*pwm_set_intensity) (int brightness, int max_brightness);
	int (*pwm_get_intensity) (void);
};
#endif /* __LINUX_LM3639_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * SSM2518 amplifier audio driver
 *
 * Copyright 2013 Analog Devices Inc.
 *  Author: Lars-Peter Clausen <lars@metafoo.de>
 *
 * Licensed under the GPL-2.
 */

#ifndef __LINUX_PLATFORM_DATA_SSM2518_H__
#define __LINUX_PLATFORM_DATA_SSM2518_H__

/**
 * struct ssm2518_platform_data - Platform data for the ssm2518 driver
 * @enable_gpio: GPIO connected to the nSD pin. Set to -1 if the nSD pin is
 *            hardwired.
 */
struct ssm2518_platform_data {
	int enable_gpio;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * Regulator Haptic Platform Data
 *
 * Copyright (c) 2014 Samsung Electronics Co., Ltd.
 * Author: Jaewon Kim <jaewon02.kim@samsung.com>
 * Author: Hyunhee Kim <hyunhee.kim@samsung.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _REGULATOR_HAPTIC_H
#define _REGULATOR_HAPTIC_H

/*
 * struct regulator_haptic_data - Platform device data
 *
 * @max_volt: maximum voltage value supplied to the haptic motor.
 *		<The unit of the voltage is a micro>
 * @min_volt: minimum voltage value supplied to the haptic motor.
 *		<The unit of the voltage is a micro>
 */
struct regulator_haptic_data {
	unsigned int max_volt;
	unsigned int min_volt;
};

#endif /* _REGULATOR_HAPTIC_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /* include/linux/platform_data/s3c-hsotg.h
 *
 * Copyright 2008 Openmoko, Inc.
 * Copyright 2008 Simtec Electronics
 *      Ben Dooks <ben@simtec.co.uk>
 *      http://armlinux.simtec.co.uk/
 *
 * S3C USB2.0 High-speed / OtG platform information
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __LINUX_USB_S3C_HSOTG_H
#define __LINUX_USB_S3C_HSOTG_H

struct platform_device;

enum dwc2_hsotg_dmamode {
	S3C_HSOTG_DMA_NONE,	/* do not use DMA at-all */
	S3C_HSOTG_DMA_ONLY,	/* always use DMA */
	S3C_HSOTG_DMA_DRV,	/* DMA is chosen by driver */
};

/**
 * struct dwc2_hsotg_plat - platform data for high-speed otg/udc
 * @dma: Whether to use DMA or not.
 * @is_osc: The clock source is an oscillator, not a crystal
 */
struct dwc2_hsotg_plat {
	enum dwc2_hsotg_dmamode	dma;
	unsigned int		is_osc:1;
	int                     phy_type;

	int (*phy_init)(struct platform_device *pdev, int type);
	int (*phy_exit)(struct platform_device *pdev, int type);
};

extern void dwc2_hsotg_set_platdata(struct dwc2_hsotg_plat *pd);

#endif /* __LINUX_USB_S3C_HSOTG_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * lv5207lp.h - Sanyo LV5207LP LEDs Driver
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __LV5207LP_H__
#define __LV5207LP_H__

struct device;

struct lv5207lp_platform_data {
	struct device *fbdev;
	unsigned int max_value;
	unsigned int def_value;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef ASMARM_ARCH_MMC_H
#define ASMARM_ARCH_MMC_H

#include <linux/mmc/host.h>

struct device;

/* board specific SDHC data, optional.
 * If not present, a writable card with 3,3V is assumed.
 */
struct imxmmc_platform_data {
	/* Return values for the get_ro callback should be:
	 *   0 for a read/write card
	 *   1 for a read-only card
	 *   -ENOSYS when not supported (equal to NULL callback)
	 *   or a negative errno value when something bad happened
	 */
	int (*get_ro)(struct device *);

	/* board specific hook to (de)initialize the SD slot.
	 * The board code can call 'handler' on a card detection
	 * change giving data as argument.
	 */
	int (*init)(struct device *dev, irq_handler_t handler, void *data);
	void (*exit)(struct device *dev, void *data);

	/* available voltages. If not given, assume
	 * MMC_VDD_32_33 | MMC_VDD_33_34
	 */
	unsigned int ocr_avail;

	/* adjust slot voltage */
	void (*setpower)(struct device *, unsigned int vdd);

	/* enable card detect using DAT3 */
	int dat3_card_detect;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright (c) 2014 Samsung Electronics Co., Ltd.
 *              http://www.samsung.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __CPUIDLE_EXYNOS_H
#define __CPUIDLE_EXYNOS_H

struct cpuidle_exynos_data {
	int (*cpu0_enter_aftr)(void);
	int (*cpu1_powerdown)(void);
	void (*pre_enter_aftr)(void);
	void (*post_enter_aftr)(void);
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * ntc_thermistor.h - NTC Thermistors
 *
 *  Copyright (C) 2010 Samsung Electronics
 *  MyungJoo Ham <myungjoo.ham@samsung.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
#ifndef _LINUX_NTC_H
#define _LINUX_NTC_H

struct iio_channel;

enum ntc_thermistor_type {
	TYPE_NCPXXWB473,
	TYPE_NCPXXWL333,
	TYPE_B57330V2103,
	TYPE_NCPXXWF104,
	TYPE_NCPXXXH103,
};

struct ntc_thermistor_platform_data {
	/*
	 * One (not both) of read_uV and read_ohm should be provided and only
	 * one of the two should be provided.
	 * Both functions should return negative value for an error case.
	 *
	 * pullup_uV, pullup_ohm, pulldown_ohm, and connect are required to use
	 * read_uV()
	 *
	 * How to setup pullup_ohm, pulldown_ohm, and connect is
	 * described at Documentation/hwmon/ntc_thermistor
	 *
	 * pullup/down_ohm: 0 for infinite / not-connected
	 *
	 * chan: iio_channel pointer to communicate with the ADC which the
	 * thermistor is using for conversion of the analog values.
	 */
	int (*read_uv)(struct ntc_thermistor_platform_data *);
	unsigned int pullup_uv;

	unsigned int pullup_ohm;
	unsigned int pulldown_ohm;
	enum { NTC_CONNECTED_POSITIVE, NTC_CONNECTED_GROUND } connect;
	struct iio_channel *chan;

	int (*read_ohm)(void);
};

#endif /* _LINUX_NTC_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               void __init u300_clk_init(void __iomem *base);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Atmel maXTouch Touchscreen driver
 *
 * Copyright (C) 2010 Samsung Electronics Co.Ltd
 * Author: Joonyoung Shim <jy0922.shim@samsung.com>
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of  the GNU General  Public License as published by the
 * Free Software Foundation;  either version 2 of the  License, or (at your
 * option) any later version.
 */

#ifndef __LINUX_PLATFORM_DATA_ATMEL_MXT_TS_H
#define __LINUX_PLATFORM_DATA_ATMEL_MXT_TS_H

#include <linux/types.h>

enum mxt_suspend_mode {
	MXT_SUSPEND_DEEP_SLEEP	= 0,
	MXT_SUSPEND_T9_CTRL	= 1,
};

/* The platform data for the Atmel maXTouch touchscreen driver */
struct mxt_platform_data {
	unsigned long irqflags;
	u8 t19_num_keys;
	const unsigned int *t19_keymap;
	enum mxt_suspend_mode suspend_mode;
};

#endif /* __LINUX_PLATFORM_DATA_ATMEL_MXT_TS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #ifndef __ASM_ARCH_PXA3XX_NAND_H
#define __ASM_ARCH_PXA3XX_NAND_H

#include <linux/mtd/mtd.h>
#include <linux/mtd/partitions.h>

/*
 * Current pxa3xx_nand controller has two chip select which
 * both be workable.
 *
 * Notice should be taken that:
 * When you want to use this feature, you should not enable the
 * keep configuration feature, for two chip select could be
 * attached with different nand chip. The different page size
 * and timing requirement make the keep configuration impossible.
 */

/* The max num of chip select current support */
#define NUM_CHIP_SELECT		(2)
struct pxa3xx_nand_platform_data {

	/* the data flash bus is shared between the Static Memory
	 * Controller and the Data Flash Controller,  the arbiter
	 * controls the ownership of the bus
	 */
	int	enable_arbiter;

	/* allow platform code to keep OBM/bootloader defined NFC config */
	int	keep_config;

	/* indicate how many chip selects will be used */
	int	num_cs;

	/* use an flash-based bad block table */
	bool	flash_bbt;

	/* requested ECC strength and ECC step size */
	int ecc_strength, ecc_step_size;

	const struct mtd_partition		*parts[NUM_CHIP_SELECT];
	unsigned int				nr_parts[NUM_CHIP_SELECT];
};

extern void pxa3xx_set_nand_info(struct pxa3xx_nand_platform_data *info);
#endif /* __ASM_ARCH_PXA3XX_NAND_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * S3C24XX USB 2.0 High-speed USB controller gadget driver
 *
 * Copyright (c) 2010 Samsung Electronics Co., Ltd.
 *		http://www.samsung.com/
 *
 * The S3C24XX USB 2.0 high-speed USB controller supports upto 9 endpoints.
 * Each endpoint can be configured as either in or out endpoint. Endpoints
 * can be configured for Bulk or Interrupt transfer mode.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __LINUX_USB_S3C_HSUDC_H
#define __LINUX_USB_S3C_HSUDC_H

/**
 * s3c24xx_hsudc_platdata - Platform data for USB High-Speed gadget controller.
 * @epnum: Number of endpoints to be instantiated by the controller driver.
 * @gpio_init: Platform specific USB related GPIO initialization.
 * @gpio_uninit: Platform specific USB releted GPIO uninitialzation.
 *
 * Representation of platform data for the S3C24XX USB 2.0 High Speed gadget
 * controllers.
 */
struct s3c24xx_hsudc_platdata {
	unsigned int	epnum;
	void		(*gpio_init)(void);
	void		(*gpio_uninit)(void);
};

#endif	/* __LINUX_USB_S3C_HSUDC_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * bd6107.h - Rohm BD6107 LEDs Driver
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __BD6107_H__
#define __BD6107_H__

struct device;

struct bd6107_platform_data {
	struct device *fbdev;
	int reset;			/* Reset GPIO */
	unsigned int def_value;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  /*
 * db8500_thermal.h - DB8500 Thermal Management Implementation
 *
 * Copyright (C) 2012 ST-Ericsson
 * Copyright (C) 2012 Linaro Ltd.
 *
 * Author: Hongbo Zhang <hongbo.zhang@linaro.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef _DB8500_THERMAL_H_
#define _DB8500_THERMAL_H_

#include <linux/thermal.h>

#define COOLING_DEV_MAX 8

struct db8500_trip_point {
	unsigned long temp;
	enum thermal_trip_type type;
	char cdev_name[COOLING_DEV_MAX][THERMAL_NAME_LENGTH];
};

struct db8500_thsens_platform_data {
	struct db8500_trip_point trip_points[THERMAL_MAX_TRIPS];
	int num_trips;
};

#endif /* _DB8500_THERMAL_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Driver for Texas Instruments INA219, INA226 power monitor chips
 *
 * Copyright (C) 2012 Lothar Felten <l-felten@ti.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * For further information, see the Documentation/hwmon/ina2xx file.
 */

/**
 * struct ina2xx_platform_data - ina2xx info
 * @shunt_uohms		shunt resistance in microohms
 */
struct ina2xx_platform_data {
	long shunt_uohms;
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Remote Processor - omap-specific bits
 *
 * Copyright (C) 2011 Texas Instruments, Inc.
 * Copyright (C) 2011 Google, Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef _PLAT_REMOTEPROC_H
#define _PLAT_REMOTEPROC_H

struct rproc_ops;
struct platform_device;

/*
 * struct omap_rproc_pdata - omap remoteproc's platform data
 * @name: the remoteproc's name
 * @oh_name: omap hwmod device
 * @oh_name_opt: optional, secondary omap hwmod device
 * @firmware: name of firmware file to load
 * @mbox_name: name of omap mailbox device to use with this rproc
 * @ops: start/stop rproc handlers
 * @device_enable: omap-specific handler for enabling a device
 * @device_shutdown: omap-specific handler for shutting down a device
 * @set_bootaddr: omap-specific handler for setting the rproc boot address
 */
struct omap_rproc_pdata {
	const char *name;
	const char *oh_name;
	const char *oh_name_opt;
	const char *firmware;
	const char *mbox_name;
	const struct rproc_ops *ops;
	int (*device_enable)(struct platform_device *pdev);
	int (*device_shutdown)(struct platform_device *pdev);
	void (*set_bootaddr)(u32);
};

#if defined(CONFIG_OMAP_REMOTEPROC) || defined(CONFIG_OMAP_REMOTEPROC_MODULE)

void __init omap_rproc_reserve_cma(void);

#else

static inline void __init omap_rproc_reserve_cma(void)
{
}

#endif

#endif /* _PLAT_REMOTEPROC_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 * gpio_backlight.h - Simple GPIO-controlled backlight
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __GPIO_BACKLIGHT_H__
#define __GPIO_BACKLIGHT_H__

struct device;

struct gpio_backlight_platform_data {
	struct device *fbdev;
	int gpio;
	int def_value;
	bool active_low;
	const char *name;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Analog Devices AD7303 DAC driver
 *
 * Copyright 2013 Analog Devices Inc.
 *
 * Licensed under the GPL-2.
 */

#ifndef __IIO_ADC_AD7303_H__
#define __IIO_ADC_AD7303_H__

/**
 * struct ad7303_platform_data - AD7303 platform data
 * @use_external_ref: If set to true use an external voltage reference connected
 * to the REF pin, otherwise use the internal reference derived from Vdd.
 */
struct ad7303_platform_data {
	bool use_external_ref;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * max6697.h
 *     Copyright (c) 2012 Guenter Roeck <linux@roeck-us.net>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef MAX6697_H
#define MAX6697_H

#include <linux/types.h>

/*
 * For all bit masks:
 * bit 0:    local temperature
 * bit 1..7: remote temperatures
 */
struct max6697_platform_data {
	bool smbus_timeout_disable;	/* set to disable SMBus timeouts */
	bool extended_range_enable;	/* set to enable extended temp range */
	bool beta_compensation;		/* set to enable beta compensation */
	u8 alert_mask;			/* set bit to 1 to disable alert */
	u8 over_temperature_mask;	/* set bit to 1 to disable */
	u8 resistance_cancellation;	/* set bit to 0 to disable
					 * bit mask for MAX6581,
					 * boolean for other chips
					 */
	u8 ideality_mask;		/* set bit to 0 to disable */
	u8 ideality_value;		/* transistor ideality as per
					 * MAX6581 datasheet
					 */
};

#endif /* MAX6697_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * MMC definitions for OMAP2
 *
 * Copyright (C) 2006 Nokia Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#define OMAP_MMC_MAX_SLOTS	2

struct mmc_card;

struct omap_mmc_platform_data {
	/* back-link to device */
	struct device *dev;

	/* number of slots per controller */
	unsigned nr_slots:2;

	/* set if your board has components or wiring that limits the
	 * maximum frequency on the MMC bus */
	unsigned int max_freq;

	/* switch the bus to a new slot */
	int (*switch_slot)(struct device *dev, int slot);
	/* initialize board-specific MMC functionality, can be NULL if
	 * not supported */
	int (*init)(struct device *dev);
	void (*cleanup)(struct device *dev);
	void (*shutdown)(struct device *dev);

	/* Return context loss count due to PM states changing */
	int (*get_context_loss_count)(struct device *dev);

	/* Integrating attributes from the omap_hwmod layer */
	u8 controller_flags;

	/* Register offset deviation */
	u16 reg_offset;

	struct omap_mmc_slot_data {

		/*
		 * 4/8 wires and any additional host capabilities
		 * need to OR'd all capabilities (ref. linux/mmc/host.h)
		 */
		u8  wires;	/* Used for the MMC driver on omap1 and 2420 */
		u32 caps;	/* Used for the MMC driver on 2430 and later */
		u32 pm_caps;	/* PM capabilities of the mmc */

		/*
		 * nomux means "standard" muxing is wrong on this board, and
		 * that board-specific code handled it before common init logic.
		 */
		unsigned nomux:1;

		/* switch pin can be for card detect (default) or card cover */
		unsigned cover:1;

		/* use the internal clock */
		unsigned internal_clock:1;

		/* nonremovable e.g. eMMC */
		unsigned nonremovable:1;

		/* Try to sleep or power off when possible */
		unsigned power_saving:1;

		/* If using power_saving and the MMC power is not to go off */
		unsigned no_off:1;

		/* eMMC does not handle power off when not in sleep state */
		unsigned no_regulator_off_init:1;

		/* Regulator off remapped to sleep */
		unsigned vcc_aux_disable_is_sleep:1;

		/* we can put the features above into this variable */
#define MMC_OMAP7XX		(1 << 3)
#define MMC_OMAP15XX		(1 << 4)
#define MMC_OMAP16XX		(1 << 5)
		unsigned features;

		int switch_pin;			/* gpio (card detect) */
		int gpio_wp;			/* gpio (write protect) */

		int (*set_bus_mode)(struct device *dev, int slot, int bus_mode);
		int (*set_power)(struct device *dev, int slot,
				 int power_on, int vdd);
		int (*get_ro)(struct device *dev, int slot);
		void (*remux)(struct device *dev, int slot, int power_on);
		/* Call back before enabling / disabling regulators */
		void (*before_set_reg)(struct device *dev, int slot,
				       int power_on, int vdd);
		/* Call back after enabling / disabling regulators */
		void (*after_set_reg)(struct device *dev, int slot,
				      int power_on, int vdd);
		/* if we have special card, init it using this callback */
		void (*init_card)(struct mmc_card *card);

		/* return MMC cover switch state, can be NULL if not supported.
		 *
		 * possible return values:
		 *   0 - closed
		 *   1 - open
		 */
		int (*get_cover_state)(struct device *dev, int slot);

		const char *name;
		u32 ocr_mask;

		/* Card detection IRQs */
		int card_detect_irq;
		int (*card_detect)(struct device *dev, int slot);

		unsigned int ban_openended:1;

	} slots[OMAP_MMC_MAX_SLOTS];
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright 2008 Simtec Electronics
 *	http://armlinux.simtec.co.uk/
 *	Ben Dooks <ben@simtec.co.uk>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * Simtec Audio support.
*/

/**
 * struct s3c24xx_audio_simtec_pdata - platform data for simtec audio
 * @use_mpllin: Select codec clock from MPLLin
 * @output_cdclk: Need to output CDCLK to the codec
 * @have_mic: Set if we have a MIC socket
 * @have_lout: Set if we have a LineOut socket
 * @amp_gpio: GPIO pin to enable the AMP
 * @amp_gain: Option GPIO to control AMP gain
 */
struct s3c24xx_audio_simtec_pdata {
	unsigned int	use_mpllin:1;
	unsigned int	output_cdclk:1;

	unsigned int	have_mic:1;
	unsigned int	have_lout:1;

	int		amp_gpio;
	int		amp_gain[2];

	void	(*startup)(void);
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Generic platform data for the NXP NCI NFC chips.
 *
 * Copyright (C) 2014  NXP Semiconductors  All rights reserved.
 *
 * Authors: Clément Perrochaud <clement.perrochaud@nxp.com>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef _NXP_NCI_H_
#define _NXP_NCI_H_

struct nxp_nci_nfc_platform_data {
	unsigned int gpio_en;
	unsigned int gpio_fw;
	unsigned int irq;
};

#endif /* _NXP_NCI_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #ifndef __PLAT_AUDIO_H
#define __PLAT_AUDIO_H

struct kirkwood_asoc_platform_data {
	int burst;
};
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Driver for the High Speed UART DMA
 *
 * Copyright (C) 2015 Intel Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _PLATFORM_DATA_DMA_HSU_H
#define _PLATFORM_DATA_DMA_HSU_H

#include <linux/device.h>

struct hsu_dma_slave {
	struct device	*dma_dev;
	int		chan_id;
};

#endif /* _PLATFORM_DATA_DMA_HSU_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #ifndef __LINUX_PLATFORM_DATA_AD7791__
#define __LINUX_PLATFORM_DATA_AD7791__

/**
 * struct ad7791_platform_data - AD7791 device platform data
 * @buffered: If set to true configure the device for buffered input mode.
 * @burnout_current: If set to true the 100mA burnout current is enabled.
 * @unipolar: If set to true sample in unipolar mode, if set to false sample in
 *		bipolar mode.
 */
struct ad7791_platform_data {
	bool buffered;
	bool burnout_current;
	bool unipolar;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * MMC definitions for OMAP2
 *
 * Copyright (C) 2006 Nokia Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/*
 * struct omap_hsmmc_dev_attr.flags possibilities
 *
 * OMAP_HSMMC_SUPPORTS_DUAL_VOLT: Some HSMMC controller instances can
 *    operate with either 1.8Vdc or 3.0Vdc card voltages; this flag
 *    should be set if this is the case.  See for example Section 22.5.3
 *    "MMC/SD/SDIO1 Bus Voltage Selection" of the OMAP34xx Multimedia
 *    Device Silicon Revision 3.1.x Revision ZR (July 2011) (SWPU223R).
 *
 * OMAP_HSMMC_BROKEN_MULTIBLOCK_READ: Multiple-block read transfers
 *    don't work correctly on some MMC controller instances on some
 *    OMAP3 SoCs; this flag should be set if this is the case.  See
 *    for example Advisory 2.1.1.128 "MMC: Multiple Block Read
 *    Operation Issue" in _OMAP3530/3525/3515/3503 Silicon Errata_
 *    Revision F (October 2010) (SPRZ278F).
 */
#define OMAP_HSMMC_SUPPORTS_DUAL_VOLT		BIT(0)
#define OMAP_HSMMC_BROKEN_MULTIBLOCK_READ	BIT(1)
#define OMAP_HSMMC_SWAKEUP_MISSING		BIT(2)

struct omap_hsmmc_dev_attr {
	u8 flags;
};

struct mmc_card;

struct omap_hsmmc_platform_data {
	/* back-link to device */
	struct device *dev;

	/* set if your board has components or wiring that limits the
	 * maximum frequency on the MMC bus */
	unsigned int max_freq;

	/* Integrating attributes from the omap_hwmod layer */
	u8 controller_flags;

	/* Register offset deviation */
	u16 reg_offset;

	/*
	 * 4/8 wires and any additional host capabilities
	 * need to OR'd all capabilities (ref. linux/mmc/host.h)
	 */
	u32 caps;	/* Used for the MMC driver on 2430 and later */
	u32 pm_caps;	/* PM capabilities of the mmc */

	/* use the internal clock */
	unsigned internal_clock:1;

	/* nonremovable e.g. eMMC */
	unsigned nonremovable:1;

	/* eMMC does not handle power off when not in sleep state */
	unsigned no_regulator_off_init:1;

	/* we can put the features above into this variable */
#define HSMMC_HAS_PBIAS		(1 << 0)
#define HSMMC_HAS_UPDATED_RESET	(1 << 1)
#define HSMMC_HAS_HSPE_SUPPORT	(1 << 2)
	unsigned features;

	int gpio_cd;			/* gpio (card detect) */
	int gpio_cod;			/* gpio (cover detect) */
	int gpio_wp;			/* gpio (write protect) */

	int (*set_power)(struct device *dev, int power_on, int vdd);
	void (*remux)(struct device *dev, int power_on);
	/* Call back before enabling / disabling regulators */
	void (*before_set_reg)(struct device *dev, int power_on, int vdd);
	/* Call back after enabling / disabling regulators */
	void (*after_set_reg)(struct device *dev, int power_on, int vdd);
	/* if we have special card, init it using this callback */
	void (*init_card)(struct mmc_card *card);

	const char *name;
	u32 ocr_mask;
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * ADAU1977/ADAU1978/ADAU1979 driver
 *
 * Copyright 2014 Analog Devices Inc.
 *  Author: Lars-Peter Clausen <lars@metafoo.de>
 *
 * Licensed under the GPL-2.
 */

#ifndef __LINUX_PLATFORM_DATA_ADAU1977_H__
#define __LINUX_PLATFORM_DATA_ADAU1977_H__

/**
 * enum adau1977_micbias - ADAU1977 MICBIAS pin voltage setting
 * @ADAU1977_MICBIAS_5V0: MICBIAS is set to 5.0 V
 * @ADAU1977_MICBIAS_5V5: MICBIAS is set to 5.5 V
 * @ADAU1977_MICBIAS_6V0: MICBIAS is set to 6.0 V
 * @ADAU1977_MICBIAS_6V5: MICBIAS is set to 6.5 V
 * @ADAU1977_MICBIAS_7V0: MICBIAS is set to 7.0 V
 * @ADAU1977_MICBIAS_7V5: MICBIAS is set to 7.5 V
 * @ADAU1977_MICBIAS_8V0: MICBIAS is set to 8.0 V
 * @ADAU1977_MICBIAS_8V5: MICBIAS is set to 8.5 V
 * @ADAU1977_MICBIAS_9V0: MICBIAS is set to 9.0 V
 */
enum adau1977_micbias {
	ADAU1977_MICBIAS_5V0 = 0x0,
	ADAU1977_MICBIAS_5V5 = 0x1,
	ADAU1977_MICBIAS_6V0 = 0x2,
	ADAU1977_MICBIAS_6V5 = 0x3,
	ADAU1977_MICBIAS_7V0 = 0x4,
	ADAU1977_MICBIAS_7V5 = 0x5,
	ADAU1977_MICBIAS_8V0 = 0x6,
	ADAU1977_MICBIAS_8V5 = 0x7,
	ADAU1977_MICBIAS_9V0 = 0x8,
};

/**
 * struct adau1977_platform_data - Platform configuration data for the ADAU1977
 * @micbias: Specifies the voltage for the MICBIAS pin
 */
struct adau1977_platform_data {
	enum adau1977_micbias micbias;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             /*
 * Copyright (C) 2006 Nokia Corporation
 * Author: Juha Yrjola
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef	__MTD_ONENAND_OMAP2_H
#define	__MTD_ONENAND_OMAP2_H

#include <linux/mtd/mtd.h>
#include <linux/mtd/partitions.h>

#define ONENAND_SYNC_READ	(1 << 0)
#define ONENAND_SYNC_READWRITE	(1 << 1)
#define	ONENAND_IN_OMAP34XX	(1 << 2)

struct omap_onenand_platform_data {
	int			cs;
	int			gpio_irq;
	struct mtd_partition	*parts;
	int			nr_parts;
	int			(*onenand_setup)(void __iomem *, int *freq_ptr);
	int			dma_channel;
	u8			flags;
	u8			regulator_can_sleep;
	u8			skip_initial_unlocking;

	/* for passing the partitions */
	struct device_node	*of_node;
};
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 *  Board-specific MMC configuration
 */

#ifndef _DAVINCI_MMC_H
#define _DAVINCI_MMC_H

#include <linux/types.h>
#include <linux/mmc/host.h>

struct davinci_mmc_config {
	/* get_cd()/get_wp() may sleep */
	int	(*get_cd)(int module);
	int	(*get_ro)(int module);

	void	(*set_power)(int module, bool on);

	/* wires == 0 is equivalent to wires == 4 (4-bit parallel) */
	u8	wires;

	u32     max_freq;

	/* any additional host capabilities: OR'd in to mmc->f_caps */
	u32     caps;

	/* Number of sg segments */
	u8	nr_sg;
};
void davinci_setup_mmc(int module, struct davinci_mmc_config *config);

enum {
	MMC_CTLR_VERSION_1 = 0,	/* DM644x and DM355 */
	MMC_CTLR_VERSION_2,	/* DA830 */
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * LP8727 Micro/Mini USB IC with integrated charger
 *
 *			Copyright (C) 2011 Texas Instruments
 *			Copyright (C) 2011 National Semiconductor
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _LP8727_H
#define _LP8727_H

enum lp8727_eoc_level {
	LP8727_EOC_5P,
	LP8727_EOC_10P,
	LP8727_EOC_16P,
	LP8727_EOC_20P,
	LP8727_EOC_25P,
	LP8727_EOC_33P,
	LP8727_EOC_50P,
};

enum lp8727_ichg {
	LP8727_ICHG_90mA,
	LP8727_ICHG_100mA,
	LP8727_ICHG_400mA,
	LP8727_ICHG_450mA,
	LP8727_ICHG_500mA,
	LP8727_ICHG_600mA,
	LP8727_ICHG_700mA,
	LP8727_ICHG_800mA,
	LP8727_ICHG_900mA,
	LP8727_ICHG_1000mA,
};

/**
 * struct lp8727_chg_param
 * @eoc_level : end of charge level setting
 * @ichg      : charging current
 */
struct lp8727_chg_param {
	enum lp8727_eoc_level eoc_level;
	enum lp8727_ichg ichg;
};

/**
 * struct lp8727_platform_data
 * @get_batt_present  : check battery status - exists or not
 * @get_batt_level    : get battery voltage (mV)
 * @get_batt_capacity : get battery capacity (%)
 * @get_batt_temp     : get battery temperature
 * @ac                : charging parameters for AC type charger
 * @usb               : charging parameters for USB type charger
 * @debounce_msec     : interrupt debounce time
 */
struct lp8727_platform_data {
	u8 (*get_batt_present)(void);
	u16 (*get_batt_level)(void);
	u8 (*get_batt_capacity)(void);
	u8 (*get_batt_temp)(void);
	struct lp8727_chg_param *ac;
	struct lp8727_chg_param *usb;
	unsigned int debounce_msec;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright 2005 Simtec Electronics
 *	Ben Dooks <ben@simtec.co.uk>
 *	http://armlinux.simtec.co.uk/
 *
 * S3C - HWMon interface for ADC
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __HWMON_S3C_H__
#define __HWMON_S3C_H__

/**
 * s3c_hwmon_chcfg - channel configuration
 * @name: The name to give this channel.
 * @mult: Multiply the ADC value read by this.
 * @div: Divide the value from the ADC by this.
 *
 * The value read from the ADC is converted to a value that
 * hwmon expects (mV) by result = (value_read * @mult) / @div.
 */
struct s3c_hwmon_chcfg {
	const char	*name;
	unsigned int	mult;
	unsigned int	div;
};

/**
 * s3c_hwmon_pdata - HWMON platform data
 * @in: One configuration for each possible channel used.
 */
struct s3c_hwmon_pdata {
	struct s3c_hwmon_chcfg	*in[8];
};

/**
 * s3c_hwmon_set_platdata - Set platform data for S3C HWMON device
 * @pd: Platform data to register to device.
 *
 * Register the given platform data for use with the S3C HWMON device.
 * The call will copy the platform data, so the board definitions can
 * make the structure itself __initdata.
 */
extern void __init s3c_hwmon_set_platdata(struct s3c_hwmon_pdata *pd);

#endif /* __HWMON_S3C_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  /*
 * isl9305 - Intersil ISL9305 DCDC regulator
 *
 * Copyright 2014 Linaro Ltd
 *
 * Author: Mark Brown <broonie@kernel.org>
 *
 *  This program is free software; you can redistribute  it and/or modify it
 *  under  the terms of  the GNU General  Public License as published by the
 *  Free Software Foundation;  either version 2 of the  License, or (at your
 *  option) any later version.
 */

#ifndef __ISL9305_H
#define __ISL9305_H

#define ISL9305_DCD1 0
#define ISL9305_DCD2 1
#define ISL9305_LDO1 2
#define ISL9305_LDO2 3

#define ISL9305_MAX_REGULATOR ISL9305_LDO2

struct regulator_init_data;

struct isl9305_pdata {
	struct regulator_init_data *init_data[ISL9305_MAX_REGULATOR];
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Copyright 2004-2009 Simtec Electronics
 *	Ben Dooks <ben@simtec.co.uk>
 *
 * S3C - I2C Controller platform_device info
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __I2C_S3C2410_H
#define __I2C_S3C2410_H __FILE__

#define S3C_IICFLG_FILTER	(1<<0)	/* enable s3c2440 filter */

struct platform_device;

/**
 *	struct s3c2410_platform_i2c - Platform data for s3c I2C.
 *	@bus_num: The bus number to use (if possible).
 *	@flags: Any flags for the I2C bus (E.g. S3C_IICFLK_FILTER).
 *	@slave_addr: The I2C address for the slave device (if enabled).
 *	@frequency: The desired frequency in Hz of the bus.  This is
 *                  guaranteed to not be exceeded.  If the caller does
 *                  not care, use zero and the driver will select a
 *                  useful default.
 *	@sda_delay: The delay (in ns) applied to SDA edges.
 *	@cfg_gpio: A callback to configure the pins for I2C operation.
 */
struct s3c2410_platform_i2c {
	int		bus_num;
	unsigned int	flags;
	unsigned int	slave_addr;
	unsigned long	frequency;
	unsigned int	sda_delay;

	void	(*cfg_gpio)(struct platform_device *dev);
};

/**
 * s3c_i2c0_set_platdata - set platform data for i2c0 device
 * @i2c: The platform data to set, or NULL for default data.
 *
 * Register the given platform data for use with the i2c0 device. This
 * call copies the platform data, so the caller can use __initdata for
 * their copy.
 *
 * This call will set cfg_gpio if is null to the default platform
 * implementation.
 *
 * Any user of s3c_device_i2c0 should call this, even if it is with
 * NULL to ensure that the device is given the default platform data
 * as the driver will no longer carry defaults.
 */
extern void s3c_i2c0_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s3c_i2c1_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s3c_i2c2_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s3c_i2c3_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s3c_i2c4_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s3c_i2c5_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s3c_i2c6_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s3c_i2c7_set_platdata(struct s3c2410_platform_i2c *i2c);
extern void s5p_i2c_hdmiphy_set_platdata(struct s3c2410_platform_i2c *i2c);

/* defined by architecture to configure gpio */
extern void s3c_i2c0_cfg_gpio(struct platform_device *dev);
extern void s3c_i2c1_cfg_gpio(struct platform_device *dev);
extern void s3c_i2c2_cfg_gpio(struct platform_device *dev);
extern void s3c_i2c3_cfg_gpio(struct platform_device *dev);
extern void s3c_i2c4_cfg_gpio(struct platform_device *dev);
extern void s3c_i2c5_cfg_gpio(struct platform_device *dev);
extern void s3c_i2c6_cfg_gpio(struct platform_device *dev);
extern void s3c_i2c7_cfg_gpio(struct platform_device *dev);

extern struct s3c2410_platform_i2c default_i2c_data;

#endif /* __I2C_S3C2410_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef __PLATFORM_DATA_ASOC_MX27VIS_H
#define __PLATFORM_DATA_ASOC_MX27VIS_H

struct snd_mx27vis_platform_data {
	int amp_gain0_gpio;
	int amp_gain1_gpio;
	int amp_mutel_gpio;
	int amp_muter_gpio;
};

#endif /* __PLATFORM_DATA_ASOC_MX27VIS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 * simplefb.h - Simple Framebuffer Device
 *
 * Copyright (C) 2013 David Herrmann <dh.herrmann@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#ifndef __PLATFORM_DATA_SIMPLEFB_H__
#define __PLATFORM_DATA_SIMPLEFB_H__

#include <drm/drm_fourcc.h>
#include <linux/fb.h>
#include <linux/kernel.h>

/* format array, use it to initialize a "struct simplefb_format" array */
#define SIMPLEFB_FORMATS \
{ \
	{ "r5g6b5", 16, {11, 5}, {5, 6}, {0, 5}, {0, 0}, DRM_FORMAT_RGB565 }, \
	{ "x1r5g5b5", 16, {10, 5}, {5, 5}, {0, 5}, {0, 0}, DRM_FORMAT_XRGB1555 }, \
	{ "a1r5g5b5", 16, {10, 5}, {5, 5}, {0, 5}, {15, 1}, DRM_FORMAT_ARGB1555 }, \
	{ "r8g8b8", 24, {16, 8}, {8, 8}, {0, 8}, {0, 0}, DRM_FORMAT_RGB888 }, \
	{ "x8r8g8b8", 32, {16, 8}, {8, 8}, {0, 8}, {0, 0}, DRM_FORMAT_XRGB8888 }, \
	{ "a8r8g8b8", 32, {16, 8}, {8, 8}, {0, 8}, {24, 8}, DRM_FORMAT_ARGB8888 }, \
	{ "a8b8g8r8", 32, {0, 8}, {8, 8}, {16, 8}, {24, 8}, DRM_FORMAT_ABGR8888 }, \
	{ "x2r10g10b10", 32, {20, 10}, {10, 10}, {0, 10}, {0, 0}, DRM_FORMAT_XRGB2101010 }, \
	{ "a2r10g10b10", 32, {20, 10}, {10, 10}, {0, 10}, {30, 2}, DRM_FORMAT_ARGB2101010 }, \
}

/*
 * Data-Format for Simple-Framebuffers
 * @name: unique 0-terminated name that can be used to identify the mode
 * @red,green,blue: Offsets and sizes of the single RGB parts
 * @transp: Offset and size of the alpha bits. length=0 means no alpha
 * @fourcc: 32bit DRM four-CC code (see drm_fourcc.h)
 */
struct simplefb_format {
	const char *name;
	u32 bits_per_pixel;
	struct fb_bitfield red;
	struct fb_bitfield green;
	struct fb_bitfield blue;
	struct fb_bitfield transp;
	u32 fourcc;
};

/*
 * Simple-Framebuffer description
 * If the arch-boot code creates simple-framebuffers without DT support, it
 * can pass the width, height, stride and format via this platform-data object.
 * The framebuffer location must be given as IORESOURCE_MEM resource.
 * @format must be a format as described in "struct simplefb_format" above.
 */
struct simplefb_platform_data {
	u32 width;
	u32 height;
	u32 stride;
	const char *format;
};

#endif /* __PLATFORM_DATA_SIMPLEFB_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /* sh_ipmmu.h
 *
 * Copyright (C) 2012  Hideki EIRAKU
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 */

#ifndef __SH_IPMMU_H__
#define __SH_IPMMU_H__

struct shmobile_ipmmu_platform_data {
	const char * const *dev_names;
	unsigned int num_dev_names;
};

#endif /* __SH_IPMMU_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 *  Copyright (C) 2010 Broadcom
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _PLAT_BCM2708_DMA_H
#define _PLAT_BCM2708_DMA_H

/* DMA CS Control and Status bits */
#define BCM2708_DMA_ACTIVE	BIT(0)
#define BCM2708_DMA_INT		BIT(2)
#define BCM2708_DMA_ISPAUSED	BIT(4)  /* Pause requested or not active */
#define BCM2708_DMA_ISHELD	BIT(5)  /* Is held by DREQ flow control */
#define BCM2708_DMA_ERR		BIT(8)
#define BCM2708_DMA_ABORT	BIT(30) /* stop current CB, go to next, WO */
#define BCM2708_DMA_RESET	BIT(31) /* WO, self clearing */

/* DMA control block "info" field bits */
#define BCM2708_DMA_INT_EN	BIT(0)
#define BCM2708_DMA_TDMODE	BIT(1)
#define BCM2708_DMA_WAIT_RESP	BIT(3)
#define BCM2708_DMA_D_INC	BIT(4)
#define BCM2708_DMA_D_WIDTH	BIT(5)
#define BCM2708_DMA_D_DREQ	BIT(6)
#define BCM2708_DMA_S_INC	BIT(8)
#define BCM2708_DMA_S_WIDTH	BIT(9)
#define BCM2708_DMA_S_DREQ	BIT(10)

#define	BCM2708_DMA_BURST(x)	(((x) & 0xf) << 12)
#define	BCM2708_DMA_PER_MAP(x)	((x) << 16)
#define	BCM2708_DMA_WAITS(x)	(((x) & 0x1f) << 21)

#define BCM2708_DMA_DREQ_EMMC	11
#define BCM2708_DMA_DREQ_SDHOST	13

#define BCM2708_DMA_CS		0x00 /* Control and Status */
#define BCM2708_DMA_ADDR	0x04
/* the current control block appears in the following registers - read only */
#define BCM2708_DMA_INFO	0x08
#define BCM2708_DMA_SOURCE_AD	0x0c
#define BCM2708_DMA_DEST_AD	0x10
#define BCM2708_DMA_NEXTCB	0x1C
#define BCM2708_DMA_DEBUG	0x20

#define BCM2708_DMA4_CS		(BCM2708_DMA_CHAN(4) + BCM2708_DMA_CS)
#define BCM2708_DMA4_ADDR	(BCM2708_DMA_CHAN(4) + BCM2708_DMA_ADDR)

#define BCM2708_DMA_TDMODE_LEN(w, h) ((h) << 16 | (w))

/* When listing features we can ask for when allocating DMA channels give
   those with higher priority smaller ordinal numbers */
#define BCM_DMA_FEATURE_FAST_ORD	0
#define BCM_DMA_FEATURE_BULK_ORD	1
#define BCM_DMA_FEATURE_NORMAL_ORD	2
#define BCM_DMA_FEATURE_LITE_ORD	3
#define BCM_DMA_FEATURE_FAST		BIT(BCM_DMA_FEATURE_FAST_ORD)
#define BCM_DMA_FEATURE_BULK		BIT(BCM_DMA_FEATURE_BULK_ORD)
#define BCM_DMA_FEATURE_NORMAL		BIT(BCM_DMA_FEATURE_NORMAL_ORD)
#define BCM_DMA_FEATURE_LITE		BIT(BCM_DMA_FEATURE_LITE_ORD)
#define BCM_DMA_FEATURE_COUNT		4

struct bcm2708_dma_cb {
	u32 info;
	u32 src;
	u32 dst;
	u32 length;
	u32 stride;
	u32 next;
	u32 pad[2];
};

struct scatterlist;
struct platform_device;

#if defined(CONFIG_DMA_BCM2708) || defined(CONFIG_DMA_BCM2708_MODULE)

int bcm_sg_suitable_for_dma(struct scatterlist *sg_ptr, int sg_len);
void bcm_dma_start(void __iomem *dma_chan_base, dma_addr_t control_block);
void bcm_dma_wait_idle(void __iomem *dma_chan_base);
bool bcm_dma_is_busy(void __iomem *dma_chan_base);
int bcm_dma_abort(void __iomem *dma_chan_base);

/* return channel no or -ve error */
int bcm_dma_chan_alloc(unsigned preferred_feature_set,
		       void __iomem **out_dma_base, int *out_dma_irq);
int bcm_dma_chan_free(int channel);

int bcm_dmaman_probe(struct platform_device *pdev, void __iomem *base,
		     u32 chans_available);
int bcm_dmaman_remove(struct platform_device *pdev);

#else /* CONFIG_DMA_BCM2708 */

static inline int bcm_sg_suitable_for_dma(struct scatterlist *sg_ptr,
					  int sg_len)
{
	return 0;
}

static inline void bcm_dma_start(void __iomem *dma_chan_base,
				 dma_addr_t control_block) { }

static inline void bcm_dma_wait_idle(void __iomem *dma_chan_base) { }

static inline bool bcm_dma_is_busy(void __iomem *dma_chan_base)
{
	return false;
}

static inline int bcm_dma_abort(void __iomem *dma_chan_base)
{
	return -EINVAL;
}

static inline int bcm_dma_chan_alloc(unsigned preferred_feature_set,
				     void __iomem **out_dma_base,
				     int *out_dma_irq)
{
	return -EINVAL;
}

static inline int bcm_dma_chan_free(int channel)
{
	return -EINVAL;
}

static inline int bcm_dmaman_probe(struct platform_device *pdev,
				   void __iomem *base, u32 chans_available)
{
	return 0;
}

static inline int bcm_dmaman_remove(struct platform_device *pdev)
{
	return 0;
}

#endif /* CONFIG_DMA_BCM2708 || CONFIG_DMA_BCM2708_MODULE */

#endif /* _PLAT_BCM2708_DMA_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Ethernet driver for the WIZnet W5x00 chip.
 *
 * Licensed under the GPL-2 or later.
 */

#ifndef PLATFORM_DATA_WIZNET_H
#define PLATFORM_DATA_WIZNET_H

#include <linux/if_ether.h>

struct wiznet_platform_data {
	int	link_gpio;
	u8	mac_addr[ETH_ALEN];
};

#ifndef CONFIG_WIZNET_BUS_SHIFT
#define CONFIG_WIZNET_BUS_SHIFT 0
#endif

#define W5100_BUS_DIRECT_SIZE	(0x8000 << CONFIG_WIZNET_BUS_SHIFT)
#define W5300_BUS_DIRECT_SIZE	(0x0400 << CONFIG_WIZNET_BUS_SHIFT)

#endif /* PLATFORM_DATA_WIZNET_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * This supports machine-specific differences in how the PXA2xx
 * USB Device Controller (UDC) is wired.
 *
 * It is set in linux/arch/arm/mach-pxa/<machine>.c or in
 * linux/arch/mach-ixp4xx/<machine>.c and used in
 * the probe routine of linux/drivers/usb/gadget/pxa2xx_udc.c
 */
#ifndef PXA2XX_UDC_H
#define PXA2XX_UDC_H

struct pxa2xx_udc_mach_info {
        int  (*udc_is_connected)(void);		/* do we see host? */
        void (*udc_command)(int cmd);
#define	PXA2XX_UDC_CMD_CONNECT		0	/* let host see us */
#define	PXA2XX_UDC_CMD_DISCONNECT	1	/* so host won't see us */

	/* Boards following the design guidelines in the developer's manual,
	 * with on-chip GPIOs not Lubbock's weird hardware, can have a sane
	 * VBUS IRQ and omit the methods above.  Store the GPIO number
	 * here.  Note that sometimes the signals go through inverters...
	 */
	bool	gpio_pullup_inverted;
	int	gpio_pullup;			/* high == pullup activated */
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * DaVinci I2C controller platform_device info
 *
 * Author: Vladimir Barinov, MontaVista Software, Inc. <source@mvista.com>
 *
 * 2007 (c) MontaVista Software, Inc. This file is licensed under
 * the terms of the GNU General Public License version 2. This program
 * is licensed "as is" without any warranty of any kind, whether express
 * or implied.
*/

#ifndef __ASM_ARCH_I2C_H
#define __ASM_ARCH_I2C_H

/* All frequencies are expressed in kHz */
struct davinci_i2c_platform_data {
	unsigned int	bus_freq;	/* standard bus frequency (kHz) */
	unsigned int	bus_delay;	/* post-transaction delay (usec) */
	unsigned int    sda_pin;        /* GPIO pin ID to use for SDA */
	unsigned int    scl_pin;        /* GPIO pin ID to use for SCL */
	bool		has_pfunc;	/*chip has a ICPFUNC register */
};

/* for board setup code */
void davinci_init_i2c(struct davinci_i2c_platform_data *);

#endif /* __ASM_ARCH_I2C_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * omap iommu: main structures
 *
 * Copyright (C) 2008-2009 Nokia Corporation
 *
 * Written by Hiroshi DOYU <Hiroshi.DOYU@nokia.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <linux/platform_device.h>

#define MMU_REG_SIZE		256

/**
 * struct iommu_arch_data - omap iommu private data
 * @name: name of the iommu device
 * @iommu_dev: handle of the iommu device
 *
 * This is an omap iommu private data object, which binds an iommu user
 * to its iommu device. This object should be placed at the iommu user's
 * dev_archdata so generic IOMMU API can be used without having to
 * utilize omap-specific plumbing anymore.
 */
struct omap_iommu_arch_data {
	const char *name;
	struct omap_iommu *iommu_dev;
};

struct iommu_platform_data {
	const char *name;
	const char *reset_name;
	int nr_tlb_entries;

	int (*assert_reset)(struct platform_device *pdev, const char *name);
	int (*deassert_reset)(struct platform_device *pdev, const char *name);
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Header file for:
 * Cypress TrueTouch(TM) Standard Product (TTSP) touchscreen drivers.
 * For use with Cypress Txx3xx parts.
 * Supported parts include:
 * CY8CTST341
 * CY8CTMA340
 *
 * Copyright (C) 2009, 2010, 2011 Cypress Semiconductor, Inc.
 * Copyright (C) 2012 Javier Martinez Canillas <javier@dowhile0.org>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2, and only version 2, as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * Contact Cypress Semiconductor at www.cypress.com (kev@cypress.com)
 *
 */
#ifndef _CYTTSP4_H_
#define _CYTTSP4_H_

#define CYTTSP4_MT_NAME "cyttsp4_mt"
#define CYTTSP4_I2C_NAME "cyttsp4_i2c_adapter"
#define CYTTSP4_SPI_NAME "cyttsp4_spi_adapter"

#define CY_TOUCH_SETTINGS_MAX 32

struct touch_framework {
	const uint16_t  *abs;
	uint8_t         size;
	uint8_t         enable_vkeys;
} __packed;

struct cyttsp4_mt_platform_data {
	struct touch_framework *frmwrk;
	unsigned short flags;
	char const *inp_dev_name;
};

struct touch_settings {
	const uint8_t *data;
	uint32_t size;
	uint8_t tag;
} __packed;

struct cyttsp4_core_platform_data {
	int irq_gpio;
	int rst_gpio;
	int level_irq_udelay;
	int (*xres)(struct cyttsp4_core_platform_data *pdata,
		struct device *dev);
	int (*init)(struct cyttsp4_core_platform_data *pdata,
		int on, struct device *dev);
	int (*power)(struct cyttsp4_core_platform_data *pdata,
		int on, struct device *dev, atomic_t *ignore_irq);
	int (*irq_stat)(struct cyttsp4_core_platform_data *pdata,
		struct device *dev);
	struct touch_settings *sett[CY_TOUCH_SETTINGS_MAX];
};

struct cyttsp4_platform_data {
	struct cyttsp4_core_platform_data *core_pdata;
	struct cyttsp4_mt_platform_data *mt_pdata;
};

#endif /* _CYTTSP4_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Copyright 2004-2007 Freescale Semiconductor, Inc. All Rights Reserved.
 * Copyright 2008 Sascha Hauer, kernel@pengutronix.de
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 */

#ifndef __ASM_ARCH_NAND_H
#define __ASM_ARCH_NAND_H

#include <linux/mtd/partitions.h>

struct mxc_nand_platform_data {
	unsigned int width;	/* data bus width in bytes */
	unsigned int hw_ecc:1;	/* 0 if suppress hardware ECC */
	unsigned int flash_bbt:1; /* set to 1 to use a flash based bbt */
	struct mtd_partition *parts;	/* partition table */
	int nr_parts;			/* size of parts */
};
#endif /* __ASM_ARCH_NAND_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright (C) 2011 Marvell International Ltd. All rights reserved.
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of  the GNU General  Public License as published by the
 * Free Software Foundation;  either version 2 of the  License, or (at your
 * option) any later version.
 */

#ifndef __MV_PLATFORM_USB_H
#define __MV_PLATFORM_USB_H

enum pxa_ehci_type {
	EHCI_UNDEFINED = 0,
	PXA_U2OEHCI,	/* pxa 168, 9xx */
	PXA_SPH,	/* pxa 168, 9xx SPH */
	MMP3_HSIC,	/* mmp3 hsic */
	MMP3_FSIC,	/* mmp3 fsic */
};

enum {
	MV_USB_MODE_OTG,
	MV_USB_MODE_HOST,
};

enum {
	VBUS_LOW	= 0,
	VBUS_HIGH	= 1 << 0,
};

struct mv_usb_addon_irq {
	unsigned int	irq;
	int		(*poll)(void);
};

struct mv_usb_platform_data {
	struct mv_usb_addon_irq	*id;	/* Only valid for OTG. ID pin change*/
	struct mv_usb_addon_irq	*vbus;	/* valid for OTG/UDC. VBUS change*/

	/* only valid for HCD. OTG or Host only*/
	unsigned int		mode;

	/* This flag is used for that needs id pin checked by otg */
	unsigned int    disable_otg_clock_gating:1;
	/* Force a_bus_req to be asserted */
	 unsigned int    otg_force_a_bus_req:1;

	int	(*phy_init)(void __iomem *regbase);
	void	(*phy_deinit)(void __iomem *regbase);
	int	(*set_vbus)(unsigned int vbus);
	int     (*private_init)(void __iomem *opregs, void __iomem *phyregs);
};
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * OMAP GPIO handling defines and functions
 *
 * Copyright (C) 2003-2005 Nokia Corporation
 *
 * Written by Juha Yrjölä <juha.yrjola@nokia.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */

#ifndef __ASM_ARCH_OMAP_GPIO_H
#define __ASM_ARCH_OMAP_GPIO_H

#include <linux/io.h>
#include <linux/platform_device.h>

#define OMAP1_MPUIO_BASE			0xfffb5000

/*
 * These are the omap15xx/16xx offsets. The omap7xx offset are
 * OMAP_MPUIO_ / 2 offsets below.
 */
#define OMAP_MPUIO_INPUT_LATCH		0x00
#define OMAP_MPUIO_OUTPUT		0x04
#define OMAP_MPUIO_IO_CNTL		0x08
#define OMAP_MPUIO_KBR_LATCH		0x10
#define OMAP_MPUIO_KBC			0x14
#define OMAP_MPUIO_GPIO_EVENT_MODE	0x18
#define OMAP_MPUIO_GPIO_INT_EDGE	0x1c
#define OMAP_MPUIO_KBD_INT		0x20
#define OMAP_MPUIO_GPIO_INT		0x24
#define OMAP_MPUIO_KBD_MASKIT		0x28
#define OMAP_MPUIO_GPIO_MASKIT		0x2c
#define OMAP_MPUIO_GPIO_DEBOUNCING	0x30
#define OMAP_MPUIO_LATCH		0x34

#define OMAP34XX_NR_GPIOS		6

/*
 * OMAP1510 GPIO registers
 */
#define OMAP1510_GPIO_DATA_INPUT	0x00
#define OMAP1510_GPIO_DATA_OUTPUT	0x04
#define OMAP1510_GPIO_DIR_CONTROL	0x08
#define OMAP1510_GPIO_INT_CONTROL	0x0c
#define OMAP1510_GPIO_INT_MASK		0x10
#define OMAP1510_GPIO_INT_STATUS	0x14
#define OMAP1510_GPIO_PIN_CONTROL	0x18

#define OMAP1510_IH_GPIO_BASE		64

/*
 * OMAP1610 specific GPIO registers
 */
#define OMAP1610_GPIO_REVISION		0x0000
#define OMAP1610_GPIO_SYSCONFIG		0x0010
#define OMAP1610_GPIO_SYSSTATUS		0x0014
#define OMAP1610_GPIO_IRQSTATUS1	0x0018
#define OMAP1610_GPIO_IRQENABLE1	0x001c
#define OMAP1610_GPIO_WAKEUPENABLE	0x0028
#define OMAP1610_GPIO_DATAIN		0x002c
#define OMAP1610_GPIO_DATAOUT		0x0030
#define OMAP1610_GPIO_DIRECTION		0x0034
#define OMAP1610_GPIO_EDGE_CTRL1	0x0038
#define OMAP1610_GPIO_EDGE_CTRL2	0x003c
#define OMAP1610_GPIO_CLEAR_IRQENABLE1	0x009c
#define OMAP1610_GPIO_CLEAR_WAKEUPENA	0x00a8
#define OMAP1610_GPIO_CLEAR_DATAOUT	0x00b0
#define OMAP1610_GPIO_SET_IRQENABLE1	0x00dc
#define OMAP1610_GPIO_SET_WAKEUPENA	0x00e8
#define OMAP1610_GPIO_SET_DATAOUT	0x00f0

/*
 * OMAP7XX specific GPIO registers
 */
#define OMAP7XX_GPIO_DATA_INPUT		0x00
#define OMAP7XX_GPIO_DATA_OUTPUT	0x04
#define OMAP7XX_GPIO_DIR_CONTROL	0x08
#define OMAP7XX_GPIO_INT_CONTROL	0x0c
#define OMAP7XX_GPIO_INT_MASK		0x10
#define OMAP7XX_GPIO_INT_STATUS		0x14

/*
 * omap2+ specific GPIO registers
 */
#define OMAP24XX_GPIO_REVISION		0x0000
#define OMAP24XX_GPIO_IRQSTATUS1	0x0018
#define OMAP24XX_GPIO_IRQSTATUS2	0x0028
#define OMAP24XX_GPIO_IRQENABLE2	0x002c
#define OMAP24XX_GPIO_IRQENABLE1	0x001c
#define OMAP24XX_GPIO_WAKE_EN		0x0020
#define OMAP24XX_GPIO_CTRL		0x0030
#define OMAP24XX_GPIO_OE		0x0034
#define OMAP24XX_GPIO_DATAIN		0x0038
#define OMAP24XX_GPIO_DATAOUT		0x003c
#define OMAP24XX_GPIO_LEVELDETECT0	0x0040
#define OMAP24XX_GPIO_LEVELDETECT1	0x0044
#define OMAP24XX_GPIO_RISINGDETECT	0x0048
#define OMAP24XX_GPIO_FALLINGDETECT	0x004c
#define OMAP24XX_GPIO_DEBOUNCE_EN	0x0050
#define OMAP24XX_GPIO_DEBOUNCE_VAL	0x0054
#define OMAP24XX_GPIO_CLEARIRQENABLE1	0x0060
#define OMAP24XX_GPIO_SETIRQENABLE1	0x0064
#define OMAP24XX_GPIO_CLEARWKUENA	0x0080
#define OMAP24XX_GPIO_SETWKUENA		0x0084
#define OMAP24XX_GPIO_CLEARDATAOUT	0x0090
#define OMAP24XX_GPIO_SETDATAOUT	0x0094

#define OMAP4_GPIO_REVISION		0x0000
#define OMAP4_GPIO_EOI			0x0020
#define OMAP4_GPIO_IRQSTATUSRAW0	0x0024
#define OMAP4_GPIO_IRQSTATUSRAW1	0x0028
#define OMAP4_GPIO_IRQSTATUS0		0x002c
#define OMAP4_GPIO_IRQSTATUS1		0x0030
#define OMAP4_GPIO_IRQSTATUSSET0	0x0034
#define OMAP4_GPIO_IRQSTATUSSET1	0x0038
#define OMAP4_GPIO_IRQSTATUSCLR0	0x003c
#define OMAP4_GPIO_IRQSTATUSCLR1	0x0040
#define OMAP4_GPIO_IRQWAKEN0		0x0044
#define OMAP4_GPIO_IRQWAKEN1		0x0048
#define OMAP4_GPIO_IRQENABLE1		0x011c
#define OMAP4_GPIO_WAKE_EN		0x0120
#define OMAP4_GPIO_IRQSTATUS2		0x0128
#define OMAP4_GPIO_IRQENABLE2		0x012c
#define OMAP4_GPIO_CTRL			0x0130
#define OMAP4_GPIO_OE			0x0134
#define OMAP4_GPIO_DATAIN		0x0138
#define OMAP4_GPIO_DATAOUT		0x013c
#define OMAP4_GPIO_LEVELDETECT0		0x0140
#define OMAP4_GPIO_LEVELDETECT1		0x0144
#define OMAP4_GPIO_RISINGDETECT		0x0148
#define OMAP4_GPIO_FALLINGDETECT	0x014c
#define OMAP4_GPIO_DEBOUNCENABLE	0x0150
#define OMAP4_GPIO_DEBOUNCINGTIME	0x0154
#define OMAP4_GPIO_CLEARIRQENABLE1	0x0160
#define OMAP4_GPIO_SETIRQENABLE1	0x0164
#define OMAP4_GPIO_CLEARWKUENA		0x0180
#define OMAP4_GPIO_SETWKUENA		0x0184
#define OMAP4_GPIO_CLEARDATAOUT		0x0190
#define OMAP4_GPIO_SETDATAOUT		0x0194

#define OMAP_MAX_GPIO_LINES		192

#define OMAP_MPUIO(nr)		(OMAP_MAX_GPIO_LINES + (nr))
#define OMAP_GPIO_IS_MPUIO(nr)	((nr) >= OMAP_MAX_GPIO_LINES)

struct omap_gpio_dev_attr {
	int bank_width;		/* GPIO bank width */
	bool dbck_flag;		/* dbck required or not - True for OMAP3&4 */
};

struct omap_gpio_reg_offs {
	u16 revision;
	u16 direction;
	u16 datain;
	u16 dataout;
	u16 set_dataout;
	u16 clr_dataout;
	u16 irqstatus;
	u16 irqstatus2;
	u16 irqstatus_raw0;
	u16 irqstatus_raw1;
	u16 irqenable;
	u16 irqenable2;
	u16 set_irqenable;
	u16 clr_irqenable;
	u16 debounce;
	u16 debounce_en;
	u16 ctrl;
	u16 wkup_en;
	u16 leveldetect0;
	u16 leveldetect1;
	u16 risingdetect;
	u16 fallingdetect;
	u16 irqctrl;
	u16 edgectrl1;
	u16 edgectrl2;
	u16 pinctrl;

	bool irqenable_inv;
};

struct omap_gpio_platform_data {
	int bank_type;
	int bank_width;		/* GPIO bank width */
	int bank_stride;	/* Only needed for omap1 MPUIO */
	bool dbck_flag;		/* dbck required or not - True for OMAP3&4 */
	bool loses_context;	/* whether the bank would ever lose context */
	bool is_mpuio;		/* whether the bank is of type MPUIO */
	u32 non_wakeup_gpios;

	struct omap_gpio_reg_offs *regs;

	/* Return context loss count due to PM states changing */
	int (*get_context_loss_count)(struct device *dev);
};

#if IS_BUILTIN(CONFIG_GPIO_OMAP)
extern void omap2_gpio_prepare_for_idle(int off_mode);
extern void omap2_gpio_resume_after_idle(void);
#else
static inline void omap2_gpio_prepare_for_idle(int off_mode)
{
}

static inline void omap2_gpio_resume_after_idle(void)
{
}
#endif

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /* arch/arm/plat-samsung/include/plat/usb-control.h
 *
 * Copyright (c) 2004 Simtec Electronics
 *	Ben Dooks <ben@simtec.co.uk>
 *
 * S3C - USB host port information
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __ASM_ARCH_USBCONTROL_H
#define __ASM_ARCH_USBCONTROL_H

#define S3C_HCDFLG_USED	(1)

struct s3c2410_hcd_port {
	unsigned char	flags;
	unsigned char	power;
	unsigned char	oc_status;
	unsigned char	oc_changed;
};

struct s3c2410_hcd_info {
	struct usb_hcd		*hcd;
	struct s3c2410_hcd_port	port[2];

	void		(*power_control)(int port, int to);
	void		(*enable_oc)(struct s3c2410_hcd_info *, int on);
	void		(*report_oc)(struct s3c2410_hcd_info *, int ports);
};

static void inline s3c2410_usb_report_oc(struct s3c2410_hcd_info *info, int ports)
{
	if (info->report_oc != NULL) {
		(info->report_oc)(info, ports);
	}
}

extern void s3c_ohci_set_platdata(struct s3c2410_hcd_info *info);

#endif /*__ASM_ARCH_USBCONTROL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright (C) 2016 Sensirion AG, Switzerland
 * Author: David Frey <david.frey@sensirion.com>
 * Author: Pascal Sachs <pascal.sachs@sensirion.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

#ifndef __SHT3X_H_
#define __SHT3X_H_

struct sht3x_platform_data {
	bool blocking_io;
	bool high_precision;
};
#endif /* __SHT3X_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * STMicroelectronics TPM Linux driver for TPM 1.2 ST33ZP24
 * Copyright (C) 2009 - 2016  STMicroelectronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */
#ifndef __ST33ZP24_H__
#define __ST33ZP24_H__

#define TPM_ST33_I2C			"st33zp24-i2c"
#define TPM_ST33_SPI			"st33zp24-spi"

struct st33zp24_platform_data {
	int io_lpcpd;
};

#endif /* __ST33ZP24_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Platform data structure for Network Space v2 LED driver
 *
 * This file is licensed under the terms of the GNU General Public
 * License version 2.  This program is licensed "as is" without any
 * warranty of any kind, whether express or implied.
 */

#ifndef __LEDS_KIRKWOOD_NS2_H
#define __LEDS_KIRKWOOD_NS2_H

enum ns2_led_modes {
	NS_V2_LED_OFF,
	NS_V2_LED_ON,
	NS_V2_LED_SATA,
};

struct ns2_led_modval {
	enum ns2_led_modes	mode;
	int			cmd_level;
	int			slow_level;
};

struct ns2_led {
	const char	*name;
	const char	*default_trigger;
	unsigned	cmd;
	unsigned	slow;
	int		num_modes;
	struct ns2_led_modval *modval;
};

struct ns2_led_platform_data {
	int		num_leds;
	struct ns2_led	*leds;
};

#endif /* __LEDS_KIRKWOOD_NS2_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 * AD7792/AD7793 SPI ADC driver
 *
 * Copyright 2011 Analog Devices Inc.
 *
 * Licensed under the GPL-2.
 */
#ifndef __LINUX_PLATFORM_DATA_AD7793_H__
#define __LINUX_PLATFORM_DATA_AD7793_H__

/**
 * enum ad7793_clock_source - AD7793 clock source selection
 * @AD7793_CLK_SRC_INT: Internal 64 kHz clock, not available at the CLK pin.
 * @AD7793_CLK_SRC_INT_CO: Internal 64 kHz clock, available at the CLK pin.
 * @AD7793_CLK_SRC_EXT: Use external clock.
 * @AD7793_CLK_SRC_EXT_DIV2: Use external clock divided by 2.
 */
enum ad7793_clock_source {
	AD7793_CLK_SRC_INT,
	AD7793_CLK_SRC_INT_CO,
	AD7793_CLK_SRC_EXT,
	AD7793_CLK_SRC_EXT_DIV2,
};

/**
 * enum ad7793_bias_voltage - AD7793 bias voltage selection
 * @AD7793_BIAS_VOLTAGE_DISABLED: Bias voltage generator disabled
 * @AD7793_BIAS_VOLTAGE_AIN1: Bias voltage connected to AIN1(-).
 * @AD7793_BIAS_VOLTAGE_AIN2: Bias voltage connected to AIN2(-).
 * @AD7793_BIAS_VOLTAGE_AIN3: Bias voltage connected to AIN3(-).
 *	Only valid for AD7795/AD7796.
 */
enum ad7793_bias_voltage {
	AD7793_BIAS_VOLTAGE_DISABLED,
	AD7793_BIAS_VOLTAGE_AIN1,
	AD7793_BIAS_VOLTAGE_AIN2,
	AD7793_BIAS_VOLTAGE_AIN3,
};

/**
 * enum ad7793_refsel - AD7793 reference voltage selection
 * @AD7793_REFSEL_REFIN1: External reference applied between REFIN1(+)
 *	and REFIN1(-).
 * @AD7793_REFSEL_REFIN2: External reference applied between REFIN2(+) and
 *	and REFIN1(-). Only valid for AD7795/AD7796.
 * @AD7793_REFSEL_INTERNAL: Internal 1.17 V reference.
 */
enum ad7793_refsel {
	AD7793_REFSEL_REFIN1 = 0,
	AD7793_REFSEL_REFIN2 = 1,
	AD7793_REFSEL_INTERNAL = 2,
};

/**
 * enum ad7793_current_source_direction - AD7793 excitation current direction
 * @AD7793_IEXEC1_IOUT1_IEXEC2_IOUT2: Current source IEXC1 connected to pin
 *	IOUT1, current source IEXC2 connected to pin IOUT2.
 * @AD7793_IEXEC1_IOUT2_IEXEC2_IOUT1: Current source IEXC2 connected to pin
 *	IOUT1, current source IEXC1 connected to pin IOUT2.
 * @AD7793_IEXEC1_IEXEC2_IOUT1: Both current sources connected to pin IOUT1.
 *	Only valid when the current sources are set to 10 uA or 210 uA.
 * @AD7793_IEXEC1_IEXEC2_IOUT2: Both current sources connected to Pin IOUT2.
 *	Only valid when the current ources are set to 10 uA or 210 uA.
 */
enum ad7793_current_source_direction {
	AD7793_IEXEC1_IOUT1_IEXEC2_IOUT2 = 0,
	AD7793_IEXEC1_IOUT2_IEXEC2_IOUT1 = 1,
	AD7793_IEXEC1_IEXEC2_IOUT1 = 2,
	AD7793_IEXEC1_IEXEC2_IOUT2 = 3,
};

/**
 * enum ad7793_excitation_current - AD7793 excitation current selection
 * @AD7793_IX_DISABLED: Excitation current Disabled.
 * @AD7793_IX_10uA: Enable 10 micro-ampere excitation current.
 * @AD7793_IX_210uA: Enable 210 micro-ampere excitation current.
 * @AD7793_IX_1mA: Enable 1 milli-Ampere excitation current.
 */
enum ad7793_excitation_current {
	AD7793_IX_DISABLED = 0,
	AD7793_IX_10uA = 1,
	AD7793_IX_210uA = 2,
	AD7793_IX_1mA = 3,
};

/**
 * struct ad7793_platform_data - AD7793 platform data
 * @clock_src: Clock source selection
 * @burnout_current: If set to true the 100nA burnout current is enabled.
 * @boost_enable: Enable boost for the bias voltage generator.
 * @buffered: If set to true configure the device for buffered input mode.
 * @unipolar: If set to true sample in unipolar mode, if set to false sample in
 *		bipolar mode.
 * @refsel: Reference voltage selection
 * @bias_voltage: Bias voltage selection
 * @exitation_current: Excitation current selection
 * @current_source_direction: Excitation current direction selection
 */
struct ad7793_platform_data {
	enum ad7793_clock_source clock_src;
	bool burnout_current;
	bool boost_enable;
	bool buffered;
	bool unipolar;

	enum ad7793_refsel refsel;
	enum ad7793_bias_voltage bias_voltage;
	enum ad7793_excitation_current exitation_current;
	enum ad7793_current_source_direction current_source_direction;
};

#endif /* IIO_ADC_AD7793_H_ */
                                                                                                                                                                                                                                                                      /*
 * Copyright (C) 2004-2006 Atmel Corporation
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __MACB_PDATA_H__
#define __MACB_PDATA_H__

/**
 * struct macb_platform_data - platform data for MACB Ethernet
 * @phy_mask:		phy mask passed when register the MDIO bus
 *			within the driver
 * @phy_irq_pin:	PHY IRQ
 * @is_rmii:		using RMII interface?
 * @rev_eth_addr:	reverse Ethernet address byte order
 */
struct macb_platform_data {
	u32		phy_mask;
	int		phy_irq_pin;
	u8		is_rmii;
	u8		rev_eth_addr;
};

#endif /* __MACB_PDATA_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #ifndef _LINUX_ST1232_PDATA_H
#define _LINUX_ST1232_PDATA_H

/*
 * Optional platform data
 *
 * Use this if you want the driver to drive the reset pin.
 */
struct st1232_pdata {
	int reset_gpio;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  /*
 * S3C24XX DMA handling
 *
 * Copyright (c) 2013 Heiko Stuebner <heiko@sntech.de>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 */

/* Helper to encode the source selection constraints for early s3c socs. */
#define S3C24XX_DMA_CHANREQ(src, chan)	((BIT(3) | src) << chan * 4)

enum s3c24xx_dma_bus {
	S3C24XX_DMA_APB,
	S3C24XX_DMA_AHB,
};

/**
 * @bus: on which bus does the peripheral reside - AHB or APB.
 * @handshake: is a handshake with the peripheral necessary
 * @chansel: channel selection information, depending on variant; reqsel for
 *	     s3c2443 and later and channel-selection map for earlier SoCs
 *	     see CHANSEL doc in s3c2443-dma.c
 */
struct s3c24xx_dma_channel {
	enum s3c24xx_dma_bus bus;
	bool handshake;
	u16 chansel;
};

struct dma_slave_map;

/**
 * struct s3c24xx_dma_platdata - platform specific settings
 * @num_phy_channels: number of physical channels
 * @channels: array of virtual channel descriptions
 * @num_channels: number of virtual channels
 * @slave_map: dma slave map matching table
 * @slavecnt: number of elements in slave_map
 */
struct s3c24xx_dma_platdata {
	int num_phy_channels;
	struct s3c24xx_dma_channel *channels;
	int num_channels;
	const struct dma_slave_map *slave_map;
	int slavecnt;
};

struct dma_chan;
bool s3c24xx_dma_filter(struct dma_chan *chan, void *param);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Platform data for OMAP1 USB
 *
 * This file is subject to the terms and conditions of the GNU General Public
 * License. See the file "COPYING" in the main directory of this archive for
 * more details.
 */
#ifndef __LINUX_USB_OMAP1_H
#define __LINUX_USB_OMAP1_H

#include <linux/platform_device.h>

struct omap_usb_config {
	/* Configure drivers according to the connectors on your board:
	 *  - "A" connector (rectagular)
	 *	... for host/OHCI use, set "register_host".
	 *  - "B" connector (squarish) or "Mini-B"
	 *	... for device/gadget use, set "register_dev".
	 *  - "Mini-AB" connector (very similar to Mini-B)
	 *	... for OTG use as device OR host, initialize "otg"
	 */
	unsigned	register_host:1;
	unsigned	register_dev:1;
	u8		otg;	/* port number, 1-based:  usb1 == 2 */

	const char	*extcon;	/* extcon device for OTG */

	u8		hmc_mode;

	/* implicitly true if otg:  host supports remote wakeup? */
	u8		rwc;

	/* signaling pins used to talk to transceiver on usbN:
	 *  0 == usbN unused
	 *  2 == usb0-only, using internal transceiver
	 *  3 == 3 wire bidirectional
	 *  4 == 4 wire bidirectional
	 *  6 == 6 wire unidirectional (or TLL)
	 */
	u8		pins[3];

	struct platform_device *udc_device;
	struct platform_device *ohci_device;
	struct platform_device *otg_device;

	u32 (*usb0_init)(unsigned nwires, unsigned is_device);
	u32 (*usb1_init)(unsigned nwires);
	u32 (*usb2_init)(unsigned nwires, unsigned alt_pingroup);

	int (*ocpi_enable)(void);
};

#endif /* __LINUX_USB_OMAP1_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * shmob_drm.h  --  SH Mobile DRM driver
 *
 * Copyright (C) 2012 Renesas Corporation
 *
 * Laurent Pinchart (laurent.pinchart@ideasonboard.com)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#ifndef __SHMOB_DRM_H__
#define __SHMOB_DRM_H__

#include <linux/kernel.h>

#include <drm/drm_mode.h>

struct sh_mobile_meram_cfg;
struct sh_mobile_meram_info;

enum shmob_drm_clk_source {
	SHMOB_DRM_CLK_BUS,
	SHMOB_DRM_CLK_PERIPHERAL,
	SHMOB_DRM_CLK_EXTERNAL,
};

enum shmob_drm_interface {
	SHMOB_DRM_IFACE_RGB8,		/* 24bpp, 8:8:8 */
	SHMOB_DRM_IFACE_RGB9,		/* 18bpp, 9:9 */
	SHMOB_DRM_IFACE_RGB12A,		/* 24bpp, 12:12 */
	SHMOB_DRM_IFACE_RGB12B,		/* 12bpp */
	SHMOB_DRM_IFACE_RGB16,		/* 16bpp */
	SHMOB_DRM_IFACE_RGB18,		/* 18bpp */
	SHMOB_DRM_IFACE_RGB24,		/* 24bpp */
	SHMOB_DRM_IFACE_YUV422,		/* 16bpp */
	SHMOB_DRM_IFACE_SYS8A,		/* 24bpp, 8:8:8 */
	SHMOB_DRM_IFACE_SYS8B,		/* 18bpp, 8:8:2 */
	SHMOB_DRM_IFACE_SYS8C,		/* 18bpp, 2:8:8 */
	SHMOB_DRM_IFACE_SYS8D,		/* 16bpp, 8:8 */
	SHMOB_DRM_IFACE_SYS9,		/* 18bpp, 9:9 */
	SHMOB_DRM_IFACE_SYS12,		/* 24bpp, 12:12 */
	SHMOB_DRM_IFACE_SYS16A,		/* 16bpp */
	SHMOB_DRM_IFACE_SYS16B,		/* 18bpp, 16:2 */
	SHMOB_DRM_IFACE_SYS16C,		/* 18bpp, 2:16 */
	SHMOB_DRM_IFACE_SYS18,		/* 18bpp */
	SHMOB_DRM_IFACE_SYS24,		/* 24bpp */
};

struct shmob_drm_backlight_data {
	const char *name;
	int max_brightness;
	int (*get_brightness)(void);
	int (*set_brightness)(int brightness);
};

struct shmob_drm_panel_data {
	unsigned int width_mm;		/* Panel width in mm */
	unsigned int height_mm;		/* Panel height in mm */
	struct drm_mode_modeinfo mode;
};

struct shmob_drm_sys_interface_data {
	unsigned int read_latch:6;
	unsigned int read_setup:8;
	unsigned int read_cycle:8;
	unsigned int read_strobe:8;
	unsigned int write_setup:8;
	unsigned int write_cycle:8;
	unsigned int write_strobe:8;
	unsigned int cs_setup:3;
	unsigned int vsync_active_high:1;
	unsigned int vsync_dir_input:1;
};

#define SHMOB_DRM_IFACE_FL_DWPOL (1 << 0) /* Rising edge dot clock data latch */
#define SHMOB_DRM_IFACE_FL_DIPOL (1 << 1) /* Active low display enable */
#define SHMOB_DRM_IFACE_FL_DAPOL (1 << 2) /* Active low display data */
#define SHMOB_DRM_IFACE_FL_HSCNT (1 << 3) /* Disable HSYNC during VBLANK */
#define SHMOB_DRM_IFACE_FL_DWCNT (1 << 4) /* Disable dotclock during blanking */

struct shmob_drm_interface_data {
	enum shmob_drm_interface interface;
	struct shmob_drm_sys_interface_data sys;
	unsigned int clk_div;
	unsigned int flags;
};

struct shmob_drm_platform_data {
	enum shmob_drm_clk_source clk_source;
	struct shmob_drm_interface_data iface;
	struct shmob_drm_panel_data panel;
	struct shmob_drm_backlight_data backlight;
	const struct sh_mobile_meram_cfg *meram;
};

#endif /* __SHMOB_DRM_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * i2c-cbus-gpio.h - CBUS I2C platform_data definition
 *
 * Copyright (C) 2004-2009 Nokia Corporation
 *
 * Written by Felipe Balbi and Aaro Koskinen.
 *
 * This file is subject to the terms and conditions of the GNU General
 * Public License. See the file "COPYING" in the main directory of this
 * archive for more details.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef __INCLUDE_LINUX_I2C_CBUS_GPIO_H
#define __INCLUDE_LINUX_I2C_CBUS_GPIO_H

struct i2c_cbus_platform_data {
	int dat_gpio;
	int clk_gpio;
	int sel_gpio;
};

#endif /* __INCLUDE_LINUX_I2C_CBUS_GPIO_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 * PXA3xx U2D header
 *
 * Copyright (C) 2010 CompuLab Ltd.
 *
 * Igor Grinberg <grinberg@compulab.co.il>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef __PXA310_U2D__
#define __PXA310_U2D__

#include <linux/usb/ulpi.h>

struct pxa3xx_u2d_platform_data {

#define ULPI_SER_6PIN	(1 << 0)
#define ULPI_SER_3PIN	(1 << 1)
	unsigned int ulpi_mode;

	int (*init)(struct device *);
	void (*exit)(struct device *);
};


/* Start PXA3xx U2D host */
int pxa3xx_u2d_start_hc(struct usb_bus *host);
/* Stop PXA3xx U2D host */
void pxa3xx_u2d_stop_hc(struct usb_bus *host);

extern void pxa3xx_set_u2d_info(struct pxa3xx_u2d_platform_data *info);

#endif /* __PXA310_U2D__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
* Copyright (C) 2012 Invensense, Inc.
*
* This software is licensed under the terms of the GNU General Public
* License version 2, as published by the Free Software Foundation, and
* may be copied, distributed, and modified under those terms.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*/

#ifndef __INV_MPU6050_PLATFORM_H_
#define __INV_MPU6050_PLATFORM_H_

/**
 * struct inv_mpu6050_platform_data - Platform data for the mpu driver
 * @orientation:	Orientation matrix of the chip (deprecated in favor of
 *			mounting matrix retrieved from device-tree)
 *
 * Contains platform specific information on how to configure the MPU6050 to
 * work on this platform.  The orientation matricies are 3x3 rotation matricies
 * that are applied to the data to rotate from the mounting orientation to the
 * platform orientation.  The values must be one of 0, 1, or -1 and each row and
 * column should have exactly 1 non-zero value.
 *
 * Deprecated in favor of mounting matrix retrieved from device-tree.
 */
struct inv_mpu6050_platform_data {
	__s8 orientation[9];
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
* Simple driver for Texas Instruments LM3630A LED Flash driver chip
* Copyright (C) 2012 Texas Instruments
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation.
*
*/

#ifndef __LINUX_LM3630A_H
#define __LINUX_LM3630A_H

#define LM3630A_NAME "lm3630a_bl"

enum lm3630a_pwm_ctrl {
	LM3630A_PWM_DISABLE = 0x00,
	LM3630A_PWM_BANK_A,
	LM3630A_PWM_BANK_B,
	LM3630A_PWM_BANK_ALL,
	LM3630A_PWM_BANK_A_ACT_LOW = 0x05,
	LM3630A_PWM_BANK_B_ACT_LOW,
	LM3630A_PWM_BANK_ALL_ACT_LOW,
};

enum lm3630a_leda_ctrl {
	LM3630A_LEDA_DISABLE = 0x00,
	LM3630A_LEDA_ENABLE = 0x04,
	LM3630A_LEDA_ENABLE_LINEAR = 0x14,
};

enum lm3630a_ledb_ctrl {
	LM3630A_LEDB_DISABLE = 0x00,
	LM3630A_LEDB_ON_A = 0x01,
	LM3630A_LEDB_ENABLE = 0x02,
	LM3630A_LEDB_ENABLE_LINEAR = 0x0A,
};

#define LM3630A_MAX_BRIGHTNESS 255
/*
 *@leda_init_brt : led a init brightness. 4~255
 *@leda_max_brt  : led a max brightness.  4~255
 *@leda_ctrl     : led a disable, enable linear, enable exponential
 *@ledb_init_brt : led b init brightness. 4~255
 *@ledb_max_brt  : led b max brightness.  4~255
 *@ledb_ctrl     : led b disable, enable linear, enable exponential
 *@pwm_period    : pwm period
 *@pwm_ctrl      : pwm disable, bank a or b, active high or low
 */
struct lm3630a_platform_data {

	/* led a config.  */
	int leda_init_brt;
	int leda_max_brt;
	enum lm3630a_leda_ctrl leda_ctrl;
	/* led b config. */
	int ledb_init_brt;
	int ledb_max_brt;
	enum lm3630a_ledb_ctrl ledb_ctrl;
	/* pwm config. */
	unsigned int pwm_period;
	enum lm3630a_pwm_ctrl pwm_ctrl;
};

#endif /* __LINUX_LM3630A_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef __IIO_AD7291_H__
#define __IIO_AD7291_H__

/**
 * struct ad7291_platform_data - AD7291 platform data
 * @use_external_ref: Whether to use an external or internal reference voltage
 */
struct ad7291_platform_data {
	bool use_external_ref;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #ifndef __ASM_ARCH_DMA_H
#define __ASM_ARCH_DMA_H

#include <linux/types.h>
#include <linux/dmaengine.h>
#include <linux/dma-mapping.h>

/*
 * M2P channels.
 *
 * Note that these values are also directly used for setting the PPALLOC
 * register.
 */
#define EP93XX_DMA_I2S1		0
#define EP93XX_DMA_I2S2		1
#define EP93XX_DMA_AAC1		2
#define EP93XX_DMA_AAC2		3
#define EP93XX_DMA_AAC3		4
#define EP93XX_DMA_I2S3		5
#define EP93XX_DMA_UART1	6
#define EP93XX_DMA_UART2	7
#define EP93XX_DMA_UART3	8
#define EP93XX_DMA_IRDA		9
/* M2M channels */
#define EP93XX_DMA_SSP		10
#define EP93XX_DMA_IDE		11

/**
 * struct ep93xx_dma_data - configuration data for the EP93xx dmaengine
 * @port: peripheral which is requesting the channel
 * @direction: TX/RX channel
 * @name: optional name for the channel, this is displayed in /proc/interrupts
 *
 * This information is passed as private channel parameter in a filter
 * function. Note that this is only needed for slave/cyclic channels.  For
 * memcpy channels %NULL data should be passed.
 */
struct ep93xx_dma_data {
	int				port;
	enum dma_transfer_direction	direction;
	const char			*name;
};

/**
 * struct ep93xx_dma_chan_data - platform specific data for a DMA channel
 * @name: name of the channel, used for getting the right clock for the channel
 * @base: mapped registers
 * @irq: interrupt number used by this channel
 */
struct ep93xx_dma_chan_data {
	const char			*name;
	void __iomem			*base;
	int				irq;
};

/**
 * struct ep93xx_dma_platform_data - platform data for the dmaengine driver
 * @channels: array of channels which are passed to the driver
 * @num_channels: number of channels in the array
 *
 * This structure is passed to the DMA engine driver via platform data. For
 * M2P channels, contract is that even channels are for TX and odd for RX.
 * There is no requirement for the M2M channels.
 */
struct ep93xx_dma_platform_data {
	struct ep93xx_dma_chan_data	*channels;
	size_t				num_channels;
};

static inline bool ep93xx_dma_chan_is_m2p(struct dma_chan *chan)
{
	return !strcmp(dev_name(chan->device->dev), "ep93xx-dma-m2p");
}

/**
 * ep93xx_dma_chan_direction - returns direction the channel can be used
 * @chan: channel
 *
 * This function can be used in filter functions to find out whether the
 * channel supports given DMA direction. Only M2P channels have such
 * limitation, for M2M channels the direction is configurable.
 */
static inline enum dma_transfer_direction
ep93xx_dma_chan_direction(struct dma_chan *chan)
{
	if (!ep93xx_dma_chan_is_m2p(chan))
		return DMA_NONE;

	/* even channels are for TX, odd for RX */
	return (chan->chan_id % 2 == 0) ? DMA_MEM_TO_DEV : DMA_DEV_TO_MEM;
}

#endif /* __ASM_ARCH_DMA_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * Copyright (c) 2004 Simtec Electronics
 *	Ben Dooks <ben@simtec.co.uk>
 *
 * S3C2410 - NAND device controller platform_device info
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

#ifndef __MTD_NAND_S3C2410_H
#define __MTD_NAND_S3C2410_H

/**
 * struct s3c2410_nand_set - define a set of one or more nand chips
 * @disable_ecc:	Entirely disable ECC - Dangerous
 * @flash_bbt: 		Openmoko u-boot can create a Bad Block Table
 *			Setting this flag will allow the kernel to
 *			look for it at boot time and also skip the NAND
 *			scan.
 * @options:		Default value to set into 'struct nand_chip' options.
 * @nr_chips:		Number of chips in this set
 * @nr_partitions:	Number of partitions pointed to by @partitions
 * @name:		Name of set (optional)
 * @nr_map:		Map for low-layer logical to physical chip numbers (option)
 * @partitions:		The mtd partition list
 *
 * define a set of one or more nand chips registered with an unique mtd. Also
 * allows to pass flag to the underlying NAND layer. 'disable_ecc' will trigger
 * a warning at boot time.
 */
struct s3c2410_nand_set {
	unsigned int		disable_ecc:1;
	unsigned int		flash_bbt:1;

	unsigned int		options;
	int			nr_chips;
	int			nr_partitions;
	char			*name;
	int			*nr_map;
	struct mtd_partition	*partitions;
};

struct s3c2410_platform_nand {
	/* timing information for controller, all times in nanoseconds */

	int	tacls;	/* time for active CLE/ALE to nWE/nOE */
	int	twrph0;	/* active time for nWE/nOE */
	int	twrph1;	/* time for release CLE/ALE from nWE/nOE inactive */

	unsigned int	ignore_unset_ecc:1;

	int			nr_sets;
	struct s3c2410_nand_set *sets;

	void			(*select_chip)(struct s3c2410_nand_set *,
					       int chip);
};

/**
 * s3c_nand_set_platdata() - register NAND platform data.
 * @nand: The NAND platform data to register with s3c_device_nand.
 *
 * This function copies the given NAND platform data, @nand and registers
 * it with the s3c_device_nand. This allows @nand to be __initdata.
*/
extern void s3c_nand_set_platdata(struct s3c2410_platform_nand *nand);

#endif /*__MTD_NAND_S3C2410_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /* linux/platform_data/ad7879.h */

/* Touchscreen characteristics vary between boards and models.  The
 * platform_data for the device's "struct device" holds this information.
 *
 * It's OK if the min/max values are zero.
 */
struct ad7879_platform_data {
	u16	model;			/* 7879 */
	u16	x_plate_ohms;
	u16	x_min, x_max;
	u16	y_min, y_max;
	u16	pressure_min, pressure_max;

	bool	swap_xy;		/* swap x and y axes */

	/* [0..255] 0=OFF Starts at 1=550us and goes
	 * all the way to 9.440ms in steps of 35us.
	 */
	u8	pen_down_acc_interval;
	/* [0..15] Starts at 0=128us and goes all the
	 * way to 4.096ms in steps of 128us.
	 */
	u8	first_conversion_delay;
	/* [0..3] 0 = 2us, 1 = 4us, 2 = 8us, 3 = 16us */
	u8	acquisition_time;
	/* [0..3] Average X middle samples 0 = 2, 1 = 4, 2 = 8, 3 = 16 */
	u8	averaging;
	/* [0..3] Perform X measurements 0 = OFF,
	 * 1 = 4, 2 = 8, 3 = 16 (median > averaging)
	 */
	u8	median;
	/* 1 = AUX/VBAT/GPIO export GPIO to gpiolib
	 * requires CONFIG_GPIOLIB
	 */
	bool	gpio_export;
	/* identifies the first GPIO number handled by this chip;
	 * or, if negative, requests dynamic ID allocation.
	 */
	s32	gpio_base;
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * sht15.h - support for the SHT15 Temperature and Humidity Sensor
 *
 * Copyright (c) 2009 Jonathan Cameron
 *
 * Copyright (c) 2007 Wouter Horre
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * For further information, see the Documentation/hwmon/sht15 file.
 */

#ifndef _PDATA_SHT15_H
#define _PDATA_SHT15_H

/**
 * struct sht15_platform_data - sht15 connectivity info
 * @gpio_data:		no. of gpio to which bidirectional data line is
 *			connected.
 * @gpio_sck:		no. of gpio to which the data clock is connected.
 * @supply_mv:		supply voltage in mv. Overridden by regulator if
 *			available.
 * @checksum:		flag to indicate the checksum should be validated.
 * @no_otp_reload:	flag to indicate no reload from OTP.
 * @low_resolution:	flag to indicate the temp/humidity resolution to use.
 */
struct sht15_platform_data {
	int gpio_data;
	int gpio_sck;
	int supply_mv;
	bool checksum;
	bool no_otp_reload;
	bool low_resolution;
};

#endif /* _PDATA_SHT15_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 *  CLPS711X SPI bus driver definitions
 *
 *  Copyright (C) 2012 Alexander Shiyan <shc_work@mail.ru>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#ifndef ____LINUX_PLATFORM_DATA_SPI_CLPS711X_H
#define ____LINUX_PLATFORM_DATA_SPI_CLPS711X_H

/* Board specific platform_data */
struct spi_clps711x_pdata {
	int *chipselect;	/* Array of GPIO-numbers */
	int num_chipselect;	/* Total count of GPIOs */
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #ifndef __MACH_MXC_SDMA_H__
#define __MACH_MXC_SDMA_H__

/**
 * struct sdma_script_start_addrs - SDMA script start pointers
 *
 * start addresses of the different functions in the physical
 * address space of the SDMA engine.
 */
struct sdma_script_start_addrs {
	s32 ap_2_ap_addr;
	s32 ap_2_bp_addr;
	s32 ap_2_ap_fixed_addr;
	s32 bp_2_ap_addr;
	s32 loopback_on_dsp_side_addr;
	s32 mcu_interrupt_only_addr;
	s32 firi_2_per_addr;
	s32 firi_2_mcu_addr;
	s32 per_2_firi_addr;
	s32 mcu_2_firi_addr;
	s32 uart_2_per_addr;
	s32 uart_2_mcu_addr;
	s32 per_2_app_addr;
	s32 mcu_2_app_addr;
	s32 per_2_per_addr;
	s32 uartsh_2_per_addr;
	s32 uartsh_2_mcu_addr;
	s32 per_2_shp_addr;
	s32 mcu_2_shp_addr;
	s32 ata_2_mcu_addr;
	s32 mcu_2_ata_addr;
	s32 app_2_per_addr;
	s32 app_2_mcu_addr;
	s32 shp_2_per_addr;
	s32 shp_2_mcu_addr;
	s32 mshc_2_mcu_addr;
	s32 mcu_2_mshc_addr;
	s32 spdif_2_mcu_addr;
	s32 mcu_2_spdif_addr;
	s32 asrc_2_mcu_addr;
	s32 ext_mem_2_ipu_addr;
	s32 descrambler_addr;
	s32 dptc_dvfs_addr;
	s32 utra_addr;
	s32 ram_code_start_addr;
	/* End of v1 array */
	s32 mcu_2_ssish_addr;
	s32 ssish_2_mcu_addr;
	s32 hdmi_dma_addr;
	/* End of v2 array */
	s32 zcanfd_2_mcu_addr;
	s32 zqspi_2_mcu_addr;
	/* End of v3 array */
};

/**
 * struct sdma_platform_data - platform specific data for SDMA engine
 *
 * @fw_name		The firmware name
 * @script_addrs	SDMA scripts addresses in SDMA ROM
 */
struct sdma_platform_data {
	char *fw_name;
	struct sdma_script_start_addrs *script_addrs;
};

#endif /* __MACH_MXC_SDMA_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright (C) ST-Ericsson SA 2007-2010
 * Author: Per Forlin <per.forlin@stericsson.com> for ST-Ericsson
 * Author: Jonas Aaberg <jonas.aberg@stericsson.com> for ST-Ericsson
 * License terms: GNU General Public License (GPL) version 2
 */


#ifndef STE_DMA40_H
#define STE_DMA40_H

#include <linux/dmaengine.h>
#include <linux/scatterlist.h>
#include <linux/workqueue.h>
#include <linux/interrupt.h>

/*
 * Maxium size for a single dma descriptor
 * Size is limited to 16 bits.
 * Size is in the units of addr-widths (1,2,4,8 bytes)
 * Larger transfers will be split up to multiple linked desc
 */
#define STEDMA40_MAX_SEG_SIZE 0xFFFF

/* dev types for memcpy */
#define STEDMA40_DEV_DST_MEMORY (-1)
#define	STEDMA40_DEV_SRC_MEMORY (-1)

enum stedma40_mode {
	STEDMA40_MODE_LOGICAL = 0,
	STEDMA40_MODE_PHYSICAL,
	STEDMA40_MODE_OPERATION,
};

enum stedma40_mode_opt {
	STEDMA40_PCHAN_BASIC_MODE = 0,
	STEDMA40_LCHAN_SRC_LOG_DST_LOG = 0,
	STEDMA40_PCHAN_MODULO_MODE,
	STEDMA40_PCHAN_DOUBLE_DST_MODE,
	STEDMA40_LCHAN_SRC_PHY_DST_LOG,
	STEDMA40_LCHAN_SRC_LOG_DST_PHY,
};

#define STEDMA40_ESIZE_8_BIT  0x0
#define STEDMA40_ESIZE_16_BIT 0x1
#define STEDMA40_ESIZE_32_BIT 0x2
#define STEDMA40_ESIZE_64_BIT 0x3

/* The value 4 indicates that PEN-reg shall be set to 0 */
#define STEDMA40_PSIZE_PHY_1  0x4
#define STEDMA40_PSIZE_PHY_2  0x0
#define STEDMA40_PSIZE_PHY_4  0x1
#define STEDMA40_PSIZE_PHY_8  0x2
#define STEDMA40_PSIZE_PHY_16 0x3

/*
 * The number of elements differ in logical and
 * physical mode
 */
#define STEDMA40_PSIZE_LOG_1  STEDMA40_PSIZE_PHY_2
#define STEDMA40_PSIZE_LOG_4  STEDMA40_PSIZE_PHY_4
#define STEDMA40_PSIZE_LOG_8  STEDMA40_PSIZE_PHY_8
#define STEDMA40_PSIZE_LOG_16 STEDMA40_PSIZE_PHY_16

/* Maximum number of possible physical channels */
#define STEDMA40_MAX_PHYS 32

enum stedma40_flow_ctrl {
	STEDMA40_NO_FLOW_CTRL,
	STEDMA40_FLOW_CTRL,
};

/**
 * struct stedma40_half_channel_info - dst/src channel configuration
 *
 * @big_endian: true if the src/dst should be read as big endian
 * @data_width: Data width of the src/dst hardware
 * @p_size: Burst size
 * @flow_ctrl: Flow control on/off.
 */
struct stedma40_half_channel_info {
	bool big_endian;
	enum dma_slave_buswidth data_width;
	int psize;
	enum stedma40_flow_ctrl flow_ctrl;
};

/**
 * struct stedma40_chan_cfg - Structure to be filled by client drivers.
 *
 * @dir: MEM 2 MEM, PERIPH 2 MEM , MEM 2 PERIPH, PERIPH 2 PERIPH
 * @high_priority: true if high-priority
 * @realtime: true if realtime mode is to be enabled.  Only available on DMA40
 * version 3+, i.e DB8500v2+
 * @mode: channel mode: physical, logical, or operation
 * @mode_opt: options for the chosen channel mode
 * @dev_type: src/dst device type (driver uses dir to figure out which)
 * @src_info: Parameters for dst half channel
 * @dst_info: Parameters for dst half channel
 * @use_fixed_channel: if true, use physical channel specified by phy_channel
 * @phy_channel: physical channel to use, only if use_fixed_channel is true
 *
 * This structure has to be filled by the client drivers.
 * It is recommended to do all dma configurations for clients in the machine.
 *
 */
struct stedma40_chan_cfg {
	enum dma_transfer_direction		 dir;
	bool					 high_priority;
	bool					 realtime;
	enum stedma40_mode			 mode;
	enum stedma40_mode_opt			 mode_opt;
	int					 dev_type;
	struct stedma40_half_channel_info	 src_info;
	struct stedma40_half_channel_info	 dst_info;

	bool					 use_fixed_channel;
	int					 phy_channel;
};

/**
 * struct stedma40_platform_data - Configuration struct for the dma device.
 *
 * @dev_tx: mapping between destination event line and io address
 * @dev_rx: mapping between source event line and io address
 * @disabled_channels: A vector, ending with -1, that marks physical channels
 * that are for different reasons not available for the driver.
 * @soft_lli_chans: A vector, that marks physical channels will use LLI by SW
 * which avoids HW bug that exists in some versions of the controller.
 * SoftLLI introduces relink overhead that could impact performace for
 * certain use cases.
 * @num_of_soft_lli_chans: The number of channels that needs to be configured
 * to use SoftLLI.
 * @use_esram_lcla: flag for mapping the lcla into esram region
 * @num_of_memcpy_chans: The number of channels reserved for memcpy.
 * @num_of_phy_chans: The number of physical channels implemented in HW.
 * 0 means reading the number of channels from DMA HW but this is only valid
 * for 'multiple of 4' channels, like 8.
 */
struct stedma40_platform_data {
	int				 disabled_channels[STEDMA40_MAX_PHYS];
	int				*soft_lli_chans;
	int				 num_of_soft_lli_chans;
	bool				 use_esram_lcla;
	int				 num_of_memcpy_chans;
	int				 num_of_phy_chans;
};

#ifdef CONFIG_STE_DMA40

/**
 * stedma40_filter() - Provides stedma40_chan_cfg to the
 * ste_dma40 dma driver via the dmaengine framework.
 * does some checking of what's provided.
 *
 * Never directly called by client. It used by dmaengine.
 * @chan: dmaengine handle.
 * @data: Must be of type: struct stedma40_chan_cfg and is
 * the configuration of the framework.
 *
 *
 */

bool stedma40_filter(struct dma_chan *chan, void *data);

/**
 * stedma40_slave_mem() - Transfers a raw data buffer to or from a slave
 * (=device)
 *
 * @chan: dmaengine handle
 * @addr: source or destination physicall address.
 * @size: bytes to transfer
 * @direction: direction of transfer
 * @flags: is actually enum dma_ctrl_flags. See dmaengine.h
 */

static inline struct
dma_async_tx_descriptor *stedma40_slave_mem(struct dma_chan *chan,
					    dma_addr_t addr,
					    unsigned int size,
					    enum dma_transfer_direction direction,
					    unsigned long flags)
{
	struct scatterlist sg;
	sg_init_table(&sg, 1);
	sg.dma_address = addr;
	sg.length = size;

	return dmaengine_prep_slave_sg(chan, &sg, 1, direction, flags);
}

#else
static inline bool stedma40_filter(struct dma_chan *chan, void *data)
{
	return false;
}

static inline struct
dma_async_tx_descriptor *stedma40_slave_mem(struct dma_chan *chan,
					    dma_addr_t addr,
					    unsigned int size,
					    enum dma_transfer_direction direction,
					    unsigned long flags)
{
	return NULL;
}
#endif

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * I2C multiplexer using a single register
 *
 * Copyright 2015 Freescale Semiconductor
 * York Sun <yorksun@freescale.com>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 */

#ifndef __LINUX_PLATFORM_DATA_I2C_MUX_REG_H
#define __LINUX_PLATFORM_DATA_I2C_MUX_REG_H

/**
 * struct i2c_mux_reg_platform_data - Platform-dependent data for i2c-mux-reg
 * @parent: Parent I2C bus adapter number
 * @base_nr: Base I2C bus number to number adapters from or zero for dynamic
 * @values: Array of value for each channel
 * @n_values: Number of multiplexer channels
 * @little_endian: Indicating if the register is in little endian
 * @write_only: Reading the register is not allowed by hardware
 * @classes: Optional I2C auto-detection classes
 * @idle: Value to write to mux when idle
 * @idle_in_use: indicate if idle value is in use
 * @reg: Virtual address of the register to switch channel
 * @reg_size: register size in bytes
 */
struct i2c_mux_reg_platform_data {
	int parent;
	int base_nr;
	const unsigned int *values;
	int n_values;
	bool little_endian;
	bool write_only;
	const unsigned int *classes;
	u32 idle;
	bool idle_in_use;
	void __iomem *reg;
	resource_size_t reg_size;
};

#endif	/* __LINUX_PLATFORM_DATA_I2C_MUX_REG_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Copyright (C) ST-Ericsson SA 2010
 *
 * Author: Rabin Vincent <rabin.vincent@stericsson.com> for ST-Ericsson
 * License terms: GNU General Public License (GPL), version 2.
 */

#ifndef __MSP_H
#define __MSP_H

#include <linux/platform_data/dma-ste-dma40.h>

/* Platform data structure for a MSP I2S-device */
struct msp_i2s_platform_data {
	int id;
	struct stedma40_chan_cfg *msp_i2s_dma_rx;
	struct stedma40_chan_cfg *msp_i2s_dma_tx;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 * Driver for ADAU1361/ADAU1461/ADAU1761/ADAU1961/ADAU1381/ADAU1781 codecs
 *
 * Copyright 2011-2014 Analog Devices Inc.
 * Author: Lars-Peter Clausen <lars@metafoo.de>
 *
 * Licensed under the GPL-2 or later.
 */

#ifndef __LINUX_PLATFORM_DATA_ADAU17X1_H__
#define __LINUX_PLATFORM_DATA_ADAU17X1_H__

/**
 * enum adau17x1_micbias_voltage - Microphone bias voltage
 * @ADAU17X1_MICBIAS_0_90_AVDD: 0.9 * AVDD
 * @ADAU17X1_MICBIAS_0_65_AVDD: 0.65 * AVDD
 */
enum adau17x1_micbias_voltage {
	ADAU17X1_MICBIAS_0_90_AVDD = 0,
	ADAU17X1_MICBIAS_0_65_AVDD = 1,
};

/**
 * enum adau1761_digmic_jackdet_pin_mode - Configuration of the JACKDET/MICIN pin
 * @ADAU1761_DIGMIC_JACKDET_PIN_MODE_NONE: Disable the pin
 * @ADAU1761_DIGMIC_JACKDET_PIN_MODE_DIGMIC: Configure the pin for usage as
 *   digital microphone input.
 * @ADAU1761_DIGMIC_JACKDET_PIN_MODE_JACKDETECT: Configure the pin for jack
 *  insertion detection.
 */
enum adau1761_digmic_jackdet_pin_mode {
	ADAU1761_DIGMIC_JACKDET_PIN_MODE_NONE,
	ADAU1761_DIGMIC_JACKDET_PIN_MODE_DIGMIC,
	ADAU1761_DIGMIC_JACKDET_PIN_MODE_JACKDETECT,
};

/**
 * adau1761_jackdetect_debounce_time - Jack insertion detection debounce time
 * @ADAU1761_JACKDETECT_DEBOUNCE_5MS: 5 milliseconds
 * @ADAU1761_JACKDETECT_DEBOUNCE_10MS: 10 milliseconds
 * @ADAU1761_JACKDETECT_DEBOUNCE_20MS: 20 milliseconds
 * @ADAU1761_JACKDETECT_DEBOUNCE_40MS: 40 milliseconds
 */
enum adau1761_jackdetect_debounce_time {
	ADAU1761_JACKDETECT_DEBOUNCE_5MS = 0,
	ADAU1761_JACKDETECT_DEBOUNCE_10MS = 1,
	ADAU1761_JACKDETECT_DEBOUNCE_20MS = 2,
	ADAU1761_JACKDETECT_DEBOUNCE_40MS = 3,
};

/**
 * enum adau1761_output_mode - Output mode configuration
 * @ADAU1761_OUTPUT_MODE_HEADPHONE: Headphone output
 * @ADAU1761_OUTPUT_MODE_HEADPHONE_CAPLESS: Capless headphone output
 * @ADAU1761_OUTPUT_MODE_LINE: Line output
 */
enum adau1761_output_mode {
	ADAU1761_OUTPUT_MODE_HEADPHONE,
	ADAU1761_OUTPUT_MODE_HEADPHONE_CAPLESS,
	ADAU1761_OUTPUT_MODE_LINE,
};

/**
 * struct adau1761_platform_data - ADAU1761 Codec driver platform data
 * @input_differential: If true the input pins will be configured in
 *  differential mode.
 * @lineout_mode: Output mode for the LOUT/ROUT pins
 * @headphone_mode: Output mode for the LHP/RHP pins
 * @digmic_jackdetect_pin_mode: JACKDET/MICIN pin configuration
 * @jackdetect_debounce_time: Jack insertion detection debounce time.
 *  Note: This value will only be used, if the JACKDET/MICIN pin is configured
 *  for jack insertion detection.
 * @jackdetect_active_low: If true the jack insertion detection is active low.
 *  Othwise it will be active high.
 * @micbias_voltage: Microphone voltage bias
 */
struct adau1761_platform_data {
	bool input_differential;
	enum adau1761_output_mode lineout_mode;
	enum adau1761_output_mode headphone_mode;

	enum adau1761_digmic_jackdet_pin_mode digmic_jackdetect_pin_mode;

	enum adau1761_jackdetect_debounce_time jackdetect_debounce_time;
	bool jackdetect_active_low;

	enum adau17x1_micbias_voltage micbias_voltage;
};

/**
 * struct adau1781_platform_data - ADAU1781 Codec driver platform data
 * @left_input_differential: If true configure the left input as
 * differential input.
 * @right_input_differential: If true configure the right input as differntial
 *  input.
 * @use_dmic: If true configure the MIC pins as digital microphone pins instead
 *  of analog microphone pins.
 * @micbias_voltage: Microphone voltage bias
 */
struct adau1781_platform_data {
	bool left_input_differential;
	bool right_input_differential;

	bool use_dmic;

	enum adau17x1_micbias_voltage micbias_voltage;
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 * Platform data for the COH901318 DMA controller
 * Copyright (C) 2007-2013 ST-Ericsson
 * License terms: GNU General Public License (GPL) version 2
 */

#ifndef PLAT_COH901318_H
#define PLAT_COH901318_H

#ifdef CONFIG_COH901318

/* We only support the U300 DMA channels */
#define U300_DMA_MSL_TX_0		0
#define U300_DMA_MSL_TX_1		1
#define U300_DMA_MSL_TX_2		2
#define U300_DMA_MSL_TX_3		3
#define U300_DMA_MSL_TX_4		4
#define U300_DMA_MSL_TX_5		5
#define U300_DMA_MSL_TX_6		6
#define U300_DMA_MSL_RX_0		7
#define U300_DMA_MSL_RX_1		8
#define U300_DMA_MSL_RX_2		9
#define U300_DMA_MSL_RX_3		10
#define U300_DMA_MSL_RX_4		11
#define U300_DMA_MSL_RX_5		12
#define U300_DMA_MSL_RX_6		13
#define U300_DMA_MMCSD_RX_TX		14
#define U300_DMA_MSPRO_TX		15
#define U300_DMA_MSPRO_RX		16
#define U300_DMA_UART0_TX		17
#define U300_DMA_UART0_RX		18
#define U300_DMA_APEX_TX		19
#define U300_DMA_APEX_RX		20
#define U300_DMA_PCM_I2S0_TX		21
#define U300_DMA_PCM_I2S0_RX		22
#define U300_DMA_PCM_I2S1_TX		23
#define U300_DMA_PCM_I2S1_RX		24
#define U300_DMA_XGAM_CDI		25
#define U300_DMA_XGAM_PDI		26
#define U300_DMA_SPI_TX			27
#define U300_DMA_SPI_RX			28
#define U300_DMA_GENERAL_PURPOSE_0	29
#define U300_DMA_GENERAL_PURPOSE_1	30
#define U300_DMA_GENERAL_PURPOSE_2	31
#define U300_DMA_GENERAL_PURPOSE_3	32
#define U300_DMA_GENERAL_PURPOSE_4	33
#define U300_DMA_GENERAL_PURPOSE_5	34
#define U300_DMA_GENERAL_PURPOSE_6	35
#define U300_DMA_GENERAL_PURPOSE_7	36
#define U300_DMA_GENERAL_PURPOSE_8	37
#define U300_DMA_UART1_TX		38
#define U300_DMA_UART1_RX		39

#define U300_DMA_DEVICE_CHANNELS	32
#define U300_DMA_CHANNELS		40

/**
 * coh901318_filter_id() - DMA channel filter function
 * @chan: dma channel handle
 * @chan_id: id of dma channel to be filter out
 *
 * In dma_request_channel() it specifies what channel id to be requested
 */
bool coh901318_filter_id(struct dma_chan *chan, void *chan_id);
#else
static inline bool coh901318_filter_id(struct dma_chan *chan, void *chan_id)
{
	return false;
}
#endif

#endif /* PLAT_COH901318_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /* linux/include/asm/arch-nuc900/fb.h
 *
 * Copyright (c) 2008 Nuvoton technology corporation
 * All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Changelog:
 *
 *   2008/08/26     vincen.zswan modify this file for LCD.
 */

#ifndef __ASM_ARM_FB_H
#define __ASM_ARM_FB_H



/* LCD Controller Hardware Desc */
struct nuc900fb_hw {
	unsigned int lcd_dccs;
	unsigned int lcd_device_ctrl;
	unsigned int lcd_mpulcd_cmd;
	unsigned int lcd_int_cs;
	unsigned int lcd_crtc_size;
	unsigned int lcd_crtc_dend;
	unsigned int lcd_crtc_hr;
	unsigned int lcd_crtc_hsync;
	unsigned int lcd_crtc_vr;
	unsigned int lcd_va_baddr0;
	unsigned int lcd_va_baddr1;
	unsigned int lcd_va_fbctrl;
	unsigned int lcd_va_scale;
	unsigned int lcd_va_test;
	unsigned int lcd_va_win;
	unsigned int lcd_va_stuff;
};

/* LCD Display Description */
struct nuc900fb_display {
	/* LCD Image type */
	unsigned type;

	/* LCD Screen Size */
	unsigned short width;
	unsigned short height;

	/* LCD Screen Info */
	unsigned short xres;
	unsigned short yres;
	unsigned short bpp;

	unsigned long pixclock;
	unsigned short left_margin;
	unsigned short right_margin;
	unsigned short hsync_len;
	unsigned short upper_margin;
	unsigned short lower_margin;
	unsigned short vsync_len;

	/* hardware special register value */
	unsigned int dccs;
	unsigned int devctl;
	unsigned int fbctrl;
	unsigned int scale;
};

struct nuc900fb_mach_info {
	struct nuc900fb_display *displays;
	unsigned num_displays;
	unsigned default_display;
	/* GPIO Setting  Info */
	unsigned gpio_dir;
	unsigned gpio_dir_mask;
	unsigned gpio_data;
	unsigned gpio_data_mask;
};

extern void __init nuc900_fb_set_platdata(struct nuc900fb_mach_info *);

#endif /* __ASM_ARM_FB_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * AD7298 SPI ADC driver
 *
 * Copyright 2011 Analog Devices Inc.
 *
 * Licensed under the GPL-2.
 */

#ifndef __LINUX_PLATFORM_DATA_AD7298_H__
#define __LINUX_PLATFORM_DATA_AD7298_H__

/**
 * struct ad7298_platform_data - Platform data for the ad7298 ADC driver
 * @ext_ref: Whether to use an external reference voltage.
 **/
struct ad7298_platform_data {
	bool ext_ref;
};

#endif /* IIO_ADC_AD7298_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #ifndef __LINUX_PLATFORM_DATA_EFM32_SPI_H__
#define __LINUX_PLATFORM_DATA_EFM32_SPI_H__

#include <linux/types.h>

/**
 * struct efm32_spi_pdata
 * @location: pinmux location for the I/O pins (to be written to the ROUTE
 * 	register)
 */
struct efm32_spi_pdata {
	u8 location;
};
#endif /* ifndef __LINUX_PLATFORM_DATA_EFM32_SPI_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #ifndef ASMARM_ARCH_MMC_H
#define ASMARM_ARCH_MMC_H

#include <linux/mmc/host.h>
#include <linux/interrupt.h>

struct device;
struct mmc_host;

struct pxamci_platform_data {
	unsigned int ocr_mask;			/* available voltages */
	unsigned long detect_delay_ms;		/* delay in millisecond before detecting cards after interrupt */
	int (*init)(struct device *, irq_handler_t , void *);
	int (*get_ro)(struct device *);
	int (*setpower)(struct device *, unsigned int);
	void (*exit)(struct device *, void *);
	int gpio_card_detect;			/* gpio detecting card insertion */
	int gpio_card_ro;			/* gpio detecting read only toggle */
	bool gpio_card_ro_invert;		/* gpio ro is inverted */
	int gpio_power;				/* gpio powering up MMC bus */
	bool gpio_power_invert;			/* gpio power is inverted */
};

extern void pxa_set_mci_info(struct pxamci_platform_data *info);
extern void pxa3xx_set_mci2_info(struct pxamci_platform_data *info);
extern void pxa3xx_set_mci3_info(struct pxamci_platform_data *info);

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Copyright 2012 Analog Devices Inc.
 *
 * Licensed under the GPL-2.
 */
#ifndef __LINUX_PLATFORM_DATA_AD5755_H__
#define __LINUX_PLATFORM_DATA_AD5755_H__

enum ad5755_mode {
	AD5755_MODE_VOLTAGE_0V_5V		= 0,
	AD5755_MODE_VOLTAGE_0V_10V		= 1,
	AD5755_MODE_VOLTAGE_PLUSMINUS_5V	= 2,
	AD5755_MODE_VOLTAGE_PLUSMINUS_10V	= 3,
	AD5755_MODE_CURRENT_4mA_20mA		= 4,
	AD5755_MODE_CURRENT_0mA_20mA		= 5,
	AD5755_MODE_CURRENT_0mA_24mA		= 6,
};

enum ad5755_dc_dc_phase {
	AD5755_DC_DC_PHASE_ALL_SAME_EDGE		= 0,
	AD5755_DC_DC_PHASE_A_B_SAME_EDGE_C_D_OPP_EDGE	= 1,
	AD5755_DC_DC_PHASE_A_C_SAME_EDGE_B_D_OPP_EDGE	= 2,
	AD5755_DC_DC_PHASE_90_DEGREE			= 3,
};

enum ad5755_dc_dc_freq {
	AD5755_DC_DC_FREQ_250kHZ = 0,
	AD5755_DC_DC_FREQ_410kHZ = 1,
	AD5755_DC_DC_FREQ_650kHZ = 2,
};

enum ad5755_dc_dc_maxv {
	AD5755_DC_DC_MAXV_23V	= 0,
	AD5755_DC_DC_MAXV_24V5	= 1,
	AD5755_DC_DC_MAXV_27V	= 2,
	AD5755_DC_DC_MAXV_29V5	= 3,
};

enum ad5755_slew_rate {
	AD5755_SLEW_RATE_64k	= 0,
	AD5755_SLEW_RATE_32k	= 1,
	AD5755_SLEW_RATE_16k	= 2,
	AD5755_SLEW_RATE_8k	= 3,
	AD5755_SLEW_RATE_4k	= 4,
	AD5755_SLEW_RATE_2k	= 5,
	AD5755_SLEW_RATE_1k	= 6,
	AD5755_SLEW_RATE_500	= 7,
	AD5755_SLEW_RATE_250	= 8,
	AD5755_SLEW_RATE_125	= 9,
	AD5755_SLEW_RATE_64	= 10,
	AD5755_SLEW_RATE_32	= 11,
	AD5755_SLEW_RATE_16	= 12,
	AD5755_SLEW_RATE_8	= 13,
	AD5755_SLEW_RATE_4	= 14,
	AD5755_SLEW_RATE_0_5	= 15,
};

enum ad5755_slew_step_size {
	AD5755_SLEW_STEP_SIZE_1 = 0,
	AD5755_SLEW_STEP_SIZE_2 = 1,
	AD5755_SLEW_STEP_SIZE_4 = 2,
	AD5755_SLEW_STEP_SIZE_8 = 3,
	AD5755_SLEW_STEP_SIZE_16 = 4,
	AD5755_SLEW_STEP_SIZE_32 = 5,
	AD5755_SLEW_STEP_SIZE_64 = 6,
	AD5755_SLEW_STEP_SIZE_128 = 7,
	AD5755_SLEW_STEP_SIZE_256 = 8,
};

/**
 * struct ad5755_platform_data - AD5755 DAC driver platform data
 * @ext_dc_dc_compenstation_resistor: Whether an external DC-DC converter
 * compensation register is used.
 * @dc_dc_phase: DC-DC converter phase.
 * @dc_dc_freq: DC-DC converter frequency.
 * @dc_dc_maxv: DC-DC maximum allowed boost voltage.
 * @dac.mode: The mode to be used for the DAC output.
 * @dac.ext_current_sense_resistor: Whether an external current sense resistor
 * is used.
 * @dac.enable_voltage_overrange: Whether to enable 20% voltage output overrange.
 * @dac.slew.enable: Whether to enable digital slew.
 * @dac.slew.rate: Slew rate of the digital slew.
 * @dac.slew.step_size: Slew step size of the digital slew.
 **/
struct ad5755_platform_data {
	bool ext_dc_dc_compenstation_resistor;
	enum ad5755_dc_dc_phase dc_dc_phase;
	enum ad5755_dc_dc_freq dc_dc_freq;
	enum ad5755_dc_dc_maxv dc_dc_maxv;

	struct {
		enum ad5755_mode mode;
		bool ext_current_sense_resistor;
		bool enable_voltage_overrange;
		struct {
			bool enable;
			enum ad5755_slew_rate rate;
			enum ad5755_slew_step_size step_size;
		} slew;
	} dac[4];
};

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #ifndef __ASM_ARCH_NUC900_I2C_H
#define __ASM_ARCH_NUC900_I2C_H

struct nuc900_platform_i2c {
	int		bus_num;
	unsigned long   bus_freq;
};

#endif /* __ASM_ARCH_NUC900_I2C_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #ifndef _LINUX_MODULE_H
#define _LINUX_MODULE_H
/*
 * Dynamic loading of modules into the kernel.
 *
 * Rewritten by Richard Henderson <rth@tamu.edu> Dec 1996
 * Rewritten again by Rusty Russell, 2002
 */
#include <linux/list.h>
#include <linux/stat.h>
#include <linux/compiler.h>
#include <linux/cache.h>
#include <linux/kmod.h>
#include <linux/init.h>
#include <linux/elf.h>
#include <linux/stringify.h>
#include <linux/kobject.h>
#include <linux/moduleparam.h>
#include <linux/jump_label.h>
#include <linux/export.h>
#include <linux/extable.h>	/* only as arch move module.h -> extable.h */
#include <linux/rbtree_latch.h>

#include <linux/percpu.h>
#include <asm/module.h>

/* In stripped ARM and x86-64 modules, ~ is surprisingly rare. */
#define MODULE_SIG_STRING "~Module signature appended~\n"

/* Not Yet Implemented */
#define MODULE_SUPPORTED_DEVICE(name)

#define MODULE_NAME_LEN MAX_PARAM_PREFIX_LEN

struct modversion_info {
	unsigned long crc;
	char name[MODULE_NAME_LEN];
};

struct module;
struct exception_table_entry;

struct module_kobject {
	struct kobject kobj;
	struct module *mod;
	struct kobject *drivers_dir;
	struct module_param_attrs *mp;
	struct completion *kobj_completion;
};

struct module_attribute {
	struct attribute attr;
	ssize_t (*show)(struct module_attribute *, struct module_kobject *,
			char *);
	ssize_t (*store)(struct module_attribute *, struct module_kobject *,
			 const char *, size_t count);
	void (*setup)(struct module *, const char *);
	int (*test)(struct module *);
	void (*free)(struct module *);
};

struct module_version_attribute {
	struct module_attribute mattr;
	const char *module_name;
	const char *version;
} __attribute__ ((__aligned__(sizeof(void *))));

extern ssize_t __modver_version_show(struct module_attribute *,
				     struct module_kobject *, char *);

extern struct module_attribute module_uevent;

/* These are either module local, or the kernel's dummy ones. */
extern int init_module(void);
extern void cleanup_module(void);

#ifndef MODULE
/**
 * module_init() - driver initialization entry point
 * @x: function to be run at kernel boot time or module insertion
 *
 * module_init() will either be called during do_initcalls() (if
 * builtin) or at module insertion time (if a module).  There can only
 * be one per module.
 */
#define module_init(x)	__initcall(x);

/**
 * module_exit() - driver exit entry point
 * @x: function to be run when driver is removed
 *
 * module_exit() will wrap the driver clean-up code
 * with cleanup_module() when used with rmmod when
 * the driver is a module.  If the driver is statically
 * compiled into the kernel, module_exit() has no effect.
 * There can only be one per module.
 */
#define module_exit(x)	__exitcall(x);

#else /* MODULE */

/*
 * In most cases loadable modules do not need custom
 * initcall levels. There are still some valid cases where
 * a driver may be needed early if built in, and does not
 * matter when built as a loadable module. Like bus
 * snooping debug drivers.
 */
#define early_initcall(fn)		module_init(fn)
#define core_initcall(fn)		module_init(fn)
#define core_initcall_sync(fn)		module_init(fn)
#define postcore_initcall(fn)		module_init(fn)
#define postcore_initcall_sync(fn)	module_init(fn)
#define arch_initcall(fn)		module_init(fn)
#define subsys_initcall(fn)		module_init(fn)
#define subsys_initcall_sync(fn)	module_init(fn)
#define fs_initcall(fn)			module_init(fn)
#define fs_initcall_sync(fn)		module_init(fn)
#define rootfs_initcall(fn)		module_init(fn)
#define device_initcall(fn)		module_init(fn)
#define device_initcall_sync(fn)	module_init(fn)
#define late_initcall(fn)		module_init(fn)
#define late_initcall_sync(fn)		module_init(fn)

#define console_initcall(fn)		module_init(fn)
#define security_initcall(fn)		module_init(fn)

/* Each module must use one module_init(). */
#define module_init(initfn)					\
	static inline initcall_t __inittest(void)		\
	{ return initfn; }					\
	int init_module(void) __attribute__((alias(#initfn)));

/* This is only required if you want to be unloadable. */
#define module_exit(exitfn)					\
	static inline exitcall_t __exittest(void)		\
	{ return exitfn; }					\
	void cleanup_module(void) __attribute__((alias(#exitfn)));

#endif

/* This means "can be init if no module support, otherwise module load
   may call it." */
#ifdef CONFIG_MODULES
#define __init_or_module
#define __initdata_or_module
#define __initconst_or_module
#define __INIT_OR_MODULE	.text
#define __INITDATA_OR_MODULE	.data
#define __INITRODATA_OR_MODULE	.section ".rodata","a",%progbits
#else
#define __init_or_module __init
#define __initdata_or_module __initdata
#define __initconst_or_module __initconst
#define __INIT_OR_MODULE __INIT
#define __INITDATA_OR_MODULE __INITDATA
#define __INITRODATA_OR_MODULE __INITRODATA
#endif /*CONFIG_MODULES*/

/* Generic info of form tag = "info" */
#define MODULE_INFO(tag, info) __MODULE_INFO(tag, tag, info)

/* For userspace: you can also call me... */
#define MODULE_ALIAS(_alias) MODULE_INFO(alias, _alias)

/* Soft module dependencies. See man modprobe.d for details.
 * Example: MODULE_SOFTDEP("pre: module-foo module-bar post: module-baz")
 */
#define MODULE_SOFTDEP(_softdep) MODULE_INFO(softdep, _softdep)

/*
 * The following license idents are currently accepted as indicating free
 * software modules
 *
 *	"GPL"				[GNU Public License v2 or later]
 *	"GPL v2"			[GNU Public License v2]
 *	"GPL and additional rights"	[GNU Public License v2 rights and more]
 *	"Dual BSD/GPL"			[GNU Public License v2
 *					 or BSD license choice]
 *	"Dual MIT/GPL"			[GNU Public License v2
 *					 or MIT license choice]
 *	"Dual MPL/GPL"			[GNU Public License v2
 *					 or Mozilla license choice]
 *
 * The following other idents are available
 *
 *	"Proprietary"			[Non free products]
 *
 * There are dual licensed components, but when running with Linux it is the
 * GPL that is relevant so this is a non issue. Similarly LGPL linked with GPL
 * is a GPL combined work.
 *
 * This exists for several reasons
 * 1.	So modinfo can show license info for users wanting to vet their setup
 *	is free
 * 2.	So the community can ignore bug reports including proprietary modules
 * 3.	So vendors can do likewise based on their own policies
 */
#define MODULE_LICENSE(_license) MODULE_INFO(license, _license)

/*
 * Author(s), use "Name <email>" or just "Name", for multiple
 * authors use multiple MODULE_AUTHOR() statements/lines.
 */
#define MODULE_AUTHOR(_author) MODULE_INFO(author, _author)

/* What your module does. */
#define MODULE_DESCRIPTION(_description) MODULE_INFO(description, _description)

#ifdef MODULE
/* Creates an alias so file2alias.c can find device table. */
#define MODULE_DEVICE_TABLE(type, name)					\
extern const typeof(name) __mod_##type##__##name##_device_table		\
  __attribute__ ((unused, alias(__stringify(name))))
#else  /* !MODULE */
#define MODULE_DEVICE_TABLE(type, name)
#endif

/* Version of form [<epoch>:]<version>[-<extra-version>].
 * Or for CVS/RCS ID version, everything but the number is stripped.
 * <epoch>: A (small) unsigned integer which allows you to start versions
 * anew. If not mentioned, it's zero.  eg. "2:1.0" is after
 * "1:2.0".

 * <version>: The <version> may contain only alphanumerics and the
 * character `.'.  Ordered by numeric sort for numeric parts,
 * ascii sort for ascii parts (as per RPM or DEB algorithm).

 * <extraversion>: Like <version>, but inserted for local
 * customizations, eg "rh3" or "rusty1".

 * Using this automatically adds a checksum of the .c files and the
 * local headers in "srcversion".
 */

#if defined(MODULE) || !defined(CONFIG_SYSFS)
#define MODULE_VERSION(_version) MODULE_INFO(version, _version)
#else
#define MODULE_VERSION(_version)					\
	static struct module_version_attribute ___modver_attr = {	\
		.mattr	= {						\
			.attr	= {					\
				.name	= "version",			\
				.mode	= S_IRUGO,			\
			},						\
			.show	= __modver_version_show,		\
		},							\
		.module_name	= KBUILD_MODNAME,			\
		.version	= _version,				\
	};								\
	static const struct module_version_attribute			\
	__used __attribute__ ((__section__ ("__modver")))		\
	* __moduleparam_const __modver_attr = &___modver_attr
#endif

/* Optional firmware file (or files) needed by the module
 * format is simply firmware file name.  Multiple firmware
 * files require multiple MODULE_FIRMWARE() specifiers */
#define MODULE_FIRMWARE(_firmware) MODULE_INFO(firmware, _firmware)

struct notifier_block;

#ifdef CONFIG_MODULES

extern int modules_disabled; /* for sysctl */
/* Get/put a kernel symbol (calls must be symmetric) */
void *__symbol_get(const char *symbol);
void *__symbol_get_gpl(const char *symbol);
#define symbol_get(x) ((typeof(&x))(__symbol_get(VMLINUX_SYMBOL_STR(x))))

/* modules using other modules: kdb wants to see this. */
struct module_use {
	struct list_head source_list;
	struct list_head target_list;
	struct module *source, *target;
};

enum module_state {
	MODULE_STATE_LIVE,	/* Normal state. */
	MODULE_STATE_COMING,	/* Full formed, running module_init. */
	MODULE_STATE_GOING,	/* Going away. */
	MODULE_STATE_UNFORMED,	/* Still setting it up. */
};

struct module;

struct mod_tree_node {
	struct module *mod;
	struct latch_tree_node node;
};

struct module_layout {
	/* The actual code + data. */
	void *base;
	/* Total size. */
	unsigned int size;
	/* The size of the executable code.  */
	unsigned int text_size;
	/* Size of RO section of the module (text+rodata) */
	unsigned int ro_size;
	/* Size of RO after init section */
	unsigned int ro_after_init_size;

#ifdef CONFIG_MODULES_TREE_LOOKUP
	struct mod_tree_node mtn;
#endif
};

#ifdef CONFIG_MODULES_TREE_LOOKUP
/* Only touch one cacheline for common rbtree-for-core-layout case. */
#define __module_layout_align ____cacheline_aligned
#else
#define __module_layout_align
#endif

struct mod_kallsyms {
	Elf_Sym *symtab;
	unsigned int num_symtab;
	char *strtab;
};

#ifdef CONFIG_LIVEPATCH
struct klp_modinfo {
	Elf_Ehdr hdr;
	Elf_Shdr *sechdrs;
	char *secstrings;
	unsigned int symndx;
};
#endif

struct module {
	enum module_state state;

	/* Member of list of modules */
	struct list_head list;

	/* Unique handle for this module */
	char name[MODULE_NAME_LEN];

	/* Sysfs stuff. */
	struct module_kobject mkobj;
	struct module_attribute *modinfo_attrs;
	const char *version;
	const char *srcversion;
	struct kobject *holders_dir;

	/* Exported symbols */
	const struct kernel_symbol *syms;
	const unsigned long *crcs;
	unsigned int num_syms;

	/* Kernel parameters. */
#ifdef CONFIG_SYSFS
	struct mutex param_lock;
#endif
	struct kernel_param *kp;
	unsigned int num_kp;

	/* GPL-only exported symbols. */
	unsigned int num_gpl_syms;
	const struct kernel_symbol *gpl_syms;
	const unsigned long *gpl_crcs;

#ifdef CONFIG_UNUSED_SYMBOLS
	/* unused exported symbols. */
	const struct kernel_symbol *unused_syms;
	const unsigned long *unused_crcs;
	unsigned int num_unused_syms;

	/* GPL-only, unused exported symbols. */
	unsigned int num_unused_gpl_syms;
	const struct kernel_symbol *unused_gpl_syms;
	const unsigned long *unused_gpl_crcs;
#endif

#ifdef CONFIG_MODULE_SIG
	/* Signature was verified. */
	bool sig_ok;
#endif

	bool async_probe_requested;

	/* symbols that will be GPL-only in the near future. */
	const struct kernel_symbol *gpl_future_syms;
	const unsigned long *gpl_future_crcs;
	unsigned int num_gpl_future_syms;

	/* Exception table */
	unsigned int num_exentries;
	struct exception_table_entry *extable;

	/* Startup function. */
	int (*init)(void);

	/* Core layout: rbtree is accessed frequently, so keep together. */
	struct module_layout core_layout __module_layout_align;
	struct module_layout init_layout;

	/* Arch-specific module values */
	struct mod_arch_specific arch;

	unsigned int taints;	/* same bits as kernel:tainted */

#ifdef CONFIG_GENERIC_BUG
	/* Support for BUG */
	unsigned num_bugs;
	struct list_head bug_list;
	struct bug_entry *bug_table;
#endif

#ifdef CONFIG_KALLSYMS
	/* Protected by RCU and/or module_mutex: use rcu_dereference() */
	struct mod_kallsyms *kallsyms;
	struct mod_kallsyms core_kallsyms;
	
	/* Section attributes */
	struct module_sect_attrs *sect_attrs;

	/* Notes attributes */
	struct module_notes_attrs *notes_attrs;
#endif

	/* The command line arguments (may be mangled).  People like
	   keeping pointers to this stuff */
	char *args;

#ifdef CONFIG_SMP
	/* Per-cpu data. */
	void __percpu *percpu;
	unsigned int percpu_size;
#endif

#ifdef CONFIG_TRACEPOINTS
	unsigned int num_tracepoints;
	struct tracepoint * const *tracepoints_ptrs;
#endif
#ifdef HAVE_JUMP_LABEL
	struct jump_entry *jump_entries;
	unsigned int num_jump_entries;
#endif
#ifdef CONFIG_TRACING
	unsigned int num_trace_bprintk_fmt;
	const char **trace_bprintk_fmt_start;
#endif
#ifdef CONFIG_EVENT_TRACING
	struct trace_event_call **trace_events;
	unsigned int num_trace_events;
	struct trace_enum_map **trace_enums;
	unsigned int num_trace_enums;
#endif
#ifdef CONFIG_FTRACE_MCOUNT_RECORD
	unsigned int num_ftrace_callsites;
	unsigned long *ftrace_callsites;
#endif

#ifdef CONFIG_LIVEPATCH
	bool klp; /* Is this a livepatch module? */
	bool klp_alive;

	/* Elf information */
	struct klp_modinfo *klp_info;
#endif

#ifdef CONFIG_MODULE_UNLOAD
	/* What modules depend on me? */
	struct list_head source_list;
	/* What modules do I depend on? */
	struct list_head target_list;

	/* Destruction function. */
	void (*exit)(void);

	atomic_t refcnt;
#endif

#ifdef CONFIG_CONSTRUCTORS
	/* Constructor functions. */
	ctor_fn_t *ctors;
	unsigned int num_ctors;
#endif
} ____cacheline_aligned;
#ifndef MODULE_ARCH_INIT
#define MODULE_ARCH_INIT {}
#endif

extern struct mutex module_mutex;

/* FIXME: It'd be nice to isolate modules during init, too, so they
   aren't used before they (may) fail.  But presently too much code
   (IDE & SCSI) require entry into the module during init.*/
static inline int module_is_live(struct module *mod)
{
	return mod->state != MODULE_STATE_GOING;
}

struct module *__module_text_address(unsigned long addr);
struct module *__module_address(unsigned long addr);
bool is_module_address(unsigned long addr);
bool is_module_percpu_address(unsigned long addr);
bool is_module_text_address(unsigned long addr);

static inline bool within_module_core(unsigned long addr,
				      const struct module *mod)
{
	return (unsigned long)mod->core_layout.base <= addr &&
	       addr < (unsigned long)mod->core_layout.base + mod->core_layout.size;
}

static inline bool within_module_init(unsigned long addr,
				      const struct module *mod)
{
	return (unsigned long)mod->init_layout.base <= addr &&
	       addr < (unsigned long)mod->init_layout.base + mod->init_layout.size;
}

static inline bool within_module(unsigned long addr, const struct module *mod)
{
	return within_module_init(addr, mod) || within_module_core(addr, mod);
}

/* Search for module by name: must hold module_mutex. */
struct module *find_module(const char *name);

struct symsearch {
	const struct kernel_symbol *start, *stop;
	const unsigned long *crcs;
	enum {
		NOT_GPL_ONLY,
		GPL_ONLY,
		WILL_BE_GPL_ONLY,
	} licence;
	bool unused;
};

/*
 * Search for an exported symbol by name.
 *
 * Must be called with module_mutex held or preemption disabled.
 */
const struct kernel_symbol *find_symbol(const char *name,
					struct module **owner,
					const unsigned long **crc,
					bool gplok,
					bool warn);

/*
 * Walk the exported symbol table
 *
 * Must be called with module_mutex held or preemption disabled.
 */
bool each_symbol_section(bool (*fn)(const struct symsearch *arr,
				    struct module *owner,
				    void *data), void *data);

/* Returns 0 and fills in value, defined and namebuf, or -ERANGE if
   symnum out of range. */
int module_get_kallsym(unsigned int symnum, unsigned long *value, char *type,
			char *name, char *module_name, int *exported);

/* Look for this name: can be of form module:name. */
unsigned long module_kallsyms_lookup_name(const char *name);

int module_kallsyms_on_each_symbol(int (*fn)(void *, const char *,
					     struct module *, unsigned long),
				   void *data);

extern void __noreturn __module_put_and_exit(struct module *mod,
			long code);
#define module_put_and_exit(code) __module_put_and_exit(THIS_MODULE, code)

#ifdef CONFIG_MODULE_UNLOAD
int module_refcount(struct module *mod);
void __symbol_put(const char *symbol);
#define symbol_put(x) __symbol_put(VMLINUX_SYMBOL_STR(x))
void symbol_put_addr(void *addr);

/* Sometimes we know we already have a refcount, and it's easier not
   to handle the error case (which only happens with rmmod --wait). */
extern void __module_get(struct module *module);

/* This is the Right Way to get a module: if it fails, it's being removed,
 * so pretend it's not there. */
extern bool try_module_get(struct module *module);

extern void module_put(struct module *module);

#else /*!CONFIG_MODULE_UNLOAD*/
static inline int try_module_get(struct module *module)
{
	return !module || module_is_live(module);
}
static inline void module_put(struct module *module)
{
}
static inline void __module_get(struct module *module)
{
}
#define symbol_put(x) do { } while (0)
#define symbol_put_addr(p) do { } while (0)

#endif /* CONFIG_MODULE_UNLOAD */
int ref_module(struct module *a, struct module *b);

/* This is a #define so the string doesn't get put in every .o file */
#define module_name(mod)			\
({						\
	struct module *__mod = (mod);		\
	__mod ? __mod->name : "kernel";		\
})

/* For kallsyms to ask for address resolution.  namebuf should be at
 * least KSYM_NAME_LEN long: a pointer to namebuf is returned if
 * found, otherwise NULL. */
const char *module_address_lookup(unsigned long addr,
			    unsigned long *symbolsize,
			    unsigned long *offset,
			    char **modname,
			    char *namebuf);
int lookup_module_symbol_name(unsigned long addr, char *symname);
int lookup_module_symbol_attrs(unsigned long addr, unsigned long *size, unsigned long *offset, char *modname, char *name);

int register_module_notifier(struct notifier_block *nb);
int unregister_module_notifier(struct notifier_block *nb);

extern void print_modules(void);

static inline bool module_requested_async_probing(struct module *module)
{
	return module && module->async_probe_requested;
}

#ifdef CONFIG_LIVEPATCH
static inline bool is_livepatch_module(struct module *mod)
{
	return mod->klp;
}
#else /* !CONFIG_LIVEPATCH */
static inline bool is_livepatch_module(struct module *mod)
{
	return false;
}
#endif /* CONFIG_LIVEPATCH */

#else /* !CONFIG_MODULES... */

static inline struct module *__module_address(unsigned long addr)
{
	return NULL;
}

static inline struct module *__module_text_address(unsigned long addr)
{
	return NULL;
}

static inline bool is_module_address(unsigned long addr)
{
	return false;
}

static inline bool is_module_percpu_address(unsigned long addr)
{
	return false;
}

static inline bool is_module_text_address(unsigned long addr)
{
	return false;
}

/* Get/put a kernel symbol (calls should be symmetric) */
#define symbol_get(x) ({ extern typeof(x) x __attribute__((weak)); &(x); })
#define symbol_put(x) do { } while (0)
#define symbol_put_addr(x) do { } while (0)

static inline void __module_get(struct module *module)
{
}

static inline int try_module_get(struct module *module)
{
	return 1;
}

static inline void module_put(struct module *module)
{
}

#define module_name(mod) "kernel"

/* For kallsyms to ask for address resolution.  NULL means not found. */
static inline const char *module_address_lookup(unsigned long addr,
					  unsigned long *symbolsize,
					  unsigned long *offset,
					  char **modname,
					  char *namebuf)
{
	return NULL;
}

static inline int lookup_module_symbol_name(unsigned long addr, char *symname)
{
	return -ERANGE;
}

static inline int lookup_module_symbol_attrs(unsigned long addr, unsigned long *size, unsigned long *offset, char *modname, char *name)
{
	return -ERANGE;
}

static inline int module_get_kallsym(unsigned int symnum, unsigned long *value,
					char *type, char *name,
					char *module_name, int *exported)
{
	return -ERANGE;
}

static inline unsigned long module_kallsyms_lookup_name(const char *name)
{
	return 0;
}

static inline int module_kallsyms_on_each_symbol(int (*fn)(void *, const char *,
							   struct module *,
							   unsigned long),
						 void *data)
{
	return 0;
}

static inline int register_module_notifier(struct notifier_block *nb)
{
	/* no events will happen anyway, so this can always succeed */
	return 0;
}

static inline int unregister_module_notifier(struct notifier_block *nb)
{
	return 0;
}

#define module_put_and_exit(code) do_exit(code)

static inline void print_modules(void)
{
}

static inline bool module_requested_async_probing(struct module *module)
{
	return false;
}

#endif /* CONFIG_MODULES */

#ifdef CONFIG_SYSFS
extern struct kset *module_kset;
extern struct kobj_type module_ktype;
extern int module_sysfs_initialized;
#endif /* CONFIG_SYSFS */

#define symbol_request(x) try_then_request_module(symbol_get(x), "symbol:" #x)

/* BELOW HERE ALL THESE ARE OBSOLETE AND WILL VANISH */

#define __MODULE_STRING(x) __stringify(x)

#ifdef CONFIG_DEBUG_SET_MODULE_RONX
extern void set_all_modules_text_rw(void);
extern void set_all_modules_text_ro(void);
extern void module_enable_ro(const struct module *mod, bool after_init);
extern void module_disable_ro(const struct module *mod);
#else
static inline void set_all_modules_text_rw(void) { }
static inline void set_all_modules_text_ro(void) { }
static inline void module_enable_ro(const struct module *mod, bool after_init) { }
static inline void module_disable_ro(const struct module *mod) { }
#endif

#ifdef CONFIG_GENERIC_BUG
void module_bug_finalize(const Elf_Ehdr *, const Elf_Shdr *,
			 struct module *);
void module_bug_cleanup(struct module *);

#else	/* !CONFIG_GENERIC_BUG */

static inline void module_bug_finalize(const Elf_Ehdr *hdr,
					const Elf_Shdr *sechdrs,
					struct module *mod)
{
}
static inline void module_bug_cleanup(struct module *mod) {}
#endif	/* CONFIG_GENERIC_BUG */

#ifdef CONFIG_MODULE_SIG
static inline bool module_sig_ok(struct module *module)
{
	return module->sig_ok;
}
#else	/* !CONFIG_MODULE_SIG */
static inline bool module_sig_ok(struct module *module)
{
	return true;
}
#endif	/* CONFIG_MODULE_SIG */

#endif /* _LINUX_MODULE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #ifndef _LINUX_IPC_H
#define _LINUX_IPC_H

#include <linux/spinlock.h>
#include <linux/uidgid.h>
#include <uapi/linux/ipc.h>

#define IPCMNI 32768  /* <= MAX_INT limit for ipc arrays (including sysctl changes) */

/* used by in-kernel data structures */
struct kern_ipc_perm
{
	spinlock_t	lock;
	bool		deleted;
	int		id;
	key_t		key;
	kuid_t		uid;
	kgid_t		gid;
	kuid_t		cuid;
	kgid_t		cgid;
	umode_t		mode; 
	unsigned long	seq;
	void		*security;
};

#endif /* _LINUX_IPC_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * Descending-priority-sorted double-linked list
 *
 * (C) 2002-2003 Intel Corp
 * Inaky Perez-Gonzalez <inaky.perez-gonzalez@intel.com>.
 *
 * 2001-2005 (c) MontaVista Software, Inc.
 * Daniel Walker <dwalker@mvista.com>
 *
 * (C) 2005 Thomas Gleixner <tglx@linutronix.de>
 *
 * Simplifications of the original code by
 * Oleg Nesterov <oleg@tv-sign.ru>
 *
 * Licensed under the FSF's GNU Public License v2 or later.
 *
 * Based on simple lists (include/linux/list.h).
 *
 * This is a priority-sorted list of nodes; each node has a
 * priority from INT_MIN (highest) to INT_MAX (lowest).
 *
 * Addition is O(K), removal is O(1), change of priority of a node is
 * O(K) and K is the number of RT priority levels used in the system.
 * (1 <= K <= 99)
 *
 * This list is really a list of lists:
 *
 *  - The tier 1 list is the prio_list, different priority nodes.
 *
 *  - The tier 2 list is the node_list, serialized nodes.
 *
 * Simple ASCII art explanation:
 *
 * pl:prio_list (only for plist_node)
 * nl:node_list
 *   HEAD|             NODE(S)
 *       |
 *       ||------------------------------------|
 *       ||->|pl|<->|pl|<--------------->|pl|<-|
 *       |   |10|   |21|   |21|   |21|   |40|   (prio)
 *       |   |  |   |  |   |  |   |  |   |  |
 *       |   |  |   |  |   |  |   |  |   |  |
 * |->|nl|<->|nl|<->|nl|<->|nl|<->|nl|<->|nl|<-|
 * |-------------------------------------------|
 *
 * The nodes on the prio_list list are sorted by priority to simplify
 * the insertion of new nodes. There are no nodes with duplicate
 * priorites on the list.
 *
 * The nodes on the node_list are ordered by priority and can contain
 * entries which have the same priority. Those entries are ordered
 * FIFO
 *
 * Addition means: look for the prio_list node in the prio_list
 * for the priority of the node and insert it before the node_list
 * entry of the next prio_list node. If it is the first node of
 * that priority, add it to the prio_list in the right position and
 * insert it into the serialized node_list list
 *
 * Removal means remove it from the node_list and remove it from
 * the prio_list if the node_list list_head is non empty. In case
 * of removal from the prio_list it must be checked whether other
 * entries of the same priority are on the list or not. If there
 * is another entry of the same priority then this entry has to
 * replace the removed entry on the prio_list. If the entry which
 * is removed is the only entry of this priority then a simple
 * remove from both list is sufficient.
 *
 * INT_MIN is the highest priority, 0 is the medium highest, INT_MAX
 * is lowest priority.
 *
 * No locking is done, up to the caller.
 *
 */
#ifndef _LINUX_PLIST_H_
#define _LINUX_PLIST_H_

#include <linux/kernel.h>
#include <linux/list.h>

struct plist_head {
	struct list_head node_list;
};

struct plist_node {
	int			prio;
	struct list_head	prio_list;
	struct list_head	node_list;
};

/**
 * PLIST_HEAD_INIT - static struct plist_head initializer
 * @head:	struct plist_head variable name
 */
#define PLIST_HEAD_INIT(head)				\
{							\
	.node_list = LIST_HEAD_INIT((head).node_list)	\
}

/**
 * PLIST_HEAD - declare and init plist_head
 * @head:	name for struct plist_head variable
 */
#define PLIST_HEAD(head) \
	struct plist_head head = PLIST_HEAD_INIT(head)

/**
 * PLIST_NODE_INIT - static struct plist_node initializer
 * @node:	struct plist_node variable name
 * @__prio:	initial node priority
 */
#define PLIST_NODE_INIT(node, __prio)			\
{							\
	.prio  = (__prio),				\
	.prio_list = LIST_HEAD_INIT((node).prio_list),	\
	.node_list = LIST_HEAD_INIT((node).node_list),	\
}

/**
 * plist_head_init - dynamic struct plist_head initializer
 * @head:	&struct plist_head pointer
 */
static inline void
plist_head_init(struct plist_head *head)
{
	INIT_LIST_HEAD(&head->node_list);
}

/**
 * plist_node_init - Dynamic struct plist_node initializer
 * @node:	&struct plist_node pointer
 * @prio:	initial node priority
 */
static inline void plist_node_init(struct plist_node *node, int prio)
{
	node->prio = prio;
	INIT_LIST_HEAD(&node->prio_list);
	INIT_LIST_HEAD(&node->node_list);
}

extern void plist_add(struct plist_node *node, struct plist_head *head);
extern void plist_del(struct plist_node *node, struct plist_head *head);

extern void plist_requeue(struct plist_node *node, struct plist_head *head);

/**
 * plist_for_each - iterate over the plist
 * @pos:	the type * to use as a loop counter
 * @head:	the head for your list
 */
#define plist_for_each(pos, head)	\
	 list_for_each_entry(pos, &(head)->node_list, node_list)

/**
 * plist_for_each_continue - continue iteration over the plist
 * @pos:	the type * to use as a loop cursor
 * @head:	the head for your list
 *
 * Continue to iterate over plist, continuing after the current position.
 */
#define plist_for_each_continue(pos, head)	\
	 list_for_each_entry_continue(pos, &(head)->node_list, node_list)

/**
 * plist_for_each_safe - iterate safely over a plist of given type
 * @pos:	the type * to use as a loop counter
 * @n:	another type * to use as temporary storage
 * @head:	the head for your list
 *
 * Iterate over a plist of given type, safe against removal of list entry.
 */
#define plist_for_each_safe(pos, n, head)	\
	 list_for_each_entry_safe(pos, n, &(head)->node_list, node_list)

/**
 * plist_for_each_entry	- iterate over list of given type
 * @pos:	the type * to use as a loop counter
 * @head:	the head for your list
 * @mem:	the name of the list_head within the struct
 */
#define plist_for_each_entry(pos, head, mem)	\
	 list_for_each_entry(pos, &(head)->node_list, mem.node_list)

/**
 * plist_for_each_entry_continue - continue iteration over list of given type
 * @pos:	the type * to use as a loop cursor
 * @head:	the head for your list
 * @m:		the name of the list_head within the struct
 *
 * Continue to iterate over list of given type, continuing after
 * the current position.
 */
#define plist_for_each_entry_continue(pos, head, m)	\
	list_for_each_entry_continue(pos, &(head)->node_list, m.node_list)

/**
 * plist_for_each_entry_safe - iterate safely over list of given type
 * @pos:	the type * to use as a loop counter
 * @n:		another type * to use as temporary storage
 * @head:	the head for your list
 * @m:		the name of the list_head within the struct
 *
 * Iterate over list of given type, safe against removal of list entry.
 */
#define plist_for_each_entry_safe(pos, n, head, m)	\
	list_for_each_entry_safe(pos, n, &(head)->node_list, m.node_list)

/**
 * plist_head_empty - return !0 if a plist_head is empty
 * @head:	&struct plist_head pointer
 */
static inline int plist_head_empty(const struct plist_head *head)
{
	return list_empty(&head->node_list);
}

/**
 * plist_node_empty - return !0 if plist_node is not on a list
 * @node:	&struct plist_node pointer
 */
static inline int plist_node_empty(const struct plist_node *node)
{
	return list_empty(&node->node_list);
}

/* All functions below assume the plist_head is not empty. */

/**
 * plist_first_entry - get the struct for the first entry
 * @head:	the &struct plist_head pointer
 * @type:	the type of the struct this is embedded in
 * @member:	the name of the list_head within the struct
 */
#ifdef CONFIG_DEBUG_PI_LIST
# define plist_first_entry(head, type, member)	\
({ \
	WARN_ON(plist_head_empty(head)); \
	container_of(plist_first(head), type, member); \
})
#else
# define plist_first_entry(head, type, member)	\
	container_of(plist_first(head), type, member)
#endif

/**
 * plist_last_entry - get the struct for the last entry
 * @head:	the &struct plist_head pointer
 * @type:	the type of the struct this is embedded in
 * @member:	the name of the list_head within the struct
 */
#ifdef CONFIG_DEBUG_PI_LIST
# define plist_last_entry(head, type, member)	\
({ \
	WARN_ON(plist_head_empty(head)); \
	container_of(plist_last(head), type, member); \
})
#else
# define plist_last_entry(head, type, member)	\
	container_of(plist_last(head), type, member)
#endif

/**
 * plist_next - get the next entry in list
 * @pos:	the type * to cursor
 */
#define plist_next(pos) \
	list_next_entry(pos, node_list)

/**
 * plist_prev - get the prev entry in list
 * @pos:	the type * to cursor
 */
#define plist_prev(pos) \
	list_prev_entry(pos, node_list)

/**
 * plist_first - return the first node (and thus, highest priority)
 * @head:	the &struct plist_head pointer
 *
 * Assumes the plist is _not_ empty.
 */
static inline struct plist_node *plist_first(const struct plist_head *head)
{
	return list_entry(head->node_list.next,
			  struct plist_node, node_list);
}

/**
 * plist_last - return the last node (and thus, lowest priority)
 * @head:	the &struct plist_head pointer
 *
 * Assumes the plist is _not_ empty.
 */
static inline struct plist_node *plist_last(const struct plist_head *head)
{
	return list_entry(head->node_list.prev,
			  struct plist_node, node_list);
}

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #ifndef LINUX_QUICKLIST_H
#define LINUX_QUICKLIST_H
/*
 * Fast allocations and disposal of pages. Pages must be in the condition
 * as needed after allocation when they are freed. Per cpu lists of pages
 * are kept that only contain node local pages.
 *
 * (C) 2007, SGI. Christoph Lameter <cl@linux.com>
 */
#include <linux/kernel.h>
#include <linux/gfp.h>
#include <linux/percpu.h>

#ifdef CONFIG_QUICKLIST

struct quicklist {
	void *page;
	int nr_pages;
};

DECLARE_PER_CPU(struct quicklist, quicklist)[CONFIG_NR_QUICK];

/*
 * The two key functions quicklist_alloc and quicklist_free are inline so
 * that they may be custom compiled for the platform.
 * Specifying a NULL ctor can remove constructor support. Specifying
 * a constant quicklist allows the determination of the exact address
 * in the per cpu area.
 *
 * The fast patch in quicklist_alloc touched only a per cpu cacheline and
 * the first cacheline of the page itself. There is minmal overhead involved.
 */
static inline void *quicklist_alloc(int nr, gfp_t flags, void (*ctor)(void *))
{
	struct quicklist *q;
	void **p = NULL;

	q =&get_cpu_var(quicklist)[nr];
	p = q->page;
	if (likely(p)) {
		q->page = p[0];
		p[0] = NULL;
		q->nr_pages--;
	}
	put_cpu_var(quicklist);
	if (likely(p))
		return p;

	p = (void *)__get_free_page(flags | __GFP_ZERO);
	if (ctor && p)
		ctor(p);
	return p;
}

static inline void __quicklist_free(int nr, void (*dtor)(void *), void *p,
	struct page *page)
{
	struct quicklist *q;

	q = &get_cpu_var(quicklist)[nr];
	*(void **)p = q->page;
	q->page = p;
	q->nr_pages++;
	put_cpu_var(quicklist);
}

static inline void quicklist_free(int nr, void (*dtor)(void *), void *pp)
{
	__quicklist_free(nr, dtor, pp, virt_to_page(pp));
}

static inline void quicklist_free_page(int nr, void (*dtor)(void *),
							struct page *page)
{
	__quicklist_free(nr, dtor, page_address(page), page);
}

void quicklist_trim(int nr, void (*dtor)(void *),
	unsigned long min_pages, unsigned long max_free);

unsigned long quicklist_total_size(void);

#else

static inline unsigned long quicklist_total_size(void)
{
	return 0;
}

#endif

#endif /* LINUX_QUICKLIST_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef _LINUX_KPROBES_H
#define _LINUX_KPROBES_H
/*
 *  Kernel Probes (KProbes)
 *  include/linux/kprobes.h
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * Copyright (C) IBM Corporation, 2002, 2004
 *
 * 2002-Oct	Created by Vamsi Krishna S <vamsi_krishna@in.ibm.com> Kernel
 *		Probes initial implementation ( includes suggestions from
 *		Rusty Russell).
 * 2004-July	Suparna Bhattacharya <suparna@in.ibm.com> added jumper probes
 *		interface to access function arguments.
 * 2005-May	Hien Nguyen <hien@us.ibm.com> and Jim Keniston
 *		<jkenisto@us.ibm.com>  and Prasanna S Panchamukhi
 *		<prasanna@in.ibm.com> added function-return probes.
 */
#include <linux/compiler.h>	/* for __kprobes */
#include <linux/linkage.h>
#include <linux/list.h>
#include <linux/notifier.h>
#include <linux/smp.h>
#include <linux/bug.h>
#include <linux/percpu.h>
#include <linux/spinlock.h>
#include <linux/rcupdate.h>
#include <linux/mutex.h>
#include <linux/ftrace.h>

#ifdef CONFIG_KPROBES
#include <asm/kprobes.h>

/* kprobe_status settings */
#define KPROBE_HIT_ACTIVE	0x00000001
#define KPROBE_HIT_SS		0x00000002
#define KPROBE_REENTER		0x00000004
#define KPROBE_HIT_SSDONE	0x00000008

#else /* CONFIG_KPROBES */
typedef int kprobe_opcode_t;
struct arch_specific_insn {
	int dummy;
};
#endif /* CONFIG_KPROBES */

struct kprobe;
struct pt_regs;
struct kretprobe;
struct kretprobe_instance;
typedef int (*kprobe_pre_handler_t) (struct kprobe *, struct pt_regs *);
typedef int (*kprobe_break_handler_t) (struct kprobe *, struct pt_regs *);
typedef void (*kprobe_post_handler_t) (struct kprobe *, struct pt_regs *,
				       unsigned long flags);
typedef int (*kprobe_fault_handler_t) (struct kprobe *, struct pt_regs *,
				       int trapnr);
typedef int (*kretprobe_handler_t) (struct kretprobe_instance *,
				    struct pt_regs *);

struct kprobe {
	struct hlist_node hlist;

	/* list of kprobes for multi-handler support */
	struct list_head list;

	/*count the number of times this probe was temporarily disarmed */
	unsigned long nmissed;

	/* location of the probe point */
	kprobe_opcode_t *addr;

	/* Allow user to indicate symbol name of the probe point */
	const char *symbol_name;

	/* Offset into the symbol */
	unsigned int offset;

	/* Called before addr is executed. */
	kprobe_pre_handler_t pre_handler;

	/* Called after addr is executed, unless... */
	kprobe_post_handler_t post_handler;

	/*
	 * ... called if executing addr causes a fault (eg. page fault).
	 * Return 1 if it handled fault, otherwise kernel will see it.
	 */
	kprobe_fault_handler_t fault_handler;

	/*
	 * ... called if breakpoint trap occurs in probe handler.
	 * Return 1 if it handled break, otherwise kernel will see it.
	 */
	kprobe_break_handler_t break_handler;

	/* Saved opcode (which has been replaced with breakpoint) */
	kprobe_opcode_t opcode;

	/* copy of the original instruction */
	struct arch_specific_insn ainsn;

	/*
	 * Indicates various status flags.
	 * Protected by kprobe_mutex after this kprobe is registered.
	 */
	u32 flags;
};

/* Kprobe status flags */
#define KPROBE_FLAG_GONE	1 /* breakpoint has already gone */
#define KPROBE_FLAG_DISABLED	2 /* probe is temporarily disabled */
#define KPROBE_FLAG_OPTIMIZED	4 /*
				   * probe is really optimized.
				   * NOTE:
				   * this flag is only for optimized_kprobe.
				   */
#define KPROBE_FLAG_FTRACE	8 /* probe is using ftrace */

/* Has this kprobe gone ? */
static inline int kprobe_gone(struct kprobe *p)
{
	return p->flags & KPROBE_FLAG_GONE;
}

/* Is this kprobe disabled ? */
static inline int kprobe_disabled(struct kprobe *p)
{
	return p->flags & (KPROBE_FLAG_DISABLED | KPROBE_FLAG_GONE);
}

/* Is this kprobe really running optimized path ? */
static inline int kprobe_optimized(struct kprobe *p)
{
	return p->flags & KPROBE_FLAG_OPTIMIZED;
}

/* Is this kprobe uses ftrace ? */
static inline int kprobe_ftrace(struct kprobe *p)
{
	return p->flags & KPROBE_FLAG_FTRACE;
}

/*
 * Special probe type that uses setjmp-longjmp type tricks to resume
 * execution at a specified entry with a matching prototype corresponding
 * to the probed function - a trick to enable arguments to become
 * accessible seamlessly by probe handling logic.
 * Note:
 * Because of the way compilers allocate stack space for local variables
 * etc upfront, regardless of sub-scopes within a function, this mirroring
 * principle currently works only for probes placed on function entry points.
 */
struct jprobe {
	struct kprobe kp;
	void *entry;	/* probe handling code to jump to */
};

/* For backward compatibility with old code using JPROBE_ENTRY() */
#define JPROBE_ENTRY(handler)	(handler)

/*
 * Function-return probe -
 * Note:
 * User needs to provide a handler function, and initialize maxactive.
 * maxactive - The maximum number of instances of the probed function that
 * can be active concurrently.
 * nmissed - tracks the number of times the probed function's return was
 * ignored, due to maxactive being too low.
 *
 */
struct kretprobe {
	struct kprobe kp;
	kretprobe_handler_t handler;
	kretprobe_handler_t entry_handler;
	int maxactive;
	int nmissed;
	size_t data_size;
	struct hlist_head free_instances;
	raw_spinlock_t lock;
};

struct kretprobe_instance {
	struct hlist_node hlist;
	struct kretprobe *rp;
	kprobe_opcode_t *ret_addr;
	struct task_struct *task;
	char data[0];
};

struct kretprobe_blackpoint {
	const char *name;
	void *addr;
};

struct kprobe_blacklist_entry {
	struct list_head list;
	unsigned long start_addr;
	unsigned long end_addr;
};

#ifdef CONFIG_KPROBES
DECLARE_PER_CPU(struct kprobe *, current_kprobe);
DECLARE_PER_CPU(struct kprobe_ctlblk, kprobe_ctlblk);

/*
 * For #ifdef avoidance:
 */
static inline int kprobes_built_in(void)
{
	return 1;
}

#ifdef CONFIG_KRETPROBES
extern void arch_prepare_kretprobe(struct kretprobe_instance *ri,
				   struct pt_regs *regs);
extern int arch_trampoline_kprobe(struct kprobe *p);
#else /* CONFIG_KRETPROBES */
static inline void arch_prepare_kretprobe(struct kretprobe *rp,
					struct pt_regs *regs)
{
}
static inline int arch_trampoline_kprobe(struct kprobe *p)
{
	return 0;
}
#endif /* CONFIG_KRETPROBES */

extern struct kretprobe_blackpoint kretprobe_blacklist[];

static inline void kretprobe_assert(struct kretprobe_instance *ri,
	unsigned long orig_ret_address, unsigned long trampoline_address)
{
	if (!orig_ret_address || (orig_ret_address == trampoline_address)) {
		printk("kretprobe BUG!: Processing kretprobe %p @ %p\n",
				ri->rp, ri->rp->kp.addr);
		BUG();
	}
}

#ifdef CONFIG_KPROBES_SANITY_TEST
extern int init_test_probes(void);
#else
static inline int init_test_probes(void)
{
	return 0;
}
#endif /* CONFIG_KPROBES_SANITY_TEST */

extern int arch_prepare_kprobe(struct kprobe *p);
extern void arch_arm_kprobe(struct kprobe *p);
extern void arch_disarm_kprobe(struct kprobe *p);
extern int arch_init_kprobes(void);
extern void show_registers(struct pt_regs *regs);
extern void kprobes_inc_nmissed_count(struct kprobe *p);
extern bool arch_within_kprobe_blacklist(unsigned long addr);

extern bool within_kprobe_blacklist(unsigned long addr);

struct kprobe_insn_cache {
	struct mutex mutex;
	void *(*alloc)(void);	/* allocate insn page */
	void (*free)(void *);	/* free insn page */
	struct list_head pages; /* list of kprobe_insn_page */
	size_t insn_size;	/* size of instruction slot */
	int nr_garbage;
};

extern kprobe_opcode_t *__get_insn_slot(struct kprobe_insn_cache *c);
extern void __free_insn_slot(struct kprobe_insn_cache *c,
			     kprobe_opcode_t *slot, int dirty);

#define DEFINE_INSN_CACHE_OPS(__name)					\
extern struct kprobe_insn_cache kprobe_##__name##_slots;		\
									\
static inline kprobe_opcode_t *get_##__name##_slot(void)		\
{									\
	return __get_insn_slot(&kprobe_##__name##_slots);		\
}									\
									\
static inline void free_##__name##_slot(kprobe_opcode_t *slot, int dirty)\
{									\
	__free_insn_slot(&kprobe_##__name##_slots, slot, dirty);	\
}									\

DEFINE_INSN_CACHE_OPS(insn);

#ifdef CONFIG_OPTPROBES
/*
 * Internal structure for direct jump optimized probe
 */
struct optimized_kprobe {
	struct kprobe kp;
	struct list_head list;	/* list for optimizing queue */
	struct arch_optimized_insn optinsn;
};

/* Architecture dependent functions for direct jump optimization */
extern int arch_prepared_optinsn(struct arch_optimized_insn *optinsn);
extern int arch_check_optimized_kprobe(struct optimized_kprobe *op);
extern int arch_prepare_optimized_kprobe(struct optimized_kprobe *op,
					 struct kprobe *orig);
extern void arch_remove_optimized_kprobe(struct optimized_kprobe *op);
extern void arch_optimize_kprobes(struct list_head *oplist);
extern void arch_unoptimize_kprobes(struct list_head *oplist,
				    struct list_head *done_list);
extern void arch_unoptimize_kprobe(struct optimized_kprobe *op);
extern int arch_within_optimized_kprobe(struct optimized_kprobe *op,
					unsigned long addr);

extern void opt_pre_handler(struct kprobe *p, struct pt_regs *regs);

DEFINE_INSN_CACHE_OPS(optinsn);

#ifdef CONFIG_SYSCTL
extern int sysctl_kprobes_optimization;
extern int proc_kprobes_optimization_handler(struct ctl_table *table,
					     int write, void __user *buffer,
					     size_t *length, loff_t *ppos);
#endif
extern void wait_for_kprobe_optimizer(void);
#else
static inline void wait_for_kprobe_optimizer(void) { }
#endif /* CONFIG_OPTPROBES */
#ifdef CONFIG_KPROBES_ON_FTRACE
extern void kprobe_ftrace_handler(unsigned long ip, unsigned long parent_ip,
				  struct ftrace_ops *ops, struct pt_regs *regs);
extern int arch_prepare_kprobe_ftrace(struct kprobe *p);
#endif

int arch_check_ftrace_location(struct kprobe *p);

/* Get the kprobe at this addr (if any) - called with preemption disabled */
struct kprobe *get_kprobe(void *addr);
void kretprobe_hash_lock(struct task_struct *tsk,
			 struct hlist_head **head, unsigned long *flags);
void kretprobe_hash_unlock(struct task_struct *tsk, unsigned long *flags);
struct hlist_head * kretprobe_inst_table_head(struct task_struct *tsk);

/* kprobe_running() will just return the current_kprobe on this CPU */
static inline struct kprobe *kprobe_running(void)
{
	return (__this_cpu_read(current_kprobe));
}

static inline void reset_current_kprobe(void)
{
	__this_cpu_write(current_kprobe, NULL);
}

static inline struct kprobe_ctlblk *get_kprobe_ctlblk(void)
{
	return this_cpu_ptr(&kprobe_ctlblk);
}

int register_kprobe(struct kprobe *p);
void unregister_kprobe(struct kprobe *p);
int register_kprobes(struct kprobe **kps, int num);
void unregister_kprobes(struct kprobe **kps, int num);
int setjmp_pre_handler(struct kprobe *, struct pt_regs *);
int longjmp_break_handler(struct kprobe *, struct pt_regs *);
int register_jprobe(struct jprobe *p);
void unregister_jprobe(struct jprobe *p);
int register_jprobes(struct jprobe **jps, int num);
void unregister_jprobes(struct jprobe **jps, int num);
void jprobe_return(void);
unsigned long arch_deref_entry_point(void *);

int register_kretprobe(struct kretprobe *rp);
void unregister_kretprobe(struct kretprobe *rp);
int register_kretprobes(struct kretprobe **rps, int num);
void unregister_kretprobes(struct kretprobe **rps, int num);

void kprobe_flush_task(struct task_struct *tk);
void recycle_rp_inst(struct kretprobe_instance *ri, struct hlist_head *head);

int disable_kprobe(struct kprobe *kp);
int enable_kprobe(struct kprobe *kp);

void dump_kprobe(struct kprobe *kp);

#else /* !CONFIG_KPROBES: */

static inline int kprobes_built_in(void)
{
	return 0;
}
static inline int kprobe_fault_handler(struct pt_regs *regs, int trapnr)
{
	return 0;
}
static inline struct kprobe *get_kprobe(void *addr)
{
	return NULL;
}
static inline struct kprobe *kprobe_running(void)
{
	return NULL;
}
static inline int register_kprobe(struct kprobe *p)
{
	return -ENOSYS;
}
static inline int register_kprobes(struct kprobe **kps, int num)
{
	return -ENOSYS;
}
static inline void unregister_kprobe(struct kprobe *p)
{
}
static inline void unregister_kprobes(struct kprobe **kps, int num)
{
}
static inline int register_jprobe(struct jprobe *p)
{
	return -ENOSYS;
}
static inline int register_jprobes(struct jprobe **jps, int num)
{
	return -ENOSYS;
}
static inline void unregister_jprobe(struct jprobe *p)
{
}
static inline void unregister_jprobes(struct jprobe **jps, int num)
{
}
static inline void jprobe_return(void)
{
}
static inline int register_kretprobe(struct kretprobe *rp)
{
	return -ENOSYS;
}
static inline int register_kretprobes(struct kretprobe **rps, int num)
{
	return -ENOSYS;
}
static inline void unregister_kretprobe(struct kretprobe *rp)
{
}
static inline void unregister_kretprobes(struct kretprobe **rps, int num)
{
}
static inline void kprobe_flush_task(struct task_struct *tk)
{
}
static inline int disable_kprobe(struct kprobe *kp)
{
	return -ENOSYS;
}
static inline int enable_kprobe(struct kprobe *kp)
{
	return -ENOSYS;
}
#endif /* CONFIG_KPROBES */
static inline int disable_kretprobe(struct kretprobe *rp)
{
	return disable_kprobe(&rp->kp);
}
static inline int enable_kretprobe(struct kretprobe *rp)
{
	return enable_kprobe(&rp->kp);
}
static inline int disable_jprobe(struct jprobe *jp)
{
	return disable_kprobe(&jp->kp);
}
static inline int enable_jprobe(struct jprobe *jp)
{
	return enable_kprobe(&jp->kp);
}

#ifdef CONFIG_KPROBES
/*
 * Blacklist ganerating macro. Specify functions which is not probed
 * by using this macro.
 */
#define __NOKPROBE_SYMBOL(fname)			\
static unsigned long __used				\
	__attribute__((section("_kprobe_blacklist")))	\
	_kbl_addr_##fname = (unsigned long)fname;
#define NOKPROBE_SYMBOL(fname)	__NOKPROBE_SYMBOL(fname)
#else
#define NOKPROBE_SYMBOL(fname)
#endif

#endif /* _LINUX_KPROBES_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Device tables which are exported to userspace via
 * scripts/mod/file2alias.c.  You must keep that file in sync with this
 * header.
 */

#ifndef LINUX_MOD_DEVICETABLE_H
#define LINUX_MOD_DEVICETABLE_H

#ifdef __KERNEL__
#include <linux/types.h>
#include <linux/uuid.h>
typedef unsigned long kernel_ulong_t;
#endif

#define PCI_ANY_ID (~0)

struct pci_device_id {
	__u32 vendor, device;		/* Vendor and device ID or PCI_ANY_ID*/
	__u32 subvendor, subdevice;	/* Subsystem ID's or PCI_ANY_ID */
	__u32 class, class_mask;	/* (class,subclass,prog-if) triplet */
	kernel_ulong_t driver_data;	/* Data private to the driver */
};


#define IEEE1394_MATCH_VENDOR_ID	0x0001
#define IEEE1394_MATCH_MODEL_ID		0x0002
#define IEEE1394_MATCH_SPECIFIER_ID	0x0004
#define IEEE1394_MATCH_VERSION		0x0008

struct ieee1394_device_id {
	__u32 match_flags;
	__u32 vendor_id;
	__u32 model_id;
	__u32 specifier_id;
	__u32 version;
	kernel_ulong_t driver_data;
};


/*
 * Device table entry for "new style" table-driven USB drivers.
 * User mode code can read these tables to choose which modules to load.
 * Declare the table as a MODULE_DEVICE_TABLE.
 *
 * A probe() parameter will point to a matching entry from this table.
 * Use the driver_info field for each match to hold information tied
 * to that match:  device quirks, etc.
 *
 * Terminate the driver's table with an all-zeroes entry.
 * Use the flag values to control which fields are compared.
 */

/**
 * struct usb_device_id - identifies USB devices for probing and hotplugging
 * @match_flags: Bit mask controlling which of the other fields are used to
 *	match against new devices. Any field except for driver_info may be
 *	used, although some only make sense in conjunction with other fields.
 *	This is usually set by a USB_DEVICE_*() macro, which sets all
 *	other fields in this structure except for driver_info.
 * @idVendor: USB vendor ID for a device; numbers are assigned
 *	by the USB forum to its members.
 * @idProduct: Vendor-assigned product ID.
 * @bcdDevice_lo: Low end of range of vendor-assigned product version numbers.
 *	This is also used to identify individual product versions, for
 *	a range consisting of a single device.
 * @bcdDevice_hi: High end of version number range.  The range of product
 *	versions is inclusive.
 * @bDeviceClass: Class of device; numbers are assigned
 *	by the USB forum.  Products may choose to implement classes,
 *	or be vendor-specific.  Device classes specify behavior of all
 *	the interfaces on a device.
 * @bDeviceSubClass: Subclass of device; associated with bDeviceClass.
 * @bDeviceProtocol: Protocol of device; associated with bDeviceClass.
 * @bInterfaceClass: Class of interface; numbers are assigned
 *	by the USB forum.  Products may choose to implement classes,
 *	or be vendor-specific.  Interface classes specify behavior only
 *	of a given interface; other interfaces may support other classes.
 * @bInterfaceSubClass: Subclass of interface; associated with bInterfaceClass.
 * @bInterfaceProtocol: Protocol of interface; associated with bInterfaceClass.
 * @bInterfaceNumber: Number of interface; composite devices may use
 *	fixed interface numbers to differentiate between vendor-specific
 *	interfaces.
 * @driver_info: Holds information used by the driver.  Usually it holds
 *	a pointer to a descriptor understood by the driver, or perhaps
 *	device flags.
 *
 * In most cases, drivers will create a table of device IDs by using
 * USB_DEVICE(), or similar macros designed for that purpose.
 * They will then export it to userspace using MODULE_DEVICE_TABLE(),
 * and provide it to the USB core through their usb_driver structure.
 *
 * See the usb_match_id() function for information about how matches are
 * performed.  Briefly, you will normally use one of several macros to help
 * construct these entries.  Each entry you provide will either identify
 * one or more specific products, or will identify a class of products
 * which have agreed to behave the same.  You should put the more specific
 * matches towards the beginning of your table, so that driver_info can
 * record quirks of specific products.
 */
struct usb_device_id {
	/* which fields to match against? */
	__u16		match_flags;

	/* Used for product specific matches; range is inclusive */
	__u16		idVendor;
	__u16		idProduct;
	__u16		bcdDevice_lo;
	__u16		bcdDevice_hi;

	/* Used for device class matches */
	__u8		bDeviceClass;
	__u8		bDeviceSubClass;
	__u8		bDeviceProtocol;

	/* Used for interface class matches */
	__u8		bInterfaceClass;
	__u8		bInterfaceSubClass;
	__u8		bInterfaceProtocol;

	/* Used for vendor-specific interface matches */
	__u8		bInterfaceNumber;

	/* not matched against */
	kernel_ulong_t	driver_info
		__attribute__((aligned(sizeof(kernel_ulong_t))));
};

/* Some useful macros to use to create struct usb_device_id */
#define USB_DEVICE_ID_MATCH_VENDOR		0x0001
#define USB_DEVICE_ID_MATCH_PRODUCT		0x0002
#define USB_DEVICE_ID_MATCH_DEV_LO		0x0004
#define USB_DEVICE_ID_MATCH_DEV_HI		0x0008
#define USB_DEVICE_ID_MATCH_DEV_CLASS		0x0010
#define USB_DEVICE_ID_MATCH_DEV_SUBCLASS	0x0020
#define USB_DEVICE_ID_MATCH_DEV_PROTOCOL	0x0040
#define USB_DEVICE_ID_MATCH_INT_CLASS		0x0080
#define USB_DEVICE_ID_MATCH_INT_SUBCLASS	0x0100
#define USB_DEVICE_ID_MATCH_INT_PROTOCOL	0x0200
#define USB_DEVICE_ID_MATCH_INT_NUMBER		0x0400

#define HID_ANY_ID				(~0)
#define HID_BUS_ANY				0xffff
#define HID_GROUP_ANY				0x0000

struct hid_device_id {
	__u16 bus;
	__u16 group;
	__u32 vendor;
	__u32 product;
	kernel_ulong_t driver_data;
};

/* s390 CCW devices */
struct ccw_device_id {
	__u16	match_flags;	/* which fields to match against */

	__u16	cu_type;	/* control unit type     */
	__u16	dev_type;	/* device type           */
	__u8	cu_model;	/* control unit model    */
	__u8	dev_model;	/* device model          */

	kernel_ulong_t driver_info;
};

#define CCW_DEVICE_ID_MATCH_CU_TYPE		0x01
#define CCW_DEVICE_ID_MATCH_CU_MODEL		0x02
#define CCW_DEVICE_ID_MATCH_DEVICE_TYPE		0x04
#define CCW_DEVICE_ID_MATCH_DEVICE_MODEL	0x08

/* s390 AP bus devices */
struct ap_device_id {
	__u16 match_flags;	/* which fields to match against */
	__u8 dev_type;		/* device type */
	kernel_ulong_t driver_info;
};

#define AP_DEVICE_ID_MATCH_DEVICE_TYPE		0x01

/* s390 css bus devices (subchannels) */
struct css_device_id {
	__u8 match_flags;
	__u8 type; /* subchannel type */
	kernel_ulong_t driver_data;
};

#define ACPI_ID_LEN	9

struct acpi_device_id {
	__u8 id[ACPI_ID_LEN];
	kernel_ulong_t driver_data;
	__u32 cls;
	__u32 cls_msk;
};

#define PNP_ID_LEN	8
#define PNP_MAX_DEVICES	8

struct pnp_device_id {
	__u8 id[PNP_ID_LEN];
	kernel_ulong_t driver_data;
};

struct pnp_card_device_id {
	__u8 id[PNP_ID_LEN];
	kernel_ulong_t driver_data;
	struct {
		__u8 id[PNP_ID_LEN];
	} devs[PNP_MAX_DEVICES];
};


#define SERIO_ANY	0xff

struct serio_device_id {
	__u8 type;
	__u8 extra;
	__u8 id;
	__u8 proto;
};

struct hda_device_id {
	__u32 vendor_id;
	__u32 rev_id;
	__u8 api_version;
	const char *name;
	unsigned long driver_data;
};

/*
 * Struct used for matching a device
 */
struct of_device_id {
	char	name[32];
	char	type[32];
	char	compatible[128];
	const void *data;
};

/* VIO */
struct vio_device_id {
	char type[32];
	char compat[32];
};

/* PCMCIA */

struct pcmcia_device_id {
	__u16		match_flags;

	__u16		manf_id;
	__u16 		card_id;

	__u8  		func_id;

	/* for real multi-function devices */
	__u8  		function;

	/* for pseudo multi-function devices */
	__u8  		device_no;

	__u32 		prod_id_hash[4];

	/* not matched against in kernelspace */
	const char *	prod_id[4];

	/* not matched against */
	kernel_ulong_t	driver_info;
	char *		cisfile;
};

#define PCMCIA_DEV_ID_MATCH_MANF_ID	0x0001
#define PCMCIA_DEV_ID_MATCH_CARD_ID	0x0002
#define PCMCIA_DEV_ID_MATCH_FUNC_ID	0x0004
#define PCMCIA_DEV_ID_MATCH_FUNCTION	0x0008
#define PCMCIA_DEV_ID_MATCH_PROD_ID1	0x0010
#define PCMCIA_DEV_ID_MATCH_PROD_ID2	0x0020
#define PCMCIA_DEV_ID_MATCH_PROD_ID3	0x0040
#define PCMCIA_DEV_ID_MATCH_PROD_ID4	0x0080
#define PCMCIA_DEV_ID_MATCH_DEVICE_NO	0x0100
#define PCMCIA_DEV_ID_MATCH_FAKE_CIS	0x0200
#define PCMCIA_DEV_ID_MATCH_ANONYMOUS	0x0400

/* Input */
#define INPUT_DEVICE_ID_EV_MAX		0x1f
#define INPUT_DEVICE_ID_KEY_MIN_INTERESTING	0x71
#define INPUT_DEVICE_ID_KEY_MAX		0x2ff
#define INPUT_DEVICE_ID_REL_MAX		0x0f
#define INPUT_DEVICE_ID_ABS_MAX		0x3f
#define INPUT_DEVICE_ID_MSC_MAX		0x07
#define INPUT_DEVICE_ID_LED_MAX		0x0f
#define INPUT_DEVICE_ID_SND_MAX		0x07
#define INPUT_DEVICE_ID_FF_MAX		0x7f
#define INPUT_DEVICE_ID_SW_MAX		0x0f

#define INPUT_DEVICE_ID_MATCH_BUS	1
#define INPUT_DEVICE_ID_MATCH_VENDOR	2
#define INPUT_DEVICE_ID_MATCH_PRODUCT	4
#define INPUT_DEVICE_ID_MATCH_VERSION	8

#define INPUT_DEVICE_ID_MATCH_EVBIT	0x0010
#define INPUT_DEVICE_ID_MATCH_KEYBIT	0x0020
#define INPUT_DEVICE_ID_MATCH_RELBIT	0x0040
#define INPUT_DEVICE_ID_MATCH_ABSBIT	0x0080
#define INPUT_DEVICE_ID_MATCH_MSCIT	0x0100
#define INPUT_DEVICE_ID_MATCH_LEDBIT	0x0200
#define INPUT_DEVICE_ID_MATCH_SNDBIT	0x0400
#define INPUT_DEVICE_ID_MATCH_FFBIT	0x0800
#define INPUT_DEVICE_ID_MATCH_SWBIT	0x1000

struct input_device_id {

	kernel_ulong_t flags;

	__u16 bustype;
	__u16 vendor;
	__u16 product;
	__u16 version;

	kernel_ulong_t evbit[INPUT_DEVICE_ID_EV_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t keybit[INPUT_DEVICE_ID_KEY_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t relbit[INPUT_DEVICE_ID_REL_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t absbit[INPUT_DEVICE_ID_ABS_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t mscbit[INPUT_DEVICE_ID_MSC_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t ledbit[INPUT_DEVICE_ID_LED_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t sndbit[INPUT_DEVICE_ID_SND_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t ffbit[INPUT_DEVICE_ID_FF_MAX / BITS_PER_LONG + 1];
	kernel_ulong_t swbit[INPUT_DEVICE_ID_SW_MAX / BITS_PER_LONG + 1];

	kernel_ulong_t driver_info;
};

/* EISA */

#define EISA_SIG_LEN   8

/* The EISA signature, in ASCII form, null terminated */
struct eisa_device_id {
	char          sig[EISA_SIG_LEN];
	kernel_ulong_t driver_data;
};

#define EISA_DEVICE_MODALIAS_FMT "eisa:s%s"

struct parisc_device_id {
	__u8	hw_type;	/* 5 bits used */
	__u8	hversion_rev;	/* 4 bits */
	__u16	hversion;	/* 12 bits */
	__u32	sversion;	/* 20 bits */
};

#define PA_HWTYPE_ANY_ID	0xff
#define PA_HVERSION_REV_ANY_ID	0xff
#define PA_HVERSION_ANY_ID	0xffff
#define PA_SVERSION_ANY_ID	0xffffffff

/* SDIO */

#define SDIO_ANY_ID (~0)

struct sdio_device_id {
	__u8	class;			/* Standard interface or SDIO_ANY_ID */
	__u16	vendor;			/* Vendor or SDIO_ANY_ID */
	__u16	device;			/* Device ID or SDIO_ANY_ID */
	kernel_ulong_t driver_data;	/* Data private to the driver */
};

/* SSB core, see drivers/ssb/ */
struct ssb_device_id {
	__u16	vendor;
	__u16	coreid;
	__u8	revision;
	__u8	__pad;
} __attribute__((packed, aligned(2)));
#define SSB_DEVICE(_vendor, _coreid, _revision)  \
	{ .vendor = _vendor, .coreid = _coreid, .revision = _revision, }

#define SSB_ANY_VENDOR		0xFFFF
#define SSB_ANY_ID		0xFFFF
#define SSB_ANY_REV		0xFF

/* Broadcom's specific AMBA core, see drivers/bcma/ */
struct bcma_device_id {
	__u16	manuf;
	__u16	id;
	__u8	rev;
	__u8	class;
} __attribute__((packed,aligned(2)));
#define BCMA_CORE(_manuf, _id, _rev, _class)  \
	{ .manuf = _manuf, .id = _id, .rev = _rev, .class = _class, }

#define BCMA_ANY_MANUF		0xFFFF
#define BCMA_ANY_ID		0xFFFF
#define BCMA_ANY_REV		0xFF
#define BCMA_ANY_CLASS		0xFF

struct virtio_device_id {
	__u32 device;
	__u32 vendor;
};
#define VIRTIO_DEV_ANY_ID	0xffffffff

/*
 * For Hyper-V devices we use the device guid as the id.
 */
struct hv_vmbus_device_id {
	uuid_le guid;
	kernel_ulong_t driver_data;	/* Data private to the driver */
};

/* rpmsg */

#define RPMSG_NAME_SIZE			32
#define RPMSG_DEVICE_MODALIAS_FMT	"rpmsg:%s"

struct rpmsg_device_id {
	char name[RPMSG_NAME_SIZE];
};

/* i2c */

#define I2C_NAME_SIZE	20
#define I2C_MODULE_PREFIX "i2c:"

struct i2c_device_id {
	char name[I2C_NAME_SIZE];
	kernel_ulong_t driver_data;	/* Data private to the driver */
};

/* spi */

#define SPI_NAME_SIZE	32
#define SPI_MODULE_PREFIX "spi:"

struct spi_device_id {
	char name[SPI_NAME_SIZE];
	kernel_ulong_t driver_data;	/* Data private to the driver */
};

#define SPMI_NAME_SIZE	32
#define SPMI_MODULE_PREFIX "spmi:"

struct spmi_device_id {
	char name[SPMI_NAME_SIZE];
	kernel_ulong_t driver_data;	/* Data private to the driver */
};

/* dmi */
enum dmi_field {
	DMI_NONE,
	DMI_BIOS_VENDOR,
	DMI_BIOS_VERSION,
	DMI_BIOS_DATE,
	DMI_SYS_VENDOR,
	DMI_PRODUCT_NAME,
	DMI_PRODUCT_VERSION,
	DMI_PRODUCT_SERIAL,
	DMI_PRODUCT_UUID,
	DMI_BOARD_VENDOR,
	DMI_BOARD_NAME,
	DMI_BOARD_VERSION,
	DMI_BOARD_SERIAL,
	DMI_BOARD_ASSET_TAG,
	DMI_CHASSIS_VENDOR,
	DMI_CHASSIS_TYPE,
	DMI_CHASSIS_VERSION,
	DMI_CHASSIS_SERIAL,
	DMI_CHASSIS_ASSET_TAG,
	DMI_STRING_MAX,
};

struct dmi_strmatch {
	unsigned char slot:7;
	unsigned char exact_match:1;
	char substr[79];
};

struct dmi_system_id {
	int (*callback)(const struct dmi_system_id *);
	const char *ident;
	struct dmi_strmatch matches[4];
	void *driver_data;
};
/*
 * struct dmi_device_id appears during expansion of
 * "MODULE_DEVICE_TABLE(dmi, x)". Compiler doesn't look inside it
 * but this is enough for gcc 3.4.6 to error out:
 *	error: storage size of '__mod_dmi_device_table' isn't known
 */
#define dmi_device_id dmi_system_id

#define DMI_MATCH(a, b)	{ .slot = a, .substr = b }
#define DMI_EXACT_MATCH(a, b)	{ .slot = a, .substr = b, .exact_match = 1 }

#define PLATFORM_NAME_SIZE	20
#define PLATFORM_MODULE_PREFIX	"platform:"

struct platform_device_id {
	char name[PLATFORM_NAME_SIZE];
	kernel_ulong_t driver_data;
};

#define MDIO_MODULE_PREFIX	"mdio:"

#define MDIO_ID_FMT "%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d%d"
#define MDIO_ID_ARGS(_id) \
	(_id)>>31, ((_id)>>30) & 1, ((_id)>>29) & 1, ((_id)>>28) & 1,	\
	((_id)>>27) & 1, ((_id)>>26) & 1, ((_id)>>25) & 1, ((_id)>>24) & 1, \
	((_id)>>23) & 1, ((_id)>>22) & 1, ((_id)>>21) & 1, ((_id)>>20) & 1, \
	((_id)>>19) & 1, ((_id)>>18) & 1, ((_id)>>17) & 1, ((_id)>>16) & 1, \
	((_id)>>15) & 1, ((_id)>>14) & 1, ((_id)>>13) & 1, ((_id)>>12) & 1, \
	((_id)>>11) & 1, ((_id)>>10) & 1, ((_id)>>9) & 1, ((_id)>>8) & 1, \
	((_id)>>7) & 1, ((_id)>>6) & 1, ((_id)>>5) & 1, ((_id)>>4) & 1, \
	((_id)>>3) & 1, ((_id)>>2) & 1, ((_id)>>1) & 1, (_id) & 1

/**
 * struct mdio_device_id - identifies PHY devices on an MDIO/MII bus
 * @phy_id: The result of
 *     (mdio_read(&MII_PHYSID1) << 16 | mdio_read(&PHYSID2)) & @phy_id_mask
 *     for this PHY type
 * @phy_id_mask: Defines the significant bits of @phy_id.  A value of 0
 *     is used to terminate an array of struct mdio_device_id.
 */
struct mdio_device_id {
	__u32 phy_id;
	__u32 phy_id_mask;
};

struct zorro_device_id {
	__u32 id;			/* Device ID or ZORRO_WILDCARD */
	kernel_ulong_t driver_data;	/* Data private to the driver */
};

#define ZORRO_WILDCARD			(0xffffffff)	/* not official */

#define ZORRO_DEVICE_MODALIAS_FMT	"zorro:i%08X"

#define ISAPNP_ANY_ID		0xffff
struct isapnp_device_id {
	unsigned short card_vendor, card_device;
	unsigned short vendor, function;
	kernel_ulong_t driver_data;	/* data private to the driver */
};

/**
 * struct amba_id - identifies a device on an AMBA bus
 * @id: The significant bits if the hardware device ID
 * @mask: Bitmask specifying which bits of the id field are significant when
 *	matching.  A driver binds to a device when ((hardware device ID) & mask)
 *	== id.
 * @data: Private data used by the driver.
 */
struct amba_id {
	unsigned int		id;
	unsigned int		mask;
	void			*data;
};

/**
 * struct mips_cdmm_device_id - identifies devices in MIPS CDMM bus
 * @type:	Device type identifier.
 */
struct mips_cdmm_device_id {
	__u8	type;
};

/*
 * Match x86 CPUs for CPU specific drivers.
 * See documentation of "x86_match_cpu" for details.
 */

/*
 * MODULE_DEVICE_TABLE expects this struct to be called x86cpu_device_id.
 * Although gcc seems to ignore this error, clang fails without this define.
 */
#define x86cpu_device_id x86_cpu_id
struct x86_cpu_id {
	__u16 vendor;
	__u16 family;
	__u16 model;
	__u16 feature;	/* bit index */
	kernel_ulong_t driver_data;
};

#define X86_FEATURE_MATCH(x) \
	{ X86_VENDOR_ANY, X86_FAMILY_ANY, X86_MODEL_ANY, x }

#define X86_VENDOR_ANY 0xffff
#define X86_FAMILY_ANY 0
#define X86_MODEL_ANY  0
#define X86_FEATURE_ANY 0	/* Same as FPU, you can't test for that */

/*
 * Generic table type for matching CPU features.
 * @feature:	the bit number of the feature (0 - 65535)
 */

struct cpu_feature {
	__u16	feature;
};

#define IPACK_ANY_FORMAT 0xff
#define IPACK_ANY_ID (~0)
struct ipack_device_id {
	__u8  format;			/* Format version or IPACK_ANY_ID */
	__u32 vendor;			/* Vendor ID or IPACK_ANY_ID */
	__u32 device;			/* Device ID or IPACK_ANY_ID */
};

#define MEI_CL_MODULE_PREFIX "mei:"
#define MEI_CL_NAME_SIZE 32
#define MEI_CL_VERSION_ANY 0xff

/**
 * struct mei_cl_device_id - MEI client device identifier
 * @name: helper name
 * @uuid: client uuid
 * @version: client protocol version
 * @driver_info: information used by the driver.
 *
 * identifies mei client device by uuid and name
 */
struct mei_cl_device_id {
	char name[MEI_CL_NAME_SIZE];
	uuid_le uuid;
	__u8    version;
	kernel_ulong_t driver_info;
};

/* RapidIO */

#define RIO_ANY_ID	0xffff

/**
 * struct rio_device_id - RIO device identifier
 * @did: RapidIO device ID
 * @vid: RapidIO vendor ID
 * @asm_did: RapidIO assembly device ID
 * @asm_vid: RapidIO assembly vendor ID
 *
 * Identifies a RapidIO device based on both the device/vendor IDs and
 * the assembly device/vendor IDs.
 */
struct rio_device_id {
	__u16 did, vid;
	__u16 asm_did, asm_vid;
};

struct mcb_device_id {
	__u16 device;
	kernel_ulong_t driver_data;
};

struct ulpi_device_id {
	__u16 vendor;
	__u16 product;
	kernel_ulong_t driver_data;
};

/**
 * struct fsl_mc_device_id - MC object device identifier
 * @vendor: vendor ID
 * @obj_type: MC object type
 * @ver_major: MC object version major number
 * @ver_minor: MC object version minor number
 *
 * Type of entries in the "device Id" table for MC object devices supported by
 * a MC object device driver. The last entry of the table has vendor set to 0x0
 */
struct fsl_mc_device_id {
	__u16 vendor;
	const char obj_type[16];
};


#endif /* LINUX_MOD_DEVICETABLE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * procfs namespace bits
 */
#ifndef _LINUX_PROC_NS_H
#define _LINUX_PROC_NS_H

#include <linux/ns_common.h>

struct pid_namespace;
struct nsproxy;
struct path;
struct task_struct;
struct inode;

struct proc_ns_operations {
	const char *name;
	int type;
	struct ns_common *(*get)(struct task_struct *task);
	void (*put)(struct ns_common *ns);
	int (*install)(struct nsproxy *nsproxy, struct ns_common *ns);
	struct user_namespace *(*owner)(struct ns_common *ns);
	struct ns_common *(*get_parent)(struct ns_common *ns);
};

extern const struct proc_ns_operations netns_operations;
extern const struct proc_ns_operations utsns_operations;
extern const struct proc_ns_operations ipcns_operations;
extern const struct proc_ns_operations pidns_operations;
extern const struct proc_ns_operations userns_operations;
extern const struct proc_ns_operations mntns_operations;
extern const struct proc_ns_operations cgroupns_operations;

/*
 * We always define these enumerators
 */
enum {
	PROC_ROOT_INO		= 1,
	PROC_IPC_INIT_INO	= 0xEFFFFFFFU,
	PROC_UTS_INIT_INO	= 0xEFFFFFFEU,
	PROC_USER_INIT_INO	= 0xEFFFFFFDU,
	PROC_PID_INIT_INO	= 0xEFFFFFFCU,
	PROC_CGROUP_INIT_INO	= 0xEFFFFFFBU,
};

#ifdef CONFIG_PROC_FS

extern int pid_ns_prepare_proc(struct pid_namespace *ns);
extern void pid_ns_release_proc(struct pid_namespace *ns);
extern int proc_alloc_inum(unsigned int *pino);
extern void proc_free_inum(unsigned int inum);

#else /* CONFIG_PROC_FS */

static inline int pid_ns_prepare_proc(struct pid_namespace *ns) { return 0; }
static inline void pid_ns_release_proc(struct pid_namespace *ns) {}

static inline int proc_alloc_inum(unsigned int *inum)
{
	*inum = 1;
	return 0;
}
static inline void proc_free_inum(unsigned int inum) {}

#endif /* CONFIG_PROC_FS */

static inline int ns_alloc_inum(struct ns_common *ns)
{
	atomic_long_set(&ns->stashed, 0);
	return proc_alloc_inum(&ns->inum);
}

#define ns_free_inum(ns) proc_free_inum((ns)->inum)

extern struct file *proc_ns_fget(int fd);
#define get_proc_ns(inode) ((struct ns_common *)(inode)->i_private)
extern void *ns_get_path(struct path *path, struct task_struct *task,
			const struct proc_ns_operations *ns_ops);

extern int ns_get_name(char *buf, size_t size, struct task_struct *task,
			const struct proc_ns_operations *ns_ops);
extern void nsfs_init(void);

#endif /* _LINUX_PROC_NS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * sched_clock.h: support for extending counters to full 64-bit ns counter
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
#ifndef LINUX_SCHED_CLOCK
#define LINUX_SCHED_CLOCK

#ifdef CONFIG_GENERIC_SCHED_CLOCK
extern void sched_clock_postinit(void);

extern void sched_clock_register(u64 (*read)(void), int bits,
				 unsigned long rate);
#else
static inline void sched_clock_postinit(void) { }

static inline void sched_clock_register(u64 (*read)(void), int bits,
					unsigned long rate)
{
	;
}
#endif

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #ifndef _ZBUD_H_
#define _ZBUD_H_

#include <linux/types.h>

struct zbud_pool;

struct zbud_ops {
	int (*evict)(struct zbud_pool *pool, unsigned long handle);
};

struct zbud_pool *zbud_create_pool(gfp_t gfp, const struct zbud_ops *ops);
void zbud_destroy_pool(struct zbud_pool *pool);
int zbud_alloc(struct zbud_pool *pool, size_t size, gfp_t gfp,
	unsigned long *handle);
void zbud_free(struct zbud_pool *pool, unsigned long handle);
int zbud_reclaim_page(struct zbud_pool *pool, unsigned int retries);
void *zbud_map(struct zbud_pool *pool, unsigned long handle);
void zbud_unmap(struct zbud_pool *pool, unsigned long handle);
u64 zbud_get_pool_size(struct zbud_pool *pool);

#endif /* _ZBUD_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #ifndef _FALLOC_H_
#define _FALLOC_H_

#include <uapi/linux/falloc.h>


/*
 * Space reservation ioctls and argument structure
 * are designed to be compatible with the legacy XFS ioctls.
 */
struct space_resv {
	__s16		l_type;
	__s16		l_whence;
	__s64		l_start;
	__s64		l_len;		/* len == 0 means until end of file */
	__s32		l_sysid;
	__u32		l_pid;
	__s32		l_pad[4];	/* reserved area */
};

#define FS_IOC_RESVSP		_IOW('X', 40, struct space_resv)
#define FS_IOC_RESVSP64		_IOW('X', 42, struct space_resv)

#define	FALLOC_FL_SUPPORTED_MASK	(FALLOC_FL_KEEP_SIZE |		\
					 FALLOC_FL_PUNCH_HOLE |		\
					 FALLOC_FL_COLLAPSE_RANGE |	\
					 FALLOC_FL_ZERO_RANGE |		\
					 FALLOC_FL_INSERT_RANGE |	\
					 FALLOC_FL_UNSHARE_RANGE)

#endif /* _FALLOC_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #ifdef CONFIG_PROVIDE_OHCI1394_DMA_INIT
extern int __initdata init_ohci1394_dma_early;
extern void __init init_ohci1394_dma_on_all_controllers(void);
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #ifndef __LINUX_STRINGHASH_H
#define __LINUX_STRINGHASH_H

#include <linux/compiler.h>	/* For __pure */
#include <linux/types.h>	/* For u32, u64 */
#include <linux/hash.h>

/*
 * Routines for hashing strings of bytes to a 32-bit hash value.
 *
 * These hash functions are NOT GUARANTEED STABLE between kernel
 * versions, architectures, or even repeated boots of the same kernel.
 * (E.g. they may depend on boot-time hardware detection or be
 * deliberately randomized.)
 *
 * They are also not intended to be secure against collisions caused by
 * malicious inputs; much slower hash functions are required for that.
 *
 * They are optimized for pathname components, meaning short strings.
 * Even if a majority of files have longer names, the dynamic profile of
 * pathname components skews short due to short directory names.
 * (E.g. /usr/lib/libsesquipedalianism.so.3.141.)
 */

/*
 * Version 1: one byte at a time.  Example of use:
 *
 * unsigned long hash = init_name_hash;
 * while (*p)
 *	hash = partial_name_hash(tolower(*p++), hash);
 * hash = end_name_hash(hash);
 *
 * Although this is designed for bytes, fs/hfsplus/unicode.c
 * abuses it to hash 16-bit values.
 */

/* Hash courtesy of the R5 hash in reiserfs modulo sign bits */
#define init_name_hash(salt)		(unsigned long)(salt)

/* partial hash update function. Assume roughly 4 bits per character */
static inline unsigned long
partial_name_hash(unsigned long c, unsigned long prevhash)
{
	return (prevhash + (c << 4) + (c >> 4)) * 11;
}

/*
 * Finally: cut down the number of bits to a int value (and try to avoid
 * losing bits).  This also has the property (wanted by the dcache)
 * that the msbits make a good hash table index.
 */
static inline unsigned long end_name_hash(unsigned long hash)
{
	return __hash_32((unsigned int)hash);
}

/*
 * Version 2: One word (32 or 64 bits) at a time.
 * If CONFIG_DCACHE_WORD_ACCESS is defined (meaning <asm/word-at-a-time.h>
 * exists, which describes major Linux platforms like x86 and ARM), then
 * this computes a different hash function much faster.
 *
 * If not set, this falls back to a wrapper around the preceding.
 */
extern unsigned int __pure full_name_hash(const void *salt, const char *, unsigned int);

/*
 * A hash_len is a u64 with the hash of a string in the low
 * half and the length in the high half.
 */
#define hashlen_hash(hashlen) ((u32)(hashlen))
#define hashlen_len(hashlen)  ((u32)((hashlen) >> 32))
#define hashlen_create(hash, len) ((u64)(len)<<32 | (u32)(hash))

/* Return the "hash_len" (hash and length) of a null-terminated string */
extern u64 __pure hashlen_string(const void *salt, const char *name);

#endif	/* __LINUX_STRINGHASH_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef _LINUX_ELFNOTE_H
#define _LINUX_ELFNOTE_H
/*
 * Helper macros to generate ELF Note structures, which are put into a
 * PT_NOTE segment of the final vmlinux image.  These are useful for
 * including name-value pairs of metadata into the kernel binary (or
 * modules?) for use by external programs.
 *
 * Each note has three parts: a name, a type and a desc.  The name is
 * intended to distinguish the note's originator, so it would be a
 * company, project, subsystem, etc; it must be in a suitable form for
 * use in a section name.  The type is an integer which is used to tag
 * the data, and is considered to be within the "name" namespace (so
 * "FooCo"'s type 42 is distinct from "BarProj"'s type 42).  The
 * "desc" field is the actual data.  There are no constraints on the
 * desc field's contents, though typically they're fairly small.
 *
 * All notes from a given NAME are put into a section named
 * .note.NAME.  When the kernel image is finally linked, all the notes
 * are packed into a single .notes section, which is mapped into the
 * PT_NOTE segment.  Because notes for a given name are grouped into
 * the same section, they'll all be adjacent the output file.
 *
 * This file defines macros for both C and assembler use.  Their
 * syntax is slightly different, but they're semantically similar.
 *
 * See the ELF specification for more detail about ELF notes.
 */

#ifdef __ASSEMBLER__
/*
 * Generate a structure with the same shape as Elf{32,64}_Nhdr (which
 * turn out to be the same size and shape), followed by the name and
 * desc data with appropriate padding.  The 'desctype' argument is the
 * assembler pseudo op defining the type of the data e.g. .asciz while
 * 'descdata' is the data itself e.g.  "hello, world".
 *
 * e.g. ELFNOTE(XYZCo, 42, .asciz, "forty-two")
 *      ELFNOTE(XYZCo, 12, .long, 0xdeadbeef)
 */
#define ELFNOTE_START(name, type, flags)	\
.pushsection .note.name, flags,@note	;	\
  .balign 4				;	\
  .long 2f - 1f		/* namesz */	;	\
  .long 4484f - 3f	/* descsz */	;	\
  .long type				;	\
1:.asciz #name				;	\
2:.balign 4				;	\
3:

#define ELFNOTE_END				\
4484:.balign 4				;	\
.popsection				;

#define ELFNOTE(name, type, desc)		\
	ELFNOTE_START(name, type, "")		\
		desc			;	\
	ELFNOTE_END

#else	/* !__ASSEMBLER__ */
#include <linux/elf.h>
/*
 * Use an anonymous structure which matches the shape of
 * Elf{32,64}_Nhdr, but includes the name and desc data.  The size and
 * type of name and desc depend on the macro arguments.  "name" must
 * be a literal string, and "desc" must be passed by value.  You may
 * only define one note per line, since __LINE__ is used to generate
 * unique symbols.
 */
#define _ELFNOTE_PASTE(a,b)	a##b
#define _ELFNOTE(size, name, unique, type, desc)			\
	static const struct {						\
		struct elf##size##_note _nhdr;				\
		unsigned char _name[sizeof(name)]			\
		__attribute__((aligned(sizeof(Elf##size##_Word))));	\
		typeof(desc) _desc					\
			     __attribute__((aligned(sizeof(Elf##size##_Word)))); \
	} _ELFNOTE_PASTE(_note_, unique)				\
		__used							\
		__attribute__((section(".note." name),			\
			       aligned(sizeof(Elf##size##_Word)),	\
			       unused)) = {				\
		{							\
			sizeof(name),					\
			sizeof(desc),					\
			type,						\
		},							\
		name,							\
		desc							\
	}
#define ELFNOTE(size, name, type, desc)		\
	_ELFNOTE(size, name, __LINE__, type, desc)

#define ELFNOTE32(name, type, desc) ELFNOTE(32, name, type, desc)
#define ELFNOTE64(name, type, desc) ELFNOTE(64, name, type, desc)
#endif	/* __ASSEMBLER__ */

#endif /* _LINUX_ELFNOTE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #ifndef __LINUX_SPINLOCK_TYPES_H
#define __LINUX_SPINLOCK_TYPES_H

/*
 * include/linux/spinlock_types.h - generic spinlock type definitions
 *                                  and initializers
 *
 * portions Copyright 2005, Red Hat, Inc., Ingo Molnar
 * Released under the General Public License (GPL).
 */

#if defined(CONFIG_SMP)
# include <asm/spinlock_types.h>
#else
# include <linux/spinlock_types_up.h>
#endif

#include <linux/lockdep.h>

typedef struct raw_spinlock {
	arch_spinlock_t raw_lock;
#ifdef CONFIG_GENERIC_LOCKBREAK
	unsigned int break_lock;
#endif
#ifdef CONFIG_DEBUG_SPINLOCK
	unsigned int magic, owner_cpu;
	void *owner;
#endif
#ifdef CONFIG_DEBUG_LOCK_ALLOC
	struct lockdep_map dep_map;
#endif
} raw_spinlock_t;

#define SPINLOCK_MAGIC		0xdead4ead

#define SPINLOCK_OWNER_INIT	((void *)-1L)

#ifdef CONFIG_DEBUG_LOCK_ALLOC
# define SPIN_DEP_MAP_INIT(lockname)	.dep_map = { .name = #lockname }
#else
# define SPIN_DEP_MAP_INIT(lockname)
#endif

#ifdef CONFIG_DEBUG_SPINLOCK
# define SPIN_DEBUG_INIT(lockname)		\
	.magic = SPINLOCK_MAGIC,		\
	.owner_cpu = -1,			\
	.owner = SPINLOCK_OWNER_INIT,
#else
# define SPIN_DEBUG_INIT(lockname)
#endif

#define __RAW_SPIN_LOCK_INITIALIZER(lockname)	\
	{					\
	.raw_lock = __ARCH_SPIN_LOCK_UNLOCKED,	\
	SPIN_DEBUG_INIT(lockname)		\
	SPIN_DEP_MAP_INIT(lockname) }

#define __RAW_SPIN_LOCK_UNLOCKED(lockname)	\
	(raw_spinlock_t) __RAW_SPIN_LOCK_INITIALIZER(lockname)

#define DEFINE_RAW_SPINLOCK(x)	raw_spinlock_t x = __RAW_SPIN_LOCK_UNLOCKED(x)

typedef struct spinlock {
	union {
		struct raw_spinlock rlock;

#ifdef CONFIG_DEBUG_LOCK_ALLOC
# define LOCK_PADSIZE (offsetof(struct raw_spinlock, dep_map))
		struct {
			u8 __padding[LOCK_PADSIZE];
			struct lockdep_map dep_map;
		};
#endif
	};
} spinlock_t;

#define __SPIN_LOCK_INITIALIZER(lockname) \
	{ { .rlock = __RAW_SPIN_LOCK_INITIALIZER(lockname) } }

#define __SPIN_LOCK_UNLOCKED(lockname) \
	(spinlock_t ) __SPIN_LOCK_INITIALIZER(lockname)

#define DEFINE_SPINLOCK(x)	spinlock_t x = __SPIN_LOCK_UNLOCKED(x)

#include <linux/rwlock_types.h>

#endif /* __LINUX_SPINLOCK_TYPES_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef AMIGAFFS_H
#define AMIGAFFS_H

#include <linux/types.h>
#include <asm/byteorder.h>

#define FS_OFS		0x444F5300
#define FS_FFS		0x444F5301
#define FS_INTLOFS	0x444F5302
#define FS_INTLFFS	0x444F5303
#define FS_DCOFS	0x444F5304
#define FS_DCFFS	0x444F5305
#define MUFS_FS		0x6d754653   /* 'muFS' */
#define MUFS_OFS	0x6d754600   /* 'muF\0' */
#define MUFS_FFS	0x6d754601   /* 'muF\1' */
#define MUFS_INTLOFS	0x6d754602   /* 'muF\2' */
#define MUFS_INTLFFS	0x6d754603   /* 'muF\3' */
#define MUFS_DCOFS	0x6d754604   /* 'muF\4' */
#define MUFS_DCFFS	0x6d754605   /* 'muF\5' */

#define T_SHORT		2
#define T_LIST		16
#define T_DATA		8

#define ST_LINKFILE	-4
#define ST_FILE		-3
#define ST_ROOT		1
#define ST_USERDIR	2
#define ST_SOFTLINK	3
#define ST_LINKDIR	4

#define AFFS_ROOT_BMAPS		25

struct affs_date {
	__be32 days;
	__be32 mins;
	__be32 ticks;
};

struct affs_short_date {
	__be16 days;
	__be16 mins;
	__be16 ticks;
};

struct affs_root_head {
	__be32 ptype;
	__be32 spare1;
	__be32 spare2;
	__be32 hash_size;
	__be32 spare3;
	__be32 checksum;
	__be32 hashtable[1];
};

struct affs_root_tail {
	__be32 bm_flag;
	__be32 bm_blk[AFFS_ROOT_BMAPS];
	__be32 bm_ext;
	struct affs_date root_change;
	u8 disk_name[32];
	__be32 spare1;
	__be32 spare2;
	struct affs_date disk_change;
	struct affs_date disk_create;
	__be32 spare3;
	__be32 spare4;
	__be32 dcache;
	__be32 stype;
};

struct affs_head {
	__be32 ptype;
	__be32 key;
	__be32 block_count;
	__be32 spare1;
	__be32 first_data;
	__be32 checksum;
	__be32 table[1];
};

struct affs_tail {
	__be32 spare1;
	__be16 uid;
	__be16 gid;
	__be32 protect;
	__be32 size;
	u8 comment[92];
	struct affs_date change;
	u8 name[32];
	__be32 spare2;
	__be32 original;
	__be32 link_chain;
	__be32 spare[5];
	__be32 hash_chain;
	__be32 parent;
	__be32 extension;
	__be32 stype;
};

struct slink_front
{
	__be32 ptype;
	__be32 key;
	__be32 spare1[3];
	__be32 checksum;
	u8 symname[1];	/* depends on block size */
};

struct affs_data_head
{
	__be32 ptype;
	__be32 key;
	__be32 sequence;
	__be32 size;
	__be32 next;
	__be32 checksum;
	u8 data[1];	/* depends on block size */
};

/* Permission bits */

#define FIBF_OTR_READ		0x8000
#define FIBF_OTR_WRITE		0x4000
#define FIBF_OTR_EXECUTE	0x2000
#define FIBF_OTR_DELETE		0x1000
#define FIBF_GRP_READ		0x0800
#define FIBF_GRP_WRITE		0x0400
#define FIBF_GRP_EXECUTE	0x0200
#define FIBF_GRP_DELETE		0x0100

#define FIBF_HIDDEN		0x0080
#define FIBF_SCRIPT		0x0040
#define FIBF_PURE		0x0020		/* no use under linux */
#define FIBF_ARCHIVED		0x0010		/* never set, always cleared on write */
#define FIBF_NOREAD		0x0008		/* 0 means allowed */
#define FIBF_NOWRITE		0x0004		/* 0 means allowed */
#define FIBF_NOEXECUTE		0x0002		/* 0 means allowed, ignored under linux */
#define FIBF_NODELETE		0x0001		/* 0 means allowed */

#define FIBF_OWNER		0x000F		/* Bits pertaining to owner */
#define FIBF_MASK		0xEE0E		/* Bits modified by Linux */

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef __DMI_H__
#define __DMI_H__

#include <linux/list.h>
#include <linux/kobject.h>
#include <linux/mod_devicetable.h>

/* enum dmi_field is in mod_devicetable.h */

enum dmi_device_type {
	DMI_DEV_TYPE_ANY = 0,
	DMI_DEV_TYPE_OTHER,
	DMI_DEV_TYPE_UNKNOWN,
	DMI_DEV_TYPE_VIDEO,
	DMI_DEV_TYPE_SCSI,
	DMI_DEV_TYPE_ETHERNET,
	DMI_DEV_TYPE_TOKENRING,
	DMI_DEV_TYPE_SOUND,
	DMI_DEV_TYPE_PATA,
	DMI_DEV_TYPE_SATA,
	DMI_DEV_TYPE_SAS,
	DMI_DEV_TYPE_IPMI = -1,
	DMI_DEV_TYPE_OEM_STRING = -2,
	DMI_DEV_TYPE_DEV_ONBOARD = -3,
	DMI_DEV_TYPE_DEV_SLOT = -4,
};

enum dmi_entry_type {
	DMI_ENTRY_BIOS = 0,
	DMI_ENTRY_SYSTEM,
	DMI_ENTRY_BASEBOARD,
	DMI_ENTRY_CHASSIS,
	DMI_ENTRY_PROCESSOR,
	DMI_ENTRY_MEM_CONTROLLER,
	DMI_ENTRY_MEM_MODULE,
	DMI_ENTRY_CACHE,
	DMI_ENTRY_PORT_CONNECTOR,
	DMI_ENTRY_SYSTEM_SLOT,
	DMI_ENTRY_ONBOARD_DEVICE,
	DMI_ENTRY_OEMSTRINGS,
	DMI_ENTRY_SYSCONF,
	DMI_ENTRY_BIOS_LANG,
	DMI_ENTRY_GROUP_ASSOC,
	DMI_ENTRY_SYSTEM_EVENT_LOG,
	DMI_ENTRY_PHYS_MEM_ARRAY,
	DMI_ENTRY_MEM_DEVICE,
	DMI_ENTRY_32_MEM_ERROR,
	DMI_ENTRY_MEM_ARRAY_MAPPED_ADDR,
	DMI_ENTRY_MEM_DEV_MAPPED_ADDR,
	DMI_ENTRY_BUILTIN_POINTING_DEV,
	DMI_ENTRY_PORTABLE_BATTERY,
	DMI_ENTRY_SYSTEM_RESET,
	DMI_ENTRY_HW_SECURITY,
	DMI_ENTRY_SYSTEM_POWER_CONTROLS,
	DMI_ENTRY_VOLTAGE_PROBE,
	DMI_ENTRY_COOLING_DEV,
	DMI_ENTRY_TEMP_PROBE,
	DMI_ENTRY_ELECTRICAL_CURRENT_PROBE,
	DMI_ENTRY_OOB_REMOTE_ACCESS,
	DMI_ENTRY_BIS_ENTRY,
	DMI_ENTRY_SYSTEM_BOOT,
	DMI_ENTRY_MGMT_DEV,
	DMI_ENTRY_MGMT_DEV_COMPONENT,
	DMI_ENTRY_MGMT_DEV_THRES,
	DMI_ENTRY_MEM_CHANNEL,
	DMI_ENTRY_IPMI_DEV,
	DMI_ENTRY_SYS_POWER_SUPPLY,
	DMI_ENTRY_ADDITIONAL,
	DMI_ENTRY_ONBOARD_DEV_EXT,
	DMI_ENTRY_MGMT_CONTROLLER_HOST,
	DMI_ENTRY_INACTIVE = 126,
	DMI_ENTRY_END_OF_TABLE = 127,
};

struct dmi_header {
	u8 type;
	u8 length;
	u16 handle;
} __packed;

struct dmi_device {
	struct list_head list;
	int type;
	const char *name;
	void *device_data;	/* Type specific data */
};

#ifdef CONFIG_DMI

struct dmi_dev_onboard {
	struct dmi_device dev;
	int instance;
	int segment;
	int bus;
	int devfn;
};

extern struct kobject *dmi_kobj;
extern int dmi_check_system(const struct dmi_system_id *list);
const struct dmi_system_id *dmi_first_match(const struct dmi_system_id *list);
extern const char * dmi_get_system_info(int field);
extern const struct dmi_device * dmi_find_device(int type, const char *name,
	const struct dmi_device *from);
extern void dmi_scan_machine(void);
extern void dmi_memdev_walk(void);
extern void dmi_set_dump_stack_arch_desc(void);
extern bool dmi_get_date(int field, int *yearp, int *monthp, int *dayp);
extern int dmi_name_in_vendors(const char *str);
extern int dmi_name_in_serial(const char *str);
extern int dmi_available;
extern int dmi_walk(void (*decode)(const struct dmi_header *, void *),
	void *private_data);
extern bool dmi_match(enum dmi_field f, const char *str);
extern void dmi_memdev_name(u16 handle, const char **bank, const char **device);

#else

static inline int dmi_check_system(const struct dmi_system_id *list) { return 0; }
static inline const char * dmi_get_system_info(int field) { return NULL; }
static inline const struct dmi_device * dmi_find_device(int type, const char *name,
	const struct dmi_device *from) { return NULL; }
static inline void dmi_scan_machine(void) { return; }
static inline void dmi_memdev_walk(void) { }
static inline void dmi_set_dump_stack_arch_desc(void) { }
static inline bool dmi_get_date(int field, int *yearp, int *monthp, int *dayp)
{
	if (yearp)
		*yearp = 0;
	if (monthp)
		*monthp = 0;
	if (dayp)
		*dayp = 0;
	return false;
}
static inline int dmi_name_in_vendors(const char *s) { return 0; }
static inline int dmi_name_in_serial(const char *s) { return 0; }
#define dmi_available 0
static inline int dmi_walk(void (*decode)(const struct dmi_header *, void *),
	void *private_data) { return -1; }
static inline bool dmi_match(enum dmi_field f, const char *str)
	{ return false; }
static inline void dmi_memdev_name(u16 handle, const char **bank,
		const char **device) { }
static inline const struct dmi_system_id *
	dmi_first_match(const struct dmi_system_id *list) { return NULL; }

#endif

#endif	/* __DMI_H__ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #ifndef __LINUX_BRIDGE_NETFILTER_H
#define __LINUX_BRIDGE_NETFILTER_H

#include <uapi/linux/netfilter_bridge.h>
#include <linux/skbuff.h>

enum nf_br_hook_priorities {
	NF_BR_PRI_FIRST = INT_MIN,
	NF_BR_PRI_NAT_DST_BRIDGED = -300,
	NF_BR_PRI_FILTER_BRIDGED = -200,
	NF_BR_PRI_BRNF = 0,
	NF_BR_PRI_NAT_DST_OTHER = 100,
	NF_BR_PRI_FILTER_OTHER = 200,
	NF_BR_PRI_NAT_SRC = 300,
	NF_BR_PRI_LAST = INT_MAX,
};

#if IS_ENABLED(CONFIG_BRIDGE_NETFILTER)

int br_handle_frame_finish(struct net *net, struct sock *sk, struct sk_buff *skb);

static inline void br_drop_fake_rtable(struct sk_buff *skb)
{
	struct dst_entry *dst = skb_dst(skb);

	if (dst && (dst->flags & DST_FAKE_RTABLE))
		skb_dst_drop(skb);
}

static inline int nf_bridge_get_physinif(const struct sk_buff *skb)
{
	struct nf_bridge_info *nf_bridge;

	if (skb->nf_bridge == NULL)
		return 0;

	nf_bridge = skb->nf_bridge;
	return nf_bridge->physindev ? nf_bridge->physindev->ifindex : 0;
}

static inline int nf_bridge_get_physoutif(const struct sk_buff *skb)
{
	struct nf_bridge_info *nf_bridge;

	if (skb->nf_bridge == NULL)
		return 0;

	nf_bridge = skb->nf_bridge;
	return nf_bridge->physoutdev ? nf_bridge->physoutdev->ifindex : 0;
}

static inline struct net_device *
nf_bridge_get_physindev(const struct sk_buff *skb)
{
	return skb->nf_bridge ? skb->nf_bridge->physindev : NULL;
}

static inline struct net_device *
nf_bridge_get_physoutdev(const struct sk_buff *skb)
{
	return skb->nf_bridge ? skb->nf_bridge->physoutdev : NULL;
}

static inline bool nf_bridge_in_prerouting(const struct sk_buff *skb)
{
	return skb->nf_bridge && skb->nf_bridge->in_prerouting;
}
#else
#define br_drop_fake_rtable(skb)	        do { } while (0)
static inline bool nf_bridge_in_prerouting(const struct sk_buff *skb)
{
	return false;
}
#endif /* CONFIG_BRIDGE_NETFILTER */

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Copyright (C) 2014-2015 ARM Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#ifndef __DMA_IOMMU_H
#define __DMA_IOMMU_H

#ifdef __KERNEL__
#include <asm/errno.h>

#ifdef CONFIG_IOMMU_DMA
#include <linux/iommu.h>
#include <linux/msi.h>

int iommu_dma_init(void);

/* Domain management interface for IOMMU drivers */
int iommu_get_dma_cookie(struct iommu_domain *domain);
void iommu_put_dma_cookie(struct iommu_domain *domain);

/* Setup call for arch DMA mapping code */
int iommu_dma_init_domain(struct iommu_domain *domain, dma_addr_t base,
		u64 size, struct device *dev);

/* General helpers for DMA-API <-> IOMMU-API interaction */
int dma_direction_to_prot(enum dma_data_direction dir, bool coherent);

/*
 * These implement the bulk of the relevant DMA mapping callbacks, but require
 * the arch code to take care of attributes and cache maintenance
 */
struct page **iommu_dma_alloc(struct device *dev, size_t size, gfp_t gfp,
		unsigned long attrs, int prot, dma_addr_t *handle,
		void (*flush_page)(struct device *, const void *, phys_addr_t));
void iommu_dma_free(struct device *dev, struct page **pages, size_t size,
		dma_addr_t *handle);

int iommu_dma_mmap(struct page **pages, size_t size, struct vm_area_struct *vma);

dma_addr_t iommu_dma_map_page(struct device *dev, struct page *page,
		unsigned long offset, size_t size, int prot);
int iommu_dma_map_sg(struct device *dev, struct scatterlist *sg,
		int nents, int prot);

/*
 * Arch code with no special attribute handling may use these
 * directly as DMA mapping callbacks for simplicity
 */
void iommu_dma_unmap_page(struct device *dev, dma_addr_t handle, size_t size,
		enum dma_data_direction dir, unsigned long attrs);
void iommu_dma_unmap_sg(struct device *dev, struct scatterlist *sg, int nents,
		enum dma_data_direction dir, unsigned long attrs);
int iommu_dma_supported(struct device *dev, u64 mask);
int iommu_dma_mapping_error(struct device *dev, dma_addr_t dma_addr);

/* The DMA API isn't _quite_ the whole story, though... */
void iommu_dma_map_msi_msg(int irq, struct msi_msg *msg);

#else

struct iommu_domain;
struct msi_msg;

static inline int iommu_dma_init(void)
{
	return 0;
}

static inline int iommu_get_dma_cookie(struct iommu_domain *domain)
{
	return -ENODEV;
}

static inline void iommu_put_dma_cookie(struct iommu_domain *domain)
{
}

static inline void iommu_dma_map_msi_msg(int irq, struct msi_msg *msg)
{
}

#endif	/* CONFIG_IOMMU_DMA */
#endif	/* __KERNEL__ */
#endif	/* __DMA_IOMMU_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #ifndef _linux_POSIX_TIMERS_H
#define _linux_POSIX_TIMERS_H

#include <linux/spinlock.h>
#include <linux/list.h>
#include <linux/sched.h>
#include <linux/timex.h>
#include <linux/alarmtimer.h>


static inline unsigned long long cputime_to_expires(cputime_t expires)
{
	return (__force unsigned long long)expires;
}

static inline cputime_t expires_to_cputime(unsigned long long expires)
{
	return (__force cputime_t)expires;
}

struct cpu_timer_list {
	struct list_head entry;
	unsigned long long expires, incr;
	struct task_struct *task;
	int firing;
};

/*
 * Bit fields within a clockid:
 *
 * The most significant 29 bits hold either a pid or a file descriptor.
 *
 * Bit 2 indicates whether a cpu clock refers to a thread or a process.
 *
 * Bits 1 and 0 give the type: PROF=0, VIRT=1, SCHED=2, or FD=3.
 *
 * A clockid is invalid if bits 2, 1, and 0 are all set.
 */
#define CPUCLOCK_PID(clock)		((pid_t) ~((clock) >> 3))
#define CPUCLOCK_PERTHREAD(clock) \
	(((clock) & (clockid_t) CPUCLOCK_PERTHREAD_MASK) != 0)

#define CPUCLOCK_PERTHREAD_MASK	4
#define CPUCLOCK_WHICH(clock)	((clock) & (clockid_t) CPUCLOCK_CLOCK_MASK)
#define CPUCLOCK_CLOCK_MASK	3
#define CPUCLOCK_PROF		0
#define CPUCLOCK_VIRT		1
#define CPUCLOCK_SCHED		2
#define CPUCLOCK_MAX		3
#define CLOCKFD			CPUCLOCK_MAX
#define CLOCKFD_MASK		(CPUCLOCK_PERTHREAD_MASK|CPUCLOCK_CLOCK_MASK)

#define MAKE_PROCESS_CPUCLOCK(pid, clock) \
	((~(clockid_t) (pid) << 3) | (clockid_t) (clock))
#define MAKE_THREAD_CPUCLOCK(tid, clock) \
	MAKE_PROCESS_CPUCLOCK((tid), (clock) | CPUCLOCK_PERTHREAD_MASK)

#define FD_TO_CLOCKID(fd)	((~(clockid_t) (fd) << 3) | CLOCKFD)
#define CLOCKID_TO_FD(clk)	((unsigned int) ~((clk) >> 3))

/* POSIX.1b interval timer structure. */
struct k_itimer {
	struct list_head list;		/* free/ allocate list */
	struct hlist_node t_hash;
	spinlock_t it_lock;
	clockid_t it_clock;		/* which timer type */
	timer_t it_id;			/* timer id */
	int it_overrun;			/* overrun on pending signal  */
	int it_overrun_last;		/* overrun on last delivered signal */
	int it_requeue_pending;		/* waiting to requeue this timer */
#define REQUEUE_PENDING 1
	int it_sigev_notify;		/* notify word of sigevent struct */
	struct signal_struct *it_signal;
	union {
		struct pid *it_pid;	/* pid of process to send signal to */
		struct task_struct *it_process;	/* for clock_nanosleep */
	};
	struct sigqueue *sigq;		/* signal queue entry. */
	union {
		struct {
			struct hrtimer timer;
			ktime_t interval;
		} real;
		struct cpu_timer_list cpu;
		struct {
			unsigned int clock;
			unsigned int node;
			unsigned long incr;
			unsigned long expires;
		} mmtimer;
		struct {
			struct alarm alarmtimer;
			ktime_t interval;
		} alarm;
		struct rcu_head rcu;
	} it;
};

struct k_clock {
	int (*clock_getres) (const clockid_t which_clock, struct timespec *tp);
	int (*clock_set) (const clockid_t which_clock,
			  const struct timespec *tp);
	int (*clock_get) (const clockid_t which_clock, struct timespec * tp);
	int (*clock_adj) (const clockid_t which_clock, struct timex *tx);
	int (*timer_create) (struct k_itimer *timer);
	int (*nsleep) (const clockid_t which_clock, int flags,
		       struct timespec *, struct timespec __user *);
	long (*nsleep_restart) (struct restart_block *restart_block);
	int (*timer_set) (struct k_itimer * timr, int flags,
			  struct itimerspec * new_setting,
			  struct itimerspec * old_setting);
	int (*timer_del) (struct k_itimer * timr);
#define TIMER_RETRY 1
	void (*timer_get) (struct k_itimer * timr,
			   struct itimerspec * cur_setting);
};

extern struct k_clock clock_posix_cpu;
extern struct k_clock clock_posix_dynamic;

void posix_timers_register_clock(const clockid_t clock_id, struct k_clock *new_clock);

/* function to call to trigger timer event */
int posix_timer_event(struct k_itimer *timr, int si_private);

void posix_cpu_timer_schedule(struct k_itimer *timer);

void run_posix_cpu_timers(struct task_struct *task);
void posix_cpu_timers_exit(struct task_struct *task);
void posix_cpu_timers_exit_group(struct task_struct *task);
void set_process_cpu_timer(struct task_struct *task, unsigned int clock_idx,
			   cputime_t *newval, cputime_t *oldval);

long clock_nanosleep_restart(struct restart_block *restart_block);

void update_rlimit_cpu(struct task_struct *task, unsigned long rlim_new);

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               