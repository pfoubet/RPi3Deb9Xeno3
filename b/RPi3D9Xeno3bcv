// based on a keyboard map from an 'xkb/symbols/no' file

default  partial alphanumeric_keys
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a Norwegian keyboard with dead key support
    // and all of ISO-8859-1 characters available.

    include "latin(type2)"

    name[Group1]="Norwegian";

    key <AB09>	{ [    period,      colon,   ellipsis, periodcentered ]	};
    key <AB10>	{ [     minus, underscore,       endash,       emdash ]	};
    key <AD04>	{ [         r,          R,   registered,    trademark ]	};
    key <AD10>	{ [         p,          P,     Greek_pi,     Greek_PI ]	};
    key <AE05>	{ [         5,    percent,      onehalf,    0x1002030 ]	};

    key <AE11>	{ [      plus,   question,    plusminus, questiondown ]	};
    key <AE12>	{ [ backslash, dead_grave,   dead_acute,      notsign ]	};


    key <AC10>	{ [    oslash,   Ooblique,   dead_acute, dead_doubleacute ] };
    key <AC11>	{ [        ae,         AE, dead_circumflex, dead_caron]	};
    key <TLDE>	{ [       bar,    section,    brokenbar,    paragraph ]	};

    key <BKSL>	{ [apostrophe,   asterisk, dead_doubleacute, multiply ]	};
    key <LSGT>	{ [      less,    greater,      onehalf, threequarters]	};

    include "nbsp(level3n)"
    include "keypad(ossmath)"
    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // Modifies the basic Norwegian layout to eliminate dead keys

    include "no(basic)"

    name[Group1]="Norwegian (eliminate dead keys)";

    key <AE12>	{ [ backslash,      grave,        acute,       ogonek ]	};
    key <AD12>	{ [ diaeresis, asciicircum,  asciitilde,       macron ]	};
    key <AC10>	{ [    oslash,   Ooblique,        acute,  doubleacute ]	};
    key <AC11>	{ [        ae,         AE,  asciicircum,        caron ]	};
    key <AB08>	{ [     comma,  semicolon,      cedilla,       ogonek ]	};
    key <AB09>	{ [    period,      colon, periodcentered,   abovedot ]	};
};

partial alphanumeric_keys
xkb_symbols "winkeys" {

     include "no(basic)"
     name[Group1]="Norwegian (Winkeys)";
     include "eurosign(5)"
};

// Norwegian Dvorak
partial alphanumeric_keys
xkb_symbols "dvorak" {
    include "us(dvorak)"

    name[Group1]="Norwegian (Dvorak)";

    key <TLDE> { [	  bar,	section, brokenbar, paragraph	] };

    key <AE01> { [	    1,	exclam, exclamdown, onesuperior	] };
    key <AE02> { [	    2,	quotedbl,   at,     twosuperior	] };
    key <AE03> { [	    3,	numbersign, sterling, threesuperior ] };
    key <AE04> { [	    4,	currency,   dollar,  onequarter	] };
    key <AE05> { [	    5,	percent,    onehalf,	onehalf	] };
    key <AE06> { [	    6,	ampersand,  threequarters, threequarters ] };
    key <AE07> { [	    7,	slash,      braceleft, division	] };
    key <AE08> { [	    8,	parenleft,  bracketleft		] };
    key <AE09> { [	    9,	parenright, bracketright	] };
    key <AE10> { [	    0,	equal,	    braceright		] };
    key <AE11> { [	 plus,	question,   plusminus, questiondown ] };
    key <AE12> { [  backslash,	grave,	    dead_acute,	dead_grave ] };

    key <AD01> { [       aring,	Aring,  braceright, bracketright ] };
    key <AD02> { [	comma,	semicolon, dead_cedilla, cedilla ] };
    key <AD03> { [      period,	colon,  periodcentered		 ] };
    key <AD04> { [	    p,	P,      thorn,	THORN		 ] };
    key <AD05> { [	    y,	Y,      yen			 ] };
    key <AD06> { [	    f,	F,      ordfeminine		 ] };
    key <AD08> { [	    c,	C,      ccedilla, copyright	 ] };
    key <AD09> { [	    r,	R,      registered		 ] };
    key <AD11> { [  apostrophe,	asterisk, dead_circumflex, acute ] };
    key <AD12> { [dead_diaeresis, dead_circumflex, dead_tilde, dead_caron ] };

    key <AC03> { [	    e,	E,      EuroSign,	cent	 ] };
    key <AC05> { [	    i,	I,      idotless,       Iabovedot] };
    key <AC06> { [	    d,	D,      eth,		ETH	 ] };
    key <AC10> { [	    s,	S,      ssharp			 ] };
    key <AC11> { [	minus,	underscore, hyphen,	diaeresis] };

    key <AB01> { [	   ae,	AE,     braceleft,	bracketleft] };
    key <AB05> { [	    x,	X,      multiply		 ] };
    key <AB07> { [	    m,	M,	mu			 ] };
    key <BKSL> { [	 less,	greater, guillemotleft, guillemotright	] };

    key <SPCE> { [	 space,	space, nobreakspace, nobreakspace] };

    key <LSGT> { [	oslash,	Ooblique,  bar,	backslash	 ] };

    // fixed https://bugs.freedesktop.org/show_bug.cgi?id=4397
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "smi" {

    // Northern Sami keyboards for Finland, Norway and Sweden
    //
    // Describes the differences between a very simple en_US
    // keyboard and a Norwegian Northern Sami keyboard (with
    // dead-key support) according to the spec on
    // http://www.hum.uit.no/a/trond/se-lat9-no-keys.html
    // Written by BÃ¸rre Gaup <boerre.gaup@pc.nu>.

    include "latin"

    name[Group1]= "Northern Saami (Norway)";

    key <AE01>	{ [         1,     exclam,    copyright,   exclamdown ]	};
    key <AE02>	{ [         2,   quotedbl,           at,   registered ]	};
    key <AE03>	{ [         3, numbersign,     sterling,         less ]	};
    key <AE04>	{ [         4,     dollar,       dollar,      greater ]	};
    key <AE05>	{ [         5,    percent,        U2022,        U2030 ]	};
    key <AE06>	{ [         6,  ampersand,      section,    paragraph ]	};
    key <AE07>	{ [         7,      slash,    braceleft,          bar ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft,    braceleft ]	};
    key <AE09>	{ [         9, parenright, bracketright,   braceright ]	};
    key <AE10>	{ [         0,      equal,   braceright,     notequal ]	};
    key <AE11>	{ [      plus,   question,     division, questiondown ]	};
    key <AE12>	{ [ backslash,      grave,        acute,   asciitilde ]	};

    key <AD01>	{ [    aacute,     Aacute,            q,            Q ]	};
    key <AD02>	{ [    scaron,     Scaron,            w,            W ]	};
    key <AD03>	{ [         e,          E,       eacute,       Eacute ]	};
    key <AD04>	{ [         r,          R,   registered,    trademark ]	};
    key <AD06>	{ [         y,          Y,       yacute,       Yacute ]	};
    key <AD07>	{ [         u,          U,   udiaeresis,   Udiaeresis ]	};
    key <AD08>	{ [         i,          I,   idiaeresis,   Idiaeresis ]	};
    key <AD09>	{ [         o,          O,           oe,           OE ]	};
    key <AD11>	{ [     aring,      Aring,  acircumflex,  Acircumflex ]	};
    key <AD12>	{ [       eng,        ENG,     quotedbl,  asciicircum ]	};

    key <AC01>	{ [         a,          A,       agrave,       Agrave ]	};
    key <AC02>	{ [         s,          S,       ssharp,   apostrophe ]	};
    key <AC04>	{ [         f,          F,  ordfeminine,  ordfeminine ]	};
    key <AC05>	{ [         g,          G,       gcaron,       Gcaron ]	};
    key <AC06>	{ [         h,          H,        U01E5,        U01E4 ]	};
    key <AC07>	{ [         j,          J,      notsign,     multiply ]	};
    key <AC08>	{ [         k,          K,        U01E9,        U01E8 ]	};
    key <AC09>	{ [         l,          L,       degree,       hyphen ]	};
    key <AC10>	{ [    oslash,   Ooblique,   odiaeresis,   Odiaeresis ]	};
    key <AC11>	{ [        ae,         AE,   adiaeresis,   Adiaeresis ]	};
    key <TLDE>	{ [       bar,    section,    brokenbar,    paragraph ]	};

    key <BKSL>	{ [   dstroke,    Dstroke,   apostrophe,     asterisk ]	};
    key <AB01>	{ [         z,          Z,        U0292,        U01B7 ]	};
    key <AB02>	{ [    ccaron,     Ccaron,            x,            X ]	};
    key <AB03>	{ [         c,          C,     ccedilla,     Ccedilla ]	};
    key <AB04>	{ [         v,          V, lessthanequal, guillemotleft ] };
    key <AB05>	{ [         b,          B, greaterthanequal, guillemotright ] };
    key <AB06>	{ [         n,          N, leftsinglequotemark, leftdoublequotemark ] };
    key <AB07>	{ [         m,          M, rightsinglequotemark, rightdoublequotemark ]	};
    key <AB08>	{ [     comma,  semicolon, singlelowquotemark, doublelowquotemark ] };
    key <AB09>	{ [    period,      colon,     ellipsis, periodcentered ] };
    key <AB10>	{ [     minus, underscore,       endash,       emdash ]	};

    key <LSGT>	{ type[Group1] = "FOUR_LEVEL",
                  [    zcaron,     Zcaron,        U01EF,        U01EE ]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "smi_nodeadkeys" {

    // Modifies the basic Norwegian layout to eliminate dead keys

    include "no(smi)"

    name[Group1]= "Northern Saami (Norway, eliminate dead keys)";

    key <AE12>	{ [ backslash,      grave,        acute,       ogonek ]	};
};

// Copied from macintosh_vndr/no
partial alphanumeric_keys
xkb_symbols "mac" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple Norwegian keyboard.

    include "latin(type4)"
    name[Group1]= "Norwegian (Macintosh)";

    key <TLDE>	{ [       bar,    section     ]	};
    key <AE03>	{ [         3, numbersign,     sterling,     sterling ]	};
    key <AE04>	{ [         4,   currency,       dollar,       dollar ]	};
    key <AE06>	{ [         6,  ampersand, threequarters, fiveeighths ]	};
    key <AE07>	{ [         7,      slash,          bar,    backslash ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft,    braceleft ]	};
    key <AE09>	{ [         9, parenright, bracketright,   braceright ]	};
    key <AC10>	{ [    oslash,   Ooblique,   odiaeresis,   Odiaeresis ]	};
    key <AE11>	{ [      plus,   question     ]	};
    key <AC11>	{ [        ae,         AE     ]	};
    key <AD11>	{ [     aring,      Aring     ]	};
    key <AE12>	{ [ dead_grave, dead_acute,       acute,  dead_ogonek ]	};
    key <AD12>	{ [ diaeresis, asciicircum,  asciitilde,  dead_macron ]	};
    key <BKSL>	{ [        at,   asterisk     ]	};
};

partial alphanumeric_keys
xkb_symbols "mac_nodeadkeys" {

    // Modifies the basic Norwegian layout to eliminate dead keys
    include "no(mac)"
    name[Group1]= "Norwegian (Macintosh, eliminate dead keys)";

    key <AE12>	{ [      grave,     acute,        acute,       ogonek ]	};
    key <AD12>	{ [  diaeresis, asciicircum, asciitilde,       macron ]	};
};

partial alphanumeric_keys
xkb_symbols "colemak" {

    // Colemak layout - http://colemak.com/
    // Q W F P G   J L U Y Ã Ã Â¨
    // A R S T D   H N E I O Ã '
    // < Z X C V   B K M , . -
    include "no(basic)"
    name[Group1]= "Norwegian (Colemak)";

    key <AB06>	{ [         k,          K,          kra,    ampersand ] };
    key <AC02>	{ [         r,          R,   registered,    trademark ] };
    key <AC03>	{ [         s,          S,       ssharp,      section ] };
    key <AC04>	{ [         t,          T,        thorn,        THORN ] };
    key <AC05>	{ [         d,          D,          eth,          ETH ] };
    key <AC07>	{ [         n,          N ] };
    key <AC08>	{ [         e,          E,     EuroSign,         cent ] };
    key <AC09>	{ [         i,          I,   rightarrow,     idotless ] };
    key <AC10>	{ [         o,          O,           oe,           OE ] };
    key <AD03>	{ [         f,          F,      dstroke,  ordfeminine ] };
    key <AD04>	{ [         p,          P,     Greek_pi,     Greek_PI ] };
    key <AD05>	{ [         g,          G,          eng,          ENG ] };
    key <AD06>	{ [         j,          J ] };
    key <AD07>	{ [         l,          L,      lstroke,      Lstroke ] };
    key <AD08>	{ [         u,          U,    downarrow,      uparrow ] };
    key <AD09>	{ [         y,          Y,    leftarrow,          yen ] };
    key <AD10>	{ [    oslash,   Ooblique,   dead_acute, dead_doubleacute ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/no(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             // swap parentheses and square brackets
partial default
xkb_symbols "swap_brackets" {
    replace key <AE09> {        [         9,    bracketleft     ]       };
    replace key <AE10> {        [         0,    bracketright    ]       };
    replace key <AD11> {        [ parenleft,    braceleft       ]       };
    replace key <AD12> {        [ parenright,   braceright      ]       };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           // based on a keyboard map from an 'xkb/symbols/dev' file

default  partial alphanumeric_keys
xkb_symbols "basic" {

      name[Group1]= "Nepali";

// `,1,2,3,4,5,6,7,8,9,0,-,=

      key <TLDE> { [      0x100093D,0x100093C ]	};
      key <AE01> { [      0x1000967	 		]	};
      key <AE02> { [      0x1000968			]	};
      key <AE03> { [      0x1000969 	 		]	};
      key <AE04> { [      0x100096A  	 		]	};
      key <AE05> { [      0x100096B  	 		]	};
      key <AE06> { [      0x100096C  	 		]	};
      key <AE07> { [      0x100096D                     ]	};
      key <AE08> { [      0x100096e  	 		]	};
      key <AE09> { [      0x100096F	 		]	};
      key <AE10> { [      0x1000966,0x1000970		]	};
      key <AE11> { [      minus, 0x1000952 		]	};
      key <AE12> { [      equal, 0x100200C 		]	};

// q,w,e,r,t,y,u,i,o,p,[,]

      key <AD01> { [      0x100091F,  0x1000920       	]	};
      key <AD02> { [      0x100094C,  0x1000914       	]	};
      key <AD03> { [      0x1000947,  0x1000948       	]	};
      key <AD04> { [      0x1000930,  0x1000943       	]	};
      key <AD05> { [      0x1000924,  0x1000925       	]	};
      key <AD06> { [      0x100092F,  0x100091E 	]	};
      key <AD07> { [      0x1000941,  0x1000942 	]	};
      key <AD08> { [      0x100093F,  0x1000940 	]	};
      key <AD09> { [      0x100094B,  0x1000913		]	};
      key <AD10> { [      0x100092A,  0x100092B 	]	};
      key <AD11> { [      0x1000907,  0x1000908		]	};
      key <AD12> { [      0x100090F,  0x1000910		]	};

// a,s,d,f,g,h,j,k,l,;,',Backslash 
      key <AC01> { [      0x100093E,  0x1000906       	]	};
      key <AC02> { [      0x1000938,  0x1000936       	]	};
      key <AC03> { [      0x1000926,  0x1000927       	]	};
      key <AC04> { [      0x1000909,  0x100090A       	]	};
      key <AC05> { [      0x1000917,  0x1000918       	]	};
      key <AC06> { [      0x1000939,  0x1000905 	]	};
      key <AC07> { [      0x100091C,  0x100091D 	]	};
      key <AC08> { [      0x1000915,  0x1000916 	]	};
      key <AC09> { [      0x1000932,  0x1000933 	]	};
      key <AC10> { [      semicolon,  colon 		]	};
      key <AC11> { [      apostrophe, quotedbl		]	};
      key <BKSL> { [      0x1000950,  0x1000903 	]	};


// z,x,c,v,b,n,m,,,.,/ 
      key <AB01> { [      0x1000937,  0x100090B		]	};
      key <AB02> { [      0x1000921,  0x1000922		]	};
      key <AB03> { [      0x100091B,  0x100091A         ]       };
      key <AB04> { [      0x1000935,  0x1000901		]       };
      key <AB05> { [      0x100092C,  0x100092D		]       };
      key <AB06> { [      0x1000928,  0x1000923         ]       };
      key <AB07> { [      0x100092E,  0x1000902         ]       };
      key <AB08> { [      comma,      0x1000919         ]       };
      key <AB09> { [      0x1000964,  0x1000965		]       };
      key <AB10> { [      0x100094D,  question		]       };
};

partial alphanumeric_keys

xkb_symbols "olpc" {
// Contact: Walter Bender <walter@laptop.org>

  include "np"
      key <TLDE> { [      0x100091E,  0x1000965 	]	}; // NYA; double danda
      key <AE01> { [      0x1000967,  0x10FFFFD	]	}; // Nepali digit one; U091C+U094D+U091E
      key <AE02> { [      0x1000968,  0x1000908		]	}; // Nepali digit two;      key <AE03> { [      0x1000969,  0x1000918 	]	}; // Nepali digit three;
      key <AE04> { [      0x100096A,  0x10FFFFC  	]	}; // Nepali digit four; U0926+U094D+U0927
      key <AE05> { [      0x100096B,  0x100091B  	]	}; // Nepali digit five
      key <AE06> { [      0x100096C,  0x100091F  	]	}; // Nepali digit six
      key <AE07> { [      0x100096D,  0x1000920  	]	}; // Nepali digit seven
      key <AE08> { [      0x100096e,  0x1000921  	]	}; // Nepali digit eight
      key <AE09> { [      0x100096F,  0x1000922	 	]	}; // Nepali digit nine
      key <AE10> { [      0x1000966,  0x1000923		]	}; // Nepali digit zero
      key <AE11> { [      0x1000914,  0x1000913         ]       }; // O, AU
      key <AE12> { [      0x100200C,  0x1000902 	]       }; // ZERO-WIDTH-NON-JOINER (ZWNJ); SIGN ANUSVARA
      key <BKSL> { [      0x100094D,  0x100200D 	]	}; // SIGN VIRAMA; ZERO-WIDTH-JOINER (ZWJ)
      key <AD01> { [      0x10FFFFB,  0x10FFFFA 	]	}; // U0924+U094D+U0930; U0924+U094D+U0924
      key <AD02> { [      0x1000927,  0x10FFFF9   	]	}; // DHA; U0921+U094D+U0922
      key <AD03> { [      0x100092D,  0x1000910 	]	}; // BHA, AI
      key <AD04> { [      0x100091A,  0x10FFFF8       ]	}; // CA; U0926+U094D+U0935
      key <AD05> { [      0x1000924,  0x10FFFF7		]	}; // TA; U091F+U094D+U091F
      key <AD06> { [      0x1000925,  0x10FFFF6   ]       }; // THA; U0920+U094D+U0920
      key <AD07> { [      0x1000917,  0x100090A 	]	}; // GA, UU
      key <AD08> { [      0x1000937,  0x10FFFF5    	]	}; // SSA; U0915+U094D+U0937
      key <AD09> { [      0x100092F,  0x1000907 	]	}; // YA, I
      key <AD10> { [      0x1000909,  0x100090F 	]	}; // U, E
      key <AD11> { [      0x10FFFF4,  0x1000943 	]	}; // U0928+U094D+ZWJ; VOWEL SIGN VOCALIC R
      key <AD12> { [      0x1000947,  0x1000948 	]	}; // SIGN E; SIGN AI
      key <AC01> { [      0x100092C,  0x1000906         ]       }; // BA, AA
      key <AC02> { [      0x1000915,  0x10FFFF3	]	}; // KA; U0919+U094D+U0915
      key <AC03> { [      0x100092E,  0x10FFFF2      ]       }; // MA; U0919+U094D+U0917
      key <AC04> { [      0x100093E,  0x1000901		]       }; // CANDRABINDU, VOWEL SIGN AA
      key <AC05> { [      0x1000928,  0x10FFFF1      	]	}; // NA; U0926+U094D+U0926
      key <AC06> { [      0x100091C,  0x100091D       	]	}; // JA, JHA
      key <AC07> { [      0x1000935,  0x100094B       	]	}; // VA, VOWEL SIGN O
      key <AC08> { [      0x100092A,  0x100092B       	]	}; // PA, PHA
      key <AC09> { [      0x100093F,  0x1000940 	]	}; // VOWEL SIGN I, VOWEL SIGN II
      key <AC10> { [      0x1000938,  0x10FFFF0 	]	}; // SA; U091F+U094D+U0920
      key <AC11> { [      0x1000941,  0x1000942 	]	}; // VOWEL SIGN U, VOWEL SIGN UU
      key <AB01> { [      0x1000936,  0x10FFFEF	]	}; // SHA; U0915+U094D+U0915
      key <AB02> { [      0x1000939,  0x10FFFEE	]       }; // HA; U0939+U094D+U092F
      key <AB03> { [      0x1000905, 0x100090B         	]	}; // A; U0909+U090B
      key <AB04> { [      0x1000916,  0x1000950 	]	}; // KHA, OM
      key <AB05> { [      0x1000926,  0x100094C		]	}; // DA, VOWEL SIGN AU
      key <AB06> { [      0x1000932,  0x10FFFED	]	}; // LA; U0926+U094D+U092F
      key <AB07> { [      0x1000903,  0x10FFFEC 	]	}; // SIGN VISARGA; U0921+U094D+U0921
      key <AB08> { [      0x100093D,  0x1000919		]       }; // SIGN AVAGRHA; NGA
      key <AB09> { [      0x1000964,  0x10FFFEB	]       }; // DANDA; U0936+U094D+U0930
      key <AB10> { [      0x1000930,  0x10FFFEA   		]       }; // RA; U0930+U0941

      include "group(olpc)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            default  partial alphanumeric_keys modifier_keys
xkb_symbols "pc105" {

    key <ESC>  {	[ Escape		]	};

    // The extra key on many European keyboards:
    key <LSGT> {	[ less, greater, bar, brokenbar ] };

    // The following keys are common to all layouts.
    key <BKSL> {	[ backslash,	bar	]	};
    key <SPCE> {	[ 	 space		]	};

    include "srvr_ctrl(fkey2vt)"
    include "pc(editing)"
    include "keypad(x11)"

    key <BKSP> {	[ BackSpace, BackSpace	]	};

    key  <TAB> {	[ Tab,	ISO_Left_Tab	]	};
    key <RTRN> {	[ Return		]	};

    key <CAPS> {	[ Caps_Lock		]	};
    key <NMLK> {	[ Num_Lock 		]	};

    key <LFSH> {	[ Shift_L		]	};
    key <LCTL> {	[ Control_L		]	};
    key <LWIN> {	[ Super_L		]	};

    key <RTSH> {	[ Shift_R		]	};
    key <RCTL> {	[ Control_R		]	};
    key <RWIN> {	[ Super_R		]	};
    key <MENU> {	[ Menu			]	};

    // Beginning of modifier mappings.
    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L, Control_R };
    modifier_map Mod2   { Num_Lock };
    modifier_map Mod4   { Super_L, Super_R };

    // Fake keys for virtual<->real modifiers mapping:
    key <LVL3> {	[ ISO_Level3_Shift	]	};
    key <MDSW> {	[ Mode_switch 		]	};
    modifier_map Mod5   { <LVL3>, <MDSW> };

    key <ALT>  {	[ NoSymbol, Alt_L	]	};
    include "altwin(meta_alt)"

    key <META> {	[ NoSymbol, Meta_L	]	};
    modifier_map Mod1   { <META> };

    key <SUPR> {	[ NoSymbol, Super_L	]	};
    modifier_map Mod4   { <SUPR> };

    key <HYPR> {	[ NoSymbol, Hyper_L	]	};
    modifier_map Mod4   { <HYPR> };
    // End of modifier mappings.

    key <OUTP> { [ XF86Display ] };
    key <KITG> { [ XF86KbdLightOnOff ] };
    key <KIDN> { [ XF86KbdBrightnessDown ] };
    key <KIUP> { [ XF86KbdBrightnessUp ] };
};

hidden partial alphanumeric_keys
xkb_symbols "editing" {
    key <PRSC> {
	type= "PC_ALT_LEVEL2",
	symbols[Group1]= [ Print, Sys_Req ]
    };
    key <SCLK> {	[  Scroll_Lock		]	};
    key <PAUS> {
	type= "PC_CONTROL_LEVEL2",
	symbols[Group1]= [ Pause, Break ]
    };
    key  <INS> {	[  Insert		]	};
    key <HOME> {	[  Home			]	};
    key <PGUP> {	[  Prior		]	};
    key <DELE> {	[  Delete		]	};
    key  <END> {	[  End			]	};
    key <PGDN> {	[  Next			]	};

    key   <UP> {	[  Up			]	};
    key <LEFT> {	[  Left			]	};
    key <DOWN> {	[  Down			]	};
    key <RGHT> {	[  Right		]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ////////////////////////////////////////////////////////////////////////////////
// Philippines National Keyboard Layout v1.0.0 (2010-10-23)                   //
// http://laibcoms.com/sandbox/the-philippines-national-keyboard-layout       //
//                                                                            //
// Loosely based on ISO/IEC 9995-3:2009                                       //
//	* glyphs that are not used in Philippine Languages and                //
//		Philippine English were not included                          //
//	* Additions/Changes that are not part of ISO/IEC 9995-3:2009          //
//		were added                                                    //
//                                                                            //
// http://en.wikipedia.org/wiki/ISO/IEC_9995                                  //
// http://www.fileformat.info/info/unicode/char/20B1/index.htm                //
//                                                                            //
// By: Ubuntu Philippines LoCo Team                                           //
// Site: http://ubuntu-ph.org                                                 //
//                                                                            //
// Project Contact: JC John Sese Cuneta / è¬æ½æ´ / ááááá ááááá                                    //
// XMPP/Jabber: jcjohn.sesecuneta@talkr.im                                    //
// Email: jcjohn.sesecuneta@laibcoms.com                                      //
////////////////////////////////////////////////////////////////////////////////

// QWERTY (Latin) version
// http://en.wikipedia.org/wiki/QWERTY
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â ~ Ìâ â ! Â¡ â @ Â¤ â # Â£ â $ â¬ â % Â° â ^ Ìâ â & â â * â â ( â â ) â â _ âÍ   â + â â â« Bak â
// â ` Ìâ â 1 Â¹ â 2 Â² â 3 Â³ â 4 Â¼ â 5 Â½ â 6 Â¾ â 7 â â 8 â â 9 â â 0 â â - Â¬ â = Â± â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â Q   â W   â E Å â R Â¶ â T   â Y   â U   â I Ä° â O Ã â P   â {   â }   â | Æ â
// âTab â¹  â q   â w   â e Å â r Â® â t â¢ â y Â¥ â u   â i Ä± â o Ã¸ â p â± â [   â ]   â \ É â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â A Ã â S   â D   â F Âª â G   â H   â J   â K   â L   â :   â " Ìâ â Enter    â
// âCaps â¬  â a Ã¦ â s Â§ â d   â f   â g   â h   â j   â k   â l   â ;   â ' Ìâ â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â   Â¦ â Z Â» â X Â· â C Â¢ â V â â B â â N Ã â M Âº â < Ì¨â â > â£ â ? Â¿ â           â
// âShift â§â     â z Â« â x Ã â c Â© â v â â b â â n Ã± â m Âµ â , Ì§â â . â¦ â / Ã· âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space             Space â£ â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space             Space â£ âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]= "Filipino";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	U0060,		U007E,		U0300,		U0303		] }; // ` ~ Ìâ Ìâ (combining grave accent) (combining tilde)
	key <AE01> { [	U0031,		U0021,		U00B9,		U00A1		] }; // 1 ! Â¹ Â¡
	key <AE02> { [	U0032,		U0040,		U00B2,		U00A4		] }; // 2 @ Â² Â¤
	key <AE03> { [	U0033,		U0023,		U00B3,		U00A3		] }; // 3 # Â³ Â£
	key <AE04> { [	U0034,		U0024,		U00BC,		U20AC		] }; // 4 $ Â¼ â¬
	key <AE05> { [	U0035,		U0025,		U00BD,		U00B0		] }; // 5 % Â½ Â°
    // E row; Numerals row, right side
	key <AE06> { [	U0036,		U005E,		U00BE,		U0302		] }; // 6 ^ Â¾ Ìâ (combining circumflex accent)
	key <AE07> { [	U0037,		U0026,		U215B,		U2190		] }; // 7 & â â
	key <AE08> { [	U0038,		U002A,		U215C,		U2192		] }; // 8 * â â
	key <AE09> { [	U0039,		U0028,		U215D,		U2191		] }; // 9 ( â â
	key <AE10> { [	U0030,		U0029,		U215E,		U2193		] }; // 0 ) â â
	key <AE11> { [	U002D,		U005F,		U00AC,		U0360		] }; // - _ Â¬ âÍ 
	key <AE12> { [	U003D,		U002B,		U00B1,		U2213		] }; // = + Â± â

    // D row; QWERTY row, left side
	key <AD01> { [	U0071,		U0051,		VoidSymbol,	VoidSymbol	] }; // q Q
	key <AD02> { [	U0077,		U0057,		VoidSymbol,	VoidSymbol	] }; // w W
	key <AD03> { [	U0065,		U0045,		U0153,		U0152		] }; // e E Å Å
	key <AD04> { [	U0072,		U0052,		U00AE,		U00B6		] }; // r R Â® Â¶
	key <AD05> { [	U0074,		U0054,		U2122,		VoidSymbol	] }; // t T â¢
    // D row; QWERTY row, right side
	key <AD06> { [	U0079,		U0059,		U00A5,		VoidSymbol	] }; // y Y Â¥
	key <AD07> { [	U0075,		U0055,		VoidSymbol,	VoidSymbol	] }; // u U
	key <AD08> { [	U0069,		U0049,		U0131,		U0130		] }; // i I Ä± Ä°
	key <AD09> { [	U006F,		U004F,		U00F8,		U00D8		] }; // o O Ã¸ Ã
	key <AD10> { [	U0070,		U0050,		U20B1,		VoidSymbol	] }; // p P â±
	key <AD11> { [	U005B,		U007B,		VoidSymbol,	VoidSymbol	] }; // [ {
	key <AD12> { [	U005D,		U007D,		VoidSymbol,	VoidSymbol	] }; // ] }
	key <BKSL> { [	U005C,		U007C,		U0259,		U018F		] }; // \ | É Æ

    // C row; Home row, left side
	key <AC01> { [	U0061,		U0041,		U00E6,		U00C6		] }; // a A Ã¦ Ã
	key <AC02> { [	U0073,		U0053,		U00A7,		VoidSymbol	] }; // s S Â§
	key <AC03> { [	U0064,		U0044,		VoidSymbol,	VoidSymbol	] }; // d D 
	key <AC04> { [	U0066,		U0046,		VoidSymbol,	U00AA		] }; // f F   Âª
	key <AC05> { [	U0067,		U0047,		VoidSymbol,	VoidSymbol	] }; // g G
    // C row; Home row, right side
	key <AC06> { [	U0068,		U0048,		VoidSymbol,	VoidSymbol	] }; // h H
	key <AC07> { [	U006A,		U004A,		VoidSymbol,	VoidSymbol	] }; // j J
	key <AC08> { [	U006B,		U004B,		VoidSymbol,	VoidSymbol	] }; // k K
	key <AC09> { [	U006C,		U004C,		VoidSymbol,	VoidSymbol	] }; // l L
	key <AC10> { [	U003B,		U003A,		VoidSymbol,	VoidSymbol	] }; // ; :
	key <AC11> { [	U0027,		U0022,		U0301,		U030B		] }; // ' " Ìâ Ìâ (combining acute accent) (combining double-acute accent)

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	U00A6		] }; //       Â¦
	key <AB01> { [	U007A,		U005A,		U00AB,		U00BB		] }; // z Z Â« Â»
	key <AB02> { [	U0078,		U0058,		U00D7,		U00B7		] }; // x X Ã Â·
	key <AB03> { [	U0063,		U0043,		U00A9,		U00A2		] }; // c C Â© Â¢
	key <AB04> { [	U0076,		U0056,		U201C,		U2018		] }; // v V â â
	key <AB05> { [	U0062,		U0042,		U201D,		U2019		] }; // b B â â
    // B row; Lower row, right side
	key <AB06> { [	U006E,		U004E,		U00F1,		U00D1		] }; // n N Ã± Ã
	key <AB07> { [	U006D,		U004D,		U00B5,		U00BA		] }; // m M Âµ Âº
	key <AB08> { [	U002C,		U003C,		U0327,		U0328		] }; // , < Ì§â Ì¨â (combining cedilla) (combining ogonek)
	key <AB09> { [	U002E,		U003E,		U2026,		U2423		] }; // . > â¦ â£
	key <AB10> { [	U002F,		U003F,		U00F7,		U00BF		] }; // / ? Ã· Â¿

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// QWERTY (Baybayin) version
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â     â     â     â     â     â     â     â     â     â     â     â     â âá      â â« Bak â
// â     â     â     â     â     â     â     â     â     â     â     â     â âá      â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â     â     â á     â     â     â     â á      â á     â á      â     â     â     â     â
// âTab â¹  â     â á     â âá      â á    â á     â á     â âá      â âá      â âá      â á     â     â     â     â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â     â     â     â     â     â     â     â     â     â     â     â Enter    â
// âCaps â¬  â á     â á     â á    â     â á     â á     â     â á     â á    â     â     â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â     â     â     â     â     â     â á     â     â     â     â     â           â
// âShift â§â     â     â     â     â     â á     â á     â á    â áµ          â á¶         â     âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space                     â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space                     âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "qwerty-bay" {

    name[Group1]= "Filipino (QWERTY Baybayin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // E row; Numerals row, right side
	key <AE06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE07> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE08> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE09> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE12> { [	U1714,		U1714,		VoidSymbol,	VoidSymbol	] }; // âá (virama) âá (virama)

    // D row; QWERTY row, left side
	key <AD01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD02> { [	U170F,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Wa)
	key <AD03> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AD04> { [	U170D,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ra)
	key <AD05> { [	U1706,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ta)
    // D row; QWERTY row, right side
	key <AD06> { [	U170C,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ya)
	key <AD07> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AD08> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AD09> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AD10> { [	U1709,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Pa)
	key <AD11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD12> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <BKSL> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

     // C row; Home row, left side
	key <AC01> { [	U1700,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (A)
	key <AC02> { [	U1710,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Sa)
	key <AC03> { [	U1707,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Da)
	key <AC04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AC05> { [	U1704,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ga)
    // C row; Home row, right side
	key <AC06> { [	U1711,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ha)
	key <AC07> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AC08> { [	U1703,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ka)
	key <AC09> { [	U170E,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (La)
	key <AC10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AC11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB05> { [	U170A,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ba)
    // B row; Lower row, right side
	key <AB06> { [	U1708,		U1705,		VoidSymbol,	VoidSymbol	] }; // á (Na) á (Nga)
	key <AB07> { [	U170B,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ma)
	key <AB08> { [	U1735,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // áµ (comma)
	key <AB09> { [	U1736,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á¶ (period)
	key <AB10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Capewell-Dvorak (Latin) version
// http://www.michaelcapewell.com/projects/keyboard/index.htm#The_Capewell-Dvorak_Layout
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â ~ Ìâ â ! Â¡ â @ Â¤ â # Â£ â $ â¬ â % Â° â ^ Ìâ â & â â * â â ( â â ) â â {   â }   â â« Bak â
// â ` Ìâ â 1 Â¹ â 2 Â² â 3 Â³ â 4 Â¼ â 5 Â½ â 6 Â¾ â 7 â â 8 â â 9 â â 0 â â [   â ]   â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â " Ìâ â < Ì¨â â > â£ â P   â Y   â Q   â F Âª â G   â R Â¶ â K   â ? Â¿ â + â â | Æ â
// âTab â¹  â ' Ìâ â , Ì§â â . â¦ â p â± â y Â¥ â q   â f   â g   â r Â® â k   â / Ã· â = Â± â \ É â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â O Ã â A Ã â E Å â I Ä° â U   â D   â H   â T   â N Ã â S   â _ âÍ   â Enter    â
// âCaps â¬  â o Ã¸ â a Ã¦ â e Å â i Ä± â u   â d   â h   â t â¢ â n Ã± â s Â§ â - Â¬ â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â   Â¦ â Z Â» â X Â· â C Â¢ â V â â J   â L   â M Âº â W   â B â â :   â           â
// âShift â§â     â z Â« â x Ã â c Â© â v â â j   â l   â m Âµ â w   â b â â ;   âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space             Space â£ â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space             Space â£ âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "capewell-dvorak" {

    name[Group1]= "Filipino (Capewell-Dvorak Latin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	U0060,		U007E,		U0300,		U0303		] }; // ` ~ Ìâ Ìâ (combining grave accent) (combining tilde)
	key <AE01> { [	U0031,		U0021,		U00B9,		U00A1		] }; // 1 ! Â¹ Â¡
	key <AE02> { [	U0032,		U0040,		U00B2,		U00A4		] }; // 2 @ Â² Â¤
	key <AE03> { [	U0033,		U0023,		U00B3,		U00A3		] }; // 3 # Â³ Â£
	key <AE04> { [	U0034,		U0024,		U00BC,		U20AC		] }; // 4 $ Â¼ â¬
	key <AE05> { [	U0035,		U0025,		U00BD,		U00B0		] }; // 5 % Â½ Â°
    // E row; Numerals row, right side
	key <AE06> { [	U0036,		U005E,		U00BE,		U0302		] }; // 6 ^ Â¾ Ìâ (combining circumflex accent)
	key <AE07> { [	U0037,		U0026,		U215B,		U2190		] }; // 7 & â â
	key <AE08> { [	U0038,		U002A,		U215C,		U2192		] }; // 8 * â â
	key <AE09> { [	U0039,		U0028,		U215D,		U2191		] }; // 9 ( â â
	key <AE10> { [	U0030,		U0029,		U215E,		U2193		] }; // 0 ) â â
	key <AE11> { [	U005B,		U007B,		VoidSymbol,	VoidSymbol	] }; // [ {
	key <AE12> { [	U005D,		U007D,		VoidSymbol,	VoidSymbol	] }; // ] }

    // D row; Upper row, left side
	key <AD01> { [	U0027,		U0022,		U0301,		U030B		] }; // ' " Ìâ Ìâ (combining acute accent) (combining double-acute accent)
	key <AD02> { [	U002C,		U003C,		U0327,		U0328		] }; // , < Ì§â Ì¨â (combining cedilla) (combining ogonek)
	key <AD03> { [	U002E,		U003E,		U2026,		U2423		] }; // . > â¦ â£
	key <AD04> { [	U0070,		U0050,		U20B1,		VoidSymbol	] }; // p P â±
	key <AD05> { [	U0079,		U0059,		U00A5,		VoidSymbol	] }; // y Y Â¥
    // D row; Upper row, right side
	key <AD06> { [	U0071,		U0051,		VoidSymbol,	VoidSymbol	] }; // q Q
	key <AD07> { [	U0066,		U0046,		VoidSymbol,	U00AA		] }; // f F   Âª
	key <AD08> { [	U0067,		U0047,		VoidSymbol,	VoidSymbol	] }; // g G
	key <AD09> { [	U0072,		U0052,		U00AE,		U00B6		] }; // r R Â® Â¶
	key <AD10> { [	U006B,		U004B,		VoidSymbol,	VoidSymbol	] }; // k K
	key <AD11> { [	U002F,		U003F,		U00F7,		U00BF		] }; // / ? Ã· Â¿
	key <AD12> { [	U003D,		U002B,		U00B1,		U2213		] }; // = + Â± â
	key <BKSL> { [	U005C,		U007C,		U0259,		U018F		] }; // \ | É Æ

    // C row; Home row, left side
	key <AC01> { [	U006F,		U004F,		U00F8,		U00D8		] }; // o O Ã¸ Ã
	key <AC02> { [	U0061,		U0041,		U00E6,		U00C6		] }; // a A Ã¦ Ã
	key <AC03> { [	U0065,		U0045,		U0153,		U0152		] }; // e E Å Å
	key <AC04> { [	U0069,		U0049,		U0131,		U0130		] }; // i I Ä± Ä°
	key <AC05> { [	U0075,		U0055,		VoidSymbol,	VoidSymbol	] }; // u U
    // C row; Home row, right side
	key <AC06> { [	U0064,		U0044,		VoidSymbol,	VoidSymbol	] }; // d D
	key <AC07> { [	U0068,		U0048,		VoidSymbol,	VoidSymbol	] }; // h H
	key <AC08> { [	U0074,		U0054,		U2122,		VoidSymbol	] }; // t T â¢
	key <AC09> { [	U006E,		U004E,		U00F1,		U00D1		] }; // n N Ã± Ã
	key <AC10> { [	U0073,		U0053,		U00A7,		VoidSymbol	] }; // s S Â§
	key <AC11> { [	U002D,		U005F,		U00AC,		U0360		] }; // - _ Â¬ âÍ 

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	U00A6		] }; //       Â¦
	key <AB01> { [	U007A,		U005A,		U00AB,		U00BB		] }; // z Z Â« Â»
	key <AB02> { [	U0078,		U0058,		U00D7,		U00B7		] }; // x X Ã Â·
	key <AB03> { [	U0063,		U0043,		U00A9,		U00A2		] }; // c C Â© Â¢
	key <AB04> { [	U0076,		U0056,		U201C,		U2018		] }; // v V â â
	key <AB05> { [	U006A,		U004A,		VoidSymbol,	VoidSymbol	] }; // j J
    // B row; Lower row, right side
	key <AB06> { [	U006C,		U004C,		VoidSymbol,	VoidSymbol	] }; // l L
	key <AB07> { [	U006D,		U004D,		U00B5,		U00BA		] }; // m M Âµ Âº
	key <AB08> { [	U0077,		U0057,		VoidSymbol,	VoidSymbol	] }; // w W
	key <AB09> { [	U0062,		U0042,		U201D,		U2019		] }; // b B â â
	key <AB10> { [	U003B,		U003A,		VoidSymbol,	VoidSymbol	] }; // ; :

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Capewell-Dvorak (Baybayin) version
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â     â     â     â     â     â     â     â     â     â     â     â     â     â â« Bak â
// â     â     â     â     â     â     â     â     â     â     â     â     â     â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â     â     â     â     â     â     â     â     â     â     â     â âá      â     â
// âTab â¹  â     â áµ          â á¶         â á     â á    â     â     â á     â á     â á     â     â âá      â     â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â á       â     â á    â á     â á      â     â     â     â á     â     â     â Enter    â
// âCaps â¬  â âá      â á     â âá      â âá      â âá      â á    â á     â á     â á     â á    â     â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â     â     â     â     â     â     â     â     â     â     â     â           â
// âShift â§â     â     â     â     â     â     â á     â á     â á    â á     â     âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space                     â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space                     âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "capewell-dvorak-bay" {

    name[Group1]= "Filipino (Capewell-Dvorak Baybayin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // E row; Numerals row, right side
	key <AE06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE07> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE08> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE09> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE12> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // D row; QWERTY row, left side
	key <AD01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD02> { [	U1735,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // áµ (comma)
	key <AD03> { [	U1736,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á¶ (period)
	key <AD04> { [	U1709,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Pa)
	key <AD05> { [	U170C,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ya)
    // D row; QWERTY row, right side
	key <AD06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD07> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD08> { [	U1704,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ga)
	key <AD09> { [	U170D,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ra)
	key <AD10> { [	U1703,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ka)
	key <AD11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD12> { [	U1714,		U1714,		VoidSymbol,	VoidSymbol	] }; // âá (virama) âá (virama)
	key <BKSL> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

     // C row; Home row, left side
	key <AC01> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AC02> { [	U1700,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (A)
	key <AC03> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AC04> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AC05> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
    // C row; Home row, right side
	key <AC06> { [	U1707,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Da)
	key <AC07> { [	U1711,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ha)
	key <AC08> { [	U1706,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ta)
	key <AC09> { [	U1708,		U1705,		VoidSymbol,	VoidSymbol	] }; // á (Na) á (Nga)
	key <AC10> { [	U1710,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Sa)
	key <AC11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // B row; Lower row, right side
	key <AB06> { [	U170E,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (La)
	key <AB07> { [	U170B,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ma)
	key <AB08> { [	U170F,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Wa)
	key <AB09> { [	U170A,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ba)
	key <AB10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Capewell-QWERF 2006 (Latin) version
// http://www.michaelcapewell.com/projects/keyboard/index.htm#The_QWERF_Layout
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â ~ Ìâ â ! Â¡ â @ Â¤ â # Â£ â $ â¬ â % Â° â ^ Ìâ â & â â * â â ( â â ) â â _ âÍ   â + â â â« Bak â
// â ` Ìâ â 1 Â¹ â 2 Â² â 3 Â³ â 4 Â¼ â 5 Â½ â 6 Â¾ â 7 â â 8 â â 9 â â 0 â â - Â¬ â = Â± â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â Q   â W   â E Å â R Â¶ â F Âª â J   â Y   â K   â L   â :   â {   â }   â | Æ â
// âTab â¹  â q   â w   â e Å â r Â® â f   â j   â y Â¥ â k   â l   â ;   â [   â ]   â \ É â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â A Ã â S   â D   â T   â G   â H   â U   â I Ä° â O Ã â P   â " Ìâ â Enter    â
// âCaps â¬  â a Ã¦ â s Â§ â d   â t â¢ â g   â h   â u   â i Ä± â o Ã¸ â p â± â ' Ìâ â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â   Â¦ â Z Â» â X Â· â C Â¢ â V â â B â â N Ã â M Âº â < Ì¨â â > â£ â ? Â¿ â           â
// âShift â§â     â z Â« â x Ã â c Â© â v â â b â â n Ã± â m Âµ â , Ì§â â . â¦ â / Ã· âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space             Space â£ â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space             Space â£ âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "capewell-qwerf2k6" {

    name[Group1]= "Filipino (Capewell-QWERF 2006 Latin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	U0060,		U007E,		U0300,		U0303		] }; // ` ~ Ìâ Ìâ (combining grave accent) (combining tilde)
	key <AE01> { [	U0031,		U0021,		U00B9,		U00A1		] }; // 1 ! Â¹ Â¡
	key <AE02> { [	U0032,		U0040,		U00B2,		U00A4		] }; // 2 @ Â² Â¤
	key <AE03> { [	U0033,		U0023,		U00B3,		U00A3		] }; // 3 # Â³ Â£
	key <AE04> { [	U0034,		U0024,		U00BC,		U20AC		] }; // 4 $ Â¼ â¬
	key <AE05> { [	U0035,		U0025,		U00BD,		U00B0		] }; // 5 % Â½ Â°
    // E row; Numerals row, right side
	key <AE06> { [	U0036,		U005E,		U00BE,		U0302		] }; // 6 ^ Â¾ Ìâ (combining circumflex accent)
	key <AE07> { [	U0037,		U0026,		U215B,		U2190		] }; // 7 & â â
	key <AE08> { [	U0038,		U002A,		U215C,		U2192		] }; // 8 * â â
	key <AE09> { [	U0039,		U0028,		U215D,		U2191		] }; // 9 ( â â
	key <AE10> { [	U0030,		U0029,		U215E,		U2193		] }; // 0 ) â â
	key <AE11> { [	U002D,		U005F,		U00AC,		U0360		] }; // - _ Â¬ âÍ 
	key <AE12> { [	U003D,		U002B,		U00B1,		U2213		] }; // = + Â± â

    // D row; Upper row, left side
	key <AD01> { [	U0071,		U0051,		VoidSymbol,	VoidSymbol	] }; // q Q
	key <AD02> { [	U0077,		U0057,		VoidSymbol,	VoidSymbol	] }; // w W
	key <AD03> { [	U0065,		U0045,		U0153,		U0152		] }; // e E Å Å
	key <AD04> { [	U0072,		U0052,		U00AE,		U00B6		] }; // r R Â® Â¶
	key <AD05> { [	U0066,		U0046,		VoidSymbol,	U00AA		] }; // f F   Âª
    // D row; Upper row, right side
	key <AD06> { [	U006A,		U004A,		VoidSymbol,	VoidSymbol	] }; // j J
	key <AD07> { [	U0079,		U0059,		U00A5,		VoidSymbol	] }; // y Y Â¥
	key <AD08> { [	U006B,		U004B,		VoidSymbol,	VoidSymbol	] }; // k K
	key <AD09> { [	U006C,		U004C,		VoidSymbol,	VoidSymbol	] }; // l L
	key <AD10> { [	U003B,		U003A,		VoidSymbol,	VoidSymbol	] }; // ; :
	key <AD11> { [	U005B,		U007B,		VoidSymbol,	VoidSymbol	] }; // [ {
	key <AD12> { [	U005D,		U007D,		VoidSymbol,	VoidSymbol	] }; // ] }
	key <BKSL> { [	U005C,		U007C,		U0259,		U018F		] }; // \ | É Æ

    // C row; Home row, left side
	key <AC01> { [	U0061,		U0041,		U00E6,		U00C6		] }; // a A Ã¦ Ã
	key <AC02> { [	U0073,		U0053,		U00A7,		VoidSymbol	] }; // s S Â§
	key <AC03> { [	U0064,		U0044,		VoidSymbol,	VoidSymbol	] }; // d D
	key <AC04> { [	U0074,		U0054,		U2122,		VoidSymbol	] }; // t T â¢
	key <AC05> { [	U0067,		U0047,		VoidSymbol,	VoidSymbol	] }; // g G
    // C row; Home row, right side
	key <AC06> { [	U0068,		U0048,		VoidSymbol,	VoidSymbol	] }; // h H
	key <AC07> { [	U0075,		U0055,		VoidSymbol,	VoidSymbol	] }; // u U
	key <AC08> { [	U0069,		U0049,		U0131,		U0130		] }; // i I Ä± Ä°
	key <AC09> { [	U006F,		U004F,		U00F8,		U00D8		] }; // o O Ã¸ Ã
	key <AC10> { [	U0070,		U0050,		U20B1,		VoidSymbol	] }; // p P â±
	key <AC11> { [	U0027,		U0022,		U0301,		U030B		] }; // ' " Ìâ Ìâ (combining acute accent) (combining double-acute accent)

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	U00A6		] }; //       Â¦
	key <AB01> { [	U007A,		U005A,		U00AB,		U00BB		] }; // z Z Â« Â»
	key <AB02> { [	U0078,		U0058,		U00D7,		U00B7		] }; // x X Ã Â·
	key <AB03> { [	U0063,		U0043,		U00A9,		U00A2		] }; // c C Â© Â¢
	key <AB04> { [	U0076,		U0056,		U201C,		U2018		] }; // v V â â
	key <AB05> { [	U0062,		U0042,		U201D,		U2019		] }; // b B â â
    // B row; Lower row, right side
	key <AB06> { [	U006E,		U004E,		U00F1,		U00D1		] }; // n N Ã± Ã
	key <AB07> { [	U006D,		U004D,		U00B5,		U00BA		] }; // m M Âµ Âº
	key <AB08> { [	U002C,		U003C,		U0327,		U0328		] }; // , < Ì§â Ì¨â (combining cedilla) (combining ogonek)
	key <AB09> { [	U002E,		U003E,		U2026,		U2423		] }; // . > â¦ â£
	key <AB10> { [	U002F,		U003F,		U00F7,		U00BF		] }; // / ? Ã· Â¿

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Capewell-QWERF 2006 (Baybayin) version
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â     â     â     â     â     â     â     â     â     â     â     â     â âá      â â« Bak â
// â     â     â     â     â     â     â     â     â     â     â     â     â âá      â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â     â     â á     â     â     â     â     â     â     â     â     â     â     â
// âTab â¹  â     â á     â âá      â á     â     â     â á    â á     â á     â     â     â     â     â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â     â     â     â     â     â     â á      â á     â á       â     â     â Enter    â
// âCaps â¬  â á     â á     â á    â á     â á     â á     â âá     â âá      â âá      â á     â     â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â     â     â     â     â     â     â á     â     â     â     â     â           â
// âShift â§â     â     â     â     â     â á     â á     â á    â áµ          â á¶         â     âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space                     â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space                     âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "capewell-qwerf2k6-bay" {

    name[Group1]= "Filipino (Capewell-QWERF 2006 Baybayin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // E row; Numerals row, right side
	key <AE06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE07> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE08> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE09> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE12> { [	U1714,		U1714,		VoidSymbol,	VoidSymbol	] }; // âá (virama) âá (virama)

    // D row; QWERTY row, left side
	key <AD01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD02> { [	U170F,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Wa)
	key <AD03> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AD04> { [	U170D,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ra)
	key <AD05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // D row; QWERTY row, right side
	key <AD06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD07> { [	U170C,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ya)
	key <AD08> { [	U1703,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ka)
	key <AD09> { [	U170E,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (La)
	key <AD10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD12> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <BKSL> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

     // C row; Home row, left side
	key <AC01> { [	U1700,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (A)
	key <AC02> { [	U1710,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Sa)
	key <AC03> { [	U1707,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Da)
	key <AC04> { [	U1706,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ta)
	key <AC05> { [	U1704,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ga)
    // C row; Home row, right side
	key <AC06> { [	U1711,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ha)
	key <AC07> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AC08> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AC09> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AC10> { [	U1709,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Pa)
	key <AC11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB05> { [	U170A,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ba)
    // B row; Lower row, right side
	key <AB06> { [	U1708,		U1705,		VoidSymbol,	VoidSymbol	] }; // á (Na) á (Nga)
	key <AB07> { [	U170B,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ma)
	key <AB08> { [	U1735,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // áµ (comma)
	key <AB09> { [	U1736,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á¶ (period)
	key <AB10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Colemak (Latin) version
// http://colemak.com
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â ~ Ìâ â ! Â¡ â @ Â¤ â # Â£ â $ â¬ â % Â° â ^ Ìâ â & â â * â â ( â â ) â â _ âÍ   â + â â â« Bak â
// â ` Ìâ â 1 Â¹ â 2 Â² â 3 Â³ â 4 Â¼ â 5 Â½ â 6 Â¾ â 7 â â 8 â â 9 â â 0 â â - Â¬ â = Â± â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â Q   â W   â F Âª â P   â G   â J   â L   â U   â Y   â :   â {   â }   â | Æ â
// âTab â¹  â q   â w   â f   â p â± â g   â j   â l   â u   â y Â¥ â ;   â [   â ]   â \ É â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â A Ã â R Â¶ â S   â T   â D   â H   â N Ã â E Å â I Ä° â O Ã â " Ìâ â Enter    â
// âCaps â¬  â a Ã¦ â r Â® â s Â§ â t â¢ â d   â h   â n Ã± â e Å â i Ä± â o Ã¸ â ' Ìâ â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â   Â¦ â Z Â» â X Â· â C Â¢ â V â â B â â K   â M Âº â < Ì¨â â > â£ â ? Â¿ â           â
// âShift â§â     â z Â« â x Ã â c Â© â v â â b â â k   â m Âµ â , Ì§â â . â¦ â / Ã· âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space             Space â£ â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space             Space â£ âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "colemak" {

    name[Group1]= "Filipino (Colemak Latin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	U0060,		U007E,		U0300,		U0303		] }; // ` ~ Ìâ Ìâ (combining grave accent) (combining tilde)
	key <AE01> { [	U0031,		U0021,		U00B9,		U00A1		] }; // 1 ! Â¹ Â¡
	key <AE02> { [	U0032,		U0040,		U00B2,		U00A4		] }; // 2 @ Â² Â¤
	key <AE03> { [	U0033,		U0023,		U00B3,		U00A3		] }; // 3 # Â³ Â£
	key <AE04> { [	U0034,		U0024,		U00BC,		U20AC		] }; // 4 $ Â¼ â¬
	key <AE05> { [	U0035,		U0025,		U00BD,		U00B0		] }; // 5 % Â½ Â°
    // E row; Numerals row, right side
	key <AE06> { [	U0036,		U005E,		U00BE,		U0302		] }; // 6 ^ Â¾ Ìâ (combining circumflex accent)
	key <AE07> { [	U0037,		U0026,		U215B,		U2190		] }; // 7 & â â
	key <AE08> { [	U0038,		U002A,		U215C,		U2192		] }; // 8 * â â
	key <AE09> { [	U0039,		U0028,		U215D,		U2191		] }; // 9 ( â â
	key <AE10> { [	U0030,		U0029,		U215E,		U2193		] }; // 0 ) â â
	key <AE11> { [	U002D,		U005F,		U00AC,		U0360		] }; // - _ Â¬ âÍ 
	key <AE12> { [	U003D,		U002B,		U00B1,		U2213		] }; // = + Â± â

    // D row; Upper row, left side
	key <AD01> { [	U0071,		U0051,		VoidSymbol,	VoidSymbol	] }; // q Q
	key <AD02> { [	U0077,		U0057,		VoidSymbol,	VoidSymbol	] }; // w W
	key <AD03> { [	U0066,		U0046,		VoidSymbol,	U00AA		] }; // f F   Âª
	key <AD04> { [	U0070,		U0050,		U20B1,		VoidSymbol	] }; // p P â±
	key <AD05> { [	U0067,		U0047,		VoidSymbol,	VoidSymbol	] }; // g G
   // D row; Upper row, right side
	key <AD06> { [	U006A,		U004A,		VoidSymbol,	VoidSymbol	] }; // j J
	key <AD07> { [	U006C,		U004C,		VoidSymbol,	VoidSymbol	] }; // l L
	key <AD08> { [	U0075,		U0055,		VoidSymbol,	VoidSymbol	] }; // u U
	key <AD09> { [	U0079,		U0059,		U00A5,		VoidSymbol	] }; // y Y Â¥
	key <AD10> { [	U003B,		U003A,		VoidSymbol,	VoidSymbol	] }; // ; :
	key <AD11> { [	U005B,		U007B,		VoidSymbol,	VoidSymbol	] }; // [ {
	key <AD12> { [	U005D,		U007D,		VoidSymbol,	VoidSymbol	] }; // ] }
	key <BKSL> { [	U005C,		U007C,		U0259,		U018F		] }; // \ | É Æ

    // C row; Home row, left side
	key <AC01> { [	U0061,		U0041,		U00E6,		U00C6		] }; // a A Ã¦ Ã
	key <AC02> { [	U0072,		U0052,		U00AE,		U00B6		] }; // r R Â® Â¶
	key <AC03> { [	U0073,		U0053,		U00A7,		VoidSymbol	] }; // s S Â§
	key <AC04> { [	U0074,		U0054,		U2122,		VoidSymbol	] }; // t T â¢
	key <AC05> { [	U0064,		U0044,		VoidSymbol,	VoidSymbol	] }; // d D
    // C row; Home row, right side
	key <AC06> { [	U0068,		U0048,		VoidSymbol,	VoidSymbol	] }; // h H
	key <AC07> { [	U006E,		U004E,		U00F1,		U00D1		] }; // n N Ã± Ã
	key <AC08> { [	U0065,		U0045,		U0153,		U0152		] }; // e E Å Å
	key <AC09> { [	U0069,		U0049,		U0131,		U0130		] }; // i I Ä± Ä°
	key <AC10> { [	U006F,		U004F,		U00F8,		U00D8		] }; // o O Ã¸ Ã
	key <AC11> { [	U0027,		U0022,		U0301,		U030B		] }; // ' " Ìâ Ìâ (combining acute accent) (combining double-acute accent)

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	U00A6		] }; //       Â¦
	key <AB01> { [	U007A,		U005A,		U00AB,		U00BB		] }; // z Z Â« Â»
	key <AB02> { [	U0078,		U0058,		U00D7,		U00B7		] }; // x X Ã Â·
	key <AB03> { [	U0063,		U0043,		U00A9,		U00A2		] }; // c C Â© Â¢
	key <AB04> { [	U0076,		U0056,		U201C,		U2018		] }; // v V â â
	key <AB05> { [	U0062,		U0042,		U201D,		U2019		] }; // b B â â
    // B row; Lower row, right side
	key <AB06> { [	U006B,		U004B,		VoidSymbol,	VoidSymbol	] }; // k K
	key <AB07> { [	U006D,		U004D,		U00B5,		U00BA		] }; // m M Âµ Âº
	key <AB08> { [	U002C,		U003C,		U0327,		U0328		] }; // , < Ì§â Ì¨â (combining cedilla) (combining ogonek)
	key <AB09> { [	U002E,		U003E,		U2026,		U2423		] }; // . > â¦ â£
	key <AB10> { [	U002F,		U003F,		U00F7,		U00BF		] }; // / ? Ã· Â¿

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Colemak (Baybayin) version
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â     â     â     â     â     â     â     â     â     â     â     â     â âá      â â« Bak â
// â     â     â     â     â     â     â     â     â     â     â     â     â âá      â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â     â     â     â     â     â     â     â á      â     â     â     â     â     â
// âTab â¹  â     â á     â     â á     â á    â     â á     â âá      â á     â     â     â     â     â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â     â     â     â     â     â     â á     â á     â á    â á       â     â Enter    â
// âCaps â¬  â á     â á     â á    â á     â á     â á    â á     â âá      â âá      â âá      â     â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â     â     â     â     â     â     â     â     â     â     â     â           â
// âShift â§â     â     â     â     â     â á     â á     â á    â áµ          â á¶         â     âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space                     â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space                     âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "colemak-bay" {

    name[Group1]= "Filipino (Colemak Baybayin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // E row; Numerals row, right side
	key <AE06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE07> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE08> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE09> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE12> { [	U1714,		U1714,		VoidSymbol,	VoidSymbol	] }; // âá (virama) âá (virama)

    // D row; QWERTY row, left side
	key <AD01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD02> { [	U170F,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Wa)
	key <AD03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD04> { [	U1709,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Pa)
	key <AD05> { [	U1704,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ga)
    // D row; QWERTY row, right side
	key <AD06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD07> { [	U170E,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (La)
	key <AD08> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AD09> { [	U170C,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ya)
	key <AD10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD12> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <BKSL> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

     // C row; Home row, left side
	key <AC01> { [	U1700,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (A)
	key <AC02> { [	U170D,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ra)
	key <AC03> { [	U1710,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Sa)
	key <AC04> { [	U1706,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ta)
	key <AC05> { [	U1707,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Da)
    // C row; Home row, right side
	key <AC06> { [	U1711,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ha)
	key <AC07> { [	U1708,		U1705,		VoidSymbol,	VoidSymbol	] }; // á (Na) á (Nga)
	key <AC08> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AC09> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AC10> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AC11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB05> { [	U170A,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ba)
    // B row; Lower row, right side
	key <AB06> { [	U1703,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ka)
	key <AB07> { [	U170B,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ma)
	key <AB08> { [	U1735,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // áµ (comma)
	key <AB09> { [	U1736,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á¶ (period)
	key <AB10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Dvorak Simplified (Latin) version
// http://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â ~ Ìâ â ! Â¡ â @ Â¤ â # Â£ â $ â¬ â % Â° â ^ Ìâ â & â â * â â ( â â ) â â {   â }   â â« Bak â
// â ` Ìâ â 1 Â¹ â 2 Â² â 3 Â³ â 4 Â¼ â 5 Â½ â 6 Â¾ â 7 â â 8 â â 9 â â 0 â â [   â ]   â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â " Ìâ â < Ì¨â â > â£ â P   â Y   â F Âª â G   â C Â¢ â R Â¶ â L   â ? Â¿ â + â â | Æ â
// âTab â¹  â ' Ìâ â , Ì§â â . â¦ â p â± â y Â¥ â f   â g   â c Â© â r Â® â l   â / Ã· â = Â± â \ É â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â A Ã â O Ã â E Å â U   â I Ä° â D   â H   â T   â N Ã â S   â _ âÍ   â Enter    â
// âCaps â¬  â a Ã¦ â o Ã¸ â e Å â u   â i Ä± â d   â h   â t â¢ â n Ã± â s Â§ â - Â¬ â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â   Â¦ â :   â Q   â J   â K   â X Â· â B â â M Âº â W   â V â â Z Â» â           â
// âShift â§â     â ;   â q   â j   â k   â x Ã â b â â m Âµ â w   â v â â z Â« âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space             Space â£ â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space             Space â£ âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "dvorak" {

    name[Group1]= "Filipino (Dvorak Latin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	U0060,		U007E,		U0300,		U0303		] }; // ` ~ Ìâ Ìâ (combining grave accent) (combining tilde)
	key <AE01> { [	U0031,		U0021,		U00B9,		U00A1		] }; // 1 ! Â¹ Â¡
	key <AE02> { [	U0032,		U0040,		U00B2,		U00A4		] }; // 2 @ Â² Â¤
	key <AE03> { [	U0033,		U0023,		U00B3,		U00A3		] }; // 3 # Â³ Â£
	key <AE04> { [	U0034,		U0024,		U00BC,		U20AC		] }; // 4 $ Â¼ â¬
	key <AE05> { [	U0035,		U0025,		U00BD,		U00B0		] }; // 5 % Â½ Â°
    // E row; Numerals row, right side
	key <AE06> { [	U0036,		U005E,		U00BE,		U0302		] }; // 6 ^ Â¾ Ìâ (combining circumflex accent)
	key <AE07> { [	U0037,		U0026,		U215B,		U2190		] }; // 7 & â â
	key <AE08> { [	U0038,		U002A,		U215C,		U2192		] }; // 8 * â â
	key <AE09> { [	U0039,		U0028,		U215D,		U2191		] }; // 9 ( â â
	key <AE10> { [	U0030,		U0029,		U215E,		U2193		] }; // 0 ) â â
	key <AE11> { [	U005B,		U007B,		VoidSymbol,	VoidSymbol	] }; // [ {
	key <AE12> { [	U005D,		U007D,		VoidSymbol,	VoidSymbol	] }; // ] }

    // D row; Upper row, left side
	key <AD01> { [	U0027,		U0022,		U0301,		U030B		] }; // ' " Ìâ Ìâ (combining acute accent) (combining double-acute accent)
	key <AD02> { [	U002C,		U003C,		U0327,		U0328		] }; // , < Ì§â Ì¨â (combining cedilla) (combining ogonek)
	key <AD03> { [	U002E,		U003E,		U2026,		U2423		] }; // . > â¦ â£
	key <AD04> { [	U0070,		U0050,		U20B1,		VoidSymbol	] }; // p P â±
	key <AD05> { [	U0079,		U0059,		U00A5,		VoidSymbol	] }; // y Y Â¥
    // D row; Upper row, right side
	key <AD06> { [	U0066,		U0046,		VoidSymbol,	U00AA		] }; // f F   Âª
	key <AD07> { [	U0067,		U0047,		VoidSymbol,	VoidSymbol	] }; // g G
	key <AD08> { [	U0063,		U0043,		U00A9,		U00A2		] }; // c C Â© Â¢
	key <AD09> { [	U0072,		U0052,		U00AE,		U00B6		] }; // r R Â® Â¶
	key <AD10> { [	U006C,		U004C,		VoidSymbol,	VoidSymbol	] }; // l L
	key <AD11> { [	U002F,		U003F,		U00F7,		U00BF		] }; // / ? Ã· Â¿
	key <AD12> { [	U003D,		U002B,		U00B1,		U2213		] }; // = + Â± â
	key <BKSL> { [	U005C,		U007C,		U0259,		U018F		] }; // \ | É Æ

    // C row; Home row, left side
	key <AC01> { [	U0061,		U0041,		U00E6,		U00C6		] }; // a A Ã¦ Ã
	key <AC02> { [	U006F,		U004F,		U00F8,		U00D8		] }; // o O Ã¸ Ã
	key <AC03> { [	U0065,		U0045,		U0153,		U0152		] }; // e E Å Å
	key <AC04> { [	U0075,		U0055,		VoidSymbol,	VoidSymbol	] }; // u U
	key <AC05> { [	U0069,		U0049,		U0131,		U0130		] }; // i I Ä± Ä°
    // C row; Home row, right side
	key <AC06> { [	U0064,		U0044,		VoidSymbol,	VoidSymbol	] }; // d D
	key <AC07> { [	U0068,		U0048,		VoidSymbol,	VoidSymbol	] }; // h H
	key <AC08> { [	U0074,		U0054,		U2122,		VoidSymbol	] }; // t T â¢
	key <AC09> { [	U006E,		U004E,		U00F1,		U00D1		] }; // n N Ã± Ã
	key <AC10> { [	U0073,		U0053,		U00A7,		VoidSymbol	] }; // s S Â§
	key <AC11> { [	U002D,		U005F,		U00AC,		U0360		] }; // - _ Â¬ âÍ 

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	U00A6		] }; //       Â¦
	key <AB01> { [	U003B,		U003A,		VoidSymbol,	VoidSymbol	] }; // ; :
	key <AB02> { [	U0071,		U0051,		VoidSymbol,	VoidSymbol	] }; // q Q
	key <AB03> { [	U006A,		U004A,		VoidSymbol,	VoidSymbol	] }; // j J
	key <AB04> { [	U006B,		U004B,		VoidSymbol,	VoidSymbol	] }; // k K
	key <AB05> { [	U0078,		U0058,		U00D7,		U00B7		] }; // x X Ã Â·
    // B row; Lower row, right side
	key <AB06> { [	U0062,		U0042,		U201D,		U2019		] }; // b B â â
	key <AB07> { [	U006D,		U004D,		U00B5,		U00BA		] }; // m M Âµ Âº
	key <AB08> { [	U0077,		U0057,		VoidSymbol,	VoidSymbol	] }; // w W
	key <AB09> { [	U0076,		U0056,		U201C,		U2018		] }; // v V â â
	key <AB10> { [	U007A,		U005A,		U00AB,		U00BB		] }; // z Z Â« Â»

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


// Dvorak Simplified (Baybayin) version
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â     â     â     â     â     â     â     â     â     â     â     â     â     â â« Bak â
// â     â     â     â     â     â     â     â     â     â     â     â     â     â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â     â     â     â     â     â     â     â     â     â     â     â âá      â     â
// âTab â¹  â     â áµ          â á¶         â á    â á     â     â á     â     â á     â á    â     â âá       â     â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â     â á      â á     â á       â á    â     â     â     â á     â     â     â Enter    â
// âCaps â¬  â á     â âá      â âá      â âá      â âá      â á     â á    â á     â á     â á     â     â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â     â     â     â     â     â     â     â     â     â     â     â           â
// âShift â§â     â     â     â     â á     â     â á     â á    â á     â     â     âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space                     â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space                     âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
partial alphanumeric_keys
xkb_symbols "dvorak-bay" {

    name[Group1]= "Filipino (Dvorak Baybayin)";

//	ISO grouping:	|--------- Group1 ---------|	|--------- Group2 ---------|
//			Level1		Level2		Level3		Level4
//			Base		Shift		AltGr		AltGr+Shift

    // E row; Numerals row, left side
	key <TLDE> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE04> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // E row; Numerals row, right side
	key <AE06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE07> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE08> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE09> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AE12> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // D row; QWERTY row, left side
	key <AD01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD02> { [	U1735,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // áµ (comma)
	key <AD03> { [	U1736,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á¶ (period)
	key <AD04> { [	U1709,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Pa)
	key <AD05> { [	U170C,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ya)
    // D row; QWERTY row, right side
	key <AD06> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD07> { [	U1704,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ga)
	key <AD08> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD09> { [	U170D,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ra)
	key <AD10> { [	U170E,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (La)
	key <AD11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AD12> { [	U1714,		U1714,		VoidSymbol,	VoidSymbol	] }; // âá (virama) âá (virama)
	key <BKSL> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // C row; Home row, left side
	key <AC01> { [	U1700,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (A)
	key <AC02> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AC03> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
	key <AC04> { [	U1713,		U1702,		VoidSymbol,	VoidSymbol	] }; // âá (o/u) á (O/U)
	key <AC05> { [	U1712,		U1701,		VoidSymbol,	VoidSymbol	] }; // âá (e/i) á (E/I)
    // C row; Home row, right side
	key <AC06> { [	U1707,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Da)
	key <AC07> { [	U1711,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ha)
	key <AC08> { [	U1706,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ta)
	key <AC09> { [	U1708,		U1705,		VoidSymbol,	VoidSymbol	] }; // á (Na) á (Nga)
	key <AC10> { [	U1710,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Sa)
	key <AC11> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // B row; Lower row, left side
	key <AB00> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB01> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB02> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB03> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB04> { [	U1703,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ka)
	key <AB05> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
    // B row; Lower row, right side
	key <AB06> { [	U170A,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ba)
	key <AB07> { [	U170B,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Ma)
	key <AB08> { [	U170F,		VoidSymbol,	VoidSymbol,	VoidSymbol	] }; // á (Wa)
	key <AB09> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //
	key <AB10> { [	VoidSymbol,	VoidSymbol,	VoidSymbol,	VoidSymbol	] }; //

    // A row
	key <AA03> { [	U0020,		U0020,		U0020,		U0020		] }; // (space) (space) (space) (space)

    include "level3(ralt_switch)"
};


//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââ
// â     â     â     â     â     â     â     â     â     â     â     â     â     â â« Bak â
// â     â     â     â     â     â     â     â     â     â     â     â     â     â Space â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ¯ââââââ©
// â       â     â     â     â     â     â     â     â     â     â     â     â     â     â
// âTab â¹  â     â     â     â     â     â     â     â     â     â     â     â     â     â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â²âââââ·ââââââª
// â        â     â     â     â     â     â     â     â     â     â     â     â Enter    â
// âCaps â¬  â     â     â     â     â     â     â     â     â     â     â     â   â      â
// â£ââââââââ³â¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â»âââââââââââ«
// â       â     â     â     â     â     â     â     â     â     â     â     â           â
// âShift â§â     â     â     â     â     â     â     â     â     â     â     âShift â§    â
// â£ââââââââââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ·ââ³ââââ»ââââ³ââââââââ«
// â       âWin    â       â â£ Space             Space â£ â       âWin    â       â       â
// âCtrl   âSuper  âAlt    â â£ Space             Space â£ âAltGr â®âMeta   âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ»ââââââââ
//
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             // Urdu keymap
// Developed by:
// Zaeem Arshad <zaeem@linux.net.pk>
// Last update: 2004-03-12
// Notice:
// Alt-key combinations are yet to be put in. The unavailable keys are
// those which do not have a corresponding glyph in Unicode.

default  partial alphanumeric_keys
xkb_symbols "urd-phonetic" {

   name[Group1]= "Urdu (Pakistan)";

   key <TLDE> {  [     0x100064b  ,       0x100007E, 0x100200C     ]     };
   key <AE01> {  [     0x1000031  ,       0x1000021      ]     };
   key <AE02> {  [     0x1000032  ,       0x1000040      ]     };
   key <AE03> {  [     0x1000033  ,       0x1000023      ]     };
   key <AE04> {  [     0x1000034  ,       0x1000024      ]     };
   key <AE05> {  [     0x1000035  ,       0x1000025      ]     };
   key <AE06> {  [     0x1000036  ,       0x100005E      ]     };
   key <AE07> {  [     0x1000037  ,       0x1000026      ]     };
   key <AE08> {  [     0x1000038  ,       0x100002A      ]     };
   key <AE09> {  [     0x1000039  ,       0x1000029      ]     };
   key <AE10> {  [     0x1000030  ,       0x1000028      ]     };
   key <AE11> {  [     0x100002D  ,       0x100005F      ]     };
   key <AE12> {  [     0x100003D  ,       0x100002B      ]     };
   key <AD01> {  [     0x1000642  ,       0x1000652, 0x100200D     ]     };
   key <AD02> {  [     0x1000648  ,       0x1000624, 0x100200C     ]     };
   key <AD03> {  [     0x1000639  ,       0x1000670      ]     };
   key <AD04> {  [     0x1000631  ,       0x1000691      ]     };
   key <AD05> {  [     0x100062a  ,       0x1000679      ]     };
   key <AD06> {  [     0x10006d2  ,       0x100064E      ]     };
   key <AD07> {  [     0x1000621  ,       0x1000626      ]     };
   key <AD08> {  [     0x10006cc  ,       0x1000650      ]     };
   key <AD09> {  [     0x10006c1  ,       0x10006c3      ]     };
   key <AD10> {  [     0x100067e  ,       0x100064f      ]     };
   key <AD11> {  [     0x100005d  ,       0x100007D      ]     };
   key <AD12> {  [     0x100005b  ,       0x100007B      ]     };

   key <AC01> {  [     0x1000627  ,       0x1000622      ]     };
   key <AC02> {  [     0x1000633  ,       0x1000635      ]     };
   key <AC03> {  [     0x100062f  ,       0x1000688      ]     };
   key <AC04> {  [     0x1000641  ,       0x1000651      ]     };
   key <AC05> {  [     0x10006af  ,       0x100063a      ]     };
   key <AC06> {  [     0x100062D  ,       0x10006BE      ]     };
   key <AC07> {  [     0x100062c  ,       0x1000636      ]     };
   key <AC08> {  [     0x10006a9  ,       0x100062e      ]     };
   key <AC09> {  [     0x1000644  ,       0x1000654      ]     };
   key <AC10> {  [     0x100061b  ,       0x100003a      ]     };
   key <AC11> {  [     0x1000027  ,       0x1000022      ]     };
   key <BKSL> {  [     0x100005C  ,       0x100007C      ]     };

   key <LSGT> {  [           bar  ,       brokenbar      ]     };
   key <AB01> {  [     0x1000632  ,       0x1000630, 0x100200E      ]     };
   key <AB02> {  [     0x1000634  ,       0x1000698, 0x100202A      ]     };
   key <AB03> {  [     0x1000686  ,       0x100062b, 0x100202D      ]     };
   key <AB04> {  [     0x1000637  ,       0x1000638, 0x100202C      ]     };
   key <AB05> {  [     0x1000628  ,       0x100002e, 0x100202E      ]     };
   key <AB06> {  [     0x1000646  ,       0x10006ba, 0x100202B      ]     };
   key <AB07> {  [     0x1000645  ,       0x1000658, 0x100200F      ]     };
   key <AB08> {  [     0x100060c  ,       0x100003c      ]     };
   key <AB09> {  [     0x10006d4  ,       0x100003E      ]     };
   key <AB10> {  [     0x100002f  ,       0x100061f      ]     };

//   key <RALT> {  [ Mode_switch, Multi_key ] };

   include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "urd-crulp" {

   name[Group1]= "Urdu (Pakistan, CRULP)";
// www.crulp.org phonetic v1.1

   key <TLDE> {  [     0x100007E  ,       0x100064B      ]     };
   key <AE01> {  [     0x10006F1  ,       0x1000031, 0x1000021      ]     };
   key <AE02> {  [     0x10006F2  ,       0x1000032, 0x1000040      ]     };
   key <AE03> {  [     0x10006F3  ,       0x1000033, 0x1000023      ]     };
   key <AE04> {  [     0x10006F4  ,       0x1000034      ]     };
   key <AE05> {  [     0x10006F5  ,       0x1000035, 0x100066A      ]     };
   key <AE06> {  [     0x10006F6  ,       0x1000036      ]     };
   key <AE07> {  [     0x10006F7  ,       0x1000037, 0x1000026      ]     };
   key <AE08> {  [     0x10006F8  ,       0x1000038, 0x100002A      ]     };
   key <AE09> {  [     0x10006F9  ,       0x1000039, 0x1000029      ]     };
   key <AE10> {  [     0x10006F0  ,       0x1000030, 0x1000028      ]     };

   key <AE11> {  [     0x100002D  ,       0x100005F      ]     };
   key <AE12> {  [     0x100003D  ,       0x100002B      ]     };
   key <AD01> {  [     0x1000642  ,       0x1000652      ]     };
   key <AD02> {  [     0x1000648  ,       0x1000651, 0x1000602      ]     };
   key <AD03> {  [     0x1000639  ,       0x1000670, 0x1000656      ]     };
   key <AD04> {  [     0x1000631  ,       0x1000691, 0x1000613      ]     };
   key <AD05> {  [     0x100062a  ,       0x1000679, 0x1000614      ]     };
   key <AD06> {  [     0x10006d2  ,       0x100064E, 0x1000601      ]     };
   key <AD07> {  [     0x1000621  ,       0x1000626, 0x1000654      ]     };
   key <AD08> {  [     0x10006cc  ,       0x1000650, 0x1000611      ]     };
   key <AD09> {  [     0x10006c1  ,       0x10006c3      ]     };
   key <AD10> {  [     0x100067e  ,       0x100064f, 0x1000657      ]     };
   key <AD11> {  [     0x100005d  ,       0x100007D      ]     };
   key <AD12> {  [     0x100005b  ,       0x100007B      ]     };

   key <AC01> {  [     0x1000627  ,       0x1000622, 0x100FDF2      ]     };
   key <AC02> {  [     0x1000633  ,       0x1000635, 0x1000610      ]     };
   key <AC03> {  [     0x100062f  ,       0x1000688, 0x100FDFA      ]     };
   key <AC04> {  [     0x1000641  ,       0x1000651      ]     };
   key <AC05> {  [     0x10006af  ,       0x100063a      ]     };
   key <AC06> {  [     0x100062D  ,       0x10006BE, 0x1000612      ]     };
   key <AC07> {  [     0x100062c  ,       0x1000636, 0x100FDFB      ]     };
   key <AC08> {  [     0x10006a9  ,       0x100062e      ]     };
   key <AC09> {  [     0x1000644  ,       0x1000654      ]     };
   key <AC10> {  [     0x100061b  ,       0x100003a      ]     };
   key <AC11> {  [     0x1000027  ,       0x1000022      ]     };
   key <BKSL> {  [     0x100005C  ,       0x100007C      ]     };

   key <LSGT> {  [           bar  ,       brokenbar      ]     };
   key <AB01> {  [     0x1000632  ,       0x1000630, 0x100060F      ]     };
   key <AB02> {  [     0x1000634  ,       0x1000698, 0x100060E      ]     };
   key <AB03> {  [     0x1000686  ,       0x100062b, 0x1000603      ]     };
   key <AB04> {  [     0x1000637  ,       0x1000638      ]     };
   key <AB05> {  [     0x1000628  ,       0x100002e, 0x100FDFD      ]     };
   key <AB06> {  [     0x1000646  ,       0x10006ba, 0x1000600      ]     };
   key <AB07> {  [     0x1000645  ,       0x1000658      ]     };
   key <AB08> {  [     0x100060c  ,       0x100003c, 0x100003C      ]     };
   key <AB09> {  [     0x10006d4  ,       0x100066B, 0x100003E      ]     };
   key <AB10> {  [     0x100002f  ,       0x100061F      ]     };

//   key <RALT> {  [ Mode_switch, Multi_key ] };

   include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "urd-nla" {
   name[Group1]= "Urdu (Pakistan, NLA)";
// www.nla.gov.pk

   key <TLDE> {  [     0x1000060  ,       0x100007E, 0x100200C     ]     };
   key <AE01> {  [     0x1000031  ,       0x1000021      ]     };
   key <AE02> {  [     0x1000032  ,       0x1000040      ]     };
   key <AE03> {  [     0x1000033  ,       0x1000023      ]     };
   key <AE04> {  [     0x1000034  ,       0x1000024      ]     };
   key <AE05> {  [     0x1000035  ,       0x100066A      ]     };
   key <AE06> {  [     0x1000036  ,       0x100005E      ]     };
   key <AE07> {  [     0x1000037  ,       0x10006D6      ]     };
   key <AE08> {  [     0x1000038  ,       0x100066D      ]     };
   key <AE09> {  [     0x1000039  ,       0x1000029      ]     };
   key <AE10> {  [     0x1000030  ,       0x1000028      ]     };
   key <AE11> {  [     0x100002D  ,       0x100005F      ]     };
   key <AE12> {  [     0x100003D  ,       0x100002B      ]     };
   key <AD01> {  [     0x1000637  ,       0x1000638, 0x100200D      ]     };
   key <AD02> {  [     0x1000635  ,       0x1000636, 0x100200C      ]     };
   key <AD03> {  [     0x10006BE  ,       0x1000630      ]     };
   key <AD04> {  [     0x100062F  ,       0x1000688      ]     };
   key <AD05> {  [     0x1000679  ,       0x100062B      ]     };
   key <AD06> {  [     0x100067E  ,       0x1000651      ]     };
   key <AD07> {  [     0x100062A  ,       0x10006C3      ]     };
   key <AD08> {  [     0x1000628  ,       0x1000640      ]     };
   key <AD09> {  [     0x100062C  ,       0x1000686      ]     };
   key <AD10> {  [     0x100062D  ,       0x100062E      ]     };
   key <AD11> {  [     0x100005d  ,       0x100007D      ]     };
   key <AD12> {  [     0x100005b  ,       0x100007B      ]     };

   key <AC01> {  [     0x1000645  ,       0x1000698      ]     };
   key <AC02> {  [     0x1000648  ,       0x1000632      ]     };
   key <AC03> {  [     0x1000631  ,       0x1000691      ]     };
   key <AC04> {  [     0x1000646  ,       0x10006BA      ]     };
   key <AC05> {  [     0x1000644  ,       0x10006C2      ]     };
   key <AC06> {  [     0x10006C1  ,       0x1000621      ]     };
   key <AC07> {  [     0x1000627  ,       0x1000622      ]     };
   key <AC08> {  [     0x10006a9  ,       0x10006AF      ]     };
   key <AC09> {  [     0x10006CC  ,       0x100064A      ]     };
   key <AC10> {  [     0x100061b  ,       0x100003a      ]     };
   key <AC11> {  [     0x1000027  ,       0x1000022      ]     };
   key <BKSL> {  [     0x100005C  ,       0x100007C      ]     };

   key <LSGT> {  [            bar ,       brokenbar      ]     };
   key <AB01> {  [     0x1000642  ,       0x100200D, 0x100200E      ]     };
   key <AB02> {  [     0x1000641  ,       0x100200C, 0x100202A      ]     };
   key <AB03> {  [     0x10006D2  ,       0x10006D3, 0x100202D      ]     };
   key <AB04> {  [     0x1000633  ,       0x100200E, 0x100202C      ]     };
   key <AB05> {  [     0x1000634  ,       0x1000624, 0x100202E      ]     };
   key <AB06> {  [     0x100063A  ,       0x1000626, 0x100202B      ]     };
   key <AB07> {  [     0x1000639  ,       0x100200F, 0x100200F      ]     };
   key <AB08> {  [     0x100060c  ,       0x100003E      ]     };
   key <AB09> {  [     0x10006d4  ,       0x100003C      ]     };
   key <AB10> {  [     0x100002F  ,       0x100061f      ]     };

   include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "snd" {
   name[Group1]= "Sindhi";
// www.bhurgri.com

    key <TLDE> {  [       0x1002019,       0x1002018                 ]       };
    key <AE01> {  [               1,          exclam, 0x1000610      ]       };
    key <AE02> {  [               2,       0x1000670, 0x1000611      ]       };
    key <AE03> {  [               3,       0x1000621, 0x1000613      ]       };
    key <AE04> {  [               4,       0x1000621, 0x1000612      ]       };
    key <AE05> {  [               5,       0x1000621, 0x1002026      ]       };
    key <AE06> {  [               6,       0x1000621, 0x1002022      ]       };
    key <AE07> {  [               7,       0x10006FD                 ]       };
    key <AE08> {  [               8,        asterisk                 ]       };
    key <AE09> {  [               9,      parenright                 ]       };
    key <AE10> {  [               0,       parenleft                 ]       };
    key <AE11> {  [       0x100068F,       0x100005F, 0x100002D      ]       };
    key <AE12> {  [       0x100068C,            plus, 0x100003D      ]       };
    key <BKSL> {  [       0x100068D,       0x100067A, 0x100007C      ]       };

    key <AD01> {  [       0x1000642,       0x100064E, 0x100064B      ]       };
    key <AD02> {  [       0x1000635,       0x1000636, 0x100FDFA      ]       };
    key <AD03> {  [       0x100064A,       0x1000650, 0x1000656      ]       };
    key <AD04> {  [       0x1000631,       0x1000699, 0x100FDE6      ]       };
    key <AD05> {  [       0x100062A,       0x100067D, 0x1000629      ]       };
    key <AD06> {  [       0x100067F,       0x100062B, 0x100FDE5      ]       };
    key <AD07> {  [       0x1000639,       0x100063A, 0x100FDE3      ]       };
    key <AD08> {  [       0x10006B3,       0x10006BE, 0x100FDE4      ]       };
    key <AD09> {  [       0x1000648,       0x100064F, 0x1000657      ]       };
    key <AD10> {  [       0x100067E,       0x10006A6                 ]       };
    key <AD11> {  [       0x1000687,       0x1000683                 ]       };
    key <AD12> {  [       0x1000686,       0x1000684                 ]       };

    key <AC01> {  [       0x1000627,       0x1000622, 0x1000649      ]       };
    key <AC02> {  [       0x1000633,       0x1000634                 ]       };
    key <AC03> {  [       0x100062F,       0x100068A                 ]       };
    key <AC04> {  [       0x1000641,       0x10006A6                 ]       };
    key <AC05> {  [       0x10006AF,       0x10006AF                 ]       };
    key <AC06> {  [       0x1000647,       0x100062D, 0x10006C1      ]       };
    key <AC07> {  [       0x100062C,       0x100062C, 0x100FDFB      ]       };
    key <AC08> {  [       0x10006AA,       0x10006E1                 ]       };
    key <AC09> {  [       0x1000644,       0x100003A                 ]       };
    key <AC10> {  [       0x10006A9,       0x100061B                 ]       };
    key <AC11> {  [       0x10006B1,       0x1000640                 ]       };

    key <AB01> {  [       0x1000632,       0x1000630, 0x1000652      ]       };
    key <AB02> {  [       0x100062E,       0x1000651, 0x100200C      ]       };
    key <AB03> {  [       0x1000637,       0x1000638, 0x100200D      ]       };
    key <AB04> {  [       0x1000680,       0x1000621, 0x1000624      ]       };
    key <AB05> {  [       0x1000628,       0x100067B, 0x100FDE1      ]       };
    key <AB06> {  [       0x1000646,       0x10006BB, 0x100200E      ]       };
    key <AB07> {  [       0x1000645,       0x10006FE, 0x100FDF4      ]       };
    key <AB08> {  [       0x100060C,       0x100201C, 0x100200F      ]       };
    key <AB09> {  [          period,       0x100201D, 0x10006D4      ]       };
    key <AB10> {  [       0x1000626, Arabic_question_mark, 0x100002F ]       };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "ara" {
   name[Group1]= "Arabic (Pakistan)";

// NOTES:
//
// there is also combined shadda diacritis in AltGr position of simple
// diacritics fatha, fathatan, damma, dammatan, kasra and kasratan
// should a third state be added to Group2 ?
//
// How is this different from ara(basic)? --bernie

   key <TLDE> {  [     0x100064d  ,       0x100064b      ]     };
   key <AE01> {  [     0x10006F1  ,       0x1000021      ]     };
   key <AE02> {  [     0x10006F2  ,       0x1000003      ]     };
   key <AE03> {  [     0x10006F3  ,       0x100002f      ]     };
   key <AE04> {  [     0x10006F4  ,       0x1000626      ]     };
   key <AE05> {  [     0x10006F5  ,       0x1000003      ]     };
   key <AE06> {  [     0x10006F6  ,       0x10006d6      ]     };
   key <AE07> {  [     0x10006F7  ,       0x1000654      ]     };
   key <AE08> {  [     0x10006F8  ,       0x100064c      ]     };
   key <AE09> {  [     0x10006F9  ,       0x1000029      ]     };
   key <AE10> {  [     0x10006F0  ,       0x1000028      ]     };
   key <AE11> {  [     0x1000623  ,       0x1000651      ]     };
   key <AE12> {  [     0x1000624  ,       0x1000622      ]     };
   key <AD01> {  [     0x1000642  ,       0x1000652      ]     };
   key <AD02> {  [     0x1000648  ,       0x10000a3      ]     };
   key <AD03> {  [     0x1000639  ,       0x10000a5      ]     };
   key <AD04> {  [     0x1000631  ,       0x1000691      ]     };
   key <AD05> {  [     0x100062a  ,       0x1000679      ]     };
   key <AD06> {  [     0x10006d2  ,       0x1000601      ]     };
   key <AD07> {  [     0x1000621  ,       0x100060c      ]     };
   key <AD08> {  [     0x10006cc  ,       0x1000670      ]     };
   key <AD09> {  [     0x10006c1  ,       0x10006c3      ]     };
   key <AD10> {  [     0x100067e  ,       0x100064f      ]     };
   key <AD11> {  [     0x100005d  ,       0x1000670      ]     };
   key <AD12> {  [     0x100005b  ,       0x1000670      ]     };

   key <AC01> {  [     0x1000627  ,       0x1000653      ]     };
   key <AC02> {  [     0x1000633  ,       0x1000635      ]     };
   key <AC03> {  [     0x100062f  ,       0x1000688      ]     };
   key <AC04> {  [     0x1000641  ,       0x1000003      ]     };
   key <AC05> {  [     0x10006af  ,       0x100063a      ]     };
   key <AC06> {  [     0x10006be  ,       0x100062d      ]     };
   key <AC07> {  [     0x100062c  ,       0x1000636      ]     };
   key <AC08> {  [     0x10006a9  ,       0x100062e      ]     };
   key <AC09> {  [     0x1000644  ,       0x1000613      ]     };
   key <AC10> {  [     0x100061b  ,       0x100003a      ]     };
   key <AC11> {  [     0x1000670  ,       0x1000022      ]     };
   key <BKSL> {  [     0x100060e  ,       0x1000614      ]     };

   key <LSGT> {  [           bar  ,       brokenbar      ]     };
   key <AB01> {  [     0x1000632  ,       0x1000630      ]     };
   key <AB02> {  [     0x1000634  ,       0x1000698      ]     };
   key <AB03> {  [     0x1000686  ,       0x100062b      ]     };
   key <AB04> {  [     0x1000637  ,       0x1000638      ]     };
   key <AB05> {  [     0x1000628  ,       0x1000612      ]     };
   key <AB06> {  [     0x1000646  ,       0x10006ba      ]     };
   key <AB07> {  [     0x1000645  ,       0x1000003      ]     };
   key <AB08> {  [     0x100060c  ,       0x1000650      ]     };
   key <AB09> {  [     0x10006d4  ,       0x100064e      ]     };
   key <AB10> {  [     0x1000003  ,       0x100061f      ]     };
};

partial alphanumeric_keys
xkb_symbols "olpc" {

// Contact: Walter Bender <walter@laptop.org>

   include "pk(ara)"

   name[Group1]= "Urdu (Pakistan)";

   // Keys '~' - '='
   key <TLDE> {  [ 0x1000654, 0x100064B ] };
   key <AE01> {  [ 0x10006F1, 0x1000603 ] };
   key <AE02> {  [ 0x10006F2, 0x1000602 ] };
   key <AE03> {  [ 0x10006F3, 0x1000601 ] };
   key <AE04> {  [ 0x10006F4, 0x1000600 ] };
   key <AE05> {  [ 0x10006F5, 0x100060F ] };
   key <AE06> {  [ 0x10006F6, 0x100060E ] };
   key <AE07> {  [ 0x10006F7, 0x1000614 ] };
   key <AE08> {  [ 0x10006F8, 0x1000612 ] };
   key <AE09> {  [ 0x10006F9, 0x1000611 ] };
   key <AE10> {  [ 0x10006F0, 0x1000613 ] };
   key <AE11> {  [ minus,     0x1000610 ] };
   key <AE12> {  [ equal, plus ] };

   //Keys 'Q' - ']'
   key <AD01> {  [ 0x1000642, 0x1000652 ] };
   key <AD02> {  [ 0x1000648, 0x1000651 ] };
   key <AD03> {  [ 0x1000639, 0x1000670 ] };
   key <AD04> {  [ 0x1000631, 0x1000691 ] };
   key <AD05> {  [ 0x100062A, 0x1000679 ] };
   key <AD06> {  [ 0x10006D2, 0x100064E ] };
   key <AD07> {  [ 0x1000621, 0x1000626 ] };
   key <AD08> {  [ 0x10006CC, 0x1000650 ] };
   key <AD09> {  [ 0x10006C1, 0x10006C3 ] };
   key <AD10> {  [ 0x100067E, 0x100064F ] };
   key <AD12> {  [ 0x100FDFD, 0x100FDFA ] };
   key <AD11> {  [ 0x100FDF2, 0x100FDFB ] };

   // Keys 'A' - '''
   key <AC01> {  [ 0x1000627, 0x1000622 ] };
   key <AC02> {  [ 0x1000633, 0x1000635 ] };
   key <AC03> {  [ 0x100062F, 0x1000688 ] };
   key <AC04> {  [ 0x1000641 ] }; //shift key not available
   key <AC05> {  [ 0x10006AF, 0x100063A ] };
   key <AC06> {  [ 0x100062D, 0x10006BE ] };
   key <AC07> {  [ 0x100062C, 0x1000636 ] };
   key <AC08> {  [ 0x10006A9, 0x100062E ] };
   key <AC09> {  [ 0x1000644, 0x1000656 ] };
   key <AC10> {  [ 0x100061B, colon ] };
   key <AC11> {  [ quote, doublequote  ] };

   key <BKSL> { [  backslash, bar  ] };
   key <SPCE> { [  space  ] };

   // Keys: 'Z' - '/'
   key <AB01> {  [ 0x1000632, 0x1000622 ] };
   key <AB02> {  [ 0x1000634, 0x1000635 ] };
   key <AB03> {  [ 0x1000686, 0x1000688 ] };
   key <AB04> {  [ 0x1000637 ] }; //shift key unavailable
   key <AB05> {  [ 0x1000628, 0x100063A ] };
   key <AB06> {  [ 0x1000646, 0x10006BE ] };
   key <AB07> {  [ 0x1000645, 0x1000636 ] };
   key <AB08> {  [ 0x100060C, 0x100062E ] };
   key <AB09> {  [ 0x10006D4, 0x1000656 ] };
   key <AB10> {  [ slash,     0x100061F ] };

   include "group(olpc)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           // based on a keyboard map from an 'xkb/symbols/pl' file

default  partial alphanumeric_keys
xkb_symbols "basic" {

    // Visualisation and description: http://podziemie.net/xkb/pl
    // Contact: MichaÅ GÃ³rny <zrchos+freedesktop@gmail.com>

    include "latin"

    name[Group1]="Polish";

    key <AE01>	{ [         1,     exclam,     notequal,   exclamdown ]	};
    key <AE02>	{ [         2,         at,  twosuperior, questiondown ]	};
    key <AE04>	{ [         4,     dollar,         cent,   onequarter ]	};
    key <AE05>	{ [         5,    percent,     EuroSign,        U2030 ]	};
    key <AE06>	{ [         6, asciicircum,     onehalf,   logicaland ]	};
    key <AE07>	{ [         7,  ampersand,      section,        U2248 ]	};
    key <AE08>	{ [         8,   asterisk, periodcentered, threequarters ] };
    key <AE09>	{ [         9,  parenleft, guillemotleft,   plusminus ]	};
    key <AE10>	{ [         0, parenright, guillemotright,     degree ]	};
    key <AE11>	{ [     minus, underscore,       endash,       emdash ]	};

    key <AD01>	{ [         q,          Q,     Greek_pi,  Greek_OMEGA ]	};
    key <AD02>	{ [         w,          W,           oe,           OE ]	};
    key <AD03>	{ [         e,          E,      eogonek,      Eogonek ]	};
    key <AD04>	{ [         r,          R,    copyright,   registered ]	};
    key <AD05>	{ [         t,          T,       ssharp,    trademark ]	};
    key <AD08>	{ [         i,          I,   rightarrow,        U2194 ]	};
    key <AD09>	{ [         o,          O,       oacute,       Oacute ]	};

    key <AC01>	{ [         a,          A,      aogonek,      Aogonek ]	};
    key <AC02>	{ [         s,          S,       sacute,       Sacute ]	};
    key <AC04>	{ [         f,          F,           ae,           AE ]	};
    key <AC06>	{ [         h,          H, rightsinglequotemark, U2022 ] };
    key <AC07>	{ [         j,          J,        schwa,        SCHWA ]	};
    key <AC08>	{ [         k,          K,     ellipsis,  dead_stroke ]	};
    key <TLDE>	{ [     grave, asciitilde,      notsign,    logicalor ]	};

    key <AB01>	{ [         z,          Z,    zabovedot,    Zabovedot ]	};
    key <AB02>	{ [         x,          X,       zacute,       Zacute ]	};
    key <AB03>	{ [         c,          C,       cacute,       Cacute ]	};
    key <AB04>	{ [         v,          V, doublelowquotemark, leftsinglequotemark ] };
    key <AB05>	{ [         b,          B, rightdoublequotemark, leftdoublequotemark ] };
    key <AB06>	{ [         n,          N,       nacute,       Nacute ]	};
    key <AB07>	{ [         m,          M,           mu,     infinity ]	};
    key <AB08>	{ [     comma,       less, lessthanequal,    multiply ]	};
    key <AB09>	{ [    period,    greater, greaterthanequal, division ]	};

    key <SPCE>	{ [     space,      space, nobreakspace, nobreakspace ]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "legacy" {

    include "latin"

    name[Group1]="Polish (legacy)";

    key <AD03>	{ [         e,          E,      eogonek,      Eogonek ]	};
    key <AD07>  { [         u,          U,	EuroSign,     cent    ] };
    key <AD09>	{ [         o,          O,       oacute,       Oacute ]	};

    key <AC01>	{ [         a,          A,      aogonek,      Aogonek ]	};
    key <AC02>	{ [         s,          S,       sacute,       Sacute ]	};

    key <AB01>	{ [         z,          Z,    zabovedot,    Zabovedot ]	};
    key <AB02>	{ [         x,          X,       zacute,       Zacute ]	};
    key <AB03>	{ [         c,          C,       cacute,       Cacute ]	};
    key <AB06>	{ [         n,          N,       nacute,       Nacute ]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "qwertz" {

    include "latin(type3)"

    name[Group1]="Polish (qwertz)";

    key <AE01>	{ [         1,     exclam,   asciitilde,   exclamdown ]	};
    key <AE02>	{ [         2,   quotedbl,   dead_caron,    oneeighth ]	};
    key <AE03>	{ [         3, numbersign, dead_circumflex,  sterling ]	};
    key <AE04>	{ [         4,     dollar,   dead_breve,       dollar ]	};
    key <AE05>	{ [         5,    percent,       degree, threeeighths ]	};
    key <AE06>	{ [         6,  ampersand,  dead_ogonek,  fiveeighths ]	};
    key <AE07>	{ [         7,      slash,   dead_grave, seveneighths ]	};
    key <AE08>	{ [         8,  parenleft, dead_abovedot,   trademark ]	};
    key <AE09>	{ [         9, parenright,   dead_acute,    plusminus ]	};
    key <AE10>	{ [         0,      equal, dead_doubleacute,   degree ]	};
    key <AE11>	{ [      plus,   question, dead_diaeresis, questiondown ] };
    key <AE12>	{ [apostrophe,   asterisk, dead_cedilla,  dead_ogonek ]	};

    key <AD01>  { [         q,          Q ] };
    key <AD02>  { [         w,          W ] };
    key <AD03>	{ [         e,          E,     EuroSign,         cent ]	};
    key <AD11>	{ [ zabovedot,     nacute,     division, dead_abovering ] };
    key <AD12>	{ [    sacute,     cacute,     multiply,  dead_macron ]	};

    key <AC02>	{ [         s,          S,      dstroke,      section ]	};
    key <AC03>	{ [         d,          D,      Dstroke,          ETH ]	};
    key <AC04>  { [         f,          F ] };
    key <AC08>	{ [         k,          K,          kra,    ampersand ]	};
    key <AC09>	{ [         l,          L,      lstroke,      Lstroke ]	};
    key <AC10>	{ [   lstroke,    Lstroke,       dollar, dead_doubleacute ] };
    key <AC11>	{ [   aogonek,    eogonek,       ssharp,   dead_caron ]	};
    key <TLDE>	{ [  abovedot, dead_ogonek,     notsign,      notsign ]	};

    key <BKSL>	{ [    oacute,     zacute,   dead_grave,   dead_breve ]	};
    key <AB03>	{ [         c,          C,         cent,    copyright ]	};
    key <AB10>  { [     minus, underscore, dead_belowdot, dead_abovedot ] };

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

// Polish Dvorak keymaps
// by Rafal Rzepecki <divide@users.sf.net>

// The base keymap "pl" places Polish quotes on quotemark key and 
// moves the dead symbols from there to "1/!" key. If you are used to common 
// dead keys placement, you could use "pl_altquotes"; in this layout 
// dead keys remain in the old place, whereas Polish quotes are placed on the
// "1/!" key. If you do not use Polish quotes at all, you can use "pl_basic" map.

// Basic Polish keymap (without Polish quotes)
partial alphanumeric_keys
xkb_symbols "dvorak" {
    include "us(dvorak)"

    name[Group1] = "Polish (Dvorak)";

    key <AD08> { [	    c,	C,	cacute,	Cacute		]	};
    key <AD10> { [	    l,	L,     lstroke, Lstroke		]	};
    key <AC01> { [	    a,	A,     aogonek, Aogonek		]	};
    key <AC02> { [	    o,	O,      oacute, Oacute		]	};
    key <AC03> { [	    e,	E,     eogonek, Eogonek		]	};
    key <AC09> { [	    n,	N,      nacute, Nacute		]	};
    key <AC10> { [	    s,	S,      sacute, Sacute		]	};
    key <AB09> { [	    v,	V,      zacute, Zacute		]	};
    key <AB10> { [	    z,	Z,   zabovedot, Zabovedot	]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

// Default Polish keymap with Polish quotes on quotemark key
partial alphanumeric_keys
xkb_symbols "dvorak_quotes" {
    include "pl(dvorak)"

    name[Group1] = "Polish (Dvorak, Polish quotes on quotemark key)";

    key <AD01> { [  apostrophe,	quotedbl, doublelowquotemark, rightdoublequotemark	] };

    // Dead symbols moved to this key
    key <AE01> { [	    1,	exclam, dead_acute, dead_diaeresis 		]	};
};

// Polish keymap with Polish quotes on key "1/!"
partial alphanumeric_keys
xkb_symbols "dvorak_altquotes" {
    include "pl(dvorak)"

    name[Group1] = "Polish (Dvorak, Polish quotes on key 1)";

    key <AE01> { [	    1,	exclam, doublelowquotemark, rightdoublequotemark	]	};
};

// Polish Programmer Dvorak keymap  by Michal Nazarewicz <mina86@mina86.com>
// based on Programmer Dvorak  by Roland Kaufmann <rlndkfmn at gmail dot com>
//      and Polish Dvorak keymaps  by Rafal Rzepecki <divide@users.sf.net
//      and latin(basic)
//
// * Numbers are in shift position (like French).
// * Symbols have been placed in locations that give good
//   hand-alternation and finger rolling with symbols that usually
//   follows.
// * Polish diacritics on AltGr+"acelnosxz" (same as in basic pl(basic)).
// * Aditionaly, zacute on AltGr+"v" so that both zacute and zabovedot
//   next to each other same as in pl(basic).
// * Polish open and close quotes on AltGr+& (same location as in
//   pl(dvp_altquotes)).
// * English open quote on AltGr+k (same location as in latin(basic))
// * English/Polish close quote on AltGr+b (similar location as in
//   latin(basic) but moved right because AltGr+x is taken for zacute).
// * Polish open and close quote on AltGr+j.
//
// Those rules overwrite only the following rules from us(dvp):
// * ccedilla on AltGr+c
// * aring on Alt+a
// * oslash/Ooblique on Alt+o
// * ae on Alt+e
// * ntilde on Alt+n
//
partial alphanumeric_keys
xkb_symbols "dvp" {
    include "us(dvp)"

    name[Group1] = "Polish (programmer Dvorak)";

    //             Unmodified    Shift           AltGr            Shift+AltGr
    // symbols row, left side
    key <AE01> { [ ampersand,    percent,        doublelowquotemark, rightdoublequotemark ] };

    // symbols row, right side

    // upper row, left side

    // upper row, right side
    key <AD08> { [ c,            C,              cacute,          Cacute     ] };
    key <AD10> { [ l,            L,              lstroke,         Lstroke    ] };

    // home row, left side
    key <AC01> { [ a,            A,              aogonek,         Aogonek    ], type[Group1] = "EIGHT_LEVEL_ALPHABETIC" };
    key <AC02> { [ o,            O,              oacute,          Oacute     ] };
    key <AC03> { [ e,            E,              eogonek,         Eogonek    ] };

    // home row, right side
    key <AC09> { [ n,            N,              nacute,          Nacute     ] };
    key <AC10> { [ s,            S,              sacute,          Sacute     ] };

    // lower row, left side
    key <AB03> { [ j,            J,              doublelowquotemark, rightdoublequotemark ] };
    key <AB04> { [ k,            K,              leftdoublequotemark, leftsinglequotemark ] };
    key <AB05> { [ x,            X,              zacute,          Zacute     ] };

    // lower row, right side
    key <AB06> { [ b,            B,              rightdoublequotemark, rightsinglequotemark ] };
    key <AB09> { [ v,            V,              zacute,          Zacute     ] };
    key <AB10> { [ z,            Z,              zabovedot,       Zabovedot  ] };

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

// Silesian keyboard layout by Grzegorz Kulik <poslunsku@gmail.com>
// and PrzemysÅaw Buczkowski <przemub@yahoo.pl>.
// See http://poslunsku.eu/2012/07/slonsko-slabikorzowo-klawiatura-na-windows-i-ubuntu/
// for a description.

partial alphanumeric_keys
xkb_symbols "szl" {

    include "latin"

    name[Group1]="Silesian";

    key <AD01>  { [         q,          Q ] };
    key <AD02>  { [         w,          W ] };
    key <AD03>	{ [         e,          E,      atilde,      Atilde ]	};
    key <AD09>	{ [         o,          O,       ocircumflex,       Ocircumflex ]	};
    key <AD07>  { [         u,          U,       omacron,       Omacron ]        };
    key <AD10>	{ [         p,          P,       otilde,       Otilde ]	};

    key <AC01>	{ [         a,          A,      U014F,      U014E ]	};
    key <AC02>	{ [         s,          S,       sacute,       Sacute ]	};
    key <AC04>  { [         f,          F ] };

    key <AB01>	{ [         z,          Z,    zabovedot,    Zabovedot ]	};
    key <AB02>	{ [         x,          X,       zacute,       Zacute ]	};
    key <AB03>	{ [         c,          C,       cacute,       Cacute ]	};
    key <AB06>	{ [         n,          N,       nacute,       Nacute ]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "csb" {

    include "latin"

    name[Group1]="Kashubian";

    key <AD01>  { [         q,          Q ] };
    key <AD02>  { [         w,          W ] };
    key <AD03>	{ [         e,          E,      eacute,      Eacute ]	};
    key <AD04>	{ [         r,           R,      ediaeresis,      Ediaeresis ]	};
    key <AD06>      { [         y,          Y,      EuroSign,         cent ]        };
    key <AD07>	{ [          u,          U,       ugrave,       Ugrave ]	};
    key <AD08>	{ [         i,            I,       ograve,       Ograve ]	};
    key <AD09>	{ [         o,          O,       oacute,       Oacute ]	};
    key <AD10>	{ [         p,          P,       ocircumflex,       Ocircumflex ]	};

    key <AC01>	{ [         a,          A,      aogonek,      Aogonek ]	};
    key <AC02>	{ [         s,          S,      atilde,      Atilde ]	      };
    key <AC04>  { [         f,          F ] };
    key <AC09>	{ [         l,          L,      lstroke,      Lstroke ]      };

    key <AB01>	{ [         z,          Z,    zabovedot,    Zabovedot ]	};
    key <AB06>	{ [         n,          N,       nacute,       Nacute ]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

// Russian Polish-phonetic Dvorak
// by Adrian Dziubek <adrian.dziubek@gmail.com>
//
// This layout aims to enable Polish Dvorak users to type with Russian
// Cyrillic alphabet by using the sound correspondence between Polish and
// Russian languages.
//
// This keyboard should be intuitive. Please let me know, if my intuition
// lets You down.
//
// The guidelines used:
// - no Cyrillic symbols are placed on punctuation symbols,
// - visual similarities are ignored if there is a sound correspondence:
//   no Cyrillic_es on c, no Cyrillic_er on p, no Cyrillic_ha on x etc.,
// - the Latin symbols that have close sound correspondence (as read in Polish)
//   to Cyrillic symbols (as read in Russian) are mapped respectively:
//         * j -> Cyrillic_shorti,
//         * k -> Cyrillic_ka,
//         * b -> Cyrillic_be,
//         * m -> Cyrillic_em,
//         * w -> Cyrillic_ve,
//         * z -> Cyrillic_ze
//         * a -> Cyrillic_a,
//         * o -> Cyrillic_o,
//         * u -> Cyrillic_u,
//         * i -> Cyrillic_i,
//         * d -> Cyrillic_de,
//         * h -> Cyrillic_ha,
//         * t -> Cyrillic_te,
//         * n -> Cyrillic_en,
//         * s -> Cyrillic_es,
//         * p -> Cyrillic_pe,
//         * y -> Cyrillic_yeru,
//         * f -> Cyrillic_ef,
//         * g -> Cyrillic_ghe,
//         * c -> Cyrillic_tse,
//         * r -> Cyrillic_er,
//         * l -> Cyrillic_el,
// - ...and little more distant:
//         * AltGr + s (sacute) -> Cyrillic_sha,
//         * AltGr + z (zabovedot) -> Cyrillic_zhe,
//         * AltGr + c (cacute) -> Cyrillic_che,
// - the soft versions of Russian vowels are accessible through AltGr + vowel:
//         * AltGr + a -> Cyrillic_ya,
//         * AltGr + o -> Cyrillic_io,
//         * AltGr + u -> Cyrillic_yu,
// - ...except for Cyrillic_ie which is more frequently used than Cyrillic_e:
//         * AltGr + e -> Cyrillic_e,
//         * e -> Cyrillic_ie,
// - q is also mapped to Cyrillic_ya, following the US phonetic keyboard
//   choice, as Cyrillic_ya and Cyrillic_a are both often used:
//         * q -> Cyrillic_ya,
// - the soft and hard symbols that have no Polish counterparts are mapped
//   to rarely used in Polish x character:
//         * x -> Cyrillic_softsign
//         * AltGr + x -> Cyrillic_hardsign,
// - the soft sign is additionally available as AltGr + consonant combination
//   for every consonant that can be softened or separated by soft sign:
//         * AltGr + l -> Cyrillic_softsign,
//         * AltGr + d -> Cyrillic_softsign,
//         * AltGr + n -> Cyrillic_softsign,
//         * AltGr + r -> Cyrillic_softsign,
//         * AltGr + t -> Cyrillic_softsign,
//         * AltGr + p -> Cyrillic_softsign,
// - ...and also because of visual similarity under level3 b:
//         * AltGr + b -> Cyrillic_softsign,
//         * Shift + AltGr + b -> Cyrillic_hardsign,
// - the Cyrillic_shcha symbol is placed under AltGr + w (visual similarity):
//         * AltGr + w -> Cyrillic_shcha
// - v, also rarely unused in Polish is mapped like w:
//         * v -> Cyrillic_ve,
//
partial alphanumeric_keys
xkb_symbols "ru_phonetic_dvorak" {
   include "us(dvorak)"

   name[Group1] = "Russian (Poland, phonetic Dvorak)";

   // lower row
   key <AB02> { [ Cyrillic_ya, Cyrillic_YA ] };
   key <AB03> { [ Cyrillic_shorti, Cyrillic_SHORTI ] };
   key <AB04> { [ Cyrillic_ka, Cyrillic_KA ] };
   key <AB05> { [ Cyrillic_shcha, Cyrillic_SHCHA ] };
   key <AB06> { [ Cyrillic_be, Cyrillic_BE, Cyrillic_hardsign, Cyrillic_HARDSIGN ] };
   key <AB07> { [ Cyrillic_em, Cyrillic_EM ] };
   key <AB08> { [ Cyrillic_ve, Cyrillic_VE, Cyrillic_shcha, Cyrillic_SHCHA ] };
   key <AB09> { [ Cyrillic_ve, Cyrillic_VE, Cyrillic_shcha, Cyrillic_SHCHA ] };
   key <AB10> { [ Cyrillic_ze, Cyrillic_ZE, Cyrillic_zhe, Cyrillic_ZHE ] };
   // home row
   key <AC01> { [ Cyrillic_a, Cyrillic_A, Cyrillic_ya, Cyrillic_YA  ] };
   key <AC02> { [ Cyrillic_o, Cyrillic_O, Cyrillic_io, Cyrillic_IO ] };
   key <AC03> { [ Cyrillic_ie, Cyrillic_IE, Cyrillic_e, Cyrillic_E ] };
   key <AC04> { [ Cyrillic_u, Cyrillic_U, Cyrillic_yu, Cyrillic_YU  ] };
   key <AC05> { [ Cyrillic_i, Cyrillic_I ] };
   key <AC06> { [ Cyrillic_de, Cyrillic_DE, Cyrillic_softsign, Cyrillic_SOFTSIGN ] };
   key <AC07> { [ Cyrillic_ha, Cyrillic_HA ] };
   key <AC08> { [ Cyrillic_te, Cyrillic_TE, Cyrillic_softsign, Cyrillic_SOFTSIGN ] };
   key <AC09> { [ Cyrillic_en, Cyrillic_EN, Cyrillic_softsign, Cyrillic_SOFTSIGN ] };
   key <AC10> { [ Cyrillic_es, Cyrillic_ES, Cyrillic_sha, Cyrillic_SHA ] };
   // upper row
   key <AD04> { [ Cyrillic_pe, Cyrillic_PE, Cyrillic_softsign, Cyrillic_SOFTSIGN ] };
   key <AD05> { [ Cyrillic_yeru, Cyrillic_YERU ] };
   key <AD06> { [ Cyrillic_ef, Cyrillic_EF ] };
   key <AD07> { [ Cyrillic_ghe, Cyrillic_GHE ] };
   key <AD08> { [ Cyrillic_tse, Cyrillic_TSE, Cyrillic_che, Cyrillic_CHE ] };
   key <AD09> { [ Cyrillic_er, Cyrillic_ER, Cyrillic_softsign, Cyrillic_SOFTSIGN ] };
   key <AD10> { [ Cyrillic_el, Cyrillic_EL, Cyrillic_softsign, Cyrillic_SOFTSIGN ] };

   include "kpdl(comma)"

   include "level3(ralt_switch)"
};

// EXTRAS:

// A Polish keymap with a comprehensive set of quotes, dashes, and dead accents
// 
// See http://marcinwolinski.pl/keyboard/ for a description.
//
// ââââââ
// â 2 4â   2 = Shift,  4 = Level3 + Shift
// â 1 3â   1 = Normal, 3 = Level3
// ââââââ
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââââ
// â ~ ~ â ! ' â @ " â # Ë â $ Â¸ â % Ë â ^ ^ â & Ë â * Ë â ( Ì£ â ) Â° â _ Â¯ â + Ë â â« Back  â
// â ` ` â 1 Â¡ â 2 Â© â 3 â¢ â 4 Â§ â 5 â¬ â 6 Â¢ â 7 â â 8 Ã â 9 Ã· â 0 Â° â - â â = â â  space  â
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ³ââââââââ«
// â       â Q   â W   â E Ä â R   â T   â Y   â U   â I   â O Ã â P   â { Â« â } Â» â Enter â
// âTab â¹  â q   â w   â e Ä â r   â t   â y   â u   â i   â o Ã³ â p   â [ â¹ â ] âº â   â   â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââºâ      â
// â        â A Ä â S Å â D   â F   â G   â H   â J   â K   â L Å â : â â " â â | Â¶ â      â
// âCaps â¬  â a Ä â s Å â d   â f   â g   â h   â j   â k   â l Å â ; â â ' â â \   â      â
// â£âââââââââ¹âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ¬â´âââââ²â·ââââââ»âââââââ«
// â             â Z Å» â X Å¹ â C Ä â V   â B   â N Å â M   â < â â > Â· â ? Â¿ â             â
// âShift â§      â z Å¼ â x Åº â c Ä â v   â b   â n Å â m   â , â â . â¦ â / â âShift â§      â
// â£ââââââââ³ââââââ·ââ³ââââ·ââââ±ââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââ²ââ·ââââââââââââ»ââ³ââââââââ³ââââ
// â       â       â       â â£                               â½ â       â       â       â
// âCtrl   âMeta   âAlt    â â£           Space               â½ âAltGr â®âMenu   âCtrl   â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ

partial alphanumeric_keys
xkb_symbols "intl" {

    include "latin(intl)"

    name[Group1]="Polish (international with dead keys)";

    key <AD03>	{ [         e,          E,      eogonek,      Eogonek ]	};
    key <AD09>	{ [         o,          O,       oacute,       Oacute ]	};

    key <AC01>	{ [         a,          A,      aogonek,      Aogonek ]	};
    key <AC02>	{ [         s,          S,       sacute,       Sacute ]	};
    key <AC09>	{ [         l,          L,      lstroke,      Lstroke ]	};

    key <AB01>	{ [         z,          Z,    zabovedot,    Zabovedot ]	};
    key <AB02>	{ [         x,          X,       zacute,       Zacute ]	};
    key <AB03>	{ [         c,          C,       cacute,       Cacute ]	};
    key <AB06>	{ [         n,          N,       nacute,       Nacute ]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

// Polish Colemak
// by Tomek Piotrowski <tomek.piotrowski@atteo.com>
//
partial alphanumeric_keys
xkb_symbols "colemak" {
    include "us(colemak)"
    name[Group1]= "Polish (Colemak)";

    key <AB01> { [            z,            Z,       zabovedot,        Zabovedot ] };
    key <AB02> { [            x,            X, 	        zacute,           Zacute ] };
    key <AB03> { [            c,            C,          cacute,           Cacute ] };
    key <AC01> { [            a,            A,         aogonek,          Aogonek ] };
    key <AC03> { [            s,            S,          sacute,           Sacute ] };
    key <AC07> { [            n,            N,          nacute,           Nacute ] };
    key <AC08> { [            e,            E,         eogonek,          Eogonek ] };
    key <AC10> { [            o,            O,          oacute,           Oacute ] };
    key <AD07> { [            l,            L,         lstroke,          Lstroke ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
       xkb_symbols "sun_type6" {
       include "sun_vndr/pl(sun_type6)"
};

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin(type4)"
    name[Group1]="Portuguese";

    key <TLDE> { [     backslash,             bar,        notsign,          notsign ] };
    key <AE03> { [             3,      numbersign,       sterling,         sterling ] };
    key <AE04> { [             4,          dollar,        section,           dollar ] };
    key <AE11> { [    apostrophe,        question,      backslash,     questiondown ] };
    key <AE12> { [ guillemotleft,  guillemotright,   dead_cedilla,      dead_ogonek ] };

    key <AD11> { [          plus,        asterisk, dead_diaeresis,   dead_abovering ] };
    key <AD12> { [    dead_acute,      dead_grave,     dead_tilde,      dead_macron ] };
    key <BKSL> { [    dead_tilde, dead_circumflex,     dead_grave,       dead_breve ] };

    key <AC10> { [      ccedilla,        Ccedilla,     dead_acute, dead_doubleacute ] };
    key <AC11> { [     masculine,     ordfeminine,dead_circumflex,       dead_caron ] };

    key <LSGT> { [          less,         greater,      backslash,        backslash ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {

    include "pt(basic)"

    key <AD11> { [          plus,        asterisk, dead_diaeresis,   dead_diaeresis ] };
    key <AD12> { [    dead_acute,      dead_grave                                   ] };
    key <BKSL> { [    dead_tilde, dead_circumflex                                   ] };
};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {
    include "pt(Sundeadkeys)"
    name[Group1]="Portuguese (Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    include "pt(basic)"
    name[Group1]="Portuguese (eliminate dead keys)";

    key <AE12> { [ guillemotleft,  guillemotright,        cedilla,           ogonek ] };
    key <AD11> { [          plus,        asterisk,       quotedbl,         quotedbl ] };
    key <AD12> { [         acute,           grave                                   ] };
    key <BKSL> { [    asciitilde,     asciicircum                                   ] };
    key <AC10> { [      ccedilla,        Ccedilla,          acute,      doubleacute ] };
    key <AC11> { [     masculine,     ordfeminine,    asciicircum,            caron ] };
    key <AB10> { [         minus,      underscore,  dead_belowdot,         abovedot ] };
};

// Layout variant for Mac, by Ricardo Cabral <bfe00991@mail.telepac.pt>.
partial alphanumeric_keys
xkb_symbols "mac" {

    include "pt"
    name[Group1]= "Portuguese (Macintosh)";

    key <TLDE> { [         grave,      asciitilde,        notsign,          notsign ] };
    key <AE06> { [             6,       ampersand,  threequarters,      fiveeighths ] };
    key <AE08> { [             8,       parenleft,    bracketleft,        braceleft ] };
    key <AE09> { [             9,      parenright,   bracketright,       braceright ] };
    key <AE12> { [          plus,        asterisk, dead_diaeresis                   ] };
    key <AD11> { [     masculine,     ordfeminine                                   ] };
    key <BKSL> { [     backslash,             bar,     dead_grave,       dead_breve ] };
    key <AC11> { [    dead_tilde, dead_circumflex                                   ] };
};

partial alphanumeric_keys
xkb_symbols "mac_sundeadkeys" {

    include "pt(mac)"
    name[Group1]= "Portuguese (Macintosh, Sun dead keys)";

    key <AE12> { [          plus,        asterisk, dead_diaeresis,   dead_diaeresis ] };
    key <AD12> { [    dead_acute,      dead_grave                                   ] };
    key <AC11> { [    dead_tilde, dead_circumflex                                   ] };
};

partial alphanumeric_keys
xkb_symbols "mac_nodeadkeys" {

    include "pt(mac)"
    name[Group1]= "Portuguese (Macintosh, eliminate dead keys)";

    key <AE12> { [          plus,       asterisk,         quotedbl,        quotedbl ] };
    key <AD12> { [         acute,          grave                                    ] };
    key <AC11> { [    asciitilde,    asciicircum                                    ] };
};


//
// Portuguese Nativo layout.
//     This is a Dvorak-based layout, designed for the Portuguese language.
//
// Ari Caldeira    <ari@tecladobrasileiro.com.br>    2005-07-19
//
partial alphanumeric_keys
xkb_symbols "nativo" {

    name[Group1]="Portuguese (Nativo)";

// Numeric row
    key <TLDE> { [         plus,        asterisk,       dead_diaeresis,        plusminus ] };
    key <AE01> { [            1,          exclam,          onesuperior,       exclamdown ] };
    key <AE02> { [            2,        quotedbl,                   at,      twosuperior ] };
    key <AE03> { [            3,      numbersign,             sterling,    threesuperior ] };
    key <AE04> { [            4,          dollar,              section,       onequarter ] };
    key <AE05> { [            5,         percent,                 cent,       0x01002030 ] };
    key <AE06> { [            6,       ampersand,              notsign,        diaeresis ] };
    key <AE07> { [            7,           slash,            braceleft,       0x0100032D ] };
    key <AE08> { [            8,       parenleft,          bracketleft,       0x01000331 ] };
    key <AE09> { [            9,      parenright,         bracketright,        dead_horn ] };
    key <AE10> { [            0,           equal,           braceright,        dead_hook ] };
    key <AE11> { [    masculine,     ordfeminine,          dead_ogonek,       0x01000326 ] };
    key <AE12> { [         less,         greater,         dead_cedilla,   dead_abovering ] };

// Upper row
    key <AD01> { [   apostrophe,        question,               degree,     questiondown ] };
    key <AD02> { [        comma,       semicolon,           0x01000329,       0x01000315 ] };
    key <AD03> { [       period,           colon,           0x01002022,   periodcentered ] };
    key <AD04> { [            h,               H,            paragraph,        paragraph ] };
    key <AD05> { [            x,               X,             multiply,         division ] };
    key <AD06> { [            w,               W,               ubreve,           Ubreve ] };
    key <AD07> { [            l,               L,              lstroke,          Lstroke ] };
    key <AD08> { [            t,               T,            trademark,        trademark ] };
    key <AD09> { [            c,               C,            copyright,        copyright ] };
    key <AD10> { [            p,               P,                thorn,            THORN ] };
    key <AD11> { [   dead_tilde, dead_circumflex,           dead_caron, dead_doubleacute ] };
    key <AD12> { [        minus,      underscore,           0x01002015,       0x01000336 ] };

// Central row
    key <AC01> { [            i,               I,             idotless,        Iabovedot ] };
    key <AC02> { [            e,               E,             EuroSign,         EuroSign ] };
    key <AC03> { [            a,               A,                   ae,               AE ] };
    key <AC04> { [            o,               O,                   oe,               OE ] };
    key <AC05> { [            u,               U,               oslash,         Ooblique ] };
    key <AC06> { [            m,               M,                   mu,               mu ] };
    key <AC07> { [            d,               D,                  eth,              ETH ] };
    key <AC08> { [            s,               S,               ssharp,           ssharp ] };
    key <AC09> { [            r,               R,           registered,       registered ] };
    key <AC10> { [            n,               N,                  eng,              ENG ] };
    key <AC11> { [   dead_acute,      dead_grave,          dead_macron,       dead_breve ] };
    key <BKSL> { [    backslash,             bar,        dead_belowdot,    dead_abovedot ] };

// Lower row
    key <LSGT> { [ guillemotleft, guillemotright,           0x01002039,       0x0100203A ] };
    key <AB01> { [            y,               Y,                  yen,              yen ] };
    key <AB02> { [     ccedilla,        Ccedilla                                         ] };
    key <AB03> { [            j,               J,           0x01000292,       0x010001B7 ] };
    key <AB04> { [            b,               B,           apostrophe,         quotedbl ] };
    key <AB05> { [            k,               K,             currency,        brokenbar ] };
    key <AB06> { [            q,               Q,           0x01000259,       0x0100018F ] };
    key <AB07> { [            v,               V,   doublelowquotemark,   singlelowquotemark ] };
    key <AB08> { [            g,               G,  leftdoublequotemark,  leftsinglequotemark ] };
    key <AB09> { [            f,               F, rightdoublequotemark, rightsinglequotemark ] };
    key <AB10> { [            z,               Z,           0x0100201F,       0x0100201B ] };

    key <SPCE> { [        space,           space,         nobreakspace,     nobreakspace ] };

// Configures the use of the AltGr key
    include "level3(ralt_switch)"
};


//
// Portuguese Nativo layout for US keyboards.
//
// Ari Caldeira    <ari@tecladobrasileiro.com.br>    2005-07-19
//
partial alphanumeric_keys
xkb_symbols "nativo-us" {

    include "pt(nativo)"

    name[Group1]="Portuguese (Nativo for US keyboards)";

    key <AB01> { [            y,               Y,              ccedilla,        Ccedilla ] };
    key <AB02> { [ guillemotleft, guillemotright,           0x01002039,       0x0100203A ] };
};


//
// Portuguese Nativo layout for typing Esperanto.
//
// Ari Caldeira    <ari@tecladobrasileiro.com.br>    2005-07-19
//
partial alphanumeric_keys
xkb_symbols "nativo-epo" {

    include "pt(nativo)"

    name[Group1]="Esperanto (Portugal, Nativo)";

    key <AD04> { [            h,               H,          hcircumflex,      Hcircumflex ] };
    key <AD05> { [  ccircumflex,     Ccircumflex,                    x,                X ] };
    key <AD06> { [       ubreve,          Ubreve,                    w,                W ] };

    key <AB01> { [  jcircumflex,     Jcircumflex,                    y,                Y ] };
    key <AB02> { [  scircumflex,     Scircumflex,             ccedilla,         Ccedilla ] };
    key <AB06> { [  gcircumflex,     Gcircumflex,                    q,                Q ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/pt(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  //
// Complete set of Romanian keyboards as described in the new Romanian standard
// SR 13392:2004 adopted in December 2004 by ASRO, "Asociatia de Standardizare 
// din Romania".
// 
// The default mapping is the RO_US/Programmers layout because of the lack of 
// Romanian hardware keyboards. The primary standard layout is implemented as 
// the "std" variant. If you're determined to get cedillas as in ISO-8859-2  
// (and not commabelow accents as in ISO-8859-16) use the defined variants 
// "cedilla" for the default layout or "std_cedilla" for the standard one. 
// Pre-Vista MS compatible layout included (use the "winkeys" variant).
// 
// Created by Cristian Gafton, <gafton@redhat.com> (C) 2000
// Modified by Marius Andreiana, <mandreiana@yahoo.com> (C) 2001
// Completed by Misu Moldovan, <dumol@gnome.ro> (C) 2001, 2004-2008.
// v 1.4


default  partial alphanumeric_keys
xkb_symbols "basic" {
// This RO_US/Programmers layout, although the secondary layout in the 
// Romanian standard, has always been the "de facto" standard in the 
// Linux/Unix world. It is implemented here as the default layout and it's
// fully compatible with an US keyboard (Euro on AltGr+5 doesn't count).

    include "us"

    name[Group1]="Romanian";

    key <AE01> { [ 1,                 exclam,  dead_tilde		  ] };
    key <AE02> { [ 2,                     at,  dead_caron		  ] };
    key <AE03> { [ 3,             numbersign,  dead_circumflex 	  	  ] };
    key <AE04> { [ 4,                 dollar,  dead_breve		  ] };
    key <AE05> { [ 5,                percent,  dead_abovering		  ] };
    key <AE06> { [ 6,            asciicircum,  dead_ogonek		  ] };
    key <AE07> { [ 7,              ampersand,  dead_grave		  ] };
    key <AE08> { [ 8,               asterisk,  dead_abovedot		  ] };
    key <AE09> { [ 9,              parenleft,  dead_acute		  ] };
    key <AE10> { [ 0,             parenright,  dead_doubleacute	  	  ] };
    key <AE11> { [ minus,         underscore,  dead_diaeresis,     endash ] };
    key <AE12> { [ equal,               plus,  dead_cedilla,    plusminus ] };
    key <AD01> { [ q,                      Q,  acircumflex,   Acircumflex ] };
    key <AD02> { [ w,                      W,  ssharp	 	          ] };
    key <AD03> { [ e,                      E,  EuroSign  	          ] };
    key <AD05> { [ t,                      T,  0x100021b,       0x100021a ] };
    key <AD08> { [ i,                      I,  icircumflex,   Icircumflex ] };
    key <AD10> { [ p,                      P,  section 			  ] };
    key <AD11> { [ bracketleft,    braceleft,  doublelowquotemark 	  ] };
    key <AD12> { [ bracketright,  braceright,  rightdoublequotemark 	  ] };
    key <AC01> { [ a,                      A,  abreve,             Abreve ] };
    key <AC02> { [ s,                      S,  0x1000219,       0x1000218 ] };
    key <AC03> { [ d,                      D,  dstroke,  	  Dstroke ] };
    key <AC09> { [ l,                      L,  lstroke,  	  Lstroke ] };
    key <LSGT> { [ backslash,            bar                              ] };
    key <AB03> { [ c,                      C,  copyright 	       	  ] };
    key <AB08> { [ comma, 	        less,  guillemotleft	          ] };
    key <AB09> { [ period, 	     greater,  guillemotright 	          ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "cedilla" {
    // Variant of the basic layout with cedillas.
    // Implements S and T with cedilllas as in ISO-8859-2.
    // Included for compatibility reasons (this used to be the def variant).

    include "ro(basic)"

    name[Group1]="Romanian (cedilla)";

    key <AD05> { [ t,                      T,  tcedilla,	 Tcedilla ] };
    key <AC02> { [ s,                      S,  scedilla,	 Scedilla ] };
};

partial alphanumeric_keys
xkb_symbols "std" {
    // Primary layout in the new Romanian standard.
    // Implemented here as a variant because of the lack of hardware 
    // Romanian keyboards and because of the predilection of Romanian
    // X users towards the secondary layout from the new standard.

    include "us"

    name[Group1]="Romanian (standard)";

    key <TLDE> { [ doublelowquotemark, rightdoublequotemark, grave, asciitilde ] };
    key <AE01> { [ 1,                 exclam,  dead_tilde		  ] };
    key <AE02> { [ 2,                     at,  dead_caron		  ] };
    key <AE03> { [ 3,             numbersign,  dead_circumflex 	  	  ] };
    key <AE04> { [ 4,                 dollar,  dead_breve		  ] };
    key <AE05> { [ 5,                percent,  dead_abovering		  ] };
    key <AE06> { [ 6,            asciicircum,  dead_ogonek		  ] };
    key <AE07> { [ 7,              ampersand,  dead_grave		  ] };
    key <AE08> { [ 8,               asterisk,  dead_abovedot		  ] };
    key <AE09> { [ 9,              parenleft,  dead_acute		  ] };
    key <AE10> { [ 0,             parenright,  dead_doubleacute	  	  ] };
    key <AE11> { [ minus,         underscore,  dead_diaeresis,     endash ] };
    key <AE12> { [ equal,               plus,  dead_cedilla,    plusminus ] };
    key <AD03> { [ e,                      E,  EuroSign  	          ] };
    key <AD10> { [ p,                      P,  section 			  ] };
    key <AD11> { [ abreve, 	      Abreve,  bracketleft,     braceleft ] };
    key <AD12> { [ icircumflex,  Icircumflex,  bracketright,   braceright ] };
    key <BKSL> { [ acircumflex,  Acircumflex,  backslash,             bar ] };
    key <AC02> { [ s, 			   S,  ssharp			  ] };
    key <AC03> { [ d,                      D,  dstroke,  	  Dstroke ] };
    key <AC09> { [ l,                      L,  lstroke,  	  Lstroke ] };
    key <AC10> { [ 0x1000219,	   0x1000218,  semicolon, 	    colon ] };
    key <AC11> { [ 0x100021b,	   0x100021a,  apostrophe, 	 quotedbl ] };
    key <LSGT> { [ backslash,            bar                              ] };
    key <AB03> { [ c,                      C,  copyright 	       	  ] };
    key <AB08> { [ comma, 	   semicolon,  less, 	    guillemotleft ] };
    key <AB09> { [ period,             colon,  greater,    guillemotright ] };

    key <KPDL> { [ KP_Delete,   KP_Separator ] };

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "std_cedilla" {
    // Variant of the "std" layout using cedillas instead of commas.
    // It implements S and T with cedillas as in ISO-8859-2.
    // Included for compatibility reasons.

    include "ro(std)"

    name[Group1]="Romanian (standard cedilla)";

    key <AC10> { [ scedilla, 	    Scedilla ] };
    key <AC11> { [ tcedilla, 	    Tcedilla ] };
};


partial alphanumeric_keys
xkb_symbols "winkeys" {
    // Describes the differences between a very simple US/ASCII
    // keyboard and a simple Romanian keyboard.
    // Created by Manfred Pohler, <Manfred.Pohler@t-online.de> (C) 2003

    include "latin"

    name[Group1]="Romanian (WinKeys)";

    key <TLDE> { [ bracketright, bracketleft            ]       };

    key <AE01> { [            1,      exclam,  asciitilde, asciitilde   ] };
    key <AE02> { [            2,    quotedbl,          at,         at   ] };
    key <AE03> { [            3,  numbersign, asciicircum,asciicircum   ] };
    key <AE04> { [            4,    currency            ]       };
    key <AE05> { [            5,     percent,      degree,     degree   ] };
    key <AE06> { [            6,   ampersand            ]       };
    key <AE07> { [            7,       slash,       grave,      grave   ] };
    key <AE08> { [            8,   parenleft            ]       };
    key <AE09> { [            9,  parenright            ]       };
    key <AE10> { [            0,       equal            ]       };
    key <AE11> { [         plus,    question            ]       };
    key <AE12> { [   apostrophe,    asterisk            ]       };

    key <AD01> { [           q,           Q,    backslash,  backslash   ] };
    key <AD02> { [           w,           W,          bar,        bar   ] };
    key <AD03> { [           e,           E,     EuroSign,   EuroSign   ] };
    key <AD05> { [           t,           T             ]       };
    key <AD06> { [           z,           Z             ]       };
    key <AD07> { [           u,           U             ]       };
    key <AD08> { [           i,           I             ]       };
    key <AD11> { [      abreve,      Abreve,     division,   division   ] };
    key <AD12> { [ icircumflex, Icircumflex,     multiply,   multiply   ] };

    key <AC04> { [           f,           F             ]       };
    key <AC05> { [           g,           G             ]       };
    key <AC10> { [    scedilla,    Scedilla,       dollar,     dollar   ] };
    key <AC11> { [    tcedilla,    Tcedilla,       ssharp,     ssharp   ] };

    key <AB01> { [           y,           Y             ]       };
    key <AB05> { [           b,           B,    braceleft,  braceleft   ] };
    key <AB06> { [           n,           N,   braceright, braceright   ] };
    key <AB07> { [           m,           M,      section,    section   ] };
    key <AB08> { [       comma,   semicolon,         less,       less   ] };
    key <AB09> { [      period,       colon,      greater,    greater   ] };
    key <AB10> { [       minus,  underscore             ]       };

    key <BKSL> { [ acircumflex, Acircumflex             ]       };

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial
xkb_symbols "crh_dobruja" {
    // Romania-specific Crimean Tatar (Crimean Turkish) Q layout.
    // This layout is not yet standard. Common Alt-Q and F layouts are now also 
    // available right next to this layout in the new language-centric UI.
    // ReÅat SABIQ <tilde.birlik @ gmail . com>, 2009, 2011
    // ÃzgÃ¼r Qarahan <qarahan @ gmail . com>, 2009

    include "tr(crh)"

    name[Group1]="Crimean Tatar (Dobruja Q)";

    key <AD02>	{ [         w,          W,         abreve,         Abreve ] };
    key <AD05>	{ [         t,          T,      0x100021b,      0x100021a ] };
    key <AD10>	{ [         p,          P,        section 	          ] };
    key <AC02>	{ [         s,          S,      0x1000219,      0x1000218 ] };
    key <AC07>	{ [    ibreve,     Ibreve,              j,              J ] };
    key <AB07>	{ [         m,          M,      trademark,      masculine ] };
};

// EXTRAS:

partial alphanumeric_keys
xkb_symbols "ergonomic" {
    // This layout is optimized for fast touch-typing in Romanian on a
    // US keyboard, and works by swapping out symbols infrequently used
    // in written Romanian (q,w,y,k) in favor of native ones, thus reducing
    // the need to use modifier keys.
    // Created by Gabriel Somlo, <somlo@cmu.edu> (C) 2011

    include "ro(basic)"

    name[Group1]="Romanian (ergonomic Touchtype)";

    key <AD01> { [ abreve,            Abreve,  q,                       Q ] };
    key <AD02> { [ 0x1000219,      0x1000218,  w,                       W ] };
    key <AD06> { [ 0x100021b,      0x100021a,  y,                       Y ] };
    key <AC01> { [ a,                      A,  acircumflex,   Acircumflex ] };
    key <AC08> { [ icircumflex,  Icircumflex,  k,                       K ] };
};


partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/ro(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   // Bosnian, Croatian, Serbian and Slovenian XKB keyboard mappings.
//
// Derived from "Danube" D.2 from 2003-05-12,
// which is available at http://srpski.org/dunav/.
//
// Original authors:
//  Danilo Segan (ÐÐ°Ð½Ð¸Ð»Ð¾ Ð¨ÐµÐ³Ð°Ð½) <danilo@kvota.net>
//  Chusslove Illich (Ð§Ð°ÑÐ»Ð°Ð² ÐÐ»Ð¸Ñ) <caslav.ilic@gmx.net>
//
// Danilo Segan <danilo@kvota.net>:
// - Modified for inclusion in XFree86.
// - Further modifications on 2005-08-18 to support Bosnian,
//   Croatian and Slovenian in xkeyboard-config.

default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]= "Serbian";

    include "rs(cyrlevel3)"
    include "rs(common)"
    include "rs(cyralpha)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "latin" {

    name[Group1]= "Serbian (Latin)";

    include "latin(type3)"
    include "rs(latalpha)"
    include "rs(latlevel3)"
    include "rs(common)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "yz" {

    include "rs(basic)"
    name[Group1]= "Serbian (Cyrillic, ZE and ZHE swapped)";

    key <AD06> { [ Cyrillic_zhe,    Cyrillic_ZHE ] }; // y
    key <AB01> { [ Cyrillic_ze,     Cyrillic_ZE  ] }; // z
};

hidden partial alphanumeric_keys
xkb_symbols "common" {
    // "Common" keys: keys that are the same
    // for both latin and cyrillic keyboards.

    key <TLDE> { [ grave,          asciitilde    ] };
    key <AE01> { [ 1,              exclam        ] };
    key <AE02> { [ 2,              quotedbl      ] };
    key <AE03> { [ 3,              numbersign    ] };
    key <AE04> { [ 4,              dollar        ] };
    key <AE05> { [ 5,              percent       ] };
    key <AE06> { [ 6,              ampersand     ] };
    key <AE07> { [ 7,              slash         ] };
    key <AE08> { [ 8,              parenleft     ] };
    key <AE09> { [ 9,              parenright    ] };
    key <AE10> { [ 0,              equal         ] };
    key <AE11> { [ apostrophe,     question      ] };
    key <AE12> { [ plus,           asterisk      ] };

    key <AB08> { [ comma,          semicolon     ] };
    key <AB09> { [ period,         colon         ] };
    key <AB10> { [ minus,          underscore    ] };

    include "kpdl(comma)"
};

hidden partial alphanumeric_keys
xkb_symbols "cyralpha" {

    key <AD01> { [ Cyrillic_lje,   Cyrillic_LJE  ] }; // q
    key <AD02> { [ Cyrillic_nje,   Cyrillic_NJE  ] }; // w
    key <AD03> { [ Cyrillic_ie,    Cyrillic_IE   ] }; // e
    key <AD04> { [ Cyrillic_er,    Cyrillic_ER   ] }; // r
    key <AD05> { [ Cyrillic_te,    Cyrillic_TE   ] }; // t
    key <AD06> { [ Cyrillic_ze,    Cyrillic_ZE   ] }; // y
    key <AD07> { [ Cyrillic_u,     Cyrillic_U    ] }; // u
    key <AD08> { [ Cyrillic_i,     Cyrillic_I    ] }; // i
    key <AD09> { [ Cyrillic_o,     Cyrillic_O    ] }; // o
    key <AD10> { [ Cyrillic_pe,    Cyrillic_PE   ] }; // p
    key <AD11> { [ Cyrillic_sha,   Cyrillic_SHA  ] }; // [ {
    key <AD12> { [ Serbian_dje,    Serbian_DJE   ] }; // ] }

    key <AC01> { [ Cyrillic_a,     Cyrillic_A    ] }; // a
    key <AC02> { [ Cyrillic_es,    Cyrillic_ES   ] }; // s
    key <AC03> { [ Cyrillic_de,    Cyrillic_DE   ] }; // d
    key <AC04> { [ Cyrillic_ef,    Cyrillic_EF   ] }; // f
    key <AC05> { [ Cyrillic_ghe,   Cyrillic_GHE  ] }; // g
    key <AC06> { [ Cyrillic_ha,    Cyrillic_HA   ] }; // h
    key <AC07> { [ Cyrillic_je,    Cyrillic_JE   ] }; // j
    key <AC08> { [ Cyrillic_ka,    Cyrillic_KA   ] }; // k
    key <AC09> { [ Cyrillic_el,    Cyrillic_EL   ] }; // l
    key <AC10> { [ Cyrillic_che,   Cyrillic_CHE  ] }; // ; :
    key <AC11> { [ Serbian_tshe,   Serbian_TSHE  ] }; // ' "
    key <BKSL> { [ Cyrillic_zhe,   Cyrillic_ZHE  ] }; // \ |

    key <AB01> { [ Cyrillic_zhe,   Cyrillic_ZHE  ] }; // z
    key <AB02> { [ Cyrillic_dzhe,  Cyrillic_DZHE ] }; // x
    key <AB03> { [ Cyrillic_tse,   Cyrillic_TSE  ] }; // c
    key <AB04> { [ Cyrillic_ve,    Cyrillic_VE   ] }; // v
    key <AB05> { [ Cyrillic_be,    Cyrillic_BE   ] }; // b
    key <AB06> { [ Cyrillic_en,    Cyrillic_EN   ] }; // n
    key <AB07> { [ Cyrillic_em,    Cyrillic_EM   ] }; // m
};


hidden partial alphanumeric_keys
xkb_symbols "latalpha" {

    key <AD11> { [ scaron,         Scaron        ] }; // [ {
    key <AD12> { [ dstroke,        Dstroke       ] }; // ] }

    key <AC10> { [ ccaron,         Ccaron        ] }; // ; :
    key <AC11> { [ cacute,         Cacute        ] }; // ' "
    key <BKSL> { [ zcaron,         Zcaron        ] }; // \ |
};

hidden partial alphanumeric_keys
xkb_symbols "twoletter" {

    // Letters which are written in latin transcription with two characters.
    key <AD01> { type[Group1] = "SEPARATE_CAPS_AND_SHIFT_ALPHABETIC",
               [ U1C9,           U1C8,          any, U1C7 ] }; // q
    key <AD02> { type[Group1] = "SEPARATE_CAPS_AND_SHIFT_ALPHABETIC",
               [ U1CC,           U1CB,          any, U1CA ] }; // w
    key <AB02> { type[Group1] = "SEPARATE_CAPS_AND_SHIFT_ALPHABETIC",
               [ U1C6,           U1C5,          any, U1C4 ] }; // x

    // Also replace letter Y with Zcaron, since Y is of no use any longer.
    key <AB01> { [ zcaron,         Zcaron        ] }; // z
};

hidden partial alphanumeric_keys
xkb_symbols "latlevel3" {
    key <TLDE> { [ any, any,   notsign,             notsign          ] }; // ` ~
    key <AE01> { [ any, any,   dead_tilde,          asciitilde       ] }; // 1 !
    key <AE02> { [ any, any,   dead_caron,          caron            ] }; // 2 @
    key <AE03> { [ any, any,   dead_circumflex,     asciicircum      ] }; // 3 #
    key <AE04> { [ any, any,   dead_breve,          breve            ] }; // 4 $
    key <AE05> { [ any, any,   dead_abovering,      degree           ] }; // 5 %
    key <AE06> { [ any, any,   dead_ogonek,         ogonek           ] }; // 6 ^
    key <AE07> { [ any, any,   dead_grave,          grave            ] }; // 7 &
    key <AE08> { [ any, any,   dead_abovedot,       abovedot         ] }; // 8 *
    key <AE09> { [ any, any,   dead_acute,          apostrophe       ] }; // 9 (
    key <AE10> { [ any, any,   dead_doubleacute,    doubleacute      ] }; // 0 )
    key <AE11> { [ any, any,   dead_diaeresis,      diaeresis        ] }; // - _
    key <AE12> { [ any, any,   dead_cedilla,        cedilla          ] }; // = +

    key <AD01> { [ any, any,   backslash,           Greek_OMEGA      ] }; // q
    key <AD02> { [ any, any,   bar,                 Lstroke          ] }; // w
    key <AD03> { [ any, any,   EuroSign,            EuroSign         ] }; // e
    key <AD04> { [ any, any,   paragraph,           registered       ] }; // r
    key <AD05> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,   tslash,              Tslash           ] }; // t
    key <AD06> { [ any, any,   leftarrow,           yen              ] }; // y
    key <AD07> { [ any, any,   downarrow,           uparrow          ] }; // u
    key <AD08> { [ any, any,   rightarrow,          idotless         ] }; // i
    key <AD09> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,   oslash,              Ooblique         ] }; // o
    key <AD10> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,   thorn,               THORN            ] }; // p
    key <AD11> { [ any, any,   division,            dead_abovering   ] }; // [
    key <AD12> { [ any, any,   multiply,            dead_macron      ] }; // ]

    key <AC01> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,   ae,                  AE               ] }; // a
    key <AC02> { [ any, any,   doublelowquotemark,  guillemotright   ] }; // s
    key <AC03> { [ any, any,   leftdoublequotemark, guillemotleft    ] }; // d
    key <AC04> { [ any, any,   bracketleft,         ordfeminine      ] }; // f
    key <AC05> { [ any, any,   bracketright,        ENG              ] }; // g
    key <AC06> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ any, any,   hstroke,             Hstroke          ] }; // h
    key <AC08> { [ any, any,   lstroke,             ampersand        ] }; // k
    key <AC09> { [ any, any,   lstroke,             Lstroke          ] }; // l
    key <AC10> { [ any, any,   dead_acute,          dead_doubleacute ] }; // ;
    key <AC11> { [ any, any,   ssharp,              dead_caron       ] }; // '
    key <BKSL> { [ any, any,   currency,            dead_breve       ] }; // \

    key <AB01> { [ any, any,   leftsinglequotemark, guillemotright   ] }; // z
    key <AB02> { [ any, any,   rightsinglequotemark,guillemotleft    ] }; // x
    key <AB03> { [ any, any,   cent,                copyright        ] }; // c
    key <AB04> { [ any, any,   at,                  grave            ] }; // v
    key <AB05> { [ any, any,   braceleft,           apostrophe       ] }; // b
    key <AB06> { [ any, any,   braceright,          braceright       ] }; // n
    key <AB07> { [ any, any,   asciicircum,         masculine        ] }; // m
    key <AB08> { [ any, any,   less,                multiply         ] }; // , <
    key <AB09> { [ any, any,   greater,             division         ] }; // . >
    key <AB10> { [ any, any,   emdash,              endash           ] }; // / ?
};

hidden partial alphanumeric_keys
xkb_symbols "cyrlevel3" {
    key <TLDE> { [ any, any,   degree,              notsign          ] }; // ` ~
    key <AE03> { [ any, any,   dead_circumflex                       ] }; // 3 #
    key <AE07> { [ any, any,   dead_grave                            ] }; // 7 &
    key <AE08> { [ any, any,   dead_doublegrave                      ] }; // 8 *
    key <AE09> { [ any, any,   dead_acute                            ] }; // 9 (
    key <AE10> { [ any, any,   dead_invertedbreve                    ] }; // 0 )
    key <AE11> { [ any, any,   dead_macron                           ] }; // - _

    key <AD01> { [ any, any,   backslash                             ] }; // q
    key <AD02> { [ any, any,   bar                                   ] }; // w
    key <AD03> { [ any, any,   EuroSign,            sterling         ] }; // e
    key <AD04> { [ any, any,   paragraph,           registered       ] }; // r
    key <AD05> { [ any, any,   ellipsis                              ] }; // t
    key <AD06> { [ any, any,   leftarrow,           yen              ] }; // y
    key <AD07> { [ any, any,   downarrow,           uparrow          ] }; // u
    key <AD08> { [ any, any,   rightarrow                            ] }; // i
    key <AD09> { [ any, any,   section                               ] }; // o
    key <AD11> { [ any, any,   division                              ] }; // [
    key <AD12> { [ any, any,   multiply                              ] }; // ]

    key <AC02> { [ any, any,   doublelowquotemark,  guillemotright   ] }; // s
    key <AC03> { [ any, any,   leftdoublequotemark, guillemotleft    ] }; // d
    key <AC04> { [ any, any,   bracketleft                           ] }; // f
    key <AC05> { [ any, any,   bracketright                          ] }; // g
    key <BKSL> { [ any, any,   currency                              ] }; // \

    key <AB01> { [ any, any,   leftsinglequotemark                   ] }; // z
    key <AB02> { [ any, any,   rightsinglequotemark                  ] }; // x
    key <AB03> { [ any, any,   cent,                copyright        ] }; // c
    key <AB04> { [ any, any,   at                                    ] }; // v
    key <AB05> { [ any, any,   braceleft                             ] }; // b
    key <AB06> { [ any, any,   braceright                            ] }; // n
    key <AB07> { [ any, any,   asciicircum                           ] }; // m
    key <AB08> { [ any, any,   less                                  ] }; // , <
    key <AB09> { [ any, any,   greater                               ] }; // . >
    key <AB10> { [ any, any,   emdash,              endash           ] }; // / ?
};

partial alphanumeric_keys
xkb_symbols "latinunicode" {
    // This mapping supports the Unicode characters 0x1c4-0x1cc (dz, lj, and nj
    // as single character). You get the title form with AltGr+Shift.

    include "rs(latin)"
    name[Group1]= "Serbian (Latin Unicode)";

    include "rs(twoletter)"
};

partial alphanumeric_keys
xkb_symbols "latinyz" {
    // For those who insist on using "english-position" Z and Y.

    include "rs(latin)"
    name[Group1]= "Serbian (Latin qwerty)";

    key <AD06> { [ y,              Y             ] }; // y
    key <AB01> { [ z,              Z             ] }; // z
};

partial alphanumeric_keys
xkb_symbols "latinunicodeyz" {
    // Unicode, ZHE and Z swapped.

    include "rs(latinunicode)"
    name[Group1]= "Serbian (Latin Unicode qwerty)";

    key <AD06> { [ zcaron,         Zcaron        ] }; // y
    key <AB01> { [ z,              Z             ] }; // z
};

xkb_symbols "alternatequotes" {
    // Another acceptable Â»pair of quotesÂ« for Serbian.

    include "rs(basic)"
    name[Group1]= "Serbian (Cyrillic with guillemets)";

    key <AC02> { [ any, any,   guillemotright    ] }; // s
    key <AC03> { [ any, any,   guillemotleft     ] }; // d
};

xkb_symbols "latinalternatequotes" {
    // Another acceptable Â»pair of quotesÂ« for Serbian.

    include "rs(latin)"
    name[Group1]= "Serbian (Latin with guillemets)";

    key <AC02> { [ any, any,   guillemotright    ] }; // s
    key <AC03> { [ any, any,   guillemotleft     ] }; // d
};

xkb_symbols "rue" {
    // Layout for Pannonian Rusyn (spoken mainly in Serbia and Croatia
    // by the Rusyn people), based on Serbian Cyrillic layout.
    // Authors:
    //   Ljubomir J. Papuga (ÐÑÐ±Ð¾Ð¼Ð¸Ñ Ð¯. ÐÐ°Ð¿ÑÒÐ°) <papuga@zoho.com>
    //   Mihajlo Hornjak <smeceiotpad@gmail.com>

    include "rs(basic)"
    name[Group1]= "Pannonian Rusyn";

    key <TLDE> { [ Cyrillic_softsign,         Cyrillic_SOFTSIGN         ] }; // `

    key <AD01> { [ Cyrillic_ya,               Cyrillic_YA               ] }; // q
    key <AD02> { [ Ukrainian_ie,              Ukrainian_IE              ] }; // w
    key <AD12> { [ Cyrillic_shcha,            Cyrillic_SHCHA            ] }; // ]

    key <AC05> { [ Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] }; // g
    key <AC07> { [ Cyrillic_shorti,           Cyrillic_SHORTI           ] }; // j
    key <AC11> { [ Cyrillic_ghe,              Cyrillic_GHE              ] }; // '

    key <AB01> { [ Cyrillic_yu,               Cyrillic_YU               ] }; // z
    key <AB02> { [ Ukrainian_yi,              Ukrainian_YI              ] }; // x
};

// EXTRAS:

xkb_symbols "combiningkeys" {
    // Raw combining characters instead of dead keys,
    // especially good for post-accenting texts.

    include "rs(basic)"
    name[Group1]= "Serbian (combining accents instead of dead keys)";

    key <AE03> { [ any, any,   U0302, dead_circumflex ] }; // 3, U0302 = COMBINING CIRCUMFLEX ACCENT
    key <AE07> { [ any, any,   U0300                  ] }; // 7, U0300 = COMBINING GRAVE ACCENT
    key <AE08> { [ any, any,   U030F                  ] }; // 8, U030F = COMBINING DOUBLE GRAVE ACCENT
    key <AE09> { [ any, any,   U0301                  ] }; // 9, U0301 = COMBINING ACUTE ACCENT
    key <AE10> { [ any, any,   U0311                  ] }; // 0, U0311 = COMBINING INVERTED BREVE
    key <AE11> { [ any, any,   U0304                  ] }; // -, U0304 = COMBINING MACRON
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  // Keyboard layouts for Russia.
// AEN <aen@logic.ru>
// 2001/12/23 by Leon Kanter <leon@blackcatlinux.com>
// 2005/12/09 Valery Inozemtsev <shrek@altlinux.ru>

// Windows layout
default  partial alphanumeric_keys
xkb_symbols "winkeys" {

    include "ru(common)"
    name[Group1]= "Russian";

    key <AE03> { [           3,  numerosign  ] };
    key <AE04> { [           4,   semicolon  ] };
    key <AE05> { [           5,     percent  ] };
    key <AE06> { [           6,       colon  ] };
    key <AE07> { [           7,    question  ] };
    key <AE08> { [           8,    asterisk, U20BD  ] };

    key <AB10> { [      period,       comma  ] };
    key <BKSL> { [   backslash,       slash  ] };
};

hidden partial alphanumeric_keys
xkb_symbols "common" {

    key <AE01> { [           1,      exclam  ] };
    key <AE02> { [           2,    quotedbl  ] };
    key <AE03> { [           3,  numbersign  ] };
    key <AE04> { [           4,    asterisk  ] };
    key <AE05> { [           5,       colon  ] };
    key <AE06> { [           6,       comma  ] };
    key <AE07> { [           7,      period  ] };
    key <AE08> { [           8,   semicolon  ] };
    key <AE09> { [           9,   parenleft  ] };
    key <AE10> { [           0,  parenright  ] };
    key <AE11> { [       minus,  underscore  ] };
    key <AE12> { [       equal,        plus  ] };
    key <BKSL> { [   backslash,         bar  ] };

    key <AB10> { [       slash,    question  ] };
    key <LSGT> { [       slash,         bar  ] };

    key <TLDE> { [       Cyrillic_io,       Cyrillic_IO  ] };
    key <AD01> { [   Cyrillic_shorti,   Cyrillic_SHORTI  ] };
    key <AD02> { [      Cyrillic_tse,      Cyrillic_TSE  ] };
    key <AD03> { [        Cyrillic_u,        Cyrillic_U  ] };
    key <AD04> { [       Cyrillic_ka,       Cyrillic_KA  ] };
    key <AD05> { [       Cyrillic_ie,       Cyrillic_IE  ] };
    key <AD06> { [       Cyrillic_en,       Cyrillic_EN  ] };
    key <AD07> { [      Cyrillic_ghe,      Cyrillic_GHE  ] };
    key <AD08> { [      Cyrillic_sha,      Cyrillic_SHA  ] };
    key <AD09> { [    Cyrillic_shcha,    Cyrillic_SHCHA  ] };
    key <AD10> { [       Cyrillic_ze,       Cyrillic_ZE  ] };
    key <AD11> { [       Cyrillic_ha,       Cyrillic_HA  ] };
    key <AD12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN  ] };

    key <AC01> { [       Cyrillic_ef,       Cyrillic_EF  ] };
    key <AC02> { [     Cyrillic_yeru,     Cyrillic_YERU  ] };
    key <AC03> { [       Cyrillic_ve,       Cyrillic_VE  ] };
    key <AC04> { [        Cyrillic_a,        Cyrillic_A  ] };
    key <AC05> { [       Cyrillic_pe,       Cyrillic_PE  ] };
    key <AC06> { [       Cyrillic_er,       Cyrillic_ER  ] };
    key <AC07> { [        Cyrillic_o,        Cyrillic_O  ] };
    key <AC08> { [       Cyrillic_el,       Cyrillic_EL  ] };
    key <AC09> { [       Cyrillic_de,       Cyrillic_DE  ] };
    key <AC10> { [      Cyrillic_zhe,      Cyrillic_ZHE  ] };
    key <AC11> { [        Cyrillic_e,        Cyrillic_E  ] };

    key <AB01> { [       Cyrillic_ya,       Cyrillic_YA  ] };
    key <AB02> { [      Cyrillic_che,      Cyrillic_CHE  ] };
    key <AB03> { [       Cyrillic_es,       Cyrillic_ES  ] };
    key <AB04> { [       Cyrillic_em,       Cyrillic_EM  ] };
    key <AB05> { [        Cyrillic_i,        Cyrillic_I  ] };
    key <AB06> { [       Cyrillic_te,       Cyrillic_TE  ] };
    key <AB07> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN  ] };
    key <AB08> { [       Cyrillic_be,       Cyrillic_BE  ] };
    key <AB09> { [       Cyrillic_yu,       Cyrillic_YU  ] };

    include "kpdl(comma)"
};

partial alphanumeric_keys
xkb_symbols "legacy" {

    include "ru(common)"
    name[Group1]= "Russian (legacy)";
};

partial alphanumeric_keys
xkb_symbols "olpc" {

    include "ru(common)"

    key <TLDE> { [  0x01000451,   0x01000401,       grave  ] };  // Ãâ, Ã
    key <AE03> { [           3,   numbersign,  0x01002116  ] };  // Ã¢ââ
    key <AE04> { [           4,       dollar,   semicolon  ] };
    key <AE06> { [           6,  asciicircum,       colon  ] };
    key <AE07> { [           7,    ampersand               ] };
    key <AE09> { [           9,    parenleft,       acute  ] };
    key <AC12> { [   backslash,          bar,       slash  ] };

    include "group(olpc)"
};

partial alphanumeric_keys
xkb_symbols "typewriter" {

    include "ru(common)"
    name[Group1]= "Russian (typewriter)";

    key <TLDE> { [         bar,        plus  ] };
    key <AE01> { [  numerosign,           1  ] };
    key <AE02> { [       minus,           2  ] };
    key <AE03> { [       slash,           3  ] };
    key <AE04> { [    quotedbl,           4  ] };
    key <AE05> { [       colon,           5  ] };
    key <AE06> { [       comma,           6  ] };
    key <AE07> { [      period,           7  ] };
    key <AE08> { [  underscore,           8  ] };
    key <AE09> { [    question,           9  ] };
    key <AE10> { [     percent,           0  ] };
    key <AE11> { [      exclam,       equal  ] };
    key <AE12> { [   semicolon,   backslash  ] };

    key <BKSL> { [  parenright,   parenleft  ] };

    key <AD12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN  ] };
    key <AB10> { [       Cyrillic_io,       Cyrillic_IO  ] };
};

partial alphanumeric_keys
xkb_symbols "typewriter-legacy" {

    include "ru(common)"
    name[Group1]= "Russian (typewriter, legacy)";

    key <TLDE> { [  apostrophe,    quotedbl  ] };
    key <AE01> { [      exclam,           1  ] };
    key <AE02> { [  numerosign,           2  ] };
    key <AE03> { [       slash,           3  ] };
    key <AE04> { [   semicolon,           4  ] };
    key <AE05> { [       colon,           5  ] };
    key <AE06> { [       comma,           6  ] };
    key <AE07> { [      period,           7  ] };
    key <AE08> { [  underscore,           8  ] };
    key <AE09> { [    question,           9  ] };
    key <AE10> { [     percent,           0  ] };

    key <BKSL> { [   parenleft,  parenright  ] };

    key <AD12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN  ] };
    key <AB10> { [       Cyrillic_io,       Cyrillic_IO  ] };
};

partial alphanumeric_keys
xkb_symbols "phonetic" {

    name[Group1]= "Russian (phonetic)";

    key <AE01> { [           1,      exclam  ] };
    key <AE02> { [           2,          at  ] };
    key <AE03> { [           3, Cyrillic_io  ] };
    key <AE04> { [           4, Cyrillic_IO  ] };
    key <AE05> { [           5, Cyrillic_hardsign  ] };
    key <AE06> { [           6, Cyrillic_HARDSIGN  ] };
    key <AE07> { [           7,   ampersand  ] };
    key <AE08> { [           8,    asterisk  ] };
    key <AE09> { [           9,   parenleft  ] };
    key <AE10> { [           0,  parenright  ] };
    key <AE11> { [       minus,  underscore  ] };

    key <AB09> { [      period,     greater  ] };
    key <AB10> { [       slash,    question  ] };
    key <AB08> { [       comma,        less  ] };
    key <AC10> { [   semicolon,       colon  ] };
    key <AC11> { [  apostrophe,    quotedbl  ] };
    key <LSGT> { [         bar,   brokenbar  ] };

    key <TLDE> { [       Cyrillic_yu,       Cyrillic_YU  ] };
    key <LatQ> { [       Cyrillic_ya,       Cyrillic_YA  ] };
    key <LatZ> { [       Cyrillic_ze,       Cyrillic_ZE  ] };
    key <LatS> { [       Cyrillic_es,       Cyrillic_ES  ] };
    key <LatA> { [        Cyrillic_a,        Cyrillic_A  ] };
    key <LatW> { [       Cyrillic_ve,       Cyrillic_VE  ] };
    key <LatC> { [      Cyrillic_tse,      Cyrillic_TSE  ] };
    key <LatX> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN  ] };
    key <LatD> { [       Cyrillic_de,       Cyrillic_DE  ] };
    key <LatE> { [       Cyrillic_ie,       Cyrillic_IE  ] };
    key <LatV> { [      Cyrillic_zhe,      Cyrillic_ZHE  ] };
    key <LatF> { [       Cyrillic_ef,       Cyrillic_EF  ] };
    key <LatT> { [       Cyrillic_te,       Cyrillic_TE  ] };
    key <LatR> { [       Cyrillic_er,       Cyrillic_ER  ] };
    key <LatN> { [       Cyrillic_en,       Cyrillic_EN  ] };
    key <LatB> { [       Cyrillic_be,       Cyrillic_BE  ] };
    key <LatH> { [       Cyrillic_ha,       Cyrillic_HA  ] };
    key <LatG> { [      Cyrillic_ghe,      Cyrillic_GHE  ] };
    key <LatY> { [     Cyrillic_yeru,     Cyrillic_YERU  ] };
    key <LatM> { [       Cyrillic_em,       Cyrillic_EM  ] };
    key <LatJ> { [   Cyrillic_shorti,   Cyrillic_SHORTI  ] };
    key <LatU> { [        Cyrillic_u,        Cyrillic_U  ] };
    key <LatK> { [       Cyrillic_ka,       Cyrillic_KA  ] };
    key <LatI> { [        Cyrillic_i,        Cyrillic_I  ] };
    key <LatO> { [        Cyrillic_o,        Cyrillic_O  ] };
    key <LatL> { [       Cyrillic_el,       Cyrillic_EL  ] };
    key <LatP> { [       Cyrillic_pe,       Cyrillic_PE  ] };

    key <AD11> { [      Cyrillic_sha,      Cyrillic_SHA  ] };
    key <AE12> { [      Cyrillic_che,      Cyrillic_CHE  ] };
    key <AD12> { [    Cyrillic_shcha,    Cyrillic_SHCHA  ] };
    key <BKSL> { [        Cyrillic_e,        Cyrillic_E  ] };
};

partial alphanumeric_keys
xkb_symbols "phonetic_winkeys" {

    include "ru(phonetic)"
    name[Group1]= "Russian (phonetic WinKeys)";

    key <LatX> { [       Cyrillic_ha,       Cyrillic_HA  ] };
    key <LatH> { [      Cyrillic_che,      Cyrillic_CHE  ] };
    key <AE12> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN  ] };
};

partial alphanumeric_keys
xkb_symbols "tt" {

    include "ru(winkeys)"
    name[Group1]= "Tatar";

    key.type[group1]="FOUR_LEVEL";

    key <TLDE> { [  0x010004bb,  0x010004ba,        Cyrillic_io,        Cyrillic_IO  ] };
    key <AD02> { [  0x010004e9,  0x010004e8,       Cyrillic_tse,       Cyrillic_TSE  ] };
    key <AD09> { [  0x010004d9,  0x010004d8,     Cyrillic_shcha,     Cyrillic_SHCHA  ] };
    key <AD12> { [  0x010004af,  0x010004ae,  Cyrillic_hardsign,  Cyrillic_HARDSIGN  ] };
    key <AC10> { [  0x010004a3,  0x010004a2,       Cyrillic_zhe,       Cyrillic_ZHE  ] };
    key <AB07> { [  0x01000497,  0x01000496,  Cyrillic_softsign,  Cyrillic_SOFTSIGN  ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "os_legacy" {

    include "ru(common)"
    name[Group1]= "Ossetian (legacy)";

    key <TLDE> { [  Cyrillic_e,  Cyrillic_E                              ] };
    key <AC07> { [  Cyrillic_o,  Cyrillic_O,  Cyrillic_io,  Cyrillic_IO  ] };
    key <AC11> { [  0x010004D5,  0x010004D4                              ] };
};

partial alphanumeric_keys
xkb_symbols "os_winkeys" {

    include "ru(winkeys)"
    name[Group1]= "Ossetian (WinKeys)";

    key <TLDE> { [  Cyrillic_e,  Cyrillic_E                              ] };
    key <AC07> { [  Cyrillic_o,  Cyrillic_O,  Cyrillic_io,  Cyrillic_IO  ] };
    key <AC11> { [  0x010004D5,  0x010004D4                              ] };
};

partial alphanumeric_keys
xkb_symbols "cv" {

    include "ru(winkeys)"
    name[Group1]= "Chuvash";

    key.type[group1]="FOUR_LEVEL";

    key <AD03> { [   Cyrillic_u,   Cyrillic_U,  0x010004f3,  0x010004f2 ] };
    key <AD05> { [  Cyrillic_ie,  Cyrillic_IE,  0x010004d7,  0x010004d6 ] };
    key <AC04> { [   Cyrillic_a,   Cyrillic_A,  0x010004d1,  0x010004d0 ] };
    key <AB03> { [  Cyrillic_es,  Cyrillic_ES,  0x010004ab,  0x010004aa ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "udm" {

    include "ru(winkeys)"
    name[Group1]= "Udmurt";

    key.type[group1]="FOUR_LEVEL";

    key <AE01> { [    question,      exclam,   1,   1  ] };
    key <AE02> { [   parenleft,    quotedbl,   2,   2  ] };
    key <AE03> { [  parenright,  numerosign,   3,   3  ] };
    key <AE04> { [       colon,   semicolon,   4,   4  ] };
    key <AE05> { [    asterisk,     percent,   5,   5  ] };
    key <AE06> { [  0x010004dd,  0x010004dc,   6,   6  ] };
    key <AE07> { [  0x010004e7,  0x010004e6,   7,   7  ] };
    key <AE08> { [  0x010004f5,  0x010004f4,   8,   8  ] };
    key <AE09> { [  0x010004e5,  0x010004e4,   9,   9  ] };
    key <AE10> { [  0x010004df,  0x010004de,   0,   0  ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "cv_latin" {

    include "us(alt-intl)"
    name[Group1]= "Chuvash (Latin)";

    key.type[group1]="FOUR_LEVEL";

    key <AD01> { [   q,   Q,   0x01000161,   0x01000160  ] };
    key <AD02> { [   w,   W,   udiaeresis,   Udiaeresis  ] };
    key <AD03> { [   e,   E,   0x01000115,   0x01000114  ] };
    key <AD07> { [   u,   U,   udiaeresis,   Udiaeresis  ] };
    key <AD08> { [   i,   I,   0x0100012d,   0x0100012c  ] };
    key <AD09> { [   o,   O,   odiaeresis,   Odiaeresis  ] };
    key <AC01> { [   a,   A,       abreve,       Abreve  ] };
    key <AC02> { [   s,   S,     scedilla,     Scedilla  ] };
    key <AC05> { [   g,   G,       gbreve,       Gbreve  ] };
    key <AC07> { [   j,   J,   0x01000131,   0x01000130  ] };
    key <AB03> { [   c,   C,     ccedilla,     Ccedilla  ] };

    include "level3(ralt_switch)"
};

// Komi language layout
// Vlad Shakhov <lumpen.intellectual@gmail.com>
// last changes 2007/10/23
partial alphanumeric_keys
xkb_symbols "kom" {

    include "ru(winkeys)"
    name[Group1]= "Komi";

    key.type[group1]="FOUR_LEVEL_ALPHABETIC";

    // cyrilllic o with diaeresis
    key <AC07> { [  Cyrillic_o,  Cyrillic_O,        U04E7,        U04E6  ] };

    // hard I as additional key for soft Cyrillic_I
    key <AB05> { [  Cyrillic_i,  Cyrillic_I,  Ukrainian_i,  Ukrainian_I  ] };

    include "level3(ralt_switch)"
};

// Yakut language layout
// 2008/04/23 Yakov Aleksandrov <bertjickty@yandex.ru>
// 2008/04/23 Anatoliy Zhozhikov <jav@sitc.ru>
// 2008/04/23 Aleksandr Varlamov
partial alphanumeric_keys
xkb_symbols "sah" {

    include "ru(winkeys)"
    name[Group1]= "Yakut";

    key.type[group1]="FOUR_LEVEL_ALPHABETIC";

    key <TLDE> { [  Cyrillic_io,      Cyrillic_IO,      U04EB,                U04EA                ] };
    key <AD01> { [  Cyrillic_shorti,  Cyrillic_SHORTI,  U048B,                U048A                ] };
    key <AD03> { [  Cyrillic_u,       Cyrillic_U,       Cyrillic_u_straight,  Cyrillic_U_straight  ] };
    key <AD04> { [  Cyrillic_ka,      Cyrillic_KA,      U04C4,                U04C3                ] };
    key <AD06> { [  Cyrillic_en,      Cyrillic_EN,      U04A5,                U04A4                ] };
    key <AD07> { [  Cyrillic_ghe,     Cyrillic_GHE,     U0495,                U0494                ] };
    key <AD10> { [  Cyrillic_ze,      Cyrillic_ZE,      U04E1,                U04E0                ] };
    key <AD11> { [  Cyrillic_ha,      Cyrillic_HA,      Cyrillic_shha,        Cyrillic_SHHA        ] };
    key <AC07> { [  Cyrillic_o,       Cyrillic_O,       Cyrillic_o_bar,       Cyrillic_O_bar       ] };
    key <AC10> { [  Cyrillic_zhe,     Cyrillic_ZHE,     U0461,                U0460                ] };
    key <AB02> { [  Cyrillic_che,     Cyrillic_CHE,     Cyrillic_u_macron,    Cyrillic_U_macron    ] };
    key <AB04> { [  Cyrillic_em,      Cyrillic_EM,      U04C8,                U04C7                ] };
    key <AB05> { [  Cyrillic_i,       Cyrillic_I,       Cyrillic_i_macron,    Cyrillic_I_macron    ] };

    include "level3(ralt_switch)"
};


//Kalmyk language layout
//based on the Kalmyk language layout: http://soft.oyrat.org/
//Nikolay Korneev <halmg@oyrat.org>
//Toli Miron <mirontoli@gmail.com>
partial alphanumeric_keys
xkb_symbols "xal" {

    include "ru(winkeys)"
    name[Group1]= "Kalmyk";

    key.type[group1]="FOUR_LEVEL";

    key <AE01> { [               question,                 exclam,             1  ] };
    key <AE02> { [             numerosign,               quotedbl,             2  ] };
    key <AE03> { [    Cyrillic_u_straight,    Cyrillic_U_straight,             3  ] };
    key <AE04> { [         Cyrillic_schwa,         Cyrillic_SCHWA,             4  ] };
    key <AE05> { [               asterisk,                percent,             5  ] };
    key <AE06> { [  Cyrillic_en_descender,  Cyrillic_EN_descender,             6  ] };
    key <AE07> { [         Cyrillic_o_bar,         Cyrillic_O_bar,             7  ] };
    key <AE08> { [          Cyrillic_shha,          Cyrillic_SHHA,             8  ] };
    key <AE09> { [ Cyrillic_zhe_descender, Cyrillic_ZHE_descender,             9  ] };
    key <AE10> { [              semicolon,                  colon,             0  ] };

    key <TLDE> { [              parenleft,             parenright,   Cyrillic_io,  Cyrillic_IO    ] };

    key <AD02> { [           Cyrillic_tse,           Cyrillic_TSE,        dollar  ] };
    key <AD03> { [             Cyrillic_u,             Cyrillic_U,      EuroSign  ] };
    key <AD04> { [            Cyrillic_ka,            Cyrillic_KA,    registered  ] };
    key <AD05> { [            Cyrillic_ie,            Cyrillic_IE,     trademark  ] };
    key <AD11> { [            Cyrillic_ha,            Cyrillic_HA,   bracketleft  ] };
    key <AD12> { [      Cyrillic_hardsign,      Cyrillic_HARDSIGN,  bracketright  ] };
    key <AC11> { [             Cyrillic_e,             Cyrillic_E,    apostrophe  ] };
    key <AB03> { [            Cyrillic_es,            Cyrillic_ES,     copyright  ] };
    key <AB08> { [            Cyrillic_be,            Cyrillic_BE,          less  ] };
    key <AB09> { [            Cyrillic_yu,            Cyrillic_YU,       greater  ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "dos" {

    include "ru(common)"
    name[Group1]= "Russian (DOS)";

    key <TLDE> { [   parenright,  parenleft   ] };
    key <AE04> { [   4,           currency    ] };
    key <AE09> { [   9,           question    ] };
    key <AE10> { [   0,           percent     ] };

    key <AB10> { [   Cyrillic_io, Cyrillic_IO ] };
};

partial alphanumeric_keys
xkb_symbols "bak" {

    include "ru(winkeys)"
    name[Group1]= "Bashkirian";

    key.type[group1]="FOUR_LEVEL";

    key <TLDE> { [  0x010004d9,  0x010004d8,  Cyrillic_io,   Cyrillic_IO  ] };
    key <AE01> { [      exclam,    quotedbl,            1,             1  ] };
    key <AE02> { [  0x010004e9,  0x010004e8,            2,             2  ] };
    key <AE03> { [  0x010004a1,  0x010004a0,            3,             3  ] };
    key <AE04> { [  0x01000493,  0x01000492,            4,             4  ] };
    key <AE05> { [  0x010004ab,  0x010004aa,            5,             5  ] };
    key <AE06> { [       colon,   semicolon,            6,             6  ] };
    key <AE07> { [  0x01000499,  0x01000498,            7,             7  ] };
    key <AE08> { [  0x010004bb,  0x010004ba,            8,             8  ] };
    key <AE09> { [    question,   parenleft,            9,             9  ] };
    key <AE10> { [  numerosign,  parenright,            0,             0  ] };
    key <AE11> { [       minus,     percent,        minus,    underscore  ] };
    key <AE12> { [  0x010004af,  0x010004ae,        equal,          plus  ] };
    key <BKSL> { [  0x010004a3,  0x010004a2,    backslash,         slash  ] };

    include "level3(ralt_switch)"
};

// Serbian characters are added as third-level symbols to Russian keyboard layout.
partial alphanumeric_keys
xkb_symbols "srp" {

    include "ru(common)"
    name[Group1]= "Serbian (Russia)";

    key <AE03> { [               3,      numerosign                ] };
    key <AE04> { [               4,       semicolon                ] };
    key <AE05> { [               5,         percent                ] };
    key <AE06> { [               6,           colon                ] };
    key <AE07> { [               7,        question                ] };
    key <AE08> { [               8,        asterisk                ] };
    key <AB10> { [          period,           comma                ] };
    key <BKSL> { [       backslash,           slash                ] };
    key <AD01> { [ Cyrillic_shorti, Cyrillic_SHORTI,  U458,  U408  ] };
    key <AD06> { [     Cyrillic_en,     Cyrillic_EN,  U45A,  U40A  ] };
    key <AC08> { [     Cyrillic_el,     Cyrillic_EL,  U459,  U409  ] };
    key <AC09> { [     Cyrillic_de,     Cyrillic_DE,  U45F,  U40F  ] };
    key <AC10> { [    Cyrillic_zhe,    Cyrillic_ZHE,  U452,  U402  ] };
    key <AB02> { [    Cyrillic_che,    Cyrillic_CHE,  U45B,  U40B  ] };

    include "level3(ralt_switch)"
};

// Mari language layout
// http://www.marlamuter.com/
// Last edit by Viatcheslav Kileev (slavakileev@yandex.ru)
partial alphanumeric_keys
xkb_symbols "chm" {

    include "ru(winkeys)"
    name[Group1]= "Mari";

    key.type[group1]="FOUR_LEVEL_ALPHABETIC";

    key <AC04> { [   Cyrillic_a,   Cyrillic_A,   U04D3,   U04D2  ] };
    key <AD03> { [   Cyrillic_u,   Cyrillic_U,   U04F1,   U04F0  ] };
    key <AC02> { [ Cyrillic_yeru, Cyrillic_YERU, U04F9,   U04F8  ] };
    key <AD06> { [   Cyrillic_en,  Cyrillic_EN,  U04A5,   U04A4  ] };
    key <AC07> { [   Cyrillic_o,   Cyrillic_O,   U04E7,   U04E6  ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "phonetic_azerty" {

    include "level3(ralt_switch)"

    name[Group1]= "Russian (phonetic azerty)";

     key <AE01>	{ [ ampersand,          1,  onesuperior,   exclamdown ]	};
     key <AE02>	{ [    eacute,          2,   asciitilde,    oneeighth ]	};
     key <AE03>	{ [  quotedbl,          3,   numbersign,     sterling ]	};
     key <AE04>	{ [apostrophe,          4,    braceleft,       dollar ]	};
     key <AE05>	{ [ parenleft,          5,  bracketleft, threeeighths ]	};
     key <AE06>	{ [     minus,          6,          bar,  fiveeighths ]	};
     key <AE07>	{ [    egrave,          7,        grave, seveneighths ]	};
     key <AE08>	{ [underscore,          8,    backslash,    trademark ]	};
     key <AE09>	{ [  ccedilla,          9,  asciicircum,    plusminus ]	};
     key <AE10>	{ [    agrave,          0,           at,       degree ]	};
     key <AE11>	{ [parenright,     degree, bracketright, questiondown ]	};
     key <AE12>	{ [     equal,       plus,   braceright,  dead_ogonek ]	};

     key <AB07>  { [     comma,   question,        acute,  doubleacute ] };
     key <AB08>	{ [ semicolon,     period, horizconnector,   multiply ]	};
     key <AB09>	{ [     colon,      slash, periodcentered,   division ]	};
     key <AB10>	{ [    exclam,    section, dead_belowdot, dead_abovedot ] };

     key <AC11>  { [    ugrave,    percent,  asciicircum,        caron ] };
     key	<LSGT> {	[	      bar,	 brokenbar	]	};

     key	<TLDE> {	[     Cyrillic_yu,     Cyrillic_YU	]	};
     key	<AC01> {	[     Cyrillic_ya,     Cyrillic_YA	]	}; // Q
     key	<AD02> {	[     Cyrillic_ze,     Cyrillic_ZE	]	}; // Z
     key	<LatS> {	[     Cyrillic_es,     Cyrillic_ES	]	};
     key	<AD01> {	[      Cyrillic_a,	Cyrillic_A	]	};
     key	<AB01> {	[     Cyrillic_ve,     Cyrillic_VE	]	}; // W
     key	<LatC> {	[    Cyrillic_tse,    Cyrillic_TSE	]	};
     key	<LatX> {	[Cyrillic_softsign,Cyrillic_SOFTSIGN	]	};
     key	<LatD> {	[     Cyrillic_de,     Cyrillic_DE	]	};
     key	<LatE> {	[     Cyrillic_ie,     Cyrillic_IE	]	};
     key	<LatV> {	[    Cyrillic_zhe,    Cyrillic_ZHE	]	};
     key	<LatF> {	[     Cyrillic_ef,     Cyrillic_EF	]	};
     key	<LatT> {	[     Cyrillic_te,     Cyrillic_TE	]	};
     key	<LatR> {	[     Cyrillic_er,     Cyrillic_ER	]	};
     key	<LatN> {	[     Cyrillic_en,     Cyrillic_EN	]	};
     key	<LatB> {	[     Cyrillic_be,     Cyrillic_BE	]	};
     key	<LatH> {	[     Cyrillic_ha,     Cyrillic_HA	]	};
     key	<LatG> {	[    Cyrillic_ghe,    Cyrillic_GHE	]	};
     key	<LatY> {	[   Cyrillic_yeru,   Cyrillic_YERU	]	};
     key	<AC10> {	[     Cyrillic_em,     Cyrillic_EM	]	}; // M
     key	<LatJ> {	[ Cyrillic_shorti, Cyrillic_SHORTI	]	};
     key	<LatU> {	[      Cyrillic_u,	Cyrillic_U	]	};
     key	<LatK> {	[     Cyrillic_ka,     Cyrillic_KA	]	};
     key	<LatI> {	[      Cyrillic_i,	Cyrillic_I	]	};
     key	<LatO> {	[      Cyrillic_o,	Cyrillic_O	]	};
     key	<LatL> {	[     Cyrillic_el,     Cyrillic_EL	]	};
     key	<LatP> {	[     Cyrillic_pe,     Cyrillic_PE	]	};

    key	<AD11> {	[    Cyrillic_sha,    Cyrillic_SHA	]	};
    key	<AE12> {	[    Cyrillic_che,    Cyrillic_CHE	]	};
    key	<AD12> {	[  Cyrillic_shcha,  Cyrillic_SHCHA	]	};
    key	<BKSL> {	[      Cyrillic_e,	Cyrillic_E	]	};
};

// Russian dvorak phonetic layout
// 2016-06-15 by Mart Lubbers
// contact: <mart@martlubbers.net>
partial alphanumeric_keys
xkb_symbols "phonetic_dvorak" {
    include "level3(ralt_switch)"

    name[Group1]= "Russian (phonetic dvorak)";

    key <TLDE> { [ Cyrillic_yu, Cyrillic_YU ] };

    key <AE01> { [ 1, exclam ] };
    key <AE02> { [ 2, at ] };
    key <AE03> { [ 3, Cyrillic_io ] };
    key <AE04> { [ 4, Cyrillic_IO ] };
    key <AE05> { [ 5, Cyrillic_hardsign ] };
    key <AE06> { [ 6, Cyrillic_HARDSIGN ] };
    key <AE07> { [ 7, ampersand ] };
    key <AE08> { [ 8, asterisk ] };
    key <AE09> { [ 9, parenleft ] };
    key <AE10> { [ 0, parenright ] };
    key <AE11> { [ Cyrillic_sha, Cyrillic_SHA ] };
    key <AE12> { [ Cyrillic_shcha, Cyrillic_SHCHA ] };
    key <BKSL> { [ Cyrillic_e, Cyrillic_E ] };

    key <AD01> { [ apostrophe, quotedbl, dead_acute, dead_diaeresis ] };
    key <AD02> { [ comma, less, dead_cedilla, dead_caron ] };
    key <AD03> { [ period, greater, dead_abovedot, periodcentered ] };
    key <AD04> { [ Cyrillic_pe, Cyrillic_PE ] };
    key <AD05> { [ Cyrillic_yeru, Cyrillic_YERU ] };
    key <AD06> { [ Cyrillic_ef, Cyrillic_EF ] };
    key <AD07> { [ Cyrillic_ghe, Cyrillic_GHE ] };
    key <AD08> { [ Cyrillic_tse, Cyrillic_TSE ] };
    key <AD09> { [ Cyrillic_er, Cyrillic_ER ] };
    key <AD10> { [ Cyrillic_el, Cyrillic_EL ] };
    key <AD11> { [ slash, question ] };
    key <AD12> { [ Cyrillic_che, Cyrillic_CHE ] };

    key <AC01> { [ Cyrillic_a, Cyrillic_A ] };
    key <AC02> { [ Cyrillic_o, Cyrillic_O ] };
    key <AC03> { [ Cyrillic_ie, Cyrillic_IE ] };
    key <AC04> { [ Cyrillic_u, Cyrillic_U ] };
    key <AC05> { [ Cyrillic_i, Cyrillic_I ] };
    key <AC06> { [ Cyrillic_de, Cyrillic_DE ] };
    key <AC07> { [ Cyrillic_ha, Cyrillic_HA ] };
    key <AC08> { [ Cyrillic_te, Cyrillic_TE ] };
    key <AC09> { [ Cyrillic_en, Cyrillic_EN ] };
    key <AC10> { [ Cyrillic_es, Cyrillic_ES ] };
    key <AC11> { [ minus, underscore ] };

    key <AB01> { [ semicolon, colon, dead_ogonek, dead_doubleacute ] };
    key <AB02> { [ Cyrillic_ya, Cyrillic_YA ] };
    key <AB03> { [ Cyrillic_shorti, Cyrillic_SHORTI ] };
    key <AB04> { [ Cyrillic_ka, Cyrillic_KA ] };
    key <AB05> { [Cyrillic_softsign,Cyrillic_SOFTSIGN ] };
    key <AB06> { [ Cyrillic_be, Cyrillic_BE ] };
    key <AB07> { [ Cyrillic_em, Cyrillic_EM ] };
    key <AB08> { [ Cyrillic_ve, Cyrillic_VE ] };
    key <AB09> { [ Cyrillic_zhe, Cyrillic_ZHE ] };
    key <AB10> { [ Cyrillic_ze, Cyrillic_ZE ] };
};

partial alphanumeric_keys
xkb_symbols "phonetic_fr" {

    include "fr"
    include "ru(phonetic_azerty)"

    name[Group1]= "Russian (phonetic French)";
};

// EXTRAS:

// Church Slavonic language layout
// based on the Russian standard keyboard
// by Aleksandr Andreev and Yuri Shardt
// last changes 2010/08/01; contact <aleksandr.andreev@gmail.com>
partial alphanumeric_keys
xkb_symbols "chu" {

    name[Group1]= "Church Slavonic";

    key <TLDE> { [  U0457,  U0407,  U0482,  U20DD  ] };  // Ñ Ð Ò e.g: Ð°â where the last is a combining ten thousands sign
    key <AE01> { [  U0461,  U0460,  U047D,  U047C  ] };  // Ñ¡ Ñ  Ñ½ Ñ¼
    key <AE02> { [  U0454,  U0404,  U0465,  U0464  ] };  // Ñ Ð Ñ¥ Ñ¤
    key <AE03> { [  U046F,  U046E,  U0469,  U0468  ] };  // Ñ¯ Ñ® Ñ© Ñ¨
    key <AE04> { [  U0471,  U0470,  U046D,  U046C  ] };  // Ñ± Ñ° Ñ­ Ñ¬
    key <AE05> { [  U0473,  U0472,  UA657,  UA656  ] };  // Ñ³ Ñ² iotified A
    key <AE06> { [  U0475,  U0474,  U0477,  U0476  ] };  // Ñµ Ñ´ Ñ· Ñ¶
    key <AE07> { [  U047B,  U047A,  UA64D,  UA64C  ] };  // Ñ» Ñº ê ê
    key <AE08> { [  U047F,  U047E,  U046B,  U046A  ] };  // Ñ¿ Ñ¾ Ñ« Ñª
    key <AE09> { [  U0455,  U0405,parenleft,U002A  ] };  // Ñ Ð ( *
    key <AE10> { [Cyrillic_u,Cyrillic_U,parenright,U0488]};  // Ñ Ð£ ) NB: for digraph Ouk, use Cyrillic_o + Cyrillic_u
    key <AE11> { [  U0483,  U0486,  U0487,  U005F  ] };  // Ð°Ò Ð°Ò Ð°Ò, _ (titlo, psili, pokrytie, underscore)
    key <AE12> { [  U0301,  U0300,  U0484,  UA67E  ] };  // Ð°Ì Ð°Ì Ð°Ò ê¾ (oxia, varia, kamora, kavyka)

    key <AD01> { [  Cyrillic_shorti,  Cyrillic_SHORTI,  U0456  ] };
    key <AD02> { [     Cyrillic_tse,     Cyrillic_TSE,  U2DF0  ] };
    key <AD03> { [            UA64B,            UA64A,  U2DF9  ] };  // Cyrillic monograph Uk (not U)!
    key <AD04> { [      Cyrillic_ka,      Cyrillic_KA,  U2DE6  ] };
    key <AD05> { [      Cyrillic_ie,      Cyrillic_IE,  U2DF7  ] };
    key <AD06> { [      Cyrillic_en,      Cyrillic_EN,  U2DE9  ] };
    key <AD07> { [     Cyrillic_ghe,     Cyrillic_GHE,  U2DE2  ] };
    key <AD08> { [     Cyrillic_sha,     Cyrillic_SHA,  U2DF2  ] };
    key <AD09> { [   Cyrillic_shcha,   Cyrillic_SHCHA,  U2DF3  ] };
    key <AD10> { [      Cyrillic_ze,      Cyrillic_ZE,  U2DE5  ] };
    key <AD11> { [      Cyrillic_ha,      Cyrillic_HA,  U2DEF  ] };
    key <AD12> { [Cyrillic_hardsign,Cyrillic_HARDSIGN,  UA67D  ] };  // Payerok
    key <BKSL> { [        backslash,            slash,  colon,  question ] };  // \ / : ? NB: for Slavonic question, use semicolon

    key <AC01> { [      Cyrillic_ef,      Cyrillic_EF          ] };
    key <AC02> { [    Cyrillic_yeru,    Cyrillic_YERU          ] };
    key <AC03> { [      Cyrillic_ve,      Cyrillic_VE,  U2DE1  ] };
    key <AC04> { [       Cyrillic_a,       Cyrillic_A,  U2DF6  ] };
    key <AC05> { [      Cyrillic_pe,      Cyrillic_PE,  U2DEB  ] };
    key <AC06> { [      Cyrillic_er,      Cyrillic_ER,  U2DEC  ] };
    key <AC07> { [       Cyrillic_o,       Cyrillic_O,  U2DEA  ] };
    key <AC08> { [      Cyrillic_el,      Cyrillic_EL,  U2DE7  ] };
    key <AC09> { [      Cyrillic_de,      Cyrillic_DE,  U2DE3  ] };
    key <AC10> { [     Cyrillic_zhe,     Cyrillic_ZHE,  U2DE4  ] };
    key <AC11> { [            U0463,            U0462,  U2DFA  ] };  // Yat

    key <AB01> { [            U0467,            U0466,  U2DFD  ] };  // Small Yus
    key <AB02> { [     Cyrillic_che,     Cyrillic_CHE,  U2DF1  ] };
    key <AB03> { [      Cyrillic_es,      Cyrillic_ES,  U2DED  ] };
    key <AB04> { [      Cyrillic_em,      Cyrillic_EM,  U2DE8  ] };
    key <AB05> { [       Cyrillic_i,       Cyrillic_I          ] };
    key <AB06> { [      Cyrillic_te,      Cyrillic_TE,  U2DEE  ] };
    key <AB07> { [Cyrillic_softsign,Cyrillic_SOFTSIGN          ] };
    key <AB08> { [      Cyrillic_be,      Cyrillic_BE,  U2DE0  ] };
    key <AB09> { [      Cyrillic_yu,      Cyrillic_YU,  U2DFB  ] };
    key <AB10> { [           period,            comma, semicolon, exclam  ] };
};


// RUU (Russian-Ukrainian United keyboard layout).
// This is a modified Russian standard keyboard, with the third level containing
// Ukrainian and Belorusian alphabetic letters and commonly used Unicode symbols.
// For a description see http://wiki.opennet.ru/RUU [in Russian].
// VasylÌ V. VercynsÌkyj <fuckel@ukr.net>
// last changes 2011/05/11
//
// âââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ¬ââââââ²ââââââââââ
// â ' ~ â ! â â " â â â â´ â ; â¬ â % â° â : â¤ â ? â¥ â * Ã â ( { â ) } â _ â â + Â± â â«       â
// â â  Ì â 1 Ã· â 2 Â¤ â 3 Â§ â 4 $ â 5 Â° â 6 < â 7 > â 8 â¢ â 9 [ â 0 ] â - â â = â  âBackspaceâ
// â¢ââââââ·ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââºââ³ââââââââ«
// â       â Ð   â Ð¦   â Ð£ Ð â Ð   â Ð Ð â Ð   â Ð Ò â Ð¨   â Ð©   â Ð   â Ð¥   â Ðª Ð â Enter â
// â Tab â¹ â Ð¹   â Ñ   â Ñ Ñ â Ðº Â® â Ðµ Ñ â Ð½   â Ð³ Ò â Ñ   â Ñ   â Ð·   â Ñ   â Ñ Ñ â   â   â
// â£ââââââââ»â±âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââ´â¬âââââºâ      â
// â Caps   â Ð¤   â Ð« Ð â Ð   â Ð   â Ð   â Ð    â Ð   â Ð   â Ð   â Ð   â Ð­ Ð â | Â¦ â      â
// â Lock â¬ â Ñ   â Ñ Ñ â Ð²   â Ð°   â Ð¿   â Ñ   â Ð¾   â Ð»   â Ð´   â Ð¶   â Ñ Ñ â / \ â      â
// â£âââââââââ»ââ±ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ¬ââââ´ââ²ââââ·ââââââ»âââââââ«
// â          â Ð¯   â Ð§   â Ð¡   â Ð   â Ð   â Ð¢   â Ð¬   â Ð â â Ð® â â , â¦ â                â
// â  Shift â§ â Ñ   â Ñ   â Ñ Â© â Ð¼   â Ð¸   â Ñ â¢ â Ñ Âµ â Ð± Â« â Ñ Â» â . / â     Shift â§    â
// â£ââââââââ³âââ»âââââ³â·ââââââ·â±âââââ´ââââââ´ââââââ´ââââââ´ââââââ´ââââââ´â²âââââ·âââ³âââ»âââââ³ââââââââ³ââââ
// â       â       â       â                                   â       â       â       â
// â Ctrl  â Meta  â  Alt  â                Space              âAltGr â®â Menu  â Ctrl  â
// âââââââââ»ââââââââ»ââââââââ¹ââââââââââââââââââââââââââââââââââââºââââââââ»ââââââââ»ââââââââ
partial alphanumeric_keys
xkb_symbols "ruu" {

    include "ru(common)"
    name[Group1]= "Russian (with Ukrainian-Belorussian layout)";

    key <TLDE> { [  U2019,  apostrophe,         U0301,  asciitilde  ] };  // Apostrophe and Stress symbol
    key <AE01> { [      1,      exclam,         U00F7,       U2248  ] };  // Division Sign and Almost Equal To
    key <AE02> { [      2,    quotedbl,      currency,    infinity  ] };
    key <AE03> { [      3,  numerosign,         U00A7,       U20B4  ] };  // Paragraph and Hryvnia sign
    key <AE04> { [      4,   semicolon,        dollar,    EuroSign  ] };
    key <AE05> { [      5,     percent,        degree,       U2030  ] };  // Per Mille Sign
    key <AE06> { [      6,       colon,          less,       U2264  ] };  // Less-Than Or Equal To
    key <AE07> { [      7,    question,       greater,       U2265  ] };  // Greater-Than Or Equal To
    key <AE08> { [      8,    asterisk, enfilledcircbullet,  U00D7  ] };  // Multiplication Sign
    key <AE09> { [      9,   parenleft,   bracketleft,   braceleft  ] };
    key <AE10> { [      0,  parenright,  bracketright,  braceright  ] };
    key <AE11> { [  minus,  underscore,        emdash,      endash  ] };
    key <AE12> { [  equal,        plus,      notequal,   plusminus  ] };

    key <AD03> { [        Cyrillic_u,        Cyrillic_U, Byelorussian_shortu, Byelorussian_SHORTU ] };
    key <AD04> { [       Cyrillic_ka,       Cyrillic_KA,    registered                        ] };  // Registered tm
    key <AD05> { [       Cyrillic_ie,       Cyrillic_IE,   Cyrillic_io,          Cyrillic_IO  ] };
    key <AD07> { [      Cyrillic_ghe,      Cyrillic_GHE, Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };
    key <AD10> { [       Cyrillic_ze,       Cyrillic_ZE,         U00B6                        ] };  // Pilcrow Sign
    key <AD12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN,  Ukrainian_yi,         Ukrainian_YI  ] };

    key <AC02> { [     Cyrillic_yeru,     Cyrillic_YERU,   Ukrainian_i,          Ukrainian_I  ] };
    key <AC11> { [        Cyrillic_e,        Cyrillic_E,  Ukrainian_ie,         Ukrainian_IE  ] };
    key <BKSL> { [             slash,               bar,     backslash,                U00A6  ] };  // Broken Bar

    key <AB03> { [       Cyrillic_es,       Cyrillic_ES,      copyright                       ] };
    key <AB06> { [       Cyrillic_te,       Cyrillic_TE,      trademark                       ] };
    key <AB07> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN,          U00B5                       ] };  // Micro Sign
    key <AB08> { [       Cyrillic_be,       Cyrillic_BE,  guillemotleft,  doublelowquotemark  ] };
    key <AB09> { [       Cyrillic_yu,       Cyrillic_YU, guillemotright, leftdoublequotemark  ] };
    key <AB10> { [            period,             comma,          slash,            ellipsis  ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/ru(sun_type6)"
};

// Apple layout
partial alphanumeric_keys
xkb_symbols "mac" {

    include "ru(common)"
    name[Group1]= "Russian (Macintosh)";

    key <LSGT> { [          less,      greater  ] };
    key <AE02> { [             2,     quotedbl  ] };
    key <AE03> { [             3,   numerosign  ] };
    key <AE04> { [             4,      percent  ] };
    key <AE05> { [             5,        colon  ] };
    key <AE06> { [             6,        comma  ] };
    key <AE07> { [             7,       period  ] };
    key <AE08> { [             8,    semicolon  ] };
    key <TLDE> { [  bracketright,  bracketleft  ] };
    key <BKSL> { [   Cyrillic_io,  Cyrillic_IO  ] };

    key <AC06> { [   Cyrillic_er,  Cyrillic_ER, U20BD ] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               // keyboards having the RupeeSign on the 4 key
partial
xkb_symbols "4" {
    key <AE04>	{ [  NoSymbol,   NoSymbol,   U20B9 ]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             // Cancel CapsLock when a Shift key is pressed.
partial modifier_keys
xkb_symbols "breaks_caps" {
    key <LFSH> {
	type = "ALPHABETIC",
    	actions [Group1] = [
	    SetMods(modifiers=Shift),
	    SetMods(modifiers=Shift+Lock,clearLocks)
	]
    };
    key <RTSH> {
	type = "ALPHABETIC",
	actions [Group1] = [
	    SetMods(modifiers=Shift),
	    SetMods(modifiers=Shift+Lock,clearLocks)
	]
    };
};


// Toggle CapsLock when pressed together with the other Shift key.
partial modifier_keys
xkb_symbols "lshift_both_capslock" {
  key <LFSH> {
    type[Group1]="TWO_LEVEL",
    symbols[Group1] = [ Shift_L, Caps_Lock ]
  };
};
// Toggle CapsLock when pressed together with the other Shift key.
partial modifier_keys
xkb_symbols "rshift_both_capslock" {
  key <RTSH> {
    type[Group1]="TWO_LEVEL",
    symbols[Group1] = [ Shift_R, Caps_Lock ]
  };
};
partial modifier_keys
xkb_symbols "both_capslock" {
  include "shift(lshift_both_capslock)"
  include "shift(rshift_both_capslock)"
};


// Set CapsLock when pressed with the other Shift key, release it when pressed alone.
partial modifier_keys
xkb_symbols "lshift_both_capslock_cancel" {
  key <LFSH> {
    type[Group1]="ALPHABETIC",
    symbols[Group1] = [ Shift_L, Caps_Lock ]
  };
};
// Set CapsLock when pressed with the other Shift key, release it when pressed alone.
partial modifier_keys
xkb_symbols "rshift_both_capslock_cancel" {
  key <RTSH> {
    type[Group1]="ALPHABETIC",
    symbols[Group1] = [ Shift_R, Caps_Lock ]
  };
};
partial modifier_keys
xkb_symbols "both_capslock_cancel" {
  include "shift(lshift_both_capslock_cancel)"
  include "shift(rshift_both_capslock_cancel)"
};


// Toggle ShiftLock when pressed together with the other Shift key.
partial modifier_keys
xkb_symbols "lshift_both_shiftlock" {
  key <LFSH> {
    type[Group1]="TWO_LEVEL",
    symbols[Group1] = [ Shift_L, Shift_Lock ]
  };
};
// Toggle ShiftLock when pressed together with the other Shift key.
partial modifier_keys
xkb_symbols "rshift_both_shiftlock" {
  key <RTSH> {
    type[Group1]="TWO_LEVEL",
    symbols[Group1] = [ Shift_R, Shift_Lock ]
  };
};
partial modifier_keys
xkb_symbols "both_shiftlock" {
  include "shift(lshift_both_shiftlock)"
  include "shift(rshift_both_shiftlock)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // based on a keyboard map from an 'xkb/symbols/se' file

default  partial alphanumeric_keys
xkb_symbols "basic" {
    include "latin(type2)"
    include "se(se)"
};

partial alphanumeric_keys
xkb_symbols "se" {

    name[Group1]="Swedish";

    key <AE05>	{ [         5,    percent,     EuroSign,         cent ]	};
    key <AE11>	{ [      plus,   question,    backslash, questiondown ]	};
    key <AE12>	{ [dead_acute, dead_grave,    plusminus,      notsign ]	};


    key <AC10>	{ [odiaeresis, Odiaeresis,       oslash,     Ooblique ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis,           ae,           AE ]	};
    key <TLDE>	{ [   section,    onehalf,    paragraph, threequarters]	};

    key <BKSL>	{ [apostrophe,   asterisk,        acute,     multiply ]	};

    key <SPCE>	{ [     space,      space,        space, nobreakspace ]	};

    key <LSGT>  { [      less,     greater,         bar,    brokenbar ] };
    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // Modifies the basic Swedish layout to eliminate all dead keys

    include "latin(type2)"
    include "latin(type2_nodeadkeys)"
    include "se(se)"

    name[Group1]="Swedish (eliminate dead keys)";

    key <AE12>	{ [     acute,      grave,    plusminus,      notsign ]	};
};

// Swedish Dvorak
partial alphanumeric_keys
xkb_symbols "dvorak" {

    include "se(basic)"

    name[Group1]="Swedish (Dvorak)";

    key <AD01> { [     aring,      Aring,    backslash		     ]	};
    key <AD02> { [  adiaeresis,	Adiaeresis,  braceleft,  bracketleft ]	};
    key <AD03> { [ odiaeresis, Odiaeresis,  braceright, bracketright ]	};
    key <AD04> { [         p,          P,        thorn,        THORN ]	};
    key <AD05> { [         y,          Y,    leftarrow,          yen ]	};
    key <AD06> { [         f,          F,      dstroke,  ordfeminine ]	};
    key <AD07> { [         g,          G,          eng,          ENG ]	};
    key <AD08> { [         c,          C,    copyright,    copyright ]	};
    key <AD09> { [         r,          R,   registered,   registered ]	};
    key <AD10> { [         l,          L,      lstroke,      Lstroke ]	};
    key <AD11> { [     comma,  semicolon, dead_cedilla,  dead_ogonek ]	};
    key <AD12> { [ dead_diaeresis, dead_circumflex, dead_tilde,	asciicircum	]	};

    key <AC01> { [         a,          A,           ae,           AE ]	};
    key <AC02> { [         o,          O,           oe,           OE ]	};
    key <AC03> { [         e,          E,     EuroSign,         cent ]	};
    key <AC04> { [         u,          U,    downarrow,      uparrow ]	};
    key <AC05> { [         i,          I,   rightarrow,     idotless ]	};
    key <AC06> { [         d,          D,          eth,          ETH ]	};
    key <AC07> { [         h,          H,      hstroke,      Hstroke ]	};
    key <AC08> { [         t,          T,       tslash,       Tslash ]	};
    key <AC09> { [         n,          N ]	};
    key <AC10> { [         s,          S,       ssharp,      section ]	};
    key <AC11> { [     minus, underscore, dead_belowdot, dead_abovedot ] };

    key <AB01> { [    period,   colon, periodcentered, dead_abovedot ]	};
    key <AB02> { [         q,          Q,           at,  Greek_OMEGA ]	};
    key <AB03> { [         j,          J ]	};
    key <AB04> { [         k,          K,          kra,    ampersand ]	};
    key <AB05> { [         x,          X, guillemotright,    greater ]	};
    key <AB06> { [         b,          B, rightdoublequotemark, apostrophe ] };
    key <AB07> { [         m,          M,           mu,    masculine ]	};
    key <AB08> { [         w,          W,      lstroke,      Lstroke ]	};
    key <AB09> { [         v,          V, leftdoublequotemark, grave ]	};
    key <AB10> { [         z,          Z, guillemotleft,        less ]	};
};

// Ivan Popov, 2005-07-17
// phonetic layout for Russian cyrillic letters
// on Swedish (latin type2) keyboards

// level3 modifier is a shortcut to the "se" meaning of the keys where
// we place cyrillic letters, handy for accessing the corresponding
// punctuation marks.
// It is important to have access to punctuation marks, and the rest of
// alphabetical keys are added for being consequent so that the users
// can expect the level3 modifier to give what the key label shows.

partial alphanumeric_keys
xkb_symbols "rus" {
    include "se(basic)"

    name[Group1]="Russian (Sweden, phonetic)";
    key.type[group1]="ALPHABETIC";

    key <TLDE> {	[ Cyrillic_io, Cyrillic_IO ]	};
    key <AE12> {	[ Cyrillic_hardsign, Cyrillic_HARDSIGN ]	};

    key <AD01> {	[ Cyrillic_ya, Cyrillic_YA ]	};
    key <AD02> {	[ Cyrillic_ve, Cyrillic_VE ]	};
    key <AD03> {	[ Cyrillic_ie, Cyrillic_IE ]	};
    key <AD04> {	[ Cyrillic_er, Cyrillic_ER ]	};
    key <AD05> {	[ Cyrillic_te, Cyrillic_TE ]	};
    key <AD06> {	[ Cyrillic_yeru, Cyrillic_YERU ]	};
    key <AD07> {	[ Cyrillic_u, Cyrillic_U ]	};
    key <AD08> {	[ Cyrillic_i, Cyrillic_I ]	};
    key <AD09> {	[ Cyrillic_o, Cyrillic_O ]	};
    key <AD10> {	[ Cyrillic_pe, Cyrillic_PE ]	};
    key <AD11> {	[ Cyrillic_e, Cyrillic_E ]	};

    key <AC01> {	[ Cyrillic_a, Cyrillic_A ]	};
    key <AC02> {	[ Cyrillic_es, Cyrillic_ES ]	};
    key <AC03> {	[ Cyrillic_de, Cyrillic_DE ]	};
    key <AC04> {	[ Cyrillic_ef, Cyrillic_EF ]	};
    key <AC05> {	[ Cyrillic_ghe, Cyrillic_GHE ]	};
    key <AC06> {	[ Cyrillic_ha, Cyrillic_HA ]	};
    key <AC07> {	[ Cyrillic_shorti, Cyrillic_SHORTI ]	};
    key <AC08> {	[ Cyrillic_ka, Cyrillic_KA ]	};
    key <AC09> {	[ Cyrillic_el, Cyrillic_EL ]	};
    key <AC10> {	[ Cyrillic_sha, Cyrillic_SHA ]	};
    key <AC11> {	[ Cyrillic_shcha, Cyrillic_SHCHA ]	};
    key <BKSL> {	[ Cyrillic_yu, Cyrillic_YU ]	};

    key <LSGT> {	[ Cyrillic_che, Cyrillic_CHE ]	};
    key <AB01> {	[ Cyrillic_ze, Cyrillic_ZE ]	};
    key <AB02> {	[ Cyrillic_softsign, Cyrillic_SOFTSIGN ]	};
    key <AB03> {	[ Cyrillic_tse, Cyrillic_TSE ]	};
    key <AB04> {	[ Cyrillic_zhe, Cyrillic_ZHE ]	};
    key <AB05> {	[ Cyrillic_be, Cyrillic_BE ]	};
    key <AB06> {	[ Cyrillic_en, Cyrillic_EN ]	};
    key <AB07> {	[ Cyrillic_em, Cyrillic_EM ]	};
};

partial alphanumeric_keys
xkb_symbols "rus_nodeadkeys" {

    include "se(nodeadkeys)"
    include "se(rus)"

    name[Group1]="Russian (Sweden, phonetic, eliminate dead keys)";

    key <AE12> {	[ Cyrillic_hardsign, Cyrillic_HARDSIGN ]	};
};

xkb_symbols "smi" {
    include "fi(smi)"
    name[Group1]= "Northern Saami (Sweden)";
};

// Copied from macintosh_vndr/se
partial alphanumeric_keys
xkb_symbols "mac" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple Swedish(Sweden) keyboard.

    include "latin"
    name[Group1]= "Swedish (Macintosh)";

    key <TLDE> {	[         section,         degree	]	};
    key <AE01> {	[               1,          exclam,        copyright,      exclamdown	]	};
    key <AE02> {	[               2,        quotedbl, 	       at,	 oneeighth	]	};
    key <AE03> {	[               3,      numbersign,         sterling,             yen	]	};
    key <AE04> {	[               4,        currency, 	   dollar,	      cent	]	};
    key <AE06> {	[               6,       ampersand     	]	};
    key <AE07> {	[               7,           slash, 	      bar,       backslash	]	};
    key <AE08> {	[               8,       parenleft,      bracketleft,       braceleft	]	};
    key <AE09> {	[               9,      parenright,     bracketright,      braceright	]	};
    key <AE10> {	[               0,           equal     	]	};
    key <AE11> {	[            plus,        question      ]	};
    key <AE12> {	[           acute,           grave	]	};
    key <AD11> {	[	    aring,           Aring     	]	};
    key <AD12> {	[       diaeresis,     asciicircum, 	asciitilde			]	};
    key <AC10> {	[      odiaeresis,      Odiaeresis, 	   oslash,	    Ooblique	]	};
    key <AC11> {	[      adiaeresis,      Adiaeresis,               ae,		AE	]	};
    key <BKSL> {	[      apostrophe,        asterisk,               at			]	};
    key <AB08> {	[           comma,       semicolon     	]	};
    key <AB09> {	[          period,           colon     	]	};
    key <AB10> {	[           minus,      underscore     	]	};

    include "kpdl(comma)"
    include "level3(ralt_switch)"
};

// Svdvorak
// This version of Dvorak follows danish and norwegian style in hope for a
// Scandinavian standard.
partial alphanumeric_keys
xkb_symbols "svdvorak" {

   include "se(basic)"

   name[Group1]="Swedish (Svdvorak)";

   key <AD01> { [ aring, Aring, braceleft ] };
   key <AD02> { [ comma, semicolon, bracketleft ] };
   key <AD03> { [ period, colon, bracketright ] };
   key <AD04> { [ p, P, braceright ] };
   key <AD05> { [ y, Y ] };
   key <AD06> { [ f, F ] };
   key <AD07> { [ g, G ] };
   key <AD08> { [ c, C ] };
   key <AD09> { [ r, R ] };
   key <AD10> { [ l, L ] };
   key <AD11> { [ apostrophe, asterisk ] };

   key <AC01> { [ a, A ] };
   key <AC02> { [ o, O, parenleft ] };
   key <AC03> { [ e, E, parenright ] };
   key <AC04> { [ u, U ] };
   key <AC05> { [ i, I ] };
   key <AC06> { [ d, D ] };
   key <AC07> { [ h, H ] };
   key <AC08> { [ t, T ] };
   key <AC09> { [ n, N ] };
   key <AC10> { [ s, S, ssharp ] };
   key <AC11> { [ minus, underscore ] };
   key <BKSL> { [ less, greater, bar ] };

   key <LSGT> { [ odiaeresis, Odiaeresis ] };
   key <AB01> { [ adiaeresis, Adiaeresis ] };
   key <AB02> { [ q, Q ] };
   key <AB03> { [ j, J ] };
   key <AB04> { [ k, K ] };
   key <AB05> { [ x, X ] };
   key <AB06> { [ b, B ] };
   key <AB07> { [ m, M ] };
   key <AB08> { [ w, W ] };
   key <AB09> { [ v, V ] };
   key <AB10> { [ z, Z ] };
};

partial alphanumeric_keys
xkb_symbols "swl" {

//
// Swedish Sign Language
// ISO_639-3 language code: swl
// (called âsvenskt teckensprÃ¥kâ in swedish)
//
// Author: SaaÅ¡ha MetsÃ¤rantala saasha@acc.umu.se
//
// A sans-serif font is available at
// http://www.acc.umu.se/home/saasha/typsnitt/swl_sans.ttf
//

  include "se(basic)"

  name[Group1]="Swedish Sign Language";

  key <AB01> { [ 0x110c925, 0x110c95f, 0x110c940, 0x110c99a ] };
  key <AB02> { [ 0x110c96b, 0x110c933, 0x110c920, 0x110c98e ] };
  key <AB03> { [ 0x110c949, 0x110c94b, 0x110c921, 0x110c99f ] };
  key <AB04> { [ 0x110c923, 0x110c92d, 0x110c95c, 0x110c96e ] };
  key <AB05> { [ 0x110c93b, 0x110c927, 0x110c908, 0x110c9a6 ] };
  key <AB06> { [ 0x110c93a, 0x110c94c, 0x110c93e, 0x110c9a7 ] };
  key <AB07> { [ 0x110c95b, 0x110c93f, 0x110c907, 0x110c992 ] };
  key <AC01> { [ 0x110c973, 0x110c924, 0x110c93c, 0x110c9a4 ] };
  key <AC02> { [ 0x110c972, 0x110c945, 0x110c91a, 0x110c99c ] };
  key <AC03> { [ 0x110c979, 0x110c929, 0x110c916, 0x110c999 ] };
  key <AC04> { [ 0x110c976, 0x110c975, 0x110c917, 0x110c994 ] };
  key <AC05> { [ 0x110c95a, 0x110c926, 0x110c918, 0x110c996 ] };
  key <AC06> { [ 0x110c96f, 0x110c932, 0x110c915, 0x110c998 ] };
  key <AC07> { [ 0x110c942, 0x110c922, 0x110c913, 0x110c9a2 ] };
  key <AC08> { [ 0x110c985, 0x110c94e, 0x110c914, 0x110c97a ] };
  key <AC09> { [ 0x110c928, 0x110c948, 0x110c919, 0x110c9a5 ] };
  key <AC10> { [ 0x110c970, 0x110c92b, 0x110c905, 0x110c991 ] };
  key <AC11> { [ 0x110c92e, 0x110c944, 0x110c904, VoidSymbol ] };
  key <AD01> { [ 0x110c96c, 0x110c92a, 0x110c900, 0x110c9a1 ] };
  key <AD02> { [ 0x110c971, 0x110c930, 0x110c903, 0x110c99e ] };
  key <AD03> { [ 0x110c987, 0x110c947, 0x110c90c, 0x110c96d ] };
  key <AD04> { [ 0x110c986, 0x110c92c, 0x110c91b, 0x110c993 ] };
  key <AD05> { [ 0x110c939, 0x110c94a, 0x110c911, 0x110c995 ] };
  key <AD06> { [ 0x110c952, 0x110c943, 0x110c912, 0x110c99b ] };
  key <AD07> { [ 0x110c978, 0x110c977, 0x110c95e, 0x110c9a3 ] };
  key <AD08> { [ 0x110c951, 0x110c931, 0x110c91e, 0x110c997 ] };
  key <AD09> { [ 0x110c90e, 0x110c946, 0x110c906, 0x110c9a0 ] };
  key <AD10> { [ 0x110c91f, 0x110c961, 0x110c91c, VoidSymbol ] };
  key <AD11> { [ 0x110c93d, 0x110c92f, 0x110c902, VoidSymbol ] };
  key <AE01> { [ 0x110c953, 0x110c936, 0x110c988, 0x110c962 ] };
  key <AE02> { [ 0x110c954, 0x110c957, 0x110c97d, 0x110c963 ] };
  key <AE03> { [ 0x110c934, 0x110c937, 0x110c97e, 0x110c983 ] };
  key <AE04> { [ 0x110c955, 0x110c958, 0x110c98a, 0x110c984 ] };
  key <AE05> { [ 0x110c935, 0x110c938, 0x110c97f, 0x110c966 ] };
  key <AE06> { [ 0x110c956, 0x110c959, 0x110c980, 0x110c967 ] };
  key <AE07> { [ 0x110c960, 0x110c969, 0x110c982, 0x110c96a ] };
  key <AE08> { [ 0x110c97c, 0x110c90b, 0x110c989, 0x110c964 ] };
  key <AE09> { [ 0x110c97b, 0x110c90a, 0x110c98b, 0x110c965 ] };
  key <AE10> { [ 0x110c974, 0x110c909, 0x110c98c, 0x110c968 ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/se(sun_type6)"
};

partial alphanumeric_keys
xkb_symbols "dvorak_a5" {

	include "se(basic)"

	name[Group1]="Swedish (Dvorak A5)";

	key <AE12> { [ dead_acute, dead_grave, plusminus,           none ] };

	key <AD01> { [ aring,      Aring,      braceleft,           none ] };
	key <AD02> { [ adiaeresis, Adiaeresis, braceright,          none ] };
	key <AD03> { [ odiaeresis, Odiaeresis, bracketleft,         none ] };
	key <AD04> { [ p,          P,          bracketright,        none ] };
	key <AD05> { [ y,          Y,          dollar,              none ] };
	key <AD06> { [ f,          F,          quotedbl,            none ] };
	key <AD07> { [ g,          G,          question,            none ] };
	key <AD08> { [ c,          C,          ampersand,           none ] };
	key <AD09> { [ r,          R,          less,                none ] };
	key <AD10> { [ l,          L,          greater,             none ] };
	key <AD11> { [ comma,      semicolon,  dead_cedilla,        none ] };
	key <AD12> { [ dead_diaeresis, dead_circumflex, dead_tilde,	asciicircum	]	};

	key <AC01> { [ a,          A,          semicolon,           none ] };
	key <AC02> { [ o,          O,          slash,               none ] };
	key <AC03> { [ e,          E,          parenleft,           none ] };
	key <AC04> { [ u,          U,          parenright,          none ] };
	key <AC05> { [ i,          I,          bar,                 none ] };
	key <AC06> { [ d,          D,          numbersign,          none ] };
	key <AC07> { [ h,          H,          asciicircum,         none ] };
	key <AC08> { [ t,          T,          numbersign,          none ] };
	key <AC09> { [ n,          N,          quotedbl,            none ] };
	key <AC10> { [ s,          S,          asciitilde,          none ] };
	key <AC11> { [ minus,      underscore, grave,               none ] };

	key <AB01> { [ period,     colon,      colon,               none ] };
	key <AB02> { [ q,          Q,          equal,               none ] };
	key <AB03> { [ j,          J,          at,                  none ] };
	key <AB04> { [ k,          K,          exclam,              none ] };
	key <AB05> { [ x,          X,          backslash,           none ] };
	key <AB06> { [ b,          B,          percent,             none ] };
	key <AB07> { [ m,          M,          grave,               none ] };
	key <AB08> { [ w,          W,          lstroke,             none ] };
	key <AB09> { [ v,          V,          leftdoublequotemark, none ] };
	key <AB10> { [ z,          Z,          guillemotleft,       none ] };

	key <BKSL> { [ apostrophe, asterisk,   asterisk,            none ] };

};


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "rs(latin)"

    name[Group1]="Slovenian";

    key <TLDE> { type[Group1]="TWO_LEVEL", [ cedilla, diaeresis ] };
};

partial alphanumeric_keys
xkb_symbols "us" {

    include "rs(latinyz)"

    name[Group1]= "Slovenian (US keyboard with Slovenian letters)";

    key <TLDE> { type[Group1]="TWO_LEVEL", [ cedilla, diaeresis ] };
};

partial alphanumeric_keys
xkb_symbols "alternatequotes" {

    include "rs(latinalternatequotes)"

    name[Group1]= "Slovenian (with guillemets for quotes)";

    key <TLDE> { type[Group1]="TWO_LEVEL", [ cedilla, diaeresis ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin"

    name[Group1]="Wolof";

    key <AE01>	{ [ ampersand,          1,          bar,     NoSymbol ]	};
    key <AE02>	{ [    eacute,          2,   asciitilde,       Eacute ]	};
    key <AE03>	{ [  quotedbl,          3,   numbersign,      cedilla ]	};
    key <AE04>	{ [apostrophe,          4,    braceleft,        acute ]	};
    key <AE05>	{ [ parenleft,          5,  bracketleft,    diaeresis ]	};
    key <AE06>	{ [     minus,          6,          bar,    brokenbar ]	};
    key <AE07>	{ [    egrave,          7,   dead_grave,       Egrave ]	};
    key <AE08>	{ [underscore,          8,    backslash,       macron ]	};
    key <AE09>	{ [  ccedilla,          9,  asciicircum,     Ccedilla ]	};
    key <AE10>	{ [    agrave,          0,           at,       Agrave ]	};
    key <AE11>	{ [parenright,     degree, bracketright,   ydiaeresis ]	};
    key <AE12>	{ [     equal,       plus,   braceright,threequarters ]	};

    key <AD01>	{ [         a,          A,           ae,           AE ]	};
    key <AD02>	{ [         z,          Z, guillemotleft,        less ]	};
    key <AD03>	{ [         e,          E,     EuroSign,         cent ]	};
    key <AD11>	{ [       eng,        ENG,  bracketleft, bracketright ] };
    key <AD12>	{ [    dollar,   sterling,     currency,  ecircumflex ]	};

    key <AC01>	{ [         q,          Q,           at,  Greek_OMEGA ]	};
    key <AC10>	{ [         m,          M,           mu,    masculine ]	};
    key <AC11>	{ [    ntilde,     Ntilde,        acute,   dead_acute ]	};
    key <TLDE>	{ [twosuperior,   percent,      notsign,      notsign ]	};

    key <BKSL>	{ [        mu,   sterling,        grave,   dead_grave ]	};
    key <AB01>	{ [         w,          W,      lstroke,      Lstroke ]	};
    key <AB07>	{ [     comma,   question, questiondown,     NoSymbol ] };
    key <AB08>	{ [ semicolon,     period, horizconnector,   multiply ]	};
    key <AB09>	{ [     colon,      slash, periodcentered,   division ]	};
    key <AB10>	{ [    exclam,    section,   exclamdown,     NoSymbol ] };

    key <LSGT>	{ [      less,    greater,          bar,     NoSymbol ] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    default  partial alphanumeric_keys
xkb_symbols "basic" {

    // This layout conforms to a new Slovak compromise standard
    // designed to satisfy most Unix, Windows and Mac users.
    // 2001 by Kamil Toman <ktoman@email.cz>

    include "latin"
    name[Group1] = "Slovak";

    key <TLDE>  { [ semicolon, dead_abovering,    grave,   asciitilde ] };
    key <AE01>  { [      plus,          1,       exclam,   dead_tilde ] };
    key <AE02>  { [    lcaron,          2,           at,   dead_caron ] };
    key <AE03>  { [    scaron,          3,   numbersign, dead_circumflex ] };
    key <AE04>  { [    ccaron,          4,       dollar,   dead_breve ] };
    key <AE05>  { [    tcaron,          5,      percent, dead_abovering]};
    key <AE06>  { [    zcaron,          6,  asciicircum,  dead_ogonek ] };
    key <AE07>  { [    yacute,          7,    ampersand,   dead_grave ] };
    key <AE08>  { [    aacute,          8,     asterisk, dead_abovedot] };
    key <AE09>  { [    iacute,          9,    braceleft,   dead_acute ] };
    key <AE10>  { [    eacute,          0,   braceright, dead_doubleacute ] };
    key <AE11>  { [     equal,    percent,     NoSymbol, dead_diaeresis]};
    key <AE12>  { [dead_acute, dead_caron,  dead_macron, dead_cedilla ] };

    key <AD01>  { [         q,          Q,    backslash,     NoSymbol ] };
    key <AD02>  { [         w,          W,          bar,     Nosymbol ] };
    key <AD03>  { [         e,          E,     EuroSign,     NoSymbol ] };
    key <AD04>  { [         r,          R,     NoSymbol,     NoSymbol ] };
    key <AD05>  { [         t,          T,     NoSymbol,     NoSymbol ] };
    key <AD06>  { [         z,          Z,     NoSymbol,     NoSymbol ] };
    key <AD07>  { [         u,          U,     NoSymbol,     NoSymbol ] };
    key <AD08>  { [         i,          I,     NoSymbol,     NoSymbol ] };
    key <AD09>  { [         o,          O,     NoSymbol,     NoSymbol ] };
    key <AD10>  { [         p,          P,     NoSymbol,     NoSymbol ] };

    key <AD11>  { [    uacute,      slash,  bracketleft,     division ] };
    key <AD12>  { [adiaeresis,  parenleft, bracketright,     multiply ] };

    key <AC01>  { [         a,          A,   asciitilde,     NoSymbol ] };
    key <AC02>  { [         s,          S,      dstroke,     NoSymbol ] };
    key <AC03>  { [         d,          D,      Dstroke,     NoSymbol ] };
    key <AC04>  { [         f,          F,  bracketleft,     NoSymbol ] };
    key <AC05>  { [         g,          G, bracketright,     NoSymbol ] };
    key <AC06>  { [         h,          H,        grave,     NoSymbol ] };
    key <AC07>  { [         j,          J,   apostrophe,     NoSymbol ] };
    key <AC08>  { [         k,          K,      lstroke,     NoSymbol ] };
    key <AC09>  { [         l,          L,      Lstroke,     NoSymbol ] };

    key <AC10>  { [ocircumflex,   quotedbl,      dollar,     NoSymbol ] };
    key <AC11>  { [   section,     exclam,   apostrophe,       ssharp ] };
    key <AC12>  { [  EuroSign, dead_diaeresis, NoSymbol,     NoSymbol ] };
    key <BKSL>  { [    ncaron, parenright,    backslash,          bar ] };

    key <LSGT>  { [ backslash,        bar,        slash,     NoSymbol ] };
    key <AB01>  { [         y,          Y,       degree,     NoSymbol ] };
    key <AB02>  { [         x,          X,   numbersign,     Nosymbol ] };
    key <AB03>  { [         c,          C,    ampersand,     NoSymbol ] };
    key <AB04>  { [         v,          V,           at,     NoSymbol ] };
    key <AB05>  { [         b,          B,    braceleft,     NoSymbol ] };
    key <AB06>  { [         n,          N,   braceright,     NoSymbol ] };
    key <AB07>  { [         m,          M,  asciicircum,     NoSymbol ] };
    key <AB08>  { [     comma,   question,         less,     NoSymbol ] };
    key <AB09>  { [    period,      colon,      greater,     NoSymbol ] };
    key <AB10>  { [     minus, underscore,     asterisk,     NoSymbol ] };

    key <SPCE>  { [     space,      space, nobreakspace, nobreakspace ] };

    include "level3(ralt_switch)"
};

xkb_symbols "bksl" {

    // Use <BKSL> instead of <LSGT> (useful for keyboards without <LSGT> key).

    include "sk(basic)"
    name[Group1] = "Slovak (extended Backslash)";

    key <BKSL>  { [ backslash,        bar,        slash,     NoSymbol ] };
};

partial alphanumeric_keys
xkb_symbols "qwerty" {

    // This layout works exactly as the basic Slovak one with the exception
    // of the 'Z' and 'Y' keys, which are in Qwerty style (i.e. swapped).
    // 2001 by Kamil Toman <ktoman@email.cz>

    include "sk(basic)"
    name[Group1] = "Slovak (qwerty)";

    key <AB01>  { [         z,          Z,       degree,     NoSymbol ] };
    key <AD06>  { [         y,          Y,     NoSymbol,     NoSymbol ] };
};

xkb_symbols "qwerty_bksl" {

    // Use <BKSL> instead of <LSGT> (useful for keyboards without <LSGT> key).

    include "sk(qwerty)"
    name[Group1] = "Slovak (qwerty, extended Backslash)";

    key <BKSL>  { [ backslash,        bar,        slash,     NoSymbol ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/sk(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          // Actions which control the server's behavior.

partial keypad_keys function_keys
xkb_symbols "xfree86" {
    include "keypad(operators)"
    include "srvr_ctrl(fkey2vt)"
};

partial function_keys
xkb_symbols "fkey2vt" {

    key <FK01> {
	type="CTRL+ALT",
	symbols[Group1]= [ F1, F1, F1, F1, XF86_Switch_VT_1 ]
    };

    key <FK02> {
	type="CTRL+ALT",
	symbols[Group1]= [ F2, F2, F2, F2, XF86_Switch_VT_2 ]
    };

    key <FK03> {
	type="CTRL+ALT",
	symbols[Group1]= [ F3, F3, F3, F3, XF86_Switch_VT_3 ]
    };

    key <FK04> {
	type="CTRL+ALT",
	symbols[Group1]= [ F4, F4, F4, F4, XF86_Switch_VT_4 ]
    };

    key <FK05> {
	type="CTRL+ALT",
	symbols[Group1]= [ F5, F5, F5, F5, XF86_Switch_VT_5 ]
    };

    key <FK06> {
	type="CTRL+ALT",
	symbols[Group1]= [ F6, F6, F6, F6, XF86_Switch_VT_6 ]
    };

    key <FK07> {
	type="CTRL+ALT",
	symbols[Group1]= [ F7, F7, F7, F7, XF86_Switch_VT_7 ]
    };

    key <FK08> {
	type="CTRL+ALT",
	symbols[Group1]= [ F8, F8, F8, F8, XF86_Switch_VT_8 ]
    };

    key <FK09> {
	type="CTRL+ALT",
	symbols[Group1]= [ F9, F9, F9, F9, XF86_Switch_VT_9 ]
    };

    key <FK10> {
	type="CTRL+ALT",
	symbols[Group1]= [ F10, F10, F10, F10, XF86_Switch_VT_10 ]
    };

    key <FK11> {
	type="CTRL+ALT",
	symbols[Group1]= [ F11, F11, F11, F11, XF86_Switch_VT_11 ]
    };

    key <FK12> {
	type="CTRL+ALT",
	symbols[Group1]= [ F12, F12, F12, F12, XF86_Switch_VT_12 ]
    };
};

partial function_keys keypad_keys
xkb_symbols "no_srvr_keys" {

    key.type="TWO_LEVEL";

    key <FK01> { [ F1, F1 ]	};
    key <FK02> { [ F2, F2 ]	};
    key <FK03> { [ F3, F3 ]	};
    key <FK04> { [ F4, F4 ]	};
    key <FK05> { [ F5, F5 ]	};
    key <FK06> { [ F6, F6 ]	};
    key <FK07> { [ F7, F7 ]	};
    key <FK08> { [ F8, F8 ]	};
    key <FK09> { [ F9, F9 ]	};
    key <FK10> { [ F10, F10 ]	};
    key <FK11> { [ F11, F11 ]	};
    key <FK12> { [ F12, F12 ]	};

    key <KPDV> { [ KP_Divide,	KP_Divide	] };
    key <KPMU> { [ KP_Multiply,	KP_Multiply	] };
    key <KPSU> { [ KP_Subtract,	KP_Subtract	] };
    key <KPAD> { [ KP_Add,	KP_Add		] };
};

partial function_keys
xkb_symbols "grab_debug" {

    key <FK11> {
	type="CTRL+ALT",
	symbols[Group1]= [ F11, F11, F11, F11, XF86LogGrabInfo ]
    };

    key <FK12> {
	type="CTRL+ALT",
	symbols[Group1]= [ F12, F12, F12, F12, XF86LogWindowTree ]
    };

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     default  partial modifier_keys
xkb_symbols "ctrl_alt_bksp" {
    key <BKSP> {
        type="CTRL+ALT",
        symbols[Group1] = [ NoSymbol, NoSymbol, NoSymbol, NoSymbol, Terminate_Server ]
    };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        default  partial alphanumeric_keys
xkb_symbols "basic" {
    include "ara(basic)"
    name[Group1]= "Arabic (Syria)";
};

partial alphanumeric_keys
xkb_symbols "syc" {
    name[Group1]= "Syriac";

    key <TLDE> {  [  	0x100070F,	0x100032E,	Arabic_shadda		]     };
    key <AE01> {  [  	1,		exclam,		0x1000701		]     };
    key <AE02> {  [  	2,		0x100030A,	0x1000702		]     };
    key <AE03> {  [  	3,		0x1000325,	0x1000703		]     };
    key <AE04> {  [  	4,		0x1000749,	0x1000704		]     };
    key <AE05> {  [  	5,		0x1002670,	0x1000705		]     };
    key <AE06> {  [  	6,		0x1002671,	0x1000708		]     };
    key <AE07> {  [  	7,		0x100070A,	0x1000709		]     };
    key <AE08> {  [  	8,		0x10000BB,	0x100070B		]     };
    key <AE09> {  [  	9,		parenright,	0x100070C		]     };
    key <AE10> {  [  	0,		parenleft,	0x100070D		]     };
    key <AE11> {  [  	minus,		0x10000AB,	0x100250C		]     };
    key <AE12> {  [  	equal,		plus,		0x1002510		]     };

    key <AD01> {  [  	0x1000714,	0x1000730,	Arabic_fatha		]     };
    key <AD02> {  [  	0x1000728,	0x1000733,	Arabic_fathatan		]     };
    key <AD03> {  [  	0x1000716,	0x1000736,	Arabic_damma		]     };
    key <AD04> {  [  	0x1000729,	0x100073A,	Arabic_dammatan		]     };
    key <AD05> {  [  	0x1000726,	0x100073D,	Arabic_madda_above	]     };
    key <AD06> {  [  	0x100071C,	0x1000740,	Arabic_hamza_above	]     };
    key <AD07> {  [  	0x1000725,	0x1000741,	0x1000747		]     };
    key <AD08> {  [  	0x1000717,	0x1000308,	0x1000743		]     };
    key <AD09> {  [  	0x100071E,	0x1000304,	0x1000745		]     };
    key <AD10> {  [  	0x100071A,	0x1000307,	0x100032D		]     };
    key <AD11> {  [  	0x1000713,	0x1000303				]     };
    key <AD12> {  [  	0x1000715,	0x100074A				]     };
    key <BKSL> {  [  	0x1000706,	colon					]     };

    key <AC01> {  [  	0x100072B,	0x1000731,	Arabic_kasra		]     };
    key <AC02> {  [  	0x1000723,	0x1000734,	Arabic_kasratan		]     };
    key <AC03> {  [  	0x100071D,	0x1000737				]     };
    key <AC04> {  [  	0x1000712,	0x100073B,	Arabic_hamza		]     };
    key <AC05> {  [  	0x1000720,	0x100073E,	Arabic_hamza_below	]     };
    key <AC06> {  [  	0x1000710,	0x1000711,	Arabic_superscript_alef	]     };
    key <AC07> {  [  	0x100072C,	Arabic_tatweel,	0x1000748		]     };
    key <AC08> {  [  	0x1000722,	0x1000324,	0x1000744		]     };
    key <AC09> {  [  	0x1000721,	0x1000331,	0x1000746		]     };
    key <AC10> {  [  	0x100071F,	0x1000323				]     };
    key <AC11> {  [  	0x100071B,	0x1000330				]     };

    key <AB01> {  [  	bracketright,	0x1000732,	Arabic_sukun		]     };
    key <AB02> {  [  	bracketleft,	0x1000735				]     };
    key <AB03> {  [  	0x1000724,	0x1000738,	0x100200D		]     };
    key <AB04> {  [  	0x100072A,	0x100073C,	0x100200C		]     };
    key <AB05> {  [  	0x1000727,	0x100073F,	0x100200E		]     };
    key <AB06> {  [  	0x1000700,	0x1000739,	0x100200F		]     };
    key <AB07> {  [  	0x100002E,	0x1000742				]     };
    key <AB08> {  [  	0x1000718,	Arabic_comma				]     };
    key <AB09> {  [  	0x1000719,	Arabic_semicolon			]     };
    key <AB10> {  [  	0x1000707,	Arabic_question_mark			]     };

    // Space plus zero-width non-joiner:
    include "nbsp(zwnj2)"

    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L, Control_R };
    modifier_map Mod1   { Alt_L, Alt_R };
    modifier_map Mod2   { Mode_switch };
};

partial alphanumeric_keys
xkb_symbols "syc_phonetic" {
    name[Group1]= "Syriac (phonetic)";

    key <TLDE> {  [  	0x100070F,	0x100032E,	Arabic_shadda		]     };
    key <AE01> {  [  	1,		exclam,		0x1000701		]     };
    key <AE02> {  [  	2,		0x100030A,	0x1000702		]     };
    key <AE03> {  [  	3,		0x1000325,	0x1000703		]     };
    key <AE04> {  [  	4,		0x1000749,	0x1000704		]     };
    key <AE05> {  [  	5,		0x1002670,	0x1000705		]     };
    key <AE06> {  [  	6,		0x1002671,	0x1000708		]     };
    key <AE07> {  [  	7,		0x100070A,	0x1000709		]     };
    key <AE08> {  [  	8,		0x10000BB,	0x100070B		]     };
    key <AE09> {  [  	9,		parenright,	0x100070C		]     };
    key <AE10> {  [  	0,		parenleft,	0x100070D		]     };
    key <AE11> {  [  	minus,		0x10000AB,	0x100250C		]     };
    key <AE12> {  [  	equal,		plus,		0x1002510		]     };

    key <AD01> {  [  	0x1000729,	0x1000730,	Arabic_fatha		]     };
    key <AD02> {  [  	0x1000718,	0x1000733,	Arabic_fathatan		]     };
    key <AD03> {  [  	0x1000716,	0x1000736,	Arabic_damma		]     };
    key <AD04> {  [  	0x100072A,	0x100073A,	Arabic_dammatan		]     };
    key <AD05> {  [  	0x100072C,	0x100073D,	Arabic_madda_above	]     };
    key <AD06> {  [  	0x100071D,	0x1000740,	Arabic_hamza_above	]     };
    key <AD07> {  [  	0x100071C,	0x1000741,	0x1000747		]     };
    key <AD08> {  [  	0x1000725,	0x1000308,	0x1000743		]     };
    key <AD09> {  [  	0x1000727,	0x1000304,	0x1000745		]     };
    key <AD10> {  [  	0x1000726,	0x1000307,	0x100032D		]     };
    key <AD11> {  [  	bracketright,	0x1000303				]     };
    key <AD12> {  [  	bracketleft,	0x100074A				]     };
    key <BKSL> {  [  	0x1000706,	colon					]     };

    key <AC01> {  [  	0x1000710,	0x1000731,	Arabic_kasra		]     };
    key <AC02> {  [  	0x1000723,	0x1000734,	Arabic_kasratan		]     };
    key <AC03> {  [  	0x1000715,	0x1000737				]     };
    key <AC04> {  [  	0x1000714,	0x100073B,	Arabic_hamza		]     };
    key <AC05> {  [  	0x1000713,	0x100073E,	Arabic_hamza_below	]     };
    key <AC06> {  [  	0x1000717,	0x1000711,	Arabic_superscript_alef	]     };
    key <AC07> {  [  	0x100071B,	Arabic_tatweel,	0x1000748		]     };
    key <AC08> {  [  	0x100071F,	0x1000324,	0x1000744		]     };
    key <AC09> {  [  	0x1000720,	0x1000331,	0x1000746		]     };
    key <AC10> {  [  	0x100071A,	0x1000323				]     };
    key <AC11> {  [  	0x100071E,	0x1000330				]     };

    key <SPCE> {  [  	space,		0x100200c				]     };
    key <AB01> {  [  	0x1000719,	0x1000732,	Arabic_sukun		]     };
    key <AB02> {  [  	0x1000728,	0x1000735				]     };
    key <AB03> {  [  	0x1000724,	0x1000738,	0x100200D		]     };
    key <AB04> {  [  	0x100072B,	0x100073C,	0x100200C		]     };
    key <AB05> {  [  	0x1000712,	0x100073F,	0x100200E		]     };
    key <AB06> {  [  	0x1000722,	0x1000739,	0x100200F		]     };
    key <AB07> {  [  	0x1000721,	0x1000742				]     };
    key <AB08> {  [  	0x1000700,	Arabic_comma				]     };
    key <AB09> {  [  	0x100002E,	Arabic_semicolon			]     };
    key <AB10> {  [  	0x1000707,	Arabic_question_mark			]     };

    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L, Control_R };
    modifier_map Mod1   { Alt_L, Alt_R };
    modifier_map Mod2   { Mode_switch };
};

partial alphanumeric_keys
xkb_symbols "ku" {
    include "tr(ku)"
    name[Group1]= "Kurdish (Syria, Latin Q)";
};

partial alphanumeric_keys
xkb_symbols "ku_f" {
    include "tr(ku_f)"
    name[Group1]= "Kurdish (Syria, F)";
};

partial alphanumeric_keys
xkb_symbols "ku_alt" {
    include "tr(ku_alt)"
    name[Group1]= "Kurdish (Syria, Latin Alt-Q)";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           default partial alphanumeric_keys
xkb_symbols "basic" {

    include "fr(azerty)"

    name[Group1]="French (Togo)";

// This is based on French AZERTY-Keyboard layout that is mostly used in Togo.
// It includes symbols used to write different local languages in Togo.
// Created 2015 by Globalbility Togo (www.globalbility.org)
// Authors: Issaka Ouro-WÃ©tchirÃ©, Caroline Riefstahl, Mats Blakstad <mats @ globalbility.org>
//
// LAYOUT OVERVIEW
//  ____                                    
// | 1 3| 1 = Shift,  3 = AltGr + Shift    (AltGr is the right side alt key)
// | 2 4| 2 = normal, 4 = AltGr
//  Â¯Â¯Â¯Â¯                                  
//  ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ _______
// |    | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | 0  | Â°  | +  | <--   |
// | Â²  | &  | Ã© ~| " #| ' {| ( [| - || Ã¨ `| _ \| Ã§ ^| Ã  @| ) ]| = }|       |
//  ========================================================================
// | |<-  | A  | Z Æ·| E  | R Æ| T Æ| Y Æ³| U Æ±| I Æ| O Æ| P  | Â¨  | $  |   , |
// |  ->| | a  | z Ê| e â¬| r É| t É| y Æ´| u Ê| i É©| o É| p  | ^  Ì| Â£ Â¤| <-' |
//  ===================================================================Â¬    |
// |       | Q Æ| S  | D Æ| F Æ| G Æ| H Ä¤ | J  | K  | L  | M Å| %  | Âµ  |    |
// | MAJ   | q Ç| s  | d É| f Æ| g É£| h É¦| j  | k  | l  | m É²| Ã¹ `| *  Í|    |
//  ========================================================================
// | ^   | >  | W  | X  | C  | V Æ²| B Æ| N Å| ?  | .  | /  | Â§  |     |     |
// | |   | <  | w  | x  | c  | v Ê| b É| n Å| ,  | ;  | : Â¯| ! ~|     |     |
//  ========================================================================
// |      |      |      |                       |       |      |     |      |
// | Ctrl | Super| Alt  | Space    Nobreakspace | AltGr | Super|Menu | Ctrl |
//  Â¯Â¯Â¯Â¯Â¯Â¯ Â¯Â¯Â¯Â¯Â¯Â¯ Â¯Â¯Â¯Â¯Â¯Â¯ Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯ Â¯Â¯Â¯Â¯Â¯Â¯Â¯ Â¯Â¯Â¯Â¯Â¯Â¯ Â¯Â¯Â¯Â¯Â¯ Â¯Â¯Â¯Â¯Â¯Â¯
// The different local languages in Togo uses all together 16 symbols not found in French language:
// Æ·, É, Æ, Æ³, Æ±, Æ, Æ, Æ, Æ, Æ, Æ, Ä¤, Æ, Æ², Æ, Å.
// Togolese local languages use 9 tone markers:
// Acute ( Â´ ),	Grave ( ` ), Circumflex ( Ë ), Caron ( Ë ), Macron ( Â¯ ), Tilde ( ~ ), Tilde + Acute (  ÌÌ ), Tilde + Grave (  ÌÌ ), Diaeresis ( Â¨ )
// The vowels can use these tone markers except diaeresis.
// 'Y' is not used as a vowel in most local languages, and can only use diaeresis.
// Nasal consonants (m, n, Å) can only have have accent tones (acute and grave)

    // Modifications of the basic French Azerty layout to add symbols for Togolese local languages

             // Second row
             key <AD02>	{ [	z,		Z,		ezh,		EZH 	] };	// U0292 = Ê (small), U01B7 = Æ· (capital)

             key <AD04>	{ [	r,		R,		U025B,		U0190 	] };	// U025B = É (small), U0190 = Æ (capital)
             key <AD05>	{ [	t,		T,		U0257,		U018A 	] };	// U0257 = É (small), U018A = Æ (capital)
             key <AD06>	{ [	y,		Y,		U01B4,		U01B3 	] };	// U01B4 = Æ´ (small), U01B3 = Æ³ (capital)
             key <AD07>	{ [	u,		U,		U028A,		U01B1 	] };	// U028A = Ê (small), U01B1 = Æ± (capital)
             key <AD08>	{ [	i,		I,		U0269,		U0196 	] };	// U0269 = É© (small), U0196 = Æ (capital)
             key <AD09>	{ [	o,		O,		U0254,		U0186 	] };	// U0254 = É (small), U0186 = Æ (capital)
             key <AD11>	{ [	dead_circumflex,dead_diaeresis,	dead_caron		] };


             // Third row
             key <AC01>	{ [	q,		Q,		U01DD,		U018E 	] };	// U01DD = Ç (small), U018E = Æ (capital)
             key <AC03>	{ [	d,		D,		U0256,		U0189 	] };	// U0256 = É (small), U0189 = Æ (capital)
             key <AC04>	{ [	f,		F,		U0192,		U0191 	] };	// U0192 = Æ (small), U0191 = Æ (capital)
             key <AC05>	{ [	g,		G,		U0263,		U0194 	] };	// U0263 = É£ (small), U0194 = Æ (capital)
             key <AC06>	{ [	h,		H,		U0266,		U0124 	] };	// U0266 = É¦ (small), U0124 = Ä¤ (capital)
             key <AC10>	{ [	m,		M,		U0272,		U019D	] };	// U0272 = É² (small), U019D = Æ (capital)
             key <AC11>	{ [	ugrave,		percent,	dead_grave		] };	
             key <BKSL> { [	asterisk,	mu,		dead_acute		] };


             // Fourth row
             key <AB04>	{ [	v,		V,		U028B,		U01B2	] };	// U028B = Ê (small), U01B2 = Æ² (capital)
             key <AB05> { [	b,		B,		U0253,		U0181 	] };	// U0253 = É (small), U0181 = Æ (capital)
             key <AB06>	{ [	n,		N,		U014B,		U014A 	] };	// U014B = Å (small), U014A = Å (capital)
             key <AB09> { [	colon,		slash,		dead_macron		] };
             key <AB10>	{ [	exclam,		section,	dead_tilde		] };



};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   // based on a keyboard map from an 'xkb/symbols/th' file

default  partial alphanumeric_keys
xkb_symbols "basic" {
    name[Group1]= "Thai";

    // converted to THai keysysms - Pablo Saratxaga <pablo@mandrakesoft.com>

    key <TLDE> { [ underscore,		percent		]	};
    key <AE01> { [ Thai_lakkhangyao,	plus		]	};
    key <AE02> { [ slash,		Thai_leknung	]	};
    key <AE03> { [ minus,		Thai_leksong	]	};
    key <AE04> { [ Thai_phosamphao,	Thai_leksam	]	};
    key <AE05> { [ Thai_thothung,	Thai_leksi	]	};
    key <AE06> { [ Thai_sarau,		Thai_sarauu	]	};
    key <AE07> { [ Thai_saraue,		Thai_baht	]	};
    key <AE08> { [ Thai_khokhwai,	Thai_lekha	]	};
    key <AE09> { [ Thai_totao,		Thai_lekhok	]	};
    key <AE10> { [ Thai_chochan,	Thai_lekchet	]	};
    key <AE11> { [ Thai_khokhai,	Thai_lekpaet	]	};
    key <AE12> { [ Thai_chochang,	Thai_lekkao	]	};

    key <AD01> { [ Thai_maiyamok,	Thai_leksun	]	};
    key <AD02> { [ Thai_saraaimaimalai,	quotedbl	]	};
    key <AD03> { [ Thai_saraam,		Thai_dochada	]	};
    key <AD04> { [ Thai_phophan,	Thai_thonangmontho ]	};
    key <AD05> { [ Thai_saraa,		Thai_thothong	]	};
    key <AD06> { [ Thai_maihanakat,	Thai_nikhahit	]	};
    key <AD07> { [ Thai_saraii,		Thai_maitri	]	};
    key <AD08> { [ Thai_rorua,		Thai_nonen	]	};
    key <AD09> { [ Thai_nonu,		Thai_paiyannoi	]	};
    key <AD10> { [ Thai_yoyak,		Thai_yoying	]	};
    key <AD11> { [ Thai_bobaimai,	Thai_thothan	]	};
    key <AD12> { [ Thai_loling,		comma		]	};

    key <AC01> { [ Thai_fofan,		Thai_ru		]	};
    key <AC02> { [ Thai_hohip,		Thai_khorakhang	]	};
    key <AC03> { [ Thai_kokai,		Thai_topatak	]	};
    key <AC04> { [ Thai_dodek,		Thai_sarao	]	};
    key <AC05> { [ Thai_sarae,		Thai_chochoe	]	};
    key <AC06> { [ Thai_maitho,		Thai_maitaikhu	]	};
    key <AC07> { [ Thai_maiek,		Thai_maichattawa ]	};
    key <AC08> { [ Thai_saraaa,		Thai_sorusi	]	};
    key <AC09> { [ Thai_sosua,		Thai_sosala	]	};
    key <AC10> { [ Thai_wowaen,		Thai_soso	]	};
    key <AC11> { [ Thai_ngongu,		period		]	};

    key <AB01> { [ Thai_phophung,	parenleft	]	};
    key <AB02> { [ Thai_popla,		parenright	]	};
    key <AB03> { [ Thai_saraae,		Thai_choching	]	};
    key <AB04> { [ Thai_oang,		Thai_honokhuk	]	};
    key <AB05> { [ Thai_sarai,		Thai_phinthu	]	};
    key <AB06> { [ Thai_sarauee,	Thai_thanthakhat ]	};
    key <AB07> { [ Thai_thothahan,	question	]	};
    key <AB08> { [ Thai_moma,		Thai_thophuthao	]	};
    key <AB09> { [ Thai_saraaimaimuan,	Thai_lochula	]	};
    key <AB10> { [ Thai_fofa,		Thai_lu		]	};

    key <BKSL> { [ Thai_khokhuat,	Thai_khokhon	]	};
};

partial alphanumeric_keys
xkb_symbols "pat" {
    name[Group1]= "Thai (Pattachote)";
    // The thai layout defines a second keyboard group and changes
    // the behavior of a few modifier keys.

    // converted to THai keysysms - Pablo Saratxaga pablo@mandrakesoft.com
    // Pattachote modification by Visanu Euarchukiati -- visanu@inet.co.th
    key <TLDE> { [ underscore,		Thai_baht	] };
    key <AE01> { [ equal,		plus		] };
    key <AE02> { [ Thai_leksong,	quotedbl	] };
    key <AE03> { [ Thai_leksam,		slash		] };
    key <AE04> { [ Thai_leksi,		comma		] };
    key <AE05> { [ Thai_lekha,		question	] };
    key <AE06> { [ Thai_sarauu,		Thai_sarau	] };
    key <AE07> { [ Thai_lekchet,	underscore	] };
    key <AE08> { [ Thai_lekpaet,	period		] };
    key <AE09> { [ Thai_lekkao,		parenleft	] };
    key <AE10> { [ Thai_leksun,		parenright	] };
    key <AE11> { [ Thai_leknung,	minus		] };
    key <AE12> { [ Thai_lekhok,		percent		] };

    key <AD01> { [ Thai_maitaikhu,	Thai_maitri	] };
    key <AD02> { [ Thai_totao,		Thai_ru		] };
    key <AD03> { [ Thai_yoyak,		Thai_maiyamok	] };
    key <AD04> { [ Thai_oang,		Thai_yoying	] };
    key <AD05> { [ Thai_rorua,		Thai_sorusi	] };
    key <AD06> { [ Thai_maiek,		Thai_saraue	] };
    key <AD07> { [ Thai_dodek,		Thai_fofa	] };
    key <AD08> { [ Thai_moma,		Thai_soso	] };
    key <AD09> { [ Thai_wowaen,		Thai_thothung	] };
    key <AD10> { [ Thai_saraae,		Thai_thophuthao	] };
    key <AD11> { [ Thai_saraaimaimuan,	Thai_paiyannoi	] };
    key <AD12> { [ Thai_chochoe,	Thai_lu		] };

    key <AC01> { [ Thai_maitho,		Thai_maichattawa] };
    key <AC02> { [ Thai_thothahan,	Thai_thothong	] };
    key <AC03> { [ Thai_ngongu,		Thai_saraam	] };
    key <AC04> { [ Thai_kokai,		Thai_nonen	] };
    key <AC05> { [ Thai_maihanakat,	Thai_thanthakhat] };
    key <AC06> { [ Thai_saraii,		Thai_sarauee	] };
    key <AC07> { [ Thai_saraaa,		Thai_phophung	] };
    key <AC08> { [ Thai_nonu,		Thai_chochang	] };
    key <AC09> { [ Thai_sarae,		Thai_sarao	] };
    key <AC10> { [ Thai_saraaimaimalai,	Thai_khorakhang	] };
    key <AC11> { [ Thai_khokhai,	Thai_thonangmontho ] };

    key <AB01> { [ Thai_bobaimai,	Thai_dochada	] };
    key <AB02> { [ Thai_popla,		Thai_topatak	] };
    key <AB03> { [ Thai_loling,		Thai_thothan	] };
    key <AB04> { [ Thai_hohip,		Thai_phosamphao	] };
    key <AB05> { [ Thai_sarai,		Thai_phinthu	] };
    key <AB06> { [ Thai_khokhwai,	Thai_sosala	] };
    key <AB07> { [ Thai_sosua,		Thai_honokhuk	] };
    key <AB08> { [ Thai_saraa,		Thai_fofan	] };
    key <AB09> { [ Thai_chochan,	Thai_choching	] };
    key <AB10> { [ Thai_phophan,	Thai_lochula	] };

    key <BKSL> { [ Thai_lakkhangyao,	Thai_nikhahit	] };
};


partial alphanumeric_keys
xkb_symbols "tis" {
    name[Group1]= "Thai (TIS-820.2538)";
    // The thai layout defines a second keyboard group and changes
    // the behavior of a few modifier keys.  

    // converted to THai keysysms - Pablo Saratxaga <pablo@mandrakesoft.com>
    // modified to TIS-820.2538 - Theppitak Karoonboonyanan <thep@linux.thai.net>
    key <TLDE> {	[ 0x1000e4f,		0x1000e5b	]	};
    key <AE01> {	[ Thai_baht,		Thai_lakkhangyao]	};
    key <AE02> {	[ slash,  		Thai_leknung	]	};
    key <AE03> {	[ minus,		Thai_leksong	]	};
    key <AE04> {	[ Thai_phosamphao, 	Thai_leksam	]	};
    key <AE05> {	[ Thai_thothung,   	Thai_leksi	]	};
    key <AE06> {	[ Thai_sarau,		Thai_sarauu	]	};
    key <AE07> {	[ Thai_saraue,		0x1000e4e	]	};
    key <AE08> {	[ Thai_khokhwai,	Thai_lekha	]	};
    key <AE09> {	[ Thai_totao,		Thai_lekhok	]	};
    key <AE10> {	[ Thai_chochan,		Thai_lekchet	]	};
    key <AE11> {	[ Thai_khokhai,		Thai_lekpaet	]	};
    key <AE12> {	[ Thai_chochang,	Thai_lekkao	]	};

    key <AD01> {	[ Thai_maiyamok,	Thai_leksun	]	};
    key <AD02> {	[ Thai_saraaimaimalai, 	quotedbl	]	};
    key <AD03> {	[ Thai_saraam,		Thai_dochada	]	};
    key <AD04> {	[ Thai_phophan,		Thai_thonangmontho ]	};
    key <AD05> {	[ Thai_saraa,		Thai_thothong	]	};
    key <AD06> {	[ Thai_maihanakat,	Thai_nikhahit	]	};
    key <AD07> {	[ Thai_saraii,		Thai_maitri	]	};
    key <AD08> {	[ Thai_rorua,		Thai_nonen	]	};
    key <AD09> {type[Group1]="THREE_LEVEL",
    			[   Thai_nonu,	Thai_paiyannoi,	0x1000e5a]	};
    key <AD10> {	[ Thai_yoyak,		Thai_yoying	]	};
    key <AD11> {	[ Thai_bobaimai,	Thai_thothan	]	};
    key <AD12> {	[ Thai_loling,		comma		]	};

    key <AC01> {	[ Thai_fofan,		Thai_ru		]	};
    key <AC02> {	[ Thai_hohip,		Thai_khorakhang	]	};
    key <AC03> {	[ Thai_kokai,		Thai_topatak	]	};
    key <AC04> {	[ Thai_dodek,		Thai_sarao	]	};
    key <AC05> {	[ Thai_sarae,		Thai_chochoe	]	};
    key <AC06> {	[ Thai_maitho,		Thai_maitaikhu	]	};
    key <AC07> {	[ Thai_maiek,		Thai_maichattawa ]	};
    key <AC08> {	[ Thai_saraaa,		Thai_sorusi	]	};
    key <AC09> {	[ Thai_sosua,		Thai_sosala	]	};
    key <AC10> {	[ Thai_wowaen,		Thai_soso	]	};
    key <AC11> {	[ Thai_ngongu,		period		]	};

    key <AB01> {	[ Thai_phophung,	parenleft	]	};
    key <AB02> {	[ Thai_popla,		parenright	]	};
    key <AB03> {	[ Thai_saraae,		Thai_choching	]	};
    key <AB04> {	[ Thai_oang,		Thai_honokhuk	]	};
    key <AB05> {	[ Thai_sarai,		Thai_phinthu	]	};
    key <AB06> {	[ Thai_sarauee,		Thai_thanthakhat ]	};
    key <AB07> {	[ Thai_thothahan,	question	]	};
    key <AB08> {	[ Thai_moma,		Thai_thophuthao	]	};
    key <AB09> {	[ Thai_saraaimaimuan,	Thai_lochula 	]	};
    key <AB10> {	[ Thai_fofa,		Thai_lu		]	};

    key <BKSL> {	[ Thai_khokhon,		Thai_khokhuat	]	};
};

partial alphanumeric_keys
xkb_symbols "olpc" {

    name[Group1]= "Thai";
    // The OLPC thai layout
    // walter@laptop.org

    key <TLDE> { [ 0x1000E4F,  0x1000E5B ] };
    key <AE01> { [ 0x1000E3F,  0x1000E45 ] };
    key <AE02> { [     slash,  0x1000E51 ] };
    key <AE03> { [     minus,  0x1000E52 ] };
    key <AE04> { [ 0x1000E20,  0x1000E53 ] };
    key <AE05> { [ 0x1000E16,  0x1000E54 ] };
    key <AE06> { [ 0x1000E38,  0x1000E39 ] };
    key <AE07> { [ 0x1000E36,  0x1000E4E ] };
    key <AE08> { [ 0x1000E04,  0x1000E55 ] };
    key <AE09> { [ 0x1000E15,  0x1000E56 ] };
    key <AE10> { [ 0x1000E08,  0x1000E57 ] };
    key <AE11> { [ 0x1000E02,  0x1000E58 ] };
    key <AE12> { [ 0x1000E0A,  0x1000E59 ] };

    key <AD01> { [ 0x1000E46,  0x1000E50 ] };
    key <AD02> { [ 0x1000E44,   quotedbl ] };
    key <AD03> { [ 0x1000E33,  0x1000E0E ] };
    key <AD04> { [ 0x1000E1E,  0x1000E11 ] };
    key <AD05> { [ 0x1000E30,  0x1000E18 ] };
    key <AD06> { [ 0x1000E31,  0x1000E4D ] };
    key <AD07> { [ 0x1000E35,  0x1000E4A ] };
    key <AD08> { [ 0x1000E23,  0x1000E13 ] };
    key <AD09> { [ 0x1000E19,  0x1000E2F ] };
    key <AD10> { [ 0x1000E22,  0x1000E0D ] };
    key <AD11> { [ 0x1000E1A,  0x1000E10 ] };
    key <AD12> { [ 0x1000E25,      comma ] };

    key <AC01> { [ 0x1000E1F,  0x1000E24 ] };
    key <AC02> { [ 0x1000E2B,  0x1000E06 ] };
    key <AC03> { [ 0x1000E01,  0x1000E0F ] };
    key <AC04> { [ 0x1000E14,  0x1000E42 ] };
    key <AC05> { [ 0x1000E40,  0x1000E0C ] };
    key <AC06> { [ 0x1000E49,  0x1000E47 ] };
    key <AC07> { [ 0x1000E48,  0x1000E4B ] };
    key <AC08> { [ 0x1000E32,  0x1000E29 ] };
    key <AC09> { [ 0x1000E2A,  0x1000E28 ] };
    key <AC10> { [ 0x1000E27,  0x1000E0B ] };
    key <AC11> { [ 0x1000E07,     period ] };
    key <BKSL> { [ 0x1000E05,  0x1000E03 ] };

    key <AB01> { [ 0x1000E1C,  parenleft ] };
    key <AB02> { [ 0x1000E1B, parenright ] };
    key <AB03> { [ 0x1000E41,  0x1000E09 ] };
    key <AB04> { [ 0x1000E2D,  0x1000E2E ] };
    key <AB05> { [ 0x1000E34,  0x1000E3A ] };
    key <AB06> { [ 0x1000E37,  0x1000E4C ] };
    key <AB07> { [ 0x1000E17,   question ] };
    key <AB08> { [ 0x1000E21,  0x1000E12 ] };
    key <AB09> { [ 0x1000E43,  0x1000E2C ] };
    key <AB10> { [ 0x1000E1D,  0x1000E26 ] };

    include "group(olpc)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // 17/07/2008
// -------------------------------------------------------------
// Standard Tojiki Keyboard Layout, Official Standard
// -------------------------------------------------------------
// Created by Victor Ibragimov <victor.ibragimov@gmail.com>
// Tajik Fedora & Software Localization Team
// -------------------------------------------------------------
//                        DUAL INPUT METHOD
// --------------------------------------------------------------------
// -------------- Tajiki Official Keyboard Layout----------------------
// --------------------------------------------------------------------
//

default  partial alphanumeric_keys
xkb_symbols "basic"
{
	name[Group1] = "Tajik";

	include "kpdl(comma)"
	include "level3(ralt_switch)"

	key <AB01> { [    Cyrillic_ya,    Cyrillic_YA                                 ] }; // Ñ Ð¯
	key <AB02> { [   Cyrillic_che,   Cyrillic_CHE                                 ] }; // Ñ Ð§
	key <AB03> { [    Cyrillic_es,    Cyrillic_ES                                 ] }; // Ñ Ð¡
	key <AB04> { [    Cyrillic_em,    Cyrillic_EM                                 ] }; // Ð¼ Ð
	key <AB05> { [     Cyrillic_i,     Cyrillic_I                                 ] }; // Ð¸ Ð
	key <AB06> { [    Cyrillic_te,    Cyrillic_TE                                 ] }; // Ñ Ð¢
	key <AB07> { [      0x10004e3,      0x10004e2                                 ] }; // Ó£ Ó¢
	key <AB08> { [    Cyrillic_be,    Cyrillic_BE                                 ] }; // Ð± Ð
	key <AB09> { [    Cyrillic_yu,    Cyrillic_YU                                 ] }; // Ñ Ð®
	key <AB10> { [         period,          comma                                 ] }; // . ,
	key <AC01> { [    Cyrillic_ef,    Cyrillic_EF                                 ] }; // Ñ Ð¤
	key <AC02> { [      0x10004b7,      0x10004b6                                 ] }; // Ò· Ò¶
	key <AC03> { [    Cyrillic_ve,    Cyrillic_VE                                 ] }; // Ð² Ð
	key <AC04> { [     Cyrillic_a,     Cyrillic_A                                 ] }; // Ð° Ð
	key <AC05> { [    Cyrillic_pe,    Cyrillic_PE                                 ] }; // Ð¿ Ð
	key <AC06> { [    Cyrillic_er,    Cyrillic_ER                                 ] }; // Ñ Ð 
	key <AC07> { [     Cyrillic_o,     Cyrillic_O                                 ] }; // Ð¾ Ð
	key <AC08> { [    Cyrillic_el,    Cyrillic_EL                                 ] }; // Ð» Ð
	key <AC09> { [    Cyrillic_de,    Cyrillic_DE                                 ] }; // Ð´ Ð
	key <AC10> { [   Cyrillic_zhe,   Cyrillic_ZHE                                 ] }; // Ð¶ Ð
	key <AC11> { [     Cyrillic_e,     Cyrillic_E                                 ] }; // Ñ Ð­
	key <AD01> { [ Cyrillic_shorti, Cyrillic_SHORTI                               ] }; // Ð¹ Ð
	key <AD02> { [      0x100049b,      0x100049a                                 ] }; // Ò Ò
	key <AD03> { [     Cyrillic_u,     Cyrillic_U                                 ] }; // Ñ Ð£
	key <AD04> { [    Cyrillic_ka,    Cyrillic_KA                                 ] }; // Ðº Ð
	key <AD05> { [    Cyrillic_ie,    Cyrillic_IE                                 ] }; // Ðµ Ð
	key <AD06> { [    Cyrillic_en,    Cyrillic_EN                                 ] }; // Ð½ Ð
	key <AD07> { [   Cyrillic_ghe,   Cyrillic_GHE                                 ] }; // Ð³ Ð
	key <AD08> { [   Cyrillic_sha,   Cyrillic_SHA                                 ] }; // Ñ Ð¨
	key <AD09> { [      0x10004b3,      0x10004b2                                 ] }; // Ò³ Ò²
	key <AD10> { [    Cyrillic_ze,    Cyrillic_ZE                                 ] }; // Ð· Ð
	key <AD11> { [    Cyrillic_ha,    Cyrillic_HA                                 ] }; // Ñ Ð¥
	key <AD12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN                           ] }; // Ñ Ðª
	key <AE01> { [              1,         exclam,      0x10000a7                 ] }; // 1 ! Â§
	key <AE02> { [              2,       quotedbl,      0x10000ab,      0x10000bb ] }; // 2 " Â« Â»
	key <AE03> { [              3,     numerosign                                 ] }; // 3 â
	key <AE04> { [              4,      semicolon                                 ] }; // 4 ;
	key <AE05> { [              5,        percent                                 ] }; // 5 %
	key <AE06> { [              6,          colon,      0x1002013                 ] }; // 6 : â
	key <AE07> { [              7,       question,      ampersand                 ] }; // 7 ? &
	key <AE08> { [              8,       asterisk                                 ] }; // 8 *
	key <AE09> { [              9,      parenleft                                 ] }; // 9 (
	key <AE10> { [              0,     parenright,      0x10000b0                 ] }; // 0 ) Â°
	key <AE11> { [      0x1000493,      0x1000492,          minus,     underscore ] }; // Ò Ò - _
	key <AE12> { [      0x10004ef,      0x10004ee,          equal,           plus ] }; // Ó¯ Ó® = +
	key <BKSL> { [      backslash,          slash                                 ] }; // \ /
	key <LSGT> { [          slash,            bar                                 ] }; // / |
	key <TLDE> { [    Cyrillic_io,    Cyrillic_IO                                 ] }; // Ñ Ð
};

// --------------------------------------------------------------------
// -------------- Tojiki Rusi Keyboard Layout--------------------------
// --------------------------------------------------------------------
// AEN <aen@logic.ru>
// 2001/12/23 by Leon Kanter <leon@blackcatlinux.com>
// 2005/12/09 Valery Inozemtsev <shrek@altlinux.ru>
// Pablo Saratxaga <pablo@mandrakesoft> (for the dead keys changes)
// --------------------------------------------------------------------

xkb_symbols "legacy"
{
	name[Group1] = "Tajik (legacy)";

	include "kpdl(comma)"
	include "level3(ralt_switch)"

	key <AB01> { [    Cyrillic_ya,    Cyrillic_YA                                 ] }; // Ñ Ð¯
	key <AB02> { [   Cyrillic_che,   Cyrillic_CHE,      0x10004b7,      0x10004b6 ] }; // Ñ Ð§ Ò· Ò¶
	key <AB03> { [    Cyrillic_es,    Cyrillic_ES                                 ] }; // Ñ Ð¡
	key <AB04> { [    Cyrillic_em,    Cyrillic_EM                                 ] }; // Ð¼ Ð
	key <AB05> { [     Cyrillic_i,     Cyrillic_I,      0x10004e3,      0x10004e2 ] }; // Ð¸ Ð Ó£ Ó¢
	key <AB06> { [    Cyrillic_te,    Cyrillic_TE                                 ] }; // Ñ Ð¢
	key <AB07> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN                           ] }; // Ñ Ð¬
	key <AB08> { [    Cyrillic_be,    Cyrillic_BE                                 ] }; // Ð± Ð
	key <AB09> { [    Cyrillic_yu,    Cyrillic_YU                                 ] }; // Ñ Ð®
	key <AB10> { [         period,          comma                                 ] }; // . ,
	key <AC01> { [    Cyrillic_ef,    Cyrillic_EF                                 ] }; // Ñ Ð¤
	key <AC02> { [  Cyrillic_yeru,  Cyrillic_YERU                                 ] }; // Ñ Ð«
	key <AC03> { [    Cyrillic_ve,    Cyrillic_VE                                 ] }; // Ð² Ð
	key <AC04> { [     Cyrillic_a,     Cyrillic_A                                 ] }; // Ð° Ð
	key <AC05> { [    Cyrillic_pe,    Cyrillic_PE                                 ] }; // Ð¿ Ð
	key <AC06> { [    Cyrillic_er,    Cyrillic_ER                                 ] }; // Ñ Ð 
	key <AC07> { [     Cyrillic_o,     Cyrillic_O                                 ] }; // Ð¾ Ð
	key <AC08> { [    Cyrillic_el,    Cyrillic_EL                                 ] }; // Ð» Ð
	key <AC09> { [    Cyrillic_de,    Cyrillic_DE                                 ] }; // Ð´ Ð
	key <AC10> { [   Cyrillic_zhe,   Cyrillic_ZHE                                 ] }; // Ð¶ Ð
	key <AC11> { [     Cyrillic_e,     Cyrillic_E                                 ] }; // Ñ Ð­
	key <AD01> { [ Cyrillic_shorti, Cyrillic_SHORTI                               ] }; // Ð¹ Ð
	key <AD02> { [   Cyrillic_tse,   Cyrillic_TSE                                 ] }; // Ñ Ð¦
	key <AD03> { [     Cyrillic_u,     Cyrillic_U,      0x10004ef,      0x10004ee ] }; // Ñ Ð£ Ó¯ Ó®
	key <AD04> { [    Cyrillic_ka,    Cyrillic_KA,      0x100049b,      0x100049a ] }; // Ðº Ð Ò Ò
	key <AD05> { [    Cyrillic_ie,    Cyrillic_IE                                 ] }; // Ðµ Ð
	key <AD06> { [    Cyrillic_en,    Cyrillic_EN                                 ] }; // Ð½ Ð
	key <AD07> { [   Cyrillic_ghe,   Cyrillic_GHE,      0x1000493,      0x1000492 ] }; // Ð³ Ð Ò Ò
	key <AD08> { [   Cyrillic_sha,   Cyrillic_SHA                                 ] }; // Ñ Ð¨
	key <AD09> { [ Cyrillic_shcha, Cyrillic_SHCHA                                 ] }; // Ñ Ð©
	key <AD10> { [    Cyrillic_ze,    Cyrillic_ZE                                 ] }; // Ð· Ð
	key <AD11> { [    Cyrillic_ha,    Cyrillic_HA,      0x10004b3,      0x10004b2 ] }; // Ñ Ð¥ Ò³ Ò²
	key <AD12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN                           ] }; // Ñ Ðª
	key <AE01> { [              1,         exclam,      0x10000a7                 ] }; // 1 ! Â§
	key <AE02> { [              2,       quotedbl,      0x10000ab,      0x10000bb ] }; // 2 " Â« Â»
	key <AE03> { [              3,     numerosign                                 ] }; // 3 â
	key <AE04> { [              4,      semicolon                                 ] }; // 4 ;
	key <AE05> { [              5,        percent                                 ] }; // 5 %
	key <AE06> { [              6,          colon,      0x1002013                 ] }; // 6 : â
	key <AE07> { [              7,       question,      ampersand                 ] }; // 7 ? &
	key <AE08> { [              8,       asterisk                                 ] }; // 8 *
	key <AE09> { [              9,      parenleft                                 ] }; // 9 (
	key <AE10> { [              0,     parenright                                 ] }; // 0 )
	key <AE11> { [          minus,     underscore                                 ] }; // - _
	key <AE12> { [          equal,           plus                                 ] }; // = +
	key <BKSL> { [      backslash,          slash                                 ] }; // \ /
	key <LSGT> { [          slash,            bar                                 ] }; // / |
	key <TLDE> { [    Cyrillic_io,    Cyrillic_IO                                 ] }; // Ñ Ð
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        // Nazar Annagurban <nazar_xg@hotmail.com>, 2009

// Default layout (based on Vista Turkmen layout)
default  partial
xkb_symbols "basic" {

    include "us"
    name[Group1]="Turkmen";

    key <TLDE> {	[    zcaron, 	Zcaron,		grave,	asciitilde	]	};

    key <AD01> {	[ adiaeresis, 	Adiaeresis,	q,	Q 	]	};
    key <AD11> {	[    ncaron, 	Ncaron,		bracketleft,	braceleft	]	};
    key <AD12> {	[odiaeresis, 	Odiaeresis, 	bracketright,	braceright	]	};

    key <AB02> {	[udiaeresis, 	Udiaeresis,	x,	X	]	};
    key <AB03> {	[  ccedilla, 	Ccedilla,	c,	C	]	};
    key <AB04> {	[    yacute, 	Yacute, 	v,	V	]	};

    key <BKSL> {	[  scedilla, 	Scedilla,	backslash,         bar	]	};

    include "level3(ralt_switch)"
};

// Turkmen Alt-Q Layout
// This layout provides turkmen letter via the AltGr key
partial
xkb_symbols "alt" {

    include "us"
    name[Group1]="Turkmen (Alt-Q)";

    key <AD06> {	[	  y,	Y,	yacute,		Yacute		]	};
    key <AD07> {	[	  u,	U,	udiaeresis,	Udiaeresis	]	};
    key <AD09> {	[	  o,	O,	odiaeresis,	Odiaeresis	]	};

    key <AC01> {	[	  a,	A,	adiaeresis,	Adiaeresis	]	};
    key <AC02> {	[	  s,	S,	scedilla,	Scedilla	]	};

    key <AB01> {	[	  z,	Z,	zcaron,		Zcaron		]	};
    key <AB03> {	[  	  c,	C,	ccedilla,	Ccedilla	]	};
    key <AB06> {	[	  n,	N,	ncaron,		Ncaron		]	};

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             // Keyboard layouts for Turkey.
// This file distributed without any expressed or implied warranty.
// NilgÃ¼n Belma BugÃ¼ner <nilgun@belgeler.org>, 2005

// Turkish Q layout
default  partial
xkb_symbols "basic" {

    include "latin"

    name[Group1]="Turkish";

    key <AE01>  { [         1,    exclam,        greater,    exclamdown ] };
    key <AE02>  { [         2, apostrophe,      sterling,   twosuperior ] };
    key <AE03>  { [         3,asciicircum,    numbersign, threesuperior ] };
    key <AE04>  { [         4,       plus,        dollar,    onequarter ] };
    key <AE06>  { [         6,  ampersand, threequarters,    VoidSymbol ] };
    key <AE07>  { [         7,      slash,     braceleft,    VoidSymbol ] };
    key <AE08>  { [         8,  parenleft,   bracketleft,    VoidSymbol ] };
    key <AE09>  { [         9, parenright,  bracketright,     plusminus ] };
    key <AE10>  { [         0,      equal,    braceright,        degree ] };
    key <AE11>  { [  asterisk,   question,     backslash,  questiondown ] };
    key <AE12>  { [     minus, underscore,           bar,    VoidSymbol ] };

    key <AD02>  { [         w,          W,    VoidSymbol,    VoidSymbol ] };
    key <AD03>  { [         e,          E,      EuroSign,    VoidSymbol ] };
    key <AD05>  { [         t,          T,     trademark,    VoidSymbol ] };
    key <AD07>  { [         u,          U,   ucircumflex,   Ucircumflex ] };
    key <AD08>  { type[group1] = "FOUR_LEVEL_ALPHABETIC",
                  [  idotless,          I,   icircumflex,   Icircumflex ] };
    key <AD09>  { [         o,          O,   ocircumflex,   Ocircumflex ] };
    key <AD10>  { [         p,          P,    VoidSymbol,    VoidSymbol ] };
    key <AD11>  { [    gbreve,     Gbreve                               ] };
    key <AD12>  { [udiaeresis, Udiaeresis,    asciitilde,   dead_macron ] };

    key <AC01>  { [         a,          A,   acircumflex,   Acircumflex ] };
    key <AC02>  { [         s,          S,       section,    VoidSymbol ] };
    key <AC03>  { [         d,          D,    VoidSymbol,    VoidSymbol ] };
    key <AC04>  { [         f,          F,   ordfeminine,    VoidSymbol ] };
    key <AC05>  { [         g,          G,    VoidSymbol,    VoidSymbol ] };
    key <AC06>  { [         h,          H,    VoidSymbol,    VoidSymbol ] };
    key <AC08>  { [         k,          K,    VoidSymbol,    VoidSymbol ] };
    key <AC09>  { [         l,          L,    VoidSymbol,    VoidSymbol ] };
    key <AC10>  { [  scedilla,   Scedilla,         acute,    dead_acute ] };
    key <AC11>  { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC",
                  [         i,  Iabovedot,    apostrophe,    dead_caron ] };
    key <TLDE>  { [  quotedbl,     eacute,          less,        degree ] };

    key <BKSL>  { [     comma,  semicolon,         grave,    dead_grave ] };
    key <LSGT>  { [      less,    greater,           bar,     brokenbar ] };
    key <AB08>  { [odiaeresis, Odiaeresis,      multiply,    VoidSymbol ] };
    key <AB09>  { [  ccedilla,   Ccedilla,periodcentered,      division ] };
    key <AB10>  { [    period,      colon, dead_abovedot, dead_abovedot ] };

    include "kpdl(comma)"
    include "level3(ralt_switch)"
};


// Turkish F layout
partial
xkb_symbols "f" {

    include "latin"

    name[Group1]="Turkish (F)";

    key <AE01>  { [         1,     exclam,   onesuperior,    exclamdown ] };
    key <AE02>  { [         2,   quotedbl,   twosuperior,    VoidSymbol ] };
    key <AE03>  { [         3,asciicircum,    numbersign, threesuperior ] };
    key <AE04>  { [         4,     dollar,    onequarter,    VoidSymbol ] };
    key <AE06>  { [         6,  ampersand, threequarters,    VoidSymbol ] };
    key <AE07>  { [         7, apostrophe,     braceleft,    VoidSymbol ] };
    key <AE08>  { [         8,  parenleft,   bracketleft,    VoidSymbol ] };
    key <AE09>  { [         9, parenright,  bracketright,     plusminus ] };
    key <AE10>  { [         0,      equal,    braceright,        degree ] };
    key <AE11>  { [     slash,   question,     backslash,  questiondown ] };
    key <AE12>  { [     minus, underscore,           bar,    VoidSymbol ] };

    key <AD01>  { [         f,          F,            at,    VoidSymbol ] };
    key <AD02>  { [         g,          G,    VoidSymbol,    VoidSymbol ] };
    key <AD03>  { [    gbreve,     Gbreve,    VoidSymbol,    VoidSymbol ] };
    key <AD04>  { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC",
                  [  idotless,          I,     paragraph,    VoidSymbol ] };
    key <AD05>  { [         o,          O,   ocircumflex,   Ocircumflex ] };
    key <AD06>  { [         d,          D,           yen,    VoidSymbol ] };
    key <AD07>  { [         r,          R,    registered,    VoidSymbol ] };
    key <AD08>  { [         n,          N,    VoidSymbol,    VoidSymbol ] };
    key <AD09>  { [         h,          H,        degree,    VoidSymbol ] };
    key <AD10>  { [         p,          P,      sterling,    VoidSymbol ] };
    key <AD11>  { [         q,          Q,dead_diaeresis,dead_abovering ] };
    key <AD12>  { [         w,          W,    asciitilde,    dead_breve ] };

    key <AC01>  { [         u,          U,   ucircumflex,   Ucircumflex ] };
    key <AC02>  { type[group1] = "FOUR_LEVEL_ALPHABETIC",
                  [         i,  Iabovedot,   icircumflex,   Icircumflex ] };
    key <AC03>  { [         e,          E,      EuroSign,    VoidSymbol ] };
    key <AC04>  { [         a,          A,   acircumflex,   Acircumflex ] };
    key <AC05>  { [udiaeresis, Udiaeresis,   ucircumflex,   Ucircumflex ] };
    key <AC06>  { [         t,          T,     trademark,    VoidSymbol ] };
    key <AC07>  { [         k,          K,    VoidSymbol,    VoidSymbol ] };
    key <AC08>  { [         m,          M,            mu,    VoidSymbol ] };
    key <AC09>  { [         l,          L,    VoidSymbol,    VoidSymbol ] };
    key <AC10>  { [         y,          Y,         acute,    dead_acute ] };
    key <AC11>  { [  scedilla,   Scedilla,    numbersign,    dead_caron ] };
    key <TLDE>  { [      plus,   asterisk,       notsign,     plusminus ] };

    key <BKSL>  { [         x,          X,         grave,    dead_grave ] };
    key <AB01>  { [         j,          J, guillemotleft,    VoidSymbol ] };
    key <AB02>  { [odiaeresis, Odiaeresis,guillemotright,    VoidSymbol ] };
    key <AB03>  { [         v,          V, leftdoublequotemark, VoidSymbol ] };
    key <AB04>  { [         c,          C,          cent,     copyright ] };
    key <AB05>  { [  ccedilla,   Ccedilla,rightdoublequotemark, VoidSymbol ] };
    key <AB06>  { [         z,          Z,    VoidSymbol,    VoidSymbol ] };
    key <AB07>  { [         s,          S,       section,    VoidSymbol ] };
    key <AB08>  { [         b,          B,      multiply,  nobreakspace ] };
    key <AB09>  { [    period,      colon,      division, dead_abovedot ] };
    key <AB10>  { [     comma,  semicolon,periodcentered,    VoidSymbol ] };
    key <LSGT>  { [     less,     greater,           bar,     brokenbar ] };

    include "kpdl(comma)"
    include "level3(ralt_switch)"
};

// Turkish Alt-Q layout
partial
xkb_symbols "alt" {

    include "latin"

    name[Group1]="Turkish (Alt-Q)";

    key <AE07>  { [         7,   ampersand,  lowleftcorner,  upleftcorner ] };
    key <AE08>  { [         8,    asterisk,          leftt,          topt ] };
    key <AE09>  { [         9,   parenleft,         rightt,          bott ] };
    key <AE10>  { [         0,  parenright, lowrightcorner, uprightcorner ] };
    key <AE11>  { [     minus,  underscore, horizlinescan5,       vertbar ] };
    key <AE12>  { [     equal,        plus,  crossinglines                ] };

    key <AD03>  { [         e,           E,       EuroSign,    VoidSymbol ] };
//    key <AD05>    { [         t,           T,      trademark,    VoidSymbol >
    key <AD07>  { [         u,           U,     udiaeresis,    Udiaeresis ] };
    key <AD08>  { [         i,           I,       idotless,     Iabovedot ] };
    key <AD09>  { [         o,           O,     odiaeresis,    Odiaeresis ] };
    key <AC01>  { [         a,           A,    acircumflex,   Acircumflex ] };
    key <AC02>  { [         s,           S,       scedilla,      Scedilla ] };
    key <AC05>  { [         g,           G,         gbreve,        Gbreve ] };

    key <AB03>  { [         c,           C,       ccedilla,      Ccedilla ] };

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {
    include "tr(basic)"
};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {
    include "tr(Sundeadkeys)"
    name[Group1]="Turkish (Sun dead keys)";
};

// Kurdish Q layout
// Erdal Ronahi <erdal.ronahi@gmail.com>, 2006
// http://ferheng.org
partial
xkb_symbols "ku" {

   include "tr(basic)"

   name[Group1]="Kurdish (Turkey, Latin Q)";

    key <AD08>  { [          i,           I,     idotless,            I ] };
    key <AD11>  { [          x,           X,       gbreve,       Gbreve ] };
    key <AD12>  { [ucircumflex, Ucircumflex,   asciitilde,  dead_macron ] };
    key <AC11>  { [icircumflex, Icircumflex,   apostrophe,   dead_caron ] };
    key <AB08>  { [ecircumflex, Ecircumflex,   odiaeresis,   Odiaeresis ] };
};

// Kurdish F layout
partial
xkb_symbols "ku_f" {

    include "tr(f)"

    name[Group1]="Kurdish (Turkey, F)";

    key <AD03>  { [          x,           X,       gbreve,       Gbreve ] };
    key <AD04>  { [          i,           I,    paragraph,   VoidSymbol ] };
    key <AD05>  { [          o,           O,  ocircumflex,  Ocircumflex ] };

    key <AC01>  { [ucircumflex, Ucircumflex,   udiaeresis,   Udiaeresis ] };
    key <AC02>  { [icircumflex, Icircumflex,            i,    Iabovedot ] };
    key <AC05>  { [          u,           U,   udiaeresis,   Udiaeresis ] };
    key <AB02>  { [ecircumflex, Ecircumflex,   odiaeresis,   Odiaeresis ] };
};

// Kurdish Alt-Q layout
partial
xkb_symbols "ku_alt" {

    include "tr(alt)"

    name[Group1]="Kurdish (Turkey, Latin Alt-Q)";

    key <AD03>  { [          e,           E,  ecircumflex,  Ecircumflex ] };
    key <AD07>  { [          u,           U,  ucircumflex,  Ucircumflex ] };
    key <AD08>  { [          i,           I,  icircumflex,  Icircumflex ] };
    key <AD09>  { [          o,           O,   odiaeresis,   Odiaeresis ] };
};

// Turkish international Q layout
// Alexis Pellicier <alexis.pellicier@nds.k12.tr>, 2007
partial
xkb_symbols "intl" {

    include "latin"

    name[Group1]="Turkish (international with dead keys)";

    key <AE01>  { type[group1] = "FOUR_LEVEL", [         1,    exclam,      onesuperior,    exclamdown ] };
    key <AE02>  { type[group1] = "FOUR_LEVEL", [         2, apostrophe,        sterling,   twosuperior ] };
    key <AE03>  { type[group1] = "FOUR_LEVEL", [         3, dead_circumflex, numbersign, threesuperior ] };
    key <AE04>  { type[group1] = "FOUR_LEVEL", [         4,       plus,          dollar,    onequarter ] };
    key <AE06>  { type[group1] = "FOUR_LEVEL", [         6,  ampersand,   threequarters,    VoidSymbol ] };
    key <AE07>  { type[group1] = "FOUR_LEVEL", [         7,      slash,       braceleft,    VoidSymbol ] };
    key <AE08>  { type[group1] = "FOUR_LEVEL", [         8,  parenleft,     bracketleft,    VoidSymbol ] };
    key <AE09>  { type[group1] = "FOUR_LEVEL", [         9, parenright,    bracketright,     plusminus ] };
    key <AE10>  { type[group1] = "FOUR_LEVEL", [         0,      equal,      braceright,        degree ] };
    key <AE11>  { type[group1] = "FOUR_LEVEL", [  asterisk,   question,       backslash,  questiondown ] };
    key <AE12>  { type[group1] = "FOUR_LEVEL", [     minus, underscore,        division,    VoidSymbol ] };

    key <AD02>  { [         w,          W,     VoidSymbol,    VoidSymbol ] };
    key <AD03>  { [         e,          E,       EuroSign,          cent ] };
    key <AD05>  { [         t,          T,      trademark,    VoidSymbol ] };
    key <AD07>  { [         u,          U,    ucircumflex,   Ucircumflex ] };
    key <AD08>  { [  idotless,          I,    icircumflex,   Icircumflex ] };
    key <AD09>  { [         o,          O,    ocircumflex,   Ocircumflex ] };
    key <AD10>  { [         p,          P,     VoidSymbol,    VoidSymbol ] };
    key <AD11>  { [    gbreve,     Gbreve, dead_diaeresis                ] };
    key <AD12>  { [udiaeresis, Udiaeresis,     dead_tilde,   dead_macron ] };

    key <AC01>  { [         a,          A,    acircumflex,   Acircumflex ] };
    key <AC02>  { [         s,          S,        section,    VoidSymbol ] };
    key <AC03>  { [         d,          D,     VoidSymbol,    VoidSymbol ] };
    key <AC04>  { [         f,          F,    ordfeminine,    VoidSymbol ] };
    key <AC05>  { [         g,          G,     VoidSymbol,    VoidSymbol ] };
    key <AC06>  { [         h,          H,     VoidSymbol,    VoidSymbol ] };
    key <AC08>  { [         k,          K,     VoidSymbol,    VoidSymbol ] };
    key <AC09>  { [         l,          L,     VoidSymbol,    VoidSymbol ] };
    key <AC10>  { [  scedilla,   Scedilla,     dead_acute,    dead_acute ] };
    key <AC11>  { [         i,  Iabovedot,     apostrophe,    dead_caron ] };

    key <TLDE>  { type[group1] = "FOUR_LEVEL", [  quotedbl,     eacute,       plusminus,        degree ] };
    key <BKSL>  { type[group1] = "FOUR_LEVEL", [     comma,  semicolon,      dead_grave,    dead_grave ] };
    key <LSGT>  { type[group1] = "FOUR_LEVEL", [      less,    greater,             bar,     brokenbar ] };

    key <AB08>  { [odiaeresis, Odiaeresis,       multiply,    VoidSymbol ] };
    key <AB09>  { [  ccedilla,   Ccedilla, periodcentered,      division ] };
    key <AB10>  { type[group1] = "FOUR_LEVEL", [    period,      colon,   dead_abovedot, dead_abovedot ] };

    include "nbsp(level3)"
    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "olpc" {

    include "tr(intl)"

    name[Group1]= "Turkish";

    key <AE01>  { [         1,      exclam,           VoidSymbol,     VoidSymbol ] };
    key <AE06>  { [         6,   ampersand,           VoidSymbol,     VoidSymbol ] };
    key <AE12>  { type[group1] = "FOUR_LEVEL",
                  [     minus,  underscore,                  bar,     VoidSymbol ] };

    key <AB03>  { [         c,           C,  leftdoublequotemark,     VoidSymbol ] };
    key <AB04>  { [         v,           V, rightdoublequotemark,     VoidSymbol ] };
    key <AB05>  { [         b,           B,           VoidSymbol,     VoidSymbol ] };
    key <AB08>  { [odiaeresis,  Odiaeresis,           VoidSymbol,     VoidSymbol ] };
    key <AB09>  { [  ccedilla,    Ccedilla,             multiply,     VoidSymbol ] };
    key <AB10>  { [    period,       colon,             division,  dead_abovedot ] };

    key <I219> { [       less,     greater,           VoidSymbol,     VoidSymbol ] };
};

// Crimean Tatar (Crimean Turkish) layouts.
// First released (by Ubuntu): 2009-02-24.
// These layouts are not yet standard.  In particular, the mapping of
// the letter 'x' might change in the future.  This letter is not used
// in the current official alphabet, but is included in the layouts for
// foreign words and for shortcuts.
// ReÅat SABIQ <tilde.birlik @ gmail . com>, 2009
// ÃzgÃ¼r Qarahan <qarahan @ gmail . com>, 2009

// Crimean Tatar (Crimean Turkish) Q layout
partial
xkb_symbols "crh" {

    include "tr(basic)"

    name[Group1]="Crimean Tatar (Turkish Q)";

    key <AE11>  { [         x,          X,        asterisk,        question ] };

    key <AC04>  { [         f,          F,          iacute,          Iacute ] };
    key <AC07>  { [         j,          J,          ibreve,          Ibreve ] };
    key <TLDE>  { [  quotedbl,  backslash,            less,          degree ] };

    key <AB02>  { [    ntilde,     Ntilde,  guillemotright,         greater ] };
};

// Crimean Tatar (Crimean Turkish) F layout
partial
xkb_symbols "crh_f" {

    include "tr(f)"

    name[Group1]="Crimean Tatar (Turkish F)";

    key <AE11>  { [         x,          X,           slash,        question ] };

    key <AD04>  { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC",
                  [  idotless,          I,          iacute,          Iacute ] };

    key <AC07>  { [         k,          K,          ibreve,          Ibreve ] };
    key <TLDE>  { [      plus,   asterisk,       backslash,       plusminus ] };

    key <BKSL>  { [    ntilde,     Ntilde,           grave,      dead_grave ] };
};

// Crimean Tatar (Crimean Turkish) Alt-Q layout
partial
xkb_symbols "crh_alt" {

    include "tr(alt)"

    name[Group1]="Crimean Tatar (Turkish Alt-Q)";

    key <AC04>  { [         f,          F,          iacute,          Iacute ] };
    key <AC07>  { [         j,          J,          ibreve,          Ibreve ] };

    key <AB06>  { [         n,          N,          ntilde,          Ntilde ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/tr(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             default  partial alphanumeric_keys
xkb_symbols "tw" {

    include "us(basic)"

    name[Group1]= "Taiwanese";

    key <TLDE> { [     grave, asciitilde,    dead_grave,       dead_tilde ] };
    key <AE01> { [	   1,     exclam,         U030D,       exclamdown ] };
    key <AE02> { [	   2,         at,         U0358,      twosuperior ] };
    key <AE03> { [	   3, numbersign,       section,    threesuperior ] };
    key <AE04> { [	   4,     dollar,           yen,         sterling ] };
    key <AE05> { [	   5,    percent,      EuroSign,             cent ] };
    key <AE06> { [         6,asciicircum, dead_circumflex,     dead_caron ] };
    key <AE07> { [	   7,  ampersand,    dead_acute,         NoSymbol ] };
    key <AE08> { [	   8,   asterisk,  dead_cedilla,        dead_horn ] };
    key <AE09> { [	   9,  parenleft,   dead_ogonek,       dead_breve ] };
    key <AE10> { [	   0, parenright, dead_abovedot,   dead_abovering ] };
    key <AE11> { [     minus, underscore,   dead_macron,        plusminus ] };
    key <AE12> { [     equal,       plus,      multiply,         division ] };

    key <AD01> { [	   q,          Q,     paragraph,           degree ] };
    key <AD03> { [	   e,          E,        eacute,           Eacute ] };
    key <AD04> { [	   r,          R,         U1E5F,            U1E5E ] };
    key <AD05> { [	   t,          T,         U1E6F,            U1E6E ] };
    key <AD06> { [	   y,          Y,         U1E73,            U1E72 ] };
    key <AD07> { [	   u,          U,         U0289,            U0244 ] };
    key <AD08> { [	   i,          I,         U0268,            U0197 ] };
    key <AD09> { [	   o,          O,        oslash,         Ooblique ] };

    key <AC02> { [	   s,          S,        ssharp,         NoSymbol ] };
    key <AC03> { [	   d,          D,         U1E0F,            U1E0E ] };
    key <AC05> { [	   g,          G,           eng,              ENG ] };
    key <AC09> { [         l,          L,         U1E3B,            U1E3A ] };
    key <AC10> { [ semicolon,      colon,         U02D0,   dead_diaeresis ] };
    key <AC11> { [apostrophe,   quotedbl,         U02BC, dead_doubleacute ] };

    key <AB03> { [	   c,          C,      ccedilla,         Ccedilla ] };
    key <AB06> { [	   n,          N,        ntilde,           Ntilde ] };
    key <AB07> { [	   m,          M,            mu,               mu ] };
    key <AB08> { [     comma,       less, dead_belowcomma,  guillemotleft ] };
    key <AB09> { [    period,    greater, dead_belowdot,   guillemotright ] };
    key <AB10> { [     slash,   question,  questiondown,        dead_hook ] };
    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "indigenous" {

    include "tw(tw)"

    name[Group1]= "Taiwanese (indigenous)";

    key <AC11> { [     U02BC,   quotedbl,    apostrophe, dead_doubleacute ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "saisiyat" {

    include "tw(indigenous)"

    name[Group1]= "Saisiyat (Taiwan)";

    key <AC10> { [     U02D0,      colon,     semicolon,   dead_diaeresis ] };

    include "level3(ralt_switch)"
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/tw(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      // Keyboard layout for Swahili in Arabic script.
// Based on Martin Vidner's Buckwalter transliteration variant of the Arabic keyboard
// Please notify any corrections or omissions to
// Kevin Donnelly (kevin@dotmon.com)

default  partial alphanumeric_keys
xkb_symbols "swa" {
    name[Group1]= "Swahili (Tanzania)";

    key <TLDE> {  [  0x1000670,         VoidSymbol             ]  };

    key <AE01> {  [  0x1000661,         VoidSymbol             ]  };
    key <AE02> {  [  0x1000662,         VoidSymbol             ]  };
    key <AE03> {  [  0x1000663,         VoidSymbol             ]  };
    key <AE04> {  [  0x1000664,         VoidSymbol             ]  };
    key <AE05> {  [  0x1000665,         Arabic_percent         ]  };
    key <AE06> {  [  0x1000666,         VoidSymbol             ]  };
    key <AE07> {  [  0x1000667,         VoidSymbol             ]  };
    key <AE08> {  [  0x1000668,         VoidSymbol             ]  };
    key <AE09> {  [  0x1000669,         0x100fd3e              ]  };
    key <AE10> {  [  0x1000660,         0x100fd3f              ]  };
    key <AE11> {  [  minus,             Arabic_tatweel         ]  };
    key <AE12> {  [  equal,             plus                   ]  };

    key <AD01> {  [  Arabic_qaf,        Arabic_gaf             ]  };
    key <AD02> {  [  Arabic_waw,        Arabic_hamzaonwaw      ]  };
    key <AD03> {  [  0x1000656,         Arabic_ain             ]  };
    key <AD04> {  [  Arabic_ra,         Arabic_tteh            ]  };
    key <AD05> {  [  Arabic_teh,        Arabic_tah             ]  };
    key <AD06> {  [  Arabic_yeh,        Arabic_alefmaksura     ]  };
    key <AD07> {  [  Arabic_damma,      Arabic_dammatan        ]  };
    key <AD08> {  [  Arabic_kasra,      Arabic_hamzaonyeh      ]  };
    key <AD09> {  [  Arabic_sukun,      0x1000657              ]  };
    key <AD10> {  [  Arabic_peh,        Arabic_tehmarbuta      ]  };
    key <AD12> {  [  VoidSymbol,        VoidSymbol             ]  };

    key <AC01> {  [  Arabic_fatha,      Arabic_alef            ]  };
    key <AC02> {  [  Arabic_seen,       Arabic_sad             ]  };
    key <AC03> {  [  Arabic_dal,        Arabic_dad             ]  };
    key <AC04> {  [  Arabic_feh,        Arabic_fathatan        ]  };
    key <AC05> {  [  0x10006A0,         Arabic_ghain           ]  };
    key <AC06> {  [  Arabic_ha,         Arabic_hah             ]  };
    key <AC07> {  [  Arabic_jeem,       VoidSymbol             ]  };
    key <AC08> {  [  Arabic_kaf,        Arabic_kasratan        ]  };
    key <AC09> {  [  Arabic_lam,        Arabic_shadda          ]  };
    key <AC10> {  [  Arabic_semicolon,  VoidSymbol             ]  };
    key <AC11> {  [  Arabic_hamza,      VoidSymbol             ]  };

    key <AB01> {  [  Arabic_zain,       Arabic_zah             ]  };
    key <AB02> {  [  Arabic_khah,       VoidSymbol             ]  };
    key <AB03> {  [  Arabic_tcheh,      Arabic_sheen           ]  };
    key <AB04> {  [  0x10006A8,        Arabic_theh            ]  };
    key <AB05> {  [  Arabic_beh,        Arabic_thal            ]  };
    key <AB06> {  [  Arabic_noon,       VoidSymbol             ]  };
    key <AB07> {  [  Arabic_meem,       VoidSymbol             ]  };
    key <AB08> {  [  Arabic_comma,      Arabic_hamzaunderalef  ]  };
    key <AB09> {  [  0x10006d4,         Arabic_hamzaonalef     ]  };
    key <AB10> {  [  VoidSymbol,        Arabic_question_mark   ]  };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           // Typographic Keyboard
// Sergei Stolyarov <sergei@regolit.com>

// Initial contribution by Alexey Ten <alexeyten+deb@gmail.com>
// Additional contribution and code cleanup by Artur Dryomov <artur.dryomov@gmail.com>

// Mainly based on the layout proposed by Ilya Birman
// http://ilyabirman.ru/projects/typography-layout/

default  partial
xkb_symbols "base" {

    // 1st keyboard row
    key <TLDE> { [ NoSymbol,   NoSymbol,              NoSymbol,              approxeq ] }; // "~"
    key <AE01> { [ NoSymbol,   NoSymbol,           onesuperior,            exclamdown ] }; // "1"
    key <AE02> { [ NoSymbol,   NoSymbol,           twosuperior,               onehalf ] }; // "2"
    key <AE03> { [ NoSymbol,   NoSymbol,         threesuperior,              onethird ] }; // "3"
    key <AE04> { [ NoSymbol,   NoSymbol,                dollar,            onequarter ] }; // "4"
    key <AE05> { [ NoSymbol,   NoSymbol,                 U2030,              NoSymbol ] }; // "5"
    key <AE06> { [ NoSymbol,   NoSymbol,               uparrow,              NoSymbol ] }; // "6"
    key <AE07> { [ NoSymbol,   NoSymbol,             ampersand,          questiondown ] }; // "7"
    key <AE08> { [ NoSymbol,   NoSymbol,              infinity,             oneeighth ] }; // "8"
    key <AE09> { [ NoSymbol,   NoSymbol,             leftarrow,              NoSymbol ] }; // "9"
    key <AE10> { [ NoSymbol,   NoSymbol,            rightarrow,              NoSymbol ] }; // "0"
    key <AE11> { [ NoSymbol,   NoSymbol,                emdash,                endash ] }; // "-"
    key <AE12> { [ NoSymbol,   NoSymbol,              notequal,             plusminus ] }; // "="

    // 2nd keyboard row
    key <AD03> { [ NoSymbol,   NoSymbol,              EuroSign,              NoSymbol ] }; // "e"
    key <AD04> { [ NoSymbol,   NoSymbol,            registered,              NoSymbol ] }; // "r"
    key <AD05> { [ NoSymbol,   NoSymbol,             trademark,              NoSymbol ] }; // "t"
    key <AD06> { [ NoSymbol,   NoSymbol,                   yen,              NoSymbol ] }; // "y"
    key <AD10> { [ NoSymbol,   NoSymbol,                 acute,           doubleacute ] }; // "p"
    key <AD11> { [ NoSymbol,   NoSymbol,           bracketleft,             braceleft ] }; // "["
    key <AD12> { [ NoSymbol,   NoSymbol,          bracketright,            braceright ] }; // "]"

    // 3rd keyboard row
    key <AC01> { [ NoSymbol,   NoSymbol,                 U0301,              NoSymbol ] }; // "a"
    key <AC02> { [ NoSymbol,   NoSymbol,               section,              NoSymbol ] }; // "s"
    key <AC03> { [ NoSymbol,   NoSymbol,                degree,              division ] }; // "d"
    key <AC04> { [ NoSymbol,   NoSymbol,              sterling,              NoSymbol ] }; // "f"
    key <AC07> { [ NoSymbol,   NoSymbol,    doublelowquotemark,    singlelowquotemark ] }; // "j"
    key <AC08> { [ NoSymbol,   NoSymbol,   leftdoublequotemark,   leftsinglequotemark ] }; // "k"
    key <AC09> { [ NoSymbol,   NoSymbol,  rightdoublequotemark,  rightsinglequotemark ] }; // "l"
    key <AC10> { [ NoSymbol,   NoSymbol,   leftsinglequotemark,               minutes ] }; // ";"
    key <AC11> { [ NoSymbol,   NoSymbol,  rightsinglequotemark,               seconds ] }; // "'"

    // 4th keyboard row
    key <AB02> { [ NoSymbol,   NoSymbol,              multiply,                 U22C5 ] }; // "x"
    key <AB03> { [ NoSymbol,   NoSymbol,             copyright,                  cent ] }; // "c"
    key <AB04> { [ NoSymbol,   NoSymbol,             downarrow,                 U25CA ] }; // "v"
    key <AB07> { [ NoSymbol,   NoSymbol,                 U2212,    enfilledcircbullet ] }; // "m"
    key <AB08> { [ NoSymbol,   NoSymbol,         guillemotleft,                  less ] }; // ","
    key <AB09> { [ NoSymbol,   NoSymbol,        guillemotright,               greater ] }; // "."
    key <AB10> { [ NoSymbol,   NoSymbol,              ellipsis,              NoSymbol ] }; // "/"

    // 5th keyboard row
    key <SPCE> { [    space,      space,          nobreakspace,          nobreakspace ] }; // " "

    // Reference
    // U+2030 PER MILLE SIGN
    // U+0301 COMBINING ACUTE ACCENT
    // U+22C5 DOT OPERATOR
    // U+25CA LOZENGE
    // U+2212 MINUS SIGN

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            // Uzbek standard keyboard
//
// Mashrab Kuvatov <kmashrab@uni-bremen.de>
//
// History:
//
// Jun 2, 2003. Mashrab Kuvatov <kmashrab@uni-bremen.de>
//
// Created based on the Russian standard keyboard. AEN <aen@logic.ru>
// The following symbols of the Russian standard keyboard were replaced:
// minus (key <AE11>) with Byelorussian_shortu (U045e),
// equal (key <AE12>) with Cyrillic_ka_descender (U049b),
// Cyrillic_ha (key <AD11>) with Cyrillic_ghe_bar (U0493),
// Cyrillic_hardsign (key <AD12>) with Cyrillic_ha_descender (U04b3).
// The following symbols of the Russian standard keyboard were moved:
// Cyrillic_ze       to key <AC02> (English 's'),
// Cyrillic_sha      to key <AD08> (English 'i'),
// Cyrillic_ha       to key <AD09> (English 'o'),
// Cyrillic_hardsign to key <AD10> (English 'p').
//
// Feb 25, 2007. Mashrab Kuvatov <kmashrab@uni-bremen.de>
//
// Made cyrillic and latin variants. Default is cyrillic.
// Cyrillic variant is standard compliant. The standard
// was accepted by the official body of Uzbekistan. See
// http://www.uznet.net/index.php?option=com_content&task=view&id=288&Itemid=58
//
// Latin variant is somewhat experimental, since there is no
// official standard for it. It is a copy of "us" layout, where
// apostrophe is replaced with U02BB.

default  partial alphanumeric_keys
xkb_symbols "cyrillic" {

    name[Group1]= "Uzbek";

    key	<AE01> {	[		1,	    exclam	]	};
    key	<AE02> {	[		2,	  quotedbl	]	};
    key	<AE03> {	[		3,	numerosign	]	};
    key	<AE04> {	[		4,	 semicolon	]	};
    key	<AE05> {	[		5,	   percent	]	};
    key	<AE06> {	[		6,	     colon	]	};
    key	<AE07> {	[		7,	  question	]	};
    key	<AE08> {	[		8,	  asterisk	]	};
    key	<AE09> {	[		9,	 parenleft	]	};
    key	<AE10> {	[		0,	parenright	]	};
    key	<BKSL> {	[	backslash,	       bar	]	};
    key	<AB10> {	[	   period,	     comma	]	};
    key	<LSGT> {	[	    slash,	       bar	]	};

    key.type[group1]="ALPHABETIC";

    key	<AE11> {	[Cyrillic_ghe_bar, Cyrillic_GHE_bar	]	};
    key	<AE12> {	[Cyrillic_ha_descender, Cyrillic_HA_descender ]	};
    key	<TLDE> {	[     Cyrillic_io,     Cyrillic_IO	]	};
    key	<AD01> {	[ Cyrillic_shorti, Cyrillic_SHORTI	]	};
    key	<AD02> {	[    Cyrillic_tse,    Cyrillic_TSE	]	};
    key	<AD03> {	[      Cyrillic_u,      Cyrillic_U	]	};
    key	<AD04> {	[     Cyrillic_ka,     Cyrillic_KA	]	};
    key	<AD05> {	[     Cyrillic_ie,     Cyrillic_IE	]	};
    key	<AD06> {	[     Cyrillic_en,     Cyrillic_EN	]	};
    key	<AD07> {	[    Cyrillic_ghe,    Cyrillic_GHE	]	};
    key	<AD08> {	[    Cyrillic_sha,    Cyrillic_SHA	]	};
    key	<AD09> {	[ Byelorussian_shortu, Byelorussian_SHORTU ]	};
    key	<AD10> {	[     Cyrillic_ze,     Cyrillic_ZE	]	};
    key	<AD11> {	[     Cyrillic_ha,     Cyrillic_HA	]	};
    key	<AD12> {	[Cyrillic_hardsign, Cyrillic_HARDSIGN ]	};
    key	<AC01> {	[     Cyrillic_ef,     Cyrillic_EF	]	};
    key	<AC02> {	[Cyrillic_ka_descender, Cyrillic_KA_descender ]	};
    key	<AC03> {	[     Cyrillic_ve,     Cyrillic_VE	]	};
    key	<AC04> {	[      Cyrillic_a,      Cyrillic_A	]	};
    key	<AC05> {	[     Cyrillic_pe,     Cyrillic_PE	]	};
    key	<AC06> {	[     Cyrillic_er,     Cyrillic_ER	]	};
    key	<AC07> {	[      Cyrillic_o,      Cyrillic_O	]	};
    key	<AC08> {	[     Cyrillic_el,     Cyrillic_EL	]	};
    key	<AC09> {	[     Cyrillic_de,     Cyrillic_DE	]	};
    key	<AC10> {	[    Cyrillic_zhe,    Cyrillic_ZHE	]	};
    key	<AC11> {	[      Cyrillic_e,      Cyrillic_E	]	};
    key	<AB01> {	[     Cyrillic_ya,     Cyrillic_YA	]	};
    key	<AB02> {	[    Cyrillic_che,    Cyrillic_CHE	]	};
    key	<AB03> {	[     Cyrillic_es,     Cyrillic_ES	]	};
    key	<AB04> {	[     Cyrillic_em,     Cyrillic_EM	]	};
    key	<AB06> {	[     Cyrillic_te,     Cyrillic_TE	]	};
    key	<AB05> {	[      Cyrillic_i,      Cyrillic_I	]	};
    key	<AB07> {	[Cyrillic_softsign, Cyrillic_SOFTSIGN	]	};
    key	<AB08> {	[     Cyrillic_be,     Cyrillic_BE	]	};
    key	<AB09> {	[     Cyrillic_yu,     Cyrillic_YU	]	};
};

partial alphanumeric_keys
xkb_symbols "latin" {
    include "us"
    name[Group1]= "Uzbek (Latin)";
    key <AC11>  { [0x010002BB, quotedbl] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  // Keyboard layouts for the Ukraine.
// AEN <aen@logic.ru> & Leon Kanter <leon@geon.donetsk.ua>
// last changes 2007/10/03 by Andriy Rysin <arysin@yahoo.com>

// The legacy WinKeys layout extended on the third and fourth level with
// some Unicode symbols (typographic quotes, m-dash, n-dash, ...), some
// often-used Cyrillics from other Slavic languages, and some often-used
// ASCII symbols (slash, brackets, ...).
default  partial alphanumeric_keys
xkb_symbols "unicode" {

    include "ua(winkeys)"
    name[Group1]= "Ukrainian";

    key <TLDE> { [      apostrophe,           U02BC,          U0301,          asciitilde  ] };  // Apostrophe and Stress symbol
    key <AE01> { [               1,          exclam,    onesuperior                       ] };
    key <AE02> { [               2,        quotedbl,    twosuperior,               U2019  ] };  // single quote used often as an apostrophe (deprecated)
    key <AE03> { [               3,      numerosign,          U00A7,               U20B4  ] };  // Paragraph and Hryvnia sign
    key <AE04> { [               4,       semicolon,         dollar,            EuroSign  ] };
    key <AE05> { [               5,         percent,         degree                       ] };
    key <AE06> { [               6,           colon,           less                       ] };
    key <AE07> { [               7,        question,        greater                       ] };
    key <AE08> { [               8,        asterisk, enfilledcircbullet                   ] };
    key <AE09> { [               9,       parenleft,    bracketleft,           braceleft  ] };
    key <AE10> { [               0,      parenright,   bracketright,          braceright  ] };
    key <AE11> { [           minus,      underscore,         emdash,              endash  ] };
    key <AE12> { [           equal,            plus,       notequal,           plusminus  ] };

    key <AD03> { [      Cyrillic_u,      Cyrillic_U, Byelorussian_shortu, Byelorussian_SHORTU  ] };
    key <AD04> { [     Cyrillic_ka,     Cyrillic_KA,     registered                       ] };  // Registered tm
    key <AD05> { [     Cyrillic_ie,     Cyrillic_IE,    Cyrillic_io,         Cyrillic_IO  ] };
    key <AD12> { [    Ukrainian_yi,    Ukrainian_YI, Cyrillic_hardsign,Cyrillic_HARDSIGN  ] };
    key <AC02> { [     Ukrainian_i,     Ukrainian_I,  Cyrillic_yeru,       Cyrillic_YERU  ] };
    key <AC11> { [    Ukrainian_ie,    Ukrainian_IE,     Cyrillic_e,          Cyrillic_E  ] };

    key <BKSL> { [ Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN, backslash,  bar  ] };

    key <AB03> { [     Cyrillic_es,     Cyrillic_ES,      copyright                       ] };
    key <AB06> { [     Cyrillic_te,     Cyrillic_TE,      trademark                       ] };
    key <AB08> { [     Cyrillic_be,     Cyrillic_BE,  guillemotleft,  doublelowquotemark  ] };
    key <AB09> { [     Cyrillic_yu,     Cyrillic_YU, guillemotright, leftdoublequotemark  ] };
    key <AB10> { [          period,           comma,          slash,            ellipsis  ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "legacy" {

    name[Group1]= "Ukrainian (legacy)";

    key <TLDE> { [      apostrophe,      asciitilde  ] };
    key <AE01> { [               1,         exclam   ] };
    key <AE02> { [               2,        quotedbl  ] };
    key <AE03> { [               3,      numbersign  ] };
    key <AE04> { [               4,        asterisk  ] };
    key <AE05> { [               5,           colon  ] };
    key <AE06> { [               6,           comma  ] };
    key <AE07> { [               7,          period  ] };
    key <AE08> { [               8,       semicolon  ] };
    key <AE09> { [               9,       parenleft  ] };
    key <AE10> { [               0,      parenright  ] };
    key <AE11> { [           minus,      underscore  ] };
    key <AE12> { [           equal,            plus  ] };

    key <AD01> { [ Cyrillic_shorti, Cyrillic_SHORTI  ] };
    key <AD02> { [    Cyrillic_tse,    Cyrillic_TSE  ] };
    key <AD03> { [      Cyrillic_u,      Cyrillic_U  ] };
    key <AD04> { [     Cyrillic_ka,     Cyrillic_KA  ] };
    key <AD05> { [     Cyrillic_ie,     Cyrillic_IE  ] };
    key <AD06> { [     Cyrillic_en,     Cyrillic_EN  ] };
    key <AD07> { [    Cyrillic_ghe,    Cyrillic_GHE  ] };
    key <AD08> { [    Cyrillic_sha,    Cyrillic_SHA  ] };
    key <AD09> { [  Cyrillic_shcha,  Cyrillic_SHCHA  ] };
    key <AD10> { [     Cyrillic_ze,     Cyrillic_ZE  ] };
    key <AD11> { [     Cyrillic_ha,     Cyrillic_HA  ] };
    key <AD12> { [    Ukrainian_yi,    Ukrainian_YI  ] };
    key <BKSL> { [ Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };

    key <AC01> { [     Cyrillic_ef,     Cyrillic_EF  ] };
    key <AC02> { [     Ukrainian_i,     Ukrainian_I  ] };
    key <AC03> { [     Cyrillic_ve,     Cyrillic_VE  ] };
    key <AC04> { [      Cyrillic_a,     Cyrillic_A   ] };
    key <AC05> { [     Cyrillic_pe,     Cyrillic_PE  ] };
    key <AC06> { [     Cyrillic_er,     Cyrillic_ER  ] };
    key <AC07> { [      Cyrillic_o,     Cyrillic_O   ] };
    key <AC08> { [     Cyrillic_el,     Cyrillic_EL  ] };
    key <AC09> { [     Cyrillic_de,     Cyrillic_DE  ] };
    key <AC10> { [    Cyrillic_zhe,    Cyrillic_ZHE  ] };
    key <AC11> { [    Ukrainian_ie,    Ukrainian_IE  ] };

    key <AB01> { [     Cyrillic_ya,     Cyrillic_YA  ] };
    key <AB02> { [    Cyrillic_che,    Cyrillic_CHE  ] };
    key <AB03> { [     Cyrillic_es,     Cyrillic_ES  ] };
    key <AB04> { [     Cyrillic_em,     Cyrillic_EM  ] };
    key <AB06> { [     Cyrillic_te,     Cyrillic_TE  ] };
    key <AB05> { [      Cyrillic_i,      Cyrillic_I  ] };
    key <AB07> {[Cyrillic_softsign,Cyrillic_SOFTSIGN ] };
    key <AB08> { [     Cyrillic_be,     Cyrillic_BE  ] };
    key <AB09> { [     Cyrillic_yu,     Cyrillic_YU  ] };
    key <AB10> { [           slash,        question  ] };

    key <LSGT> { [           slash,             bar  ] };
};

partial alphanumeric_keys
xkb_symbols "winkeys" {

    include "ua(legacy)"
    name[Group1]= "Ukrainian (WinKeys)";

    key <AE03> { [               3,      numerosign  ] };
    key <AE04> { [               4,       semicolon  ] };
    key <AE05> { [               5,         percent  ] };
    key <AE06> { [               6,           colon  ] };
    key <AE07> { [               7,        question  ] };
    key <AE08> { [               8,        asterisk  ] };
    key <AB10> { [          period,           comma  ] };
};

partial alphanumeric_keys
xkb_symbols "typewriter" {

    include "ua(legacy)"
    name[Group1]= "Ukrainian (typewriter)";

    key <TLDE> { [      apostrophe,        quotedbl  ] };
    key <AE01> { [          exclam,               1  ] };
    key <AE02> { [      numerosign,               2  ] };
    key <AE03> { [           slash,               3  ] };
    key <AE04> { [       semicolon,               4  ] };
    key <AE05> { [           colon,               5  ] };
    key <AE06> { [           comma,               6  ] };
    key <AE07> { [          period,               7  ] };
    key <AE08> { [      underscore,               8  ] };
    key <AE09> { [        question,               9  ] };
    key <AE10> { [         percent,               0  ] };

    key <AD12> { [ Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };

    key <AC02> { [      Cyrillic_i,      Cyrillic_I  ] };

    key <AB05> { [     Ukrainian_i,     Ukrainian_I  ] };
    key <AB10> { [    Ukrainian_yi,    Ukrainian_YI  ] };

    key <BKSL> { [       parenleft,      parenright  ] };
};

partial alphanumeric_keys
xkb_symbols "phonetic" {

  include "ua(legacy)"
  name[Group1]= "Ukrainian (phonetic)";

    key <LatQ> { [ Cyrillic_ya,       Cyrillic_YA        ] };
    key <LatW> { [ Cyrillic_ve,       Cyrillic_VE        ] };
    key <LatE> { [ Cyrillic_ie,       Cyrillic_IE        ] };
    key <LatR> { [ Cyrillic_er,       Cyrillic_ER        ] };
    key <LatT> { [ Cyrillic_te,       Cyrillic_TE        ] };
    key <LatY> { [ Cyrillic_i,        Cyrillic_I         ] };
    key <LatU> { [ Cyrillic_u,        Cyrillic_U         ] };
    key <LatI> { [ Ukrainian_i,       Ukrainian_I        ] };
    key <LatO> { [ Cyrillic_o,        Cyrillic_O         ] };
    key <LatP> { [ Cyrillic_pe,       Cyrillic_PE        ] };
    key <AD11> { [ Cyrillic_sha,      Cyrillic_SHA       ] };
    key <AD12> { [ Cyrillic_shcha,    Cyrillic_SHCHA     ] };

    key <LatA> { [ Cyrillic_a,        Cyrillic_A         ] };
    key <LatS> { [ Cyrillic_es,       Cyrillic_ES        ] };
    key <LatD> { [ Cyrillic_de,       Cyrillic_DE        ] };
    key <LatF> { [ Cyrillic_ef,       Cyrillic_EF        ] };
    key <LatG> { [ Cyrillic_ghe,      Cyrillic_GHE       ] };
    key <LatH> { [ Cyrillic_ha,       Cyrillic_HA        ] };
    key <LatJ> { [ Cyrillic_shorti,   Cyrillic_SHORTI    ] };
    key <LatK> { [ Cyrillic_ka,       Cyrillic_KA        ] };
    key <LatL> { [ Cyrillic_el,       Cyrillic_EL        ] };
    key <AC10> { [ Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };
    key <AC11> { [ Cyrillic_che,      Cyrillic_CHE       ] };
    key <BKSL> { [ Cyrillic_yu,       Cyrillic_YU        ] };

    key <LatZ> { [ Cyrillic_ze,       Cyrillic_ZE        ] };
    key <LatX> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN  ] };
    key <LatC> { [ Cyrillic_tse,      Cyrillic_TSE       ] };
    key <LatV> { [ Cyrillic_zhe,      Cyrillic_ZHE       ] };
    key <LatB> { [ Cyrillic_be,       Cyrillic_BE        ] };
    key <LatN> { [ Cyrillic_en,       Cyrillic_EN        ] };
    key <LatM> { [ Cyrillic_em,       Cyrillic_EM        ] };
    key <AB08> { [ Ukrainian_yi,      Ukrainian_YI       ] };
    key <AB09> { [ Ukrainian_ie,      Ukrainian_IE       ] };
    key <AB10> { [ slash,             question           ] };
};

// Ukrainian RSTU 2019-91 keyboard layout (Respublikanskij STandart Ukrajiny).
// Andrew Porokhnyak <aop@porokhnyak.org>
partial alphanumeric_keys
xkb_symbols "rstu" {

    include "ua(legacy)"
    name[Group1]= "Ukrainian (standard RSTU)";

    key <TLDE> { [      apostrophe,        question  ] };
    key <AE01> { [          exclam,               1  ] };
    key <AE02> { [        quotedbl,               2  ] };
    key <AE03> { [      numbersign,               3  ] };
    key <AE04> { [       semicolon,               4  ] };
    key <AE05> { [           colon,               5  ] };
    key <AE06> { [           comma,               6  ] };
    key <AE07> { [          period,               7  ] };
    key <AE08> { [        asterisk,               8  ] };
    key <AE09> { [       parenleft,               9  ] };
    key <AE10> { [      parenright,               0  ] };

    key <AD12> { [ Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };

    key <AC02> { [      Cyrillic_i,      Cyrillic_I  ] };

    key <AB05> { [     Ukrainian_i,     Ukrainian_I  ] };
    key <AB10> { [    Ukrainian_yi,    Ukrainian_YI  ] };

    key <BKSL> { [           slash,         percent  ] };
};

// Russian RSTU 2019-91 keyboard layout (Respublikanskij STandart Ukrajiny).
// Andrew Porokhnyak <aop@porokhnyak.org>
partial alphanumeric_keys
xkb_symbols "rstu_ru" {

    include "ru(common)"
    name[Group1]= "Russian (Ukraine, standard RSTU)";

    key <TLDE> { [      apostrophe,        question  ] };
    key <AE01> { [          exclam,               1  ] };
    key <AE02> { [        quotedbl,               2  ] };
    key <AE03> { [      numbersign,               3  ] };
    key <AE04> { [       semicolon,               4  ] };
    key <AE05> { [           colon,               5  ] };
    key <AE06> { [           comma,               6  ] };
    key <AE07> { [          period,               7  ] };
    key <AE08> { [        asterisk,               8  ] };
    key <AE09> { [       parenleft,               9  ] };
    key <AE10> { [      parenright,               0  ] };
    key <BKSL> { [           slash,         percent  ] };

    key.type[group1]="ALPHABETIC";

    key <AB10> { [     Cyrillic_io,     Cyrillic_IO  ] };
};

// Homophonic keyboard layout (by Tomas Marko MiljenoviÄ),
// based on the Ukrainian National Transliteration,
// commonly used phonetic layouts for Mac and Win.
partial alphanumeric_keys
xkb_symbols "homophonic" {

  include "ua(legacy)"
  name[Group1]= "Ukrainian (homophonic)";

    key <TLDE> { [        grave,        underscore       ] };
    key <AE01> { [            1,            exclam       ] };
    key <AE02> { [            2,                at       ] };
    key <AE03> { [            3,         semicolon       ] };
    key <AE04> { [            4,             colon       ] };
    key <AE05> { [            5,           percent       ] };
    key <AE06> { [            6,        apostrophe       ] };
    key <AE07> { [            7,          quotedbl       ] };
    key <AE08> { [            8,          asterisk       ] };
    key <AE09> { [            9,         parenleft       ] };
    key <AE10> { [            0,        parenright       ] };
    key <AE11> { [ Ukrainian_ie,      Ukrainian_IE       ] };
    key <AE12> { [ Ukrainian_yi,      Ukrainian_YI       ] };

    key <LatQ> { [ Cyrillic_ya,       Cyrillic_YA        ] };
    key <LatW> { [ Cyrillic_sha,      Cyrillic_SHA       ] };
    key <LatE> { [ Cyrillic_ie,       Cyrillic_IE        ] };
    key <LatR> { [ Cyrillic_er,       Cyrillic_ER        ] };
    key <LatT> { [ Cyrillic_te,       Cyrillic_TE        ] };
    key <LatY> { [ Cyrillic_i,        Cyrillic_I         ] };
    key <LatU> { [ Cyrillic_u,        Cyrillic_U         ] };
    key <LatI> { [ Ukrainian_i,       Ukrainian_I        ] };
    key <LatO> { [ Cyrillic_o,        Cyrillic_O         ] };
    key <LatP> { [ Cyrillic_pe,       Cyrillic_PE        ] };
    key <AD11> { [ Cyrillic_yu,       Cyrillic_YU        ] };
    key <AD12> { [ Cyrillic_shcha,    Cyrillic_SHCHA     ] };

    key <LatA> { [ Cyrillic_a,        Cyrillic_A         ] };
    key <LatS> { [ Cyrillic_es,       Cyrillic_ES        ] };
    key <LatD> { [ Cyrillic_de,       Cyrillic_DE        ] };
    key <LatF> { [ Cyrillic_ef,       Cyrillic_EF        ] };
    key <LatG> { [ Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };
    key <LatH> { [ Cyrillic_ghe,      Cyrillic_GHE       ] };
    key <LatJ> { [ Cyrillic_shorti,   Cyrillic_SHORTI    ] };
    key <LatK> { [ Cyrillic_ka,       Cyrillic_KA        ] };
    key <LatL> { [ Cyrillic_el,       Cyrillic_EL        ] };
    key <AC10> { [ Cyrillic_che,      Cyrillic_CHE       ] };
    key <AC11> { [ Cyrillic_zhe,      Cyrillic_ZHE       ] };
    key <BKSL> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN  ] };

    key <LatZ> { [ Cyrillic_ze,       Cyrillic_ZE        ] };
    key <LatX> { [ Cyrillic_ha,       Cyrillic_HA        ] };
    key <LatC> { [ Cyrillic_tse,      Cyrillic_TSE       ] };
    key <LatV> { [ Cyrillic_ve,       Cyrillic_VE        ] };
    key <LatB> { [ Cyrillic_be,       Cyrillic_BE        ] };
    key <LatN> { [ Cyrillic_en,       Cyrillic_EN        ] };
    key <LatM> { [ Cyrillic_em,       Cyrillic_EM        ] };
    key <AB08> { [ comma,             less               ] };
    key <AB09> { [ period,            greater            ] };
    key <AB10> { [ slash,             question           ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/ua(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1]= "English (US)";

    key <TLDE> {	[     grave,	asciitilde	]	};
    key <AE01> {	[	  1,	exclam 		]	};
    key <AE02> {	[	  2,	at		]	};
    key <AE03> {	[	  3,	numbersign	]	};
    key <AE04> {	[	  4,	dollar		]	};
    key <AE05> {	[	  5,	percent		]	};
    key <AE06> {	[	  6,	asciicircum	]	};
    key <AE07> {	[	  7,	ampersand	]	};
    key <AE08> {	[	  8,	asterisk	]	};
    key <AE09> {	[	  9,	parenleft	]	};
    key <AE10> {	[	  0,	parenright	]	};
    key <AE11> {	[     minus,	underscore	]	};
    key <AE12> {	[     equal,	plus		]	};

    key <AD01> {	[	  q,	Q 		]	};
    key <AD02> {	[	  w,	W		]	};
    key <AD03> {	[	  e,	E		]	};
    key <AD04> {	[	  r,	R		]	};
    key <AD05> {	[	  t,	T		]	};
    key <AD06> {	[	  y,	Y		]	};
    key <AD07> {	[	  u,	U		]	};
    key <AD08> {	[	  i,	I		]	};
    key <AD09> {	[	  o,	O		]	};
    key <AD10> {	[	  p,	P		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};

    key <AC01> {	[	  a,	A 		]	};
    key <AC02> {	[	  s,	S		]	};
    key <AC03> {	[	  d,	D		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H		]	};
    key <AC07> {	[	  j,	J		]	};
    key <AC08> {	[	  k,	K		]	};
    key <AC09> {	[	  l,	L		]	};
    key <AC10> {	[ semicolon,	colon		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};

    key <AB01> {	[	  z,	Z 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C		]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N		]	};
    key <AB07> {	[	  m,	M		]	};
    key <AB08> {	[     comma,	less		]	};
    key <AB09> {	[    period,	greater		]	};
    key <AB10> {	[     slash,	question	]	};

    key <BKSL> {	[ backslash,         bar	]	};
};

partial alphanumeric_keys
xkb_symbols "euro" {

    include "us(basic)"
    name[Group1]= "English (US, with euro on 5)";

    include "eurosign(5)"

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "ibm238l" {

    include "us(basic)"
    name[Group1]= "English (US, IBM Arabic 238_L)";

    key <AB08> {        [     comma,    comma      ]       };
    key <AB09> {        [    period,    period     ]       };
    key <BKSL> {        [ quoteleft,    asciitilde ]       };
    key <LSGT> {        [ backslash,    bar        ]       };
    key <TLDE> {        [ leftcaret,    rightcaret ]       };
};

partial alphanumeric_keys
xkb_symbols "intl" {

    include "us(basic)"
    name[Group1]= "English (US, international with dead keys)";

    key <TLDE> { [dead_grave, dead_tilde,         grave,       asciitilde ] };
    key <AE01> { [	   1,     exclam,    exclamdown,      onesuperior ] };
    key <AE02> { [	   2,         at,   twosuperior, dead_doubleacute ] };
    key <AE03> { [	   3, numbersign, threesuperior,      dead_macron ] };
    key <AE04> { [	   4,     dollar,      currency,         sterling ] };
    key <AE05> { [	   5,    percent,      EuroSign,     dead_cedilla ] };
    key <AE06> { [    6, dead_circumflex,    onequarter,      asciicircum ] };
    key <AE07> { [	   7,  ampersand,       onehalf,	dead_horn ] };
    key <AE08> { [	   8,   asterisk, threequarters,      dead_ogonek ] };
    key <AE09> { [	   9,  parenleft, leftsinglequotemark, dead_breve ] };
    key <AE10> { [	   0, parenright, rightsinglequotemark, dead_abovering ] };
    key <AE11> { [     minus, underscore,           yen,    dead_belowdot ] };
    key <AE12> { [     equal,       plus,      multiply,         division ] };

    key <AD01> { [	   q,          Q,    adiaeresis,       Adiaeresis ] };
    key <AD02> { [	   w,          W,         aring,            Aring ] };
    key <AD03> { [	   e,          E,        eacute,           Eacute ] };
    key <AD04> { [	   r,          R,    registered,       registered ] };
    key <AD05> { [	   t,          T,         thorn,            THORN ] };
    key <AD06> { [	   y,          Y,    udiaeresis,       Udiaeresis ] };
    key <AD07> { [	   u,          U,        uacute,           Uacute ] };
    key <AD08> { [	   i,          I,        iacute,           Iacute ] };
    key <AD09> { [	   o,          O,        oacute,           Oacute ] };
    key <AD10> { [	   p,          P,    odiaeresis,       Odiaeresis ] };
    key <AD11> { [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark ] };
    key <AD12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };

    key <AC01> { [	   a,          A,        aacute,           Aacute ] };
    key <AC02> { [	   s,          S,        ssharp,          section ] };
    key <AC03> { [	   d,          D,           eth,              ETH ] };
    key <AC04> { [	   f,          F,             f,                F ] };
    key <AC05> { [	   g,          G,             g,                G ] };
    key <AC06> { [	   h,          H,             h,                H ] };
    key <AC07> { [	   j,          J,             j,                J ] };
    key <AC08> { [	   k,          K,            oe,               OE ] };

    key <AC09> { [	   l,          L,        oslash,         Ooblique ] };
    key <AC10> { [ semicolon,      colon,     paragraph,           degree ] };
    key <AC11> { [dead_acute, dead_diaeresis, apostrophe,        quotedbl ] };

    key <AB01> { [	   z,          Z,            ae,               AE ] };
    key <AB02> { [	   x,          X,             x,                X ] };
    key <AB03> { [	   c,          C,     copyright,             cent ] };
    key <AB04> { [	   v,          V,             v,                V ] };
    key <AB05> { [	   b,          B,             b,                B ] };
    key <AB06> { [	   n,          N,        ntilde,           Ntilde ] };
    key <AB07> { [	   m,          M,            mu,               mu ] };
    key <AB08> { [     comma,       less,      ccedilla,         Ccedilla ] };
    key <AB09> { [    period,    greater, dead_abovedot,       dead_caron ] };
    key <AB10> { [     slash,   question,  questiondown,        dead_hook ] };
    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };

    key <LSGT> { [ backslash,   bar,            backslash,      bar ] };

    include "level3(ralt_switch)"
};

// Based on symbols/us_intl keyboard map:
// Dead-keys definition for a very simple US/ASCII layout.
// by Conectiva (http://www.conectiva.com.br)
// modified by Ricardo Y. Igarashi (iga@that.com.br)

// Added the following deadkeys, to make it truly international:
//
// dead_macron: on AltGr-minus
// dead_breve: on AltGr-parenleft
// dead_abovedot: on AltGr-period
// dead_abovering: on AltGr-0
// dead_doubleacute: on AltGr-equal (as quotedbl is already used)
// dead_caron: on AltGr-less (AltGr-shift-comma)
// dead_cedilla: on AltGr-comma
// dead_ogonek: on AltGr-semicolon
// dead_belowdot: on AltGr-underscore (AltGr-shift-minus)
// dead_hook: on AltGr-question
// dead_horn: on AltGr-plus (AltGr-shift-equal)
// dead_diaeresis: on AltGr-colon (Alt-shift-semicolon)
//
// those were already there:
// dead_grave
// dead_acute
// dead_circumflex
// dead_tilde
// dead_diaeresis

partial alphanumeric_keys
xkb_symbols "alt-intl" {

  include "us"
  name[Group1]= "English (US, alternative international)";

  key <TLDE> { [ dead_grave, dead_tilde,    grave,	      asciitilde    ] };
  key <AE05> { [          5, percent,	    EuroSign			    ] };
  key <AE06> { [	  6, dead_circumflex, asciicircum,    asciicircum   ] };
  key <AE09> { [	  9, parenleft, leftsinglequotemark,  dead_breve ] };
  key <AE10> { [	  0, parenright, rightsinglequotemark, dead_abovering ] };
  key <AE11> { [      minus, underscore,    dead_macron,      dead_belowdot ] };
  key <AE12> { [      equal, plus,	    dead_doubleacute, dead_horn	    ] };

  key <AD03> { [          e, E,		     EuroSign,         cent	    ] };

  key <AC10> { [  semicolon, colon,	     dead_ogonek,   dead_diaeresis  ] };
  key <AC11> { [ dead_acute, dead_diaeresis, apostrophe,    quotedbl	    ] };

  key <AB08> { [      comma, less,	     dead_cedilla,  dead_caron	    ] };
  key <AB09> { [     period, greater,	     dead_abovedot, dead_circumflex ] };
  key <AB10> { [      slash, question,	     dead_hook,	    dead_hook	    ] };

  key <LSGT> { [ backslash,   bar,            backslash,      bar ] };

  include "level3(ralt_switch)"
};

// based on a keyboard map from an 'xkb/symbols/dk' file

partial alphanumeric_keys
xkb_symbols "dvorak" {

    name[Group1]= "English (Dvorak)";

    key <TLDE> { [       grave,	asciitilde, dead_grave, dead_tilde	] };

    key <AE01> { [	    1,	exclam 		]	};
    key <AE02> { [	    2,	at		]	};
    key <AE03> { [	    3,	numbersign	]	};
    key <AE04> { [	    4,	dollar		]	};
    key <AE05> { [	    5,	percent		]	};
    key <AE06> { [	    6,	asciicircum, dead_circumflex, dead_circumflex ]	};
    key <AE07> { [	    7,	ampersand	]	};
    key <AE08> { [	    8,	asterisk	]	};
    key <AE09> { [	    9,	parenleft,  dead_grave]	};
    key <AE10> { [	    0,	parenright	]	};
    key <AE11> { [ bracketleft,	braceleft	]	};
    key <AE12> { [ bracketright, braceright,  dead_tilde] };

    key <AD01> { [  apostrophe,	quotedbl, dead_acute, dead_diaeresis	] };
    key <AD02> { [	comma,	less,   dead_cedilla, dead_caron	] };
    key <AD03> { [      period,	greater, dead_abovedot, periodcentered	] };
    key <AD04> { [	    p,	P		]	};
    key <AD05> { [	    y,	Y		]	};
    key <AD06> { [	    f,	F		]	};
    key <AD07> { [	    g,	G		]	};
    key <AD08> { [	    c,	C		]	};
    key <AD09> { [	    r,	R		]	};
    key <AD10> { [	    l,	L		]	};
    key <AD11> { [	slash,	question	]	};
    key <AD12> { [	equal,	plus		]	};

    key <AC01> { [	    a,	A 		]	};
    key <AC02> { [	    o,	O		]	};
    key <AC03> { [	    e,	E		]	};
    key <AC04> { [	    u,	U		]	};
    key <AC05> { [	    i,	I		]	};
    key <AC06> { [	    d,	D		]	};
    key <AC07> { [	    h,	H		]	};
    key <AC08> { [	    t,	T		]	};
    key <AC09> { [	    n,	N		]	};
    key <AC10> { [	    s,	S		]	};
    key <AC11> { [	minus,	underscore	]	};

    key <AB01> { [   semicolon,	colon, dead_ogonek, dead_doubleacute ] };
    key <AB02> { [	    q,	Q		]	};
    key <AB03> { [	    j,	J		]	};
    key <AB04> { [	    k,	K		]	};
    key <AB05> { [	    x,	X		]	};
    key <AB06> { [	    b,	B		]	};
    key <AB07> { [	    m,	M		]	};
    key <AB08> { [	    w,	W		]	};
    key <AB09> { [	    v,	V		]	};
    key <AB10> { [	    z,	Z		]	};

    key <BKSL> { [  backslash,  bar             ]       };
};

// Dvorak international with dead keys
// Olivier Mehani (shtrom-xorg@ssji.net)
// Reproduce the per-key mapping of us(intl) for the dvorak layout
// aka "I just swapped my keys over"
partial alphanumeric_keys
xkb_symbols "dvorak-intl" {

    include "us(dvorak)"
    name[Group1]= "English (Dvorak, international with dead keys)";

    key <TLDE> { [dead_grave, dead_tilde,         grave,       asciitilde ] };

    key <AE01> { [	   1,     exclam,    exclamdown,      onesuperior ] };
    key <AE02> { [	   2,         at,   twosuperior, dead_doubleacute ] };
    key <AE03> { [	   3, numbersign, threesuperior,      dead_macron ] };
    key <AE04> { [	   4,     dollar,      currency,         sterling ] };
    key <AE05> { [	   5,    percent,      EuroSign,     dead_cedilla ] };
    key <AE06> { [    6, dead_circumflex,    onequarter,      asciicircum ] };
    key <AE07> { [	   7,  ampersand,       onehalf,	dead_horn ] };
    key <AE08> { [	   8,   asterisk, threequarters,      dead_ogonek ] };
    key <AE09> { [	   9,  parenleft, leftsinglequotemark, dead_breve ] };
    key <AE10> { [	   0, parenright, rightsinglequotemark, dead_abovering ] };
    key <AE11> { [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark ] };
    key <AE12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };

    key <AD01> { [dead_acute, dead_diaeresis, apostrophe,        quotedbl ] };
    key <AD02> { [     comma,       less,      ccedilla,         Ccedilla ] };
    key <AD03> { [    period,    greater, dead_abovedot,       dead_caron ] };
    key <AD04> { [	   p,          P,    odiaeresis,       Odiaeresis ] };
    key <AD05> { [	   y,          Y,    udiaeresis,       Udiaeresis ] };
    // key <AD06> { [	   f,	F		]	};
    // key <AD07> { [	   g,	G		]	};
    key <AD08> { [	   c,          C,     copyright,             cent ] };
    key <AD09> { [	   r,          R,    registered,       registered ] };
    key <AD10> { [	   l,          L,        oslash,         Ooblique ] };
    key <AD11> { [     slash,   question,  questiondown,        dead_hook ] };
    // key <AD12> { [     equal,       plus,      multiply,         division ] };

    key <AC01> { [	   a,          A,        aacute,           Aacute ] };
    key <AC02> { [	   o,          O,        oacute,           Oacute ] };
    key <AC03> { [	   e,          E,        eacute,           Eacute ] };
    key <AC04> { [	   u,          U,        uacute,           Uacute ] };
    key <AC05> { [	   i,          I,        iacute,           Iacute ] };
    key <AC06> { [	   d,          D,           eth,              ETH ] };
    // key <AC07> { [	   h,	H		]	};
    key <AC08> { [	   t,          T,         thorn,            THORN ] };
    key <AC09> { [	   n,          N,        ntilde,           Ntilde ] };
    key <AC10> { [	   s,          S,        ssharp,          section ] };
    // key <AC11> { [     minus, underscore,           yen,    dead_belowdot ] };

    key <AB01> { [ semicolon,      colon,     paragraph,           degree ] };
    key <AB02> { [	   q,          Q,    adiaeresis,       Adiaeresis ] };
    // key <AB03> { [	   j,	J		]	};
    key <AB04> { [	   k,          K,            oe,               OE ] };
    // key <AB05> { [	   x,	X		]	};
    // key <AB06> { [	   b,	B		]	};
    key <AB07> { [	   m,          M,            mu,               mu ] };
    key <AB08> { [	   w,          W,         aring,            Aring ] };
    // key <AB09> { [	   v,	V		]	};
    key <AB10> { [	   z,          Z,            ae,               AE ] };

    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };

    include "level3(ralt_switch)"
};

// Dvorak international without dead keys
// Stephane Magnenat (stephane at magnenat dot net, http://stephane.magnenat.net)
// Based on information from http://www.poupinou.org/dvorak/index.html
//
//  `   1   2   3   4   5   6   7   8   9   0   [   ]   \
//                  â¬
//
//      '   ,   .   p   y   f   g   c   r   l   /   =
//          Ã¤   Ãª   Ã«   Ã¼           Ã§
//
//      a   o   e   u   i   d   h   t   n   s   -
//      Ã    Ã´   Ã©   Ã»   Ã®                   Ã
//
//      ;   q   j   k   x   b   m   w   v   z
//      Ã¢   Ã¶   Ã¨   Ã¹   Ã¯

partial alphanumeric_keys
xkb_symbols "dvorak-alt-intl" {

    include "us(dvorak)"
    name[Group1]= "English (Dvorak alternative international no dead keys)";

    key <AE04> { [         4,  dollar,    EuroSign ] };

    key <AD02> { [     comma,    less,  adiaeresis,       dead_caron ] };
    key <AD03> { [    period, greater, ecircumflex,   periodcentered	] };
    key <AD04> { [         p,       P,  ediaeresis,     dead_cedilla ] };
    key <AD05> { [         y,       Y,  udiaeresis ] };
    key <AD08> { [         c,       C,    ccedilla,    dead_abovedot ] };

    key <AC01> { [         a,       A,      agrave ] };
    key <AC02> { [         o,       O, ocircumflex ] };
    key <AC03> { [         e,       E,      eacute ] };
    key <AC04> { [         u,       U, ucircumflex ] };
    key <AC05> { [         i,       I, icircumflex ] };
    key <AC10> { [         s,       S,      ssharp ] };

    key <AB01> { [ semicolon,   colon, acircumflex ] };
    key <AB02> { [         q,       Q,  odiaeresis,      dead_ogonek ] };
    key <AB03> { [         j,       J,      egrave, dead_doubleacute ] };
    key <AB04> { [         k,       K,      ugrave ] };
    key <AB05> { [         x,       X,  idiaeresis ] };

    include "level3(ralt_switch)"
};

// Left and right handed dvorak layouts
// by sqweek <sqweek@gmail.com> 2006-01-30
// Based on the corresponding layouts in the console-tools package.
partial alphanumeric_keys
xkb_symbols "dvorak-l" {

    include "us(dvorak)"
    name[Group1]= "English (left handed Dvorak)";

    key <AE01> {	[ bracketleft,	braceleft	]	};
    key <AE02> {	[ bracketright,	braceright	]	};
    key <AE03> {	[	slash,	question	]	};
    key <AE04> {	[	    p,	P		]	};
    key <AE05> {	[	    f,	F		]	};
    key <AE06> {	[	    m,	M		]	};
    key <AE07> {	[	    l,	L		]	};
    key <AE08> {	[	    j,	J		]	};
    key <AE09> {	[	    4,	dollar		]	};
    key <AE10> {	[	    3,	numbersign	]	};
    key <AE11> {	[	    2,	at		]	};
    key <AE12> {	[	    1,	exclam 		]	};

    key <AD01> {	[   semicolon,	colon 		]	};
    key <AD02> {	[	    q,	Q		]	};
    key <AD03> {	[	    b,	B		]	};
    key <AD04> {	[	    y,	Y		]	};
    key <AD05> {	[	    u,	U		]	};
    key <AD06> {	[	    r,	R		]	};
    key <AD07> {	[	    s,	S		]	};
    key <AD08> {	[	    o,	O		]	};
    key <AD09> {	[      period,	greater		]	};
    key <AD10> {	[	    6,	asciicircum	]	};
    key <AD11> {	[	    5,	percent		]	};
    key <AD12> {	[	equal,	plus		]	};

    key <AC01> {	[	minus,	underscore	]	};
    key <AC02> {	[	    k,	K		]	};
    key <AC03> {	[	    c,	C		]	};
    key <AC04> {	[	    d,	D		]	};
    key <AC05> {	[	    t,	T		]	};
    key <AC06> {	[	    h,	H		]	};
    key <AC07> {	[	    e,	E		]	};
    key <AC08> {	[	    a,	A 		]	};
    key <AC09> {	[	    z,	Z		]	};
    key <AC10> {	[	    8,	asterisk	]	};
    key <AC11> {	[	    7,	ampersand	]	};

    key <AB01> {	[  apostrophe,	quotedbl	] 	};
    key <AB02> {	[	    x,	X		]	};
    key <AB03> {	[	    g,	G		]	};
    key <AB04> {	[	    v,	V		]	};
    key <AB05> {	[	    w,	W		]	};
    key <AB06> {	[	    n,	N		]	};
    key <AB07> {	[	    i,	I		]	};
    key <AB08> {	[	comma,	less		]	};
    key <AB09> {	[	    0,	parenright	]	};
    key <AB10> {	[	    9,	parenleft	]	};
};

partial alphanumeric_keys
xkb_symbols "dvorak-r" {

    include "us(dvorak)"
    name[Group1]= "English (right handed Dvorak)";

    key <AE01> {	[	    1,	exclam 		]	};
    key <AE02> {	[	    2,	at		]	};
    key <AE03> {	[	    3,	numbersign	]	};
    key <AE04> {	[	    4,	dollar		]	};
    key <AE05> {	[	    j,	J		]	};
    key <AE06> {	[	    l,	L		]	};
    key <AE07> {	[	    m,	M		]	};
    key <AE08> {	[	    f,	F		]	};
    key <AE09> {	[	    p,	P		]	};
    key <AE10> {	[	slash,	question	]	};
    key <AE11> {	[ bracketleft,	braceleft	]	};
    key <AE12> {	[ bracketright,	braceright	]	};

    key <AD01> {	[	    5,	percent		]	};
    key <AD02> {	[	    6,	asciicircum ]	};
    key <AD03> {	[	    q,	Q		]	};
    key <AD04> {	[      period,	greater		]	};
    key <AD05> {	[	    o,	O		]	};
    key <AD06> {	[	    r,	R		]	};
    key <AD07> {	[	    s,	S		]	};
    key <AD08> {	[	    u,	U		]	};
    key <AD09> {	[	    y,	Y		]	};
    key <AD10> {	[	    b,	B		]	};
    key <AD11> {	[   semicolon,	colon 		]	};
    key <AD12> {	[	equal,	plus		]	};

    key <AC01> {	[	    7,	ampersand	]	};
    key <AC02> {	[	    8,	asterisk	]	};
    key <AC03> {	[	    z,	Z		]	};
    key <AC04> {	[	    a,	A 		]	};
    key <AC05> {	[	    e,	E		]	};
    key <AC06> {	[	    h,	H		]	};
    key <AC07> {	[	    t,	T		]	};
    key <AC08> {	[	    d,	D		]	};
    key <AC09> {	[	    c,	C		]	};
    key <AC10> {	[	    k,	K		]	};
    key <AC11> {	[	minus,	underscore	]	};

    key <AB01> {	[	    9,	parenleft	]	};
    key <AB02> {	[	    0,	parenright	]	};
    key <AB03> {	[	    x,	X		]	};
    key <AB04> {	[	comma,	less		]	};
    key <AB05> {	[	    i,	I		]	};
    key <AB06> {	[	    n,	N		]	};
    key <AB07> {	[	    w,	W		]	};
    key <AB08> {	[	    v,	V		]	};
    key <AB09> {	[	    g,	G		]	};
    key <AB10> {	[  apostrophe,	quotedbl	] 	};
};

// Classic dvorak layout
// by Piter Punk <piterpk@terra.com.br> - 2006-07-06 
// Based on dvorak layout and e-mail from Russel L. Harris rlharris@oplink.net 
// on xorg list.
partial alphanumeric_keys
xkb_symbols "dvorak-classic" {

    name[Group1]= "English (classic Dvorak)";

    key <TLDE> { [       grave,	asciitilde, dead_grave, dead_tilde	] };

    key <AE01> { [ bracketleft,	braceleft	]	};
    key <AE02> { [	    7,	ampersand	]	};
    key <AE03> { [	    5,	percent		]	};
    key <AE04> { [	    3,	numbersign	]	};
    key <AE05> { [	    1,	exclam 		]	};
    key <AE06> { [	    9,	parenleft,  dead_grave]	};
    key <AE07> { [	    0,	parenright	]	};
    key <AE08> { [	    2,	at		]	};
    key <AE09> { [	    4,	dollar		]	};
    key <AE10> { [	    6,	asciicircum, dead_circumflex, dead_circumflex ]	};
    key <AE11> { [	    8,	asterisk	]	};
    key <AE12> { [ bracketright, braceright,  dead_tilde] };

    key <AD01> { [	slash,	question	]	};
    key <AD02> { [	comma,	less,   dead_cedilla, dead_caron	] };
    key <AD03> { [      period,	greater, dead_abovedot, periodcentered	] };
    key <AD04> { [	    p,	P		]	};
    key <AD05> { [	    y,	Y		]	};
    key <AD06> { [	    f,	F		]	};
    key <AD07> { [	    g,	G		]	};
    key <AD08> { [	    c,	C		]	};
    key <AD09> { [	    r,	R		]	};
    key <AD10> { [	    l,	L		]	};
    key <AD11> { [  apostrophe,	quotedbl, dead_acute, dead_diaeresis	] };
    key <AD12> { [	equal,	plus		]	};

    key <AC01> { [	    a,	A 		]	};
    key <AC02> { [	    o,	O		]	};
    key <AC03> { [	    e,	E		]	};
    key <AC04> { [	    u,	U		]	};
    key <AC05> { [	    i,	I		]	};
    key <AC06> { [	    d,	D		]	};
    key <AC07> { [	    h,	H		]	};
    key <AC08> { [	    t,	T		]	};
    key <AC09> { [	    n,	N		]	};
    key <AC10> { [	    s,	S		]	};
    key <AC11> { [	minus,	underscore	]	};

    key <AB01> { [   semicolon,	colon, dead_ogonek, dead_doubleacute ] };
    key <AB02> { [	    q,	Q		]	};
    key <AB03> { [	    j,	J		]	};
    key <AB04> { [	    k,	K		]	};
    key <AB05> { [	    x,	X		]	};
    key <AB06> { [	    b,	B		]	};
    key <AB07> { [	    m,	M		]	};
    key <AB08> { [	    w,	W		]	};
    key <AB09> { [	    v,	V		]	};
    key <AB10> { [	    z,	Z		]	};
    key <BKSL> { [  backslash,  bar             ]       };
};

// Programmer Dvorak, by Roland Kaufmann <rlndkfmn at gmail dot com>
// License: BSD, available at <http://www.kaufmann.no/roland/dvorak/license.html>
// Main features: Numbers are in shift position (like French), symbols have been
// placed in locations that give good hand-alternation and finger rolling with
// symbols that usually follows, accented characters are possible for I18N.
// Patch suggestions should be sent upstream.
partial alphanumeric_keys
xkb_symbols "dvp" {

    include "us(dvorak)"
    name[Group1] = "English (Programmer Dvorak)";

    //             Unmodified       Shift           AltGr            Shift+AltGr
    // symbols row, left side
    key <TLDE> { [ dollar,          asciitilde,     dead_tilde                  ] };
    key <AE01> { [ ampersand,       percent                                     ] };
    key <AE02> { [ bracketleft,     7,              currency                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE03> { [ braceleft,       5,              cent                        ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE04> { [ braceright,      3,              yen                         ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE05> { [ parenleft,       1,              EuroSign                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE06> { [ equal,           9,              sterling                    ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };

    // symbols row, right side
    key <AE07> { [ asterisk,        0                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE08> { [ parenright,      2,              onehalf                     ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE09> { [ plus,            4                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE10> { [ bracketright,    6                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <AE11> { [ exclam,          8,              exclamdown,      U2E18      ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };  // reversed interrobang
    key <AE12> { [ numbersign,      grave,          dead_grave                  ] };
    key <BKSP> { [ BackSpace,       BackSpace                                   ] };

    // upper row, left side
    key <AD01> { [ semicolon,       colon,          dead_diaeresis              ] };
    key <AD02> { [ comma,           less,           guillemotleft,   U201C      ] };
    key <AD03> { [ period,          greater,        guillemotright,  U201D      ] };
    key <AD04> { [ p,               P,              paragraph,       section    ] };
    key <AD05> { [ y,               Y,              udiaeresis,      Udiaeresis ] };

    // upper row, right side
    key <AD08> { [ c,               C,              ccedilla,        Ccedilla   ] };
    key <AD09> { [ r,               R,              registered,      trademark  ] };
    key <AD11> { [ slash,           question,       questiondown,    U203D      ] };  // interrobang
    key <AD12> { [ at,              asciicircum,    dead_circumflex, dead_caron ] };

    // home row, left side
    key <AC01> { [ a,               A,              aring,           Aring      ] };
    key <AC02> { [ o,               O,              oslash,          Ooblique   ] };
    key <AC03> { [ e,               E,              ae,              AE         ] };
    key <AC04> { [ u,               U,              eacute,          Eacute     ] };

    // home row, right side
    key <AC06> { [ d,               D,              eth,             ETH        ] };
    key <AC07> { [ h,               H,              dead_acute                  ] };
    key <AC08> { [ t,               T,              thorn,           THORN      ] };
    key <AC09> { [ n,               N,              ntilde,          Ntilde     ] };
    key <AC10> { [ s,               S,              ssharp                      ] };
    key <AC11> { [ minus,           underscore,     hyphen,          endash     ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <BKSL> { [ backslash,       bar                                         ] };

    // lower row, left side
    key <AB01> { [ apostrophe,      quotedbl,       dead_acute                  ] };

    // do NOT hardcode this switch; use lv3:ralt_switch option instead!
    //include "level3(ralt_switch)"
};

// phonetic layout for Russian letters on an US keyboard
// by Ivan Popov <pin@konvalo.org> 2005-07-17

// level3 modifier is a shortcut to the "us" meaning of the keys where
// we place cyrillic letters, handy for accessing the corresponding
// punctuation marks.
// It is important to have access to punctuation marks, and the rest of
// alphabetical keys are added for being consequent so that the users
// can expect the level3 modifier to give what the key label shows.

partial alphanumeric_keys
xkb_symbols "rus" {

    include "us(basic)"
    name[Group1]= "Russian (US, phonetic)";

key.type[group1]="FOUR_LEVEL_ALPHABETIC";

    key	<LatA> {	[ Cyrillic_a, Cyrillic_A ]	};
    key	<LatB> {	[ Cyrillic_be, Cyrillic_BE ]	};
    key	<LatW> {	[ Cyrillic_ve, Cyrillic_VE ]	};
    key	<LatG> {	[ Cyrillic_ghe, Cyrillic_GHE ]	};
    key	<LatD> {	[ Cyrillic_de, Cyrillic_DE ]	};
    key	<LatE> {	[ Cyrillic_ie, Cyrillic_IE ]	};
    key	<TLDE> {	[ Cyrillic_io, Cyrillic_IO, grave, asciitilde ] };
    key	<LatV> {	[ Cyrillic_zhe, Cyrillic_ZHE ]	};
    key	<LatZ> {	[ Cyrillic_ze, Cyrillic_ZE ]	};
    key	<LatI> {	[ Cyrillic_i, Cyrillic_I ]	};
    key	<LatJ> {	[ Cyrillic_shorti, Cyrillic_SHORTI ]	};
    key	<LatK> {	[ Cyrillic_ka, Cyrillic_KA ]	};
    key	<LatL> {	[ Cyrillic_el, Cyrillic_EL ]	};
    key	<LatM> {	[ Cyrillic_em, Cyrillic_EM ]	};
    key	<LatN> {	[ Cyrillic_en, Cyrillic_EN ]	};
    key	<LatO> {	[ Cyrillic_o, Cyrillic_O ]	};
    key	<LatP> {	[ Cyrillic_pe, Cyrillic_PE ]	};
    key	<LatR> {	[ Cyrillic_er, Cyrillic_ER ]	};
    key	<LatS> {	[ Cyrillic_es, Cyrillic_ES ]	};
    key	<LatT> {	[ Cyrillic_te, Cyrillic_TE ]	};
    key	<LatU> {	[ Cyrillic_u, Cyrillic_U ]	};
    key	<LatF> {	[ Cyrillic_ef, Cyrillic_EF ]	};
    key	<LatH> {	[ Cyrillic_ha, Cyrillic_HA ]	};
    key	<LatC> {	[ Cyrillic_tse, Cyrillic_TSE ]	};
    key <AC10> {        [ Cyrillic_che, Cyrillic_CHE, semicolon, colon ] };
    key	<AD11> {	[ Cyrillic_sha, Cyrillic_SHA, bracketleft, braceleft] };
    key	<AD12> {	[ Cyrillic_shcha, Cyrillic_SHCHA, bracketright, braceright ]	};
    key <AE12> {        [ Cyrillic_hardsign, Cyrillic_HARDSIGN, equal, plus ] };
    key	<LatY> {	[ Cyrillic_yeru, Cyrillic_YERU ]	};
    key	<LatX> {	[ Cyrillic_softsign, Cyrillic_SOFTSIGN ]	};
    key	<BKSL> {	[ Cyrillic_e, Cyrillic_E, backslash, bar ]	};
    key <AC11> {        [ Cyrillic_yu, Cyrillic_YU, apostrophe, quotedbl ] };
    key	<LatQ> {	[ Cyrillic_ya, Cyrillic_YA ]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "mac" {

    include "us(basic)"
    name[Group1]= "English (Macintosh)";
    key.type[group1]="FOUR_LEVEL";

    // Slightly improvised from http://homepage.mac.com/thgewecke/kblayout.jpg
    key <LSGT> { [   section,  plusminus,       section,        plusminus ] };
    key <TLDE> { [     grave, asciitilde,    dead_grave,        dead_horn ] };
    key <AE01> { [	   1,     exclam,    exclamdown,            U2044 ] };
    key <AE02> { [	   2,         at,     trademark,         EuroSign ] };
    key <AE03> { [	   3, numbersign,      sterling,            U2039 ] };
    key <AE04> { [	   4,     dollar,          cent,            U203A ] };
    key <AE05> { [	   5,    percent,      infinity,            UFB01 ] };
    key <AE06> { [         6,asciicircum,       section,            UFB02 ] };
    key <AE07> { [	   7,  ampersand,     paragraph,     doubledagger ] };
    key <AE08> { [	   8,   asterisk, enfilledcircbullet,      degree ] };
    key <AE09> { [	   9,  parenleft,   ordfeminine,   periodcentered ] };
    key <AE10> { [	   0, parenright,     masculine,singlelowquotemark] };
    key <AE11> { [     minus, underscore,        endash,           emdash ] };
    key <AE12> { [     equal,       plus,      notequal,        plusminus ] };

    key <AD01> { [	   q,          Q,            oe,               OE ] };
    key <AD02> { [	   w,          W,         U2211,doublelowquotemark] };
    key <AD03> { [	   e,          E,    dead_acute,            acute ] };
    key <AD04> { [	   r,          R,    registered,            U2030 ] };
    key <AD05> { [	   t,          T,        dagger,       dead_caron ] };
    key <AD06> { [	   y,          Y,           yen,       onequarter ] };
    key <AD07> { [	   u,        U,  dead_diaeresis,        diaeresis ] };
    key <AD08> { [	   i,        I, dead_circumflex,            U02C6 ] };
    key <AD09> { [	   o,          O,        oslash,         Ooblique ] };
    key <AD10> { [	   p,          P,      Greek_pi,            U220F ] };
    key <AD11> { [ bracketleft,  braceleft, leftdoublequotemark, rightdoublequotemark ] };
    key <AD12> { [bracketright, braceright, leftsinglequotemark, rightsinglequotemark ] };
    key <BKSL> { [ backslash,        bar, guillemotleft,   guillemotright ] };

    key <AC01> { [	   a,          A,         aring,            Aring ] };
    key <AC02> { [	   s,          S,        ssharp,      dead_stroke ] };
    key <AC03> { [	   d,          D, partialderivative,          eth ] };
    key <AC04> { [	   f,          F,      function,        dead_hook ] };
    key <AC05> { [	   g,          G,     copyright, dead_doubleacute ] };
    key <AC06> { [	   h,          H, dead_abovedot,    dead_belowdot ] };
    key <AC07> { [	   j,          J,         U2206,          onehalf ] };
    key <AC08> { [	   k,          K,dead_abovering,            UF8FF ] };

    key <AC09> { [	   l,          L,       notsign,            THORN ] };
    key <AC10> { [ semicolon,      colon,         U2026,            thorn ] };
    key <AC11> { [apostrophe,   quotedbl,            ae,               AE ] };

    key <AB01> { [	   z,          Z,   Greek_OMEGA,     dead_cedilla ] };
    key <AB02> { [	   x,          X,         U2248,      dead_ogonek ] };
				// unclear whether "approxeq" is 2248 or 2245
    key <AB03> { [	   c,          C,      ccedilla,         Ccedilla ] };
    key <AB04> { [	   v,          V,    squareroot,            U25CA ] };
    key <AB05> { [	   b,          B,      integral,         idotless ] };
    key <AB06> { [	   n,          N,    dead_tilde,            U02DC ] };
    key <AB07> { [	   m,          M,            mu,    threequarters ] };
    key <AB08> { [     comma,       less, lessthanequal,      dead_macron ] };
    key <AB09> { [    period,    greater, greaterthanequal,    dead_breve ] };
    key <AB10> { [     slash,   question,      division,     questiondown ] };

    include "level3(ralt_switch)"
};

// Colemak symbols for xkb on X.Org Server 7.x
// 2006-01-01 Shai Coleman, http://colemak.com/

partial alphanumeric_keys
xkb_symbols "colemak" {

    include "us"
    name[Group1]= "English (Colemak)";

    key <TLDE> { [        grave,   asciitilde,      dead_tilde,       asciitilde ] };
    key <AE01> { [            1,       exclam,      exclamdown,      onesuperior ] };
    key <AE02> { [            2,           at,       masculine,      twosuperior ] };
    key <AE03> { [            3,   numbersign,     ordfeminine,    threesuperior ] };
    key <AE04> { [            4,       dollar,            cent,         sterling ] };
    key <AE05> { [            5,      percent,        EuroSign,              yen ] };
    key <AE06> { [            6,  asciicircum,         hstroke,          Hstroke ] };
    key <AE07> { [            7,    ampersand,             eth,              ETH ] };
    key <AE08> { [            8,     asterisk,           thorn,            THORN ] };
    key <AE09> { [            9,    parenleft,  leftsinglequotemark,  leftdoublequotemark ] };
    key <AE10> { [            0,   parenright, rightsinglequotemark,  rightdoublequotemark ] };
    key <AE11> { [        minus,   underscore,          endash,           emdash ] };
    key <AE12> { [        equal,         plus,        multiply,         division ] };

    key <AD01> { [            q,            Q,      adiaeresis,       Adiaeresis ] };
    key <AD02> { [            w,            W,           aring,            Aring ] };
    key <AD03> { [            f,            F,          atilde,           Atilde ] };
    key <AD04> { [            p,            P,          oslash,         Ooblique ] };
    key <AD05> { [            g,            G,     dead_ogonek,       asciitilde ] };
    key <AD06> { [            j,            J,         dstroke,          Dstroke ] };
    key <AD07> { [            l,            L,         lstroke,          Lstroke ] };
    key <AD08> { [            u,            U,          uacute,           Uacute ] };
    key <AD09> { [            y,            Y,      udiaeresis,       Udiaeresis ] };
    key <AD10> { [    semicolon,        colon,      odiaeresis,       Odiaeresis ] };
    key <AD11> { [  bracketleft,    braceleft,   guillemotleft,        0x1002039 ] };
    key <AD12> { [ bracketright,   braceright,  guillemotright,        0x100203a ] };
    key <BKSL> { [    backslash,          bar,      asciitilde,       asciitilde ] };

    key <AC01> { [            a,            A,          aacute,           Aacute ] };
    key <AC02> { [            r,            R,      dead_grave,       asciitilde ] };
    key <AC03> { [            s,            S,          ssharp,       asciitilde ] };
    key <AC04> { [            t,            T,      dead_acute, dead_doubleacute ] };
    key <AC05> { [            d,            D,  dead_diaeresis,       asciitilde ] };
    key <AC06> { [            h,            H,      dead_caron,       asciitilde ] };
    key <AC07> { [            n,            N,          ntilde,           Ntilde ] };
    key <AC08> { [            e,            E,          eacute,           Eacute ] };
    key <AC09> { [            i,            I,          iacute,           Iacute ] };
    key <AC10> { [            o,            O,          oacute,           Oacute ] };
    key <AC11> { [   apostrophe,     quotedbl,          otilde,           Otilde ] };

    key <AB01> { [            z,            Z,              ae,               AE ] };
    key <AB02> { [            x,            X, dead_circumflex,       asciitilde ] };
    key <AB03> { [            c,            C,        ccedilla,         Ccedilla ] };
    key <AB04> { [            v,            V,              oe,               OE ] };
    key <AB05> { [            b,            B,      dead_breve,       asciitilde ] };
    key <AB06> { [            k,            K,  dead_abovering,       asciitilde ] };
    key <AB07> { [            m,            M,     dead_macron,       asciitilde ] };
    key <AB08> { [        comma,         less,    dead_cedilla,       asciitilde ] };
    key <AB09> { [       period,      greater,   dead_abovedot,       asciitilde ] };
    key <AB10> { [        slash,     question,    questiondown,       asciitilde ] };

    key <CAPS> { [    BackSpace,    BackSpace,       BackSpace,        BackSpace ] };
    key <LSGT> { [        minus,   underscore,          endash,           emdash ] };
    key <SPCE> { [        space,        space,           space,     nobreakspace ] };

    include "level3(ralt_switch)"
};

// I do NOT like dead-keys - the International keyboard as defined by Microsoft
// doesn't fit my needs. Why use two keystrokes for all simple characters (eg '
// and <space> generates a single ') just to have an Ã© (eacute) in two strokes
// as well? I type ' more often than Ã© (eacute).
//
// This file works just like a regular keyboard, BUT has all dead-keys
// accessible at level3 (through AltGr). An Ã« (ediaeresis) is now: AltGr+"
// followed by an e. In other words, this keyboard is not international as long
// as you leave the right Alt key alone.
//
// The original MS International keyboard was intended for Latin1 (iso8859-1).
// With the introduction of iso8859-15, the (important) ligature oe (and OE)
// became available. I added them next to ae. Because I write ediaeresis more
// often than registered, I moved registered to be next to copyright and added
// ediaeresis and idiaeresis. - Adriaan

partial alphanumeric_keys
xkb_symbols "altgr-intl" {

   include "us(intl)"
   name[Group1]= "English (international AltGr dead keys)";

// five dead keys moved into level3:

   key <TLDE> { [    grave, asciitilde,  dead_grave,   dead_tilde      ] };
   key <AC11> { [apostrophe,quotedbl,    dead_acute,   dead_diaeresis  ] };

// diversions from the MS Intl keyboard:

   key <AE01> { [        1, exclam,      onesuperior,  exclamdown      ] };
   key <AD04> { [        r, R,           ediaeresis,   Ediaeresis      ] };
   key <AC07> { [        j, J,           idiaeresis,   Idiaeresis      ] };
   key <AB02> { [        x, X,           oe,           OE              ] };
   key <AB04> { [        v, V,           registered,   registered      ] };

// onequarter etc (not in iso8859-15) moved to get three unshifted deadkeys:

   key <AE06> { [        6, asciicircum, dead_circumflex, onequarter    ] };
   key <AE07> { [        7, ampersand,   dead_horn,       onehalf       ] };
   key <AE08> { [        8, asterisk,    dead_ogonek,     threequarters ] };

   include "level3(ralt_switch)"
};

// Intel ClassmatePC Keyboard Layout
// by Piter PUNK <piterpk@terra.com.br>
//
// The keyboard layouts below maps the us(basic), us(intl) and us(alt-intl)
// to ClassmatePC keyboard. All layouts uses RCTL as level3(switch) since
// the keyboard doesn't have AltGr key. The EuroSign is engraved at 5 key.

// classmate - us(basic)
partial alphanumeric_keys
xkb_symbols "classmate" {
    include "us(basic)"
    name[Group1]= "English (US)";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    include "eurosign(5)"
    include "level3(switch)"
};

// classmate-intl - us(intl)
// RCTL is generated by Fn+Alt, because that, when trying to access
// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
// the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
// generate the same symbol as the original key.
partial alphanumeric_keys
xkb_symbols "classmate-intl" {
    include "us(intl)"
    name[Group1]= "USA - ClassmatePC (International)";
    key.type[Group1]="FOUR_LEVEL";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    key <KP7>  { [	KP_Home,		KP_7,	
			onehalf,		dead_horn	] };
    key <KP8>  { [	KP_Up,			KP_8,
			threequarters,		dead_ogonek	] };
    key <KP9>  { [	KP_Prior,		KP_9,
			leftsinglequotemark,	dead_breve	] };
    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
			rightsinglequotemark,	dead_abovering	] };

    key <KP4>  { [	KP_Left,		KP_4,
			uacute,			Uacute		] };
    key <KP5>  { [	KP_Begin,		KP_5,
			iacute,			Iacute		] };
    key <KP6>  { [	KP_Right,		KP_6,
			oacute,			Oacute		] };
    key <KPSU> { [	KP_Subtract,		KP_Subtract,
			odiaeresis,		Odiaeresis	] };

    key <KP2>  { [	KP_Down,		KP_2,
			oe,			OE		] };
    key <KP3>  { [	KP_Next,		KP_3,
			oslash,			Ooblique	] };
    key <KPAD> { [ 	KP_Add,     		KP_Add,
			paragraph,		degree          ] };

    key <KP0>  { [	KP_Insert,		KP_0,
			mu,			mu	] };
    key <KPDL> { [	KP_Delete,		KP_Decimal,
			dead_abovedot,		dead_caron	] };
    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
			questiondown,		dead_hook       ] };

    include "level3(switch)"
};

// classmate-alt-intl - us(alt-intl)
// RCTL is generated by Fn+Alt, because that, when trying to access
// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
// the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
// generate the same symbol as the original key.
partial alphanumeric_keys
xkb_symbols "classmate-alt-intl" {
    include "us(alt-intl)"
    name[Group1]= "USA - ClassmatePC (Alternative international)";
    key.type[Group1]="FOUR_LEVEL";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    key <KPSU> { [	KP_Subtract,		KP_Subtract	] };

    key <KP9>  { [	KP_Prior,		KP_9,
			leftsinglequotemark,	dead_breve	] };
    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
			rightsinglequotemark,	dead_abovering	] };

    key <KPAD> { [ 	KP_Add,     		KP_Add,
			dead_ogonek,		dead_diaeresis   ] };

    key <KPDL> { [	KP_Delete,		KP_Decimal,
			dead_abovedot,		dead_circumflex	] };
    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
			dead_hook,		dead_hook       ] };

    include "level3(switch)"
};

// classmate-altgr-intl - us(altgr-intl)
// RCTL is generated by Fn+Alt, because that, when trying to access
// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
// the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
// generate the same symbol as the original key.
partial alphanumeric_keys
xkb_symbols "classmate-altgr-intl" {
    include "us(altgr-intl)"
    name[Group1]= "USA - ClassmatePC (International Fn+Alt dead-keys)";
    key.type[Group1]="FOUR_LEVEL";

    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };

    key <KP7>  { [	KP_Home,		KP_7,	
			dead_horn,		dead_horn	] };
    key <KP8>  { [	KP_Up,			KP_8,
			dead_ogonek,		dead_ogonek	] };
    key <KP9>  { [	KP_Prior,		KP_9,
			leftsinglequotemark,	dead_breve	] };
    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
			rightsinglequotemark,	dead_abovering	] };

    key <KP4>  { [	KP_Left,		KP_4,
			uacute,			Uacute		] };
    key <KP5>  { [	KP_Begin,		KP_5,
			iacute,			Iacute		] };
    key <KP6>  { [	KP_Right,		KP_6,
			oacute,			Oacute		] };
    key <KPSU> { [	KP_Subtract,		KP_Subtract,
			odiaeresis,		Odiaeresis	] };

    key <KP1>  { [	KP_End,			KP_1,
			idiaeresis,		Idiaeresis	] };
    key <KP2>  { [	KP_Down,		KP_2,
			oe,			OE		] };
    key <KP3>  { [	KP_Next,		KP_3,
			oslash,			Ooblique	] };
    key <KPAD> { [ 	KP_Add,     		KP_Add,
			paragraph,		degree          ] };

    key <KP0>  { [	KP_Insert,		KP_0,
			mu,			mu	] };
    key <KPDL> { [	KP_Delete,		KP_Decimal,
			dead_abovedot,		dead_caron	] };
    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
			questiondown,		dead_hook       ] };

    include "level3(switch)"
};

partial alphanumeric_keys
xkb_symbols "olpc" {

   include "us(basic)"
   name[Group1]= "English (US)";

   // OLPC international US English keyboard layout.
   // It's a little different from the usual international layout.
   // See: http://wiki.laptop.org/go/Image:Keyboard_english.png

   key <TLDE> { [     grave, asciitilde,    dead_grave, dead_tilde ] };
   key <AE01> { [         1,     exclam,    exclamdown, exclamdown ] };
   key <AE02> { [         2,         at,       notsign,    notsign ] };
   key <AE03> { [         3, numbersign,     0x1000300,  0x1000300 ] }; // combining grave
   key <AE04> { [         4,     dollar,     0x1000301,  0x1000301 ] }; // combining acute
   key <AE05> { [         5,    percent,     0x1000306,  0x1000306 ] }; // combining breve above
   key <AE06> { [         6,asciicircum,     0x100030A,  0x100030A ] }; // combining ring above
   key <AE07> { [         7,  ampersand,     0x1000302,  0x1000302 ] }; // combining circumflex above
   key <AE08> { [         8,   asterisk,     0x100030C,  0x100030C ] }; // combining caron above
   key <AE09> { [         9,  parenleft,     0x1000307,  0x1000307 ] }; // combining dot above
   key <AE10> { [         0, parenright,     0x1000308,  0x1000308 ] }; // combining diaeresis above
   key <AE11> { [     minus, underscore,     0x1000304,  0x1000304 ] }; // combining macron above
   key <AE12> { [     equal,       plus,     0x1000303,  0x1000303 ] }; // combining tilde above

   key <AD01> { [         q,          Q,  Greek_omega, Greek_OMEGA ] };
   key <AD02> { [         w,          W,       oslash,      Oslash ] };
   key <AD03> { [         e,          E,           oe,          OE ] };
   key <AD04> { [         r,          R,    0x1000327,   0x1000327 ] }; // combining cedilla
   key <AD05> { [         t,          T,    0x100032E,   0x100032E ] }; // combining breve below
   key <AD06> { [         y,          Y,    0x1000325,   0x1000325 ] }; // combining ring below
   key <AD07> { [         u,          U,    0x100032D,   0x100032D ] }; // combining circumflex below
   key <AD08> { [         i,          I,    0x100032C,   0x100032C ] }; // combining caron below
   key <AD09> { [         o,          O,    0x1000323,   0x1000323 ] }; // combining dot below
   key <AD10> { [         p,          P,    0x1000324,   0x1000324 ] }; // combining diaeresis below
   key <AD11> { [ bracketleft,  braceleft,  0x1000331,   0x1000331 ] }; // combining macron below
   key <AD12> { [bracketright, braceright,  0x1000330,   0x1000330 ] }; // combining tilde below

   key <AC01>  { [         a,          A,          ae,               AE ] };
   key <AC02>  { [         s,          S,      ssharp,        0x1001E9C ] }; // uppercase S sharp
   key <AC03>  { [         d,          D,         eth,              ETH ] };
   key <AC04>  { [         f,          F,       thorn,            THORN ] };
   key <AC06>  { [         h,          H,    sterling,         sterling ] };
   key <AC07>  { [         j,          J,    EuroSign,         EuroSign ] };
   key <AC10>  { [ semicolon,      colon,   masculine,      ordfeminine ] };
   key <AC11>  { [ apostrophe,  quotedbl,    currency,         currency ] };
   key <AC12>  { [ backslash,        bar,      section,         section ] };

   key <AB03>  { [         c,          C,    ccedilla,         Ccedilla ] };
   key <AB06>  { [         n,          N,      ntilde,           Ntilde ] };
   key <AB07>  { [         m,          M,          mu,               mu ] };
   key <AB08>  { [     comma,     less,  guillemotleft,   guillemotleft ] };
   key <AB09>  { [    period,  greater, guillemotright,  guillemotright ] };
   key <AB10>  { [     slash,   question, questiondown,    questiondown ] };

   key <I219>  { [  multiply,   division, ISO_Next_Group, ISO_Prev_Group ] };

   include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "olpc2" {
   include "us(olpc)"
   name[Group1]= "English (the divide/multiply keys toggle the layout)";
   include "group(olpc)"
};

xkb_symbols "olpcm" {

   include "us(basic)"
   name[Group1]= "English (US)";

   // Mechanical (non-membrane) OLPC int'l US English keyboard layout.
   // See: http://wiki.laptop.org/go/OLPC_English_Non-membrane_Keyboard

   key <TLDE> { [     grave, asciitilde,    dead_grave, dead_tilde ] };
   key <AE01> { [         1,     exclam,    exclamdown, exclamdown ] };
   key <AE02> { [         2,         at,       notsign,    notsign ] };
   key <AE03> { [         3, numbersign,     0x1000300,  0x1000300 ] }; // combining grave
   key <AE04> { [         4,     dollar,     0x1000301,  0x1000301 ] }; // combining acute
   key <AE05> { [         5,    percent,     0x1000306,  0x1000306 ] }; // combining breve above
   key <AE06> { [         6,asciicircum,     0x100030A,  0x100030A ] }; // combining ring above
   key <AE07> { [         7,  ampersand,     0x1000302,  0x1000302 ] }; // combining circumflex above
   key <AE08> { [         8,   asterisk,     0x100030C,  0x100030C ] }; // combining caron above
   key <AE09> { [         9,  parenleft,     0x1000307,  0x1000307 ] }; // combining dot above
   key <AE10> { [         0, parenright,     0x1000308,  0x1000308 ] }; // combining diaeresis above
   key <AE11> { [     minus, underscore,     0x1000304,  0x1000304 ] }; // combining macron above

   key <AD01> { [         q,          Q,  Greek_omega, Greek_OMEGA ] };
   key <AD02> { [         w,          W,       oslash,      Oslash ] };
   key <AD03> { [         e,          E,           oe,          OE ] };
   key <AD04> { [         r,          R,    0x1000327,   0x1000327 ] }; // combining cedilla
   key <AD05> { [         t,          T,    0x100032E,   0x100032E ] }; // combining breve below
   key <AD06> { [         y,          Y,    0x1000325,   0x1000325 ] }; // combining ring below
   key <AD07> { [         u,          U,    0x100032D,   0x100032D ] }; // combining circumflex below
   key <AD08> { [         i,          I,    0x100032C,   0x100032C ] }; // combining caron below
   key <AD09> { [         o,          O,    0x1000323,   0x1000323 ] }; // combining dot below
   key <AD10> { [         p,          P,    0x1000324,   0x1000324 ] }; // combining diaeresis below
   key <AD11> { [ bracketleft,  braceleft,  0x1000331,   0x1000331 ] }; // combining macron below
   key <AD12> { [bracketright, braceright,  0x1000330,   0x1000330 ] }; // combining tilde below

   key <AC01>  { [         a,          A,          ae,               AE ] };
   key <AC02>  { [         s,          S,      ssharp,        0x1001E9C ] }; // uppercase S sharp
   key <AC03>  { [         d,          D,         eth,              ETH ] };
   key <AC04>  { [         f,          F,       thorn,            THORN ] };
   key <AC06>  { [         h,          H,    sterling,         sterling ] };
   key <AC07>  { [         j,          J,    EuroSign,         EuroSign ] };
   key <AC10>  { [ semicolon,      colon,   masculine,      ordfeminine ] };
   // no AC11 or AC12 on olpcm

   key <AB03>  { [         c,          C,    ccedilla,         Ccedilla ] };
   key <AB06>  { [         n,          N,      ntilde,           Ntilde ] };
   key <AB07>  { [         m,          M,          mu,               mu ] };
   key <AB08>  { [     comma,     less,  guillemotleft,   guillemotleft ] };
   key <AB09>  { [    period,  greater, guillemotright,  guillemotright ] };
   key <AB10>  { [     slash,   question, questiondown,    questiondown ] };

   key <AA02>  { [ backslash,        bar,      section,         section ] };
   key <AA06>  { [     equal,       plus,     0x1000303,  0x1000303 ] };
   key <AA07>  { [ apostrophe,  quotedbl,    currency,         currency ] };

   include "level3(ralt_switch)"
};

// Based on Cherokee Nation Official Layout
// http://www.cherokee.org/extras/downloads/font/Keyboard.htm

partial alphanumeric_keys modifier_keys
xkb_symbols "chr" {

    name[Group1]= "Cherokee";
    key.type[group1]="ALPHABETIC";

    key <TLDE> { [      grave,      U13CA ] };
    key <AE01> { [          1,      U13B1 ] };
    key <AE02> { [          2,      U13C7 ] };
    key <AE03> { [          3,      U13E7 ] };
    key <AE04> { [      U13D9,      U13B0 ] };
    key <AE05> { [      U13E6,      U13B9 ] };
    key <AE06> { [      U13DC,      U13DD ] };
    key <AE07> { [      U13CB,      U13E1 ] };
    key <AE08> { [      U13D6,      U13BA ] };
    key <AE09> { [      U13D2,  parenleft ] };
    key <AE10> { [      U13C4, parenright ] };
    key <AE11> { [      U13BF,      U13BC ] };
    key <AE12> { [      U13F3,      U13BD ] };

    key <AD01> { [      U13AA,      U13C6 ] };
    key <AD02> { [      U13B3,      U13EB ] };
    key <AD03> { [      U13A1,      U13E3 ] };
    key <AD04> { [      U13DB,      U13CF ] };
    key <AD05> { [      U13D4,      U13D8 ] };
    key <AD06> { [      U13EF,      U13F2 ] };
    key <AD07> { [      U13A4,      U13AD ] };
    key <AD08> { [      U13A2,      U13F1 ] };
    key <AD09> { [      U13A3,      U13EC ] };
    key <AD10> { [      U13C1,      U13EA ] };
    key <AD11> { [      U13D5,      U13D1 ] };
    key <AD12> { [      U13B6,      U13E4 ] };
    key <BKSL> { [      U13E9,      U13EE ] };

    key <AC01> { [      U13A0,      U13CC ] };
    key <AC02> { [      U13CD,      U13CE ] };
    key <AC03> { [      U13D7,      U13D0 ] };
    key <AC04> { [      U13A9,      U13C8 ] };
    key <AC05> { [      U13A6,      U13E5 ] };
    key <AC06> { [      U13AF,      U13B2 ] };
    key <AC07> { [      U13DA,      U13AB ] };
    key <AC08> { [      U13B8,      U13A7 ] };
    key <AC09> { [      U13B5,      U13AE ] };
    key <AC10> { [      U13E8,      U13E0 ] };
    key <AC11> { [ apostrophe,   quotedbl ] };

    key <AB01> { [      U13AC,      U13C3 ] };
    key <AB02> { [      U13F4,      U13ED ] };
    key <AB03> { [      U13D3,      U13DF ] };
    key <AB04> { [      U13A5,      U13DE ] };
    key <AB05> { [      U13A8,      U13F0 ] };
    key <AB06> { [      U13BE,      U13BB ] };
    key <AB07> { [      U13C5,      U13B7 ] };
    key <AB08> { [      comma,      U13E2 ] };
    key <AB09> { [     period,      U13B4 ] };
    key <AB10> { [      U13C2,      U13C9 ] };
};

// Serbian charecters added as third level symbols to US keyboard layout.

partial alphanumeric_keys
xkb_symbols "hbs" {

  include "us"
  name[Group1]= "Serbo-Croatian (US)";

  key <TLDE> { [ grave, asciitilde ] };
  key <AE06> { [ 6, dead_caron, asciicircum, asciicircum ] };
  key <AE08> { [ 8, asterisk, multiply, division ] };
  key <AE11> { [ minus, underscore, endash, emdash ] };
  key <AC09> { [ l, L, U1C9, U1C8 ] };
  key <AB06> { [ n, N, U1CC, U1CB ] };
  key <AB01> { [ z, Z, U1C6, U1C5 ] };
  key <AD03> { [ e, E, EuroSign, cent ] };
  key <AC03> { [ d, D, dstroke, Dstroke ] };
  key <AC11> { [ dead_acute, quotedbl, apostrophe, apostrophe ] };
  key <SPCE> { [ space, space, nobreakspace, nobreakspace ] };
  key <AB08> { [ comma, less, U3003, guillemotright ] };
  key <AB09> { [ period, greater, ellipsis, guillemotleft ] };

  include "level3(ralt_switch)"
};

//based on http://upload.wikimedia.org/wikipedia/commons/1/18/T-Mobile_G1_launch_event_2.jpg
partial alphanumeric_keys
xkb_symbols "htcdream" {
        include "inet(htcdream)"
        name[Group1]= "English (US)";

        //second row
        key <AD01> { [ q, Q, Tab, Tab ] };
        key <AD02> { [ w, W, grave, grave ] };
        key <AD03> { [ e, E, underscore, underscore ] };
        key <AD04> { [ r, R, sterling, sterling ] };
        key <AD05> { [ t, T, EuroSign, EuroSign ] };
        key <AD06> { [ y, Y, division, division ] };
        key <AD07> { [ u, U, multiply, multiply ] };
        key <AD08> { [ i, I, minus, minus ] };
        key <AD09> { [ o, O, plus, plus ] };
        key <AD10> { [ p, P, equal, equal ] };

        //third row
        key <AC01> { [ a, A, NoSymbol, NoSymbol ] };
        key <AC02> { [ s, S, bar, bar ] };
        key <AC03> { [ d ,D, backslash, backslash ] };
        key <AC04> { [ f, F, braceleft, braceleft ] };
        key <AC05> { [ g, G, braceright, braceright ] };
        key <AC06> { [ h, H, colon, colon ] };
        key <AC07> { [ j, J, semicolon, semicolon ] };
        key <AC08> { [ k, K, quotedbl, quotedbl ] };
        key <AC09> { [ l, L, apostrophe, apostrophe ] };

        //forth row
        key <AB01> { [ z, Z, NoSymbol, NoSymbol ] };
        key <AB02> { [ x, X, NoSymbol, NoSymbol ] };
        key <AB03> { [ c, C, NoSymbol, NoSymbol ] };
        key <AB04> { [ v, V, bracketleft, bracketleft ] };
        key <AB05> { [ b, B, bracketright, bracketright ] };
        key <AB06> { [ n, N, less, less ] };
        key <AB07> { [ m, M, greater, greater ] };
        key <AB08> { [ comma, comma, question, question ] };

        //fifth row
        key <FK15> { [ at, at, asciitilde, asciitilde ] };

        include "level3(alt_switch)"
};

// Workman Keyboard Layout symbols for xkb on X.Org Server 7.x
// 09-06-2010 OJ Bucao. http://www.workmanlayout.com

partial alphanumeric_keys
xkb_symbols "workman" {

    include "us(basic)"
    name[Group1]= "English (Workman)";

    key <AD01> {  [   q,  Q   ] };
    key <AD02> {  [   d,  D   ] };
    key <AD03> {  [   r,  R   ] };
    key <AD04> {  [   w,  W   ] };
    key <AD05> {  [   b,  B   ] };
    key <AD06> {  [   j,  J   ] };
    key <AD07> {  [   f,  F   ] };
    key <AD08> {  [   u,  U   ] };
    key <AD09> {  [   p,  P   ] };
    key <AD10> {  [   semicolon,  colon   ] };

    key <AC01> {  [   a,  A   ] };
    key <AC02> {  [   s,  S   ] };
    key <AC03> {  [   h,  H   ] };
    key <AC04> {  [   t,  T   ] };
    key <AC05> {  [   g,  G   ] };
    key <AC06> {  [   y,  Y   ] };
    key <AC07> {  [   n,  N   ] };
    key <AC08> {  [   e,  E   ] };
    key <AC09> {  [   o,  O   ] };
    key <AC10> {  [   i,  I   ] };

    key <AB01> {  [   z,  Z   ] };
    key <AB02> {  [   x,  X   ] };
    key <AB03> {  [   m,  M   ] };
    key <AB04> {  [   c,  C   ] };
    key <AB05> {  [   v,  V   ] };
    key <AB06> {  [   k,  K   ] };
    key <AB07> {  [   l,  L   ] };

    key <CAPS> { [    BackSpace,       Escape,       BackSpace,        BackSpace ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "workman-intl" {

    include "us(intl)"
    name[Group1]= "English (Workman, international with dead keys)";

    key <AD01> { [     q,          Q,    adiaeresis,       Adiaeresis ] };
    key <AD02> { [     d,          D,           eth,              ETH ] };
    key <AD03> { [     r,          R,    registered,       registered ] };
    key <AD04> { [     w,          W,         aring,            Aring ] };
    key <AD05> { [     b,          B,             b,                B ] };
    key <AD06> { [     j,          J,             j,                J ] };
    key <AD07> { [     f,          F,             f,                F ] };
    key <AD08> { [     u,          U,        uacute,           Uacute ] };
    key <AD09> { [     p,          P,    odiaeresis,       Odiaeresis ] };
    key <AD10> { [ semicolon,  colon,     paragraph,           degree ] };

    key <AC01> { [     a,          A,        aacute,           Aacute ] };
    key <AC02> { [     s,          S,        ssharp,          section ] };
    key <AC03> { [     h,          H,             h,                H ] };
    key <AC04> { [     t,          T,         thorn,            THORN ] };
    key <AC05> { [     g,          G,             g,                G ] };
    key <AC06> { [     y,          Y,    udiaeresis,       Udiaeresis ] };
    key <AC07> { [     n,          N,        ntilde,           Ntilde ] };
    key <AC08> { [     e,          E,        eacute,           Eacute ] };
    key <AC09> { [     o,          O,        oacute,           Oacute ] };
    key <AC10> { [     i,          I,        iacute,           Iacute ] };

    key <AB01> { [     z,          Z,            ae,               AE ] };
    key <AB02> { [     x,          X,             x,                X ] };
    key <AB03> { [     m,          M,            mu,               mu ] };
    key <AB04> { [     c,          C,     copyright,             cent ] };
    key <AB05> { [     v,          V,             v,                V ] };
    key <AB06> { [     k,          K,            oe,               OE ] };
    key <AB07> { [     l,          L,        oslash,         Ooblique ] };

    key <CAPS> { [ BackSpace, Escape,     BackSpace,        BackSpace ] };

    include "level3(ralt_switch)"
};

// Norman keyboard layout symbols for xkb on X.Org Server 7.x
// Written 11/23/2012, revised 3/7/2013 by David Norman http://normanlayout.info
// To the extent possible under law, the author(s) have dedicated all
// copyright and related and neighboring rights to this software to the
// public domain worldwide. This software is distributed without any warranty.

partial alphanumeric_keys
xkb_symbols "norman" {

    include "us(basic)"
    name[Group1]= "English (Norman)";

    key <AD01> { [ q, Q ] };
    key <AD02> { [ w, W ] };
    key <AD03> { [ d, D ] };
    key <AD04> { [ f, F ] };
    key <AD05> { [ k, K ] };
    key <AD06> { [ j, J ] };
    key <AD07> { [ u, U ] };
    key <AD08> { [ r, R ] };
    key <AD09> { [ l, L ] };
    key <AD10> { [ semicolon, colon ] };

    key <AC01> { [ a, A ] };
    key <AC02> { [ s, S ] };
    key <AC03> { [ e, E ] };
    key <AC04> { [ t, T ] };
    key <AC05> { [ g, G ] };
    key <AC06> { [ y, Y ] };
    key <AC07> { [ n, N ] };
    key <AC08> { [ i, I ] };
    key <AC09> { [ o, O ] };
    key <AC10> { [ h, H ] };

    key <AB01> { [ z, Z ] };
    key <AB02> { [ x, X ] };
    key <AB03> { [ c, C ] };
    key <AB04> { [ v, V ] };
    key <AB05> { [ b, B ] };
    key <AB06> { [ p, P ] };
    key <AB07> { [ m, M ] };

    key <CAPS> { [ BackSpace ] };

    include "level3(ralt_switch)"
};

// Carpalx layout created by Martin Krzywinski
// http://mkweb.bcgsc.ca/carpalx/

partial alphanumeric_keys
xkb_symbols "carpalx" {

    name[Group1]= "English (Carpalx)";

    key <TLDE> {	[     grave,	asciitilde	]	};
    key <AE01> {	[	  1,	exclam 		]	};
    key <AE02> {	[	  2,	at		]	};
    key <AE03> {	[	  3,	numbersign	]	};
    key <AE04> {	[	  4,	dollar		]	};
    key <AE05> {	[	  5,	percent		]	};
    key <AE06> {	[	  6,	asciicircum	]	};
    key <AE07> {	[	  7,	ampersand	]	};
    key <AE08> {	[	  8,	asterisk	]	};
    key <AE09> {	[	  9,	parenleft	]	};
    key <AE10> {	[	  0,	parenright	]	};
    key <AE11> {	[     minus,	underscore	]	};
    key <AE12> {	[     equal,	plus		]	};

    key <AD01> {	[	  q,	Q 		]	};
    key <AD02> {	[	  g,	G		]	};
    key <AD03> {	[	  m,	M		]	};
    key <AD04> {	[	  l,	L		]	};
    key <AD05> {	[	  w,	W		]	};
    key <AD06> {	[	  y,	Y		]	};
    key <AD07> {	[	  f,	F		]	};
    key <AD08> {	[	  u,	U		]	};
    key <AD09> {	[	  b,	B		]	};
    key <AD10> {	[ semicolon,	colon		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};

    key <AC01> {	[	  d,	D 		]	};
    key <AC02> {	[	  s,	S		]	};
    key <AC03> {	[	  t,	T		]	};
    key <AC04> {	[	  n,	N		]	};
    key <AC05> {	[	  r,	R		]	};
    key <AC06> {	[	  i,	I		]	};
    key <AC07> {	[	  a,	A		]	};
    key <AC08> {	[	  e,	E		]	};
    key <AC09> {	[	  o,	O		]	};
    key <AC10> {	[	  h,	H		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};

    key <AB01> {	[	  z,	Z 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C		]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  j,	J		]	};
    key <AB06> {	[	  k,	K		]	};
    key <AB07> {	[	  p,	P		]	};
    key <AB08> {	[     comma,	less		]	};
    key <AB09> {	[    period,	greater		]	};
    key <AB10> {	[     slash,	question	]	};

    key <BKSL> {	[ backslash,         bar	]	};
};

// Carpalx layout created by Martin Krzywinski
// http://mkweb.bcgsc.ca/carpalx/
// Merged with us(intl) and modified to move
// accented vowels closer to the plain vowels

partial alphanumeric_keys
xkb_symbols "carpalx-intl" {

    include "us(carpalx)"
    name[Group1]= "English (Carpalx, international with dead keys)";

    key <TLDE> { [dead_grave, dead_tilde,         grave,       asciitilde ] };
    key <AE01> { [	   1,     exclam,    exclamdown,      onesuperior ] };
    key <AE02> { [	   2,         at,   twosuperior, dead_doubleacute ] };
    key <AE03> { [	   3, numbersign, threesuperior,      dead_macron ] };
    key <AE04> { [	   4,     dollar,      currency,         sterling ] };
    key <AE05> { [	   5,    percent,      EuroSign,     dead_cedilla ] };
    key <AE06> { [    6, dead_circumflex,    onequarter,      asciicircum ] };
    key <AE07> { [	   7,  ampersand,       onehalf,	dead_horn ] };
    key <AE08> { [	   8,   asterisk, threequarters,      dead_ogonek ] };
    key <AE09> { [	   9,  parenleft, leftsinglequotemark, dead_breve ] };
    key <AE10> { [	   0, parenright, rightsinglequotemark, dead_abovering ] };
    key <AE11> { [     minus, underscore,           yen,    dead_belowdot ] };
    key <AE12> { [     equal,       plus,      multiply,         division ] };

    key <AD01> { [	   q,          Q,        degree,        paragraph ] };
    key <AD02> { [	   g,          G,         U011F,            U011E ] };
    key <AD03> { [	   m,          M,            mu,               mu ] };
    key <AD04> { [	   l,          L,     copyright,             cent ] };
    key <AD05> { [	   w,          W,             w,                W ] };
    key <AD06> { [	   y,          Y,    idiaeresis,       Idiaeresis ] };
    key <AD07> { [	   f,          F,    adiaeresis,       Adiaeresis ] };
    key <AD08> { [	   u,          U,    udiaeresis,       Udiaeresis ] };
    key <AD09> { [	   b,          B,    odiaeresis,       Odiaeresis ] };
    key <AD10> { [ semicolon,      colon,        oslash,         Ooblique ] };
    key <AD11> { [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark ] };
    key <AD12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };

    key <AC01> { [	   d,          D,           eth,              ETH ] };
    key <AC02> { [	   s,          S,        ssharp,          section ] };
    key <AC03> { [	   t,          T,         thorn,            THORN ] };
    key <AC04> { [	   n,          N,        ntilde,           Ntilde ] };
    key <AC05> { [	   r,          R,    registered,       registered ] };
    key <AC06> { [	   i,          I,        iacute,           Iacute ] };
    key <AC07> { [	   a,          A,        aacute,           Aacute ] };
    key <AC08> { [	   e,          E,        eacute,           Eacute ] };
    key <AC09> { [	   o,          O,        oacute,           Oacute ] };
    key <AC10> { [	   h,          H,        uacute,           Uacute ] };
    key <AC11> { [dead_acute, dead_diaeresis, apostrophe,        quotedbl ] };

    key <AB01> { [	   z,          Z,             z,                Z ] };
    key <AB02> { [	   x,          X,         U015F,            U015E ] };
    key <AB03> { [	   c,          C,      ccedilla,         Ccedilla ] };
    key <AB04> { [	   v,          V,            ae,               AE ] };
    key <AB05> { [	   j,          J,            oe,               OE ] };
    key <AB06> { [	   k,          K,         U0131,            U0130 ] };
    key <AB07> { [	   p,          P,         aring,            Aring ] };
    key <AB08> { [     comma,       less,    ediaeresis,       Ediaeresis ] };
    key <AB09> { [    period,    greater, dead_abovedot,       dead_caron ] };
    key <AB10> { [     slash,   question,  questiondown,        dead_hook ] };
    key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };

    key <LSGT> { [ backslash,   bar,            backslash,      bar ] };

    include "level3(ralt_switch)"
};

// Carpalx layout created by Martin Krzywinski
// http://mkweb.bcgsc.ca/carpalx/
// Merged with us(intl) and us(altgr-intl) and modified to move
// accented vowels closer to the plain vowels

partial alphanumeric_keys
xkb_symbols "carpalx-altgr-intl" {

   include "us(carpalx-intl)"
   name[Group1]= "English (Carpalx, international AltGr dead keys)";

// five dead keys moved into level3:

   key <TLDE> { [    grave, asciitilde,  dead_grave,   dead_tilde      ] };
   key <AC11> { [apostrophe,quotedbl,    dead_acute,   dead_diaeresis  ] };

// diversions from the MS Intl keyboard:

   key <AE01> { [        1, exclam,      onesuperior,  exclamdown      ] };

// onequarter etc (not in iso8859-15) moved to get three unshifted deadkeys:

   key <AE06> { [        6, asciicircum, dead_circumflex, onequarter    ] };
   key <AE07> { [        7, ampersand,   dead_horn,       onehalf       ] };
   key <AE08> { [        8, asterisk,    dead_ogonek,     threequarters ] };

   include "level3(ralt_switch)"
};

// Carpalx layout created by Martin Krzywinski
// Full optimization variant without fixed QWERTY-like ZXCV keys
// http://mkweb.bcgsc.ca/carpalx/

partial alphanumeric_keys
xkb_symbols "carpalx-full" {

    include "us(carpalx)"
    name[Group1]= "English (Carpalx, full optimization)";

    key <AD06> {	[	  b,	B		]	};
    key <AD07> {	[	  y,	Y		]	};
    key <AD09> {	[	  v,	V		]	};

    key <AB04> {	[	  f,	F		]	};
};

// Carpalx layout created by Martin Krzywinski
// Full optimization variant without fixed QWERTY-like ZXCV keys
// http://mkweb.bcgsc.ca/carpalx/
// Merged with us(intl) and modified to move
// accented vowels closer to the plain vowels

partial alphanumeric_keys
xkb_symbols "carpalx-full-intl" {

    include "us(carpalx-intl)"
    name[Group1]= "English (Carpalx, full optimization, international with dead keys)";

    key <AD06> { [	   b,          B,    idiaeresis,       Idiaeresis ] };
    key <AD07> { [	   y,          Y,    adiaeresis,       Adiaeresis ] };
    key <AD09> { [	   v,          V,    odiaeresis,       Odiaeresis ] };

    key <AB04> { [	   f,          F,            ae,               AE ] };
};

// Carpalx layout created by Martin Krzywinski
// Full optimization variant without fixed QWERTY-like ZXCV keys
// http://mkweb.bcgsc.ca/carpalx/
// Merged with us(intl) and us(altgr-intl) and modified to move
// accented vowels closer to the plain vowels

partial alphanumeric_keys
xkb_symbols "carpalx-full-altgr-intl" {

   include "us(carpalx-altgr-intl)"
   name[Group1]= "English (Carpalx, full optimization, international AltGr dead keys)";

    key <AD06> { [	   b,          B,    idiaeresis,       Idiaeresis ] };
    key <AD07> { [	   y,          Y,    adiaeresis,       Adiaeresis ] };
    key <AD09> { [	   v,          V,    odiaeresis,       Odiaeresis ] };

    key <AB04> { [	   f,          F,            ae,               AE ] };
};

// EXTRAS:

// Czech, Slovak and German charecters added as third level symbols to US keyboard layout.
partial alphanumeric_keys
xkb_symbols "cz_sk_de" {

    include "us"
    name[Group1]="Czech Slovak and German (US)";

    key <TLDE>  { [grave,   asciitilde, uring,      Uring       ] };
    key <AE01>	{ [    1,	exclam,	uacute,	    Uacute	] };
    key <AE02>	{ [    2,           at, ecaron,	    Ecaron	] };
    key <AE03>	{ [    3,   numbersign, scaron,	    Scaron	] };
    key <AE04>	{ [    4,       dollar,	ccaron,	    Ccaron	] };
    key <AE05>	{ [    5,      percent, rcaron,	    Rcaron	] };
    key <AE06>	{ [    6,  asciicircum, zcaron,	    Zcaron	] };
    key <AE07>	{ [    7,    ampersand,	yacute,	    Yacute	] };
    key <AE08>	{ [    8,     asterisk, aacute,	    Aacute	] };
    key <AE09>	{ [    9,    parenleft,	iacute,	    Iacute	] };
    key <AE10>	{ [    0,   parenright, eacute,	    Eacute	] };
    key <AE11>	{ [minus,   underscore, ssharp,     0x1001E9E	] };
    key <AE12>	{ [equal,	  plus, dead_acute, dead_caron  ] };

    key <AD03>	{ [         e,          E,     EuroSign,     Eacute ]	};

    key <AD11>	{ [bracketleft, braceleft,   udiaeresis,   Udiaeresis ]	};
    key <AC10>	{ [ semicolon,      colon,   odiaeresis,   Odiaeresis ]	};
    key <AC11>	{ [apostrophe,      quotedbl,adiaeresis,   Adiaeresis ]	};

    key <AC01>	{ [         a,          A,     aacute,	     Aacute   ]	};
    key <AD08>	{ [         i,          I,     iacute,	     Iacute   ]	};
    key <AD09>	{ [         o,          O,     oacute,       Oacute   ]	};
    key <AD06>	{ [         y,          Y,     yacute,       Yacute   ]	};
    key <AD07>	{ [         u,          U,     uring,	     Uring    ]	};

    key <AC02>	{ [         s,          S,     scaron,       Scaron   ]	};
    key <AB01>	{ [         z,          Z,     zcaron,	     Zcaron   ]	};
    key <AB03>	{ [         c,          C,     ccaron,       Ccaron   ]	};
    key <AD04>	{ [         r,          R,     rcaron,	     Rcaron   ]	};
    key <AD05>	{ [         t,          T,     tcaron,	     Tcaron   ]	};
    key <AC03>	{ [         d,          D,     dcaron,	     Dcaron   ]	};
    key <AB06>	{ [         n,          N,     ncaron,	     Ncaron   ]	};
    key <AC09>  { [         l,          L,     lcaron,       Lcaron   ] };
    key <AD10>  { [         p,          P,ocircumflex,  Ocircumflex   ] };

    key <SPCE>  { [     space,       space, nobreakspace, nobreakspace] };

    include "level3(ralt_switch)"
};

// XCompose is out! Unicode combining is in!  For those of us who live
// on the edge: A keymap using Unicode combining characters instead of
// deadkeys.  This variation does not deviate from the lame MS-style
// US-intl layout; but it uses AltGr for combining, like altgr-intl.
//
// This might break your font layout layout systems (because they
// suck), caveat emptor.  Also, most of today's software will count
// individual combining marks for selection, deletion, character
// counting &c., and won't be smart enough to do canonical equivalence
// when searching, &c.
//
// With Unicode combining you use "handwriting order", not
// "typewriting order" as with deadkeys.  That is, you first type the
// base character, then the diacritics/accents/modifiers.  This has
// the advantage of avoiding hidden states --- each keypress changes
// something on screen.
//
// TODO: as of now, this duplicates all us(intl) functionality with
// combining.  With care, perhaps we could add more combining marks
// not present in intl, and support all major languages.
partial alphanumeric_keys
xkb_symbols "intl-unicode" {

 name[Group1]= "English (US, international AltGr Unicode combining)";

 include "us(intl)"
 include "level3(ralt_switch)"

 // grave, tilde
 key <TLDE> { [grave, asciitilde, U0300, U0303 ] };
 // double acute
 key <AE02> { [ 2, at, twosuperior, U030B ] };
 // macron
 key <AE03> { [ 3, numbersign, threesuperior, U0304 ] };
 // circumflex
 key <AE06> { [ 6, asciicircum, onequarter, U0302 ] };
 // horn
 key <AE07> { [ 7, ampersand, onehalf, U031B ] };
 // ogonek
 key <AE08> { [ 8, asterisk, threequarters, U0328 ] };
 // breve
 key <AE09> { [	 9, parenleft, leftsinglequotemark, U0306 ] };
 // abovering
 key <AE10> { [	 0, parenright, rightsinglequotemark, U030A ] };

 // belowdot
 key <AE11> { [ minus, underscore, yen, U0323 ] };
 // acute, diaeresis
 key <AC11> { [apostrophe, quotedbl, U0301, U0308 ] };
 // abovedot, caron
 key <AB09> { [ period, greater, U0307, U030C ] };
 // hook
 key <AB10> { [ slash, question, questiondown, U0309 ] };

 // alt-intl compatibility
 // cedilla, caron
 key <AB08> { [ comma, less,	 U0327, U030C ] };
 // ogonek, diaeresis
 key <AC10> { [ semicolon, colon,	 U0328, U0308 ] };
 // doubleacute, horn
 key <AE12> { [ equal, plus,	 U030B, U031B ] };

 // we don't do combining latin letters and combining enclosures
 // because support for those is very rare.
};

// XCompose is out! Unicode combining is in! For those of us who live
// on the edge: A keymap using Unicode combining characters instead of
// deadkeys. This variation does break compatibility with us-intl,
// whenever I thought it would be more mnemonic or Unicodeish.
partial alphanumeric_keys
xkb_symbols "alt-intl-unicode" {

 name[Group1]= "English (US, international AltGr Unicode combining, alternative)";

 include "us(intl-unicode)"

 // easier macron; em-dash.
 // em-dash is available via compose, but I added here since it's such
 // an important typographic character.
 key <AE11> { [ minus, underscore, U0304, U2014 ] };

 // belowdot, abovedot (caron at coma/less key, per above)
 key <AB09> { [ period, greater, U0323, U0307 ] };

};

partial alphanumeric_keys
xkb_symbols "ats" {

    include "us"
    name[Group1]= "Atsina";

    //Using Dead key to get COMBINING COMMA ABOVE for ejectives on
    //q, l, t, s, m, g, k, p, w, y, r
    //XCompose key is used for the other accute and grave.

    key <AD03> { [ e, E, eacute, Eacute  ] };
    key <AD07> { [ u, U, uacute, Uacute  ] };
    key <AD08> { [ i, I, iacute, Iacute  ] };
    key <AD09> { [ o, O, oacute, Oacute  ] };
    key <AD11> { [ bracketleft,	braceleft, U03B8 ] };
    key <AD12> { [ bracketright, braceright, U010D, U010C ] };
    //U+010C (uppercase Ä) and U+010D (lowercase Ä).

    key <AC01> { [ a, A, aacute, Aacute  ] };

    //Small letter Open use compose to key get acute accent
    key <AB03> { [ c,	C, U0254, U0186		  ] };
    key <AB08> { [ comma,     less, U0313 ] };
    key <AB10> { [ slash, question, U0294 ] };

    include "level3(ralt_switch)"
    include "compose(rctrl)"
};

partial alphanumeric_keys
xkb_symbols "crd" {

  include "us"
  name[Group1]= "Coeur d'Alene Salish";

  key <AD02> { [         w,           W, U02B7, U02B7 ] };
  key <AE07> { [         7,   ampersand, U0294        ] };
  key <AD01> { [         q,           Q, U221A        ] };
  key <AB04> { [         v,           V, U0259        ] };
  key <BKSL> { [ backslash,         bar, U026B        ] };
  key <AD03> { [         e,           E, U025B        ] };
  key <AD08> { [         i,           I, U026A        ] };
  key <AC07> { [         j,           J, U01F0        ] };
  key <AE06> { [         6, asciicircum, U0295        ] };
  key <AC02> { [         s,           S, U0161        ] };
  key <AB03> { [         c,           C, U010D        ] };
  key <AD09> { [         o,           O, U0254        ] };
  key <AB09> { [    period,     greater, U0323        ] };

  include "level3(ralt_switch)"
  include "compose(rctrl)"
};


partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/us(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             // based on:
// vn,  TCVN 5712:1993
// Le Hong Boi <le.hong.boi@bigfoot.com>
// August 1999
// Further modified by Ashley Clark <aclark@debian.org>
// July 2000 for X 4.0
// Fix accents into combining marks by Samuel Thibault <samuel.thibault@ens-lyon.org>
// July 2009


default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "us"

    name[Group1]= "Vietnamese";

    key <TLDE> { [	   grave, 	asciitilde	] };
    key <AE01> { [	   abreve,	Abreve		] };
    key <AE02> { [	   acircumflex,  Acircumflex	] };
    key <AE03> { [	   ecircumflex,	Ecircumflex	] };
    key <AE04> { [	   ocircumflex,	Ocircumflex	] };
    key <AE05> { [	   0x1000300,	percent,	dead_grave,	percent		] };
    key <AE06> { [	   0x1000309,	asciicircum,	dead_hook,	asciicircum	] };
    key <AE07> { [	   0x1000303,	ampersand,	dead_tilde,	ampersand	] };
    key <AE08> { [	   0x1000301,	asterisk,	dead_acute,	asterisk	] };
    key <AE09> { [	   0x1000323,	parenleft,	dead_belowdot,	parenleft	] };
    key <AE10> { [	   dstroke,	Dstroke		] };
    key <AE11> { [     minus, underscore  ]	};
    key <AE12> { [     DongSign, plus ]	};

    key <AD11> { [ uhorn,	Uhorn	] };
    key <AD12> { [ ohorn,	Ohorn	] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 // Based on the Latvian and GB keyboard maps.

default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    // Describes the differences between an en_US layout
    // and a South African layout with dead keys.
    // By Dwayne Bailey (dwayne@translate.org.za).

    include "latin"

    name[Group1]="English (South Africa)";

    key <TLDE>  { [     grave, asciitilde,  dead_grave                ] };
    key <AE02>  { [         2,         at,         yen                ] };
    key <AE03>  { [         3, numbersign,    sterling                ] };
    key <AE04>  { [         4,     dollar,      dollar                ] };
    key <AE05>  { [         5,    percent,    EuroSign                ] };
    key <AE06>  { [         6,asciicircum, dead_circumflex            ] };

    key <AD03>  { [         e,          E,  ediaeresis,    Ediaeresis ] };
    key <AD04>  { [         r,          R, ecircumflex,   Ecircumflex ] };
    key <AD05>  { [         t,          T,       U1e71,         U1e70 ] };
    key <AD06>  { [         y,          Y, ucircumflex,   Ucircumflex ] };
    key <AD07>  { [         u,          U,  udiaeresis,    Udiaeresis ] };
    key <AD08>  { [         i,          I,  idiaeresis,    Idiaeresis ] };
    key <AD09>  { [         o,          O,  odiaeresis,    Odiaeresis ] };
    key <AD10>  { [         p,          P, ocircumflex,   Ocircumflex ] };

    key <AC01>  { [         a,          A,  adiaeresis,    Adiaeresis ] };
    key <AC02>  { [         s,          S,      scaron,        Scaron ] };
    key <AC03>  { [         d,          D,       U1e13,         U1e12 ] };
    key <AC09>  { [         l,          L,       U1e3d,         U1e3c ] };
    key <AC10>  { [ semicolon,      colon, dead_diaeresis             ] };
    key <AC11>  { [apostrophe,   quotedbl,  dead_acute                ] };

    key <AB06>  { [         n,          N,       U1e4b,         U1e4a ] };
    key <AB07>  { [         m,          M,       U1e45,         U1e44 ] };
    key <AB09>  { [    period,    greater, dead_abovedot              ] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   //
//Copyright (c) 1996  Digital Equipment Corporation
//
//Permission is hereby granted, free of charge, to any person obtaining
//a copy of this software and associated documentation files (the
//"Software"), to deal in the Software without restriction, including
//without limitation the rights to use, copy, modify, merge, publish,
//distribute, sublicense, and sell copies of the Software, and to
//permit persons to whom the Software is furnished to do so, subject to
//the following conditions:
//
//The above copyright notice and this permission notice shall be included
//in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL DIGITAL EQUIPMENT CORPORATION BE LIABLE FOR ANY CLAIM,
//DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
//THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of the Digital Equipment 
//Corporation shall not be used in advertising or otherwise to promote
//the sale, use or other dealings in this Software without prior written
//authorization from Digital Equipment Corporation.
//
// HISTORY
// Log: lk,v 
// Revision 1.2  1996/06/18  09:10:09  erik
// use flags correctly, assorted cleanups and consortium fixes
//
// Revision 1.1.2.2  1995/03/10  17:16:52  William_Walker
// 	Rename to avoid name conflicts with XKB stuff
// 	[1995/03/10  17:10:33  William_Walker]
//
// Revision 1.1.2.2  1994/10/31  15:22:00  William_Walker
// 	New experimental version.
// 	[1994/10/31  14:48:37  William_Walker]
// 
// EndLog
// 
// @(#)RCSfile: lk,v  Revision: 1.2  (DEC) Date: 1996/01/24 12:14:58
// 
// Symbols common to all the LK-style keyboards.
//
default xkb_symbols "common" {

    // Modifier mappings
    modifier_map Shift  	{ Shift_L, 	Shift_R	  };
    modifier_map Lock   	{ Caps_Lock };
    modifier_map Control	{ Control_L, Control_R };
    modifier_map Mod1		{ Alt_L, Alt_R, Meta_L, Meta_R };
    modifier_map Mod2		{ Num_Lock };
    modifier_map Mod3   	{ Scroll_Lock };

    // Additional alphanumeric keys
    key <LSGT>		{ [ less,	greater		] };
    key <LALT>		{ [ Alt_L,	Meta_L		] };

    // "Function" keys
    key <FK01>		{ [ F1				] };
    key <FK02>		{ [ F2				] };
    key <FK03>		{ [ F3				] };
    key <FK04>		{ [ F4				] };
    key <FK05>		{ [ F5				] };
    key <FK06>		{ [ F6				] };
    key <FK07>		{ [ F7				] };
    key <FK08>		{ [ F8				] };
    key <FK09>		{ [ F9				] };
    key <FK10>		{ [ F10				] };
    key <FK11>		{ [ Escape,	F11		] };
    key <FK12>		{ [ F12				] };
    key <FK13>		{ [ F13				] };
    key <FK14>		{ [ F14				] };
    key <FK17>		{ [ F17				] };
    key <FK18>		{ [ F18				] };
    key <FK19>		{ [ F19				] };
    key <FK20>		{ [ F20				] };

    // "Editing" keys
    key <HELP>		{ [ Help			] };
    key <DO>		{ [ Menu			] };
    key <FIND>		{ [ Find			] };
    key <INS>		{ [ Insert			] };
    key <DELE>		{ [ Delete			] };
    key <SELE>		{ [ Select			] };
    key <PGUP>		{ [ Prior			] };
    key <PGDN>		{ [ Next			] };

    key <UP>		{ [ Up				] };
    key <LEFT>		{ [ Left			] };
    key <DOWN>		{ [ Down			] };
    key <RGHT>		{ [ Right			] };

    // "Keypad" keys
    key <KPF1>		{
				type= "SHIFT+ALT",
				symbols[Group1]=[ KP_F1,Pointer_EnableKeys ]
			};
    key <KPF2>		{ [ KP_F2			] };
    key <KPF3>		{ [ KP_F3			] };
    key <KPF4>		{ [ KP_F4			] };

    key <KPCO>		{ [ KP_Separator		] };
    key <KPSU>		{ [ KP_Subtract			] };

    key <KP7>		{ [ KP_7			] };
    key <KP8>		{ [ KP_8			] };
    key <KP9>		{ [ KP_9			] };

    key <KP4>		{ [ KP_4			] };
    key <KP5>		{ [ KP_5			] };
    key <KP6>		{ [ KP_6			] };

    key <KP1>		{ [ KP_1			] };
    key <KP2>		{ [ KP_2			] };
    key <KP3>		{ [ KP_3			] };
    key <KPEN>		{ [ KP_Enter			] };

    key <KP0>		{ [ KP_0			] };
    key <KPDL>		{ [ KP_Decimal			] };
};

xkb_symbols "lk401" {
    include "symbols/digital_vndr/lk(common)"
    key <RALT>              { [ Alt_R,      Meta_R          ] };
    key <LCMP>              { [ Multi_key                   ] };
    key <RCMP>              { [ Multi_key                   ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       //
//Copyright (c) 1996  Digital Equipment Corporation
//
//Permission is hereby granted, free of charge, to any person obtaining
//a copy of this software and associated documentation files (the
//"Software"), to deal in the Software without restriction, including
//without limitation the rights to use, copy, modify, merge, publish,
//distribute, sublicense, and sell copies of the Software, and to
//permit persons to whom the Software is furnished to do so, subject to
//the following conditions:
//
//The above copyright notice and this permission notice shall be included
//in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL DIGITAL EQUIPMENT CORPORATION BE LIABLE FOR ANY CLAIM,
//DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
//THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of the Digital Equipment 
//Corporation shall not be used in advertising or otherwise to promote
//the sale, use or other dealings in this Software without prior written
//authorization from Digital Equipment Corporation.
//
// HISTORY
// Log
// Revision 1.2  1996/06/18  09:10:12  erik
// use flags correctly, assorted cleanups and consortium fixes
//
// Revision 1.1.6.4  1995/12/19  19:55:58  William_Walker
// 	Update to XKB 0.65
// 	[1995/12/17  02:37:07  William_Walker]
//
// Revision 1.1.6.3  1995/10/25  21:01:09  William_Walker
// 	Make sure we use DIN 2137 and VT510 Spec for Group Semantics
// 	[1995/10/23  15:49:03  William_Walker]
// 
// Revision 1.1.6.2  1995/08/07  17:40:40  William_Walker
// 	Upgrade XKB to protocol 0.62 (dual submit from decx11)
// 	[1995/08/06  14:06:32  William_Walker]
// 
// Revision 1.1.2.7  1995/08/05  15:25:57  William_Walker
// 	Sync up with Erik's pool.
// 	[1995/08/03  20:17:15  William_Walker]
// 
// Revision 1.1.2.6  1995/06/27  12:18:25  William_Walker
// 	Add LK201 and LK450 support as well as TW and DP variants.
// 	[1995/06/26  20:29:52  William_Walker]
// 
// Revision 1.1.2.5  1995/06/08	 17:10:28  William_Walker
// 	Make RALT default to Mode_switch
// 	[1995/06/08  17:08:50  William_Walker]
// 
// Revision 1.1.2.4  1995/06/05	 19:24:14  William_Walker
// 	New file.  I love keymaps.
// 	[1995/06/05  18:17:03  William_Walker]
// 
// EndLog
// 
// @(#)RCSfile: pc  Revision: /main/4  (DEC) Date: 1996/01/24 12:15:02 
// 

// **************************************************************
// *								*
// * The symbols common to all Extended PC layouts.		*
// *								*
// **************************************************************
xkb_symbols "pc" {

    // Modifier mappings
    //
    modifier_map Shift		{ Shift_L, Shift_R		};
    modifier_map Lock		{ Caps_Lock			};
    modifier_map Control	{ Control_L, Control_R		};
    modifier_map Mod1		{ Alt_L, Alt_R, Meta_L, Meta_R	};
    modifier_map Mod3		{ Mode_switch			};
    modifier_map Mod4		{ Num_Lock			};
    modifier_map Mod5		{ Scroll_Lock			};

    // Common keys
    //
    key <BKSP> {       [       BackSpace,	   Delete ] };
    key	 <TAB> {       [	     Tab,    ISO_Left_Tab ] };
    key <CAPS> {       [       Caps_Lock ] };
    key <RTRN> {       [	  Return ] };
    key <LFSH> {       [	 Shift_L ] };
    key <RTSH> {       [	 Shift_R ] };
    key <LCTL> {       [       Control_L ] };
    key <LALT> {       [	   Alt_L,	   Meta_L ] };
    key <SPCE> {       [	   space ] };
    key <RALT> {       [     Mode_switch ] };
    key <RCTL> {       [       Control_R ] };

    // "Function" keys
    //
    key	 <ESC> {       [	  Escape ] };
    key <FK01> {       [	      F1 ] };
    key <FK02> {       [	      F2 ] };
    key <FK03> {       [	      F3 ] };
    key <FK04> {       [	      F4 ] };
    key <FK05> {       [	      F5 ] };
    key <FK06> {       [	      F6 ] };
    key <FK07> {       [	      F7 ] };
    key <FK08> {       [	      F8 ] };
    key <FK09> {       [	      F9 ] };
    key <FK10> {       [	     F10 ] };
    key <FK11> {       [	     F11 ] };
    key <FK12> {       [	     F12 ] };
    key <PRSC> {
	type= "PC_ALT_LEVEL2",
	symbols[Group1]= [	     Print,	    Sys_Req ]
    };
    key <SCLK> {       [     Scroll_Lock ] };
    key <PAUS> {
	type= "PC_CONTROL_LEVEL2",
	symbols[Group1]= [	     Pause,	      Break ]
    };

    // "Editing" keys
    //
    key	 <INS> {       [	  Insert ] };
    key <HOME> {       [	    Home ] };
    key <PGUP> {       [	   Prior ] };
    key <DELE> {       [	  Delete ] };
    key	 <END> {       [	     End ] };
    key <PGDN> {       [	    Next ] };

    key	  <UP> {       [	      Up ] };
    key <LEFT> {       [	    Left ] };
    key <DOWN> {       [	    Down ] };
    key <RGHT> {       [	   Right ] };

    // "Keypad" keys
    //
    key <NMLK> {
	type= "SHIFT+ALT",
	symbols[Group1]= [	  Num_Lock,Pointer_EnableKeys]
    };
    key <KPDV> {       [       KP_Divide ] };
    key <KPMU> {       [     KP_Multiply ] };
    key <KPSU> {       [     KP_Subtract ] };

    key	 <KP7> {       [	 KP_Home,	     KP_7 ] };
    key	 <KP8> {       [	   KP_Up,	     KP_8 ] };
    key	 <KP9> {       [	KP_Prior,	     KP_9 ] };
    key <KPAD> {       [	  KP_Add ] };

    key	 <KP4> {       [	 KP_Left,	     KP_4 ] };
    key	 <KP5> {       [	    KP_5 ] };
    key	 <KP6> {       [	KP_Right,	     KP_6 ] };

    key	 <KP1> {       [	  KP_End,	     KP_1 ] };
    key	 <KP2> {       [	 KP_Down,	     KP_2 ] };
    key	 <KP3> {       [	 KP_Next,	     KP_3 ] };
    key <KPEN> {       [	KP_Enter ] };

    key	 <KP0> {       [       KP_Insert,	     KP_0 ] };
    key <KPDL> {       [       KP_Delete,      KP_Decimal ] };

    // Key to support Lock-Down Modifier descriptions for R5
    //
    key	 <LDM> {       [	NoSymbol ] };
};

xkb_symbols "pc104" {
    include "digital_vndr/pc(pc)"

    replace key <LALT> {       [       Alt_L ] };
    key	<LWIN> {       [	 Meta_L ] };
    key	<RWIN> {       [	 Meta_R ] };
    key	<MENU> {       [	 Menu   ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         //
//Copyright (c) 1996  Digital Equipment Corporation
//
//Permission is hereby granted, free of charge, to any person obtaining
//a copy of this software and associated documentation files (the
//"Software"), to deal in the Software without restriction, including
//without limitation the rights to use, copy, modify, merge, publish,
//distribute, sublicense, and sell copies of the Software, and to
//permit persons to whom the Software is furnished to do so, subject to
//the following conditions:
//
//The above copyright notice and this permission notice shall be included
//in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL DIGITAL EQUIPMENT CORPORATION BE LIABLE FOR ANY CLAIM,
//DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
//THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of the Digital Equipment 
//Corporation shall not be used in advertising or otherwise to promote
//the sale, use or other dealings in this Software without prior written
//authorization from Digital Equipment Corporation.
//
// HISTORY
// Log
// Revision 1.2  1996/06/18  09:10:16  erik
// use flags correctly, assorted cleanups and consortium fixes
//
// Revision 1.1.6.3  1995/12/19  19:56:37  William_Walker
// 	Update to XKB 0.65
// 	[1995/12/17  02:37:44  William_Walker]
//
// Revision 1.1.6.2  1995/10/25  21:01:25  William_Walker
// 	Add pc104-key support
// 	[1995/10/23  15:46:27  William_Walker]
// 
// Revision 1.1.2.7  1995/06/27  12:18:40  William_Walker
// 	Add LK201 and LK450 support as well as TW and DP variants.
// 	[1995/06/26  20:30:33  William_Walker]
// 
// Revision 1.1.2.6  1995/06/09	 20:55:20  William_Walker
// 	Add VT105 layout support and ISO group support
// 	[1995/06/09  20:43:05  William_Walker]
// 
// Revision 1.1.2.5  1995/06/08	 21:05:49  William_Walker
// 	Use ISO_Next_Group instead of grouplock
// 	[1995/06/08  21:03:56  William_Walker]
// 
// Revision 1.1.2.4  1995/06/05	 19:25:00  William_Walker
// 	New file.  I love keymaps.
// 	[1995/06/05  18:17:54  William_Walker]
// 
// EndLog
// 
// @(#)RCSfile: us  Revision: /main/4  (DEC) Date: 1996/01/24 12:15:05 
// 

// **************************************************************
// *								*
// * Symbols for en_US.ISO8859-1 - English for U.S.		*
// *								*
// **************************************************************

xkb_symbols "us" {

    key <AE00> {       [	    grave,     asciitilde ] };
    key <AE01> {       [		1,	   exclam ] };
    key <AE02> {       [		2,	       at ] };
    key <AE03> {       [		3,     numbersign ] };
    key <AE04> {       [		4,	   dollar ] };
    key <AE05> {       [		5,	  percent ] };
    key <AE06> {       [		6,    asciicircum ] };
    key <AE07> {       [		7,	ampersand ] };
    key <AE08> {       [		8,	 asterisk ] };
    key <AE09> {       [		9,	parenleft ] };
    key <AE10> {       [		0,     parenright ] };
    key <AE11> {       [	    minus,     underscore ] };
    key <AE12> {       [	    equal,	     plus ] };

    key <AD01> {       [		q,		Q ] };
    key <AD02> {       [		w,		W ] };
    key <AD03> {       [		e,		E ] };
    key <AD04> {       [		r,		R ] };
    key <AD05> {       [		t,		T ] };
    key <AD06> {       [		y,		Y ] };
    key <AD07> {       [		u,		U ] };
    key <AD08> {       [		i,		I ] };
    key <AD09> {       [		o,		O ] };
    key <AD10> {       [		p,		P ] };
    key <AD11> {       [      bracketleft,	braceleft ] };
    key <AD12> {       [     bracketright,     braceright ] };

    key <AC01> {       [		a,		A ] };
    key <AC02> {       [		s,		S ] };
    key <AC03> {       [		d,		D ] };
    key <AC04> {       [		f,		F ] };
    key <AC05> {       [		g,		G ] };
    key <AC06> {       [		h,		H ] };
    key <AC07> {       [		j,		J ] };
    key <AC08> {       [		k,		K ] };
    key <AC09> {       [		l,		L ] };
    key <AC10> {       [	semicolon,	    colon ] };
    key <AC11> {       [       apostrophe,	 quotedbl ] };
    key <BKSL> {       [	backslash,	      bar ] };

    key <AB01> {       [		z,		Z ] };
    key <AB02> {       [		x,		X ] };
    key <AB03> {       [		c,		C ] };
    key <AB04> {       [		v,		V ] };
    key <AB05> {       [		b,		B ] };
    key <AB06> {       [		n,		N ] };
    key <AB07> {       [		m,		M ] };
    key <AB08> {       [	    comma,	     less ] };
    key <AB09> {       [	   period,	  greater ] };
    key <AB10> {       [	    slash,	 question ] };
};

// **************************************************************
// *								*
// * The VT105 layouts						*
// *								*
// * NOTES: The typewriter (TW) and dataprocessing (DP) keys	*
// *	    for the VT108 layout are identical for the US.	*
// *								*
// **************************************************************
xkb_symbols "vt105-tw" {
    include "digital_vndr/us(us)"
    include "digital_vndr/vt(vt105)"
    override key <AE03> { 
	symbols[Group1]= [ 3, numbersign ],
	symbols[Group2]= [ sterling ]
    };
    key <AB00> {       [	     less,	  greater ] };
};

xkb_symbols "vt105-dp" { include "digital_vndr/us(vt105-tw)" };
xkb_symbols "vt105"    { include "digital_vndr/us(vt105-tw)" };

// **************************************************************
// *								*
// * The VT108 layouts - based upon the LK401-AA		*
// *								*
// * NOTES: The typewriter (TW) and dataprocessing (DP) keys	*
// *	    for the VT108 layout are identical for the US.	*
// *								*
// **************************************************************
xkb_symbols "vt108-tw" {
    include "digital_vndr/us(us)"
    include "digital_vndr/vt(vt108)"
    replace key <LCMP> { [ Multi_key ] };
    override key <AE03> { 
	symbols[Group1]= [ 3, numbersign ],
	symbols[Group2]= [ sterling ]
    };
    key <AB00> {       [	     less,	  greater ] };
};

xkb_symbols "vt108-dp" { include "digital_vndr/us(vt108-tw)" };
xkb_symbols "vt108"    { include "digital_vndr/us(vt108-tw)" };

// **************************************************************
// *								*
// * The "unix" layouts	- based upon the LK421-AA		*
// *								*
// * NOTES: The "unix" keyboard emits the same keycodes as the	*
// *	    LK401, but is a shorter keyboard that uses an	*
// *	    "extend" key.  To make life easier, we map <AE00>	*
// *	    to Escape so users do not have to press Extend+F11	*
// *	    to get Escape.					*
// *								*
// **************************************************************
xkb_symbols "unix" {
    include "digital_vndr/us(vt108)"
    override key <AE00>	{ [ Escape ] };
    override key <AB00>	{ [ grave, asciitilde ] };
};

// **************************************************************
// *								*
// * The "pcxal" layouts					*
// *								*
// * NOTES: The pcxal layouts are pretty much standardized for	*
// *	    the US and use a 101-key keyboard.			*
// *								*
// **************************************************************
xkb_symbols "pcxalga" {
    include "digital_vndr/pc(pc)"
    include "digital_vndr/us(us)"
    replace key <RALT> { [ Alt_R, Meta_R ] };
};

xkb_symbols "pcxal"   { include "digital_vndr/us(pcxalga)" };
xkb_symbols "pcxalaa" { include "digital_vndr/us(pcxalga)" };
xkb_symbols "pcxalfa" { include "digital_vndr/us(pcxalga)" };
xkb_symbols "pcxalka" { include "digital_vndr/us(pcxalga)" };
xkb_symbols "lk44x"   { include "digital_vndr/us(pcxalga)" };

// **************************************************************
// *								*
// * The "pc104" layouts.					*
// *								*
// **************************************************************
xkb_symbols "pc104" {
    include "digital_vndr/pc(pc104)"
    include "digital_vndr/us(us)"
    replace key <RALT> { [ Alt_R ] };
};
                                                                                                                                                                                                                                         //
//Copyright (c) 1996  Digital Equipment Corporation
//
//Permission is hereby granted, free of charge, to any person obtaining
//a copy of this software and associated documentation files (the
//"Software"), to deal in the Software without restriction, including
//without limitation the rights to use, copy, modify, merge, publish,
//distribute, sublicense, and sell copies of the Software, and to
//permit persons to whom the Software is furnished to do so, subject to
//the following conditions:
//
//The above copyright notice and this permission notice shall be included
//in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
//OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL DIGITAL EQUIPMENT CORPORATION BE LIABLE FOR ANY CLAIM,
//DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
//THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of the Digital Equipment 
//Corporation shall not be used in advertising or otherwise to promote
//the sale, use or other dealings in this Software without prior written
//authorization from Digital Equipment Corporation.
//
// HISTORY
// Log
// Revision 1.2  1996/06/18  09:10:19  erik
// use flags correctly, assorted cleanups and consortium fixes
//
// Revision 1.1.6.2  1995/12/19  19:56:39  William_Walker
// 	Update to XKB 0.65
// 	[1995/12/17  02:37:47  William_Walker]
//
// Revision 1.1.2.5  1995/07/11  21:20:50  William_Walker
// 	Make RALT act as RALT
// 	[1995/07/11  21:18:28  William_Walker]
// 
// Revision 1.1.2.4  1995/06/27  12:18:41  William_Walker
// 	Add LK201 and LK450 support as well as TW and DP variants.
// 	[1995/06/26  20:30:37  William_Walker]
// 
// Revision 1.1.2.3  1995/06/09	 20:55:21  William_Walker
// 	Add VT105 layout support and ISO group support
// 	[1995/06/09  20:43:09  William_Walker]
// 
// Revision 1.1.2.2  1995/06/05	 19:25:04  William_Walker
// 	New file.  I love keymaps.
// 	[1995/06/05  18:17:58  William_Walker]
// 
// EndLog
// 
// @(#)RCSfile: vt  Revision: /main/3  (DEC) Date: 1996/01/24 12:15:08 
// 
xkb_symbols "vt105" {

    // Modifier mappings
    //
    modifier_map Shift		{ Shift_L, Shift_R		};
    modifier_map Lock		{ Caps_Lock			};
    modifier_map Control	{ Control_L, Control_R		};
    modifier_map Mod1		{ Alt_L, Alt_R, Meta_L, Meta_R	};
    modifier_map Mod3		{ Mode_switch			};

    // Common keys
    //
    key <BKSP> {       [	  Delete ] };
    key	 <TAB> {       [	     Tab ] };
    key <RTRN> {       [	  Return ] };
    key <LCTL> {       [       Control_L ] };
    key <CAPS> {       [       Caps_Lock ] };
    key <LFSH> {       [	 Shift_L ] };
    key <RTSH> {       [	 Shift_R ] };
    key <LCMP> {       [   Alt_L, Meta_L ] };
    key <SPCE> {       [	   space ] };

    // "Function" keys
    //
    key <FK01> {       [	       F1 ] };
    key <FK02> {       [	       F2 ] };
    key <FK03> {       [	       F3 ] };
    key <FK04> {       [	       F4 ] };
    key <FK05> {       [	       F5 ] };
    key <FK06> {       [	       F6 ] };
    key <FK07> {       [	       F7 ] };
    key <FK08> {       [	       F8 ] };
    key <FK09> {       [	       F9 ] };
    key <FK10> {       [	      F10 ] };
    key <FK11> {       [	   Escape,	      F11 ] };
    key <FK12> {       [	      F12 ] };
    key <FK13> {       [	      F13 ] };
    key <FK14> {       [	      F14 ] };
    key <FK17> {       [	      F17 ] };
    key <FK18> {       [	      F18 ] };
    key <FK19> {       [	      F19 ] };
    key <FK20> {       [	      F20 ] };

    // "Editing" keys
    //
    key <HELP> {       [	    Help ] };
    key	  <DO> {       [	    Menu ] };
    key <FIND> {       [	    Find ] };
    key	 <INS> {       [	  Insert ] };
    key <DELE> {       [       apLineDel ] };
    key <SELE> {       [	  Select ] };
    key <PGUP> {       [	   Prior ] };
    key <PGDN> {       [	    Next ] };

    key	  <UP> {       [	      Up ] };
    key <LEFT> {       [	    Left ] };
    key <DOWN> {       [	    Down ] };
    key <RGHT> {       [	   Right ] };

    // "Keypad" keys
    //
    key <KPF1> {
	type= "SHIFT+ALT",
	symbols[Group1]= [	     KP_F1,Pointer_EnableKeys ]
    };
    key <KPF2> {       [	   KP_F2 ] };
    key <KPF3> {       [	   KP_F3 ] };
    key <KPF4> {       [	   KP_F4 ] };

    key	 <KP7> {       [	    KP_7 ] };
    key	 <KP8> {       [	    KP_8 ] };
    key	 <KP9> {       [	    KP_9 ] };
    key <KPSU> {       [     KP_Subtract ] };

    key	 <KP4> {       [	    KP_4 ] };
    key	 <KP5> {       [	    KP_5 ] };
    key	 <KP6> {       [	    KP_6 ] };
    key <KPCO> {       [    KP_Separator ] };

    key	 <KP1> {       [	    KP_1 ] };
    key	 <KP2> {       [	    KP_2 ] };
    key	 <KP3> {       [	    KP_3 ] };
    key <KPEN> {       [	KP_Enter ] };

    key	 <KP0> {       [	    KP_0 ] };
    key <KPDL> {       [      KP_Decimal ] };

    // Key to support Lock-Down Modifier descriptions for R5
    //
    key	 <LDM> {       [	NoSymbol ] };
};

xkb_symbols "vt108" {

    include "digital_vndr/vt(vt105)"

    replace key <LCMP> { [ Mode_switch ] };

    key <LALT> {       [	   Alt_L,	   Meta_L ] };
    key <RALT> {       [	   Alt_R,	   Meta_R ] };
    key <RCMP> {       [       Multi_key ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          //
//Copyright 1996, 1998  The Open Group
//
//Permission to use, copy, modify, distribute, and sell this software and its
//documentation for any purpose is hereby granted without fee, provided that
//the above copyright notice appear in all copies and that both that
//copyright notice and this permission notice appear in supporting
//documentation.
//
//The above copyright notice and this permission notice shall be
//included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
//OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of The Open Group shall
//not be used in advertising or otherwise to promote the sale, use or
//other dealings in this Software without prior written authorization
//from The Open Group.
//
// Japanese layout for a Fujitsu 140 key keyboard

xkb_symbols "basic" {
    override "fujitsu_vndr/us"
    augment key <AE01> { [],			[ kana_NU	] 	};
	    key <AE02> { [ 2, quotedbl	],	[ kana_FU	]	};
	    key <AE03> { [ 3, numbersign ],	[ kana_A, kana_a ]	};
	    key <AE04> { [ 4, dollar	],	[ kana_U, kana_u ]	};
    augment key <AE05> { [],		[ kana_E, kana_e ]	};
	    key <AE06> { [ 6, ampersand	],	[ kana_O, kana_o ]	};
	    key <AE07> { [ 7, apostrophe ],	[ kana_YA, kana_ya ]	};
	    key <AE08> { [ 8, parenleft	],	[ kana_YU, kana_yu ]	};
	    key <AE09> { [ 9, parenright ],	[ kana_YO, kana_yo ]	};
    replace key <AE10> { [ 0	],		[ kana_WA, kana_WO ]	};
	    key <AE11> { [ minus, equal	],	[ kana_HO	]	};
	    key <AE12> { [ asciicircum, asciitilde ], [ kana_HE ]	};
	    key <BKSL> { [ backslash, bar ],	[ prolongedsound]	};
    augment key <AD01> { [],			[ kana_TA	]	};
    augment key <AD02> { [],			[ kana_TE	]	};
    augment key <AD03> { [],			[ kana_I, kana_i ]	};
    augment key <AD04> { [],			[ kana_SU	]	};
    augment key <AD05> { [],			[ kana_KA	]	};
    augment key <AD06> { [],			[ kana_N	]	};
    augment key <AD07> { [],			[ kana_NA	]	};
    augment key <AD08> { [],			[ kana_NI	]	};
    augment key <AD09> { [],			[ kana_RA	]	};
    augment key <AD10> { [],			[ kana_SE	]	};
	    key <AD11> { [ at, grave	],	[ voicedsound	]	};
	    key <AD12> { [ bracketleft, braceleft ], [ semivoicedsound, kana_openingbracket ]	};
    augment key <AC01> { [],			[ kana_CHI	]	};
    augment key <AC02> { [],			[ kana_TO	]	};
    augment key <AC03> { [],			[ kana_SHI	]	};
    augment key <AC04> { [],			[ kana_HA	]	};
    augment key <AC05> { [],			[ kana_KI	]	};
    augment key <AC06> { [],			[ kana_KU	]	};
    augment key <AC07> { [],			[ kana_MA	]	};
    augment key <AC08> { [],			[ kana_NO	]	};
    augment key <AC09> { [],			[ kana_RI	]	};
	    key <AC10> { [ semicolon, plus ],	[ kana_RE	]	};
	    key <AC11> { [ colon, asterisk ],	[ kana_KE	]	};
	    key <TLDE> { [ bracketright, braceright ], [ kana_MU, kana_closingbracket ] };
    augment key <AB01> { [],			[ kana_TSU, kana_tsu ]	};
    augment key <AB02> { [],			[ kana_SA	]	};
    augment key <AB03> { [],			[ kana_SO	]	};
    augment key <AB04> { [],			[ kana_HI	]	};
    augment key <AB05> { [],			[ kana_KO	]	};
    augment key <AB06> { [],			[ kana_MI	]	};
    augment key <AB07> { [],			[ kana_MO	]	};
    augment key <AB08> { [],			[ kana_NE, kana_comma ]	};
    augment key <AB09> { [],			[ kana_RU, kana_fullstop ] };
    augment key <AB10> { [],			[ kana_ME, kana_conjunctive ] };
	    key <AB11> { [ underscore	],	[ kana_RO	]	};
	    key <UNK0> { [ Select	]	}; 
	    key <UNK1> { [ Massyo	]	}; 
	    key <UNK2> { [ Touroku	]	}; 
	    key <UNK3> { [ Zenkaku_Hankaku ]	}; 
	    key <UNK4> { [ Eisu_Shift	]	};
	    key <UNK5> { [ Mode_switch	]	};
	    key <UNK6> { [ Cancel	]	};
	    key <UNK7> { [ Muhenkan	]	};
	    key <UNK8> { [ Henkan	]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        //
//Copyright 1996, 1998  The Open Group
//
//Permission to use, copy, modify, distribute, and sell this software and its
//documentation for any purpose is hereby granted without fee, provided that
//the above copyright notice appear in all copies and that both that
//copyright notice and this permission notice appear in supporting
//documentation.
//
//The above copyright notice and this permission notice shall be
//included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
//OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of The Open Group shall
//not be used in advertising or otherwise to promote the sale, use or
//other dealings in this Software without prior written authorization
//from The Open Group.
//
// US/ASCII layout for a Fujitsu 138 key keyboard
xkb_symbols "basic" {
    include "us(basic)"

    // A few alphanumeric keys are different
    key <TLDE> { [ grave, asciitilde ]	};
    key <BKSP> { [ BackSpace	]	};
    key <BKSL> { [ backslash, bar ]	};
    key <AB11> { [		]	};

    key <RTSH> { [ Shift_R	]	};

    key <LALT> { [ Alt_L	]	};
    key <RALT> { [ Alt_R	]	};
    key <LMTA> { [ Meta_L	]	};
    key <RMTA> { [ Meta_R	]	};
    key <LNFD> { [ Linefeed	]	};
    key <COMP> { [ Multi_key	]	};
    // End alphanumeric section

    // Begin "Function" section
    key <BREA> { [ Break	]	};
    key <PRSC> { [ Print	]	};
    key <KNJI> { [ Kanji	]	};
    key <PAUS> { [ Pause	]	};

    key <FK01> { [ F1		]	};
    key <FK02> { [ F2		]	};
    key <FK03> { [ F3		]	};
    key <FK04> { [ F4		]	};
    key <FK05> { [ F5		]	};
    key <FK06> { [ F6		]	};
    key <FK07> { [ F7		]	};
    key <FK08> { [ F8		]	};
    key <FK09> { [ F9		]	};
    key <FK10> { [ F10		]	};
    key <FK11> { [ F11		]	};
    key <FK12> { [ F12		]	};
    key <FK13> { [ F13		]	};
    key <FK14> { [ F14		]	};
    key <FK15> { [ F15		]	};
    key <FK16> { [ F16		]	};
    key <FK17> { [ F17		]	};
    key <FK18> { [ F18		]	};
    key <FK19> { [ F19		]	};
    key <FK20> { [ F20		]	};
    key <FK21> { [ F21		]	};
    key <FK22> { [ F22		]	};
    key <FK23> { [ F23		]	};
    key <FK24> { [ F24		]	};
    key <FK25> { [ F25		]	};
    key <FK26> { [ F26		]	};
    key <FK27> { [ F27		]	};
    key <FK28> { [ F28		]	};
    key <FK29> { [ F29		]	};
    key <FK30> { [ F30		]	};
    key <FK31> { [ F31		]	};
    key <FK32> { [ F32		]	};
    // End "Function" section

    // Begin "Editing" section
    key <UNDO> { [ Undo		]	};
    key <COPY> { [ F33		]	};
    key <PAST> { [ F34		]	};
    key <CUT>  { [ F35		]	};
    key <HELP> { [ Help		]	};
    // End "Editing" section

    // Begin "Cursor" section
    key <UNK0> { [ 		]	}; 
    key <UNK1> { [ 		]	}; 
    key <UNK2> { [ 		]	}; 
    key <PGUP> { [ Prior	]	}; 
    key <HOME> { [ Home		]	};
    key <PGDN> { [ Next		]	}; 
    key <UNK3> { [ 		]	}; 
    key <DEL>  { [ Delete	]	}; 
    key <INS>  { [ Insert	]	}; 
    key <LEFT> { [ Left		]	};
    key <RGHT> { [ Right	]	};
    key <UP>   { [ Up		]	};
    key <DOWN> { [ Down		]	};
    key <EXEC> { [ Execute	]	};
    // End "Cursor" section

    // Begin "Keypad" section
    key <KPMU> { [ KP_Multiply	]	};
    key <KPDV> { [ KP_Divide	]	};
    key <KPAD> { [ KP_Add	]	};
    key <KPSU> { [ KP_Subtract	]	};

    key  <KP7> { [  KP_7	]	};
    key  <KP8> { [  KP_8	]	};
    key  <KP9> { [  KP_9	]	};
    key <KPEQ> { [ KP_Equal 	]	};

    key  <KP4> { [  KP_4	]	};
    key  <KP5> { [  KP_5	]	};
    key  <KP6> { [  KP_6	]	};
    key <KPDC> { [  KP_Decimal	]	};

    key  <KP1> { [  KP_1	]	};
    key  <KP2> { [  KP_2	]	};
    key  <KP3> { [  KP_3	]	};
    key <KPEN> { [  KP_Enter	]	}; 

    key  <KP0> { [  KP_0	]	};
    key <KP00> { [  KP_0	]	};
    // End "Keypad" section

    modifier_map Shift  	{ Shift_R };
    modifier_map Mod1   	{ Meta_L, Meta_R };
    modifier_map Mod2   	{ Mode_switch };
    modifier_map Mod3   	{ Alt_L };
    modifier_map Mod4   	{ Num_Lock };
    modifier_map Mod5   	{ F13, F18, F20 };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         //
//Copyright 1996, 1998  The Open Group
//
//Permission to use, copy, modify, distribute, and sell this software and its
//documentation for any purpose is hereby granted without fee, provided that
//the above copyright notice appear in all copies and that both that
//copyright notice and this permission notice appear in supporting
//documentation.
//
//The above copyright notice and this permission notice shall be
//included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
//OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of The Open Group shall
//not be used in advertising or otherwise to promote the sale, use or
//other dealings in this Software without prior written authorization
//from The Open Group.
//
// US/ASCII layout for a HP non-PC keyboard
xkb_symbols "hil" {
    include "us(basic)"

    // A few alphanumeric keys are different
    key <TLDE> { [ grave,	asciitilde	]};
    key <RTSH> { [ Shift_R	]};
    key <LALT> { [ Meta_L	]};
    key <RALT> { [ Meta_R	]};
    // End alphanumeric section

    // Begin "Function" section
    key <BRK>  { [ Break	]};
    key <STOP> { [ Cancel	]};
    key <FK01> { [ F1	]	};
    key <FK02> { [ F2	]	};
    key <FK03> { [ F3	]	};
    key <FK04> { [ F4	]	};
    key <MENU> { [ Menu	]	};
    key <SYST> { [ hpSystem	]};
    key <FK05> { [ F5	]	};
    key <FK06> { [ F6	]	};
    key <FK07> { [ F7	]	};
    key <FK08> { [ F8	]	};
    key <CLRL> { [ hpClearLine	]};
    key <CLR>  { [ Clear	]};
    key <FK09> { [ F9	]	};
    key <FK10> { [ F10	]	};
    key <FK11> { [ F11	]	};
    key <FK12> { [ F12	]	};
    // End "Function" section

    // Begin "Editing" section
    key <PRSC> { [ Execute, Print	]};
    key <INSL> { [ hpInsertLine	]};
    key <DELL> { [ hpDeleteLine	]};
    key <INSC> { [ hpInsertChar	]};
    key <DELC> { [ hpDeleteChar	]};
    key <HOME> { [ Home	]	};
    key <PGUP> { [ Prior ]	};
    key <PGDN> { [ Next ]	};
    key <SELE> { [ Select ]	};
    key <LEFT> { [ Left	]	};
    key <DOWN> { [ Down	]	};
    key <UP>   { [ Up	]	};
    key <RGHT> { [ Right	]};
    // End "Editing" section

    // Begin "Keypad" section
    key <KPMU> { [ KP_Multiply	]};
    key <KPDV> { [ KP_Divide	]};
    key <KPAD> { [ KP_Add	]};
    key <KPSU> { [ KP_Subtract	]};

    key  <KP7> { [ KP_7	]	};
    key  <KP8> { [ KP_8	]	};
    key  <KP9> { [ KP_9	]	};
    key <KPEN> { [ KP_Enter	]}; 

    key  <KP4> { [ KP_4	]	};
    key  <KP5> { [ KP_5	]	};
    key  <KP6> { [ KP_6	]	};
    key <KPSP> { [ KP_Separator	]};

    key  <KP1> { [ KP_1	]	};
    key  <KP2> { [ KP_2	]	};
    key  <KP3> { [ KP_3	]	};
    key <KPTB> { [ KP_Tab	]}; 

    key  <KP0> { [ KP_0	]	};
    key <KPDL> { [ KP_Decimal ]	};
    // End "Keypad" section

    modifier_map Shift  	{ Shift_R };
    modifier_map Mod1   	{ Meta_L, Meta_R };
    modifier_map Mod2   	{ Alt_L };
    modifier_map Mod3   	{ Mode_switch };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       // Instructions
//
// 1. Set basic layout by:
//    setxkbmap -rules evdev -model jollasbj -layout cz
//
// 2. Set variant by:
//    setxkbmap -rules evdev -model jollasbj -layout cz -variant qwerty
//    In practice this is equivalent to:
//    setxkbmap -rules evdev -model jollasbj -layout cz_qwerty
//    However, the latter form isn't portable so always use the -variant option.
//
// 3. Set multilayout by:
//    setxkbmap -rules evdev -model jollasbj -layout "us,cz" -variant ",qwerty" -option grp:ctrl_shift_toggle
//    This sets the basic us layout active. You can switch to qwerty
//    variant of cz layout by pressing ctrl+shift.
//
// Pitfalls
//
// 1. Many to one mappings
//
// Higher level input method components don't necessarily handle many to
// one mappings correctly. They may assume that there exists only a one
// to one mapping between a hardware key and a symbol. Therefore you
// should take care not to introduce many to one mappings for keys that
// are going to be reverse mapped from a symbol to a hardware key.
//
// Currently at least the modifier keys are affected. Clients may set
// states, such as autorepeat, for hardware keys by reverse mapping a
// modifier symbol to a hardware key and then setting the state for the
// first hardware key that maps to the symbol. The correct way would be
// to modify the state of all hardware keys mapping to a given symbol.
//
// We are nice and keep the mappings one to one for clients that don't
// choose to handle many to one mappings.



default partial alphanumeric_keys
xkb_symbols "common" {
    include "pc(pc105)"
    include "jolla_vndr/sbj(common-keys)"

    // This section should not be included by any other section. It's
    // referenced only once by rule file to allow multiple layout
    // configurations.
};

partial hidden alphanumeric_keys
xkb_symbols "common-keys" {

    // These keycodes are beyond the X11 255 limit value so it would
    // only be valid for the use with SW which supports extended keycodes,
    // like xkbcommon.

    // generated from the headset, must always be in the map.
    key <I264>	{ [	XF86Phone							] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 //
// Keyboard modification for Apple keyboards
//

partial default modifier_keys
xkb_symbols "extended" {

    key <KPEQ> { [ KP_Equal ] }; 

// The key in the PC's Insert position is sometimes engraved Help (at least
// in Switzerland and Great Britain), with Insert sometimes above. But in the
// US and Canada, it remains Insert. So this should probably be an XkbOption,
// but I have to do more research.
// Perhaps Help should be the primary symbol with Insert in the 1st shift-level
//    key  <INS> { [ Help, Insert ] };
// The keys next to F12, labeled F13, F14, & F15 generate codes that XFree86
// claims not to generate. I think they should be equivalent to the PC keys
// Print Screen / SysRq, Scroll Lock, and Pause. Linux kernel bug?
//    key <PRSC> { [ F13 ] }; // should be keycode 93 or
//    key <FK13> { [ F13 ] }; // should be keycode 118
//    key <SCLK> { [ F14 ] }; // should be keycode 123 or
//    key <FK14> { [ F14 ] }; // should be keycode 119
//    key <PAUS> { [ F15 ] }; // should be keycode 127 or
//    key <FK15> { [ F15 ] }; // should be keycode 120
};

partial modifier_keys
xkb_symbols "laptop" {

    include "macintosh_vndr/apple(extended)"

    // The real numlock key on the iBook (shared with F5) works internally to
    // the keyboard. It illuminates the Num_Lock led and locks the fn-key to
    // type only the keypad keys on the letter keys (U=4, I=5, O=6, P=*, etc.).
    // The key in the Num_lock position is engraved with Clear.
    override key <NMLK> { [ Clear ] };
    // The key engraved Delete sends BKSP. To get Delete, use Shift-Delete
    override key <BKSP> { [ BackSpace, Delete ] };
    // These keyboards only generate a <RALT> when pressing fn+Alt. This makes
    // it impossible to get to the third shift level on keys that are on
    // the fn-keypad, so use the Enter key (right of <SPC>) for Mode_switch,
    // and use fn+Enter (Apple's code for Menu) for KP_Enter.
    replace key <KPEN> { [ ISO_Level3_Shift ] };
    modifier_map Mod5  { ISO_Level3_Shift };	
    // Linux kernel bug with Menu on macs means this doesn't work yet
//    replace key <MENU> { [ KP_Enter ] }; // should be keycode 117
};

partial modifier_keys
xkb_symbols "laptop_bad_switch" {
    // Kept for backward compatibility
    include "macintosh_vndr/apple(laptop)"
};

// Long Aluminium Keyboards
partial function_keys
xkb_symbols "alukbd" {
    // The base is a inet PC keyboard
    include "pc"

    // Additional Fxx keys
    key <FK13> { [ F13 ] };
    key <FK14> { [ F14 ] };
    key <FK15> { [ F15 ] };
    key <FK16> { [ F16 ] };
    key <FK17> { [ F17 ] };
    key <FK18> { [ F18 ] };
    key <FK19> { [ F19 ] };

    // On aluminium keyboards, Num_Lock is replace by Clear
    replace key <NMLK> { [ Clear ] };
    // CAPS key is always Caps_Lock, even for JIS keyboards
    replace key <CAPS> { [ Caps_Lock ] };

    // F1..F12 are multimedia keys when used with the 'Fn' key
    // Make those multimedia actions available via ISO_Level3_Shift too,
    // it is useful when the Fn key is remapped to something else (e.g. Insert)
    key <FK01> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86KbdBrightnessDown, NoSymbol, XF86_Switch_VT_1 ]
    };
    key <FK02> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86KbdBrightnessUp, NoSymbol, XF86_Switch_VT_2 ]
    };
    key <FK03> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, NoSymbol, NoSymbol, XF86_Switch_VT_3 ]
    };
    key <FK04> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, NoSymbol, NoSymbol, XF86_Switch_VT_4 ]
    };
    key <FK05> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, NoSymbol, NoSymbol, XF86_Switch_VT_5 ]
    };
    key <FK06> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, NoSymbol, NoSymbol, XF86_Switch_VT_6 ]
    };
    key <FK07> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86AudioPrev, NoSymbol, XF86_Switch_VT_7 ]
    };
    key <FK08> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86AudioPlay, NoSymbol, XF86_Switch_VT_8 ]
    };
    key <FK09> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86AudioNext, NoSymbol, XF86_Switch_VT_9 ]
    };
    key <FK10> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86AudioMute, NoSymbol, XF86_Switch_VT_10 ]
    };
    key <FK11> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86AudioLowerVolume, NoSymbol, XF86_Switch_VT_11 ]
    };
    key <FK12> {
      type= "FOUR_LEVEL_X",
      symbols[Group1]= [ NoSymbol, XF86AudioRaiseVolume, NoSymbol, XF86_Switch_VT_12 ]
    };
};

// Aluminium Keyboard: make F13, F14, F15 PC-ish (Print, Scroll_Lock, Pause)
partial function_keys keypad_keys
xkb_symbols "alupckeys" {
    key <FK13> {
      type= "PC_ALT_LEVEL2",
      symbols[Group1]= [ Print, Sys_Req ]
    };
    key <FK14> { [ Scroll_Lock ] };
    key <FK15> {
      type= "PC_CONTROL_LEVEL2",
      symbols[Group1]= [ Pause, Break ]
    };
    override key <NMLK> { [ Num_Lock, Pointer_EnableKeys ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                //
// 03.01.2003
// Andreas Tobler <a.tobler@schweiz.ch>
// modified for Swiss German Apple Extended Keyboard II

default
partial alphanumeric_keys
xkb_symbols "extended" {
    
    name[Group1]= "Switzerland - German, Mac";

    key <AE01> { [	1,	plus, 		plusminus,	infinity	]	};
    key <AE02> { [	2,	quotedbl, leftdoublequotemark,  rightdoublequotemark ]	};
    key <AE03> { [	3,	asterisk, 	numbersign,	leftcaret	]	};
					// not displayed here
    key <AE04> { [	4,	ccedilla, 	Ccedilla,	slash		]	};
    key <AE05> { [	5,	percent, 	bracketleft			]	};
    key <AE06> { [	6,	ampersand, 	bracketright			]	};
    key <AE07> { [	7,	slash, 		bar,		backslash	]	};
    key <AE08> { [	8,	parenleft, 	braceleft,	Ograve		]	};
    key <AE09> { [	9,	parenright, 	braceright,	Ocircumflex	]	};
    key <AE10> { [	0,	equal, 	notequal,	Uacute			]	};
    key <AE11> { [	apostrophe,	question, 	questiondown, 	NoSymbol ]	};
    key <AE12> { [	dead_circumflex,dead_grave, 	dead_acute,	asciicircum ]	};
    key <AD01> { [	q,	Q, 	oe,		OE			]	};
    key <AD02> { [	w,	W, 	Greek_SIGMA,	Aacute			]	};
    key <AD03> { [ 	e,	E, 	EuroSign,	Ediaeresis		]	};
    key <AD04> { [ 	r,	R, 	registered,	Egrave			]	};
    key <AD05> { [ 	t,	T, 	dagger,		Icircumflex		]	}; 
    key <AD06> { [	z,	Z, 	Greek_OMEGA,	Iacute			]	};
    key <AD07> { [ 	u,	U, 	degree,		Ugrave			]	};
    key <AD08> { [ 	i,	I, 	exclamdown,	idotless		]	};
    key <AD09> { [ 	o,	O, 	oslash,		Ooblique		]	};
    key <AD10> { [ 	p,	P, 	Greek_pi,	Greek_PI		]	};
    key <AD11> { [	udiaeresis,	egrave, 	section,	ydiaeresis ]	};
    key <AD12> { [	dead_diaeresis,	exclam, 	grave,		apostrophe ]	};
    key <AC01> { [ 	a,	A, 	aring,		Aring			]	};
    key <AC02> { [ 	s,	S, 	ssharp, 	NoSymbol		]	}; 
					// ligature fl
    key <AC03> { [ 	d,	D, 	Greek_sigma,	NoSymbol		]	};
			// partialderivative is not available here att
    key <AC04> { [ 	f,	F, 	function,	doubledagger		]	};
    key <AC05> { [ 	g,	G, 	at,		comma			]	};
    key <AC06> { [ 	h,	H, 	ordfeminine,	periodcentered		]	};
    key <AC07> { [ 	j,	J,  	masculine,	eth	 		]	};
    key <AC08> { [ 	k,	K, 	Greek_DELTA,	macron			]	};
    key <AC09> { [ 	l,	L, 	notsign,	caret			]	};
    key <AC10> { [	odiaeresis,	eacute, 	cent,		breve	]	};
    key <AC11> { [	adiaeresis,	agrave, 	ae,		AE	]	};
    key <AB01> { [	y,	Y, 	yen,		Ydiaeresis		]	};
    key <AB02> { [ 	x,	X, 	similarequal,	trademark		]	};
    key <AB03> { [ 	c,	C, 	copyright,	NoSymbol		]	};
    key <AB04> { [ 	v,	V, 	radical,	diamond			]	};
    key <AB05> { [ 	b,	B, 	integral,	NoSymbol		]	};  
    key <AB06> { [ 	n,	N, 	dead_tilde, 	enopencircbullet	]       };
					// to be fixed att
    key <AB07> { [ 	m,	M, 	mu,		dead_abovering		]       };
					// not sure att
    key <AB08> { [	comma,	semicolon, 	guillemotleft,	guillemotright	]	};
    key <AB09> { [	period,	colon, 	ellipsis,	division		]	};
    key <AB10> { [	minus,	underscore, 	hyphen,		emdash		]	};
    key <TLDE> { [	section,	degree,   	NoSymbol, 	NoSymbol ]	};
			// ligature fi	// per mille
    key <SPCE> { [	space, 	nobreakspace,	nobreakspace		]	};
    key <LSGT> { [	less,	greater, 	lessthanequal,	greaterthanequal ]  	};
    key <BKSL> { [	dollar,	sterling, 	paragraph,	enfilledcircbullet ]	};

    include "kpdl(comma)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys 
xkb_symbols "de" {
    include "macintosh_vndr/ch(extended)"
};

partial alphanumeric_keys 
xkb_symbols "fr" {

    include "macintosh_vndr/ch(extended)"
    name[Group1]= "Switzerland - French, Mac";

    override key <AD11> {
	[ egrave,	udiaeresis,  bracketleft	]
    };
    override key <AC10> {
	[ eacute,	odiaeresis	]
    };
    override key <AC11> {
	[ agrave,	adiaeresis,   braceleft		]
    };
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {
    include "macintosh_vndr/ch(fr)" // for consistent naming
};
                                                                                                                                                                                                                                                                         // olh@suse.de   very close to MacOS map

default partial alphanumeric_keys 
xkb_symbols "basic" {

    // Describes the differences between a very simple US/ASCII
    // keyboard and a simple German keyboard.

    include "latin"
    name[Group1]= "Germany - Mac";

    key <TLDE> {	[ dead_circumflex,	degree,    notsign 		]	};
    key <AE01> {	[         1,    exclam,  exclamdown,   at		]	};
    key <AE02> {	[	  2,	quotedbl,  twosuperior			]	};
    key <AE03> {	[	  3,	section,  threesuperior,sterling	]	};
    key <AE04> {	[	  4,	dollar,  onequarter,	currency	]	};
    key <AE05> {	[	  5,	percent,  bracketleft			]	};
    key <AE06> {	[	  6,	ampersand,  bracketright		]	};
    key <AE07> {	[	  7,	slash,        bar,    backslash		]	};
    key <AE08> {	[	  8,	parenleft,  braceleft,    asciitilde	]	};
    key <AE09> {	[	  9,	parenright, braceright			]	};
    key <AE10> {	[	  0,	equal,  braceright,	degree		]	};
    key <AE11> {	[    ssharp,	question,  backslash,	questiondown	]	};
    key <AE12> {	[ dead_acute,	dead_grave,  dead_cedilla		]	};

    key <AD01> {	[	  q,	Q, guillemotleft,guillemotright	]	};
    key <AD03> {	[	  e,	E,   EuroSign			]	};
    key <AD04> {	[         r,    R,  registered			]	};
    key <AD05> {	[	  t,	T		]	};
    key <AD06> {	[	  z,	Z		]	};
    key <AD07> {	[	  u,	U, diaeresis,    Aacute		]	};
    key <AD08> {	[	  i,	I,      slash,    Ucircumflex	]	};
    key <AD09> {	[         o,    O,      oslash,   Ooblique	]	};
    key <AD11> {	[ udiaeresis,	Udiaeresis,  periodcentered, degree	]	};
    key <AD12> {	[      plus,	asterisk,  asciitilde			]	}; 
    key <AC01> {	[         a,    A,      aring,    Aring		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G,  copyright			]	};
    key <AC06> {	[         h,    H,  ordfeminine			]	};
    key <AC09> {	[	  l,    L, 	at			]	};
    key <AC10> {	[ odiaeresis,	Odiaeresis,  dead_acute			]	};
    key <AC11> {	[ adiaeresis,	Adiaeresis,  dead_circumflex		]	};

    key <LSGT> {	[      less,	greater,        bar			]	};
    key <AB01> {	[	  y,	Y,  guillemotleft,less		]	};
    key <AB06> {	[         n,    N, asciitilde			]	};
    key <AB07> {	[	  m,	M, 	 mu			]	};
    key <AB08> {	[     comma,	semicolon	]	};
    key <AB09> {	[    period,	colon,  periodcentered, division	]	};
    key <AB10> {	[     minus,	underscore	]	};
    key <BKSL> {	[ numbersign,	apostrophe,  dead_grave			]	};

    include "kpdl(comma)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys 
xkb_symbols "Sundeadkeys" {
    // modify the default German layout to use Sun dead keys
    include "macintosh_vndr/de(basic)"
    name[Group1]= "Germany - Mac, Sun dead keys";

    key <TLDE> {	[ SunFA_Circum,	degree,      notsign 			]	};
    key <AE12> {	[ SunFA_Acute,	SunFA_Grave, SunFA_Cedilla		]	};
    key <AD11> {	[ udiaeresis,	Udiaeresis,  SunFA_Diaeresis		]	};
    key <AD12> {	[       plus,	asterisk,    SunFA_Tilde,  dead_macron	]	};
    key <AC10> {	[ odiaeresis,	Odiaeresis,  SunFA_Acute		]	};
    key <AC11> {	[ adiaeresis,	Adiaeresis,  SunFA_Circum		]	};

    key <BKSL> {	[ numbersign,	acute,       SunFA_Grave		]	};
};

partial alphanumeric_keys 
xkb_symbols "sundeadkeys" {
    include "macintosh_vndr/de(Sundeadkeys)"
};

partial alphanumeric_keys 
xkb_symbols "nodeadkeys" {
    // modify the default German layout to not have any dead keys
    include "macintosh_vndr/de(basic)"
    name[Group1]= "Germany - Mac, eliminate dead keys";

    key <TLDE> {	[ asciicircum,	degree,    notsign 			]	};
    key <AE12> {	[ acute,	grave,  cedilla				]	};
    key <AD11> {	[ udiaeresis,	Udiaeresis,  diaeresis 			]	};
    key <AD12> {	[      plus,	asterisk,  asciitilde,	macron		]	};
    key <AC10> {	[ odiaeresis,	Odiaeresis,  acute			]	};
    key <AC11> {	[ adiaeresis,	Adiaeresis,  asciicircum		]	};

    key <BKSL> {	[ numbersign,	apostrophe,  grave			]	};
};
                                                                                                                                                                                                                                                             default partial alphanumeric_keys 
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a Danish keyboard with dead key support
    // and all of ISO-8859-1 characters available.

    include "latin"
    name[Group1]= "Denmark - Mac";

    key <TLDE> {	[  onehalf,         section,    threequarters,       paragraph	]};
    key <LSGT> {	[     less,         greater,        backslash,         notsign	]};
    key <SPCE> {	[    space,           space,     nobreakspace,    nobreakspace	]};
    key <AE01> {	[        1,          exclam,       exclamdown,     onesuperior	]};
    key <AE02> {	[        2,        quotedbl,               at,     twosuperior	]};
    key <AE03> {	[        3,      numbersign,         sterling,   threesuperior	]};
    key <AE04> {	[        4,        EuroSign,           dollar,      onequarter	]};
    key <AE05> {	[        5,         percent,         NoSymbol,            cent	]};
    key <AE06> {	[        6,       ampersand,              yen,        NoSymbol	]};
    key <AE07> {	[        7,           slash,        braceleft,        division	]};
    key <AE08> {	[        8,       parenleft,      bracketleft,   guillemotleft	]};
    key <AE09> {	[        9,      parenright,     bracketright,  guillemotright	]};
    key <AE10> {	[        0,           equal,       braceright,          degree	]};
    key <AE11> {	[     plus,        question,        plusminus,    questiondown	]};
    key <AE12> {   	[ dead_acute,    dead_grave,              bar,       brokenbar	]};
    key <AB03> {	[        c,               C,        copyright,        NoSymbol	]};
    key <AB08> {	[    comma,       semicolon,     dead_cedilla,     dead_ogonek	]};
    key <AB09> {	[   period,           colon,   periodcentered,   dead_abovedot	]};
    key <AB10> {	[    minus,      underscore,           hyphen,          macron	]};
    key <AC01> {	[        a,               A,      ordfeminine,       masculine  ]};
    key <AC03> {	[        d,               D,              eth,             ETH  ]};
    key <AC10> {	[	ae,               AE	]};
    key <AC11> {	[   oslash,        Ooblique 	]};
    key <AD03> {	[        e,               E,         EuroSign,            cent  ]};
    key <AD04> {	[        r,               R,       registered,        NoSymbol  ]};
    key <AD05> {	[        t,               T,            thorn,           THORN  ]};
    key <AD08> {	[        i,               I,         NoSymbol,        NoSymbol  ]};
    key <AD09> {	[        o,               O,               oe,              OE  ]};
    key <AD11> {	[    aring,           Aring 	]};
    key <AD12> {	[ dead_diaeresis, dead_circumflex, dead_tilde,      dead_caron	]};
    key <BKSL> {	[ apostrophe,      asterisk, dead_doubleacute,        multiply	]};

    include "eurosign(e)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys 
xkb_symbols "nodeadkeys" {
    include "macintosh_vndr/dk(basic)"
    name[Group1]= "Denmark - Mac, eliminate dead keys";

    key <AE12> {	[           acute,           grave,              bar,          ogonek	]	};
    key <AD12> {	[       diaeresis,     asciicircum,       asciitilde,     dead_macron	]      	};
};

partial alphanumeric_keys
xkb_symbols "macbookpro" {

    include "level3(win_switch)"
    include "macintosh_vndr/dk(basic)"

    name[Group1]= "Denmark - Mac, MacBook Pro";

    key <BKSL>  { [apostrophe, asterisk,        at,        at ] };
    key <TLDE>  { [    dollar,  section,    dollar,    dollar ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     partial default alphanumeric_keys 
xkb_symbols "basic" {
    include "macintosh_vndr/se(basic)" // for consistent naming
    name[Group1]= "Finland - Mac";
};

partial alphanumeric_keys 
xkb_symbols "nodeadkeys" {
    include "macintosh_vndr/se(basic)"	// for consistent naming
    name[Group1]= "Finland - Mac, eliminate dead keys";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               // Marc.Shapiro@inria.fr 19-sep-1998
// modifications : Etienne Herlent <eherlent@linux-france.org> june 2000
// adapted to the new input layer :
//        Martin Costabel <costabel@wanadoo.fr> 3-jan-2001
//////////////////////////////////////////////////////////////////
// Petites Modification le juillet 2005 par Bin Zhang <bb.zhang@free.fr> : 
// 1) La ligne 83 : remplacer les deux "VoidSymbol" par oe et OE 
// 2) La ligne 89 : remplacer "VoidSymbol" par "EuroSign"
// ( 1) et 2) fonctionnent sous UTF-8, mais pas sous iso-8859-1. )
// 3) Remplacer la ligne 148 par la ligne 149 pour que la touche Alt_L
// (la touche Apple-Pomme) fonctionne correctement sous Xorg, une idÃ©e
// motivÃ©e par http://www.linux-france.org/macintosh/clavier_gentoo.html
//////////////////////////////////////////////////////////////////
// This map is an almost-complete mapping of the standard French
// MacIntosh keyboard under Xwindows.  I tried to remain as faithful
// as possible to the Mac meaning of each key.	I did this entirely by
// hand and by intuition, relying on the Clavier (Keyboard?) Desktop
// Accessory for the Mac meaning of keys, and on reading keysymdef.h
// to intuit the corresponding X names.	 Lacking proper documentation,
// I may have made some mistakes.

// Entries marked CHECK are particularly uncertain

// Entries marked MISSING mark Mac characters for which I was unable
// to find a corresponding keysym.  (Some for sure don't: e.g. the
// Apple mark and the oe/OE character; others I may have simply not
// found.)

default
xkb_symbols "extended" {

    name[Group1]= "France - Mac";

    key <ESC>  {	[ Escape			]	};

    key <TLDE> {	[	   at,	  numbersign,	periodcentered,  	Ydiaeresis	]	};
    key <ENTR> {        [    KP_Enter                   ]       };
    key <AE01> {	[   ampersand,	  1,	  	VoidSymbol,	  	dead_acute	]	}; // MISSING: Apple
    key <AE02> {	[      eacute,	  2,		ediaeresis,	  	Eacute	]	};
    key <AE03> {	[    quotedbl,	  3,		leftdoublequotemark, 	rightdoublequotemark	] 	};
    key <AE04> {	[  apostrophe,	  4,		leftsinglequotemark, 	rightsinglequotemark	] 	};
    key <AE05> {	[   parenleft,	  5,		braceleft,	  	bracketleft	]	};
    key <AE06> {	[     section,	  6,		paragraph,	  	aring		]	};
    key <AE07> {	[      egrave,	  7,		guillemotleft,	  	guillemotright]	};
    key <AE08> {	[      exclam,	  8,		exclamdown,	  	Ucircumflex	]	};
    key <AE09> {	[    ccedilla,	  9,		Ccedilla,	  	Aacute	]	};
    key <AE10> {	[      agrave,	  0,		oslash,	  		Oslash	]	};
    key <AE11> {	[  parenright,	  degree,	braceright,	  	bracketright	]	};
    key <AE12> {	[	minus,	  underscore,	emdash,	  		endash	]	};
    key <BKSP> {	[   BackSpace,    VoidSymbol,	Delete,	  		VoidSymbol	]	};

    key	 <TAB> {	[	  Tab,	ISO_Left_Tab	]	};
    key <AD01> {	[	    a,	A,		ae,			AE		]	};
    key <AD02> {	[	    z,	Z,		Acircumflex,		Aring		]	};
    key <AD03> {	[	    e,	E,		ecircumflex,		Ecircumflex	]	};
    key <AD04> {	[	    r,	R,		registered,		currency	]	};
    key <AD05> {	[	    t,	T,		dagger,			trademark	]	};
    key <AD06> {	[	    y,	Y,		Uacute,  		Ydiaeresis	]	};
    key <AD07> {	[	    u,	U,		masculine,		ordfeminine	]	};
    key <AD08> {	[	    i,	I,		icircumflex,		idiaeresis	]	};
    key <AD09> {	[	    o,	O,		oe,			OE		]	};
    key <AD10> {	[	    p,	P,		Greek_pi,  		Greek_PI	]	};
    key <AD11> {	[dead_circumflex,dead_diaeresis,ocircumflex, 		Ocircumflex	]	};
    key <AD12> {	[      dollar,	asterisk,	EuroSign,  		yen   	        ]	};
    key <CAPS> {	[	Caps_Lock		]	};
    key <AC01> {	[	  q,	Q,		doubledagger,		Greek_OMEGA	]	};
    key <AC02> {	[	  s,	S,		Ograve,			Greek_SIGMA	]	};
    key <AC03> {	[         d,	D,		Greek_delta,		Greek_DELTA	]	};
    key <AC04> {	[	  f,	F,		VoidSymbol,		periodcentered	]	};
    key <AC05> {	[	  g,	G,		VoidSymbol,		VoidSymbol	]	}; // MISSING: ligature fi,fl
    key <AC06> {	[	  h,	H,		Igrave,			Icircumflex	]	};
    key <AC07> {	[	  j,	J,		Idiaeresis,		Iacute		]	};
    key <AC08> {	[	  k,	K,		Egrave,			Ediaeresis	]	};
    key <AC09> {	[	  l,	L,		notsign,		bar		]	};
    key <AC10> {	[	  m,	M,		mu,			Oacute		]	};
    key <AC11> {	[    ugrave,	percent,	Ugrave,			0x1002030	]	};
    key <BKSL> {	[ dead_grave,	sterling,	at,			numbersign	]	};
    key <RTRN> {	[    Return			]	};

    key <LSGT> {	[	 less,	  greater,	lessthanequal,		greaterthanequal	]	};
    key <AB01> {	[	  w,	W,		guilsinglleft,		guilsinglright	]	}; // MISSING: half-guillemot (single angle bracket)
    key <AB02> {	[	  x,	X,		VoidSymbol,		VoidSymbol	]	}; // CHECK: similarequal; MISSING: extra-slanted slash
    key <AB03> {	[	  c,	C,		copyright,		cent		]	};
    key <AB04> {	[	  v,	V,		diamond,		radical		]	}; // CHECK diamond
    key <AB05> {	[	  b,	B,		ssharp,    		integral	]	};
    key <AB06> {	[	  n,	N,		dead_tilde,		asciitilde	]	};
    key <AB07> {	[     comma,	question,	infinity,		questiondown	]	};
    key <AB08> {	[ semicolon,	period,		ellipsis,		periodcentered	]	};
    key <AB09> {	[     colon,	slash,		division,		backslash	]	};
    key <AB10> {	[     equal,	plus,		notequal,		plusminus	]	};

    key <SPCE> {	[     space,	space,		nobreakspace,		nobreakspace	]	};

    include "level3(ralt_switch)"
};



xkb_symbols "nodeadkeys" {
include "macintosh_vndr/fr(extended)"
    name[Group1]= "France - Mac, eliminate dead keys";
    
    key <AE01> {	[   ampersand,	  1,	  	VoidSymbol,	  	acute	]	}; // MISSING: Apple
    key <AD11> {	[asciicircum,diaeresis,ocircumflex, 		Ocircumflex	]	};
    key <BKSL> {	[ grave,	sterling,	at,			numbersign	]	};

    key <AB06> {	[	  n,	N,		asciitilde,		dead_tilde	]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           partial default alphanumeric_keys 
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple U.K. keyboard layout

    include "macintosh_vndr/us"

    name[Group1]= "United Kingdom - Mac";

    key <AE02> {	[               2,              at,         EuroSign	]	};
    key <AE03> {	[               3,        sterling,       numbersign	]	};
    key <TLDE> {	[         section,       plusminus ]	};
    key <LSGT> {	[           grave,      asciitilde ]	};
    
    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   default
xkb_symbols "extended" {

    name[Group1]= "Italy - Mac";

    key <LSGT> {	[        less,  greater   	]	};
    key <TLDE> {        [        at,    numbersign,    periodcentered              ]	};
    key <AE01> {	[   ampersand,    1, guillemotleft,guillemotright	]	};
    key <AE02> {	[    quotedbl,    2 		]	};
    key <AE03> {	[  apostrophe,    3         	]	};
    key <AE04> {	[   parenleft,    4,    braceleft,    bracketleft	]	};
    key <AE05> {	[    ccedilla,    5,     Ccedilla,    Iacute	]	};
    key <AE06> {	[      egrave,    6,    paragraph,    periodcentered]	};
    key <AE07> {	[  parenright,    7,   braceright,	  bracketright	]	};
    key <AE08> {	[    sterling,    8,   infinity			]	};
    key <AE09> {	[      agrave,    9,        acute,    Ocircumflex	]	};
    key <AE10> {	[      eacute,    0,        grave,    Oacute	]	};
    key <AE11> {	[       minus,    underscore	]	};
    key <AE12> {	[       equal, 	  plus,     notequal,    plusminus	]	};

    key <AD01> {	[           q,  Q 		]	};
    key <AD02> {	[	    z,  Z		]	};
    key <AD03> {	[	    e,  E,     EuroSign		]	};
    key <AD04> {	[	    r,  R,   registered			] 	};
    key <AD05> {	[	    t,  T		]	};
    key <AD06> {	[	    y,  Y,       Uacute,	ydiaeresis      ] 	};
    key <AD07> {	[	    u,  U		]	};
    key <AD08> {	[	    i,  I,  icircumflex,	idiaeresis      ] 	};
    key <AD09> {	[	    o,  O		]	};
    key <AD10> {	[	    p,  P		]	};
    key <AD11> {	[      igrave,  asciicircum     ]	};
    key <AD12> {	[      dollar,	asterisk        ]	};
    key <BKSL> {	[     section,  degree,           at,  numbersign      ]	};

    key <AC01> {	[	  a,	A,      aring,   Aring		] 	};
    key <AC02> {	[	  s,	S,     ssharp			]	};
    key <AC03> {	[	  d,	D		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H,     Igrave,    Icircumflex     ]	};
    key <AC07> {	[	  j,	J,  Idiaeresis,   Iacute          ]	};
    key <AC08> {	[	  k,	K,     Egrave,    Ediaeresis      ]	};
    key <AC09> {	[	  l,	L,     ssharp,    bar		]	};
    key <AC10> {	[         m,	M,         mu,    Oacute		]	};
    key <AC11> {	[    ugrave,	percent,         ae,    AE		]	};

    key <AB01> {	[	  w,	W 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C,  copyright,    copyright	]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N,  dead_tilde                    ]       };
    key <AB07> {	[     comma,	question,          questiondown		]	};
    key <AB08> {	[ semicolon,	period          ]	};
    key <AB09> {	[     colon,	slash,        bar,    backslash	]	};
    key <AB10> {	[    ograve,	exclam,     exclamdown			]	};

    include "kpdl(dot)"
    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 //
// This file describes the differences between a Macintosh US Extended
// keymap and an Icelandic keyboard layout in the style of Mac OS and Mac OS X
//
// Copyright (C) 2004, 2006 Ãvar ArnfjÃ¶rÃ° Bjarmason <avarab@gmail.com>
//
// Permission to use, copy, modify, distribute, and sell this software and its
// documentation for any purpose is hereby granted without fee, provided that
// the above copyright notice appear in all copies and that both that
// copyright notice and this permission notice appear in supporting
// documentation.
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
// OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//
// Except as contained in this notice, the name of a copyright holder shall
// not be used in advertising or otherwise to promote the sale, use or
// other dealings in this Software without prior written authorization of
// the copyright holder.
//
// = HISTORY
// * 2004-09-28:
//   Initial cleanroom writing of the keymap, I just booted Mac OS X, opened
//   TextEdit.app and wrote down what the value produced by each key was when I
//   pressed it, a for a, A for shift + a, Ã¥ for lalt + a etc and made the
//   keymap from that information
//
// * 2006-01-14:
//   Revised the comments in the file
//
// = NOTES
// * 20 characters in this keymap have no named character defined in
//   include/keysymdef.h and as a result their Unicode code points in
//   hexadecimal are listed here, these can be generated with the following
//   perl command:
//     $ perl -CA -e 'printf "U%x\n", ord shift' Ã
//   and converted back like:
//     $ perl -CO -le '$_=shift;s/[^a-f0-9]//ig;print chr hex' Uc6
// * The Apple logo appears twice on this keymap like the Mac OS and Mac OS X
//   keymaps. In the MacRoman encoding it has the code point 0xF0 (240) but it
//   has no assigned code point in Unicode, the code point Apple uses for it is
//   U+F8FF (63743) which is in the BMP's Private Use Area (U+E000âU+F8FF)
// * This keymap has only been tested on a PowerBook6,5 (iBook G4) but it
//   should work on other Apple laptop models which use the same keyboard
//   layout. It will probably work on standard sized keyboards with little or
//   no modification but it might not support them fully, please report if
//   you're able to get it running with such a keyboard

partial default alphanumeric_keys
xkb_symbols "basic" {
    name[Group1]= "Iceland - Mac";

	//-- Row 5 (E) --//
	key <TLDE> {	[	sterling,	section, 	UF8FF,		apostrophe	]	};
	key <AE01> {	[	1,		exclam, 	exclamdown,	VoidSymbol	]	};
	key <AE02> {	[	2,		quotedbl, 	at,		VoidSymbol	]	};
	key <AE03> {	[	3,		numbersign, 	U2122,		sterling	]	};
	key <AE04> {	[	4,		dollar, 	U00A2,		EuroSign	]	};
	key <AE05> {	[	5,		percent, 	U2030,		infinity	]	};
	key <AE06> {	[	6,		ampersand, 	asciicircum,	U2044		]	};
	key <AE07> {	[	7,		slash, 	backslash,	U00F7		]	};
	key <AE08> {	[	8,		parenleft, 	bracketleft,	braceleft	]	};
	key <AE09> {	[	9,		parenright, 	bracketright,	braceright	]	};
	key <AE10> {	[	0,		equal, 	U2260,		U2248		]	};
	key <AE11> {	[	odiaeresis,	Odiaeresis, 	oslash,		Ooblique	]	};
	key <AE12> {	[	minus,		underscore, 	endash,		emdash		]	};

	
	//-- Row 4 (D) --//
	key <AD01> {	[	q,		Q, 	paragraph,	VoidSymbol	]	};
	key <AD02> {	[	w,		W, 	U2211,		VoidSymbol	]	};
	key <AD03> {	[	e,		E, 	dead_grave,	VoidSymbol	]	};
	key <AD04> {	[	r,		R, 	registered,	VoidSymbol	]	};
	key <AD05> {	[	t,		T, 	degree,		VoidSymbol	]	};
	key <AD06> {	[	y,		Y, 	yen,		VoidSymbol	]	};
	key <AD07> {	[	u,		U, 	dead_diaeresis,	VoidSymbol	]	};
	key <AD08> {	[	i,		I, 	U0131,		U00AA		]	};
	key <AD09> {	[	o,		O, 	dead_circumflex,U00BA		]	};
	key <AD10> {	[	p,		P, 	Greek_pi,	Greek_PI	]	};
	key <AD11> {	[	eth,		Eth, 	U201e,		U201c		]	};
	key <AD12> {	[	apostrophe,	question, 	questiondown,	U00B7		]	};
	
	
	//-- Row 3 (C) --//
	key <AC01> {	[	a,		A, 	aring,		Aring		]	};
	key <AC02> {	[	s,		S, 	ssharp,		abovedot	]	};
	key <AC03> {	[	d,		D, 	U2202,		U2DA		]	};
	key <AC04> {	[	f,		F, 	U192,		macron		]	};
	key <AC05> {	[	g,		G, 	copyright,	breve		]	};
	key <AC06> {	[	h,		H, 	bar,		VoidSymbol	]	};
	key <AC07> {	[	j,		J, 	U2206,		U2dd		]	};
	key <AC08> {	[	k,		K, 	U00AC,		VoidSymbol	]	};
	key <AC09> {	[	l,		L, 	U2026,		caron		]	};
	key <AC10> {	[	ae,		AE, 	oe,		OE		]	};
	key <AC11> {	[	dead_acute,	dead_diaeresis, 	U201A,		U2018		]	};
	key <BKSL> {	[	plus,		asterisk, 	U2022,		plusminus	]	};
	
	
	//-- Row 2  (B) --//
	key <LSGT> {	[	less,		greater, 	section,	UF8FF		]	};
	key <AB01> {	[	z,		Z, 	U3A9,		VoidSymbol	]	};
	key <AB02> {	[	x,		X, 	asciitilde,	VoidSymbol	]	};
	key <AB03> {	[	c,		C, 	ccedilla,	Ccedilla	]	};
	key <AB04> {	[	v,		V, 	U221A,		U25CA		]	};
	key <AB05> {	[	b,		B, 	U222B,		VoidSymbol	]	};
	key <AB06> {	[	n,		N, 	dead_tilde,	VoidSymbol	]	};
	key <AB07> {	[	m,		M, 	U00B5,		VoidSymbol	]	};
	key <AB08> {	[	comma,		semicolon, 	lessthanequal,	guillemotleft	]	};
	key <AB09> {	[	period,		colon, 	greaterthanequal,guillemotright	]	};
	key <AB10> {	[	thorn,		Thorn, 	U2019,		U201d		]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {
    include	"macintosh_vndr/is(basic)" // for consistent naming
    name[Group1]= "Iceland - Mac, eliminate dead keys";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       // JIS symbol mapping for Apple Aluminium Keyboard
// (Damien Ciabrini <damien.ciabrini@gmail.com>)
//
// The JIS version of the Aluminium Keyboard is made of
//   QWERTY-like map for the latin part
//   PC98-like map for the kana part
//   EISU and KANA keys found on other Apple keyboards

partial default alphanumeric_keys
xkb_symbols "usmac" {
    name[Group1]	= "Japan - Macintosh, US map";
    include "jp(common)"

    key <JPCM> { [ KP_Separator ] };
    key <AE13> { [ yen, bar 	] };
    replace key <AE10> { [ 0		] };
    replace key <AB11> { [ underscore	] };
    replace key <CAPS> { [ Caps_Lock ] };
};

partial alphanumeric_keys
xkb_symbols "mac" {
    name[Group1]	= "Japan - Macintosh";
    include "jp(kana)"

    replace key <CAPS> { [ Caps_Lock ] };
};

partial alphanumeric_keys
xkb_symbols "alujiskeys" {
    // On JIS USB keyboard, EISU and KANA replace Hangul and Hanja
    // see keycodes macintosh(jisevdev)
    replace key <HJCV> { [ Hiragana_Katakana ] };
    replace key <HNGL> { [ Eisu_toggle ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          partial default alphanumeric_keys 
xkb_symbols "basic" {

    // Describes the differences between a very simple mac_US
    // keyboard and a very simple Spanish keyboard.

    include "latin"
    name[Group1]= "Latin American - Mac";

    key <TLDE> {	[     bracketleft,    bracketright,        braceleft,      braceright	]	};
    key <LSGT> {	[            less,         greater,      bracketleft,       braceleft	]	};
    key <AE01> {	[               1,      exclamdown 	]	};
    key <AE02> {	[               2,          exclam,               at,       oneeighth	]	};
    key <AE03> {	[               3,      numbersign,    guillemotleft,  guillemotright	]	};
    key <AE04> {	[               4,          dollar,              yen,     Icircumflex	]	};
    key <AE05> {	[               5,         percent	]	};
    key <AE06> {	[               6,           slash,        backslash,      Idiaeresis	]	};
    key <AE07> {	[               7,       ampersand,              bar,          Iacute	]	};
    key <AE08> {	[               8,        asterisk,           degree	]	};
    key <AE09> {	[               9,       parenleft,         sterling,     Ocircumflex	]	};
    key <AE10> {	[               0,      parenright     	]	};
    key <AE11> {	[           minus,      underscore	]	};
    key <AE12> {	[           equal,            plus,        plusminus	]	};
    key <AD11> {	[      dead_grave,          degree 	]	};
    key <AD12> {	[      dead_acute,  dead_diaeresis,              bar	]	};

    key <AB08> {	[           comma,    questiondown   	]	};
    key <AB09> {	[          period,        question     	]	};
    key <AB10> {	[        ccedilla,        Ccedilla     	]	};
    key	<AC10> {	[	   ntilde,          Ntilde,       asciitilde, dead_doubleacute	]	};
    key <AC11> {	[       semicolon,    	     colon 	]	};
    key <BKSL> {	[      apostrophe,        quotedbl	]	};

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       partial default alphanumeric_keys 
xkb_symbols "basic" {

    include "latin"

    name[Group1]= "Netherlands - Mac";

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    partial default alphanumeric_keys 
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple Norwegian keyboard.

    include "latin"

    name[Group1]= "Norway - Mac";

    key <TLDE> {	[             bar,         section      ]	};
    key <AE02> {	[               2,        quotedbl, 	       at,	 oneeighth	]	};
    key <AE03> {	[               3,	numbersign,      sterling,        sterling	]	};
    key <AE04> {	[	        4,        currency, 	   dollar,	    dollar	]	};
    key <AE06> {	[               6,       ampersand     	]	};
    key <AE07> {	[               7,           slash, 	      bar,       backslash	]  	};
    key <AE08> {	[               8,       parenleft,   bracketleft,	 braceleft	]	};
    key <AE09> {	[               9,      parenright,  bracketright,	braceright	]	};
    key <AE10> {	[               0,           equal     	]	};
    key <AE11> {	[            plus,        question      ]	};
    key <AE12> {	[      dead_grave,      dead_acute, 	    acute,     dead_ogonek 	]	};

    key <AB08> {	[           comma,       semicolon     	]	};
    key <AB09> {	[          period,           colon     	]	};
    key <AB10> {	[           minus,      underscore     	]	};
    key <AC10> {	[	   oslash,        Ooblique,       odiaeresis,   Odiaeresis	]	};
    key <AC11> {	[              ae,              AE 	]	};
    key <AD11> {	[	    aring,           Aring     	]	};
    key <AD12> {	[       diaeresis,     asciicircum,       asciitilde,  dead_macron     	]      	};
    key <BKSL> {	[              at,        asterisk	]	};
    key <LSGT> {	[            less,         greater	]	};

    include "eurosign(e)"
    include "level3(ralt_switch)"
};


partial alphanumeric_keys 
xkb_symbols "nodeadkeys" {

    // Modifies the basic Norwegian layout to eliminate dead keys
    include "macintosh_vndr/no(basic)"
    name[Group1]= "Norway - Mac, eliminate dead keys";

    key <AE12> {	[           grave,           acute, 	    acute,          ogonek 	]	};
    key <AD12> {	[       diaeresis,     asciicircum,    asciitilde,          macron     	]      	};

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            // mac version from Ricardo Cabral <bfe00991@mail.telepac.pt>

partial default alphanumeric_keys 
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple Portuguese keyboard.

    include "latin"

    name[Group1]= "Portugal - Mac";

    key <LSGT> {	[	     less,	   greater, 	      bar,       brokenbar	]	};
    key <AE02> {	[               2,	  quotedbl, 	       at,       oneeighth	]	};
    key <AE03> {	[               3,	numbersign,      sterling,        sterling     	]	};
    key <AE04> {	[               4,	    dollar,       section,          dollar	]	};
    key <AE06> {	[               6,       ampersand     	]	};
    key <AE07> {	[               7,           slash     	]	};
    key <AE08> {	[               8,       parenleft,      bracketleft,       braceleft     	]	};
    key <AE09> {	[               9,      parenright,     bracketright,      braceright     	]	};
    key <AE10> {	[               0,           equal      ]	};
    key <AE11> {	[      apostrophe,        question      ]	};
    key <AE12> {	[	     plus,        asterisk,             dead_diaeresis             ]	};
    key <AB08> {	[           comma,       semicolon     	]	};
    key <AB09> {	[          period,           colon      ]	};
    key <AB10> {	[           minus,      underscore      ]	};
    key <AC10> {	[        ccedilla,        Ccedilla      ]	};
    key <AC11> {	[      dead_tilde, dead_circumflex	]	};
    key <AC12> {	[       backslash,	       bar     	]	};
    key <AD11> {	[       masculine,     ordfeminine      ]	};
    key <AD12> {	[      dead_acute,      dead_grave 	]	};

    include "eurosign(e)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys 
xkb_symbols "Sundeadkeys" {
    include "macintosh_vndr/pt(basic)" // for consistent naming
    name[Group1]= "Portugal - Mac, Sun dead keys";
    
    key <AE12> {	[	     plus,        asterisk,  SunFA_Diaeresis, SunFA_Diaeresis      ]	};
    key <AC11> {	[     SunFA_Tilde,    SunFA_Circum	]	};
    key <AD12> {	[     SunFA_Acute,     SunFA_Grave 	]	};
};

partial alphanumeric_keys 
xkb_symbols "sundeadkeys" {
    include "macintosh_vndr/pt(Sundeadkeys)" // for consistent naming
};

partial alphanumeric_keys 
xkb_symbols "nodeadkeys" {
    include "macintosh_vndr/pt(basic)" // for consistent naming
    name[Group1]= "Portugal - Mac, eliminate dead keys";

    key <AE12> {	[	     plus,        asterisk, 	 quotedbl,        quotedbl      ]	};
    key <AC11> {	[      asciitilde,     asciicircum	]	};
    key <AD12> {	[	    acute,           grave 	]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                partial default alphanumeric_keys 
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple Swedish(Sweden) keyboard.

    include "latin"

    name[Group1]= "Sweden - Mac";

    key <TLDE> {	[         section,         degree	]	};

    key <AE01> {	[               1,          exclam,        copyright,      exclamdown	]	};
    key <AE02> {	[               2,        quotedbl,               at,       oneeighth	]	};
    key <AE03> {	[               3,      numbersign,         sterling,             yen	]	};
    key <AE04> {	[               4,        currency, 	      dollar,	         cent	]	};
    key <AE06> {	[               6,       ampersand     	]	};
    key <AE07> {	[               7,           slash, 	         bar,       backslash	]	};
    key <AE08> {	[               8,       parenleft,      bracketleft,       braceleft	]	};
    key <AE09> {	[               9,      parenright,     bracketright,      braceright	]	};
    key <AB08> {	[           comma,       semicolon     	]	};
    key <AE10> {	[               0,           equal     	]	};
    key <AE11> {	[            plus,        question      ]	};
    key <AE12> {	[           acute,           grave	]	};
    key <AB09> {	[          period,           colon     	]	};
    key <AB10> {	[           minus,      underscore     	]	};
    key <AC10> {	[      odiaeresis,      Odiaeresis, 	   oslash,	     Ooblique	]	};
    key <AC11> {	[      adiaeresis,      Adiaeresis,            ae,		   AE	]	};
    key <AD11> {	[	    aring,           Aring     	]	};
    key <AD12> {	[       diaeresis,     asciicircum, 	asciitilde			]	};
    key <BKSL> {	[      apostrophe,        asterisk,            at			]	};
    key <LSGT> {	[            less,         greater,           bar,       brokenbar      ]       };

    include "kpdl(comma)"
    include "eurosign(e)"
    include "level3(ralt_switch)"
};


partial alphanumeric_keys 
xkb_symbols "nodeadkeys" {
    include "macintosh_vndr/se(basic)" // for consistent naming
    name[Group1]= "Sweden - Mac, eliminate dead keys";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // symbols definition for a Macintosh "Extended" keyboard

default xkb_symbols "extended" {

    name[Group1]= "USA";
    key <ESC>  {	[ Escape			]	};

    key <TLDE> {	[     grave,	asciitilde	]	};
    key <AE01> {	[	  1,	exclam 		]	};
    key <AE02> {	[	  2,	at		]	};
    key <AE03> {	[	  3,	numbersign	]	};
    key <AE04> {	[	  4,	dollar		]	};
    key <AE05> {	[	  5,	percent		]	};
    key <AE06> {	[	  6,	asciicircum	]	};
    key <AE07> {	[	  7,	ampersand	]	};
    key <AE08> {	[	  8,	asterisk	]	};
    key <AE09> {	[	  9,	parenleft	]	};
    key <AE10> {	[	  0,	parenright	]	};
    key <AE11> {	[     minus,	underscore	]	};
    key <AE12> {	[     equal,	plus		]	};

    key <AD01> {	[	  q,	Q 		]	};
    key <AD02> {	[	  w,	W		]	};
    key <AD03> {	[	  e,	E		]	};
    key <AD04> {	[	  r,	R		]	};
    key <AD05> {	[	  t,	T		]	};
    key <AD06> {	[	  y,	Y		]	};
    key <AD07> {	[	  u,	U		]	};
    key <AD08> {	[	  i,	I		]	};
    key <AD09> {	[	  o,	O		]	};
    key <AD10> {	[	  p,	P		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};
    key <BKSL> {	[ backslash,	bar		]	};

    key <AC01> {	[	  a,	A 		]	};
    key <AC02> {	[	  s,	S		]	};
    key <AC03> {	[	  d,	D		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H		]	};
    key <AC07> {	[	  j,	J		]	};
    key <AC08> {	[	  k,	K		]	};
    key <AC09> {	[	  l,	L		]	};
    key <AC10> {	[ semicolon,	colon		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};

    key <AB01> {	[	  z,	Z 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C		]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N		]	};
    key <AB07> {	[	  m,	M		]	};
    key <AB08> {	[     comma,	less		]	};
    key <AB09> {	[    period,	greater		]	};
    key <AB10> {	[     slash,	question	]	};

    key <SPCE> {	[  space			]	};

    include "eurosign(e)"
    include "keypad(overlay)"

    key <KPEQ> {	[  equal			]	};
};

hidden
xkb_symbols "oldmac" {

    include "macintosh_vndr/us(extended)"

    // Begin "Function" section
    key <FK01> {	[  F1		]	};
    key <FK02> {	[  F2		]	};
    key <FK03> {	[  F3		]	};
    key <FK04> {	[  F4		]	};
    key <FK05> {	[  F5		]	};
    key <FK06> {	[  F6		]	};
    key <FK07> {	[  F7		]	};
    key <FK08> {	[  F8		]	};
    key <FK09> {	[  F9		]	};
    key <FK10> {	[  F10		]	};
    key <FK11> {	[  F11		]	};
    key <FK12> {	[  F12		]	};
    key <FK13> {	[  Print	]	};
    key <FK14> {	[  Scroll_Lock	]	};
    key <FK15> {	[  Pause	]	};
    // End "Function" section

    // Begin "Editing" section
    key  <INS> {	[  Insert	]	};
    key <HOME> {	[  Home		]	};
    key <PGUP> {	[  Prior	]	};
    key <DELE> {	[  Delete	]	};
    key  <END> {	[  End		]	};
    key <PGDN> {	[  Next		]	};

    key   <UP> {	[  Up		]	};
    key <LEFT> {	[  Left		]	};
    key <DOWN> {	[  Down		]	};
    key <RGHT> {	[  Right	]	};
    // End "Editing" section

    key <BKSP> {	[ BackSpace	]	};
    key  <TAB> {	[ Tab,	ISO_Left_Tab ]	};
    key <RTRN> {	[ Return	]	};
    key <CAPS> {	[ Caps_Lock	]	};
    key <NMLK> {	[ Num_Lock, Pointer_EnableKeys ] };

    // Begin "Modifier" section
    key <LFSH> {	[  Shift_L	]	};
    key <RTSH> {	[  Shift_R	]	};
    key <LCTL> {	[  Control_L	]	};
    key <RCTL> {	[  Control_R	]	};
    key <LALT> {	[  Alt_L, Meta_L ]	};
    key <RALT> {	[  Alt_R, Meta_R ]	};
    key <LWIN> {	[  Super_L	]	};
    key <RWIN> {	[  Super_R	]	};
    // End "Modifier" section

    // begin modifier mappings
    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L, Control_R };
    modifier_map Mod2   { Num_Lock };

    //  Fake keys for virtual<->real modifiers mapping 
    key <LVL3> {	[ ISO_Level3_Shift	]	};
    key <MDSW> {	[ Mode_switch 		]	};
    modifier_map Mod5   { <LVL3>, <MDSW> };

    key <ALT>  {	[ NoSymbol, Alt_L	]	};
    modifier_map Mod1   { <ALT>, <LALT> };

    key <META> {	[ NoSymbol, Meta_L	]	};
    modifier_map Mod1   { <META> };

    key <SUPR> {	[ NoSymbol, Super_L	]	};
    modifier_map Mod4   { <SUPR> };

    key <HYPR> {	[ NoSymbol, Hyper_L	]	};
    modifier_map Mod4   { <HYPR> };
    // end modifier mappings

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    //
//Copyright 1996, 1998  The Open Group
//
//Permission to use, copy, modify, distribute, and sell this software and its
//documentation for any purpose is hereby granted without fee, provided that
//the above copyright notice appear in all copies and that both that
//copyright notice and this permission notice appear in supporting
//documentation.
//
//The above copyright notice and this permission notice shall be
//included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
//OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of The Open Group shall
//not be used in advertising or otherwise to promote the sale, use or
//other dealings in this Software without prior written authorization
//from The Open Group.
//
// symbols for a NEC PC98 keyboard
default xkb_symbols "pc98" {

    key <ESC>  { [ Escape		]	};

    // Alphanumeric section
    key <AE01> { [ 1, exclam 		], [ kana_NU		]	};
    key <AE02> { [ 2, quotedbl		], [ kana_FU		]	};
    key <AE03> { [ 3, numbersign	], [ kana_A, kana_a	]	};
    key <AE04> { [ 4, dollar		], [ kana_U, kana_u	]	};
    key <AE05> { [ 5, percent		], [ kana_E, kana_e	]	};
    key <AE06> { [ 6, ampersand		], [ kana_O, kana_o	]	};
    key <AE07> { [ 7, apostrophe	], [ kana_YA, kana_ya	]	};
    key <AE08> { [ 8, parenleft		], [ kana_YU, kana_yu	]	};
    key <AE09> { [ 9, parenright	], [ kana_YO, kana_yo	]	};
    key <AE10> { [ 0 			], [ kana_WA, kana_WO	]	};
    key <AE11> { [ minus, equal		], [ kana_HO		]	};
    key <AE12> { [ asciicircum, grave 	], [ kana_HE		]	};
    key <BKSL> { [ backslash, bar 	], [ prolongedsound	]	};
    key <BKSP> { [ BackSpace		]	};

    key  <TAB> { [ Tab,	ISO_Left_Tab	]	};
    key <AD01> { [ q, Q 		], [ kana_TA		]	};
    key <AD02> { [ w, W			], [ kana_TE		]	};
    key <AD03> { [ e, E			], [ kana_I, kana_i	]	};
    key <AD04> { [ r, R			], [ kana_SU		]	};
    key <AD05> { [ t, T			], [ kana_KA		]	};
    key <AD06> { [ y, Y			], [ kana_N		]	};
    key <AD07> { [ u, U			], [ kana_NA		]	};
    key <AD08> { [ i, I			], [ kana_NI		]	};
    key <AD09> { [ o, O			], [ kana_RA		]	};
    key <AD10> { [ p, P			], [ kana_SE		]	};
    key <AD11> { [ at, asciitilde	], [ voicedsound	]	};
    key <AD12> { [ bracketleft,	braceleft ], [ semivoicedsound, kana_openingbracket ] };
    key <RTRN> { [ Return		]	};

    key <LCTL> { [ Control_L		]	};
    key <CAPS> { [ Caps_Lock		]	};
    key <AC01> { [ a, A 		], [ kana_CHI		]	};
    key <AC02> { [ s, S			], [ kana_TO		]	};
    key <AC03> { [ d, D			], [ kana_SHI		]	};
    key <AC04> { [ f, F			], [ kana_HA		]	};
    key <AC05> { [ g, G			], [ kana_KI		]	};
    key <AC06> { [ h, H			], [ kana_KU		]	};
    key <AC07> { [ j, J			], [ kana_MA		]	};
    key <AC08> { [ k, K			], [ kana_NO		]	};
    key <AC09> { [ l, L			], [ kana_RI		]	};
    key <AC10> { [ semicolon, plus	], [ kana_RE		]	};
    key <AC11> { [ colon, asterisk	], [ kana_KE		]	};
    key <AC12> { [ bracketright, braceright ], [ kana_MU, kana_closingbracket ] };

    key <LFSH> { [ Shift_L		]	};
    key <AB01> { [ z, Z 		], [ kana_TSU, kana_tsu	]	};
    key <AB02> { [ x, X			], [ kana_SA		]	};
    key <AB03> { [ c, C			], [ kana_SO		]	};
    key <AB04> { [ v, V			], [ kana_HI		]	};
    key <AB05> { [ b, B			], [ kana_KO		]	};
    key <AB06> { [ n, N			], [ kana_MI		]	};
    key <AB07> { [ m, M			], [ kana_MO		]	};
    key <AB08> { [ comma, less		], [ kana_NE, kana_comma ]	};
    key <AB09> { [ period, greater	], [ kana_RU, kana_fullstop ]	};
    key <AB10> { [ slash, question	], [ kana_ME, kana_middledot ]	};
    key <AB11> { [ NoSymbol, underscore	], [ kana_RO		]	};
//    key <RTSH> { [ Shift_R		]	};

    key <ALGR> { [ Mode_switch		]	};
    key <LALT> { [ Alt_L		]	};
    key <NFER> { [ Muhenkan		]	};
    key <SPCE> { [ space		]	};
    key <XFER> { [ Henkan, Kanji	]	};
    // End alphanumeric section

    // Begin "Function" section
    key <BRK>  { [ Break		]	};
    key <PRSC> { [ Print		]	};
    key <FK01> { [ F1			]	};
    key <FK02> { [ F2			]	};
    key <FK03> { [ F3			]	};
    key <FK04> { [ F4			]	};
    key <FK05> { [ F5			]	};
    key <FK06> { [ F6			]	};
    key <FK07> { [ F7			]	};
    key <FK08> { [ F8			]	};
    key <FK09> { [ F9			]	};
    key <FK10> { [ F10			]	};
    key <FK11> { [ F11			]	};
    key <FK12> { [ F12			]	};
    key <FK13> { [ F13			]	};
    key <FK14> { [ F14			]	};
    key <FK15> { [ F15			]	};
    // End "Function" section

    // Begin "Editing" section
    key <INS>  { [ Insert		]	};
    key <DELE> { [ Delete		]	};
    key <PGUP> { [ Prior		]	};
    key <PGDN> { [ Next			]	};
    key <UP>   { [ Up			]	};
    key <LEFT> { [ Left			]	};
    key <RGHT> { [ Right		]	};
    key <DOWN> { [ Down			]	};
    // End "Editing" section

    // Begin "Keypad" section
    key <HOME> { [ Clear, Home		]	 };
    key <HELP> { [ Help			]	};
    key <KPSU> { [ KP_Subtract		]	};
    key <KPDV> { [ KP_Divide		]	};

    key  <KP7> { [ KP_7			]	};
    key  <KP8> { [ KP_8			]	};
    key  <KP9> { [ KP_9			]	};
    key <KPMU> { [ KP_Multiply		]	};

    key  <KP4> { [ KP_4			]	};
    key  <KP5> { [ KP_5			]	};
    key  <KP6> { [ KP_6			]	};
    key <KPAD> { [ KP_Add		]	};

    key  <KP1> { [ KP_1			]	};
    key  <KP2> { [ KP_2			]	};
    key  <KP3> { [ KP_3			]	};
    key <KPEQ> { [ KP_Equal 		]	};

    key  <KP0> { [ KP_0			]	};
    key <KPSP> { [ KP_Separator		]	};
    key <KPDC> { [ KP_Decimal		]	};
//    key <KPEN> { [ KP_Enter		]	}; 
    // End "Keypad" section

    modifier_map Shift  { Shift_L };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L };
    modifier_map Mod1   { Alt_L };
    modifier_map Mod2   { Mode_switch };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // $NetBSD: sl-c3x00,v 1.1 2009/12/13 04:54:51 nonaka Exp $
// $OpenBSD: zaurus,v 1.2 2008/03/05 17:24:55 matthieu Exp $

partial default alphanumeric_keys
xkb_symbols "basic" {
	name[Group1]= "Sharp SL-C3x00";

	key <AE01> { [ 1, exclam ] };
	key <AE02> { [ 2, quotedbl ] };
	key <AE03> { [ 3, numbersign ] };
	key <AE04> { [ 4, dollar ] };
	key <AE05> { [ 5, percent ] };
	key <AE06> { [ 6, ampersand ] };
	key <AE07> { [ 7, apostrophe ] };
	key <AE08> { [ 8, parenleft ] };
	key <AE09> { [ 9, parenright ] };
	key <AE10> { [ 0, asciitilde ] };
	key <BKSP> { type="CTRL+ALT",
		symbols[Group1]= [ BackSpace, Terminate_Server ] };

	key <AD01> { [ q, Q ] };
	key <AD02> { [ w, W, asciicircum ] };
	key <AD03> { [ e, E, equal ] };
	key <AD04> { [ r, R, plus ] };
	key <AD05> { [ t, T, bracketleft ] };
	key <AD06> { [ y, Y, bracketright ] };
	key <AD07> { [ u, U, braceleft ] };
	key <AD08> { [ i, I, braceright ] };
	key <AD09> { [ o, O ] };
	key <AD10> { [ p, P ] };
	
	key <TAB> { [ Tab, ISO_Left_Tab, Caps_Lock ] };

	key <AC01> { [ a, A ] };
	key <AC02> { [ s, S ] };
	key <AC03> { [ d, D, grave ] };
	key <AC04> { [ f, F, backslash ] };
	key <AC05> { [ g, G, semicolon ] };
	key <AC06> { [ h, H, colon ] };
	key <AC07> { [ j, J, asterisk ] };
	key <AC08> { [ k, K, yen ] };
	key <AC09> { [ l, L, bar ] };

	key <LFSH> { [ Shift_L ] };
	key <AB01> { [ z, Z ] };
	key <AB02> { [ x, X, SunCut ] };
	key <AB03> { [ c, C, SunCopy ] };
	key <AB04> { [ v, V, SunPaste ] };
	key <AB05> { [ b, B, underscore ] };
	key <AB06> { [ n, N ] };
	key <AB07> { [ m, M ] };
	key <RTSH> { [ Shift_R ] };
	key <RTRN> { [ Return ] };
	
	key <RALT> { [ ISO_Level3_Shift ] };

	key <LCTL> { [ Control_L ] };
	key <AE11> { [ minus, minus, at ] };
	key <SPCE> { [ space ] };
	key <AB08> { [ comma, slash, less ] };
	key <AB09> { [ period, question, greater ] };
	
	key <UP> { [ Up, Up, Prior ] };
	key <LEFT> { [ Left, Left, Home ] };
	key <DOWN> { [ Down, Down, Next ] };
	key <RGHT> { [ Right, Right, End ] };

	key <ESC> { [ Escape ] };

	include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        // $NetBSD: ws003sh,v 1.1 2010/05/15 15:33:30 nonaka Exp $

partial default alphanumeric_keys
xkb_symbols "basic" {
	name[Group1]= "Sharp WS003SH";

	key <AE01> { [ 1, exclam ] };
	key <AE02> { [ 2, quotedbl ] };
	key <AE03> { [ 3, numbersign ] };
	key <AE04> { [ 4, dollar ] };
	key <AE05> { [ 5, percent ] };
	key <AE06> { [ 6, ampersand ] };
	key <AE07> { [ 7, apostrophe, grave ] };
	key <AE08> { [ 8, parenleft, braceleft ] };
	key <AE09> { [ 9, parenright, braceright ] };
	key <AE10> { [ 0 ] };
	key <AE11> { [ minus, equal, backslash ] };
	key <BKSP> { [ BackSpace, BackSpace, Delete ] };

	key <AD01> { [ q, Q ] };
	key <AD02> { [ w, W, asciicircum ] };
	key <AD03> { [ e, E, asciitilde ] };
	key <AD04> { [ r, R, bar ] };
	key <AD05> { [ t, T ] };
	key <AD06> { [ y, Y ] };
	key <AD07> { [ u, U, bracketleft ] };
	key <AD08> { [ i, I, bracketright ] };
	key <AD09> { [ o, O, underscore ] };
	key <AD10> { [ p, P, at ] };
	
	key <TAB> { [ Tab, Tab, Escape ] };

	key <AC01> { [ a, A ] };
	key <AC02> { [ s, S ] };
	key <AC03> { [ d, D ] };
	key <AC04> { [ f, F ] };
	key <AC05> { [ g, G ] };
	key <AC06> { [ h, H ] };
	key <AC07> { [ j, J ] };
	key <AC08> { [ k, K, plus ] };
	key <AC09> { [ l, L, asterisk ] };

	key <LFSH> { [ Shift_L ] };
	key <AB01> { [ z, Z ] };
	key <AB02> { [ x, X ] };
	key <AB03> { [ c, C ] };
	key <AB04> { [ v, V ] };
	key <AB05> { [ b, B ] };
	key <AB06> { [ n, N ] };
	key <AB07> { [ m, M ] };
	key <AB08> { [ comma, semicolon, less ] };
	key <AB09> { [ period, colon, greater ] };
	key <AB10> { [ slash, question ] };
	key <RTSH> { [ Shift_R ] };
	key <RTRN> { [ Return ] };

	key <RALT> { [ ISO_Level3_Shift ] };

	key <LCTL> { [ Control_L ] };
	key <SPCE> { [ space ] };
	
	key <UP> { [ Up, Up, Prior ] };
	key <LEFT> { [ Left, Left, Home ] };
	key <DOWN> { [ Down, Down, Next ] };
	key <RGHT> { [ Right, Right, End ] };

	key <ESC> { [ Escape ] };

	include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          partial alphanumeric_keys
xkb_symbols "us" {
    name[Group1] = "U.S. English";
    
    include "nokia_vndr/rx-44(base)"

    key <AC01>	{	[	a,		A,		exclam,		exclam		]	};
    key <AC02>	{	[	s,		S,		quotedbl,	quotedbl	]	};
    key <AC03>	{	[	d,		D,		at,		at		]	};
    key <AC04>	{	[	f,		F,		numbersign,	numbersign	]	};
    key <AC05>	{	[	g,		G,		backslash,	backslash	]	};
    key <AC06>	{	[	h,		H,		slash,		slash		]	};
    key <AC07>	{	[	j,		J,		parenleft,	parenleft	]	};
    key <AC08>	{	[	k,		K,		parenright,	parenright	]	};
    key <AC09>	{	[	l,		L,		asterisk,	asterisk	]	};
    key <AC11>  {       [       apostrophe,     question,       question,	question	]	};

    key <AB01>	{	[	z,		Z,		yen,		yen		]	};
    key <AB02>	{	[	x,		X,		asciicircum,	asciicircum	]	};
    key <AB03>	{	[	c,		C,		asciitilde,	asciitilde	]	};
    key <AB04>	{	[	v,		V,		percent,	percent		]	};
    key <AB05>	{	[	b,		B,		ampersand,	ampersand	]	};
    key <AB06>	{	[	n,		N,		dollar,		dollar		]	};
    key <AB07>	{	[	m,		M,		EuroSign,	EuroSign	]	};
    key <AC10>  {       [       semicolon,      colon,          sterling,	sterling	]	};
    key <AE11>  {       [       minus,          underscore,     underscore,	underscore	]	};
    key <AE12>  {       [       plus,           equal,          equal,		equal		]	};

    key <AB08>  {       [       comma,          less,           comma,		less		]	};
    key <AB09>  {       [       period,         greater,        period,		greater		]	};
};



partial alphanumeric_keys
xkb_symbols "fisenoda" {
    name[Group1] = "Finnish/Swedish/Norwegian/Danish";

    include "nokia_vndr/rx-44(base)"

    key <AC01>	{	[	a,		A,		exclam,		exclam		]	};
    key <AC02>	{	[	s,		S,		quotedbl,	quotedbl	]	};
    key <AC03>	{	[	d,		D,		at,		at		]	};
    key <AC04>	{	[	f,		F,		numbersign,	numbersign	]	};
    key <AC05>	{	[	g,		G,		asterisk,	asterisk	]	};
    key <AC06>	{	[	h,		H,		backslash,	backslash	]	};
    key <AC07>	{	[	j,		J,		slash,		slash		]	};
    key <AC08>	{	[	k,		K,		parenleft,	parenleft	]	};
    key <AC09>	{	[	l,		L,		parenright,	parenright	]	};
    key <AC11>  {       [       aring,          Aring,          question,	question	]	};

    key <AB01>	{	[	z,		Z,		EuroSign,	EuroSign	]	};
    key <AB02>	{	[	x,		X,		asciitilde,	asciitilde	]	};
    key <AB03>	{	[	c,		C,		percent,	percent		]	};
    key <AB04>	{	[	v,		V,		ampersand,	ampersand	]	};
    key <AB05>	{	[	b,		B,		plus,		plus		]	};
    key <AB06>	{	[	n,		N,		less,		less		]	};
    key <AB07>	{	[	m,		M,		greater,	greater		]	};
    key <AC10>  {       type="EIGHT_LEVEL", [       oslash,     Oslash,		equal,		equal,		odiaeresis,		Odiaeresis,	equal,		equal		]       };
    key <AE11>  {       type="EIGHT_LEVEL", [       ae,		AE,		apostrophe,	apostrophe,	adiaeresis,		Adiaeresis,	apostrophe,	apostrophe	]       };
    key <AE12>  {       [       minus,          underscore,     underscore,	underscore	]       };

    key <AB08>  {       [       comma,          semicolon,      comma,		semicolon	]       };
    key <AB09>  {       [       period,         colon,          period,		colon		]       };
};



partial alphanumeric_keys
xkb_symbols "ptes" {
    name[Group1] = "Portuguese/Spanish";

    include "nokia_vndr/rx-44(base)"

    key <AC01>	{	[	a,		A,		exclam,		exclam		]	};
    key <AC02>	{	[	s,		S,		quotedbl,	quotedbl	]	};
    key <AC03>	{	[	d,		D,		at,		at		]	};
    key <AC04>	{	[	f,		F,		numbersign,	numbersign	]	};
    key <AC05>	{	[	g,		G,		asterisk,	asterisk	]	};
    key <AC06>	{	[	h,		H,		backslash,	backslash	]	};
    key <AC07>	{	[	j,		J,		slash,		slash		]	};
    key <AC08>	{	[	k,		K,		parenleft,	parenleft	]	};
    key <AC09>	{	[	l,		L,		parenright,	parenright	]	};
    key <AC11>  {       [       dead_acute,     dead_grave,     dead_diaeresis,	dead_diaeresis	]	};

    key <AB01>	{	[	z,		Z,		EuroSign,	EuroSign	]	};
    key <AB02>	{	[	x,		X,		percent,	percent 	]	};
    key <AB03>	{	[	c,		C,		ampersand,	ampersand	]	};
    key <AB04>	{	[	v,		V,		exclamdown,	exclamdown	]	};
    key <AB05>	{	[	b,		B,		apostrophe,	apostrophe	]	};
    key <AB06>	{	[	n,		N,		plus,		plus		]	};
    key <AB07>	{	[	m,		M,		equal,		equal		]	};
    key <AC10>  {       [       ccedilla,       Ccedilla,       questiondown,	questiondown	]	};
    key <AE11>  {       [       ntilde,         Ntilde,         question,	question	]	};
    key <AE12>  {       [       dead_tilde,     dead_circumflex, dead_circumflex, dead_circumflex ]	};

    key <AB08>  {       [	comma,		semicolon,	minus,		minus		]	};
    key <AB09>  {       [	period,		colon,		underscore,	underscore	]	};
};



partial alphanumeric_keys
xkb_symbols "fr" {
    name[Group1] = "French";

    include "nokia_vndr/rx-44(base)"

    key <AD01>	{	[	a,		A,		1,              1               ]	};
    key <AD02>	{	[	z,		Z,		2,              2               ]	};

    key <AC01>	{	[	q,		Q,		at,             at              ]	};
    key <AC02>	{	[	s,		S,		percent,        percent         ]	};
    key <AC03>	{	[	d,		D,		ecircumflex,    Ecircumflex	]	};
    key <AC04>	{	[	f,		F,		eacute,  	Eacute          ]	};
    key <AC05>	{	[	g,		G,		egrave,    	Egrave          ]	};
    key <AC06>	{	[	h,		H,		oe,             OE      	]	};
    key <AC07>	{	[	j,		J,		parenleft,      parenleft   	]	};
    key <AC08>	{	[	k,		K,		parenright,     parenright	]	};
    key <AC09>	{	[	l,		L,		agrave,         Agrave      	]	};
    key <AC11>  {       [       m,              M,              ugrave,         Ugrave          ]       };

    key <AB01>	{	[	w,		w,		EuroSign,       EuroSign	]	};
    key <AB02>	{	[	x,		X,		numbersign,     numbersign 	]	};
    key <AB03>	{	[	c,		C,		ccedilla,       Ccedilla	]	};
    key <AB04>	{	[	v,		V,		plus,           plus	        ]	};
    key <AB05>	{	[	b,		B,		equal,          equal   	]	};
    key <AB06>	{	[	n,		N,		quotedbl,       quotedbl	]	};
    key <AB07>	{	[	comma,		question,       backslash,      backslash	]	};
    key <AC10>  {       [       semicolon,      period,         minus,          minus           ]       };
    key <AE11>  {       [       colon,          slash,          underscore,     underscore      ]       };
    key <AE12>  {       [       apostrophe,     apostrophe,     mu,             mu              ]       };

    key <AB08>  {       [       less,		greater,	less,		greater		]	};
    key <AB09>  {       [       exclam,		section,	asterisk,	asterisk        ]       };
};



partial alphanumeric_keys
xkb_symbols "de" {
    name[Group1] = "German";

    include "nokia_vndr/rx-44(base)"

    key <AD06>	{	[	z,		Z,		6,		6		]	};

    key <AC01>	{	[	a,		A,		exclam,		exclam		]	};
    key <AC02>	{	[	s,		S,		quotedbl,	quotedbl	]	};
    key <AC03>	{	[	d,		D,		at,		at		]	};
    key <AC04>	{	[	f,		F,		numbersign,	numbersign	]	};
    key <AC05>	{	[	g,		G,		percent,	percent    	]	};
    key <AC06>	{	[	h,		H,		backslash,	backslash	]	};
    key <AC07>	{	[	j,		J,		slash,		slash	  	]	};
    key <AC08>	{	[	k,		K,		parenleft,	parenleft	]	};
    key <AC09>	{	[	l,		L,		parenright,	parenright	]	};
    key <AC11>  {	[       udiaeresis,     Udiaeresis,     question,	question	]       };

    key <AB01>	{	[	y,		Y,		EuroSign,	EuroSign	]	};
    key <AB02>	{	[	x,		X,		asciitilde,	asciitilde	]	};
    key <AB03>	{	[	c,		C,		asterisk,	asterisk	]	};
    key <AB04>	{	[	v,		V,		ampersand,	ampersand	]	};
    key <AB05>	{	[	b,		B,		plus,		plus		]	};
    key <AB06>	{	[	n,		N,		less,		less		]	};
    key <AB07>	{	[	m,		M,		greater,	greater		]	};
    key <AC10>  {	[       odiaeresis,     Odiaeresis,     equal,		equal		]       };
    key <AE11>  {	[       adiaeresis,     Adiaeresis,     apostrophe,	apostrophe	]       };
    key <AE12>  {	[       minus,          underscore,     ssharp,		ssharp		]       };

    key <AB08>  {       [       comma,          semicolon,      comma,		semicolon	]	};
    key <AB09>  {       [       period,         colon,          period,		colon		]	};
};


// Levels 5-8 are Russian, levels 1-4 US English, for shortcut reasons.
partial alphanumeric_keys
xkb_symbols "ru" {
    name[Group1] = "Russian";

    include "nokia_vndr/rx-44(base)"

    key <AD01>	{	type="EIGHT_LEVEL", [	q,			Q,			1,			1,			Cyrillic_shorti,	Cyrillic_SHORTI,	1,			1			]	};
    key <AD02>	{	type="EIGHT_LEVEL", [	w,			W,			2,			2,			Cyrillic_tse,	Cyrillic_TSE,	2,			2			]	};
    key <AD03>	{	type="EIGHT_LEVEL", [	e,			E,			3,			3,			Cyrillic_u,	Cyrillic_U,	3,			3			]	};
    key <AD04>	{	type="EIGHT_LEVEL", [	r,			R,			4,			4,			Cyrillic_ka,	Cyrillic_KA,	4,			4			]	};
    key <AD05>	{	type="EIGHT_LEVEL", [	t,			T,			5,			5,			Cyrillic_ie,	Cyrillic_IE,	5,			5			]	};
    key <AD06>	{	type="EIGHT_LEVEL", [	y,			Y,			6,			6,			Cyrillic_en,	Cyrillic_EN,	6,			6			]	};
    key <AD07>	{	type="EIGHT_LEVEL", [	u,			U,			7,			7,			Cyrillic_ghe,	Cyrillic_GHE,	7,			7			]	};
    key <AD08>	{	type="EIGHT_LEVEL", [	i,			I,			8,			8,			Cyrillic_sha,	Cyrillic_SHA,	8,			8			]	};
    key <AD09>	{	type="EIGHT_LEVEL", [	o,			O,			9,			9,			Cyrillic_shcha,	Cyrillic_SHCHA,	9,			9			]	};
    key <AD10>	{	type="EIGHT_LEVEL", [	p,			P,			0,			0,			Cyrillic_ze,	Cyrillic_ZE,	0,			0			]	};

    key <AC01>	{	type="EIGHT_LEVEL", [	a,			A,			exclam,			exclam,			Cyrillic_ef,	Cyrillic_EF,	exclam,			exclam			]	};
    key <AC02>	{	type="EIGHT_LEVEL", [	s,			S,			quotedbl,		quotedbl,		Cyrillic_yeru,	Cyrillic_YERU,	quotedbl,		quotedbl		]	};
    key <AC03>	{	type="EIGHT_LEVEL", [	d,			D,			at,			at,			Cyrillic_ve,	Cyrillic_VE,	at,			at			]	};
    key <AC04>	{	type="EIGHT_LEVEL", [	f,			F,			numbersign,		numbersign,		Cyrillic_a,	Cyrillic_A,	numbersign,		numbersign		]	};
    key <AC05>	{	type="EIGHT_LEVEL", [	g,			G,			backslash,		backslash,		Cyrillic_pe,	Cyrillic_PE,	backslash,		backslash		]	};
    key <AC06>	{	type="EIGHT_LEVEL", [	h,			H,			slash,			slash,			Cyrillic_er,	Cyrillic_ER,	slash,			slash			]	};
    key <AC07>	{	type="EIGHT_LEVEL", [	j,			J,			parenleft,		parenleft,		Cyrillic_o,	Cyrillic_O,	parenleft,		parenleft		]	};
    key <AC08>	{	type="EIGHT_LEVEL", [	k,			K,			parenright,		parenright,		Cyrillic_el,	Cyrillic_EL,	parenright,		parenright		]	};
    key <AC09>	{	type="EIGHT_LEVEL", [	l,			L,			colon,			colon,			Cyrillic_de,	Cyrillic_DE,	colon,			colon			]	};
    key <AC11>	{	type="EIGHT_LEVEL", [	NoSymbol,		NoSymbol,		semicolon,		semicolon,		Cyrillic_zhe,	Cyrillic_ZHE,	semicolon,		semicolon		]	};

    key <AB01>	{	type="EIGHT_LEVEL", [	z,			Z,			underscore,		underscore,		Cyrillic_ya,	Cyrillic_YA,	minus,			minus			]	};
    key <AB02>	{	type="EIGHT_LEVEL", [	x,			X,			percent,		percent,		Cyrillic_che,	Cyrillic_CHE,	percent,		percent			]	};
    key <AB03>	{	type="EIGHT_LEVEL", [	c,			C,			0x1002116,		0x1002116,		Cyrillic_es,	Cyrillic_ES,	0x1002116,		0x1002116		]	};
    key <AB04>	{	type="EIGHT_LEVEL", [	v,			V,			equal,			equal,			Cyrillic_em,	Cyrillic_EM,	equal,			equal			]	};
    key <AB05>	{	type="EIGHT_LEVEL", [	b,			B,			ampersand,		ampersand,		Cyrillic_i,	Cyrillic_I,	ampersand,		ampersand		]	};
    key <AB06>	{	type="EIGHT_LEVEL", [	n,			N,			asterisk,		asterisk,		Cyrillic_te,	Cyrillic_TE,	asterisk,		asterisk		]	};
    key <AB07>	{	type="EIGHT_LEVEL", [	m,			M,			apostrophe,		apostrophe,		Cyrillic_softsign,	Cyrillic_SOFTSIGN,	apostrophe,		apostrophe		]	};
    key <AC10>	{	type="EIGHT_LEVEL", [	NoSymbol,		NoSymbol,		minus,			minus,			Cyrillic_be,	Cyrillic_BE,	minus,			minus			]	};
    key <AE11>	{	type="EIGHT_LEVEL", [	NoSymbol,		NoSymbol,		question,		question,		Cyrillic_yu,	Cyrillic_YU,	question,		question		]	};
    key <AE12>	{	type="EIGHT_LEVEL", [	NoSymbol,		NoSymbol,		Cyrillic_hardsign,	Cyrillic_HARDSIGN,	Cyrillic_ha,	Cyrillic_HA,	Cyrillic_hardsign,	Cyrillic_HARDSIGN	]	};

    key <AB08>	{	type="EIGHT_LEVEL", [	period,			comma,			period,			comma,			period,		comma,		period,			comma			]	};
    key <AB09>	{	type="EIGHT_LEVEL", [	NoSymbol,		NoSymbol,		Cyrillic_io,		Cyrillic_IO,		Cyrillic_e,	Cyrillic_E,	Cyrillic_io,		Cyrillic_IO		]	};
};



partial alphanumeric_keys
xkb_symbols "it" {
    name[Group1] = "Italian";

    include "nokia_vndr/rx-44(base)"

    key <AC01>	{	[	a,		A,		exclam,		exclam		]	};
    key <AC02>	{	[	s,		S,		quotedbl,	quotedbl	]	};
    key <AC03>	{	[	d,		D,		at,		at		]	};
    key <AC04>	{	[	f,		F,		numbersign,	numbersign	]	};
    key <AC05>	{	[	g,		G,		asterisk,	asterisk	]	};
    key <AC06>	{	[	h,		H,		backslash,	backslash	]	};
    key <AC07>	{	[	j,		J,		slash,		slash		]	};
    key <AC08>	{	[	k,		K,		parenleft,	parenleft	]	};
    key <AC09>	{	[	l,		L,		parenright,	parenright	]	};
    key <AC11>  {       [       apostrophe,     question,       igrave,         Igrave		]       };

    key <AB01>	{	[	z,		Z,		EuroSign,	EuroSign	]	};
    key <AB02>	{	[	x,		X,		asciitilde,	asciitilde	]	};
    key <AB03>	{	[	c,		C,		ampersand,	ampersand	]	};
    key <AB04>	{	[	v,		V,		equal,		equal		]	};
    key <AB05>	{	[	b,		B,		less,		less		]	};
    key <AB06>	{	[	n,		N,		greater,	greater		]	};
    key <AB07>	{	[	m,		M,		plus,		plus		]	};
    key <AC10>  {       [       eacute,         Eacute,         ograve,         Ograve          ]       };
    key <AE11>  {       [       egrave,         Egrave,         agrave,         Agrave          ]       };
    key <AE12>  {       [       minus,          underscore,     ugrave,         Ugrave          ]       };

    key <AB08>  {       [       comma,          semicolon,      comma,		semicolon	]       };
    key <AB09>  {       [       period,         colon,          period,		colon		]       };
};

partial default alphanumeric_keys
xkb_symbols "base" {
    key <AD01>	{	[	q,			Q,			1,			1			]	};
    key <AD02>	{	[	w,			W,			2,			2			]	};
    key <AD03>	{	[	e,			E,			3,			3			]	};
    key <AD04>	{	[	r,			R,			4,			4			]	};
    key <AD05>	{	[	t,			T,			5,			5			]	};
    key <AD06>	{	[	y,			Y,			6,			6			]	};
    key <AD07>	{	[	u,			U,			7,			7			]	};
    key <AD08>	{	[	i,			I,			8,			8			]	};
    key <AD09>	{	[	o,			O,			9,			9			]	};
    key <AD10>	{	[	p,			P,			0,			0			]	};
    key <BKSP>	{	[	BackSpace,		BackSpace,		BackSpace,		BackSpace		]	};

    // broken UI spec.
    key <RTRN>	{	[	KP_Enter,		KP_Enter,		KP_Enter,		KP_Enter		]	};

    key <COMP>	{	[	Multi_key,		Multi_key,		Multi_key,		Multi_key		]	};
    key <LFSH>	{	[	Shift_L,		Shift_L,		Shift_L,		Shift_L			]	};
    key <FN>	{	[	ISO_Level3_Shift,	ISO_Level3_Shift,	ISO_Level3_Shift,	ISO_Level3_Shift	]	};
    key <SPCE>	{	[	space,			space,			space,			space			]	};
    key <RCTL>	{	[	Control_R,		Control_R,		Control_R,		Control_R		]	};
    key <TAB>	{	[	Tab,			Tab,			Tab,			Tab			]	};

    modifier_map Shift { Shift_L };
    modifier_map Mod5 { ISO_Level3_Shift };
    modifier_map Control { Control_R };

    key <KPEN>	{	[	Return		]	};
    key <UP>	{	[	Up		]	};
    key <DOWN>	{	[	Down		]	};
    key <LEFT>	{	[	Left		]	};
    key <RGHT>	{	[	Right		]	};

    key <ESC>	{	[	Escape		]	};
    key <FK01>	{	[	F1		]	};
    key <FK02>	{	[	F2		]	};
    key <FK03>	{	[	F3		]	};
    key <FK04>	{	[	F4		]	};
    key <FK05>	{	[	F5		]	};
    key <FK06>	{	[	F6		]	};
    key <FK07>	{	[	F7		]	};
    key <FK08>	{	[	F8		]	};
    key <FK09>	{	[	F9		]	};
    key <FK10>	{	[	F10		]	};
    key <FK11>	{	[	F11		]	};
    key <FK12>	{	[	F12		]	};

    // generated from the headset, must always be in the map.
    key <I29>  {	[	XF86Phone	]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  default partial alphanumeric_keys
xkb_symbols "common" {
    include "nokia_vndr/rx-51(common_keys)"
    include "nokia_vndr/rx-51(modifiers)"

	key <BKSP>	{ [	BackSpace,	Delete,		BackSpace,	Delete		] };
	
    // This section should not be included by any other section.
    // It's referenced only once by rule file to allow multiple layout configurations.

    // More than one layout at the same time could be set for instance as follows:
    // setxkbmap -rules evdev \
    //           -model nokiarx51 \
    //           -option grp:ctrl_shift_toggle \
    //           -layout us,cz \
    //           -variant ",qwerty"

    // Notice the similarity:
    //   "pc+us+cz(qwerty):2+grp:XYZ" vs.
    //   "nokia_vndr/rx-51(common)+nokia_vndr/rx-51(us)+nokia_vndr/rx-51(cz_qwerty):2+grp:XYZ"
    // where XYZ is one of xkb_symbols section usually located in file symbols/group.

    // Bear in mind that option XYZ could replace current keys configuration!!!

    // For instance using symbols/group(ctrl_shift_toggle) redefines LCTL and LFSH keys
    // which may disallow opening of virtual symbol table (Multi_key).
    // Fortunately the Multi_key is defined in 3rd and 4th level a ctrl_shift_toggle
    // redefines first two levels only. But RX-51 has not right Ctrl nor Shift therefore
    // pressing Ctrl+Shift will switch to previous layout, not to the next one.

    // For RX-51 device there is a lot of restrictions if more than one layout is
    // is configured at the same time because some modifiers and special cases are
    // handled by hildon layer (especially with eight-level layout):
    //  - settings may be done from terminal only (GUI doesn't and won't support it)
    //  - virtual symbol table is not updated according to current layout
    //  - for unknown reasons the eight-level layout (nordic,ru) works properly
    //    only if it's configured as first layout (e.g. "ru,us,cz" not "us,cz,ru")
    //    otherwise it's not possible to access levels 5-8
    //  - Ctrl+Space related problems:
    //     - If eight-level layout is used as first layout one of eight-level layouts has to
    //       be also chosen in GUI - otherwise the Ctrl+Space "switch" is disabled
    //     - Ctrl+Space has no effect if only four-level layouts are chosen
    //       (don't forget the layout configured in GUI - despite of it's not reachable)
    //     - a few keys in 2nd layer could be mixed with other layouts when Ctrl+Space is "turned on" (why?)
    //       in case eight- and four-level layouts are configured simultaneously
    //     - Ctrl+Space is "turned on" by default and has to be "turned off" for four-level layouts
    //       in case eight- and four-level layouts are configured simultaneously
    //     - four-level layout on first place doesn't work at all when Ctrl+Space is "turned on"
    //       in case the 2nd, 3rd or 4th layout is eight-level layout
};

////////////////////////////////////////////////////////////////////////////////

partial alphanumeric_keys
xkb_symbols "us" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
};



partial alphanumeric_keys
xkb_symbols "pl" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "Polish";
};



partial alphanumeric_keys
xkb_symbols "fise" {
    include "nokia_vndr/rx-51(nordic_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Finnish/Swedish";

    // 2. row
    key <AB09>	{ [	odiaeresis,	Odiaeresis,	exclam,		exclam		] };
    key <UP>	{ [	adiaeresis,	Adiaeresis,	question,	question	] };
};



partial alphanumeric_keys
xkb_symbols "dano" {
    include "nokia_vndr/rx-51(nordic_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Danish/Norwegian";

    // 2. row
    key <AB09>	{ [	oslash,		Oslash,		exclam,		exclam		] };
    key <UP>	{ [	ae,		AE,		question,	question	] };
};



partial alphanumeric_keys
xkb_symbols "nordic" {
    include "nokia_vndr/rx-51(nordic_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Danish/Finnish/Norwegian/Swedish";

    key.type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC";

    // 2. row
    key <AB09>	{ [	odiaeresis,	Odiaeresis,	exclam,		exclam,		oslash,		Oslash,		exclam,		exclam		] };
    key <UP>	{ [	adiaeresis,	Adiaeresis,	question,	question,	ae,		AE,		question,	question	] };
};



partial alphanumeric_keys
xkb_symbols "ptes" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Portuguese/Spanish";

    // 1. row
    key <AB08>	{ [	dead_acute,	dead_acute,	dead_grave,	dead_grave	] };

    // 2. row
    key <AC05>	{ [	g,		G,		exclamdown,	exclamdown	] };
    key <AC06>	{ [	h,		H,		exclam,		exclam		] };
    key <AC07>	{ [	j,		J,		questiondown,	questiondown	] };
    key <AC08>	{ [	k,		K,		question,	question	] };
    key <AC09>	{ [	l,		L,		dead_diaeresis,	dead_diaeresis	] };
    key <AB09>	{ [	ntilde,		Ntilde,		dead_tilde,	dead_tilde	] };
    key <UP>	{ [	ccedilla,	Ccedilla,	dead_circumflex,dead_circumflex	] };

    // 3. row
    key <AB01>	{ [	z,		Z,		parenleft,	parenleft	] };
    key <AB02>	{ [	x,		X,		parenright,	parenright 	] };
    key <AB03>	{ [	c,		C,		slash,		slash		] };
    key <AB04>	{ [	v,		V,		quotedbl,	quotedbl	] };
    key <AB05>	{ [	b,		B,		apostrophe,	apostrophe	] };
    key <AB06>	{ [	n,		N,		colon,		colon		] };
    key <AB07>	{ [	m,		M,		semicolon,	semicolon	] };
    key <LEFT>	{ [	period,		comma,		comma,		comma		] };
};



partial alphanumeric_keys
xkb_symbols "fr" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "French";

    // 1. row
    key <AD01>	{ [	a,		A,		1,		1		] };
    key <AD02>	{ [	z,		Z,		2,		2		] };
    key <AB08>	{ [	agrave,		Agrave,		ccedilla,	Ccedilla	] };

    // 2. row
    key <AC01>	{ [	q,		Q,		asterisk,	asterisk	] };
    key <AC02>	{ [	s,		S,		plus,		plus		] };
    key <AC03>	{ [	d,		D,		numbersign,	numbersign	] };
    key <AC04>	{ [	f,		F,		minus,  	minus		] };
    key <AC05>	{ [	g,		G,		underscore,	underscore	] };
    key <AC06>	{ [	h,		H,		exclam,		exclam		] };
    key <AC07>	{ [	j,		J,		question,	question	] };
    key <AC08>	{ [	k,		K,		colon,		colon		] };
    key <AC09>	{ [	l,		L,		dead_circumflex,dead_circumflex	] };
    key <AB09>	{ [	m,		M,		ugrave,		Ugrave		] };
    key <UP>	{ [	eacute,		Eacute,		egrave,		Egrave		] };

    // 3. row
    key <AB01>	{ [	w,		W,		EuroSign,       EuroSign	] };
    key <AB03>	{ [	c,		C,		parenleft,	parenleft	] };
    key <AB04>	{ [	v,		V,		parenright,	parenright	] };
    key <AB05>	{ [	b,		B,		slash,		slash		] };
    key <AB07>	{ [	comma,		comma,		apostrophe,	apostrophe	] };
    key <LEFT>	{ [	semicolon,	period,		period,		period		] };
};



partial alphanumeric_keys
xkb_symbols "de" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "German";

    // 1. row
    key <AD06>	{ [	z,		Z,		6,		6		] };
    key <AB08>	{ [	udiaeresis,	Udiaeresis,	ssharp,		ssharp		] };

    // 2. row
    key <AC08>	{ [	k,		K,		semicolon,	semicolon	] };
    key <AC09>	{ [	l,		L,		colon,		colon		] };
    key <AB09>	{ [	odiaeresis,	Odiaeresis,	exclam,		exclam		] };
    key <UP>	{ [	adiaeresis,	Adiaeresis,	question,	question	] };

    // 3. row
    key <AB01>	{ [	y,		Y,		EuroSign,	EuroSign	] };
    key <AB03>	{ [	c,		C,		equal,		equal		] };
    key <LEFT>	{ [	period,		comma,		comma,		comma		] };
};



partial alphanumeric_keys
xkb_symbols "ch" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Swiss";

    // 1. row
    key <AD06>	{ [	z,		Z,		6,		6		] };
    key <AB08>	{ [	udiaeresis,	Udiaeresis,	egrave,		Egrave		] };

    // 2. row
    key <AC06>	{ [	h,		H,		equal,		equal		] };
    key <AC07>	{ [	j,		J,		parenleft,	parenleft	] };
    key <AC08>	{ [	k,		K,		parenright,	parenright	] };
    key <AC09>	{ [	l,		L,		colon,		colon		] };
    key <AB09>	{ [	odiaeresis,	Odiaeresis,	eacute,		Aacute		] };
    key <UP>	{ [	adiaeresis,	Adiaeresis,	agrave,		Agrave		] };

    // 3. row
    key <AB01>	{ [	y,		Y,		question,	question	] };
    key <AB02>	{ [	x,		X,		exclam,		exclam		] };
    key <AB03>	{ [	c,		C,		ccedilla,	Ccedilla	] };
    key <LEFT>	{ [	period,		comma,		comma,		comma		] };
};



// Levels 5-8 are Russian, levels 1-4 US English, for shortcut reasons.
partial alphanumeric_keys
xkb_symbols "ru" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Russian";

    key.type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ [	q,		Q,		1,			1,			Cyrillic_shorti,	Cyrillic_SHORTI,	1,			1			] };
    key <AD02>	{ [	w,		W,		2,			2,			Cyrillic_tse,		Cyrillic_TSE,		2,			2			] };
    key <AD03>	{ [	e,		E,		3,			3,			Cyrillic_u,		Cyrillic_U,		3,			3			] };
    key <AD04>	{ [	r,		R,		4,			4,			Cyrillic_ka,		Cyrillic_KA,		4,			4			] };
    key <AD05>	{ [	t,		T,		5,			5,			Cyrillic_ie,		Cyrillic_IE,		5,			5			] };
    key <AD06>	{ [	y,		Y,		6,			6,			Cyrillic_en,		Cyrillic_EN,		6,			6			] };
    key <AD07>	{ [	u,		U,		7,			7,			Cyrillic_ghe,		Cyrillic_GHE,		7,			7			] };
    key <AD08>	{ [	i,		I,		8,			8,			Cyrillic_sha,		Cyrillic_SHA,		8,			8			] };
    key <AD09>	{ [	o,		O,		9,			9,			Cyrillic_shcha,		Cyrillic_SHCHA,		9,			9			] };
    key <AD10>	{ [	p,		P,		0,			0,			Cyrillic_ze,		Cyrillic_ZE,		0,			0			] };
    key <AB08>  { [	Cyrillic_ha,	Cyrillic_HA,	Cyrillic_hardsign,	Cyrillic_HARDSIGN,	Cyrillic_ha,		Cyrillic_HA,		Cyrillic_hardsign,	Cyrillic_HARDSIGN	] };

    // 2. row
    key <AC01>	{ [	a,		A,		asterisk,		asterisk,		Cyrillic_ef,		Cyrillic_EF,		asterisk,		asterisk		] };
    key <AC02>	{ [	s,		S,		plus,			plus,			Cyrillic_yeru,		Cyrillic_YERU,		plus,			plus			] };
    key <AC03>	{ [	d,		D,		numbersign,		numbersign,		Cyrillic_ve,		Cyrillic_VE,		numbersign,		numbersign		] };
    key <AC04>	{ [	f,		F,		minus,			minus,			Cyrillic_a,		Cyrillic_A,		minus,			minus			] };
    key <AC05>	{ [	g,		G,		underscore,		underscore,		Cyrillic_pe,		Cyrillic_PE,		underscore,		underscore		] };
    key <AC06>	{ [	h,		H,		exclam,			exclam,			Cyrillic_er,		Cyrillic_ER,		exclam,			exclam			] };
    key <AC07>	{ [	j,		J,		question,		question,		Cyrillic_o,		Cyrillic_O,		question,		question		] };
    key <AC08>	{ [	k,		K,		semicolon,		semicolon,		Cyrillic_el,		Cyrillic_EL,		semicolon,		semicolon		] };
    key <AC09>	{ [	l,		L,		colon,			colon,			Cyrillic_de,		Cyrillic_DE,		colon,			colon			] };
    key <AB09>	{ [	comma,		comma,		comma,			comma,			Cyrillic_zhe,		Cyrillic_ZHE,		comma,			comma			] };
    key <UP>	{ [	period,		period,		period,			period,			Cyrillic_e,		Cyrillic_E,		period,			period			] };

    // 3. row
    key <AB01>	{ [	z,		Z,		dollar,			dollar,			Cyrillic_ya,		Cyrillic_YA,		dollar,			dollar			] };
    key <AB02>	{ [	x,		X,		EuroSign,		EuroSign,		Cyrillic_che,		Cyrillic_CHE,		EuroSign,		EuroSign		] };
    key <AB03>	{ [	c,		C,		slash,			slash,			Cyrillic_es,		Cyrillic_ES,		slash,			slash			] };
    key <AB04>	{ [	v,		V,		parenleft,		parenleft,		Cyrillic_em,		Cyrillic_EM,		parenleft,		parenleft		] };
    key <AB05>	{ [	b,		B,		parenright,		parenright,		Cyrillic_i,		Cyrillic_I,		parenright,		parenright		] };
    key <AB06>	{ [	n,		N,		quotedbl,		quotedbl,		Cyrillic_te,		Cyrillic_TE,		quotedbl,		quotedbl		] };
    key <AB07>	{ [	m,		M,		apostrophe,		apostrophe,		Cyrillic_softsign,	Cyrillic_SOFTSIGN,	apostrophe,		apostrophe		] };
    key <LEFT>	{ [	Cyrillic_be,	Cyrillic_BE,	Cyrillic_yu,		Cyrillic_YU,		Cyrillic_be,		Cyrillic_BE,		Cyrillic_yu,		Cyrillic_YU		] };
};



partial alphanumeric_keys
xkb_symbols "it" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Italian";

    // 1. row
    key <AB08>	{ [	egrave,		Egrave,		eacute,		Eacute		] };

    // 2. row
    key <AC06>	{ [	h,		H,		semicolon,	semicolon	] };
    key <AC07>	{ [	j,		J,		colon,		colon		] };
    key <AC08>	{ [	k,		K,		exclam,		exclam		] };
    key <AC09>	{ [	l,		L,		question,	question	] };
    key <AB09>	{ [	ograve,		Ograve,		igrave,		Igrave		] };
    key <UP>	{ [	agrave,		Agrave,		ugrave,		Ugrave		] };

    // 3. row
    key <AB01>	{ [	z,		Z,		EuroSign,	EuroSign	] };
    key <AB02>	{ [	x,		X,		parenleft,	parenleft	] };
    key <AB03>	{ [	c,		C,		parenright,	parenright	] };
    key <LEFT>	{ [	period,		comma,		comma,		comma		] };
};



partial alphanumeric_keys
xkb_symbols "cz" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Czech";

    // 1. row
    key <AD06>	{ [	z,		Z,		6,		6		] };
    key <AB08>	{ [	dead_acute,	dead_acute,	sterling,	sterling	] };

    // 2. row
    key <AC08>	{ [	k,		K,		semicolon,	semicolon	] };
    key <AC09>	{ [	l,		L,		colon,		colon		] };
    key <AB09>	{ [	uring,		Uring,		EuroSign,	EuroSign	] };
    key <UP>	{ [	dead_caron,	dead_caron,	dollar,		dollar		] };

    // 3. row
    key <AB01>	{ [	y,		Y,		equal,		equal		] };
    key <AB02>	{ [	x,		X,		slash,		slash		] };
    key <AB03>	{ [	c,		C,		backslash,	backslash	] };
    key <AB04>	{ [	v,		V,		apostrophe,	apostrophe	] };
    key <AB05>	{ [	b,		B,		quotedbl,	quotedbl	] };
    key <AB06>	{ [	n,		N,		exclam,		exclam		] };
    key <AB07>	{ [	m,		M,		question,	question	] };
    key <LEFT>	{ [	period,		comma,		comma,		comma		] };
};

partial alphanumeric_keys
xkb_symbols "cz_qwerty" {
    include "nokia_vndr/rx-51(cz)"

    name[Group1] = "Czech - qwerty";

    // Do not use the layout "cz_qwerty" directly if it is the only layout and compat rules enabled.
    // There is one compat rule that converts "cz_qwerty" to "pc+cz(qwerty)" which is not correct for RX-51.
    // Use either the layout "cz(qwerty)" or the general "cz" with variant "qwerty".

    // 1. row
    key <AD06>	{ [	y,		Y,		6,		6		] };

    // 3. row
    key <AB01>	{ [	z,		Z,		percent,	percent		] };
};



////////////////////////////////////////////////////////////////////////////////

partial hidden alphanumeric_keys
xkb_symbols "nordic_base" {
    include "nokia_vndr/rx-51(english_base)"

    // 1. row
    key <AB08>	{ [	aring,		Aring,		equal,		equal		] };

    // 2. row
    key <AC08>	{ [	k,		K,		semicolon,	semicolon	] };
    key <AC09>	{ [	l,		L,		colon,		colon		] };

    // 3. row
    key <AB01>	{ [	z,		Z,		EuroSign,	EuroSign	] };
    key <AB03>	{ [	c,		C,		sterling,	sterling	] };
    key <LEFT>	{ [	period,		comma,		comma,		comma		] };
};

partial hidden alphanumeric_keys
xkb_symbols "english_base" {

    // 1. row
    key <AD01>	{ [	q,		Q,		1,		1		] };
    key <AD02>	{ [	w,		W,		2,		2		] };
    key <AD03>	{ [	e,		E,		3,		3		] };
    key <AD04>	{ [	r,		R,		4,		4		] };
    key <AD05>	{ [	t,		T,		5,		5		] };
    key <AD06>	{ [	y,		Y,		6,		6		] };
    key <AD07>	{ [	u,		U,		7,		7		] };
    key <AD08>	{ [	i,		I,		8,		8		] };
    key <AD09>	{ [	o,		O,		9,		9		] };
    key <AD10>	{ [	p,		P,		0,		0		] };
    key <AB08>	{ [	comma,		semicolon,	equal,		equal		] };

    // 2. row
    key <AC01>	{ [	a,		A,		asterisk,	asterisk	] };
    key <AC02>	{ [	s,		S,		plus,		plus		] };
    key <AC03>	{ [	d,		D,		numbersign,	numbersign	] };
    key <AC04>	{ [	f,		F,		minus,		minus		] };
    key <AC05>	{ [	g,		G,		underscore,	underscore	] };
    key <AC06>	{ [	h,		H,		parenleft,	parenleft	] };
    key <AC07>	{ [	j,		J,		parenright,	parenright	] };
    key <AC08>	{ [	k,		K,		ampersand,	ampersand	] };
    key <AC09>	{ [	l,		L,		exclam,		exclam		] };
    key <AB09>	{ [	period,		colon,		question,	question	] };

    // 3. row
    key <AB01>	{ [	z,		Z,		sterling,	sterling	] };
    key <AB02>	{ [	x,		X,		dollar,		dollar		] };
    key <AB03>	{ [	c,		C,		EuroSign,	EuroSign	] };
    key <AB04>	{ [	v,		V,		slash,		slash		] };
    key <AB05>	{ [	b,		B,		backslash,	backslash	] };
    key <AB06>	{ [	n,		N,		quotedbl,	quotedbl	] };
    key <AB07>	{ [	m,		M,		apostrophe,	apostrophe	] };
    key <SPCE>	{ [	space,		space,		at,		at		] };
};

partial hidden alphanumeric_keys
xkb_symbols "common_keys" {
    // all other common keys

    key <BKSP>	{ [	BackSpace	] };
    key <TAB>	{ [	Tab		] };

    // broken UI spec.
    key <RTRN>	{ [	KP_Enter	] };

    key <KPEN>	{ [	Return		] };
    key <ESC>	{ [	Escape		] };

    key <FK01>	{ [	F1	] };
    key <FK02>	{ [	F2	] };
    key <FK03>	{ [	F3	] };
    key <FK04>	{ [	F4	] };
    key <FK05>	{ [	F5	] };
    key <FK06>	{ [	F6	] };

    // Swap +/- keys intentionally. The VOL+/VOL- keys are located physically
    // on left/right and up/down in landscape/portrait orientation. This does
    // not feel natural for the user and therefore we want the VOL+/VOL- keys
    // map to -/+.
    //
    // The only exception is an active call in portrait mode where we want to
    // use the real meanings of the keys. This special case and management of
    // +/- keys in general is handled in maemo-statusmenu-volume.
    key <FK07>	{ [	F8	] };
    key <FK08>	{ [	F7	] };

    key <FK09>	{ [	F9	] };
    key <FK10>	{ [	F10	] };
    key <FK11>	{ [	F11	] };
};

partial hidden alphanumeric_keys modifier_keys
xkb_symbols "modifiers" {
    // Shift switches between current level and level+1
    key <LFSH>	{
	type[Group1] = "ONE_LEVEL",
	symbols[Group1] = [	Shift_L	]
    };
    modifier_map Shift { Shift_L };

    // Fn+Ctrl virtual symbol table (Multi_key)
    // Ctrl+Space switches between 1st and 5th level (hardcoded in hildon)
    key <LCTL>	{
	type[Group1] = "FOUR_LEVEL",
	symbols[Group1] = [	Control_L,	Control_L,	Multi_key,	Multi_key	]
    };
    modifier_map Control { Control_L };

    // Fn key (right alt) switches to 3rd level
    include "level3(ralt_switch)"
};

partial hidden alphanumeric_keys
xkb_symbols "arrows_2btns" {
    // rx-51 specific arrows mapping
    // normal 2nd level must not be enumerated to allow text selection with Shift key
    key <DOWN>	{ type[Group1] = "PC_FN_LEVEL2", symbols[Group1] = [	Left,	Up	] };
    key <RGHT>	{ type[Group1] = "PC_FN_LEVEL2", symbols[Group1] = [	Right,	Down	] };
};

partial hidden alphanumeric_keys
xkb_symbols "arrows_4btns" {
    // standard arrows mapping
    // normal 2nd level must not be enumerated to allow text selection with Shift key
    key <UP>	{ type[Group1] = "ONE_LEVEL", symbols[Group1] = [	Up	] };
    key <LEFT>	{ type[Group1] = "ONE_LEVEL", symbols[Group1] = [	Left	] };
    key <DOWN>	{ type[Group1] = "ONE_LEVEL", symbols[Group1] = [	Down	] };
    key <RGHT>	{ type[Group1] = "ONE_LEVEL", symbols[Group1] = [	Right	] };
};

// author: Roman Moravcik
xkb_symbols "sk" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Slovak QWERTZ (CZ HW)";

    // 1. row
    key <AD06>	{ [	z,		Z,		6,		6		] };
    key <AB08>	{ [	dead_acute,	dead_acute,	sterling,	sterling	] };

    // 2. row
    key <AC08>	{ [	k,		K,		semicolon,	semicolon	] };
    key <AC09>	{ [	l,		L,		colon,		colon		] };
    key <AB09>	{ [	ocircumflex,	adiaeresis,	EuroSign,	EuroSign	] };
    key <UP>	{ [	dead_caron,	bar,		dollar,		dollar		] };

    // 3. row
    key <AB01>	{ [	y,		Y,		equal,		equal		] };
    key <AB02>	{ [	x,		X,		slash,		slash		] };
    key <AB03>	{ [	c,		C,		backslash,	backslash	] };
    key <AB04>	{ [	v,		V,		apostrophe,	apostrophe	] };
    key <AB05>	{ [	b,		B,		quotedbl,	quotedbl	] };
    key <AB06>	{ [	n,		N,		exclam,		exclam		] };
    key <AB07>	{ [	m,		M,		question,	question	] };
    key <LEFT>	{ [	period,		Tab,		comma,		comma		] };
};

xkb_symbols "sk_qwerty" {
    include "nokia_vndr/rx-51(sk)"

    name[Group1] = "Slovak QWERTY (CZ hw)";

    // 1. row
    key <AD06>	{ [	y,		Y,		6,		6		] };

    // 3. row
    key <AB01>	{ [	z,		Z,		equal,		equal		] };
};

// author: Roman Moravcik
partial alphanumeric_keys
xkb_symbols "aren" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Arabic";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	Arabic_dad,		Arabic_fatha,		0x1000661,		0x1000661		] };
    key <AD02>	{ symbols[Group2] = [	Arabic_sad,		Arabic_fathatan,	0x1000662,		0x1000662		] };
    key <AD03>	{ symbols[Group2] = [	Arabic_theh,		Arabic_damma,		0x1000663,		0x1000663		] };
    key <AD04>	{ symbols[Group2] = [	Arabic_qaf,		Arabic_dammatan,	0x1000664,		0x1000664		] };
    key <AD05>	{ symbols[Group2] = [	Arabic_feh,		0x100fef9,		0x1000665,		0x1000665		] };
    key <AD06>	{ symbols[Group2] = [	Arabic_ghain,		Arabic_hamzaunderalef,	0x1000666,		0x1000666		] };
    key <AD07>	{ symbols[Group2] = [	Arabic_ain,		rightsinglequotemark,	0x1000667,		0x1000667		] };
    key <AD08>	{ symbols[Group2] = [	Arabic_ha,		Arabic_tehmarbuta,	0x1000668,		0x1000668		] };
    key <AD09>	{ symbols[Group2] = [	Arabic_khah,		division,		0x1000669,		0x1000669		] };
    key <AD10>	{ symbols[Group2] = [	Arabic_hah,		multiply,		0x1000660,		0x1000660		] };
    key <AB08>	{ symbols[Group2] = [	Arabic_jeem,		period,			equal,			equal			] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	Arabic_sheen,		Arabic_kasra,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	Arabic_seen,		Arabic_kasratan,	plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	Arabic_yeh,		Arabic_alefmaksura,	numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Arabic_beh,		Arabic_hamzaonyeh,	minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Arabic_lam,		0x100fef7,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Arabic_alef,		Arabic_hamzaonalef,	parenright,		parenright		] };
    key <AC07>	{ symbols[Group2] = [	Arabic_teh,		Arabic_tatweel,		parenleft,		parenleft		] };
    key <AC08>	{ symbols[Group2] = [	Arabic_noon,		Arabic_comma,		ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	Arabic_meem,		Arabic_semicolon,	exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	Arabic_kaf,		colon,			Arabic_question_mark,	Arabic_question_mark	] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	Arabic_thal,		Arabic_shadda,		sterling,		sterling		] };
    key <AB02>	{ symbols[Group2] = [	Arabic_dal,		Arabic_sukun,		dollar,			dollar			] };
    key <AB03>	{ symbols[Group2] = [	Arabic_waw,		Arabic_hamzaonwaw,	EuroSign,		EuroSign		] };
    key <AB04>	{ symbols[Group2] = [	Arabic_ra,		0x100fef5,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	Arabic_zain,		0x100fefb,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	Arabic_tah,		Arabic_maddaonalef,	quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	Arabic_zah,		Arabic_hamza,		apostrophe,		apostrophe		] };
};

// author: Hessam Farhang
partial alphanumeric_keys
xkb_symbols "faen" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Persian";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	Arabic_dad,		Arabic_sukun,		0x10006f1,		0x1000661		] };
    key <AD02>	{ symbols[Group2] = [	Arabic_sad,		Arabic_dammatan,	0x10006f2,		0x1000662		] };
    key <AD03>	{ symbols[Group2] = [	Arabic_theh,		Arabic_kasratan,	0x10006f3,		0x1000663		] };
    key <AD04>	{ symbols[Group2] = [	Arabic_qaf,		Arabic_fathatan,	0x10006f4,		0x1000664		] };
    key <AD05>	{ symbols[Group2] = [	Arabic_feh,		Arabic_damma,		0x10006f5,		0x1000665		] };
    key <AD06>	{ symbols[Group2] = [	Arabic_ghain,		Arabic_kasra,		0x10006f6,		0x1000666		] };
    key <AD07>	{ symbols[Group2] = [	Arabic_ain,		Arabic_fatha,		0x10006f7,		0x1000667		] };
    key <AD08>	{ symbols[Group2] = [	Arabic_heh,		Arabic_shadda,		0x10006f8,		0x1000668		] };
    key <AD09>	{ symbols[Group2] = [	Arabic_khah,		0x10006af,		0x10006f9,		0x1000669		] };
    key <AD10>	{ symbols[Group2] = [	Arabic_hah,		0x1000686,		0x10006f0,		0x1000660		] };
    key <AB08>	{ symbols[Group2] = [	Arabic_jeem,		Arabic_comma,		comma,			Arabic_semicolon	] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	Arabic_sheen,		Arabic_hamzaonwaw,	asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	Arabic_seen,		Arabic_hamzaonyeh,	plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	0x10006cc,		period,			numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Arabic_beh,		colon,			minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Arabic_lam,		Arabic_hamzaonalef,	underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Arabic_alef,		Arabic_maddaonalef,	parenleft,		parenleft		] };
    key <AC07>	{ symbols[Group2] = [	Arabic_teh,		Arabic_tehmarbuta,	parenright,		parenright		] };
    key <AC08>	{ symbols[Group2] = [	Arabic_noon,		guillemotright,		ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	Arabic_meem,		guillemotleft,		exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	0x10006a9,		Arabic_waw,		Arabic_question_mark,	colon			] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	Arabic_zah,		Arabic_kaf,		sterling,		period			] };
    key <AB02>	{ symbols[Group2] = [	Arabic_tah,		0x1000653,		dollar,			dollar			] };
    key <AB03>	{ symbols[Group2] = [	Arabic_zain,		0x1000698,		EuroSign,		EuroSign		] };
    key <AB04>	{ symbols[Group2] = [	Arabic_ra,		0x1000670,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	Arabic_thal,		0x100200c,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	Arabic_dal,		0x1000654,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	0x100067e,		Arabic_hamza,		apostrophe,		apostrophe		] };
};

// author: Jaroslav Poriz
xkb_symbols "dv" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "Dvorak";

    // 1. row
    key <AD01>	{ [	colon,		semicolon,	1,		1		] };
    key <AD02>	{ [	w,		W,		2,		2		] };
    key <AD03>	{ [	v,		V,		3,		3		] };
    key <AD04>	{ [	p,		P,		4,		4		] };
    key <AD05>	{ [	y,		Y,		5,		5		] };
    key <AD06>	{ [	f,		F,		6,		6		] };
    key <AD07>	{ [	g,		G,		7,		7		] };
    key <AD08>	{ [	c,		C,		8,		8		] };
    key <AD09>	{ [	r,		R,		9,		9		] };
    key <AD10>	{ [	l,		L,		0,		0		] };
    key <AB08>	{ [	period,		comma,		equal,		equal		] };

    // 2. row
    key <AC01>	{ [	a,		A,		asterisk,	asterisk	] };
    key <AC02>	{ [	o,		O,		plus,		plus		] };
    key <AC03>	{ [	e,		E,		numbersign,	numbersign	] };
    key <AC04>	{ [	u,		U,		minus,		minus		] };
    key <AC05>	{ [	i,		I,		underscore,	underscore	] };
    key <AC06>	{ [	d,		D,		exclam,		parenleft	] };
    key <AC07>	{ [	h,		H,		question,	parenright	] };
    key <AC08>	{ [	t,		T,		ampersand,	ampersand	] };
    key <AC09>	{ [	n,		N,		less,		exclam		] };
    key <AB09>	{ [	s,		S,		greater,	question	] };

    // 3. row
    key <AB01>	{ [	z,		Z,		asciitilde,	asciitilde	] };
    key <AB02>	{ [	q,		Q,		dollar,		dollar		] };
    key <AB03>	{ [	j,		J,		backslash,	bar		] };
    key <AB04>	{ [	k,		K,		grave,		slash		] };
    key <AB05>	{ [	x,		X,		parenleft,	backslash	] };
    key <AB06>	{ [	b,		B,		parenright,	quotedbl	] };
    key <AB07>	{ [	m,		M,		apostrophe,	apostrophe	] };
    key <SPCE>	{ [	space,		slash,		at,		at		] };
};

// author: Porfyras <porfyras@gmail.com>
// author: Roman Moravcik
// author: Faidon Liambotis
partial alphanumeric_keys
xkb_symbols "gr" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Greek";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	period,			colon,			1,			1		] };
    key <AD02>	{ symbols[Group2] = [	Greek_finalsmallsigma,	Greek_SIGMA,		2,			2		] };
    key <AD03>	{ symbols[Group2] = [	Greek_epsilon,		Greek_EPSILON,		3,			3		] };
    key <AD04>	{ symbols[Group2] = [	Greek_rho,		Greek_RHO,		4,			4		] };
    key <AD05>	{ symbols[Group2] = [	Greek_tau,		Greek_TAU,		5,			5		] };
    key <AD06>	{ symbols[Group2] = [	Greek_upsilon,		Greek_UPSILON,		6,			6		] };
    key <AD07>	{ symbols[Group2] = [	Greek_theta,		Greek_THETA,		7,			7		] };
    key <AD08>	{ symbols[Group2] = [	Greek_iota,		Greek_IOTA,		8,			8		] };
    key <AD09>	{ symbols[Group2] = [	Greek_omicron,		Greek_OMICRON,		9,			9		] };
    key <AD10>	{ symbols[Group2] = [	Greek_pi,		Greek_PI,		0,			0		] };
    key <AB08>	{ symbols[Group2] = [	comma,			semicolon,		equal,			equal		] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	Greek_alpha,		Greek_ALPHA,		asterisk,		asterisk	] };
    key <AC02>	{ symbols[Group2] = [	Greek_sigma,		Greek_SIGMA,		plus,			plus		] };
    key <AC03>	{ symbols[Group2] = [	Greek_delta,		Greek_DELTA,		numbersign,		numbersign	] };
    key <AC04>	{ symbols[Group2] = [	Greek_phi,		Greek_PHI,		minus,			minus		] };
    key <AC05>	{ symbols[Group2] = [	Greek_gamma,		Greek_GAMMA,		underscore,		underscore	] };
    key <AC06>	{ symbols[Group2] = [	Greek_eta,		Greek_ETA,		parenleft,		parenleft	] };
    key <AC07>	{ symbols[Group2] = [	Greek_xi,		Greek_XI,		parenright,		parenright	] };
    key <AC08>	{ symbols[Group2] = [	Greek_kappa,		Greek_KAPPA,		ampersand,		ampersand	] };
    key <AC09>	{ symbols[Group2] = [	Greek_lamda,		Greek_LAMDA,		exclam,			exclam		] };
    key <AB09>	{ symbols[Group2] = [	dead_acute,		dead_diaeresis,		question,		question	] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	Greek_zeta,		Greek_ZETA,		sterling,		sterling	] };
    key <AB02>	{ symbols[Group2] = [	Greek_chi,		Greek_CHI,		dollar,			dollar		] };
    key <AB03>	{ symbols[Group2] = [	Greek_psi,		Greek_PSI,		EuroSign,		EuroSign	] };
    key <AB04>	{ symbols[Group2] = [	Greek_omega,		Greek_OMEGA,		slash,			slash		] };
    key <AB05>	{ symbols[Group2] = [	Greek_beta,		Greek_BETA,		backslash,		backslash	] };
    key <AB06>	{ symbols[Group2] = [	Greek_nu,		Greek_NU,		quotedbl,		quotedbl	] };
    key <AB07>	{ symbols[Group2] = [	Greek_mu,		Greek_MU,		apostrophe,		apostrophe	] };
};

// author: Ognian Samokovliyski
// author: Kostadin Bashev
// author: Roman Moravcik
partial alphanumeric_keys
xkb_symbols "bg_phonetic" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Bulgarian - Phonetic";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	Cyrillic_ya,		Cyrillic_YA,		1,			1			] };
    key <AD02>	{ symbols[Group2] = [	Cyrillic_ve,		Cyrillic_VE,		2,			2			] };
    key <AD03>	{ symbols[Group2] = [	Cyrillic_ie,		Cyrillic_IE,		3,			3			] };
    key <AD04>	{ symbols[Group2] = [	Cyrillic_er,		Cyrillic_ER,		4,			4			] };
    key <AD05>	{ symbols[Group2] = [	Cyrillic_te,		Cyrillic_TE,		5,			5			] };
    key <AD06>	{ symbols[Group2] = [	Cyrillic_hardsign,	Cyrillic_HARDSIGN,	6,			6			] };
    key <AD07>	{ symbols[Group2] = [	Cyrillic_u,		Cyrillic_U,		7,			7			] };
    key <AD08>	{ symbols[Group2] = [	Cyrillic_i,		Cyrillic_I,		8,			8			] };
    key <AD09>	{ symbols[Group2] = [	Cyrillic_o,		Cyrillic_O,		9,			9			] };
    key <AD10>	{ symbols[Group2] = [	Cyrillic_pe,		Cyrillic_PE,		0,			0			] };
    key <AB08>	{ symbols[Group2] = [	comma,			semicolon,		equal,			equal			] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	Cyrillic_a,		Cyrillic_A,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	Cyrillic_es,		Cyrillic_ES,		plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	Cyrillic_de,		Cyrillic_DE,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Cyrillic_ef,		Cyrillic_EF,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Cyrillic_ghe,		Cyrillic_GHE,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Cyrillic_ha,		Cyrillic_HA,		parenleft,		parenleft		] };
    key <AC07>	{ symbols[Group2] = [	Cyrillic_shorti,	Cyrillic_SHORTI,	parenright,		parenright		] };
    key <AC08>	{ symbols[Group2] = [	Cyrillic_ka,		Cyrillic_KA,		ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	Cyrillic_el,		Cyrillic_EL,		exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	period,			colon,			question,		question		] };
    key <UP>	{ symbols[Group2] = [	Cyrillic_yu,		Cyrillic_YU,		Up,			Up			] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	Cyrillic_ze,		Cyrillic_ZE,		sterling,		sterling		] };
    key <AB02>	{ symbols[Group2] = [	Cyrillic_softsign,	Cyrillic_SOFTSIGN,	dollar,			dollar			] };
    key <AB03>	{ symbols[Group2] = [	Cyrillic_tse,		Cyrillic_TSE,		EuroSign,		EuroSign		] };
    key <AB04>	{ symbols[Group2] = [	Cyrillic_zhe,		Cyrillic_ZHE,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	Cyrillic_be,		Cyrillic_BE,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	Cyrillic_en,		Cyrillic_EN,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	Cyrillic_em,		Cyrillic_EM,		apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group2] = [	Cyrillic_sha,		Cyrillic_SHA,		Left,			Left			] };
    key <DOWN>	{ symbols[Group2] = [	Cyrillic_shcha,		Cyrillic_SHCHA,		Down,			Down			] };
    key <RGHT>	{ symbols[Group2] = [	Cyrillic_che,		Cyrillic_CHE,		Right,			Right			] };
};

// author: Nikola Kovachevski
partial alphanumeric_keys
xkb_symbols "mk" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Macedonian";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	Cyrillic_lje,		Cyrillic_LJE,		1,			1			] };
    key <AD02>	{ symbols[Group2] = [	Cyrillic_nje,		Cyrillic_NJE,		2,			2			] };
    key <AD03>	{ symbols[Group2] = [	Cyrillic_ie,		Cyrillic_IE,		3,			3			] };
    key <AD04>	{ symbols[Group2] = [	Cyrillic_er,		Cyrillic_ER,		4,			4			] };
    key <AD05>	{ symbols[Group2] = [	Cyrillic_te,		Cyrillic_TE,		5,			5			] };
    key <AD06>	{ symbols[Group2] = [	Macedonia_dse,		Macedonia_DSE,		6,			6			] };
    key <AD07>	{ symbols[Group2] = [	Cyrillic_u,		Cyrillic_U,		7,			7			] };
    key <AD08>	{ symbols[Group2] = [	Cyrillic_i,		Cyrillic_I,		8,			8			] };
    key <AD09>	{ symbols[Group2] = [	Cyrillic_o,		Cyrillic_O,		9,			9			] };
    key <AD10>	{ symbols[Group2] = [	Cyrillic_pe,		Cyrillic_PE,		0,			0			] };
    key <AB08>	{ symbols[Group2] = [	Cyrillic_sha,		Cyrillic_SHA,		equal,			equal			] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	Cyrillic_a,		Cyrillic_A,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	Cyrillic_es,		Cyrillic_ES,		plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	Cyrillic_de,		Cyrillic_DE,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Cyrillic_ef,		Cyrillic_EF,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Cyrillic_ghe,		Cyrillic_GHE,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Cyrillic_ha,		Cyrillic_HA,		parenleft,		parenleft		] };
    key <AC07>	{ symbols[Group2] = [	Cyrillic_je,		Cyrillic_JE,		parenright,		parenright		] };
    key <AC08>	{ symbols[Group2] = [	Cyrillic_ka,		Cyrillic_KA,		ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	Cyrillic_el,		Cyrillic_EL,		exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	period,			comma,			question,		question		] };
    key <UP>	{ symbols[Group2] = [	Cyrillic_che,		Cyrillic_CHE,		Up,			Up			] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	Cyrillic_ze,		Cyrillic_ZE,		colon,			colon			] };
    key <AB02>	{ symbols[Group2] = [	Cyrillic_dzhe,		Cyrillic_DZHE,		semicolon,		semicolon		] };
    key <AB03>	{ symbols[Group2] = [	Cyrillic_tse,		Cyrillic_TSE,		EuroSign,		EuroSign		] };
    key <AB04>	{ symbols[Group2] = [	Cyrillic_ve,		Cyrillic_VE,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	Cyrillic_be,		Cyrillic_BE,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	Cyrillic_en,		Cyrillic_EN,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	Cyrillic_em,		Cyrillic_EM,		apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group2] = [	Macedonia_kje,		Macedonia_KJE,		Left,			Left			] };
    key <DOWN>	{ symbols[Group2] = [	Cyrillic_zhe,		Cyrillic_ZHE,		Down,			Down			] };
    key <RGHT>	{ symbols[Group2] = [	Macedonia_gje,		Macedonia_GJE,		Right,			Right			] };
};

// author: Roman Moravcik
partial alphanumeric_keys
xkb_symbols "ru_phonetic" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "Russian - Phonetic";
    name[Group2] = "U.S. English";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group1] = [	Cyrillic_ya,		Cyrillic_YA,		1,			1			] };
    key <AD02>	{ symbols[Group1] = [	Cyrillic_ve,		Cyrillic_VE,		2,			2			] };
    key <AD03>	{ symbols[Group1] = [	Cyrillic_ie,		Cyrillic_IE,		3,			3			] };
    key <AD04>	{ symbols[Group1] = [	Cyrillic_er,		Cyrillic_ER,		4,			4			] };
    key <AD05>	{ symbols[Group1] = [	Cyrillic_te,		Cyrillic_TE,		5,			5			] };
    key <AD06>	{ symbols[Group1] = [	Cyrillic_yeru,		Cyrillic_YERU,		6,			6			] };
    key <AD07>	{ symbols[Group1] = [	Cyrillic_u,		Cyrillic_U,		7,			7			] };
    key <AD08>	{ symbols[Group1] = [	Cyrillic_i,		Cyrillic_I,		8,			8			] };
    key <AD09>	{ symbols[Group1] = [	Cyrillic_o,		Cyrillic_O,		9,			9			] };
    key <AD10>	{ symbols[Group1] = [	Cyrillic_pe,		Cyrillic_PE,		0,			0			] };
    key <AB08>  { symbols[Group1] = [	Cyrillic_sha,		Cyrillic_SHA,		Cyrillic_shcha,		Cyrillic_SHCHA		] };

    key <AD01>	{ symbols[Group2] = [	q,			Q,			1,			1			] };
    key <AD02>	{ symbols[Group2] = [	w,			W,			2,			2			] };
    key <AD03>	{ symbols[Group2] = [	e,			E,			3,			3			] };
    key <AD04>	{ symbols[Group2] = [	r,			R,			4,			4			] };
    key <AD05>	{ symbols[Group2] = [	t,			T,			5,			5			] };
    key <AD06>	{ symbols[Group2] = [	y,			Y,			6,			6			] };
    key <AD07>	{ symbols[Group2] = [	u,			U,			7,			7			] };
    key <AD08>	{ symbols[Group2] = [	i,			I,			8,			8			] };
    key <AD09>	{ symbols[Group2] = [	o,			O,			9,			9			] };
    key <AD10>	{ symbols[Group2] = [	p,			P,			0,			0			] };
    key <AB08>  { symbols[Group2] = [	Cyrillic_sha,		Cyrillic_SHA,		Cyrillic_shcha,		Cyrillic_SHCHA		] };

    // 2. row
    key <AC01>	{ symbols[Group1] = [	Cyrillic_a,		Cyrillic_A,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group1] = [	Cyrillic_es,		Cyrillic_ES,		plus,			plus			] };
    key <AC03>	{ symbols[Group1] = [	Cyrillic_de,		Cyrillic_DE,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group1] = [	Cyrillic_ef,		Cyrillic_EF,		minus,			minus			] };
    key <AC05>	{ symbols[Group1] = [	Cyrillic_ghe,		Cyrillic_GHE,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group1] = [	Cyrillic_ha,		Cyrillic_HA,		exclam,			exclam			] };
    key <AC07>	{ symbols[Group1] = [	Cyrillic_shorti,	Cyrillic_SHORTI,	question,		question		] };
    key <AC08>	{ symbols[Group1] = [	Cyrillic_ka,		Cyrillic_KA,		semicolon,		semicolon		] };
    key <AC09>	{ symbols[Group1] = [	Cyrillic_el,		Cyrillic_EL,		colon,			colon			] };
    key <AB09>	{ symbols[Group1] = [	Cyrillic_yu,		Cyrillic_YU,		comma,			comma			] };
    key <UP>	{ symbols[Group1] = [	Cyrillic_e,		Cyrillic_E,		period,			period			] };

    key <AC01>	{ symbols[Group2] = [	a,			A,			asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	s,			S,			plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	d,			D,			numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	f,			F,			minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	g,			G,			underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	h,			H,			exclam,			exclam			] };
    key <AC07>	{ symbols[Group2] = [	j,			J,			question,		question		] };
    key <AC08>	{ symbols[Group2] = [	k,			K,			semicolon,		semicolon		] };
    key <AC09>	{ symbols[Group2] = [	l,			L,			colon,			colon			] };
    key <AB09>	{ symbols[Group2] = [	comma,			comma,			comma,			comma			] };
    key <UP>	{ symbols[Group2] = [	period,			period,			period,			period			] };

    // 3. row
    key <AB01>	{ symbols[Group1] = [	Cyrillic_ze,		Cyrillic_ZE,		dollar,			dollar			] };
    key <AB02>	{ symbols[Group1] = [	Cyrillic_softsign,	Cyrillic_SOFTSIGN,	EuroSign,		EuroSign		] };
    key <AB03>	{ symbols[Group1] = [	Cyrillic_tse,		Cyrillic_TSE,		slash,			slash			] };
    key <AB04>	{ symbols[Group1] = [	Cyrillic_zhe,		Cyrillic_ZHE,		parenleft,		parenleft		] };
    key <AB05>	{ symbols[Group1] = [	Cyrillic_be,		Cyrillic_BE,		parenright,		parenright		] };
    key <AB06>	{ symbols[Group1] = [	Cyrillic_en,		Cyrillic_EN,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group1] = [	Cyrillic_em,		Cyrillic_EM,		apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group1] = [	Cyrillic_che,		Cyrillic_CHE,		Cyrillic_hardsign,	Cyrillic_HARDSIGN	] };

    key <AB01>	{ symbols[Group2] = [	z,			Z,			dollar,			dollar			] };
    key <AB02>	{ symbols[Group2] = [	x,			X,			EuroSign,		EuroSign		] };
    key <AB03>	{ symbols[Group2] = [	c,			C,			slash,			slash			] };
    key <AB04>	{ symbols[Group2] = [	v,			V,			parenleft,		parenleft		] };
    key <AB05>	{ symbols[Group2] = [	b,			B,			parenright,		parenright		] };
    key <AB06>	{ symbols[Group2] = [	n,			N,			quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	m,			M,			apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group2] = [	Cyrillic_che,		Cyrillic_CHE,		Cyrillic_hardsign,	Cyrillic_HARDSIGN	] };
};

// author: Roman Moravcik
partial alphanumeric_keys
xkb_symbols "he_phonetic" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Hebrew - Phonetic";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	hebrew_qoph,		hebrew_qoph,		1,			1			] };
    key <AD02>	{ symbols[Group2] = [	hebrew_waw,		hebrew_waw,		2,			2			] };
    key <AD03>	{ symbols[Group2] = [	hebrew_aleph,		hebrew_aleph,		3,			3			] };
    key <AD04>	{ symbols[Group2] = [	hebrew_resh,		hebrew_resh,		4,			4			] };
    key <AD05>	{ symbols[Group2] = [	hebrew_taw,		hebrew_tet,		5,			5			] };
    key <AD06>	{ symbols[Group2] = [	hebrew_ayin,		hebrew_ayin,		6,			6			] };
    key <AD07>	{ symbols[Group2] = [	hebrew_waw,		hebrew_waw,		7,			7			] };
    key <AD08>	{ symbols[Group2] = [	hebrew_yod,		hebrew_yod,		8,			8			] };
    key <AD09>	{ symbols[Group2] = [	hebrew_samech,		hebrew_samech,		9,			9			] };
    key <AD10>	{ symbols[Group2] = [	hebrew_pe,		hebrew_finalpe,		0,			0			] };
    key <AB08>	{ symbols[Group2] = [	comma,          	semicolon,		equal,			equal			] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	hebrew_aleph,		hebrew_aleph,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	hebrew_shin,		hebrew_shin,		plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	hebrew_dalet,		hebrew_dalet,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	hebrew_pe,		hebrew_finalpe,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	hebrew_gimel,		hebrew_gimel,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	hebrew_he,		hebrew_he,		parenleft,		parenleft		] };
    key <AC07>	{ symbols[Group2] = [	hebrew_yod,		hebrew_yod,		parenright,		parenright		] };
    key <AC08>	{ symbols[Group2] = [	hebrew_kaph,		hebrew_finalkaph,	ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	hebrew_lamed,		hebrew_lamed,		exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	period,			colon,			question,		question		] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	hebrew_zain,		hebrew_zain,		sterling,       	sterling		] };
    key <AB02>	{ symbols[Group2] = [	hebrew_chet,		hebrew_chet,		dollar,         	dollar			] };
    key <AB03>	{ symbols[Group2] = [	hebrew_zade,		hebrew_finalzade,	EuroSign,		EuroSign		] };
    key <AB04>	{ symbols[Group2] = [	hebrew_waw,		hebrew_waw,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	hebrew_bet,		hebrew_bet,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	hebrew_nun,		hebrew_finalnun,	quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	hebrew_mem,		hebrew_finalmem,	apostrophe,		apostrophe		] };
};

// author: Roman Moravcik
partial alphanumeric_keys
xkb_symbols "he" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Hebrew";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	hebrew_taw,		hebrew_taw,		1,			1			] };
    key <AD02>	{ symbols[Group2] = [	hebrew_finalzade,	hebrew_finalzade,	2,			2			] };
    key <AD03>	{ symbols[Group2] = [	hebrew_qoph,		hebrew_qoph,		3,			3			] };
    key <AD04>	{ symbols[Group2] = [	hebrew_resh,		hebrew_resh,		4,			4			] };
    key <AD05>	{ symbols[Group2] = [	hebrew_aleph,		hebrew_aleph,		5,			5			] };
    key <AD06>	{ symbols[Group2] = [	hebrew_tet,		hebrew_tet,		6,			6			] };
    key <AD07>	{ symbols[Group2] = [	hebrew_waw,		hebrew_waw,		7,			7			] };
    key <AD08>	{ symbols[Group2] = [	hebrew_finalnun,	hebrew_finalnun,	8,			8			] };
    key <AD09>	{ symbols[Group2] = [	hebrew_finalmem,	hebrew_finalmem,	9,			9			] };
    key <AD10>	{ symbols[Group2] = [	hebrew_pe,		hebrew_pe,		0,			0			] };
    key <AB08>	{ symbols[Group2] = [	comma,			semicolon,		equal,			equal			] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	hebrew_shin,		hebrew_shin,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	hebrew_dalet,		hebrew_dalet,		plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	hebrew_gimel,		hebrew_gimel,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	hebrew_kaph,		hebrew_kaph,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	hebrew_ayin,		hebrew_ayin,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	hebrew_yod,		hebrew_yod,		parenleft,		parenleft		] };
    key <AC07>	{ symbols[Group2] = [	hebrew_chet,		hebrew_chet,		parenright,		parenright		] };
    key <AC08>	{ symbols[Group2] = [	hebrew_lamed,		hebrew_lamed,		ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	hebrew_finalkaph,	period,			exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	hebrew_finalpe,		colon,			question,		question		] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	hebrew_zain,		hebrew_zain,		sterling,		sterling		] };
    key <AB02>	{ symbols[Group2] = [	hebrew_samech,		hebrew_samech,		dollar,			dollar			] };
    key <AB03>	{ symbols[Group2] = [	hebrew_bet,		hebrew_bet,		EuroSign,		EuroSign		] };
    key <AB04>	{ symbols[Group2] = [	hebrew_he,		hebrew_he,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	hebrew_nun,		hebrew_nun,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	hebrew_mem,		hebrew_mem,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	hebrew_zade,		hebrew_zade,		apostrophe,		apostrophe		] };
};

// author: David Gegechkori
partial alphanumeric_keys
xkb_symbols "ge" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Georgian - Latin";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
   key <AD01> { symbols[Group2] = [ 0x010010e5,		Q,		1,		1		] };
   key <AD02> { symbols[Group2] = [ 0x010010ec, 	0x010010ed, 	2,		2		] };
   key <AD03> { symbols[Group2] = [ 0x010010d4,		E,		3,		3		] };
   key <AD04> { symbols[Group2] = [ 0x010010e0,		0x010010e6,	4,		4		] };
   key <AD05> { symbols[Group2] = [ 0x010010e2,		0x010010d7,	5,		5		] };
   key <AD06> { symbols[Group2] = [ 0x010010e7,		Y,		6,		6		] };
   key <AD07> { symbols[Group2] = [ 0x010010e3,		U,		7,		7		] };
   key <AD08> { symbols[Group2] = [ 0x010010d8,		I,		8,		8		] };
   key <AD09> { symbols[Group2] = [ 0x010010dd,		O,		9,		9		] };
   key <AD10> { symbols[Group2] = [ 0x010010de,		P,		0,		0		] };
   key <AB08> { symbols[Group2] = [ comma,		semicolon,	equal,		equal		] };

    // 2. row
   key <AC01> { symbols[Group2] = [ 0x010010d0,		A,		asterisk,	asterisk	] };
   key <AC02> { symbols[Group2] = [ 0x010010e1,		0x010010e8,	plus,		plus		] };
   key <AC03> { symbols[Group2] = [ 0x010010d3,		D,		numbersign,	numbersign	] };
   key <AC04> { symbols[Group2] = [ 0x010010e4,		F,		minus,		minus   	] };
   key <AC05> { symbols[Group2] = [ 0x010010d2,		G,		underscore,	underscore   	] };
   key <AC06> { symbols[Group2] = [ 0x010010f0,		H,		parenleft,	parenleft 	] };
   key <AC07> { symbols[Group2] = [ 0x010010ef,		0x010010df,	parenright,	parenright 	] };
   key <AC08> { symbols[Group2] = [ 0x010010d9,		K,		ampersand,	ampersand	] };
   key <AC09> { symbols[Group2] = [ 0x010010da,		L,		exclam,		exclam		] };
   key <AB09> { symbols[Group2] = [	period,		colon,		question,	question	] };

    // 3. row
   key <AB01> { symbols[Group2] = [ 0x010010d6,		0x010010eb,	sterling,	sterling	] };
   key <AB02> { symbols[Group2] = [ 0x010010ee,		X,		dollar,		dollar 		] };
   key <AB03> { symbols[Group2] = [ 0x010010ea,		0x010010e9,	EuroSign,	EuroSign 	] };
   key <AB04> { symbols[Group2] = [ 0x010010d5,		V,		slash,		slash   	] };
   key <AB05> { symbols[Group2] = [ 0x010010d1,		B,		backslash,	backslash	] };
   key <AB06> { symbols[Group2] = [ 0x010010dc,		N,		quotedbl,	quotedbl	] };
   key <AB07> { symbols[Group2] = [ 0x010010db,		M,		apostrophe,	apostrophe	] };
};

// author: Eriks Jansons
partial alphanumeric_keys
xkb_symbols "lv" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Latvian";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>  { symbols[Group2] = [   q,                      Q,                      1,                      1                       ] };
    key <AD02>  { symbols[Group2] = [   w,                      W,                      2,                      2                       ] };
    key <AD03>  { symbols[Group2] = [   emacron,                Emacron,                3,                      3                       ] };
    key <AD04>  { symbols[Group2] = [   rcedilla,               Rcedilla,               4,                      4                       ] };
    key <AD05>  { symbols[Group2] = [   t,                      T,                      5,                      5                       ] };
    key <AD06>  { symbols[Group2] = [   y,                      Y,                      6,                      6                       ] };
    key <AD07>  { symbols[Group2] = [   umacron,                Umacron,                7,                      7                       ] };
    key <AD08>  { symbols[Group2] = [   imacron,                Imacron,                8,                      8                       ] };
    key <AD09>  { symbols[Group2] = [   omacron,                Omacron,                9,                      9                       ] };
    key <AD10>  { symbols[Group2] = [   p,                      P,                      0,                      0                       ] };
    key <AB08>  { symbols[Group1] = [   ISO_Group_Latch,        semicolon,              equal,                  equal], 
                  symbols[Group2] = [   comma,                  semicolon,              equal,                  equal                   ] };

    // 2. row
    key <AC01>  { symbols[Group2] = [   amacron,                Amacron,                asterisk,               asterisk                ] };
    key <AC02>  { symbols[Group2] = [   scaron,                 Scaron,                 plus,                   plus                    ] };
    key <AC03>  { symbols[Group2] = [   d,                      D,                      numbersign,             numbersign              ] };
    key <AC04>  { symbols[Group2] = [   f,                      F,                      minus,                  minus                   ] };
    key <AC05>  { symbols[Group2] = [   gcedilla,               Gcedilla,               underscore,             underscore              ] };
    key <AC06>  { symbols[Group2] = [   h,                      H,                      parenleft,              parenleft               ] };
    key <AC07>  { symbols[Group2] = [   j,                      J,                      parenright,             parenright              ] };
    key <AC08>  { symbols[Group2] = [   kcedilla,               Kcedilla,               ampersand,              ampersand               ] };
    key <AC09>  { symbols[Group2] = [   lcedilla,               Lcedilla,               exclam,                 exclam                  ] };
    key <AB09>  { symbols[Group2] = [   period,                 colon,                  question,               question                ] };

    // 3. row
    key <AB01>  { symbols[Group2] = [   zcaron,                 Zcaron,                 sterling,               sterling                ] };
    key <AB02>  { symbols[Group2] = [   x,                      X,                      dollar,                 dollar                  ] };
    key <AB03>  { symbols[Group2] = [   ccaron,                 Ccaron,                 EuroSign,               EuroSign                ] };
    key <AB04>  { symbols[Group2] = [   v,                      V,                      slash,                  slash                   ] };
    key <AB05>  { symbols[Group2] = [   b,                      B,                      backslash,              backslash               ] };
    key <AB06>  { symbols[Group2] = [   ncedilla,               Ncedilla,               quotedbl,               quotedbl                ] };
    key <AB07>  { symbols[Group2] = [   m,                      M,                      apostrophe,             apostrophe              ] };
};

// author: Aleksandar Urosevic
partial alphanumeric_keys
xkb_symbols "sr_cyrillic" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Serbian - Cyrillic";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	Cyrillic_lje,		Cyrillic_LJE,		1,			1			] };
    key <AD02>	{ symbols[Group2] = [	Cyrillic_nje,		Cyrillic_NJE,		2,			2			] };
    key <AD03>	{ symbols[Group2] = [	Cyrillic_ie,		Cyrillic_IE,		3,			3			] };
    key <AD04>	{ symbols[Group2] = [	Cyrillic_er,		Cyrillic_ER,		4,			4			] };
    key <AD05>	{ symbols[Group2] = [	Cyrillic_te,		Cyrillic_TE,		5,			5			] };
    key <AD06>	{ symbols[Group2] = [	Cyrillic_ze,		Cyrillic_ZE,		6,			6			] };
    key <AD07>	{ symbols[Group2] = [	Cyrillic_u,		Cyrillic_U,		7,			7			] };
    key <AD08>	{ symbols[Group2] = [	Cyrillic_i,		Cyrillic_I,		8,			8			] };
    key <AD09>	{ symbols[Group2] = [	Cyrillic_o,		Cyrillic_O,		9,			9			] };
    key <AD10>	{ symbols[Group2] = [	Cyrillic_pe,		Cyrillic_PE,		0,			0			] };
    key <AB08>	{ symbols[Group2] = [	Cyrillic_sha,		Cyrillic_SHA,		equal,			equal			] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	Cyrillic_a,		Cyrillic_A,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	Cyrillic_es,		Cyrillic_ES,		plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	Cyrillic_de,		Cyrillic_DE,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Cyrillic_ef,		Cyrillic_EF,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Cyrillic_ghe,		Cyrillic_GHE,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Cyrillic_ha,		Cyrillic_HA,		parenleft,		parenleft		] };
    key <AC07>	{ symbols[Group2] = [	Cyrillic_je,		Cyrillic_JE,		parenright,		parenright		] };
    key <AC08>	{ symbols[Group2] = [	Cyrillic_ka,		Cyrillic_KA,		ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	Cyrillic_el,		Cyrillic_EL,		exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	period,			comma,			question,		question		] };
    key <UP>	{ symbols[Group2] = [	Serbian_dje,		Serbian_DJE,		Up,			Up			] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	Cyrillic_ze,		Cyrillic_ZE,		colon,			colon			] };
    key <AB02>	{ symbols[Group2] = [	Cyrillic_dzhe,		Cyrillic_DZHE,		semicolon,		semicolon		] };
    key <AB03>	{ symbols[Group2] = [	Cyrillic_tse,		Cyrillic_TSE,		EuroSign,		EuroSign		] };
    key <AB04>	{ symbols[Group2] = [	Cyrillic_ve,		Cyrillic_VE,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	Cyrillic_be,		Cyrillic_BE,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	Cyrillic_en,		Cyrillic_EN,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	Cyrillic_em,		Cyrillic_EM,		apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group2] = [	Cyrillic_che,		Cyrillic_CHE,		Left,			Left			] };
    key <DOWN>	{ symbols[Group2] = [	Serbian_tshe,		Serbian_TSHE,		Down,			Down			] };
    key <RGHT>	{ symbols[Group2] = [	Cyrillic_zhe,		Cyrillic_ZHE,		Right,			Right			] };
};

// author: Roman Moravcik
// author: Tarick
partial alphanumeric_keys
xkb_symbols "ua_phonetic" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Ukrainian - Phonetic";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group1] = [	q,			Q,			1,			1			] };
    key <AD02>	{ symbols[Group1] = [	w,			W,			2,			2			] };
    key <AD03>	{ symbols[Group1] = [	e,			E,			3,			3			] };
    key <AD04>	{ symbols[Group1] = [	r,			R,			4,			4			] };
    key <AD05>	{ symbols[Group1] = [	t,			T,			5,			5			] };
    key <AD06>	{ symbols[Group1] = [	y,			Y,			6,			6			] };
    key <AD07>	{ symbols[Group1] = [	u,			U,			7,			7			] };
    key <AD08>	{ symbols[Group1] = [	i,			I,			8,			8			] };
    key <AD09>	{ symbols[Group1] = [	o,			O,			9,			9			] };
    key <AD10>	{ symbols[Group1] = [	p,			P,			0,			0			] };
    key <AB08>  { symbols[Group1] = [	Cyrillic_sha,		Cyrillic_SHA,		Cyrillic_shcha,		Cyrillic_SHCHA		] };

    key <AD01>	{ symbols[Group2] = [	Cyrillic_ya,		Cyrillic_YA,		1,			1			] };
    key <AD02>	{ symbols[Group2] = [	Cyrillic_ve,		Cyrillic_VE,		2,			2			] };
    key <AD03>	{ symbols[Group2] = [	Cyrillic_ie,		Cyrillic_IE,		3,			3			] };
    key <AD04>	{ symbols[Group2] = [	Cyrillic_er,		Cyrillic_ER,		4,			4			] };
    key <AD05>	{ symbols[Group2] = [	Cyrillic_te,		Cyrillic_TE,		5,			5			] };
    key <AD06>	{ symbols[Group2] = [	Cyrillic_i,		Cyrillic_I,		6,			6			] };
    key <AD07>	{ symbols[Group2] = [	Cyrillic_u,		Cyrillic_U,		7,			7			] };
    key <AD08>	{ symbols[Group2] = [	Ukrainian_i,		Ukrainian_I,		8,			8			] };
    key <AD09>	{ symbols[Group2] = [	Cyrillic_o,		Cyrillic_O,		9,			9			] };
    key <AD10>	{ symbols[Group2] = [	Cyrillic_pe,		Cyrillic_PE,		0,			0			] };
    key <AB08>  { symbols[Group2] = [	Cyrillic_sha,		Cyrillic_SHA,		Cyrillic_shcha,		Cyrillic_SHCHA		] };

    // 2. row
    key <AC01>	{ symbols[Group1] = [	a,			A,			asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group1] = [	s,			S,			plus,			plus			] };
    key <AC03>	{ symbols[Group1] = [	d,			D,			numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group1] = [	f,			F,			minus,			minus			] };
    key <AC05>	{ symbols[Group1] = [	g,			G,			underscore,		underscore		] };
    key <AC06>	{ symbols[Group1] = [	h,			H,			exclam,			exclam			] };
    key <AC07>	{ symbols[Group1] = [	j,			J,			question,		question		] };
    key <AC08>	{ symbols[Group1] = [	k,			K,			semicolon,		semicolon		] };
    key <AC09>	{ symbols[Group1] = [	l,			L,			colon,			colon			] };
    key <AB09>	{ symbols[Group1] = [	comma,			comma,			comma,			comma			] };
    key <UP>	{ symbols[Group1] = [	period,			period,			period,			period			] };

    key <AC01>	{ symbols[Group2] = [	Cyrillic_a,		Cyrillic_A,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	Cyrillic_es,		Cyrillic_ES,		plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	Cyrillic_de,		Cyrillic_DE,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Cyrillic_ef,		Cyrillic_EF,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Cyrillic_ghe,		Cyrillic_GHE,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Cyrillic_ha,		Cyrillic_HA,		exclam,			exclam			] };
    key <AC07>	{ symbols[Group2] = [	Cyrillic_shorti,	Cyrillic_SHORTI,	question,		question		] };
    key <AC08>	{ symbols[Group2] = [	Cyrillic_ka,		Cyrillic_KA,		semicolon,		semicolon		] };
    key <AC09>	{ symbols[Group2] = [	Cyrillic_el,		Cyrillic_EL,		colon,			colon			] };
    key <AB09>	{ symbols[Group2] = [	Cyrillic_yu,		Cyrillic_YU,		comma,			comma			] };
    key <UP>	{ symbols[Group2] = [	Ukrainin_ie,		Ukrainian_IE,		period,			period			] };

    // 3. row
    key <AB01>	{ symbols[Group1] = [	z,			Z,			dollar,			dollar			] };
    key <AB02>	{ symbols[Group1] = [	x,			X,			EuroSign,		EuroSign		] };
    key <AB03>	{ symbols[Group1] = [	c,			C,			slash,			slash			] };
    key <AB04>	{ symbols[Group1] = [	v,			V,			parenleft,		parenleft		] };
    key <AB05>	{ symbols[Group1] = [	b,			B,			parenright,		parenright		] };
    key <AB06>	{ symbols[Group1] = [	n,			N,			quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group1] = [	m,			M,			apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group1] = [	Cyrillic_che,		Cyrillic_CHE,		Ukrainian_yi,		Ukrainian_YI		] };

    key <AB01>	{ symbols[Group2] = [	Cyrillic_ze,		Cyrillic_ZE,		dollar,			dollar			] };
    key <AB02>	{ symbols[Group2] = [	Cyrillic_softsign,	Cyrillic_SOFTSIGN,	EuroSign,		EuroSign		] };
    key <AB03>	{ symbols[Group2] = [	Cyrillic_tse,		Cyrillic_TSE,		slash,			slash			] };
    key <AB04>	{ symbols[Group2] = [	Cyrillic_zhe,		Cyrillic_ZHE,		parenleft,		parenleft		] };
    key <AB05>	{ symbols[Group2] = [	Cyrillic_be,		Cyrillic_BE,		parenright,		parenright		] };
    key <AB06>	{ symbols[Group2] = [	Cyrillic_en,		Cyrillic_EN,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	Cyrillic_em,		Cyrillic_EM,		apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group2] = [	Cyrillic_che,		Cyrillic_CHE,		Ukrainian_yi,		Ukrainian_YI		] };
};


// author: Roman Moravcik
// author: Tarick
partial alphanumeric_keys
xkb_symbols "ua" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_2btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Ukrainian";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };
    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

     // 1. row
    key <AD01>	{ symbols[Group1] = [	q,			Q,			1,			1			] };
    key <AD02>	{ symbols[Group1] = [	w,			W,			2,			2			] };
    key <AD03>	{ symbols[Group1] = [	e,			E,			3,			3			] };
    key <AD04>	{ symbols[Group1] = [	r,			R,			4,			4			] };
    key <AD05>	{ symbols[Group1] = [	t,			T,			5,			5			] };
    key <AD06>	{ symbols[Group1] = [	y,			Y,			6,			6			] };
    key <AD07>	{ symbols[Group1] = [	u,			U,			7,			7			] };
    key <AD08>	{ symbols[Group1] = [	i,			I,			8,			8			] };
    key <AD09>	{ symbols[Group1] = [	o,			O,			9,			9			] };
    key <AD10>	{ symbols[Group1] = [	p,			P,			0,			0			] };
    key <AB08>	{ symbols[Group1] = [	Cyrillic_ha,		Cyrillic_HA,		Ukrainian_yi,		Ukrainian_YI		] };

    key <AD01>	{ symbols[Group2] = [	Cyrillic_shorti,	Cyrillic_SHORTI,	1,			1			] };
    key <AD02>	{ symbols[Group2] = [	Cyrillic_tse,		Cyrillic_TSE,		2,			2			] };
    key <AD03>	{ symbols[Group2] = [	Cyrillic_u,		Cyrillic_U,		3,			3			] };
    key <AD04>	{ symbols[Group2] = [	Cyrillic_ka,		Cyrillic_KA,		4,			4			] };
    key <AD05>	{ symbols[Group2] = [	Cyrillic_ie,		Cyrillic_IE,		5,			5			] };
    key <AD06>	{ symbols[Group2] = [	Cyrillic_en,		Cyrillic_EN,		6,			6			] };
    key <AD07>	{ symbols[Group2] = [	Cyrillic_ghe,		Cyrillic_GHE,		7,			7			] };
    key <AD08>	{ symbols[Group2] = [	Cyrillic_sha,		Cyrillic_SHA,		8,			8			] };
    key <AD09>	{ symbols[Group2] = [	Cyrillic_shcha,		Cyrillic_SHCHA,		9,			9			] };
    key <AD10>	{ symbols[Group2] = [	Cyrillic_ze,		Cyrillic_ZE,		0,			0			] };
    key <AB08>	{ symbols[Group2] = [	Cyrillic_ha,		Cyrillic_HA,		Ukrainian_yi,		Ukrainian_YI		] };

    // 2. row
    key <AC01>	{ symbols[Group1] = [	a,			A,			asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group1] = [	s,			S,			plus,			plus			] };
    key <AC03>	{ symbols[Group1] = [	d,			D,			numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group1] = [	f,			F,			minus,			minus			] };
    key <AC05>	{ symbols[Group1] = [	g,			G,			underscore,		underscore		] };
    key <AC06>	{ symbols[Group1] = [	h,			H,			exclam,			exclam			] };
    key <AC07>	{ symbols[Group1] = [	j,			J,			question,		question		] };
    key <AC08>	{ symbols[Group1] = [	k,			K,			semicolon,		semicolon		] };
    key <AC09>	{ symbols[Group1] = [	l,			L,			colon,			colon			] };
    key <AB09>	{ symbols[Group1] = [	comma,			comma,			comma,			comma			] };
    key <UP>	{ symbols[Group1] = [	period,			period,			period,			period			] };

    key <AC01>	{ symbols[Group2] = [	Cyrillic_ef,		Cyrillic_EF,		asterisk,		asterisk		] };
    key <AC02>	{ symbols[Group2] = [	Ukrainian_i,		Ukrainian_I,		plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	Cyrillic_ve,		Cyrillic_VE,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Cyrillic_a,		Cyrillic_A,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Cyrillic_pe,		Cyrillic_PE,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Cyrillic_er,		Cyrillic_ER,		exclam,			exclam			] };
    key <AC07>	{ symbols[Group2] = [	Cyrillic_o,		Cyrillic_O,		question,		question		] };
    key <AC08>	{ symbols[Group2] = [	Cyrillic_el,		Cyrillic_EL,		semicolon,		semicolon		] };
    key <AC09>	{ symbols[Group2] = [	Cyrillic_de,		Cyrillic_DE,		colon,			colon			] };
    key <AB09>	{ symbols[Group2] = [	Cyrillic_zhe,		Cyrillic_ZHE,		comma,			comma			] };
    key <UP>	{ symbols[Group2] = [	Ukrainian_ie,		Ukrainian_IE,		period,			period			] };

    // 3. row
    key <AB01>	{ symbols[Group1] = [	z,			Z,			dollar,			dollar			] };
    key <AB02>	{ symbols[Group1] = [	x,			X,			EuroSign,		EuroSign		] };
    key <AB03>	{ symbols[Group1] = [	c,			C,			slash,			slash			] };
    key <AB04>	{ symbols[Group1] = [	v,			V,			parenleft,		parenleft		] };
    key <AB05>	{ symbols[Group1] = [	b,			B,			parenright,		parenright		] };
    key <AB06>	{ symbols[Group1] = [	n,			N,			quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group1] = [	m,			M,			apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group1] = [	Cyrillic_be,		Cyrillic_BE,		Cyrillic_yu,		Cyrillic_YU		] };

    key <AB01>	{ symbols[Group2] = [	Cyrillic_ya,		Cyrillic_YA,		dollar,			dollar			] };
    key <AB02>	{ symbols[Group2] = [	Cyrillic_che,		Cyrillic_CHE,		EuroSign,		EuroSign		] };
    key <AB03>	{ symbols[Group2] = [	Cyrillic_es,		Cyrillic_ES,		slash,			slash			] };
    key <AB04>	{ symbols[Group2] = [	Cyrillic_em,		Cyrillic_EM,		parenleft,		parenleft		] };
    key <AB05>	{ symbols[Group2] = [	Cyrillic_i,		Cyrillic_I,		parenright,		parenright		] };
    key <AB06>	{ symbols[Group2] = [	Cyrillic_te,		Cyrillic_TE,		quotedbl,		quotedbl		] };
    key <AB07>	{ symbols[Group2] = [	Cyrillic_softsign,	Cyrillic_SOFTSIGN,	apostrophe,		apostrophe		] };
    key <LEFT>	{ symbols[Group2] = [	Cyrillic_be,		Cyrillic_BE,		Cyrillic_yu,		Cyrillic_YU		] };
};

// author: Mihai C.
// created on 2010-10-31
partial alphanumeric_keys
xkb_symbols "ro" {
    include "nokia_vndr/rx-51(english_base)"

    name[Group1] = "Romanian";

    key <UP>    { type[Group1] = "PC_FN_LEVEL2", symbols[Group1] = [ Up, abreve ] };
    key <LEFT>  { type[Group1] = "PC_FN_LEVEL2", symbols[Group1] = [ Left, 0x1000219 ] };
    key <DOWN>  { type[Group1] = "PC_FN_LEVEL2", symbols[Group1] = [ Down, 0x100021b ] };
    key <RGHT>  { type[Group1] = "PC_FN_LEVEL2", symbols[Group1] = [ Right, acircumflex ] };

    key <AB01>	{ [	z,		Z,		icircumflex,	Icircumflex] };
};

// author: Thanawit Lertruengpanya
partial alphanumeric_keys
xkb_symbols "th" {
    include "nokia_vndr/rx-51(english_base)"
    include "nokia_vndr/rx-51(arrows_4btns)"

    name[Group1] = "U.S. English";
    name[Group2] = "Thai Kedmanee";

    key <SPCE>	{ type[Group1] = "PC_FN_LEVEL2_BREAK", [ space, at, ISO_Prev_Group, at ] };

    key.type[Group2] = "FOUR_LEVEL_SEMIALPHABETIC";

    // 1. row
    key <AD01>	{ symbols[Group2] = [	Thai_maiyamok,		Thai_leksun,		Thai_lakkhangyao,	plus			] };
    key <AD02>	{ symbols[Group2] = [	Thai_saraaimaimalai,	quotedbl,		slash,			Thai_leknung		] };
    key <AD03>	{ symbols[Group2] = [	Thai_saraam,		Thai_dochada,		minus,			Thai_leksong		] };
    key <AD04>	{ symbols[Group2] = [	Thai_phophan,		Thai_thonangmontho,	Thai_phosamphao,	Thai_leksam		] };
    key <AD05>	{ symbols[Group2] = [	Thai_saraa,		Thai_thothong,		Thai_thothung,		Thai_leksi		] };
    key <AD06>	{ symbols[Group2] = [	Thai_maihanakat,	Thai_nikhahit,		Thai_sarau,		Thai_sarauu		] };
    key <AD07>	{ symbols[Group2] = [	Thai_saraii,		Thai_maitri,		Thai_saraue,		Thai_baht		] };
    key <AD08>	{ symbols[Group2] = [	Thai_rorua,		Thai_nonen,		Thai_khokhwai,		Thai_lekha		] };
    key <AD09>	{ symbols[Group2] = [	Thai_nonu,		Thai_paiyannoi,		Thai_totao,		Thai_lekhok		] };
    key <AD10>	{ symbols[Group2] = [	Thai_yoyak,		Thai_yoying,		Thai_chochan,		Thai_lekchet		] };
    key <AB08>	{ symbols[Group2] = [	Thai_bobaimai,		Thai_thothan,		Thai_khokhai,		Thai_lekpaet		] };

    // 2. row
    key <AC01>	{ symbols[Group2] = [	Thai_fofan,		Thai_ru,		Thai_chochang,		Thai_lekkao		] };
    key <AC02>	{ symbols[Group2] = [	Thai_hohip,		Thai_khorakhang,	plus,			plus			] };
    key <AC03>	{ symbols[Group2] = [	Thai_kokai,		Thai_topatak,		numbersign,		numbersign		] };
    key <AC04>	{ symbols[Group2] = [	Thai_dodek,		Thai_sarao,		minus,			minus			] };
    key <AC05>	{ symbols[Group2] = [	Thai_sarae,		Thai_chochoe,		underscore,		underscore		] };
    key <AC06>	{ symbols[Group2] = [	Thai_maitho,		Thai_maitaikhu,		Thai_ngongu,		period			] };
    key <AC07>	{ symbols[Group2] = [	Thai_maiek,		Thai_maichattawa,	Thai_loling,		comma			] };
    key <AC08>	{ symbols[Group2] = [	Thai_saraaa,		Thai_sorusi,		ampersand,		ampersand		] };
    key <AC09>	{ symbols[Group2] = [	Thai_sosua,		Thai_sosala,		exclam,			exclam			] };
    key <AB09>	{ symbols[Group2] = [	Thai_wowaen,		Thai_soso,		question,		question		] };

    // 3. row
    key <AB01>	{ symbols[Group2] = [	Thai_phophung,		parenleft,		Thai_moma,		Thai_thophuthao		] };
    key <AB02>	{ symbols[Group2] = [	Thai_popla,		parenright,		Thai_saraaimaimuan,	Thai_lochula		] };
    key <AB03>	{ symbols[Group2] = [	Thai_saraae,		Thai_choching,		Thai_fofa,		Thai_lu			] };
    key <AB04>	{ symbols[Group2] = [	Thai_oang,		Thai_honokhuk,		slash,			slash			] };
    key <AB05>	{ symbols[Group2] = [	Thai_sarai,		Thai_phinthu,		backslash,		backslash		] };
    key <AB06>	{ symbols[Group2] = [	Thai_sarauee,		Thai_thanthakhat,	Thai_khokhuat,		Thai_khokhon		] };
    key <AB07>	{ symbols[Group2] = [	Thai_thothahan,		question,		apostrophe,		apostrophe		] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   partial alphanumeric_keys default
xkb_symbols "no" {
    name[Group1]= "Norwegian/Danish";

    include "nokia_vndr/su-8w(base)"

    key <AE01> { [ 1,            exclam,         dead_circumflex                       ] };
    key <AE02> { [ 2,            quotedbl,       at                                    ] };
    key <AE03> { [ 3,            numbersign,     EuroSign                              ] };
    key <AE04> { [ 4,            currency,       dollar                                ] };
    key <AE05> { [ 5,            percent,        sterling                              ] };
    key <AE06> { [ 6,            ampersand                                             ] };
    key <AE07> { [ 7,            slash,          braceleft                             ] };
    key <AE08> { [ 8,            parenleft,      bracketleft                           ] };
    key <AE09> { [ 9,            parenright,     bracketright                          ] };
    key <AE10> { [ 0,            equal,          braceright                            ] };
    key <AE11> { [ plus,         question                                              ] };
    key <AE12> { [ dead_acute,   dead_grave,     backslash                             ] };

    key <AD01> { [ q,            Q,              dead_circumflex                       ] };
    key <AD02> { [ w,            W,              at                                    ] };
    key <AD03> { [ e,            E,              EuroSign                              ] };
    key <AD04> { [ r,            R,              dollar                                ] };
    key <AD05> { [ t,            T,              sterling                              ] };
    key <AD06> { [ y,            Y                                                     ] };
    key <AD07> { [ u,            U,              braceleft                             ] };
    key <AD08> { [ i,            I,              bracketleft                           ] };
    key <AD09> { [ o,            O,              bracketright                          ] };
    key <AD10> { [ p,            P,              braceright                            ] };
    key <AD11> { [ aring,        Aring                                                 ] };
    key <AD12> { [ ssharp,       ssharp,         backslash                             ] };

    key <AC01> { [ a,            A                                                     ] };
    key <AC02> { [ s,            S                                                     ] };
    key <AC03> { [ d,            D                                                     ] };
    key <AC04> { [ f,            F                                                     ] };
    key <AC05> { [ g,            G                                                     ] };
    key <AC06> { [ h,            H                                                     ] };
    key <AC07> { [ j,            J                                                     ] };
    key <AC08> { [ k,            K                                                     ] };
    key <AC09> { [ l,            L                                                     ] };
    key <AC10> { [ oslash,       Ooblique                                              ] };
    key <AC11> { [ ae,           AE                                                    ] };

    key <AB01> { [ z,            Z                                                     ] };
    key <AB02> { [ x,            X                                                     ] };
    key <AB03> { [ c,            C                                                     ] };
    key <AB04> { [ v,            V                                                     ] };
    key <AB05> { [ b,            B                                                     ] };
    key <AB06> { [ n,            N                                                     ] };
    key <AB07> { [ m,            M                                                     ] };
    key <AB08> { [ comma,        semicolon,      less                                  ] };
    key <AB09> { [ period,       colon,          greater                               ] };
    key <AB10> { [ minus,        underscore,     dead_diaeresis                        ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "no_nodeadkeys" {
    name[Group1] = "Norwegian/Danish (no dead keys)";

    include "nokia_vndr/su-8w(no)"

    key <AE01> { [ 1,            exclam,         asciicircum                           ] };
    key <AE12> { [ acute,        grave,          backslash                             ] };
    key <AD01> { [ q,            Q,              asciicircum                           ] };
};

partial alphanumeric_keys default
xkb_symbols "dk" {
    include "nokia_vndr/su-8w(no)"
};

partial alphanumeric_keys default
xkb_symbols "dk_nodeadkeys" {
    include "nokia_vndr/su-8w(no_nodeadkeys)"
};



partial alphanumeric_keys default
xkb_symbols "de" {
    name[Group1]= "German";
    include "nokia_vndr/su-8w(base)"

    key <AE01> { [ 1,            exclam,         dead_circumflex                       ] };
    key <AE02> { [ 2,            quotedbl,       at                                    ] };
    key <AE03> { [ 3,            numbersign,     EuroSign                              ] };
    key <AE04> { [ 4,            currency,       dollar                                ] };
    key <AE05> { [ 5,            percent,        sterling                              ] };
    key <AE06> { [ 6,            ampersand                                             ] };
    key <AE07> { [ 7,            slash,          braceleft                             ] };
    key <AE08> { [ 8,            parenleft,      bracketleft                           ] };
    key <AE09> { [ 9,            parenright,     bracketright                          ] };
    key <AE10> { [ 0,            equal,          braceright                            ] };
    key <AE11> { [ plus,         question                                              ] };
    key <AE12> { [ dead_acute,   dead_grave,     backslash                             ] };

    key <AD01> { [ q,            Q,              dead_circumflex                       ] };
    key <AD02> { [ w,            W,              at                                    ] };
    key <AD03> { [ e,            E,              EuroSign                              ] };
    key <AD04> { [ r,            R,              dollar                                ] };
    key <AD05> { [ t,            T,              sterling                              ] };
    key <AD06> { [ z,            Z                                                     ] };
    key <AD07> { [ u,            U,              braceleft                             ] };
    key <AD08> { [ i,            I,              bracketleft                           ] };
    key <AD09> { [ o,            O,              bracketright                          ] };
    key <AD10> { [ p,            P,              braceright                            ] };
    key <AD11> { [ udiaeresis,   Udiaeresis                                            ] };
    key <AD12> { [ ssharp,       ssharp,         backslash                             ] };

    key <AC01> { [ a,            A                                                     ] };
    key <AC02> { [ s,            S                                                     ] };
    key <AC03> { [ d,            D                                                     ] };
    key <AC04> { [ f,            F                                                     ] };
    key <AC05> { [ g,            G                                                     ] };
    key <AC06> { [ h,            H                                                     ] };
    key <AC07> { [ j,            J                                                     ] };
    key <AC08> { [ k,            K                                                     ] };
    key <AC09> { [ l,            L                                                     ] };
    key <AC10> { [ odiaeresis,   Odiaeresis                                            ] };
    key <AC11> { [ adiaeresis,   Adiaeresis                                            ] };

    key <AB01> { [ y,            Y                                                     ] };
    key <AB02> { [ x,            X                                                     ] };
    key <AB03> { [ c,            C                                                     ] };
    key <AB04> { [ v,            V                                                     ] };
    key <AB05> { [ b,            B                                                     ] };
    key <AB06> { [ n,            N                                                     ] };
    key <AB07> { [ m,            M                                                     ] };
    key <AB08> { [ comma,        semicolon,      less                                  ] };
    key <AB09> { [ period,       colon,          greater                               ] };
    // XXX Inexplicably, the diaeresis is dead on other layouts, but not
    //     German.  Go figure.
    key <AB10> { [ minus,        underscore,     diaeresis                             ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "de_nodeadkeys" {
    name[Group1] = "German (no dead keys)";

    include "nokia_vndr/su-8w(de)"

    key <AE01> { [ 1,            exclam,         asciicircum                           ] };
    key <AE12> { [ acute,        grave,          backslash                             ] };
    key <AD01> { [ q,            Q,              asciicircum                           ] };
};



partial alphanumeric_keys default
xkb_symbols "se" {
    name[Group1]= "Finnish/Swedish";

    include "nokia_vndr/su-8w(base)"

    key <AE01> { [ 1,            exclam,         dead_circumflex                       ] };
    key <AE02> { [ 2,            quotedbl,       at                                    ] };
    key <AE03> { [ 3,            numbersign,     EuroSign                              ] };
    key <AE04> { [ 4,            currency,       dollar                                ] };
    key <AE05> { [ 5,            percent,        sterling                              ] };
    key <AE06> { [ 6,            ampersand                                             ] };
    key <AE07> { [ 7,            slash,          braceleft                             ] };
    key <AE08> { [ 8,            parenleft,      bracketleft                           ] };
    key <AE09> { [ 9,            parenright,     bracketright                          ] };
    key <AE10> { [ 0,            equal,          braceright                            ] };
    key <AE11> { [ plus,         question                                              ] };
    key <AE12> { [ dead_acute,   dead_grave,     backslash                             ] };

    key <AD01> { [ q,            Q,              dead_circumflex                       ] };
    key <AD02> { [ w,            W,              at                                    ] };
    key <AD03> { [ e,            E,              EuroSign                              ] };
    key <AD04> { [ r,            R,              dollar                                ] };
    key <AD05> { [ t,            T,              sterling                              ] };
    key <AD06> { [ y,            Y                                                     ] };
    key <AD07> { [ u,            U,              braceleft                             ] };
    key <AD08> { [ i,            I,              bracketleft                           ] };
    key <AD09> { [ o,            O,              bracketright                          ] };
    key <AD10> { [ p,            P,              braceright                            ] };
    key <AD11> { [ aring,        Aring                                                 ] };
    key <AD12> { [ ssharp,       ssharp,         backslash                             ] };

    key <AC01> { [ a,            A                                                     ] };
    key <AC02> { [ s,            S                                                     ] };
    key <AC03> { [ d,            D                                                     ] };
    key <AC04> { [ f,            F                                                     ] };
    key <AC05> { [ g,            G                                                     ] };
    key <AC06> { [ h,            H                                                     ] };
    key <AC07> { [ j,            J                                                     ] };
    key <AC08> { [ k,            K                                                     ] };
    key <AC09> { [ l,            L                                                     ] };
    key <AC10> { [ odiaeresis,   Odiaeresis                                            ] };
    key <AC11> { [ adiaeresis,   Adiaeresis                                            ] };

    key <AB01> { [ z,            Z                                                     ] };
    key <AB02> { [ x,            X                                                     ] };
    key <AB03> { [ c,            C                                                     ] };
    key <AB04> { [ v,            V                                                     ] };
    key <AB05> { [ b,            B                                                     ] };
    key <AB06> { [ n,            N                                                     ] };
    key <AB07> { [ m,            M                                                     ] };
    key <AB08> { [ comma,        semicolon,      less                                  ] };
    key <AB09> { [ period,       colon,          greater                               ] };
    key <AB10> { [ minus,        underscore,     dead_diaeresis                        ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "se_nodeadkeys" {
    name[Group1] = "Finnish/Swedish (no dead keys)";

    include "nokia_vndr/su-8w(se)"

    key <AE01> { [ 1,            exclam,         asciicircum                           ] };
    key <AE12> { [ acute,        grave,          backslash                             ] };
    key <AD01> { [ q,            Q,              asciicircum                           ] };
    key <AB10> { [ minus,        underscore,     diaeresis                             ] };
};

partial alphanumeric_keys default
xkb_symbols "fi" {
    include "nokia_vndr/su-8w(se)"
};

xkb_symbols "fi_nodeadkeys" {
    include "nokia_vndr/su-8w(se_nodeadkeys)"
};



// Russian layout on first two levels, US layout on third and fourth.
partial alphanumeric_keys default
xkb_symbols "ru" {
    name[Group1]= "Russian";

    include "nokia_vndr/su-8w(base)"

    // XXX Would be nice if this actually generated a tilde.
    key <TLDE> { [ Cyrillic_io,          Cyrillic_IO,          grave                        ] };
    key <AE01> { [ 1,                    exclam,               exclam,        exclam        ] };
    key <AE02> { [ 2,                    at,                   quotedbl,      at            ] };
    key <AE03> { [ 3,                    numbersign,           numbersign,    numbersign    ] };
    key <AE04> { [ 4,                    dollar,               currency,      dollar        ] };
    key <AE05> { [ 5,                    percent,              percent,       percent       ] };
    key <AE06> { [ 6,                    dead_circumflex,      ampersand,     asciicircum   ] };
    key <AE07> { [ 7,                    ampersand,            slash,         ampersand     ] };
    key <AE08> { [ 8,                    asterisk,             parenleft,     asterisk      ] };
    key <AE09> { [ 9,                    parenleft,            parenright,    parenleft     ] };
    key <AE10> { [ 0,                    parenright,           equal,         parenright    ] };
    key <AE11> { [ minus,                underscore,           plus,          question      ] };
    key <AE12> { [ equal,                plus,                 equal,         plus          ] };

    key <AD01> { [ Cyrillic_shorti,      Cyrillic_SHORTI,      q,             Q             ] };
    key <AD02> { [ Cyrillic_tse,         Cyrillic_TSE,         w,             W             ] };
    key <AD03> { [ Cyrillic_u,           Cyrillic_U,           e,             E             ] };
    key <AD04> { [ Cyrillic_ka,          Cyrillic_KA,          r,             R             ] };
    key <AD05> { [ Cyrillic_ie,          Cyrillic_IE,          t,             T             ] };
    key <AD06> { [ Cyrillic_en,          Cyrillic_EN,          y,             Y             ] };
    key <AD07> { [ Cyrillic_ghe,         Cyrillic_GHE,         u,             U             ] };
    key <AD08> { [ Cyrillic_sha,         Cyrillic_SHA,         i,             I             ] };
    key <AD09> { [ Cyrillic_shcha,       Cyrillic_SHCHA,       o,             O             ] };
    key <AD10> { [ Cyrillic_ze,          Cyrillic_ZE,          p,             P             ] };
    key <AD11> { [ Cyrillic_ha,          Cyrillic_HA,          bracketleft,   braceleft     ] };
    key <AD12> { [ Cyrillic_hardsign,    Cyrillic_HARDSIGN,    bracketright,  braceright    ] };

    key <AC01> { [ Cyrillic_ef,          Cyrillic_EF,          a,             A             ] };
    key <AC02> { [ Cyrillic_yeru,        Cyrillic_YERU,        s,             S             ] };
    key <AC03> { [ Cyrillic_ve,          Cyrillic_VE,          d,             D             ] };
    key <AC04> { [ Cyrillic_a,           Cyrillic_A,           f,             F             ] };
    key <AC05> { [ Cyrillic_pe,          Cyrillic_PE,          g,             G             ] };
    key <AC06> { [ Cyrillic_er,          Cyrillic_ER,          h,             H             ] };
    key <AC07> { [ Cyrillic_o,           Cyrillic_O,           j,             J             ] };
    key <AC08> { [ Cyrillic_el,          Cyrillic_EL,          k,             K             ] };
    key <AC09> { [ Cyrillic_de,          Cyrillic_DE,          l,             L             ] };
    key <AC10> { [ Cyrillic_zhe,         Cyrillic_ZHE,         semicolon,     colon         ] };
    key <AC11> { [ Cyrillic_e,           Cyrillic_E,           apostrophe,    quotedbl      ] };

    key <AB01> { [ Cyrillic_ya,          Cyrillic_YA,          z,             Z             ] };
    key <AB02> { [ Cyrillic_che,         Cyrillic_CHE,         x,             X             ] };
    key <AB03> { [ Cyrillic_es,          Cyrillic_ES,          c,             C             ] };
    key <AB04> { [ Cyrillic_em,          Cyrillic_EM,          v,             V             ] };
    key <AB05> { [ Cyrillic_i,           Cyrillic_I,           b,             B             ] };
    key <AB06> { [ Cyrillic_te,          Cyrillic_TE,          n,             N             ] };
    key <AB07> { [ Cyrillic_softsign,    Cyrillic_SOFTSIGN,    m,             M             ] };
    key <AB08> { [ Cyrillic_be,          Cyrillic_BE,          comma,         less          ] };
    key <AB09> { [ Cyrillic_yu,          Cyrillic_YU,          period,        greater       ] };
    key <AB10> { [ slash,                question,             slash,         question      ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "ru_nodeadkeys" {
    name[Group1] = "Russian - no dead keys";

    include "nokia_vndr/su-8w(ru)"

    key <AE06> { [ 6,                    asciicircum,          ampersand,     asciicircum   ] };
};



partial alphanumeric_keys default
xkb_symbols "us" {
    name[Group1]= "U.S. English - International";
    
    include "nokia_vndr/su-8w(base)"

    // I can't believe it's not us(intl).
    key <AE01> { [ 1,            exclam,         exclamdown                            ] };
    key <AE02> { [ 2,            at,             twosuperior                           ] };
    key <AE03> { [ 3,            numbersign                                            ] };
    key <AE04> { [ 4,            dollar,         currency                              ] };
    key <AE05> { [ 5,            percent,        EuroSign                              ] };
    key <AE06> { [ 6,            asciicircum,    onequarter                            ] };
    key <AE07> { [ 7,            ampersand,      onehalf                               ] };
    key <AE08> { [ 8,            asterisk,       threequarters                         ] };
    key <AE09> { [ 9,            parenleft,      leftsinglequotemark                   ] };
    key <AE10> { [ 0,            parenright,     rightsinglequotemark                  ] };
    key <AE11> { [ minus,        underscore,     yen                                   ] };
    key <AE12> { [ equal,        plus,           multiply                              ] };

    key <AD01> { [ q,            Q,              adiaeresis,           Adiaeresis      ] };
    key <AD02> { [ w,            W,              aring,                Aring           ] };
    key <AD03> { [ e,            E,              eacute,               Eacute          ] };
    key <AD04> { [ r,            R,              registered                            ] };
    key <AD05> { [ t,            T,              thorn,                THORN           ] };
    key <AD06> { [ y,            Y,              udiaeresis,           Udiaeresis      ] };
    key <AD07> { [ u,            U,              uacute,               Uacute          ] };
    key <AD08> { [ i,            I,              iacute,               Iacute          ] };
    key <AD09> { [ o,            O,              oacute,               Oacute          ] };
    key <AD10> { [ p,            P,              odiaeresis,           Odiaeresis      ] };
    key <AD11> { [ bracketleft,  braceleft,      guillemotleft                         ] };
    key <AD12> { [ bracketright, braceright,     guillemotright                        ] };

    key <AC01> { [ a,            A,              aacute,               Aacute          ] };
    key <AC02> { [ s,            S,              ssharp,               section         ] };
    key <AC03> { [ d,            D,              eth,                  ETH             ] };
    key <AC04> { [ f,            F                                                     ] };
    key <AC05> { [ g,            G                                                     ] };
    key <AC06> { [ h,            H                                                     ] };
    key <AC07> { [ j,            J                                                     ] };
    key <AC08> { [ k,            K                                                     ] };
    key <AC09> { [ l,            L,              oslash,               Ooblique        ] };
    key <AC10> { [ semicolon,    colon,          paragraph,            degree          ] };
    // XXX Not entirely sure if fourth level is quotedbl or diaeresis.
    //     The former makes a lot more sense.
    key <AC11> { [ dead_acute,   dead_diaeresis, apostrophe,           quotedbl        ] };

    key <AB01> { [ z,            Z,              ae,                   AE              ] };
    key <AB02> { [ x,            X                                                     ] };
    key <AB03> { [ c,            C,              copyright                             ] };
    key <AB04> { [ v,            V                                                     ] };
    key <AB05> { [ b,            B                                                     ] };
    key <AB06> { [ n,            N,              ntilde,               Ntilde          ] };
    key <AB07> { [ m,            M,              mu                                    ] };
    key <AB08> { [ comma,        less,           ccedilla,             Ccedilla        ] };
    key <AB09> { [ period,       greater                                               ] };
    key <AB10> { [ slash,        question,       questiondown                          ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "us_nodeadkeys" {
    name[Group1] = "U.S. English - no dead keys";

    include "nokia_vndr/su-8w(us_intl)"

    // XXX Not entirely sure if second level is quotedbl or diaeresis.
    //     The former makes a lot more sense.
    key <AC10> { [ apostrophe,    quotedbl,       dead_acute,           dead_diaeresis ] };
};



partial default alphanumeric_keys
xkb_symbols "base" {
    // forked from from pc(pc105); madness.
    key <ESC>  {	[ Escape			]	};

    // the extra key on most European keyboards
    key <LSGT> {	[      less,    greater,          bar,    brokenbar ]	};

    // these keys are common to all layouts
    key <BKSL> {	[ backslash,	bar		]	};
    key <SPCE> {	[ 	 space			]	};

    key <BKSP> { [ BackSpace ] };

    key  <TAB> {	[ Tab,	ISO_Left_Tab	]	};
    key <RTRN> {	[ Return	]	};
    // we don't ever generate this key, but the VKB needs it always.
    key <KPEN> {        [ KP_Enter      ]       };
    // generated from the headset, must always be in the map.
    key <I29>  {        [ XF86Phone     ]       };

    key <CAPS> {	[ Caps_Lock	]	};

    key <NMLK> {	[ Num_Lock, Pointer_EnableKeys		]	};

    key <LFSH> {	[ Shift_L	]	};
    key <LCTL> {	[ Control_L	]	};
    key <LALT> {	[ Alt_L,	Meta_L		]	};
    key <LWIN> {	[ Super_L			]	};

    key <RTSH> {	[ Shift_R	]	};
    key <RCTL> {	[ Control_R	]	};
    key <RALT> {	[ Alt_R,	Meta_R		]	};
    key <RWIN> {	[ Super_R			]	};

    key <MENU> {	[ Menu			]	};

    key <FK01> { [ F1 ] };
    key <FK02> { [ F2 ] };
    key <FK03> { [ F3 ] };
    key <FK04> { [ F4 ] };
    key <FK05> { [ F5 ] };
    key <FK06> { [ F6 ] };
    key <FK07> { [ F7 ] };
    key <FK08> { [ F8 ] };
    key <FK09> { [ F9 ] };
    key <FK10> { [ F11 ] };
    key <FK11> { [ F10 ] };
    key <FK12> { [ F12 ] };

    // Begin modifier mappings
    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L, Control_R };
    modifier_map Mod2   { Num_Lock };

    // Fake keys for virtual<->real modifiers mapping:
    key <LVL3> {	[ ISO_Level3_Shift	]	};
    key <MDSW> {	[ Mode_switch 		]	};
    modifier_map Mod5   { <LVL3>, <MDSW> };

    key <ALT>  {	[ NoSymbol, Alt_L	]	};
    modifier_map Mod1   { <ALT>, <LALT> };

    key <META> {	[ NoSymbol, Meta_L	]	};
    modifier_map Mod1   { <META> };

    key <SUPR> {	[ NoSymbol, Super_L	]	};
    modifier_map Mod4   { <SUPR> };

    key <HYPR> {	[ NoSymbol, Hyper_L	]	};
    modifier_map Mod4   { <HYPR> };
    // End modifier mappings

    key  <INS> {        [  Insert               ]       };
    key <DELE> {        [  Delete               ]       };
    key  <END> {        [  End                  ]       };
    key   <UP> {	[  Up			]	};
    key <LEFT> {	[  Left			]	};
    key <DOWN> {	[  Down			]	};
    key <RGHT> {	[  Right		]	};

    // True for all layouts (except for ru).
    key <TLDE> { [ grave, asterisk, asciitilde ] };

    // SU-8W uses 140 for Home, not the normal keycode.  Very useful.
    key <HOME> {        [       NoSymbol                ]       };
    // Ditto LWIN/RWIN and Page Up/Page Down.
    key <PGUP> {        [       none                ]       };
    key <PGDN> {        [       NoSymbol                ]       };

    // The LWIN & RWIN keys correspond to the 'select left' and
    // 'select right' keys.
    key <LWIN> {	[	Prior		]	};
    key <RWIN> {	[	Next		]	};

    // <FRNT> = 140 ~ <I140>
    key <FRNT> {	[	Home			]	};
    // <PROP> = 138 ~ <I138>
    key <PROP> {	[	Menu			]	};
    key <I163> {	[	XF86Mail		]	};

    // Power button.
    key <I5E> {         [       Execute                 ]       };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   xkb_symbols "jp106" {

    name[group1]="Japan/ASCII";

    key <HZTG> {         [ Zenkaku_Hankaku 		    ] };
    key <AE01> {         [               1,          exclam ] };
    key <AE02> {         [               2,        quotedbl ] };
    key <AE03> {         [               3,      numbersign ] };
    key <AE04> {         [               4,          dollar ] };
    key <AE05> {         [               5,         percent ] };
    key <AE06> {         [               6,       ampersand ] };
    key <AE07> {         [               7,      apostrophe ] };
    key <AE08> {         [               8,       parenleft ] };
    key <AE09> {         [               9,      parenright ] };
    key <AE10> {         [               0,      asciitilde ] };
    key <AE11> {         [           minus,           equal ] };
    key <AE12> {         [     asciicircum,         overbar ] };
    key <AE13> {         [             yen,             bar ] };

    // keys <TAB> and <AD01> - <AD10> are identical to US/ASCII keyboard
    key <AD11> {         [              at,           grave ] };
    key <AD12> {         [     bracketleft,       braceleft ] };

    key <CAPS> {         [      Eisu_Shift,       Caps_Lock ] };
    // keys <AC01> - <AC09> are identical to US/ASCII keyboard
    key <AC10> {         [       semicolon,            plus ] };
    key <AC11> {         [           colon,        asterisk ] };
    key <AC12> {         [    bracketright,      braceright ] };

    // keys <LFSH> and <AB01> - <AB10> are identical to US/ASCII keyboard
    key <AB11> {         [       backslash,      underscore ] };

    key <NFER> {         [        Muhenkan ] };
    key <XFER> {         [           Kanji ] };
    key <HKTG> {         [ Hiragana_Katakana ] };
};

xkb_symbols "alternate106" {
    key <AE10> {         [               0,      overbar ] };
    key <AE12> {         [     asciicircum,      asciitilde] };
    key <AE13> {         [       backslash,             bar ] };
    key <AB11> {         [        underbar,      underscore ] };
    augment "sgi/jp(jp106)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      // $NetBSD: ws007sh,v 1.1 2010/05/15 15:33:30 nonaka Exp $

partial default alphanumeric_keys
xkb_symbols "basic" {
	name[Group1]= "Sharp WS007SH";

	key <AE01> { [ 1, exclam ] };
	key <AE02> { [ 2, quotedbl ] };
	key <AE03> { [ 3, numbersign ] };
	key <AE04> { [ 4, dollar ] };
	key <AE05> { [ 5, percent ] };
	key <AE06> { [ 6, ampersand ] };
	key <AE07> { [ 7, apostrophe, grave ] };
	key <AE08> { [ 8, parenleft, braceleft ] };
	key <AE09> { [ 9, parenright, braceright ] };
	key <AE10> { [ 0 ] };
	key <AE11> { [ minus, equal, backslash ] };
	key <BKSP> { [ BackSpace, BackSpace, Delete ] };

	key <AD01> { [ q, Q ] };
	key <AD02> { [ w, W, asciicircum ] };
	key <AD03> { [ e, E, asciitilde ] };
	key <AD04> { [ r, R, bar ] };
	key <AD05> { [ t, T ] };
	key <AD06> { [ y, Y ] };
	key <AD07> { [ u, U, bracketleft ] };
	key <AD08> { [ i, I, bracketright ] };
	key <AD09> { [ o, O, underscore ] };
	key <AD10> { [ p, P, at ] };
	
	key <TAB> { [ Tab, Tab, Escape ] };

	key <AC01> { [ a, A ] };
	key <AC02> { [ s, S ] };
	key <AC03> { [ d, D ] };
	key <AC04> { [ f, F ] };
	key <AC05> { [ g, G ] };
	key <AC06> { [ h, H ] };
	key <AC07> { [ j, J ] };
	key <AC08> { [ k, K, plus ] };
	key <AC09> { [ l, L, asterisk ] };

	key <LFSH> { [ Shift_L ] };
	key <AB01> { [ z, Z ] };
	key <AB02> { [ x, X ] };
	key <AB03> { [ c, C ] };
	key <AB04> { [ v, V ] };
	key <AB05> { [ b, B ] };
	key <AB06> { [ n, N ] };
	key <AB07> { [ m, M ] };
	key <AB08> { [ comma, semicolon, less ] };
	key <AB09> { [ period, colon, greater ] };
	key <AB10> { [ slash, question ] };
	key <RTSH> { [ Shift_R ] };
	key <RTRN> { [ Return ] };

	key <RALT> { [ ISO_Level3_Shift ] };

	key <LCTL> { [ Control_L ] };
	key <SPCE> { [ space ] };
	
	key <UP> { [ Up, Up, Prior ] };
	key <LEFT> { [ Left, Left, Home ] };
	key <DOWN> { [ Down, Down, Next ] };
	key <RGHT> { [ Right, Right, End ] };

	key <ESC> { [ Escape ] };

	include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          // $NetBSD: ws011sh,v 1.2 2010/05/30 10:10:20 nonaka Exp $

partial default alphanumeric_keys
xkb_symbols "basic" {
	name[Group1]= "Sharp WS011SH";

	key <HZTG> {
		type[Group1] = "THREE_LEVEL",
		symbols[Group1] = [ Zenkaku_Hankaku, Zenkaku_Hankaku, exclam ]
	};

	key <AD01> { [ q, Q, quotedbl ] };
	key <AD02> { [ w, W, numbersign ] };
	key <AD03> { [ e, E, dollar ] };
	key <AD04> { [ r, R, percent ] };
	key <AD05> { [ t, T, ampersand ] };
	key <AD06> { [ y, Y, 1 ] };
	key <AD07> { [ u, U, 2 ] };
	key <AD08> { [ i, I, 3 ] };
	key <AD09> { [ o, O, underscore ] };
	key <AD10> { [ p, P, at ] };
	key <BKSP> { [ BackSpace, BackSpace, Delete ] };
	
	key <TAB> { [ Tab, Tab, Escape ] };
	key <AC01> { [ a, A, bracketleft ] };
	key <AC02> { [ s, S, apostrophe ] };
	key <AC03> { [ d, D, parenleft ] };
	key <AC04> { [ f, F, parenright ] };
	key <AC05> { [ g, G, asterisk ] };
	key <AC06> { [ h, H, 4 ] };
	key <AC07> { [ j, J, 5 ] };
	key <AC08> { [ k, K, 6 ] };
	key <AC09> { [ l, L, plus ] };
	key <AE11> { [ minus, equal, backslash ] };
	key <AE02> { [ grave, braceleft, braceright ] };

	key <LFSH> { [ Shift_L ] };
	key <AB01> { [ z, Z, bracketright ] };
	key <AB02> { [ x, X, asciicircum ] };
	key <AB03> { [ c, C, asciitilde ] };
	key <AB04> { [ v, V, bar ] };
	key <AB05> { [ b, B, 7 ] };
	key <AB06> { [ n, N, 8 ] };
	key <AB07> { [ m, M, 9 ] };
	key <AB08> { [ comma, less, semicolon ] };
	key <AB09> { [ period, greater, colon ] };
	key <AB10> { [ slash, question, 0 ] };
	key <RTSH> { [ Shift_R ] };
	key <RTRN> { [ Return ] };

	key <RALT> { [ ISO_Level3_Shift ] };

	key <LCTL> { [ Control_L ] };
	key <SPCE> { [ space ] };
	
	key <UP> { [ Up, Up, Prior ] };
	key <LEFT> { [ Left, Left, Home ] };
	key <DOWN> { [ Down, Down, Next ] };
	key <RGHT> { [ Right, Right, End ] };

	key <ESC> { [ Escape ] };

	key <KP1> { [ 1 ] };
	key <KP2> { [ 2 ] };
	key <KP3> { [ 3 ] };
	key <KP4> { [ 4 ] };
	key <KP5> { [ 5 ] };
	key <KP6> { [ 6 ] };
	key <KP7> { [ 7 ] };
	key <KP8> { [ 8 ] };
	key <KP9> { [ 9 ] };
	key <KP0> { [ 0 ] };

	include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       // $NetBSD: ws020sh,v 1.1 2010/05/25 13:12:51 nonaka Exp $

partial default alphanumeric_keys
xkb_symbols "basic" {
	name[Group1]= "Sharp WS020SH";

	key <HZTG> {
		type[Group1]="THREE_LEVEL",
		symbols[Group1]= [ Zenkaku_Hankaku, Zenkaku_Hankaku, exclam ]
	};

	key <AD01> { [ q, Q, quotedbl ] };
	key <AD02> { [ w, W, numbersign ] };
	key <AD03> { [ e, E, dollar ] };
	key <AD04> { [ r, R, percent ] };
	key <AD05> { [ t, T, ampersand ] };
	key <AD06> { [ y, Y, underscore ] };
	key <AD07> { [ u, U, 1 ] };
	key <AD08> { [ i, I, 2 ] };
	key <AD09> { [ o, O, 3 ] };
	key <AD10> { [ p, P, at ] };
	key <BKSP> { [ BackSpace, BackSpace, Delete ] };
	
	key <TAB> { [ Tab, Tab, Escape ] };
	key <AC01> { [ a, A, bracketleft ] };
	key <AC02> { [ s, S, apostrophe ] };
	key <AC03> { [ d, D, parenleft ] };
	key <AC04> { [ f, F, parenright ] };
	key <AC05> { [ g, G, asterisk ] };
	key <AC06> { [ h, H, 4 ] };
	key <AC07> { [ j, J, 5 ] };
	key <AC08> { [ k, K, 6 ] };
	key <AC09> { [ l, L, plus ] };
	key <AE11> { [ minus, equal, backslash ] };
	key <AE02> { [ grave, braceleft, braceright ] };

	key <LFSH> { [ Shift_L ] };
	key <AB01> { [ z, Z, bracketright ] };
	key <AB02> { [ x, X, asciicircum ] };
	key <AB03> { [ c, C, asciitilde ] };
	key <AB04> { [ v, V, bar ] };
	key <AB05> { [ b, B, 7 ] };
	key <AB06> { [ n, N, 8 ] };
	key <AB07> { [ m, M, 9 ] };
	key <AB08> { [ comma, less, semicolon ] };
	key <AB09> { [ period, greater, colon ] };
	key <AB10> { [ slash, question, 0 ] };
	key <RTSH> { [ Shift_R ] };
	key <RTRN> { [ Return ] };

	key <RALT> { [ ISO_Level3_Shift ] };

	key <LCTL> { [ Control_L ] };
	key <SPCE> { [ space ] };
	
	key <UP> { [ Up, Up, Prior ] };
	key <LEFT> { [ Left, Left, Home ] };
	key <DOWN> { [ Down, Down, Next ] };
	key <RGHT> { [ Right, Right, End ] };

	key <ESC> { [ Escape ] };

	include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       //
//Copyright 1996, 1998  The Open Group
//
//Permission to use, copy, modify, distribute, and sell this software and its
//documentation for any purpose is hereby granted without fee, provided that
//the above copyright notice appear in all copies and that both that
//copyright notice and this permission notice appear in supporting
//documentation.
//
//The above copyright notice and this permission notice shall be
//included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//IN NO EVENT SHALL THE OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR
//OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
//ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//OTHER DEALINGS IN THE SOFTWARE.
//
//Except as contained in this notice, the name of The Open Group shall
//not be used in advertising or otherwise to promote the sale, use or
//other dealings in this Software without prior written authorization
//from The Open Group.
//
// US/ASCII layout for a nwp5461 keyboard
xkb_symbols "nwp5461" {
    include "us(basic)"

    key <LALT> { [ Alt_L, Meta_L ]	};
    key <RTSH> { [ Shift_R	]	};
    key <AB11> { [ NoSymbol	]	};

    // Begin "Function" section
    key <FK01> { [ F1		]	};
    key <FK02> { [ F2		]	};
    key <FK03> { [ F3		]	};
    key <FK04> { [ F4		]	};
    key <FK05> { [ F5		]	};
    key <FK06> { [ F6		]	};
    key <FK07> { [ F7		]	};
    key <FK08> { [ F8		]	};
    key <FK09> { [ F9		]	};
    key <FK10> { [ F10		]	};
    key <FK11> { [ F11		]	};
    key <FK12> { [ F12		]	};
    key <HELP> { [ Help		]	};
    key <STOP> { [ Cancel	]	};
    key <CUT>  { [ Select	]	};
    key <EXEC> { [ Execute	]	};
    key <DELE> { [ Delete	]	};
    key <LEFT> { [ Left		]	};
    key <RGHT> { [ Right	]	};
    key <UP>   { [ Up		]	};
    key <DOWN> { [ Down		]	};
    key <PGUP> { [ Prior	]	};
    key <PGDN> { [ Next		]	};
    key <INS>  { [ Insert	]	};
    key <CLR>  { [ Clear	]	};
    // End "Function" section

    // Begin "Keypad" section
    key <KPMU> { [ KP_Multiply	]	};
    key <KPDV> { [ KP_Divide	]	};
    key <KPAD> { [ KP_Add	]	};

    key  <KP7> { [ KP_7		]	};
    key  <KP8> { [ KP_8		]	};
    key  <KP9> { [ KP_9		]	};
    key <KPSU> { [ KP_Subtract	]	};

    key  <KP4> { [ KP_4		]	};
    key  <KP5> { [ KP_5		]	};
    key  <KP6> { [ KP_6		]	};
    key <KPSP> { [ KP_Separator ]	};

    key  <KP1> { [ KP_1		]	};
    key  <KP2> { [ KP_2		]	};
    key  <KP3> { [ KP_3		]	};
    key <KPEN> { [ KP_Enter	]	}; 

    key  <KP0> { [ KP_0		]	};
    key <KPDC> { [ KP_Decimal	]	};
    key <KPTB> { [ KP_Tab	]	};
    // End "Keypad" section

    modifier_map Shift  	{ Shift_R };
    modifier_map Mod3   	{ Alt_L };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default partial alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]= "Arabic (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [ Arabic_thal, Arabic_shadda, grave,  asciitilde ] };
    key <AE01> { [   0x1000661,        exclam, 1,          exclam ] };
    key <AE02> { [   0x1000662,            at, 2,              at ] };
    key <AE03> { [   0x1000663,    numbersign, 3,      numbersign ] };
    key <AE04> { [   0x1000664,        dollar, 4,          dollar ] };
    key <AE05> { [   0x1000665,       percent, 5,         percent ] };
    key <AE06> { [   0x1000666,   asciicircum, 6,     asciicircum ] };
    key <AE07> { [   0x1000667,     ampersand, 7,       ampersand ] };
    key <AE08> { [   0x1000668,      asterisk, 8,        asterisk ] };
    key <AE09> { [   0x1000669,    parenright, 9,      parenright ] };
    key <AE10> { [   0x1000660,     parenleft, 0,       parenleft ] };
    key <AE11> { [       minus,    underscore, minus,  underscore ] };
    key <AE12> { [       equal,          plus, equal,        plus ] };
						
    key <AD01> { [   Arabic_dad, Arabic_fatha,          q,            Q          ] };
    key <AD02> { [   Arabic_sad, Arabic_fathatan,       w,            W          ] };
    key <AD03> { [  Arabic_theh, Arabic_damma,          e,            E          ] };
    key <AD04> { [   Arabic_qaf, Arabic_dammatan,       r,            R          ] };
    key <AD05> { [   Arabic_feh, 0x100fef9,             t,            T          ] };
    key <AD06> { [ Arabic_ghain, Arabic_hamzaunderalef, y,            Y          ] };
    key <AD07> { [   Arabic_ain, grave,                 u,            U          ] };
    key <AD08> { [    Arabic_ha, division,              i,            I          ] };
    key <AD09> { [  Arabic_khah, multiply,              o,            O          ] };
    key <AD10> { [   Arabic_hah, Arabic_semicolon,      p,            P          ] };
    key <AD11> { [  Arabic_jeem, greater,               bracketleft,  braceleft  ] };
    key <AD12> { [   Arabic_dal, less,                  bracketright, braceright ] };

    key <AC01> { [ Arabic_sheen, Arabic_kasra,       a,          A        ] };
    key <AC02> { [  Arabic_seen, Arabic_kasratan,    s,          S        ] };
    key <AC03> { [   Arabic_yeh, bracketright,       d,          D        ] };
    key <AC04> { [   Arabic_beh, bracketleft,        f,          F        ] };
    key <AC05> { [   Arabic_lam, 0x100fef7,          g,          G        ] };
    key <AC06> { [  Arabic_alef, Arabic_hamzaonalef, h,          H        ] };
    key <AC07> { [   Arabic_teh, Arabic_tatweel,     j,          J        ] };
    key <AC08> { [  Arabic_noon, Arabic_comma,       k,          K        ] };
    key <AC09> { [  Arabic_meem, slash,              l,          L        ] };
    key <AC10> { [   Arabic_kaf, colon,              semicolon,  colon    ] };
    key <AC11> { [   Arabic_tah, quotedbl,           apostrophe, quotedbl ] };
    key <BKSL> { [    backslash, bar,                backslash,  bar      ] };

    key <LSGT> { [                bar,            brokenbar,    bar, brokenbar ] };
    key <AB01> { [  Arabic_hamzaonyeh,           asciitilde,      z, Z         ] };
    key <AB02> { [       Arabic_hamza,         Arabic_sukun,      x, X         ] };
    key <AB03> { [  Arabic_hamzaonwaw,           braceright,      c, C         ] };
    key <AB04> { [          Arabic_ra,            braceleft,      v, V         ] };
    key <AB05> { [          0x100fefb,            0x100fef5,      b, B         ] };
    key <AB06> { [ Arabic_alefmaksura,   Arabic_maddaonalef,      n, N         ] };
    key <AB07> { [  Arabic_tehmarbuta,           apostrophe,      m, M         ] };
    key <AB08> { [         Arabic_waw,                comma,  comma, less      ] };
    key <AB09> { [        Arabic_zain,               period, period, greater   ] };
    key <AB10> { [         Arabic_zah, Arabic_question_mark,  slash, question  ] };

	include "level3(ralt_switch)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/ara(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "qwerty" {
	include "ara(qwerty)"
};

partial alphanumeric_keys
	xkb_symbols "azerty" {
	include "ara(azerty)"
};

partial alphanumeric_keys
	xkb_symbols "digits" {
	include "ara(digits)"
};

partial alphanumeric_keys
	xkb_symbols "qwerty_digits" {
	include "ara(qwerty_digits)"
};

partial alphanumeric_keys
	xkb_symbols "azerty_digits" {
	include "ara(azerty_digits)"
};

partial alphanumeric_keys
	xkb_symbols "buckwalter" {
	include "ara(buckwalter)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "ara(olpc)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Belgium (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE>  { [twosuperior, threesuperior                         ] };
    key <AE01>  { [ ampersand,          1,          bar               ] };
    key <AE02>  { [    eacute,          2,           at               ] };
    key <AE03>  { [  quotedbl,          3,   numbersign               ] };
    key <AE04>  { [apostrophe,          4                             ] };
    key <AE05>  { [ parenleft,          5                             ] };
    key <AE06>  { [   section,          6,  asciicircum               ] };
    key <AE07>  { [    egrave,          7                             ] };
    key <AE08>  { [    exclam,          8                             ] };
    key <AE09>  { [  ccedilla,          9,    braceleft               ] };
    key <AE10>  { [    agrave,          0,   braceright               ] };
    key <AE11>  { [parenright,     degree                             ] };
    key <AE12>  { [     minus, underscore                             ] };

    key <AD01>  { [         a,          A                             ] };
    key <AD02>  { [         z,          Z                             ] };
    key <AD03>  { [         e,          E,     EuroSign               ] };
    key <AD09>  { [         o,          O                             ] };
    key <AD11>  { [dead_circumflex, dead_diaeresis,  bracketleft      ] };
    key <AD12>  { [    dollar,   asterisk, bracketright               ] };

    key <AC01>  { [         q,          Q                             ] };
    key <AC10>  { [         m,          M                             ] };
    key <AC11>  { [    ugrave,    percent,   dead_acute               ] };
    key <BKSL>  { [        mu,   sterling,   dead_grave               ] };

    key <LSGT>  { [      less,    greater,    backslash               ] };
    key <AB01>  { [         w,          W                             ] };
    key <AB07>  { [     comma,   question                             ] };
    key <AB08>  { [ semicolon,     period                             ] };
    key <AB09>  { [     colon,      slash                             ] };
    key <AB10>  { [     equal,       plus,   dead_tilde               ] };

	include "level3(ralt_switch)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/be(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "oss" {
	include "be(oss)"
};

partial alphanumeric_keys
	xkb_symbols "oss_frbe" {
	include "be(oss_frbe)"
};

partial alphanumeric_keys
	xkb_symbols "oss_latin9" {
	include "be(oss_latin9)"
};

partial alphanumeric_keys
	xkb_symbols "oss_Sundeadkeys" {
	include "be(oss_Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "oss_sundeadkeys" {
	include "be(oss_sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "iso-alternate" {
	include "be(iso-alternate)"
};

partial alphanumeric_keys
	xkb_symbols "sundeadkeys" {
	include "be(sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "Sundeadkeys" {
	include "be(Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "be(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "wang" {
	include "be(wang)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]= "Portuguese (Brazil, Sun Type 6/7)";
 
	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [      apostrophe,        quotedbl,	notsign		               ] };
    key <AE01> { [               1,          exclam,	onesuperior,        exclamdown ] };
    key <AE02> { [               2,              at,	twosuperior,           onehalf ] };
    key <AE03> { [               3,      numbersign,	threesuperior,   threequarters ] };
    key <AE04> { [               4,          dollar,	sterling,           onequarter ] };
    key <AE05> { [               5,         percent,	cent                           ] };
    key <AE06> { [               6,  dead_diaeresis,	notsign,             diaeresis ] };
    key <AE07> { [               7,       ampersand,	braceleft                      ] };
    key <AE08> { [               8,        asterisk,	bracketleft                    ] };
    key <AE09> { [               9,       parenleft,	bracketright                   ] };
    key <AE10> { [               0,      parenright,	braceright                     ] };
    key <AE11> { [           minus,      underscore,	backslash                      ] };
    key <AE12> { [           equal,            plus,	section                        ] };

    key <AD03> { [               e,               E,	EuroSign                       ] };
    key <AD04> { [               r,               R,	registered                     ] };
    key <AD11> { [      dead_acute,      dead_grave,	acute,                   grave ] };
    key <AD12> { [     bracketleft,       braceleft,	ordfeminine                    ] };

    key <AC10> { [        ccedilla,        Ccedilla,	exclamdown		       ] };
    key <AC11> { [      dead_tilde, dead_circumflex,	asciitilde,        asciicircum ] };
    key <AC12> { [    bracketright,      braceright,	masculine                      ] };
    key <BKSL> { [   bracketright,       braceright,    masculine                      ] };

    key <LSGT> { [          slash,              bar,    degree                         ] };
    key <AB01> { [               z,               Z,	guillemotleft 		       ] };
    key <AB02> { [               x,               X,	guillemotright                 ] };
    key <AB03> { [               c,               C,	copyright                      ] };
    key <AB07> { [               m,               M,	mu                             ] };
    key <AB08> { [           comma,            less,	question                       ] };
    key <AB09> { [          period,         greater,	questiondown                   ] };
    key <AB10> { [       semicolon,           colon                                    ] };
    key <AB11> { [           slash,        question,	degree,           questiondown ] };

    key <KPPT> { [      KP_Decimal                                                     ] };
    key <KPDL> { [       KP_Delete,           comma                                    ] };

	include "level3(ralt_switch)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/br(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "abnt2" {
	include "br(abnt2)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "br(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "thinkpad" {
	include "br(thinkpad)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "br(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "br(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "nativo" {
	include "br(nativo)"
};

partial alphanumeric_keys
	xkb_symbols "nativo-us" {
	include "br(nativo-us)"
};

partial alphanumeric_keys
	xkb_symbols "nativo-epo" {
	include "br(nativo-epo)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default alphanumeric_keys
xkb_symbols "sun_type6" {

   name[Group1]="Multilingual (Canada, Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

   key <TLDE> { [           slash, bar,             backslash                  ]};
   key <AE01> { [               1, exclam,          plusminus                  ]};
   key <AE02> { [               2, at                                          ]};
   key <AE03> { [               3, numbersign,      sterling                   ]};
   key <AE04> { [               4, dollar,          cent                       ]};
   key <AE05> { [               5, percent,         currency                   ]};
   key <AE06> { [               6, question,        notsign	               ]};
   key <AE07> { [               7, ampersand,       braceleft                  ]};
   key <AE08> { [               8, asterisk,        braceright                 ]};
   key <AE09> { [               9, parenleft,       bracketleft                ]};
   key <AE10> { [               0, parenright,      bracketright               ]};
   key <AE11> { [           minus, underscore,      onehalf	               ]};
   key <AE12> { [           equal, plus,            notsign                    ]};
  
   key <AD03> { [               e, E,               EuroSign		       ]};
   key <AD09> { [               o, O,               section		       ]};
   key <AD10> { [               p, P,               paragraph                  ]};
   key <AD11> { [ dead_circumflex, dead_diaeresis,  dead_grave                 ]};
   key <AD12> { [        ccedilla, Ccedilla,        asciitilde                 ]};

   key <AC10> { [       semicolon, colon,           degree                     ]};
   key <AC11> { [          egrave, Egrave,          braceleft                  ]};
   key <AC12> { [          agrave, Agrave,          braceright                 ]};
   key <BKSL> { [          agrave, Agrave,          braceright                 ]};

   key <LSGT> { [          uacute, Uacute                                      ]};
   key <AB01> { [               z, Z,               guillemotleft              ]};
   key <AB02> { [               x, X,               guillemotright             ]};
   key <AB07> { [               m, M,               mu                         ]};
   key <AB08> { [           comma, apostrophe,      less                       ]};
   key <AB09> { [          period, quotedbl,        greater                    ]};
   key <AB10> { [          eacute, Eacute,          grave                      ]};
   
	include "level3(ralt_switch)"

};

alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/ca(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "fr" {
	include "ca(fr)"
};

partial alphanumeric_keys
	xkb_symbols "fr-dvorak" {
	include "ca(fr-dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "fr-legacy" {
	include "ca(fr-legacy)"
};

partial alphanumeric_keys
	xkb_symbols "multi" {
	include "ca(multi)"
};

partial alphanumeric_keys
	xkb_symbols "multi-2gr" {
	include "ca(multi-2gr)"
};

partial alphanumeric_keys
	xkb_symbols "ike" {
	include "ca(ike)"
};

partial alphanumeric_keys
	xkb_symbols "multix" {
	include "ca(multix)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "ca(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "eng" {
	include "ca(eng)"
};

partial alphanumeric_keys
	xkb_symbols "kut" {
	include "ca(kut)"
};

partial alphanumeric_keys
	xkb_symbols "shs" {
	include "ca(shs)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6_de" {

    name[Group1]= "German (Switzerland, Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [    section,     degree                           ] };
    key <AE01> { [          1,       plus,          bar             ] };
    key <AE02> { [          2,   quotedbl,           at             ] };
    key <AE03> { [          3,   asterisk,   numbersign             ] };
    key <AE04> { [          4,   ccedilla,  asciicircum             ] };
    key <AE05> { [          5,    percent,   asciitilde             ] };
    key <AE06> { [          6,  ampersand,      notsign             ] };
    key <AE07> { [          7,      slash,    brokenbar             ] };
    key <AE08> { [          8,  parenleft,         cent             ] };
    key <AE09> { [          9, parenright                           ] };
    key <AE10> { [          0,      equal,        grave             ] };
    key <AE11> { [ apostrophe,   question,   dead_acute             ] };
    key <AE12> { [ dead_circumflex, dead_grave, dead_tilde          ] };

    key <AD03> { [          e,          E,     EuroSign             ] };
    key <AD06> { [          z,          Z                           ] };
    key <AD11> { [ udiaeresis,     egrave,  bracketleft             ] };
    key <AD12> { [ dead_diaeresis, exclam, bracketright             ] };

    key <AC10> { [ odiaeresis,     eacute                           ] };
    key <AC11> { [ adiaeresis,     agrave,    braceleft             ] };
    key <BKSL> { [     dollar,   sterling,   braceright             ] };

    key <LSGT> { [       less,    greater,    backslash             ] };
    key <AB01> { [          y,          Y                           ] };
    key <AB08> { [      comma,  semicolon                           ] };
    key <AB09> { [     period,      colon                           ] };
    key <AB10> { [      minus, underscore                           ] };

	include "level3(ralt_switch)"

};

partial alphanumeric_keys 
xkb_symbols "sun_type6_fr" {

    name[Group1]= "French (Switzerland, Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [    section,     degree                           ] };
    key <AE01> { [          1,       plus,          bar             ] };
    key <AE02> { [          2,   quotedbl,           at             ] };
    key <AE03> { [          3,   asterisk,   numbersign             ] };
    key <AE04> { [          4,   ccedilla,  asciicircum             ] };
    key <AE05> { [          5,    percent,   asciitilde             ] };
    key <AE06> { [          6,  ampersand,      notsign             ] };
    key <AE07> { [          7,      slash,    brokenbar             ] };
    key <AE08> { [          8,  parenleft,         cent             ] };
    key <AE09> { [          9, parenright                           ] };
    key <AE10> { [          0,      equal,        grave             ] };
    key <AE11> { [ apostrophe,   question,   dead_acute             ] };
    key <AE12> { [ dead_circumflex, dead_grave, dead_tilde          ] };

    key <AD03> { [          e,          E,     EuroSign             ] };
    key <AD06> { [          z,          Z                           ] };
    key <AD11> { [     egrave, udiaeresis,  bracketleft             ] };
    key <AD12> { [ dead_diaeresis, exclam, bracketright             ] };

    key <AC10> { [     eacute, odiaeresis                           ] };
    key <AC11> { [     agrave, adiaeresis,    braceleft             ] };
    key <BKSL> { [     dollar,   sterling,   braceright             ] };

    key <LSGT> { [       less,    greater,    backslash             ] };
    key <AB01> { [          y,          Y                           ] };
    key <AB08> { [      comma,  semicolon                           ] };
    key <AB09> { [     period,      colon                           ] };
    key <AB10> { [      minus, underscore                           ] };
	
	include "level3(ralt_switch)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/ch(sun_type6_de)"
};

partial alphanumeric_keys
	xkb_symbols "legacy" {
	include "ch(legacy)"
};

partial alphanumeric_keys
	xkb_symbols "de" {
	include "ch(de)"
};

partial alphanumeric_keys
	xkb_symbols "de_Sundeadkeys" {
	include "ch(de_Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "de_sundeadkeys" {
	include "ch(de_sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "de_nodeadkeys" {
	include "ch(de_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "fr" {
	include "ch(fr)"
};

partial alphanumeric_keys
	xkb_symbols "fr_Sundeadkeys" {
	include "ch(fr_Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "fr_sundeadkeys" {
	include "ch(fr_sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "fr_nodeadkeys" {
	include "ch(fr_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "de_mac" {
	include "ch(de_mac)"
};

partial alphanumeric_keys
	xkb_symbols "fr_mac" {
	include "ch(fr_mac)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//


partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Czech (Sun Type 6/7";

	include "sun_vndr/us(sun_type6)"

    key <TLDE>	{ [ semicolon, dead_abovering,	grave,          asciitilde 	]	};
    key <AE01>	{ [      plus,          1,	exclam,     asciitilde	 	]	};
    key <AE02>	{ [    ecaron,          2,	at,     dead_caron 		]	};
    key <AE03>	{ [    scaron,          3,	numbersign,  dead_circumflex 	] 	};
    key <AE04>	{ [    ccaron,          4,	dollar,     dead_breve 		]	};
    key <AE05>	{ [    rcaron,          5,	percent, dead_abovering 	] 	};
    key <AE06>	{ [    zcaron,          6,	asciicircum,  dead_ogonek 	]	};
    key <AE07>	{ [    yacute,          7,	ampersand,          grave 	]	};
    key <AE08>	{ [    aacute,          8,	asterisk,  dead_abovedot	]	};
    key <AE09>	{ [    iacute,          9,	parenleft,    dead_acute    	]	};
    key <AE10>	{ [    eacute,          0,	parenright, dead_doubleacute	]	};
    key <AE11>	{ [     equal,    percent,	dead_diaeresis, backslash 	]	};
    key <AE12>	{ [ dead_acute, dead_caron,	dead_cedilla, minus 		]	};

    key <AD01>	{ [         q,          Q,	backslash 		]	};
    key <AD02>	{ [         w,          W,	bar 			]	};
    key <AD03>	{ [         e,          E,	EuroSign 		]	};
    key <AD06>	{ [         z,          Z 				]	};
    key <AD11>	{ [    uacute,      slash,	division 		]	};
    key <AD12>	{ [parenright,  parenleft,	multiply 		]	};

    key <AC02>	{ [         s,          S,	dstroke			]	};
    key <AC03>	{ [         d,          D,	Dstroke 		]	};
    key <AC04>	{ [         f,          F,	bracketleft 		]	};
    key <AC05>	{ [         g,          G,	bracketright 		]	};
    key <AC08>	{ [         k,          K,	lstroke 		]	};
    key <AC09>	{ [         l,          L,	Lstroke 		]	};              
    key <AC10>	{ [      uring,       quotedbl,	dollar 			]	};
    key <AC11>	{ [    section,         exclam,	ssharp,       currency	]	};
    key <BKSL>	{ [ dead_diaeresis, apostrophe,	backslash,         bar	]	};

    key <LSGT>	{ [  backslash,       asterisk,	slash,	     brokenbar	]	};
    key <AB01>	{ [          y,          Y,	less	 		]	};
    key <AB02>	{ [          x,          X,	greater,    numbersign  ]	};
    key <AB04>	{ [          v,          V,	at 			]	};
    key <AB05>	{ [          b,          B,	braceleft 		]	};
    key <AB06>	{ [          n,          N,	braceright	 	]	};
    key <AB08>	{ [      comma,       question,	less			]	};
    key <AB09>	{ [     period,          colon,	greater			]	};
    key <AB10>	{ [      minus,     underscore                   	]	};

	include "level3(ralt_switch)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/cz(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "bksl" {
	include "cz(bksl)"
};

partial alphanumeric_keys
	xkb_symbols "qwerty" {
	include "cz(qwerty)"
};

partial alphanumeric_keys
	xkb_symbols "qwerty_bksl" {
	include "cz(qwerty_bksl)"
};

partial alphanumeric_keys
	xkb_symbols "ucw" {
	include "cz(ucw)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak-ucw" {
	include "cz(dvorak-ucw)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="German (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [     asciicircum,           degree                   ] };
    key <AE02> { [               2,         quotedbl,     twosuperior  ] }; 
    key <AE03> { [               3,          section,   threesuperior  ] };
    key <AE04> { [               4,           dollar                   ] };
    key <AE06> { [               6,        ampersand,         section  ] };
    key <AE07> { [               7,            slash,       braceleft  ] };
    key <AE08> { [               8,        parenleft,     bracketleft  ] };
    key <AE09> { [               9,       parenright,    bracketright  ] };
    key <AE10> { [               0,            equal,      braceright  ] };
    key <AE11> { [          ssharp,         question,       backslash  ] };
    key <AE12> { [      dead_acute,       dead_grave                   ] };
    key <AD01> { [               q,                Q,              at  ] };
    key <AD03> { [               e,                E,        EuroSign  ] };
    key <AD06> { [               z,                Z                   ] };
    key <AD11> { [      udiaeresis,       Udiaeresis                   ] };
    key <AD12> { [            plus,         asterisk,      asciitilde  ] };
    key <AC10> { [      odiaeresis,       Odiaeresis                   ] };
    key <AC11> { [      adiaeresis,       Adiaeresis                   ] };
    key <AB01> { [               y,                Y                   ] };
    key <AB07> { [               m,                M,              mu  ] };
    key <AB08> { [           comma,        semicolon                   ] };
    key <AB09> { [          period,            colon                   ] };
    key <AB10> { [           minus,       underscore                   ] };
    key <BKSL> { [      numbersign,       apostrophe,           grave  ] };
    key <LSGT> { [            less,          greater,             bar  ] };

        include "level3(ralt_switch)"
        include "kpdl(comma)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/de(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "legacy" {
	include "de(legacy)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "de(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "deadgraveacute" {
	include "de(deadgraveacute)"
};

partial alphanumeric_keys
	xkb_symbols "deadacute" {
	include "de(deadacute)"
};

partial alphanumeric_keys
	xkb_symbols "ro" {
	include "de(ro)"
};

partial alphanumeric_keys
	xkb_symbols "ro_nodeadkeys" {
	include "de(ro_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "de(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "Sundeadkeys" {
	include "de(Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "sundeadkeys" {
	include "de(sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "neo_base" {
	include "de(neo_base)"
};

partial alphanumeric_keys
	xkb_symbols "adnw" {
	include "de(adnw)"
};

partial alphanumeric_keys
	xkb_symbols "adnw_base" {
	include "de(adnw_base)"
};

partial alphanumeric_keys
	xkb_symbols "neo" {
	include "de(neo)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "de(mac)"
};

partial alphanumeric_keys
	xkb_symbols "mac_nodeadkeys" {
	include "de(mac_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "dsb" {
	include "de(dsb)"
};

partial alphanumeric_keys
	xkb_symbols "dsb_qwertz" {
	include "de(dsb_qwertz)"
};

partial alphanumeric_keys
	xkb_symbols "qwerty" {
	include "de(qwerty)"
};

partial alphanumeric_keys
	xkb_symbols "ru" {
	include "de(ru)"
};

partial alphanumeric_keys
	xkb_symbols "htcdream" {
	include "de(htcdream)"
};

partial alphanumeric_keys
	xkb_symbols "us" {
	include "de(us)"
};

partial alphanumeric_keys
	xkb_symbols "hu" {
	include "de(hu)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Danish (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [         onehalf,         section                ] };
    key <AE02> { [               2,        quotedbl,            at ] };
    key <AE03> { [               3,      numbersign,      sterling ] };
    key <AE04> { [               4,        currency,        dollar ] };
    key <AE05> { [               5,         percent,    asciitilde ] };
    key <AE06> { [               6,       ampersand,   asciicircum ] };
    key <AE07> { [               7,           slash,     braceleft ] };
    key <AE08> { [               8,       parenleft,   bracketleft ] };
    key <AE09> { [               9,      parenright,  bracketright ] };
    key <AE10> { [               0,           equal,    braceright ] };
    key <AE11> { [            plus,        question                ] };
    key <AE12> { [      dead_acute,      dead_grave,           bar ] }; 
    key <AD03> { [               e,               E,      EuroSign ] }; 
    key <AD11> { [           aring,           Aring                ] };
    key <AD12> { [  dead_diaeresis, dead_circumflex,    dead_tilde ] };
    key <BKSL> { [      apostrophe,        asterisk,         grave ] };
    key <AC10> { [              ae,              AE                ] };
    key <AC11> { [          oslash,        Ooblique                ] };
    key <AB08> { [           comma,       semicolon                ] };
    key <AB09> { [          period,           colon                ] };
    key <AB10> { [           minus,      underscore                ] };
    key <LSGT> { [            less,         greater,     backslash ] };

        include "level3(ralt_switch)"
        include "kpdl(comma)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/dk(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "dk(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "dk(mac)"
};

partial alphanumeric_keys
	xkb_symbols "mac_nodeadkeys" {
	include "dk(mac_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "dk(dvorak)"
};
                                                                                                                                                                                                                                                                                                           //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="English (UK, Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [      grave,    notsign,  brokenbar ] };

    key <AE02> { [          2,   quotedbl             ] };
    key <AE03> { [          3,   sterling             ] };
    key <AE04> { [          4,     dollar,   EuroSign ] };
    key <BKSL> { [ numbersign, asciitilde             ] };
    key <AC11> { [ apostrophe,         at             ] };
    key <LSGT> { [  backslash,        bar             ] };

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/gb(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "intl" {
	include "gb(intl)"
};

partial alphanumeric_keys
	xkb_symbols "extd" {
	include "gb(extd)"
};

partial alphanumeric_keys
	xkb_symbols "colemak" {
	include "gb(colemak)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "gb(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "dvorakukp" {
	include "gb(dvorakukp)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "gb(mac)"
};

partial alphanumeric_keys
	xkb_symbols "mac_intl" {
	include "gb(mac_intl)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                //
// Copyright (c) 2009, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Estonian (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

   key <TLDE> { [     dead_caron,    dead_tilde,	notsign,       notsign ] };
   key <AE01> { [              1,        exclam,	onesuperior,    exclamdown ] };
   key <AE02> { [              2,      quotedbl,	at,     oneeighth ] };
   key <AE03> { [              3,    numbersign,	sterling,      sterling ] };
   key <AE04> { [              4,      currency,	dollar,        dollar ] };
   key <AE05> { [              5,       percent,	onehalf,  threeeighths ] };
   key <AE06> { [              6,     ampersand,	notsign,   fiveeighths ] };
   key <AE07> { [              7,         slash,	braceleft,  seveneighths ] };
   key <AE08> { [              8,     parenleft,	bracketleft,     trademark ] };
   key <AE09> { [              9,    parenright,	bracketright,     plusminus ] };
   key <AE10> { [              0,         equal,	braceright,        degree ] };
   key <AE11> { [           plus,      question,	backslash,  questiondown ] };
   key <AE12> { [     dead_acute,    dead_grave,	grave,    apostrophe ] };

   key <AD01> { [              q,             Q,	at,   Greek_OMEGA ] };
   key <AD02> { [              w,             W,	lstroke,       Lstroke ] };
   key <AD03> { [              e,             E,	EuroSign,          cent ] };
   key <AD04> { [              r,             R,	paragraph,    registered ] };
   key <AD05> { [              t,             T,	tslash,        Tslash ] };
   key <AD06> { [              y,             Y,	leftarrow,           yen ] };
   key <AD07> { [              u,             U,	downarrow,       uparrow ] };
   key <AD08> { [              i,             I,	rightarrow,      idotless ] };
   key <AD09> { [              o,             O,	oslash,      Ooblique ] };
   key <AD10> { [              p,             P,	thorn,         THORN ] };
   key <AD11> { [     udiaeresis,    Udiaeresis,	dead_diaeresis,dead_abovering ] };
   key <AD12> { [         otilde,        Otilde,	section,   dead_macron ] };

   key <AC01> { [              a,             A,	ae,            AE ] };
   key <AC02> { [              s,             S,	ssharp,       section ] };
   key <AC03> { [              d,             D,	eth,           ETH ] };
   key <AC04> { [              f,             F,	dstroke,   ordfeminine ] };
   key <AC05> { [              g,             G,	eng,           ENG ] };
   key <AC06> { [              h,             H,	hstroke,       Hstroke ] };
   key <AC07> { [              j,             J,	j,             J ] };
   key <AC08> { [              k,             K,	kra,     ampersand ] };
   key <AC09> { [              l,             L,	lstroke,       Lstroke ] };
   key <AC10> { [     odiaeresis,    Odiaeresis,	dead_acute, dead_doubleacute ] };
   key <AC11> { [     adiaeresis,    Adiaeresis,	asciicircum,    dead_caron ] };
   key <LSGT> { [      backslash,           bar,	degree,     brokenbar ] };

   key <BKSL> { [     apostrophe,      asterisk,	onehalf,    dead_breve ] };
   key <AB01> { [              z,             Z,	zcaron,        Zcaron ] };
   key <AB02> { [              x,             X,	guillemotright,       greater ] };
   key <AB03> { [              c,             C,	cent,     copyright ] };
   key <AB04> { [              v,             V,	leftdoublequotemark, leftsinglequotemark ] };
   key <AB05> { [              b,             B,	rightdoublequotemark, rightsinglequotemark ] };
   key <AB06> { [              n,             N,	ncedilla,      Ncedilla ] };
   key <AB07> { [              m,             M,	mu,     masculine ] };
   key <AB08> { [          comma,     semicolon,	less,      multiply ] };
   key <AB09> { [         period,         colon,	greater,      division ] };
   key <AB10> { [          minus,    underscore,	dead_belowdot, dead_abovedot ] };

	include "level3(ralt_switch)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/ee(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "ee(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "ee(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "us" {
	include "ee(us)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Spanish (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [       masculine,     ordfeminine,     backslash ] };
    key <LSGT> { [            less,         greater                ] };
    key <AE01> { [               1,          exclam,           bar ] };
    key <AE02> { [               2,        quotedbl,            at ] };
    key <AE03> { [               3,  periodcentered,    numbersign ] };
    key <AE04> { [               4,          dollar,   asciicircum ] };
    key <AE05> { [               5,         percent,    asciitilde ] };
    key <AE06> { [               6,       ampersand,       notsign ] };
    key <AE07> { [               7,           slash                ] };
    key <AE08> { [               8,       parenleft                ] };
    key <AE09> { [               9,      parenright                ] }; 
    key <AE10> { [               0,           equal                ] };
    key <AE11> { [      apostrophe,        question,         grave ] };
    key <AE12> { [      exclamdown,    questiondown                ] };
    key <AD03> { [               e,               E,      EuroSign ] };
    key <AD11> { [      dead_grave, dead_circumflex,   bracketleft ] };
    key <AD12> { [            plus,        asterisk,  bracketright ] };
    key <AC10> { [          ntilde,          Ntilde                ] };
    key <AC11> { [      dead_acute,  dead_diaeresis,     braceleft ] };
    key <BKSL> { [        ccedilla,        Ccedilla,    braceright ] };
    key <AB08> { [           comma,       semicolon                ] };
    key <AB09> { [          period,           colon                ] };
    key <AB10> { [           minus,      underscore                ] };
   
        include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/es(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "Sundeadkeys" {
	include "es(Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "sundeadkeys" {
	include "es(sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "es(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "es(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "cat" {
	include "es(cat)"
};

partial alphanumeric_keys
	xkb_symbols "ast" {
	include "es(ast)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "es(mac)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "es(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "deadtilde" {
	include "es(deadtilde)"
};

partial alphanumeric_keys
	xkb_symbols "olpc2" {
	include "es(olpc2)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Finnish (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [  section,         onehalf                                  ] };
    key <AE01> { [  1,               exclam                                   ] };
    key <AE02> { [  2,               quotedbl,         at                     ] };
    key <AE03> { [  3,               numbersign,       sterling               ] };
    key <AE04> { [  4,               currency,         dollar                 ] };
    key <AE05> { [  5,               percent                                  ] };
    key <AE06> { [  6,               ampersand                                ] };
    key <AE07> { [  7,               slash,            braceleft              ] };
    key <AE08> { [  8,               parenleft,        bracketleft            ] };
    key <AE09> { [  9,               parenright,       bracketright           ] };
    key <AE10> { [  0,               equal,            braceright             ] };
    key <AE11> { [  plus,            question,         backslash              ] };
    key <AE12> { [  dead_acute,      dead_grave                               ] };
    key <AD03> { [  e,               E,                EuroSign               ] };
    key <AD11> { [  aring,           Aring                                    ] };
    key <AD12> { [  dead_diaeresis,  asciicircum,      asciitilde             ] };
    key <AC10> { [  odiaeresis,      Odiaeresis                               ] };
    key <AC11> { [  adiaeresis,      Adiaeresis                               ] };
    key <BKSL> { [  apostrophe,      asterisk,         grave                  ] };
    key <LSGT> { [  less,            greater,          bar                    ] };
    key <AB08> { [  comma,           semicolon                                ] };
    key <AB09> { [  period,          colon                                    ] };
    key <AB10> { [  minus,           underscore                               ] };

	include "level3(ralt_switch)"
	include "kpdl(comma)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/fi(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "kotoistus" {
	include "fi(kotoistus)"
};

partial alphanumeric_keys
	xkb_symbols "classic" {
	include "fi(classic)"
};

partial alphanumeric_keys
	xkb_symbols "fi" {
	include "fi(fi)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "fi(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "smi" {
	include "fi(smi)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "fi(mac)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="French (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE>  { [     twosuperior                              ] };
    key <AE01>	{ [       ampersand,          1                  ] };
    key <AE02>	{ [          eacute,          2,   asciitilde    ] };
    key <AE03>	{ [        quotedbl,          3,   numbersign    ] };
    key <AE04>	{ [      apostrophe,          4,    braceleft    ] };
    key <AE05>	{ [       parenleft,          5,  bracketleft    ] };
    key <AE06>	{ [           minus,          6,          bar    ] };
    key <AE07>	{ [          egrave,          7,        grave    ] };
    key <AE08>	{ [      underscore,          8,    backslash    ] };
    key <AE09>	{ [        ccedilla,          9,  asciicircum    ] };
    key <AE10>	{ [          agrave,          0,           at    ] };
    key <AE11>	{ [      parenright,     degree, bracketright    ] };
    key <AE12>	{ [           equal,       plus,   braceright    ] };

    key <AD01>	{ [               a,          A                  ] };
    key <AD02>	{ [               z,          Z                  ] };
    key <AD03>	{ [               e,          E,     EuroSign    ] };
    key <AD11>	{ [ dead_circumflex, dead_diaeresis              ] };
    key <AD12>	{ [          dollar,   sterling,     currency    ] };

    key <AC01>	{ [               q,          Q                  ] };
    key <AC10>	{ [               m,          M                  ] };
    key <AC11>	{ [          ugrave,    percent                  ] };
    key <BKSL>	{ [        asterisk,         mu                  ] };

    key <LSGT>  { [            less,    greater                  ] };
    key <AB01>	{ [               w,          W                  ] };
    key <AB07>	{ [           comma,   question                  ] };
    key <AB08>	{ [       semicolon,     period                  ] };
    key <AB09>	{ [           colon,      slash                  ] };
    key <AB10>	{ [          exclam,    section                  ] };

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/fr(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "fr(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "Sundeadkeys" {
	include "fr(Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "sundeadkeys" {
	include "fr(sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "fr(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "oss" {
	include "fr(oss)"
};

partial alphanumeric_keys
	xkb_symbols "oss_latin9" {
	include "fr(oss_latin9)"
};

partial alphanumeric_keys
	xkb_symbols "oss_Sundeadkeys" {
	include "fr(oss_Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "oss_sundeadkeys" {
	include "fr(oss_sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "oss_nodeadkeys" {
	include "fr(oss_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "latin9" {
	include "fr(latin9)"
};

partial alphanumeric_keys
	xkb_symbols "latin9_Sundeadkeys" {
	include "fr(latin9_Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "latin9_sundeadkeys" {
	include "fr(latin9_sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "latin9_nodeadkeys" {
	include "fr(latin9_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "bepo" {
	include "fr(bepo)"
};

partial alphanumeric_keys
	xkb_symbols "bepo_latin9" {
	include "fr(bepo_latin9)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "fr(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "bre" {
	include "fr(bre)"
};

partial alphanumeric_keys
	xkb_symbols "oci" {
	include "fr(oci)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "fr(mac)"
};

partial alphanumeric_keys
	xkb_symbols "geo" {
	include "fr(geo)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Greek (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

	key <TLDE> { [                 grave,     asciitilde,	onehalf ] };
	key <AE01> { [                     1,         exclam ] };
	key <AE02> { [                     2,             at ] };
	key <AE03> { [                     3,     numbersign,	sterling ] };
	key <AE04> { [                     4,         dollar,	EuroSign ] };
	key <AE05> { [                     5,        percent,	EuroSign ] };
	key <AE06> { [                     6,    asciicircum,	notsign ] };
	key <AE07> { [                     7,      ampersand ] };
	key <AE08> { [                     8,       asterisk ] };
	key <AE09> { [                     9,      parenleft ] };
	key <AE10> { [                     0,     parenright,	degree ] };
	key <AE11> { [                 minus,     underscore,	plusminus ] };
	key <AE12> { [                 equal,           plus ] };

	key <AD01> { [             semicolon,          colon,	periodcentered ] };
	key <AD02> { [ Greek_finalsmallsigma, periodcentered,	Greek_SIGMA ] };
	key <AD03> { [         Greek_epsilon,  Greek_EPSILON,	EuroSign ] };
	key <AD04> { [             Greek_rho,      Greek_RHO,	registered ] };
	key <AD05> { [             Greek_tau,      Greek_TAU ] };
	key <AD06> { [         Greek_upsilon,  Greek_UPSILON ] };
	key <AD07> { [           Greek_theta,    Greek_THETA ] };
	key <AD08> { [            Greek_iota,     Greek_IOTA ] };
	key <AD09> { [         Greek_omicron,  Greek_OMICRON ] };
	key <AD10> { [              Greek_pi,       Greek_PI ] };
	key <AD11> { [           bracketleft,      braceleft,	guillemotleft ] };
	key <AD12> { [          bracketright,     braceright,	guillemotright ] };

	key <AC01> { [           Greek_alpha,    Greek_ALPHA ] };
	key <AC02> { [           Greek_sigma,    Greek_SIGMA ] };
	key <AC03> { [           Greek_delta,    Greek_DELTA ] };
	key <AC04> { [             Greek_phi,      Greek_PHI ] };
	key <AC05> { [           Greek_gamma,    Greek_GAMMA ] };
	key <AC06> { [             Greek_eta,      Greek_ETA ] };
	key <AC07> { [              Greek_xi,       Greek_XI ] };
	key <AC08> { [           Greek_kappa,    Greek_KAPPA ] };
	key <AC09> { [           Greek_lamda,    Greek_LAMDA ] };
	key <AC10> { [            dead_acute, dead_diaeresis ] };
	key <AC11> { [            apostrophe,       quotedbl ] };
	key <BKSL> { [             backslash,            bar,	brokenbar ] };

	key <LSGT> { [         guillemotleft, guillemotright,	brokenbar ] };
	key <AB01> { [            Greek_zeta,     Greek_ZETA ] };
	key <AB02> { [             Greek_chi,      Greek_CHI ] };
	key <AB03> { [             Greek_psi,      Greek_PSI,	copyright ] };
	key <AB04> { [           Greek_omega,    Greek_OMEGA ] };
	key <AB05> { [            Greek_beta,     Greek_BETA ] };
	key <AB06> { [              Greek_nu,       Greek_NU ] };
	key <AB07> { [              Greek_mu,       Greek_MU ] };
	key <AB08> { [                 comma,           less,	guillemotleft ] };
	key <AB09> { [                period,        greater,	guillemotright ] };
	key <AB10> { [                 slash,       question ] };

	include "level3(ralt_switch)"
};

alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/gr(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "simple" {
	include "gr(simple)"
};

partial alphanumeric_keys
	xkb_symbols "bare" {
	include "gr(bare)"
};

partial alphanumeric_keys
	xkb_symbols "extended" {
	include "gr(extended)"
};

partial alphanumeric_keys
	xkb_symbols "polytonic" {
	include "gr(polytonic)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "gr(nodeadkeys)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]= "Italian (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <LSGT> { [            less,         greater                                ] };
    key <TLDE> { [       backslash,             bar                                ] };
    key <AE02> { [               2,        quotedbl                                ] };
    key <AE03> { [               3,        sterling                                ] };
    key <AE06> { [               6,       ampersand                                ] };
    key <AE07> { [               7,           slash                                ] };
    key <AE08> { [               8,       parenleft,    braceleft                  ] };     
    key <AE09> { [               9,      parenright,   braceright                  ] };     
    key <AE10> { [               0,           equal                                ] };
    key <AE11> { [      apostrophe,        question,        grave                  ] };     
    key <AE12> { [          igrave,     asciicircum                                ] };
    key <AD03> { [               e,               E,     EuroSign                  ] };
    key <AD11> { [          egrave,          eacute,  bracketleft,  dead_abovering ] };
    key <AD12> { [            plus,        asterisk, bracketright                  ] };      
    key <BKSL> { [          ugrave,         section,   asciitilde                  ] };
    key <AC10> { [          ograve,        ccedilla,           at                  ] };      
    key <AC11> { [          agrave,          degree,   numbersign                  ] };
    key <AB08> { [           comma,       semicolon                                ] };
    key <AB09> { [          period,           colon                                ] };
    key <AB10> { [           minus,      underscore                                ] };

        include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/it(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "it(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "it(mac)"
};

partial alphanumeric_keys
	xkb_symbols "geo" {
	include "it(geo)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "it(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "us" {
	include "it(us)"
};

partial alphanumeric_keys
	xkb_symbols "htcdream" {
	include "it(htcdream)"
};

partial alphanumeric_keys
	xkb_symbols "ibm" {
	include "it(ibm)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys modifier_keys
xkb_symbols "sun_type6_suncompat" {

	include "inet(evdev)"
	include "sun_vndr/us(sunbasic)"

    key <AE13> { [ backslash, bar       ], [ prolongedsound     ]       };
    key <AE01> { [ 1, exclam       ], [ kana_NU        ]   };
    key <AE02> { [ 2, quotedbl     ], [ kana_FU        ]   };
    key <AE03> { [ 3, numbersign   ], [ kana_A, kana_a ]   };
    key <AE04> { [ 4, dollar       ], [ kana_U, kana_u ]   };
    key <AE05> { [ 5, percent      ], [ kana_E, kana_e ]   };
    key <AE06> { [ 6, ampersand        ], [ kana_O, kana_o ]   };
    key <AE07> { [ 7, apostrophe   ], [ kana_YA, kana_ya   ]   };
    key <AE08> { [ 8, parenleft        ], [ kana_YU, kana_yu   ]   };
    key <AE09> { [ 9, parenright   ], [ kana_YO, kana_yo   ]   };
    key <AE10> { [ 0           ], [ kana_WA, kana_WO   ]   };
    key <AE11> { [ minus, equal        ], [ kana_HO        ]   };
    key <AE12> { [ asciicircum,    asciitilde], [ kana_HE      ]   };

    key <AD01> { [ q, Q            ], [ kana_TA        ]   };
    key <AD02> { [ w, W            ], [ kana_TE        ]   };
    key <AD03> { [ e, E            ], [ kana_I, kana_i ]   };
    key <AD04> { [ r, R            ], [ kana_SU        ]   };
    key <AD05> { [ t, T            ], [ kana_KA        ]   };
    key <AD06> { [ y, Y            ], [ kana_N     ]   };
    key <AD07> { [ u, U            ], [ kana_NA        ]   };
    key <AD08> { [ i, I            ], [ kana_NI        ]   };
    key <AD09> { [ o, O            ], [ kana_RA        ]   };
    key <AD10> { [ p, P            ], [ kana_SE        ]   };
    key <AD11> { [ at, grave       ], [ voicedsound    ]   };
    key <AD12> { [ bracketleft,    braceleft ], [ semivoicedsound, kana_openingbracket ] };

    key <AC01> { [ a, A            ], [ kana_CHI       ]   };
    key <AC02> { [ s, S            ], [ kana_TO        ]   };
    key <AC03> { [ d, D            ], [ kana_SHI       ]   };
    key <AC04> { [ f, F            ], [ kana_HA        ]   };
    key <AC05> { [ g, G            ], [ kana_KI        ]   };
    key <AC06> { [ h, H            ], [ kana_KU        ]   };
    key <AC07> { [ j, J            ], [ kana_MA        ]   };
    key <AC08> { [ k, K            ], [ kana_NO        ]   };
    key <AC09> { [ l, L            ], [ kana_RI        ]   };
    key <AC10> { [ semicolon, plus ], [ kana_RE        ]   };
    key <AC11> { [ colon, asterisk ], [ kana_KE        ]   };
    key <BKSL> { [ bracketright, braceright ], [ kana_MU, kana_closingbracket ] };

    key <AB01> { [ z, Z            ], [ kana_TSU, kana_tsu ]   };
    key <AB02> { [ x, X            ], [ kana_SA        ]   };
    key <AB03> { [ c, C            ], [ kana_SO        ]   };
    key <AB04> { [ v, V            ], [ kana_HI        ]   };
    key <AB05> { [ b, B            ], [ kana_KO        ]   };
    key <AB06> { [ n, N            ], [ kana_MI        ]   };
    key <AB07> { [ m, M            ], [ kana_MO        ]   };
    key <AB08> { [ comma, less     ], [ kana_NE, kana_comma ]  };
    key <AB09> { [ period, greater ], [ kana_RU, kana_fullstop ]   };
    key <AB10> { [ slash, question ], [ kana_ME, kana_conjunctive ]};
    key <AB11> { [ backslash, underscore], [ kana_RO       ]   };
    key <UNDR> { [ backslash, underscore], [ kana_RO       ]   };

    key <EXEC> { [ Execute		            ]	};
    key <KANJ> { [ Kanji		            ]	};
    key <HENK> { [ Henkan_Mode		        ]	};
    key <ALGR> { [ Kana_Lock, Mode_switch   ]	};

	key <COMP> { [ Multi_key				]	};
	key <SYRQ> { [ SunSys_Req				]	};

	modifier_map Mod3 { Kana_Lock };

};

partial alphanumeric_keys
xkb_symbols "sun_type6" {

    // include "jp"
    // type6 based on "jp" should be provided later

    include "sun_vndr/jp(sun_type6_suncompat)"

};

partial alphanumeric_keys
xkb_symbols "sun_type7_suncompat" {

    include "sun_vndr/jp(sun_type6_suncompat)"

    key <AE10> { [ 0, asciitilde, kana_WA, kana_WO      ]   };
    key <TLDE> { [ Henkan_Mode                          ]   };
    key <HENK> { [ Kana_Lock, Mode_switch               ]   };
    key <ALGR> { [ Alt_R, Alt_R                         ]   };

};

partial alphanumeric_keys
xkb_symbols "suncompat" {

    include "sun_vndr/jp(sun_type7_suncompat)"
};

partial alphanumeric_keys
xkb_symbols "sun_type7" {

    include "jp"

};

partial alphanumeric_keys
	xkb_symbols "106" {
	include "jp(106)"
};

partial alphanumeric_keys
	xkb_symbols "common" {
	include "jp(common)"
};

partial alphanumeric_keys
	xkb_symbols "OADG109A" {
	include "jp(OADG109A)"
};

partial alphanumeric_keys
	xkb_symbols "kana86" {
	include "jp(kana86)"
};

partial alphanumeric_keys
	xkb_symbols "kana" {
	include "jp(kana)"
};

partial alphanumeric_keys
	xkb_symbols "nicola_f_bs" {
	include "jp(nicola_f_bs)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "jp(mac)"
};

partial alphanumeric_keys
	xkb_symbols "hztg_escape" {
	include "jp(hztg_escape)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "jp(dvorak)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

	name[Group1]= "Korean (Sun Type 6/7)";

	include "sun_vndr/us(sunbasic)"

    // A few keys are different
    key <ALGR> { [ Hangul                       ] };
    key <COMP> { [ Hangul_Hanja                 ] };
    key <KANA> { [ Hangul                       ] };
    key <EISU> { [ Hangul_Hanja                 ] };
    key <BKSL> { [ backslash, bar,  brokenbar   ] };

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/kr(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "kr106" {
	include "kr(kr106)"
};

partial alphanumeric_keys
	xkb_symbols "kr104" {
	include "kr(kr104)"
};

partial function_keys
	xkb_symbols "hw_keys" {
	include "kr(hw_keys)"
};

partial function_keys
	xkb_symbols "ralt_hangul" {
	include "kr(ralt_hangul)"
};

partial function_keys
	xkb_symbols "rctrl_hangul" {
	include "kr(rctrl_hangul)"
};

partial function_keys
	xkb_symbols "ralt_hanja" {
	include "kr(ralt_hanja)"
};

partial function_keys
	xkb_symbols "rctrl_hanja" {
	include "kr(rctrl_hanja)"
};

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Norwegian (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [             bar,         section                ] };
    key <LSGT> { [            less,         greater                ] };
    key <BKSL> { [      apostrophe,        asterisk,  grave        ] };
    key <AE02> { [               2,        quotedbl,  at           ] };
    key <AE03> { [               3,      numbersign,  sterling     ] };
    key <AE04> { [               4,        currency,  dollar       ] };
    key <AE05> { [               5,         percent,  asciitilde   ] };
    key <AE06> { [               6,       ampersand,  asciicircum  ] };
    key <AE07> { [               7,           slash,  braceleft    ] };
    key <AE08> { [               8,       parenleft,  bracketleft  ] };
    key <AE09> { [               9,      parenright,  bracketright ] };
    key <AE10> { [               0,           equal,  braceright   ] };
    key <AE11> { [            plus,        question                ] };
    key <AE12> { [       backslash,      dead_grave,  dead_acute   ] };
    key <AD03> { [               e,               E,  EuroSign     ] };
    key <AD11> { [           aring,           Aring                ] };
    key <AD12> { [  dead_diaeresis, dead_circumflex,  dead_tilde   ] };
    key <AC10> { [          oslash,          Oslash                ] }; 
    key <AC11> { [              ae,              AE                ] };
    key <AB08> { [           comma,       semicolon                ] };
    key <AB09> { [          period,           colon                ] };
    key <AB10> { [           minus,      underscore                ] };

        include "level3(ralt_switch)"
        include "kpdl(comma)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/no(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "no(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "no(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "smi" {
	include "no(smi)"
};

partial alphanumeric_keys
	xkb_symbols "smi_nodeadkeys" {
	include "no(smi_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "no(mac)"
};

partial alphanumeric_keys
	xkb_symbols "mac_nodeadkeys" {
	include "no(mac_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "colemak" {
	include "no(colemak)"
};
                                                          //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Lithuanian (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE>  { [     grave,   asciitilde,	notsign,   brokenbar ]    };
    key <AE01>  { [   aogonek,      Aogonek,	1,      exclam ]    };
    key <AE02>  { [    ccaron,       Ccaron,	2,          at ]    };
    key <AE03>  { [   eogonek,      Eogonek,	3,  numbersign ]    };
    key <AE04>  { [ eabovedot,    Eabovedot,	4,      dollar ]    };
    key <AE05>  { [   iogonek,      Iogonek,	5,     percent ]    };
    key <AE06>  { [    scaron,       Scaron,	6, asciicircum ]    };
    key <AE07>  { [   uogonek,      Uogonek,	7,   ampersand ]    };
    key <AE08>  { [   umacron,      Umacron,	8,    asterisk ]    };
    key <AE09>  { [  doublelowquotemark,  parenleft,	9,  parenleft ]    };
    key <AE10>  { [ leftdoublequotemark, parenright,	0, parenright ]    };
    key <AE11>  { [     minus,   underscore,	backslash, questiondown ]  };
    key <AE12>  { [    zcaron,       Zcaron,	equal,         plus ]  };

    key <AD01>  { [         q,          Q,	at,  Greek_OMEGA ] };
    key <AD02>  { [         w,          W,	lstroke,      Lstroke ] };
    key <AD03>  { [         e,          E,	EuroSign               ] };
    key <AD04>  { [         r,          R,	paragraph,   registered ] };
    key <AD05>  { [         t,          T,	tslash,       Tslash ] };
    key <AD06>  { [         y,          Y,	leftarrow,          yen ] };
    key <AD07>  { [         u,          U,	downarrow,      uparrow ] };
    key <AD08>  { [         i,          I,	rightarrow,     idotless ] };
    key <AD09>  { [         o,          O,	oslash,     Ooblique ] };
    key <AD10>  { [         p,          P,	thorn,        THORN ] };
    key <AD11>  { [  bracketleft,  braceleft,	dead_diaeresis, dead_abovering ] };
    key <AD12>  { [ bracketright, braceright,	dead_tilde,    dead_macron ] };

    key <AC01>  { [         a,          A,	ae,           AE ] };
    key <AC02>  { [         s,          S,	ssharp,      section ] };
    key <AC03>  { [         d,          D,	eth,          ETH ] };
    key <AC04>  { [         f,          F,	dstroke,  ordfeminine ] };
    key <AC05>  { [         g,          G,	eng,          ENG ] };
    key <AC06>  { [         h,          H,	hstroke,      Hstroke ] };
    key <AC07>  { [         j,          J ] 				    };
    key <AC08>  { [         k,          K,	kra,    ampersand ] };
    key <AC09>  { [         l,          L,	lstroke,      Lstroke ] };
    key <AC10>  { [  semicolon,     colon,	dead_acute, dead_doubleacute ] };
    key <AC11>  { [ apostrophe,  quotedbl,	dead_circumflex,  dead_caron ] };
    key <LSGT>  { [  backslash,       bar,	dead_grave,   dead_breve ] };

    key <BKSL>  { [ backslash,        bar,	dead_grave,   dead_breve ] };
    key <AB01>  { [         z,          Z,	guillemotleft,        less ] };
    key <AB02>  { [         x,          X,	guillemotright,    greater ] };
    key <AB03>  { [         c,          C,	cent,    copyright ] };
    key <AB04>  { [         v,          V,	leftdoublequotemark, leftsinglequotemark ]   };
    key <AB05>  { [         b,          B,	rightdoublequotemark, rightsinglequotemark ] };
    key <AB06>  { [         n,          N ]     };
    key <AB07>  { [         m,          M,	mu,    masculine ] };
    key <AB08>  { [     comma,       less,	ampersand,     multiply ] };
    key <AB09>  { [    period,    greater,	periodcentered,   division ] };
    key <AB10>  { [     slash,   question,	dead_belowdot, dead_abovedot ] };

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/lt(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "us" {
	include "lt(us)"
};

partial alphanumeric_keys
	xkb_symbols "std" {
	include "lt(std)"
};

partial alphanumeric_keys
	xkb_symbols "ibm" {
	include "lt(ibm)"
};

partial alphanumeric_keys
	xkb_symbols "lekp" {
	include "lt(lekp)"
};

partial alphanumeric_keys
	xkb_symbols "lekpa" {
	include "lt(lekpa)"
};

partial alphanumeric_keys
	xkb_symbols "us_dvorak" {
	include "lt(us_dvorak)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Latvian (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

   key <TLDE> { [          grave,    asciitilde,	acute,    asciitilde ] };
   key <AE01> { [              1,        exclam,	onesuperior,    exclamdown ] };
   key <AE02> { [              2,            at,	twosuperior,     oneeighth ] };
   key <AE03> { [              3,    numbersign,	threesuperior,      sterling ] };
   key <AE04> { [              4,        dollar,	EuroSign,          cent ] };
   key <AE05> { [              5,       percent,	onehalf,  threeeighths ] };
   key <AE06> { [              6,   asciicircum,	threequarters,   fiveeighths ] };
   key <AE07> { [              7,     ampersand,	braceleft,  seveneighths ] };
   key <AE08> { [              8,      asterisk,	bracketleft,     trademark ] };
   key <AE09> { [              9,     parenleft,	bracketright,     plusminus ] };
   key <AE10> { [              0,    parenright,	braceright,        degree ] };
   key <AE11> { [          minus,    underscore,	backslash,  questiondown ] };
   key <AE12> { [          equal,          plus,	endash,        emdash ] };

   key <AD01> { [              q,             Q,	q,             Q ] };
   key <AD02> { [              w,             W,	w,             W ] };
   key <AD03> { [              e,             E,	emacron,       Emacron ] };
   key <AD04> { [              r,             R,	rcedilla,      Rcedilla ] };
   key <AD05> { [              t,             T,	t,             T ] };
   key <AD06> { [              y,             Y,	y,             Y ] };
   key <AD07> { [              u,             U,	umacron,       Umacron ] };
   key <AD08> { [              i,             I,	imacron,       Imacron ] };
   key <AD09> { [              o,             O,	omacron,       Omacron ] };
   key <AD10> { [              p,             P,	p,             P ] };
   key <AD11> { [    bracketleft,     braceleft,	guillemotleft, leftdoublequotemark ] };
   key <AD12> { [   bracketright,    braceright,	guillemotright, rightdoublequotemark ] };

   key <AC01> { [              a,             A,	amacron,       Amacron ] };
   key <AC02> { [              s,             S,	scaron,        Scaron ] };
   key <AC03> { [              d,             D,	d,             D ] };
   key <AC04> { [              f,             F,	f,             F ] };
   key <AC05> { [              g,             G,	gcedilla,      Gcedilla ] };
   key <AC06> { [              h,             H,	h,             H ] };
   key <AC07> { [              j,             J,	j,             J ] };
   key <AC08> { [              k,             K,	kcedilla,      Kcedilla ] };
   key <AC09> { [              l,             L,	lcedilla,      Lcedilla ] };
   key <AC10> { [      semicolon,         colon,	semicolon,         colon ] };
   key <AC11> { [     apostrophe,      quotedbl,	leftdoublequotemark, doublelowquotemark ] };
   key <LSGT> { [      backslash,           bar,	degree,     brokenbar ] };

   key <BKSL> { [      backslash,           bar,	grave,         breve ] };
   key <AB01> { [              z,             Z,	zcaron,        Zcaron ] };
   key <AB02> { [              x,             X,	x,             X ] };
   key <AB03> { [              c,             C,	ccaron,        Ccaron ] };
   key <AB04> { [              v,             V,	v,             V ] };
   key <AB05> { [              b,             B,	b,             B ] };
   key <AB06> { [              n,             N,	ncedilla,      Ncedilla ] };
   key <AB07> { [              m,             M,	m,             M ] };
   key <AB08> { [          comma,          less,	horizconnector,      multiply ] };
   key <AB09> { [         period,       greater,	periodcentered,      division ] };
   key <AB10> { [          slash,      question,	slash,      abovedot ] };

	include "level3(ralt_switch)"
};

alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/lv(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "apostrophe" {
	include "lv(apostrophe)"
};

partial alphanumeric_keys
	xkb_symbols "tilde" {
	include "lv(tilde)"
};

partial alphanumeric_keys
	xkb_symbols "fkey" {
	include "lv(fkey)"
};

partial alphanumeric_keys
	xkb_symbols "adapted" {
	include "lv(adapted)"
};

partial alphanumeric_keys
	xkb_symbols "ergonomic" {
	include "lv(ergonomic)"
};

partial alphanumeric_keys
	xkb_symbols "modern" {
	include "lv(modern)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "lv(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "ykeydvorak" {
	include "lv(ykeydvorak)"
};

partial alphanumeric_keys
	xkb_symbols "minuskeydvorak" {
	include "lv(minuskeydvorak)"
};

partial alphanumeric_keys
	xkb_symbols "dvorakprogr" {
	include "lv(dvorakprogr)"
};

partial alphanumeric_keys
	xkb_symbols "ykeydvorakprogr" {
	include "lv(ykeydvorakprogr)"
};

partial alphanumeric_keys
	xkb_symbols "minuskeydvorakprogr" {
	include "lv(minuskeydvorakprogr)"
};

partial alphanumeric_keys
	xkb_symbols "colemak" {
	include "lv(colemak)"
};

partial alphanumeric_keys
	xkb_symbols "apostrophecolemak" {
	include "lv(apostrophecolemak)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default partial alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Dutch (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE>  { [        at,    section,      notsign ] };
    key <AE01>  { [         1,     exclam,  onesuperior ] };
    key <AE02>  { [         2,   quotedbl,  twosuperior ] };
    key <AE03>  { [         3,    numbersign, threesuperior ] };
    key <AE04>  { [         4,    dollar,  onequarter ] };
    key <AE05>  { [         5,    percent,   onehalf ] };
    key <AE06>  { [         6,  ampersand, threequarters ] };
    key <AE07>  { [         7, underscore,     sterling ] };
    key <AE08>  { [         8,  parenleft,    braceleft ] };
    key <AE09>  { [         9, parenright,   braceright ] };
    key <AE10>  { [         0, apostrophe,        grave ] };
    key <AE11>  { [     slash,   question,    backslash ] };
    key <AE12>  { [    degree, dead_tilde, dead_cedilla ] };

    key <AD03>  { [         e,          E,     EuroSign ] };
    key <AD05>  { [         t,          T ] };
    key <AD06>  { [         y,          Y ] };
    key <AD07>  { [         u,          U ] };
    key <AD08>  { [         i,          I ] };
    key <AD09>  { [         o,          O ] };
    key <AD10>  { [         p,          P ] };
    key <AD11>  { [dead_diaeresis, dead_circumflex ]    };
    key <AD12>  { [  asterisk,        bar,  asciitilde ] };

    key <AC01>  { [         a,          A ] };
    key <AC02>  { [         s,    S, ssharp ] };
    key <AC04>  { [         f,          F ] };
    key <AC10>  { [      plus,  plusminus ] };
    key <AC11>  { [dead_acute, dead_grave ] };
    key <BKSL>  { [      less,    greater,   asciicircum ] };

    key <LSGT>  { [bracketright, bracketleft,       brokenbar ] };
    key <AB01>  { [         z,    Z, guillemotleft ] };
    key <AB02>  { [         x,    X, guillemotright ] };
    key <AB03>  { [         c,    C, cent                     ] };
    key <AB06>  { [         n,          N ] };
    key <AB07>  { [         m,          M,     mu ] };
    key <AB08>  { [     comma,  semicolon ] };
    key <AB09>  { [    period,      colon ] };
    key <AB10>  { [     minus,      equal ] };

        include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/nl(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "std" {
	include "nl(std)"
};

partial alphanumeric_keys
	xkb_symbols "Sundeadkeys" {
	include "nl(Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "sundeadkeys" {
	include "nl(sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "nl(mac)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Polish (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [ grave, 	 asciitilde					] };
    key <AE01> { [ 1,		 exclam						] };
    key <AE02> { [ 2,		 at						] };
    key <AE03> { [ 3,		 numbersign 					] };
    key <AE04> { [ 4,		 dollar	 					] };
    key <AE05> { [ 5,		 percent 					] };
    key <AE06> { [ 6,		 asciicircum					] };
    key <AE07> { [ 7,		 ampersand					] };
    key <AE08> { [ 8,		 asterisk					] };
    key <AE09> { [ 9,		 parenleft					] };
    key <AE10> { [ 0,		 parenright					] };
    key <AE11> { [ minus,	 underscore 					] };
    key <AE12> { [ equal,	 plus	 					] };

    key <AD03> { [ e,		 E,		eogonek,	Eogonek		] };       
    key <AD07> { [ u,		 U,		EuroSign			] };
    key <AD09> { [ o,		 O,		oacute,		Oacute		] };
    key <AD11> { [ bracketleft,  braceleft					] };
    key <AD12> { [ bracketright, braceright					] };

    key <AC01> { [ a,		 A,		aogonek,	Aogonek		] };
    key <AC02> { [ s,		 S,		sacute,		Sacute		] };
    key <AC09> { [ l,		 L,		lstroke,        Lstroke		] };
    key <AC10> { [ semicolon,	 colon						] };
    key <AC11> { [ apostrophe,	 quotedbl 					] };
    key <BKSL> { [ backslash,	 bar,		brokenbar			] };

    key <LSGT> { [ less,         greater,       bar,            brokenbar	] };
    key <AB01> { [ z, 		 Z,		zabovedot,	Zabovedot	] };
    key <AB02> { [ x,		 X,		zacute,		Zacute		] };
    key <AB03> { [ c,		 C,		cacute,		Cacute		] };
    key <AB06> { [ n,		 N,		nacute,		Nacute		] };
    key <AB08> { [ comma,	 less 						] };
    key <AB09> { [ period,	 greater				 	] };
    key <AB10> { [ slash,	 question					] };

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/pl(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "legacy" {
	include "pl(legacy)"
};

partial alphanumeric_keys
	xkb_symbols "qwertz" {
	include "pl(qwertz)"
};

partial alphanumeric_keys
	xkb_symbols "intl" {
	include "pl(intl)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "pl(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak_quotes" {
	include "pl(dvorak_quotes)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak_altquotes" {
	include "pl(dvorak_altquotes)"
};

partial alphanumeric_keys
	xkb_symbols "dvp" {
	include "pl(dvp)"
};

partial alphanumeric_keys
	xkb_symbols "szl" {
	include "pl(szl)"
};

partial alphanumeric_keys
	xkb_symbols "csb" {
	include "pl(csb)"
};

partial alphanumeric_keys
	xkb_symbols "ru_phonetic_dvorak" {
	include "pl(ru_phonetic_dvorak)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]= "Portuguese (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <LSGT> { [            less,          greater                  ] };
    key <TLDE> { [       backslash,              bar                  ] };
    key <AE02> { [               2,         quotedbl,              at ] };
    key <AE03> { [               3,       numbersign,        sterling ] };
    key <AE04> { [               4,           dollar,         section ] };
    key <AE05> { [               5,          percent,      asciitilde ] };
    key <AE06> { [               6,        ampersand,     asciicircum ] };
    key <AE07> { [               7,            slash,       braceleft ] };
    key <AE08> { [               8,        parenleft,     bracketleft ] };
    key <AE09> { [               9,       parenright,    bracketright ] };
    key <AE10> { [               0,            equal,      braceright ] };
    key <AE11> { [      apostrophe,         question,           grave ] };
    key <AE12> { [   guillemotleft,   guillemotright                  ] };
    key <AD03> { [               e,                E,        EuroSign ] };
    key <AD11> { [            plus,         asterisk,  dead_diaeresis ] }; 
    key <AD12> { [      dead_acute,       dead_grave                  ] };
    key <BKSL> { [      dead_tilde,  dead_circumflex                  ] };
    key <AC10> { [        ccedilla,         Ccedilla                  ] };
    key <AC11> { [       masculine,      ordfeminine                  ] };
    key <AB08> { [           comma,        semicolon                  ] };
    key <AB09> { [          period,            colon                  ] };
    key <AB10> { [           minus,       underscore                  ] };

        include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/pt(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "Sundeadkeys" {
	include "pt(Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "sundeadkeys" {
	include "pt(sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "pt(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "pt(mac)"
};

partial alphanumeric_keys
	xkb_symbols "mac_sundeadkeys" {
	include "pt(mac_sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "mac_nodeadkeys" {
	include "pt(mac_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "nativo" {
	include "pt(nativo)"
};

partial alphanumeric_keys
	xkb_symbols "nativo-us" {
	include "pt(nativo-us)"
};

partial alphanumeric_keys
	xkb_symbols "nativo-epo" {
	include "pt(nativo-epo)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Romanian (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

   key <TLDE> { [          grave,    asciitilde,	grave,    asciitilde ] };
   key <AE01> { [              1,        exclam,	dead_tilde                ] };
   key <AE02> { [              2,            at,	dead_caron                ] };
   key <AE03> { [              3,    numbersign,	dead_circumflex                ] };
   key <AE04> { [              4,        dollar,	dead_breve                ] };
   key <AE05> { [              5,       percent,	dead_abovering                ] };
   key <AE06> { [              6,   asciicircum,	dead_ogonek                ] };
   key <AE07> { [              7,     ampersand,	dead_grave                ] };
   key <AE08> { [              8,      asterisk,	dead_abovedot                ] };
   key <AE09> { [              9,     parenleft,	dead_acute                ] };
   key <AE10> { [              0,    parenright,	dead_doubleacute                ] };
   key <AE11> { [          minus,    underscore,	dead_diaeresis,        endash ] };
   key <AE12> { [          equal,          plus,	dead_cedilla,     plusminus ] };

   key <AD01> { [              q,             Q,	acircumflex,   Acircumflex ] };
   key <AD02> { [              w,             W,	ssharp                ] };
   key <AD03> { [              e,             E,	EuroSign                ] };
   key <AD04> { [              r,             R,	r,             R ] };
   key <AD05> { [              t,             T,	0x100021b,     0x100021a ] };
   key <AD06> { [              y,             Y,	y,             Y ] };
   key <AD07> { [              u,             U,	u,             U ] };
   key <AD08> { [              i,             I,	icircumflex,   Icircumflex ] };
   key <AD09> { [              o,             O,	o,             O ] };
   key <AD10> { [              p,             P,	section                ] };
   key <AD11> { [    bracketleft,     braceleft,	doublelowquotemark              ] };
   key <AD12> { [   bracketright,    braceright,	rightdoublequotemark            ] };

   key <AC01> { [              a,             A,	abreve,        Abreve ] };
   key <AC02> { [              s,             S,	0x1000219,     0x1000218 ] };
   key <AC03> { [              d,             D,	dstroke,       Dstroke ] };
   key <AC04> { [              f,             F,	f,             F ] };
   key <AC05> { [              g,             G,	g,             G ] };
   key <AC06> { [              h,             H,	h,             H ] };
   key <AC07> { [              j,             J,	j,             J ] };
   key <AC08> { [              k,             K,	k,             K ] };
   key <AC09> { [              l,             L,	lstroke,       Lstroke ] };
   key <AC10> { [      semicolon,         colon,	semicolon,         colon ] };
   key <AC11> { [     apostrophe,      quotedbl,	apostrophe,      quotedbl ] };
   key <LSGT> { [      backslash,           bar,	backslash,     brokenbar ] };

   key <BKSL> { [      backslash,           bar,	backslash,     brokenbar ] };
   key <AB01> { [              z,             Z,	z,             Z ] };
   key <AB02> { [              x,             X,	x,             X ] };
   key <AB03> { [              c,             C,	copyright                ] };
   key <AB04> { [              v,             V,	v,             V ] };
   key <AB05> { [              b,             B,	b,             B ] };
   key <AB06> { [              n,             N,	n,             N ] };
   key <AB07> { [              m,             M,	m,             M ] };
   key <AB08> { [          comma,          less,	guillemotleft,      multiply ] };
   key <AB09> { [         period,       greater,	guillemotright,      division ] };
   key <AB10> { [          slash,      question,	slash,      question ] };

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/ro(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "cedilla" {
	include "ro(cedilla)"
};

partial alphanumeric_keys
	xkb_symbols "std" {
	include "ro(std)"
};

partial alphanumeric_keys
	xkb_symbols "std_cedilla" {
	include "ro(std_cedilla)"
};

partial alphanumeric_keys
	xkb_symbols "winkeys" {
	include "ro(winkeys)"
};

partial alphanumeric_keys
	xkb_symbols "crh_dobruja" {
	include "ro(crh_dobruja)"
};

partial alphanumeric_keys
	xkb_symbols "ergonomic" {
	include "ro(ergonomic)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

	name[Group1]= "Russian (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

	key.type[group1]="FOUR_LEVEL";

    key	<AE01> { [		1,	    exclam, 1,          exclam 	] };
    key	<AE02> { [		2,        quotedbl, 2, at	] };
    key	<AE03> { [		3,      numerosign, 3,  numbersign	] };
    key	<AE04> { [		4,       percent, 4,      dollar 	] };
    key	<AE05> { [		5,	     colon, 5, percent	] };
    key	<AE07> { [		7,	    period, 7, ampersand	] };
    key	<AE08> { [		8,	 semicolon, 8, asterisk 	] };
    key	<BKSL> { [           slash,        question, backslash,             bar	] };
    key	<AB10> { [      ediaeresis,      Ediaeresis,	    slash,	  question 	] };
    key <LSGT> { [       backslash,             bar, backslash,             bar ] };

    key	<AD01> { [ Cyrillic_shorti, Cyrillic_SHORTI, q, Q	] };
    key	<AD02> { [    Cyrillic_tse,    Cyrillic_TSE, w, W	] };
    key	<AD03> { [      Cyrillic_u,	Cyrillic_U, e, E	] };
    key	<AD04> { [     Cyrillic_ka,     Cyrillic_KA, r, R	] };
    key	<AD05> { [     Cyrillic_ie,     Cyrillic_IE, t, T	] };
    key	<AD06> { [     Cyrillic_en,     Cyrillic_EN, y, Y	] };
    key	<AD07> { [    Cyrillic_ghe,    Cyrillic_GHE, u, U	] };
    key	<AD08> { [    Cyrillic_sha,    Cyrillic_SHA, i, I	] };
    key	<AD09> { [  Cyrillic_shcha,  Cyrillic_SHCHA, o, O	] };
    key	<AD10> { [     Cyrillic_ze,     Cyrillic_ZE, p, P	] };
    key	<AD11> { [     Cyrillic_ha,     Cyrillic_HA, bracketleft,       braceleft	] };
    key	<AD12> { [Cyrillic_hardsign,Cyrillic_HARDSIGN, bracketright,      braceright	] };
    key	<AC01> { [     Cyrillic_ef,     Cyrillic_EF, a, A	] };
    key	<AC02> { [   Cyrillic_yeru,   Cyrillic_YERU, s, S	] };
    key	<AC03> { [     Cyrillic_ve,     Cyrillic_VE, d, D	] };
    key	<AC04> { [      Cyrillic_a,	Cyrillic_A, f, F	] };
    key	<AC05> { [     Cyrillic_pe,     Cyrillic_PE, g, G	] };
    key	<AC06> { [     Cyrillic_er,     Cyrillic_ER, h, H	] };
    key	<AC07> { [      Cyrillic_o,	Cyrillic_O, j, J	] };
    key	<AC08> { [     Cyrillic_el,     Cyrillic_EL, k, K	] };
    key	<AC09> { [     Cyrillic_de,     Cyrillic_DE, l, L	] };
    key	<AC10> { [    Cyrillic_zhe,    Cyrillic_ZHE, semicolon,           colon	] };
    key	<AC11> { [      Cyrillic_e,	Cyrillic_E, apostrophe,        quotedbl	] };
    key	<AB01> { [     Cyrillic_ya,     Cyrillic_YA, z, Z	] };
    key	<AB02> { [    Cyrillic_che,    Cyrillic_CHE, x, X	] };
    key	<AB03> { [     Cyrillic_es,     Cyrillic_ES, c, C	] };
    key	<AB04> { [     Cyrillic_em,     Cyrillic_EM, v, V	] };
    key	<AB05> { [      Cyrillic_i,	Cyrillic_I, b, B	] };
    key	<AB06> { [     Cyrillic_te,     Cyrillic_TE, n, N	] };
    key	<AB07> { [Cyrillic_softsign,Cyrillic_SOFTSIGN, m, M	] };
    key	<AB08> { [     Cyrillic_be,     Cyrillic_BE, comma,            less	] };
    key	<AB09> { [     Cyrillic_yu,     Cyrillic_YU, period,         greater	] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/ru(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "winkeys" {
	include "ru(winkeys)"
};

partial alphanumeric_keys
	xkb_symbols "common" {
	include "ru(common)"
};

partial alphanumeric_keys
	xkb_symbols "legacy" {
	include "ru(legacy)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "ru(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "typewriter" {
	include "ru(typewriter)"
};

partial alphanumeric_keys
	xkb_symbols "typewriter-legacy" {
	include "ru(typewriter-legacy)"
};

partial alphanumeric_keys
	xkb_symbols "phonetic" {
	include "ru(phonetic)"
};

partial alphanumeric_keys
	xkb_symbols "phonetic_winkeys" {
	include "ru(phonetic_winkeys)"
};

partial alphanumeric_keys
	xkb_symbols "tt" {
	include "ru(tt)"
};

partial alphanumeric_keys
	xkb_symbols "os_legacy" {
	include "ru(os_legacy)"
};

partial alphanumeric_keys
	xkb_symbols "os_winkeys" {
	include "ru(os_winkeys)"
};

partial alphanumeric_keys
	xkb_symbols "cv" {
	include "ru(cv)"
};

partial alphanumeric_keys
	xkb_symbols "udm" {
	include "ru(udm)"
};

partial alphanumeric_keys
	xkb_symbols "cv_latin" {
	include "ru(cv_latin)"
};

partial alphanumeric_keys
	xkb_symbols "kom" {
	include "ru(kom)"
};

partial alphanumeric_keys
	xkb_symbols "sah" {
	include "ru(sah)"
};

partial alphanumeric_keys
	xkb_symbols "xal" {
	include "ru(xal)"
};

partial alphanumeric_keys
	xkb_symbols "dos" {
	include "ru(dos)"
};

partial alphanumeric_keys
	xkb_symbols "bak" {
	include "ru(bak)"
};

partial alphanumeric_keys
	xkb_symbols "srp" {
	include "ru(srp)"
};

partial alphanumeric_keys
	xkb_symbols "chm" {
	include "ru(chm)"
};

partial alphanumeric_keys
	xkb_symbols "chu" {
	include "ru(chu)"
};

partial alphanumeric_keys
	xkb_symbols "ruu" {
	include "ru(ruu)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Swedish (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE> { [         section,         onehalf                ] };
    key <LSGT> { [            less,         greater,           bar ] };
    key <AE02> { [               2,        quotedbl,            at ] };
    key <AE03> { [               3,      numbersign,      sterling ] };
    key <AE04> { [               4,        currency,        dollar ] };
    key <AE06> { [               6,       ampersand                ] };
    key <AE07> { [               7,           slash,     braceleft ] };
    key <AE08> { [               8,       parenleft,   bracketleft ] };
    key <AE09> { [               9,      parenright,  bracketright ] };
    key <AE10> { [               0,           equal,    braceright ] };
    key <AE11> { [            plus,        question,     backslash ] };
    key <AE12> { [      dead_acute,      dead_grave                ] };
    key <AD03> { [               e,               E,      EuroSign ] };
    key <AD11> { [           aring,           Aring                ] };
    key <AD12> { [  dead_diaeresis,     asciicircum,    asciitilde ] };
    key <AC10> { [      odiaeresis,      Odiaeresis                ] };
    key <AC11> { [      adiaeresis,      Adiaeresis                ] };
    key <BKSL> { [      apostrophe,        asterisk,         grave ] };
    key <AB08> { [           comma,       semicolon                ] };
    key <AB09> { [          period,           colon                ] };
    key <AB10> { [           minus,      underscore                ] };

        include "level3(ralt_switch)"
        include "kpdl(comma)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/se(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "se" {
	include "se(se)"
};

partial alphanumeric_keys
	xkb_symbols "nodeadkeys" {
	include "se(nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "se(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "rus" {
	include "se(rus)"
};

partial alphanumeric_keys
	xkb_symbols "rus_nodeadkeys" {
	include "se(rus_nodeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "smi" {
	include "se(smi)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "se(mac)"
};

partial alphanumeric_keys
	xkb_symbols "svdvorak" {
	include "se(svdvorak)"
};

partial alphanumeric_keys
	xkb_symbols "swl" {
	include "se(swl)"
};
               //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default partial alphanumeric_keys
xkb_symbols "sun_type6" {

	name[Group1]= "Taiwanese (Sun Type 6/7)";

	include "sun_vndr/us(sunbasic)"

    key <ALGR> { [ Henkan_Mode          ]                       };
    key <BKSL> { [ backslash, bar,  brokenbar   ]               };

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/tw(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "tw" {
	include "tw(tw)"
};

partial alphanumeric_keys
	xkb_symbols "indigenous" {
	include "tw(indigenous)"
};

partial alphanumeric_keys
	xkb_symbols "saisiyat" {
	include "tw(saisiyat)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Slovak (Sun Type 6/7)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE>  { 	[       semicolon, dead_abovering, grave,             asciitilde  ]	};
    key <AE01>  { 	[	     plus,         1,	exclam,               asciitilde  ]	};
    key <AE02>  {	[	   lcaron,         2,	at,                   dead_caron  ]	};
    key <AE03>  {	[	   scaron,         3,	numbersign,      dead_circumflex  ]	};
    key <AE04>  {	[          ccaron,         4,	dollar,               dead_breve  ]	};
    key <AE05>  {	[	   tcaron,         5,	percent,          dead_abovering  ]	};
    key <AE06>  {	[	   zcaron,         6,	asciicircum,         dead_ogonek  ]	};
    key <AE07>  {	[	   yacute,         7,	ampersand,                 grave  ]	};
    key <AE08>  {	[	   aacute,         8,	asterisk,          dead_abovedot  ]	};
    key <AE09>  {	[	   iacute,         9,	parenleft,            apostrophe  ]	};
    key <AE10>  {	[	   eacute,         0,	parenright,     dead_doubleacute  ]	};
    key <AE11>  {	[	    equal,   percent,	dead_diaeresis,        backslash  ]	};
    key <AE12>  {	[      dead_acute, dead_caron,	dead_cedilla,              minus  ]	};

    key <AD01>  {	[ 		q,         Q,	backslash		          ]	};
    key <AD02>  {	[	        w,         W,	bar	                          ]	};
    key <AD03>  {	[	        e,         E,	EuroSign 		          ]	};
    key <AD06>  {       [               z,         Z                                      ]     };
    key <AD10>  {       [               p,         P,	apostrophe   		          ]	};
    key <AD11>  {	[	   uacute,     slash,	division		          ]	};
    key <AD12>  {	[      adiaeresis, parenleft,	multiply      		          ]	};

    key <AC02>  {	[	        s,         S,	dstroke		       		  ]	};
    key <AC03>  {	[	        d,         D,	Dstroke			          ]	};
    key <AC04>  {	[	        f,         F,	bracketleft		          ]	};
    key <AC05>  {	[	        g,         G,	bracketright		          ]	};
    key <AC08>  {	[		k,         K,	lstroke 		       	  ]	};
    key <AC09>  {	[	        l,         L,	Lstroke		                  ]	};
    key <AC10>  {	[     ocircumflex,  quotedbl,	dollar		                  ]	};
    key <AC11>  {	[         section,    exclam,	ssharp   		          ]	};
    key <AC12>  {	[          ncaron, parenright,	currency,               currency  ]	};
    key <BKSL>  {	[          ncaron, parenright,	backslash,                   bar  ]	};

    key <LSGT>  { 	[       backslash,       bar,	slash,                 brokenbar  ]     };
    key <AB01>  {       [               y,        Y,	less  	                          ]	};
    key <AB02>  {	[	        x,        X,	greater,              numbersign  ]	};
    key <AB03>  {	[		c,        C,	ampersand	 	          ]	};
    key <AB04>  {	[	        v,        V,	at 		                  ]	};
    key <AB05>  {	[	        b,        B,	braceleft              	          ]	};
    key <AB06>  {	[        	n,        N,	braceright              	  ]	};
    key <AB08>  {	[  	    comma, question,	less 		                  ]	};
    key <AB09>  {	[	   period,    colon,	greater		                  ]	};
    key <AB10>  {	[ 	    minus, underscore,	asterisk 			  ]	};

	include "level3(ralt_switch)"

};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/sk(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "bksl" {
	include "sk(bksl)"
};

partial alphanumeric_keys
	xkb_symbols "qwerty" {
	include "sk(qwerty)"
};

partial alphanumeric_keys
	xkb_symbols "qwerty_bksl" {
	include "sk(qwerty_bksl)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial
xkb_symbols "defaults_common" {

    key <MUTE> { [ XF86AudioMute         ] };
    key <VOL-> { [ XF86AudioLowerVolume  ] };
    key <VOL+> { [ XF86AudioRaiseVolume  ] };
    key <POWR> { [ XF86PowerOff          ] };
    key <STOP> { [ Cancel                ] };
    key <AGAI> { [ Redo                  ] };
    key <PROP> { [ SunProps              ] };
    key <UNDO> { [ Undo                  ] };
    key <FRNT> { [ SunFront              ] };
    key <COPY> { [ XF86Copy              ] };
    key <OPEN> { [ SunOpen               ] };
    key <PAST> { [ XF86Paste             ] };
    key <FIND> { [ Find                  ] };
    key <CUT>  { [ XF86Cut               ] };
    key <HELP> { [ Help                  ] };
    key <LNFD> { [ Linefeed              ] };

    key <LALT> { [	Alt_L,  Alt_L	] };
    key <LWIN> { [	Meta_L	        ] };
    key <RWIN> { [	Meta_R			] };

// The following is needed for virtual hotkeys

    key <I150> { [ XF86Sleep             ] };
    key <I160> { [ XF86ScreenSaver       ] };
    key <I235> { [ XF86Display           ] };

// Common Sun Modifiers

    modifier_map Shift	{ Shift_R, Shift_L };
    modifier_map Mod2	{ Num_Lock };
    modifier_map Mod4   { Meta_L, Meta_R };

};

partial default
xkb_symbols "defaults" {

    include "sun_vndr/solaris(defaults_common)"

    modifier_map Mod1   { Alt_L };

};

partial
xkb_symbols "defaults_type7jp" {

    include "sun_vndr/solaris(defaults_common)"

    modifier_map Mod1  { Alt_L, Alt_R   };

};

partial
xkb_symbols "sun_compat" {

	key <STOP> { [ L1,        L1,  SunStop    ]       };
	key <AGAI> { [ L2,        L2,  SunAgain   ]       };
	key <PROP> { [ L3,        L3,  SunProps   ]       };
	key <UNDO> { [ L4,        L4,  SunUndo    ]       };
	key <FRNT> { [ L5,        L5,  SunFront   ]       };
	key <COPY> { [ L6,        L6,  SunCopy    ]       };
	key <OPEN> { [ L7,        L7,  SunOpen    ]       };
	key <PAST> { [ L8,        L8,  SunPaste   ]       };
	key <FIND> { [ L9,        L9,  SunFind    ]       };
	key <CUT>  { [ L10,       L10, SunCut     ]       };

// F11 & F12 are mapped to SunF36 and SunF37 since they were added
// after F11-F35 were already assigned on Sun keyboards
	key <FK11> { [ SunF36               ], [ F11                ] };
	key <FK12> { [ SunF37               ], [ F12                ] };

// These were added to the keyboard much later and simply got mapped
// to their logical names
	key <HELP> { [  Help						] };
	key <MUTE> { [  SunAudioMute,        SunVideoDegauss		] };
	key <VOL-> { [  SunAudioLowerVolume, SunVideoLowerBrightness	] };
	key <VOL+> { [  SunAudioRaiseVolume, SunVideoRaiseBrightness	] };
	key <POWR> { [  XF86Sleep,           XF86Hibernate		] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

default partial alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Turkish (Sun Type 6)";

	include "sun_vndr/us(sun_type6)"

    key <TLDE>  { [  quotedbl,     eacute                ] };
    key <AE01>	{ [         1,     exclam                ] };
    key <AE02>	{ [         2, apostrophe                ] };
    key <AE03>	{ [        3, asciicircum,    numbersign ] };
    key <AE04>	{ [         4,       plus,        dollar ] };
    key <AE06>	{ [         6,  ampersand                ] };
    key <AE07>	{ [         7,      slash,     braceleft ] };
    key <AE08>	{ [         8,  parenleft,   bracketleft ] };
    key <AE09>	{ [         9, parenright,  bracketright ] };
    key <AE10>	{ [         0,      equal,    braceright ] };
    key <AE11>	{ [  asterisk,   question,     backslash ] };
    key <AE12>	{ [     minus, underscore                ] };

    key <AD01>  { [         q,          Q,           at ] };
    key <AD03>	{ [         e,          E,     EuroSign ] };
    key <AD08>	{ [  idotless,          I               ] };
    key <AD11>	{ [    gbreve,     Gbreve               ] };
    key <AD12>	{ [udiaeresis, Udiaeresis,   asciitilde ] };

    key <AC10>	{ [  scedilla,   Scedilla,        acute ] };
    key <AC11>	{ [         i,  Iabovedot               ] }; 
    key <BKSL>	{ [     comma,  semicolon,        grave ] };

    key <LSGT>	{ [      less,    greater,          bar ] };
    key <AB08>	{ [odiaeresis, Odiaeresis               ] };
    key <AB09>	{ [  ccedilla,   Ccedilla               ] };
    key <AB10>	{ [    period,      colon               ] };

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
        xkb_symbols "basic" {
        include "sun_vndr/tr(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "f" {
	include "tr(f)"
};

partial alphanumeric_keys
	xkb_symbols "alt" {
	include "tr(alt)"
};

partial alphanumeric_keys
	xkb_symbols "Sundeadkeys" {
	include "tr(Sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "sundeadkeys" {
	include "tr(sundeadkeys)"
};

partial alphanumeric_keys
	xkb_symbols "ku" {
	include "tr(ku)"
};

partial alphanumeric_keys
	xkb_symbols "ku_f" {
	include "tr(ku_f)"
};

partial alphanumeric_keys
	xkb_symbols "ku_alt" {
	include "tr(ku_alt)"
};

partial alphanumeric_keys
	xkb_symbols "intl" {
	include "tr(intl)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "tr(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "crh" {
	include "tr(crh)"
};

partial alphanumeric_keys
	xkb_symbols "crh_f" {
	include "tr(crh_f)"
};

partial alphanumeric_keys
	xkb_symbols "crh_alt" {
	include "tr(crh_alt)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sun_type6" {

    name[Group1]="Ukrainian (Sun Type 6)";

	include "sun_vndr/us(sun_type6)"

    key	<TLDE> {	[	    grave,	asciitilde,	apostrophe,	asciitilde	]	};
    key	<AE01> {	[		1,	    exclam,	1,	    exclam 	]	};
    key	<AE02> {	[		2,		at,	2,        quotedbl	]	};
    key	<AE03> {	[		3,	numbersign,	3,      numbersign	]	};
    key	<AE04> {	[		4,	    dollar,	4,        asterisk	]	};
    key	<AE05> {	[		5,	   percent,	5,	     colon	]	};
    key	<AE06> {	[		6,     asciicircum,	6,	     comma	]	};
    key	<AE07> {	[		7,	 ampersand,	7,	    period	]	};
    key	<AE08> {	[		8,	  asterisk,	8,	 semicolon	]	};
    key	<AE09> {	[		9,	 parenleft,	9,	 parenleft	]	};
    key	<AE10> {	[		0,	parenright,	0,	parenright	]	};
    key	<AE11> {	[	    minus,	underscore,	minus,	underscore	]	};
    key	<AE12> {	[	    equal,	      plus,	equal,	      plus	]	};

    key	<AD01> {	[		q,		 Q,	Cyrillic_shorti, Cyrillic_SHORTI	]	};
    key	<AD02> {	[		w,		 W,	Cyrillic_tse,    Cyrillic_TSE	]	};
    key	<AD03> {	[		e,		 E,	Cyrillic_u,	Cyrillic_U	]	};
    key	<AD04> {	[		r,		 R,	Cyrillic_ka,     Cyrillic_KA	]	};
    key	<AD05> {	[		t,		 T,	Cyrillic_ie,     Cyrillic_IE	]	};
    key	<AD06> {	[		y,		 Y,	Cyrillic_en,     Cyrillic_EN	]	};
    key	<AD07> {	[		u,		 U,	Cyrillic_ghe,    Cyrillic_GHE	]	};
    key	<AD08> {	[		i,		 I,	Cyrillic_sha,    Cyrillic_SHA	]	};
    key	<AD09> {	[		o,		 O,	Cyrillic_shcha,  Cyrillic_SHCHA	]	};
    key	<AD10> {	[		p,		 P,	Cyrillic_ze,     Cyrillic_ZE	]	};
    key	<AD11> {	[     bracketleft,	 braceleft,	Cyrillic_ha,     Cyrillic_HA	]	};
    key	<AD12> {	[    bracketright,	braceright,	Ukrainian_yi,    Ukrainian_YI	]	};

    key	<AC01> {	[		a,		 A,	Cyrillic_ef,     Cyrillic_EF	]	};
    key	<AC02> {	[		s,		 S,	Ukrainian_i,     Ukrainian_I	]	};
    key	<AC03> {	[		d,		 D,	Cyrillic_ve,     Cyrillic_VE	]	};
    key	<AC04> {	[		f,		 F,	Cyrillic_a,	Cyrillic_A	]	};
    key	<AC05> {	[		g,		 G,	Cyrillic_pe,     Cyrillic_PE	]	};
    key	<AC06> {	[		h,		 H,	Cyrillic_er,     Cyrillic_ER	]	};
    key	<AC07> {	[		j,		 J,	Cyrillic_o,	Cyrillic_O	]	};
    key	<AC08> {	[		k,		 K,	Cyrillic_el,     Cyrillic_EL	]	};
    key	<AC09> {	[		l,		 L,	Cyrillic_de,     Cyrillic_DE	]	};
    key	<AC10> {	[	semicolon,	     colon,	Cyrillic_zhe,    Cyrillic_ZHE	]	};
    key	<AC11> {	[      apostrophe,	  quotedbl,	Ukrainian_ie,    Ukrainian_IE	]	};
    key <BKSL> {        [       backslash,             bar,     Ukrainian_ghe_with_upturn, Ukrainian_GHE_WITH_UPTURN ] };

    key <LSGT> {        [            less,         greater,     slash,           bar            ]       };
    key	<AB01> {	[		z,		 Z,	Cyrillic_ya,     Cyrillic_YA	]	};
    key	<AB02> {	[		x,		 X,	Cyrillic_che,    Cyrillic_CHE	]	};
    key	<AB03> {	[		c,		 C,	Cyrillic_es,     Cyrillic_ES	]	};
    key	<AB04> {	[		v,		 V,	Cyrillic_em,     Cyrillic_EM	]	};
    key	<AB06> {	[		n,		 N,	Cyrillic_te,     Cyrillic_TE	]	};
    key	<AB05> {	[		b,		 B,	Cyrillic_i,	Cyrillic_I	]	};
    key	<AB07> {	[		m,		 M,	Cyrillic_softsign,Cyrillic_SOFTSIGN	]	};
    key	<AB08> {	[	    comma,	      less,	Cyrillic_be,     Cyrillic_BE	]	};
    key	<AB09> {	[	   period,	   greater,	Cyrillic_yu,     Cyrillic_YU	]	};
    key	<AB10> {	[	    slash,	  question,	slash,	  question	        ]	};

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/ua(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "unicode" {
	include "ua(unicode)"
};

partial alphanumeric_keys
	xkb_symbols "legacy" {
	include "ua(legacy)"
};

partial alphanumeric_keys
	xkb_symbols "winkeys" {
	include "ua(winkeys)"
};

partial alphanumeric_keys
	xkb_symbols "typewriter" {
	include "ua(typewriter)"
};

partial alphanumeric_keys
	xkb_symbols "phonetic" {
	include "ua(phonetic)"
};

partial alphanumeric_keys
	xkb_symbols "rstu" {
	include "ua(rstu)"
};

partial alphanumeric_keys
	xkb_symbols "rstu_ru" {
	include "ua(rstu_ru)"
};

partial alphanumeric_keys
	xkb_symbols "homophonic" {
	include "ua(homophonic)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        //
// Copyright (c) 2010, 2012, Oracle and/or its affiliates. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, provided that the above
// copyright notice(s) and this permission notice appear in all copies of
// the Software and that both the above copyright notice(s) and this
// permission notice appear in supporting documentation.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
// OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
// INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
// FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
// WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
// 
// Except as contained in this notice, the name of a copyright holder
// shall not be used in advertising or otherwise to promote the sale, use
// or other dealings in this Software without prior written authorization
// of the copyright holder.
//

partial default alphanumeric_keys
xkb_symbols "sunbasic" {

    include "us(basic)"
    include "capslock(capslock)"
    include "srvr_ctrl(xfree86)"

};

partial alphanumeric_keys
xkb_symbols "sun_type6" {

	name[Group1]= "English (US, Sun Type 6/7)";

    include "sun_vndr/us(sunbasic)"
    include "eurosign(4)"
    include "level3(ralt_switch)"

    key <COMP> { [		Multi_key			] };
    key <SYRQ> { [		SunSys_Req			] };
};

partial alphanumeric_keys
	xkb_symbols "basic" {
	include "sun_vndr/us(sunbasic)"
};

partial alphanumeric_keys
	xkb_symbols "euro" {
	include "us(euro)"
};

partial alphanumeric_keys
	xkb_symbols "intl" {
	include "us(intl)"
};

partial alphanumeric_keys
	xkb_symbols "alt-intl" {
	include "us(alt-intl)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak" {
	include "us(dvorak)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak-intl" {
	include "us(dvorak-intl)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak-alt-intl" {
	include "us(dvorak-alt-intl)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak-l" {
	include "us(dvorak-l)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak-r" {
	include "us(dvorak-r)"
};

partial alphanumeric_keys
	xkb_symbols "dvorak-classic" {
	include "us(dvorak-classic)"
};

partial alphanumeric_keys
	xkb_symbols "dvp" {
	include "us(dvp)"
};

partial alphanumeric_keys
	xkb_symbols "rus" {
	include "us(rus)"
};

partial alphanumeric_keys
	xkb_symbols "mac" {
	include "us(mac)"
};

partial alphanumeric_keys
	xkb_symbols "colemak" {
	include "us(colemak)"
};

partial alphanumeric_keys
	xkb_symbols "altgr-intl" {
	include "us(altgr-intl)"
};

partial alphanumeric_keys
	xkb_symbols "classmate" {
	include "us(classmate)"
};

partial alphanumeric_keys
	xkb_symbols "classmate-intl" {
	include "us(classmate-intl)"
};

partial alphanumeric_keys
	xkb_symbols "classmate-alt-intl" {
	include "us(classmate-alt-intl)"
};

partial alphanumeric_keys
	xkb_symbols "classmate-altgr-intl" {
	include "us(classmate-altgr-intl)"
};

partial alphanumeric_keys
	xkb_symbols "olpc" {
	include "us(olpc)"
};

partial alphanumeric_keys
	xkb_symbols "olpc2" {
	include "us(olpc2)"
};

partial alphanumeric_keys
	xkb_symbols "chr" {
	include "us(chr)"
};

partial alphanumeric_keys
	xkb_symbols "hbs" {
	include "us(hbs)"
};

partial alphanumeric_keys
	xkb_symbols "htcdream" {
	include "us(htcdream)"
};

partial alphanumeric_keys
	xkb_symbols "workman" {
	include "us(workman)"
};

partial alphanumeric_keys
	xkb_symbols "workman-intl" {
	include "us(workman-intl)"
};

partial alphanumeric_keys
	xkb_symbols "cz_sk_de" {
	include "us(cz_sk_de)"
};

partial alphanumeric_keys
	xkb_symbols "intl-unicode" {
	include "us(intl-unicode)"
};

partial alphanumeric_keys
	xkb_symbols "alt-intl-unicode" {
	include "us(alt-intl-unicode)"
};

partial alphanumeric_keys
	xkb_symbols "ats" {
	include "us(ats)"
};

partial alphanumeric_keys
	xkb_symbols "crd" {
	include "us(crd)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     default xkb_symbols "usa1" {

    name[Group1]= "usa1";
    key <ESC>  {	[	 Escape			]	};

    // Begin "Function" section
    key <FK01> {	[	 F1			]	};
    key <FK02> {	[	 F2			]	};
    key <FK03> {	[	 F3			]	};
    key <FK04> {	[	 F4			]	};
    key <FK05> {	[	 F5			]	};
    key <FK06> {	[	 F6			]	};
    key <FK07> {	[	 F7			]	};
    key <FK08> {	[	 F8			]	};
    key <FK09> {	[	 F9			]	};
    key <FK10> {	[	 F10			]	};
    // End "Function" section

    // Alphanumeric section
    key <TLDE> {	[     grave,	asciitilde	]	};
    key <AE01> {	[	  1,	exclam 		]	};
    key <AE02> {	[	  2,	at		]	};
    key <AE03> {	[	  3,	numbersign	]	};
    key <AE04> {	[	  4,	dollar		]	};
    key <AE05> {	[	  5,	percent		]	};
    key <AE06> {	[	  6,	asciicircum	]	};
    key <AE07> {	[	  7,	ampersand	]	};
    key <AE08> {	[	  8,	asterisk	]	};
    key <AE09> {	[	  9,	parenleft	]	};
    key <AE10> {	[	  0,	parenright	]	};
    key <AE11> {	[ minus,	underscore	]	};
    key <AE12> {	[ equal,	plus		]	};
    key <BKSL> {	[ backslash,	bar		]	};
    key <BKSP> {	[	BackSpace		]	};

    key  <TAB> {	[	Tab,	ISO_Left_Tab	]	};
    key <AD01> {	[	  q,	Q 		]	};
    key <AD02> {	[	  w,	W		]	};
    key <AD03> {	[	  e,	E		]	};
    key <AD04> {	[	  r,	R		]	};
    key <AD05> {	[	  t,	T		]	};
    key <AD06> {	[	  y,	Y		]	};
    key <AD07> {	[	  u,	U		]	};
    key <AD08> {	[	  i,	I		]	};
    key <AD09> {	[	  o,	O		]	};
    key <AD10> {	[	  p,	P		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};
    key <RTRN> {	[	 Return			]	};

    key <LCTL> {	[	 Control_L		]	};
    key <CAPS> {	[	 Caps_Lock		]	};
    key <AC01> {	[	  a,	A 		]	};
    key <AC02> {	[	  s,	S		]	};
    key <AC03> {	[	  d,	D		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H		]	};
    key <AC07> {	[	  j,	J		]	};
    key <AC08> {	[	  k,	K		]	};
    key <AC09> {	[	  l,	L		]	};
    key <AC10> {	[ semicolon,	colon		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};

    key <LFSH> {	[ 	 Shift_L		]	};
    key <AB01> {	[	  z,	Z 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C		]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N		]	};
    key <AB07> {	[	  m,	M		]	};
    key <AB08> {	[ comma,	less		]	};
    key <AB09> {	[ period,	greater		]	};
    key <AB10> {	[ slash,	question	]	};
    key <RTSH> {	[	 Shift_R		]	};

    key <LALT> {	[ Alt_L,	Meta_L 		]	};
    key <LAMI>  {	[	 Mode_switch		]	};
    key <SPCE> {	[	 space			]	};
    key <RAMI>  {	[	 Multi_key		]	};
    key <RALT> {	[ Alt_R,	Meta_R		]	};
    // End alphanumeric section

    // Begin "Editing" section
    key <DELE> {	[	 Delete		]	};
    key <HELP> {	[	 Help		]	};
    key <UP>   {	[	 Up		]	};
    key <LEFT> {	[	 Left		]	};
    key <DOWN> {	[	 Down		]	};
    key <RGHT> {	[	 Right		]	};
    // End "Editing" section

    // Begin "Keypad" section
    key <KPLP> {	[	 Num_Lock		]	};
    key <KPRP> {	[	 Scroll_Lock		]	};
    key <KPDV> {	[	 KP_Divide		]	};
    key <KPMU> {	[ KP_Multiply,	Print		]	};

    key <KP7>  {	[ KP_7,		KP_Home		]	};
    key <KP8>  {	[ KP_8,		KP_Up		]	};
    key <KP9>  {	[ KP_9,		KP_Prior	]	};
    key <KPSU> {	[	 KP_Subtract		]	};

    key <KP4>  {	[ KP_4,		KP_Left		]	};
    key <KP5>  {	[	 KP_5			]	};
    key <KP6>  {	[ KP_6,		KP_Right	]	};
    key <KPAD> {	[	 KP_Add			]	};

    key <KP1>  {	[ KP_1,		KP_End		]	};
    key <KP2>  {	[ KP_2,		KP_Down		]	};
    key <KP3>  {	[ KP_3,		KP_Next		]	};

    key <KP0>  {	[ KP_0,		KP_Insert	]	};
    key <KPDC> {	[ KP_Decimal,	KP_Delete	]	};
    key <KPEN> {	[	 KP_Enter		]	};
    // End "Keypad" section

    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L };
    modifier_map Mod1	{ Alt_L, Alt_R };
    modifier_map Mod2	{ Mode_switch };
    modifier_map Mod3	{ Meta_L, Meta_R };
};
                                                                                                                                                                                                     The types component of a keyboard mapping specifies the key types that can be
associated with the various keyboard keys. The types component can optionally
contain also real modifier bindings and symbolic names for one or more virtual
modifiers.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          default xkb_symbols "us" {

    name[Group1]= "US/ASCII";

    key <ESC>  {	[	Escape			]	};

    // Alphanumeric section
    key <AE01> {	[	  1,	exclam 		]	};
    key <AE02> {	[	  2,	at		]	};
    key <AE03> {	[	  3,	numbersign	]	};
    key <AE04> {	[	  4,	dollar		]	};
    key <AE05> {	[	  5,	percent		]	};
    key <AE06> {	[	  6,	asciicircum	]	};
    key <AE07> {	[	  7,	ampersand	]	};
    key <AE08> {	[	  8,	asterisk	]	};
    key <AE09> {	[	  9,	parenleft	]	};
    key <AE10> {	[	  0,	parenright	]	};
    key <AE11> {	[ minus,	underscore	]	};
    key <AE12> {	[ equal,	plus		]	};
    key <TLDE> {	[ grave,	asciitilde	]	};
    key <BKSP> {	[	BackSpace		]	};

    key  <TAB> {	[	Tab,	ISO_Left_Tab	]	};
    key <AD01> {	[	  q,	Q 		]	};
    key <AD02> {	[	  w,	W		]	};
    key <AD03> {	[	  e,	E		]	};
    key <AD04> {	[	  r,	R		]	};
    key <AD05> {	[	  t,	T		]	};
    key <AD06> {	[	  y,	Y		]	};
    key <AD07> {	[	  u,	U		]	};
    key <AD08> {	[	  i,	I		]	};
    key <AD09> {	[	  o,	O		]	};
    key <AD10> {	[	  p,	P		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};
    key <RTRN> {	[	Return			]	};
    key <DELE> {	[	Delete			]	};

    key <LCTL> {	[	Control_L		]	};
    key <AC01> {	[	  a,	A 		]	};
    key <AC02> {	[	  s,	S		]	};
    key <AC03> {	[	  d,	D		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H		]	};
    key <AC07> {	[	  j,	J		]	};
    key <AC08> {	[	  k,	K		]	};
    key <AC09> {	[	  l,	L		]	};
    key <AC10> {	[ semicolon,	colon		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};
    key <BKSL> {	[ backslash,	bar		]	};

    key <LFSH> {	[ 	 Shift_L		]	};
    key <AB01> {	[	  z,	Z 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C		]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N		]	};
    key <AB07> {	[	  m,	M		]	};
    key <AB08> {	[ comma,	less		]	};
    key <AB09> {	[ period,	greater		]	};
    key <AB10> {	[ slash,	question	]	};
    key <RTSH> {	[	 Shift_R		]	};

    key <ALT>  {	[	 Meta_L			]	};
    key <SPCE> {	[	 space			]	};
    key <CAPS> {	[	 Caps_Lock		]	};
    // End alphanumeric section

    // Begin "Function" section
    key <FK01> {	[	F1		]	};
    key <FK02> {	[	F2		]	};
    key <FK03> {	[	F3		]	};
    key <FK04> {	[	F4		]	};
    key <FK05> {	[	F5		]	};
    key <FK06> {	[	F6		]	};
    key <FK07> {	[	F7		]	};
    key <FK08> {	[	F8		]	};
    key <FK09> {	[	F9		]	};
    key <FK10> {	[	F10		]	};
    // End "Function" section

    // Begin "Editing" section
    key <HELP> {	[	Help		]	};
    key <UNDO> {	[	Undo		]	};
    key <INS>  {	[	Insert		]	};
    key <UP>   {	[	Up		]	};
    key <HOME> {	[	Home,	Clear	]	};
    key <LEFT> {	[	Left		]	};
    key <DOWN> {	[	Down		]	};
    key <RGHT> {	[	Right		]	};
    // End "Editing" section

    // Begin "Keypad" section
    key <KPLP> {	[	KP_F1		]	};
    key <KPRP> {	[	KP_F2		]	};
    key <KPDV> {	[	KP_Divide	]	};
    key <KPMU> {	[	KP_Multiply	]	};
    key <KP7>  {	[	KP_7		]	};
    key <KP8>  {	[	KP_8		]	};
    key <KP9>  {	[	KP_9		]	};
    key <KPSU> {	[	KP_Subtract	]	};
    key <KP4>  {	[	KP_4		]	};
    key <KP5>  {	[	KP_5		]	};
    key <KP6>  {	[	KP_6		]	};
    key <KPAD> {	[	KP_Add		]	};
    key <KP1>  {	[	KP_1		]	};
    key <KP2>  {	[	KP_2		]	};
    key <KP3>  {	[	KP_3		]	};
    key <KP0>  {	[	KP_0		]	};
    key <KPDC> {	[	KP_Decimal	]	};
    key <KPEN> {	[	KP_Enter	]	};
    // End "Keypad" section

    modifier_map Shift  { Shift_L, Shift_R };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L };
    modifier_map Mod1	{ Meta_L };
};

xkb_symbols "de" {
    include "ataritt(us)"

    name[Group1]= "German";

    key <AE02> {	[	  2,	quotedbl	]	};
    key <AE03> {	[	  3,	section		]	};
    key <AE06> {	[	  6,	ampersand	]	};
    key <AE07> {	[	  7,	slash		]	};
    key <AE08> {	[	  8,	parenleft	]	};
    key <AE09> {	[	  9,	parenright	]	};
    key <AE10> {	[	  0,	equal		]	};
    key <AE11> {	[    ssharp,	question	]	};
    key <AE12> {	[ apostrophe,	grave		]	};
    key <TLDE> {	[ numbersign,	asciicircum	]	};

    key <AD06> {	[	  z,	Z		]	};
    key <AD11> {	[ udiaeresis,	Udiaeresis	],
			[        at,	backslash	]	};
    key <AD12> {	[      plus,	asterisk	]	};

    key <AC10> {	[ odiaeresis,	Odiaeresis	],
			[ bracketleft,	braceleft	]	};
    key <AC11> {	[ adiaeresis,	Adiaeresis	],
			[ bracketright,	braceright	]	};
    key <BKSL> {	[ asciitilde,	bar		]	};

    key <LSGT> {	[      less,	greater		]	};
    key <AB01> {	[	  y,	Y 		]	};
    key <AB08> {	[     comma,	semicolon	]	};
    key <AB09> {	[    period,	colon		]	};
    key <AB10> {	[     minus,	underscore	]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                default xkb_types "basic" {

    // Fairly standard definitions for
    // three of the four required key types.
    // The fourth type "KEYPAD" is defined in the "numpad" file.

    virtual_modifiers NumLock;

    type "ONE_LEVEL" {
	modifiers = None;
	map[None] = Level1;
	level_name[Level1]= "Any";
    };

    type "TWO_LEVEL" {
	modifiers = Shift;
	map[Shift] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
    };

    type "ALPHABETIC" {
	modifiers = Shift+Lock;
	map[Shift] = Level2;
	map[Lock] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 partial default xkb_types "Shift_Cancels_Caps" {

override type "TWO_LEVEL" {
    modifiers = Shift+Lock;
    map[Shift] = Level2;
    preserve[Lock]= Lock;
    level_name[Level1] = "Base";
    level_name[Level2] = "Shift";
};

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         // CapsLock uses internal capitalization rules,
// Shift "pauses" CapsLock.
partial xkb_types "internal" {
    type "ALPHABETIC" {
	modifiers = Shift+Lock;
	map[Shift] = Level2;
	preserve[Lock] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	preserve[Lock] = Lock;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level3;
	map[Lock+Shift+LevelThree] = Level3;
	preserve[Lock+LevelThree] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	preserve[Lock] = Lock;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level3;
	map[Lock+Shift+LevelThree] = Level4;
	preserve[Lock+LevelThree] = Lock;
	preserve[Lock+Shift+LevelThree] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};

// CapsLock uses internal capitalization rules,
// Shift doesn't cancel CapsLock.
partial xkb_types "internal_nocancel" {
    type "ALPHABETIC" {
	modifiers = Shift;
	map[Shift] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
        // the same as FOUR_LEVEL_ALPHABETIC
	modifiers = Shift+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};

// CapsLock acts as Shift with locking,
// Shift "pauses" CapsLock.
partial xkb_types "shift" {
    type "ALPHABETIC" {
	modifiers = Shift+Lock;
	map[Shift] = Level2;
	map[Lock] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level4;
	map[Shift+Lock+LevelThree] =  Level3;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level3;
	map[Lock+Shift+LevelThree] = Level4;
	preserve[Lock+LevelThree] = Lock;
	preserve[Lock+Shift+LevelThree] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};

// CapsLock acts as Shift with locking,
// Shift doesn't cancel CapsLock.
partial xkb_types "shift_nocancel" {
    type "ALPHABETIC" {
	modifiers = Shift+Lock;
	map[Shift] = Level2;
	map[Lock] = Level2;
	map[Shift+Lock] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] =  Level1;
	map[Shift] = Level2;
	map[Lock] =  Level2;
	map[Shift+Lock] = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level4;
	map[Shift+Lock+LevelThree] = Level4;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] =  Level1;
	map[Shift] = Level2;
	map[Lock] =  Level2;
	map[Shift+Lock] = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level3;
	map[Lock+Shift+LevelThree] = Level4;
	preserve[Lock+LevelThree] = Lock;
	preserve[Lock+Shift+LevelThree] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        