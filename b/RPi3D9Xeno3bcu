//////////////////////////////////////////////////////////////////////////
// Copyright (C) 1999, 2000, 2007, 2009 by Anton Zinoviev <anton@lml.bas.bg>
//
// This software may be used, modified, copied, distributed, and sold,
// both in source and binary form provided that the above copyright
// notice and these terms are retained. The name of the author may not
// be used to endorse or promote products derived from this software
// without prior permission.  THIS SOFTWARE IS PROVIDED "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED.  IN NO EVENT
// SHALL THE AUTHOR BE LIABLE FOR ANY DAMAGES ARISING IN ANY WAY OUT
// OF THE USE OF THIS SOFTWARE.
//
//////////////////////////////////////////////////////////////////////////
// Version 2.0

// The following variants are defined in this file:

// "bds" - the BDS keyboard layout compliant with the proposed
//         Bulgarian state standard BDS 5237:2006

// "phonetic" - the phonetic Bulgarian layout with the traditional position
//              of the letters

// "bas_phonetic" - the phonetic keyboard layout compliant with the
//                  proposed Bulgarian state standard BDS 5237:2006

// "latin" - an extended variant of the QWERTY layout with symbols that
//           Bulgarian users will type while the keyboard is in Latin mode

// The reasons behind the layout of the symbols in levels 3 and 4 are
// explained in http://arxiv.org/abs/0905.0484  (in Bulgarian).

// Two notes for the maintainers of xkeyboard-config:

// 1. Please do not use key names such as <LatQ> for the Bulgarian
// phonetic layouts.  The placement of the symbols must stay always
// the same regardless of which one of the alias sets in
// xkb/keycodes/aliases is used.

// 2. The layouts should not include level3(ralt_switch).

//////////////////////////////////////////////////////////////////////////

// Describes Bulgarian keyboard "BDS" modified according to the
// the new state standard BDS 5237:2006 and extended with symbols in
// levels 3 and 4.
default  partial alphanumeric_keys
xkb_symbols "bds" {

  name[Group1]= "Bulgarian";

  key <TLDE> {[ parenleft,         parenright,        bracketleft,       bracketright        ]};
  key <AE01> {[ 1,                 exclam                                                    ]};
  key <AE02> {[ 2,                 question                                                  ]};
  key <AE03> {[ 3,                 plus,              dagger,            dagger              ]};
  key <AE04> {[ 4,                 quotedbl                                                  ]};
  key <AE05> {[ 5,                 percent,           U2329,             U232A               ]};
  key <AE06> {[ 6,                 equal,             emdash,            emdash              ]};
  key <AE07> {[ 7,                 colon,             ellipsis,          ellipsis            ]};
  key <AE08> {[ 8,                 slash,             U0300,             U0301               ]};
  key <AE09> {[ 9,                 endash                                                    ]};
  key <AE10> {[ 0,                 numerosign                                                ]};
  key <AE11> {[ minus,             dollar,            U2011,             EuroSign            ]};
  key <AE12> {[ period,            EuroSign                                                  ]};

  key <AD01> {[ comma,             Cyrillic_yeru,  rightsinglequotemark, leftsinglequotemark ]};
  key <AD02> {[ Cyrillic_u,        Cyrillic_U                                                ]};
  key <AD03> {[ Cyrillic_ie,       Cyrillic_IE,       Cyrillic_e,        Cyrillic_E          ]};
  key <AD04> {[ Cyrillic_i,        Cyrillic_I,        U045D,             U040D               ]};
  key <AD05> {[ Cyrillic_sha,      Cyrillic_SHA                                              ]};
  key <AD06> {[ Cyrillic_shcha,    Cyrillic_SHCHA                                            ]};
  key <AD07> {[ Cyrillic_ka,       Cyrillic_KA,       copyright,         copyright           ]};
  key <AD08> {[ Cyrillic_es,       Cyrillic_ES,       copyright,         copyright           ]};
  key <AD09> {[ Cyrillic_de,       Cyrillic_DE                                               ]};
  key <AD10> {[ Cyrillic_ze,       Cyrillic_ZE                                               ]};
  key <AD11> {[ Cyrillic_tse,      Cyrillic_TSE                                              ]};
  key <AD12> {[ semicolon,         section                                                   ]};

  key <AC01> {[ Cyrillic_softsign, U045D,             Cyrillic_yeru,     Cyrillic_YERU       ]};
  key <AC02> {[ Cyrillic_ya,       Cyrillic_YA,       U0463,             U0462               ]};
  key <AC03> {[ Cyrillic_a,        Cyrillic_A                                                ]};
  key <AC04> {[ Cyrillic_o,        Cyrillic_O                                                ]};
  key <AC05> {[ Cyrillic_zhe,      Cyrillic_ZHE                                              ]};
  key <AC06> {[ Cyrillic_ghe,      Cyrillic_GHE                                              ]};
  key <AC07> {[ Cyrillic_te,       Cyrillic_TE,       trademark,         trademark           ]};
  key <AC08> {[ Cyrillic_en,       Cyrillic_EN                                               ]};
  key <AC09> {[ Cyrillic_ve,       Cyrillic_VE                                               ]};
  key <AC10> {[ Cyrillic_em,       Cyrillic_EM                                               ]};
  key <AC11> {[ Cyrillic_che,      Cyrillic_CHE                                              ]};
  key <BKSL> {[ doublelowquotemark, leftdoublequotemark, guillemotleft,  guillemotright      ]};

  key <LSGT> {[ U045D,             U040D                                                     ]};
  key <AB01> {[ Cyrillic_yu,       Cyrillic_YU                                               ]};
  key <AB02> {[ Cyrillic_shorti,   Cyrillic_SHORTI,   U046D,             U046C               ]};
  key <AB03> {[ Cyrillic_hardsign, Cyrillic_HARDSIGN, U046B,             U046A               ]};
  key <AB04> {[ Cyrillic_e,        Cyrillic_E                                                ]};
  key <AB05> {[ Cyrillic_ef,       Cyrillic_EF                                               ]};
  key <AB06> {[ Cyrillic_ha,       Cyrillic_HA                                               ]};
  key <AB07> {[ Cyrillic_pe,       Cyrillic_PE                                               ]};
  key <AB08> {[ Cyrillic_er,       Cyrillic_ER,       registered,        registered          ]};
  key <AB09> {[ Cyrillic_el,       Cyrillic_EL                                               ]};
  key <AB10> {[ Cyrillic_be,       Cyrillic_BE                                               ]};

  key <SPCE> {[ space,             space,             nobreakspace,      nobreakspace        ]};

  key <KPDL> { type[Group1] = "KEYPAD",             [ KP_Delete,         KP_Separator        ]};
};

// This is an improved variant of the traditional Bulgarian phonetic
// keyboard.  Some unnecessary symbols in levels 1 and 2 are replaced
// by more useful ones (similar as in "bas_phonetic") and additional
// symbols are added in levels 3 and 4.
partial alphanumeric_keys
xkb_symbols "phonetic" {
  name[Group1]= "Bulgarian (traditional phonetic)";

  key <TLDE> {[ Cyrillic_che,      Cyrillic_CHE                                              ]};
  key <AE01> {[ 1,                 exclam                                                    ]};
  key <AE02> {[ 2,                 at                                                        ]};
  key <AE03> {[ 3,                 numerosign                                                ]};
  key <AE04> {[ 4,                 dollar,            EuroSign,          EuroSign            ]};
  key <AE05> {[ 5,                 percent                                                   ]};
  key <AE06> {[ 6,                 EuroSign                                                  ]};
  key <AE07> {[ 7,                 section                                                   ]};
  key <AE08> {[ 8,                 asterisk                                                  ]};
  key <AE09> {[ 9,                 parenleft,         bracketleft,       U2329               ]};
  key <AE10> {[ 0,                 parenright,        bracketright,      U232A               ]};
  key <AE11> {[ minus,             endash,            U2011,             U2011               ]};
  key <AE12> {[ equal,             plus,              emdash,            dagger              ]};

  key <AD01> {[ Cyrillic_ya,       Cyrillic_YA,       U0463,             U0462               ]};
  key <AD02> {[ Cyrillic_ve,       Cyrillic_VE                                               ]};
  key <AD03> {[ Cyrillic_ie,       Cyrillic_IE,       Cyrillic_e,        Cyrillic_E          ]};
  key <AD04> {[ Cyrillic_er,       Cyrillic_ER,       registered,        registered          ]};
  key <AD05> {[ Cyrillic_te,       Cyrillic_TE,       trademark,         trademark           ]};
  key <AD06> {[ Cyrillic_hardsign, Cyrillic_HARDSIGN, U046B,             U046A               ]};
  key <AD07> {[ Cyrillic_u,        Cyrillic_U                                                ]};
  key <AD08> {[ Cyrillic_i,        Cyrillic_I,        U045D,             U040D               ]};
  key <AD09> {[ Cyrillic_o,        Cyrillic_O                                                ]};
  key <AD10> {[ Cyrillic_pe,       Cyrillic_PE                                               ]};
  key <AD11> {[ Cyrillic_sha,      Cyrillic_SHA                                              ]};
  key <AD12> {[ Cyrillic_shcha,    Cyrillic_SHCHA                                            ]};

  key <AC01> {[ Cyrillic_a,        Cyrillic_A                                                ]};
  key <AC02> {[ Cyrillic_es,       Cyrillic_ES,       copyright,         copyright           ]};
  key <AC03> {[ Cyrillic_de,       Cyrillic_DE                                               ]};
  key <AC04> {[ Cyrillic_ef,       Cyrillic_EF                                               ]};
  key <AC05> {[ Cyrillic_ghe,      Cyrillic_GHE                                              ]};
  key <AC06> {[ Cyrillic_ha,       Cyrillic_HA                                               ]};
  key <AC07> {[ Cyrillic_shorti,   Cyrillic_SHORTI,   U046D,             U046C               ]};
  key <AC08> {[ Cyrillic_ka,       Cyrillic_KA                                               ]};
  key <AC09> {[ Cyrillic_el,       Cyrillic_EL                                               ]};
  key <AC10> {[ semicolon,         colon,             ellipsis,          ellipsis            ]};
  key <AC11> {[ apostrophe,        quotedbl,       rightsinglequotemark, leftsinglequotemark ]};
  key <BKSL> {[ Cyrillic_yu,       Cyrillic_YU                                               ]};

  key <LSGT> {[ U045D,             U040D                                                     ]};
  key <AB01> {[ Cyrillic_ze,       Cyrillic_ZE                                               ]};
  key <AB02> {[ Cyrillic_softsign, U045D,             Cyrillic_yeru,     Cyrillic_YERU       ]};
  key <AB03> {[ Cyrillic_tse,      Cyrillic_TSE,      copyright,         copyright           ]};
  key <AB04> {[ Cyrillic_zhe,      Cyrillic_ZHE                                              ]};
  key <AB05> {[ Cyrillic_be,       Cyrillic_BE                                               ]};
  key <AB06> {[ Cyrillic_en,       Cyrillic_EN                                               ]};
  key <AB07> {[ Cyrillic_em,       Cyrillic_EM                                               ]};
  key <AB08> {[ comma,            doublelowquotemark, guillemotleft,     guillemotleft       ]};
  key <AB09> {[ period,          leftdoublequotemark, guillemotright,    guillemotright      ]};
  key <AB10> {[ slash,             question,          U0300,             U0301               ]};

  key <SPCE> {[ space,             space,             nobreakspace,      nobreakspace        ]};

  key <KPDL> { type[Group1] = "KEYPAD",             [ KP_Delete,         KP_Separator        ]};
};

// This is the Bulgarian phonetic keyboard according to the proposed
// state standard BDS 5237:2006 with additional symbols in levels 3 and 4.
partial alphanumeric_keys
xkb_symbols "bas_phonetic" {
  include "bg(phonetic)"
  name[Group1]= "Bulgarian (new phonetic)";

  key <TLDE> {[ Cyrillic_yu,       Cyrillic_YU                                               ]};
  key <AD01> {[ Cyrillic_che,      Cyrillic_CHE                                              ]};
  key <AD02> {[ Cyrillic_sha,      Cyrillic_SHA                                              ]};
  key <AD11> {[ Cyrillic_ya,       Cyrillic_YA,       U0463,             U0462               ]};
  key <BKSL> {[ Cyrillic_softsign, U045D,             Cyrillic_yeru,     Cyrillic_YERU       ]};
  key <AB02> {[ Cyrillic_zhe,      Cyrillic_ZHE                                              ]};
  key <AB04> {[ Cyrillic_ve,       Cyrillic_VE                                               ]};
};


// This is an extended variant of the standard Latin QWERTY layout with
// additional symbols in levels 3 and 4.
hidden partial alphanumeric_keys
xkb_symbols "latin" {

  key <TLDE> {[ grave,             asciitilde,        U2248,             U2245               ]};
  key <AE01> {[ 1,                 exclam,            notsign,           notsign             ]};
  key <AE02> {[ 2,                 at,                twosuperior,       enfilledcircbullet  ]};
  key <AE03> {[ 3,                 numbersign,        threesuperior,     notequal            ]};
  key <AE04> {[ 4,                 dollar,            EuroSign,          sterling            ]};
  key <AE05> {[ 5,                 percent,           U2030,             U2030               ]};
  key <AE06> {[ 6,                 asciicircum,       logicaland,        logicalor           ]};
  key <AE07> {[ 7,                 ampersand,         section,           section             ]};
  key <AE08> {[ 8,                 asterisk,          infinity,          multiply            ]};
  key <AE09> {[ 9,                 parenleft,         U2202,             nabla               ]};
  key <AE10> {[ 0,                 parenright,        U2300,             U2300               ]};
  key <AE11> {[ minus,             underscore,        U2011,             endash              ]};
  key <AE12> {[ equal,             plus,              emdash,            plusminus           ]};

  key <AD01> {[ q,                 Q,                 Greek_THETA,       Greek_theta         ]};
  key <AD02> {[ w,                 W,                 Greek_OMEGA,       Greek_omega         ]};
  key <AD03> {[ e,                 E,                 U2203,             Greek_epsilon       ]};
  key <AD04> {[ r,                 R,                 registered,        Greek_rho           ]};
  key <AD05> {[ t,                 T,                 trademark,         Greek_tau           ]};
  key <AD06> {[ y,                 Y,                 yen,               Greek_upsilon       ]};
  key <AD07> {[ u,                 U,                 intersection,      union               ]};
  key <AD08> {[ i,                 I,                 integral,          Greek_iota          ]};
  key <AD09> {[ o,                 O,                 degree,            U222E               ]};
  key <AD10> {[ p,                 P,                 Greek_PI,          Greek_pi            ]};
  key <AD11> {[ bracketleft,       braceleft,         U2286,             includedin          ]};
  key <AD12> {[ bracketright,      braceright,        U2208,             U2209               ]};

  key <AC01> {[ a,                 A,                 U2200,             Greek_alpha         ]};
  key <AC02> {[ s,                 S,                 Greek_SIGMA,       Greek_sigma         ]};
  key <AC03> {[ d,                 D,                 Greek_DELTA,       Greek_delta         ]};
  key <AC04> {[ f,                 F,                 Greek_PHI,         Greek_phi           ]};
  key <AC05> {[ g,                 G,                 Greek_GAMMA,       Greek_gamma         ]};
  key <AC06> {[ h,                 H,                 U2225,             Greek_eta           ]};
  key <AC07> {[ j,                 J                                                         ]};
  key <AC08> {[ k,                 K,                 U03F0,             Greek_kappa         ]};
  key <AC09> {[ l,                 L,                 Greek_LAMBDA,      Greek_lambda        ]};
  key <AC10> {[ semicolon,         colon,             division,          division            ]};
  key <AC11> {[ apostrophe,        quotedbl,        leftdoublequotemark, rightdoublequotemark]};
  key <BKSL> {[ backslash,         bar,               identical,         downtack            ]};

  key <LSGT> {[ less,              greater,           U2266,             U2267               ]};
  key <AB01> {[ z,                 Z,                 U2220,             Greek_zeta          ]};
  key <AB02> {[ x,                 X,                 Greek_XI,          Greek_xi            ]};
  key <AB03> {[ c,                 C,                 copyright,         Greek_chi           ]};
  key <AB04> {[ v,                 V,                 Greek_PSI,         Greek_psi           ]};
  key <AB05> {[ b,                 B,                 U03D1,             Greek_beta          ]};
  key <AB06> {[ n,                 N,                 U207F,             Greek_nu            ]};
  key <AB07> {[ m,                 M,                 Greek_mu,          Greek_mu            ]};
  key <AB08> {[ comma,             less,              U2266,             U21D4               ]};
  key <AB09> {[ period,            greater,           U2267,             U21D2               ]};
  key <AB10> {[ slash,             question,        leftsinglequotemark, rightsinglequotemark]};

  key <SPCE> {[ space,             space,             nobreakspace,      nobreakspace        ]};

  key <KPDL> { type[Group1] = "KEYPAD",             [ KP_Delete,         KP_Decimal          ]};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              default partial alphanumeric_keys
xkb_symbols "jawi" {
    include "id(jawi)"

    name[Group1]= "Malay (Jawi)";
};

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           default
xkb_symbols "abnt2" {

    // Based on a very simple Brazilian ABNT2 keyboard,
    // by Ricardo Y. Igarashi (iga@that.com.br).
    // With added support for dead keys in I18N applications,
    // by Conectiva  (http://www.conectiva.com.br).

    include "latin"
    name[Group1]="Portuguese (Brazil)";

    key <TLDE> { [   apostrophe,       quotedbl,       notsign,         notsign ] };
    key <AE02> { [            2,             at,   twosuperior,         onehalf ] };
    key <AE03> { [            3,     numbersign, threesuperior,   threequarters ] };
    key <AE04> { [            4,         dollar,      sterling,      onequarter ] };
    key <AE05> { [            5,        percent,          cent,    threeeighths ] };
    key <AE06> { [            6, dead_diaeresis,       notsign,       diaeresis ] };
    key <AE12> { [        equal,           plus,       section,     dead_ogonek ] };

    key <AD01> { [            q,              Q,         slash,           slash ] };
    key <AD02> { [            w,              W,      question,        question ] };
    key <AD03> { [            e,              E,      EuroSign,        EuroSign ] };
    key <AD04> { [            r,              R,    registered,      registered ] };
    key <AD11> { [   dead_acute,     dead_grave,         acute,           grave ] };
    key <AD12> { [  bracketleft,      braceleft,   ordfeminine,     dead_macron ] };
    key <BKSL> { [ bracketright,     braceright,     masculine,       masculine ] };

    key <AC10> { [     ccedilla,       Ccedilla,    dead_acute,dead_doubleacute ] };
    key <AC11> { [   dead_tilde,dead_circumflex,    asciitilde,     asciicircum ] };

    key <LSGT> { [    backslash,            bar,     masculine,      dead_breve ] };
    key <AB03> { [            c,              C,     copyright,       copyright ] };
    key <AB07> { [            m,              M,            mu,              mu ] };
    key <AB10> { [    semicolon,          colon, dead_belowdot,   dead_abovedot ] };

    // The ABNT-2 keyboard has this special key:
    key <AB11> { [        slash,       question,        degree,    questiondown ] };

    modifier_map Mod3   { Scroll_Lock };

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    include "br(abnt2)"
    name[Group1]="Portuguese (Brazil, eliminate dead keys)";

    key <AE06> { [            6,      diaeresis,       notsign,         notsign ] };
    key <AD11> { [   apostrophe,          grave                                 ] };
    key <AC10> { [     ccedilla,       Ccedilla,         acute,     doubleacute ] };
    key <AC11> { [   asciitilde,    asciicircum                                 ] };
    key <AB10> { [    semicolon,          colon, dead_belowdot,        abovedot ] };
};


// The ABNT2 keyboard on IBM/Lenovo Thinkpads,
// by Piter PUNK <piterpk@terra.com.br>.
//
partial alphanumeric_keys
xkb_symbols "thinkpad" {

    include "br(abnt2)"
    name[Group1]="Portuguese (Brazil, IBM/Lenovo ThinkPad)";

    key <RCTL> { [        slash,       question,        degree,    questiondown ] };
};


partial alphanumeric_keys
xkb_symbols "olpc" {

    include "us(basic)"
    name[Group1]="Portuguese (Brazil)";

    key <TLDE> { [   apostrophe,        quotedbl                                ] };
    key <AE01> { [            1,          exclam,   onesuperior                 ] };
    key <AE02> { [            2,              at,   twosuperior                 ] };
    key <AE03> { [            3,      numbersign, threesuperior                 ] };
    key <AE04> { [            4,          dollar,      sterling                 ] };
    key <AE05> { [            5,         percent,          cent                 ] };
    key <AE06> { [            6,  dead_diaeresis,       notsign                 ] };
    key <AE12> { [        equal,            plus,       section                 ] };

    key <AD03> { [            e,               E,      EuroSign                 ] };
    key <AD11> { [   dead_acute,      dead_grave,         acute,          grave ] };
    key <AD12> { [  bracketleft,       braceleft,     0x10000AA                 ] };
    key <BKSL> { [ bracketright,      braceright,     0x10000BA                 ] };

    key <AC10> { [     ccedilla,        Ccedilla                                ] };
    key <AC11> { [   dead_tilde, dead_circumflex                                ] };

    key <AB01> { [            z,               Z,           bar                 ] };
    key <AB03> { [            c,               C,     0x10020A2                 ] };
    key <AB09> { [       period,         greater,     backslash                 ] };
    key <AB10> { [    semicolon,           colon                                ] };

    key <I219> { [        slash,        question,        degree, ISO_Next_Group ] };

    include "level3(ralt_switch)"
};


//
// Brazilian Dvorak layout                                 2005-04-18
// "Teclado Simplificado Brasileiro" ou "Dvorak Brasileiro"
//
// Heitor Moraes    heitor.moraes@gmail.com
// Luiz Portella    lfpor@lujz.org
// Nando Florestan  nando2003@mandic.com.br
// Ari Caldeira     ari@tecladobrasileiro.com.br
//
partial alphanumeric_keys
xkb_symbols "dvorak" {

    name[Group1]="Portuguese (Brazil, Dvorak)";

// Numeric row
    key <TLDE> { [   apostrophe,        quotedbl,           dead_caron, dead_doubleacute ] };
    key <AE01> { [            1,          exclam,          onesuperior,       exclamdown ] };
    key <AE02> { [            2,              at,          twosuperior,          onehalf ] };
    key <AE03> { [            3,      numbersign,        threesuperior,    threequarters ] };
    key <AE04> { [            4,          dollar,             sterling,       onequarter ] };
    key <AE05> { [            5,         percent,                 cent,       0x01002030 ] };
    key <AE06> { [            6,  dead_diaeresis,              notsign,        diaeresis ] };
    key <AE07> { [            7,       ampersand,        dead_belowdot,    dead_abovedot ] };
    key <AE08> { [            8,        asterisk,          dead_ogonek,        dead_horn ] };
    key <AE09> { [            9,       parenleft,         dead_cedilla,        dead_hook ] };
    key <AE10> { [            0,      parenright,          dead_macron,       dead_breve ] };
    key <AE11> { [  bracketleft,       braceleft,          ordfeminine,       0x01000326 ] };
    key <AE12> { [ bracketright,      braceright,            masculine,   dead_abovering ] };


// Upper row
    key <AD01> { [        slash,        question,               degree,     questiondown ] };
    key <AD02> { [        comma,            less,           0x01000329,       0x01000313 ] };
    key <AD03> { [       period,         greater,           0x01002022,   periodcentered ] };
    key <AD04> { [            p,               P,                thorn,            THORN ] };
    key <AD05> { [            y,               Y,                  yen,              yen ] };
    key <AD06> { [            f,               F,  leftdoublequotemark,  leftsinglequotemark ] };
    key <AD07> { [            g,               G, rightdoublequotemark, rightsinglequotemark ] };
    key <AD08> { [            c,               C,              uparrow,        copyright ] };
    key <AD09> { [            r,               R,           registered,       registered ] };
    key <AD10> { [            l,               L,              lstroke,          Lstroke ] };
    key <AD11> { [   dead_acute,      dead_grave,                acute,            grave ] };
    key <AD12> { [        equal,            plus,              section,        plusminus ] };

// Central row
    key <AC01> { [            a,               A,                   ae,               AE ] };
    key <AC02> { [            o,               O,                   oe,               OE ] };
    key <AC03> { [            e,               E,             EuroSign,         EuroSign ] };
    key <AC04> { [            u,               U,               oslash,         Ooblique ] };
    key <AC05> { [            i,               I,             idotless,        Iabovedot ] };
    key <AC06> { [            d,               D,                  eth,              ETH ] };
    key <AC07> { [            h,               H,            leftarrow,        paragraph ] };
    key <AC08> { [            t,               T,           rightarrow,        trademark ] };
    key <AC09> { [            n,               N,                  eng,              ENG ] };
    key <AC10> { [            s,               S,               ssharp,           ssharp ] };
    key <AC11> { [   dead_tilde, dead_circumflex,           asciitilde,      asciicircum ] };
    key <BKSL> { [        minus,      underscore,           0x01002015,       0x01000336 ] };

// Lower row
    key <LSGT> { [     ccedilla,        Ccedilla,            backslash,              bar ] };
    key <AB01> { [    semicolon,           colon,           0x01000331,       0x0100032D ] };
    key <AB02> { [            q,               Q,           0x01000259,       0x0100018F ] };
    key <AB03> { [            j,               J,           0x01000292,       0x010001B7 ] };
    key <AB04> { [            k,               K,        guillemotleft,       0x01002039 ] };
    key <AB05> { [            x,               X,             multiply,         division ] };
    key <AB06> { [            b,               B,       guillemotright,       0x0100203A ] };
    key <AB07> { [            m,               M,            downarrow,               mu ] };
    key <AB08> { [            w,               W,               ubreve,           Ubreve ] };
    key <AB09> { [            v,               V,   doublelowquotemark, singlelowquotemark ] };
    key <AB10> { [            z,               Z,           0x0100201F,       0x0100201B ] };
    key <AB11> { [    backslash,             bar,             currency,        brokenbar ] };

    key <SPCE> { [        space,           space,         nobreakspace,     nobreakspace ] };

// Configures the "," for the numeric keypad
    include "kpdl(comma)"

// Configures the use of the AltGr key
    include "level3(ralt_switch)"
};


//
// Brazilian Nativo layout.
//     This is a Dvorak-based layout, designed for the Portuguese language.
//
// Ari Caldeira    <ari@tecladobrasileiro.com.br>    2005-07-19
//
partial alphanumeric_keys
xkb_symbols "nativo" {

    name[Group1]="Portuguese (Brazil, Nativo)";

// Numeric row
    key <TLDE> { [        equal,            plus,              section,        plusminus ] };
    key <AE01> { [            1,          exclam,          onesuperior,       exclamdown ] };
    key <AE02> { [            2,              at,          twosuperior,          onehalf ] };
    key <AE03> { [            3,      numbersign,        threesuperior,    threequarters ] };
    key <AE04> { [            4,          dollar,             sterling,       onequarter ] };
    key <AE05> { [            5,         percent,                 cent,       0x01002030 ] };
    key <AE06> { [            6,  dead_diaeresis,              notsign,        diaeresis ] };
    key <AE07> { [            7,       ampersand,        dead_belowdot,    dead_abovedot ] };
    key <AE08> { [            8,        asterisk,          dead_ogonek,        dead_horn ] };
    key <AE09> { [            9,       parenleft,         dead_cedilla,        dead_hook ] };
    key <AE10> { [            0,      parenright,          dead_macron,       dead_breve ] };
    key <AE11> { [  bracketleft,       braceleft,          ordfeminine,       0x01000326 ] };
    key <AE12> { [ bracketright,      braceright,            masculine,   dead_abovering ] };

// Upper row
    key <AD01> { [        slash,        question,               degree,     questiondown ] };
    key <AD02> { [        comma,            less,           0x01000329,       0x01000313 ] };
    key <AD03> { [       period,         greater,           0x01002022,   periodcentered ] };
    key <AD04> { [            h,               H,            paragraph,        paragraph ] };
    key <AD05> { [            x,               X,             multiply,         division ] };
    key <AD06> { [            w,               W,               ubreve,           Ubreve ] };
    key <AD07> { [            l,               L,              lstroke,          Lstroke ] };
    key <AD08> { [            t,               T,            trademark,        trademark ] };
    key <AD09> { [            c,               C,            copyright,        copyright ] };
    key <AD10> { [            p,               P,                thorn,            THORN ] };
    key <AD11> { [   dead_tilde, dead_circumflex,           asciitilde,      asciicircum ] };
    key <AD12> { [        minus,      underscore,           0x01002015,       0x01000336 ] };

// Central row
    key <AC01> { [            i,               I,             idotless,        Iabovedot ] };
    key <AC02> { [            e,               E,             EuroSign,         EuroSign ] };
    key <AC03> { [            a,               A,                   ae,               AE ] };
    key <AC04> { [            o,               O,                   oe,               OE ] };
    key <AC05> { [            u,               U,               oslash,         Ooblique ] };
    key <AC06> { [            m,               M,                   mu,               mu ] };
    key <AC07> { [            d,               D,                  eth,              ETH ] };
    key <AC08> { [            s,               S,               ssharp,           ssharp ] };
    key <AC09> { [            r,               R,           registered,       registered ] };
    key <AC10> { [            n,               N,                  eng,              ENG ] };
    key <AC11> { [   dead_acute,      dead_grave,                acute,            grave ] };
    key <BKSL> { [   apostrophe,        quotedbl,           dead_caron, dead_doubleacute ] };

// Lower row
    key <LSGT> { [    semicolon,           colon,           0x01000331,       0x0100032D ] };
    key <AB01> { [            y,               Y,                  yen,              yen ] };
    key <AB02> { [     ccedilla,        Ccedilla,            backslash,              bar ] };
    key <AB03> { [            j,               J,           0x01000292,       0x010001B7 ] };
    key <AB04> { [            b,               B,        guillemotleft,       0x01002039 ] };
    key <AB05> { [            k,               K,       guillemotright,       0x0100203A ] };
    key <AB06> { [            q,               Q,           0x01000259,       0x0100018F ] };
    key <AB07> { [            v,               V,   doublelowquotemark,   singlelowquotemark ] };
    key <AB08> { [            g,               G,  leftdoublequotemark,  leftsinglequotemark ] };
    key <AB09> { [            f,               F, rightdoublequotemark, rightsinglequotemark ] };
    key <AB10> { [            z,               Z,           0x0100201F,       0x0100201B ] };
    key <AB11> { [    backslash,             bar,             currency,        brokenbar ] };

    key <SPCE> { [        space,           space,         nobreakspace,     nobreakspace ] };

// Configures the "," for the numeric keypad
    include "kpdl(comma)"

// Configures the use of the AltGr key
    include "level3(ralt_switch)"
};


//
// Brazilian Nativo layout for US keyboards.
//
// Ari Caldeira    <ari@tecladobrasileiro.com.br>    2005-07-19
//
partial alphanumeric_keys
xkb_symbols "nativo-us" {

    include "br(nativo)"

    name[Group1]="Portuguese (Brazil, Nativo for US keyboards)";

    key <AB01> { [            y,               Y,              ccedilla,        Ccedilla ] };
    key <AB02> { [    semicolon,           colon,             backslash,             bar ] };
};


//
// Brazilian Nativo layout for typing Esperanto.
//
// Ari Caldeira    <ari@tecladobrasileiro.com.br>    2005-07-19
//
partial alphanumeric_keys
xkb_symbols "nativo-epo" {

    include "br(nativo)"

    name[Group1]="Esperanto (Brazil, Nativo)";

    key <AD04> { [            h,               H,          hcircumflex,      Hcircumflex ] };
    key <AD05> { [  ccircumflex,     Ccircumflex,                    x,                X ] };
    key <AD06> { [       ubreve,          Ubreve,                    w,                W ] };

    key <AB01> { [  jcircumflex,     Jcircumflex,                    y,                Y ] };
    key <AB02> { [  scircumflex,     Scircumflex,             ccedilla,         Ccedilla ] };
    key <AB06> { [  gcircumflex,     Gcircumflex,                    q,                Q ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/br(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     // 10-dot patterns on the home row + v and n
default  partial alphanumeric_keys
xkb_symbols "home_row" {
    include "brai(keypad)"

    name[Group1]="Braille";

    key <AC04>	{ [ braille_dot_1 ] };
    key <AC03>	{ [ braille_dot_2 ] };
    key <AC02>	{ [ braille_dot_3 ] };
    key <AC07>	{ [ braille_dot_4 ] };
    key <AC08>	{ [ braille_dot_5 ] };
    key <AC09>	{ [ braille_dot_6 ] };
    key <AC01>	{ [ braille_dot_7 ] };
    key <AC10>	{ [ braille_dot_8 ] };
    key <AB04>	{ [ braille_dot_9 ] };
    key <AB06>	{ [ braille_dot_10 ] };
};

// 6-dot patterns for the left hand
partial alphanumeric_keys
xkb_symbols "left_hand" {
    include "brai(keypad)"

    name[Group1]="Braille (left hand)";

    key <AC03>	{ [ braille_dot_1 ] };
    key <AC02>	{ [ braille_dot_2 ] };
    key <AC01>	{ [ braille_dot_3 ] };
    key <AC04>	{ [ braille_dot_4 ] };
    key <AB05>	{ [ braille_dot_5 ] };
    key <AB04>	{ [ braille_dot_6 ] };
};

// 6-dot patterns for the right hand
partial alphanumeric_keys
xkb_symbols "right_hand" {
    include "brai(keypad)"

    name[Group1]="Braille (right hand)";

    key <AC07>	{ [ braille_dot_1 ] };
    key <AB05>	{ [ braille_dot_2 ] };
    key <AB06>	{ [ braille_dot_3 ] };
    key <AC08>	{ [ braille_dot_4 ] };
    key <AC09>	{ [ braille_dot_5 ] };
    key <AC10>	{ [ braille_dot_6 ] };
};

// 6-dot patterns on the keypad
hidden partial keypad_keys
xkb_symbols "keypad" {
    key <KP4>	{ [ braille_dot_1 ] };
    key <KP1>	{ [ braille_dot_2 ] };
    key <KP0>	{ [ braille_dot_3 ] };
    key <KP5>	{ [ braille_dot_4 ] };
    key <KP6>	{ [ braille_dot_5 ] };
    key <KPAD>	{ [ braille_dot_6 ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            //
// Dzongkha / Tibetan layout for Bhutanese keyboard
//
/////////////////////////////////////////////////////////////////
//
//   Based on the official layout for Dzongkha
//   approved by the Department of Information Technology &
//   Dzongkha Development Authority of the Government of Bhutan
//
//   Copyright (C) 2004, Gregory Mokhin <mokhin@bog.msu.ru>
///////////////////////////////////////////////////////////////// 
//   Version 0.97  2004-01-09  Layout map provided by Chris Fynn
//   Version 1.0   2004-07-29  Some correction by Pema Geyleg <pema_geyleg@druknet.bt>
/////////////////////////////////////////////////////////////////

default  partial alphanumeric_keys
xkb_symbols "basic" {
      name[Group1]= "Dzongkha";

      key <TLDE> { [      0x1000F09, 0x1000F0A, 0x1000F6C, 0x1000F6D ]	};

// numbers e.a.
      key <AE01> { [      0x1000F21, 0x1000F04, 1, exclam ]	};
      key <AE02> { [      0x1000F22, 0x1000F05, 2, at     ]	};
      key <AE03> { [      0x1000F23, 0x1000F06, 3, numbersign ]	};
      key <AE04> { [      0x1000F24, 0x1000F48, 4, dollar  ]	};
      key <AE05> { [      0x1000F25, 0x1000F70, 5, percent ]	};
      key <AE06> { [      0x1000F26, 0x1000F08, 6, 0x1000F01 ]	};
      key <AE07> { [      0x1000F27, 0x1000F38, 7, ampersand ]	};
      key <AE08> { [      0x1000F28, 0x1000F34, 8, asterisk ]	};
      key <AE09> { [      0x1000F29, 0x1000F3C, 9, parenleft ]	};
      key <AE10> { [      0x1000F20, 0x1000F3D, 0, parenright ]	};
      key <AE11> { [      0x1000F14, 0x1000F7F, minus, underscore ]	};
      key <AE12> { [      0x1000F0D, 0x1000F11, equal, plus ]	};

// consonants ( ka kha ga nga )
      key <AD01> { [      0x1000F40, 0x1000F90, 0x1000F88, VoidSymbol  ]	};
      key <AD02> { [      0x1000F41, 0x1000F91, 0x1000F89, VoidSymbol  ]	};
      key <AD03> { [      0x1000F42, 0x1000F92, 0x1000F6E, 0x1000F6F] 	};
      key <AD04> { [      0x1000F44, 0x1000F94, 0x1000F83, 0x1000F82  ]	};

// vowels ( i u e o )
      key <AD05> { [      0x1000F72, 0x1000F80, 0x1000F1A, VoidSymbol  ]	};
      key <AD06> { [      0x1000F74, 0x1000F84, 0x1000F1B, VoidSymbol  ]	};
      key <AD07> { [      0x1000F7A, 0x1000F7B, 0x1000F1C, VoidSymbol ]	};
      key <AD08> { [      0x1000F7C, 0x1000F7D, 0x1000F1D, 0x1000F17  ]	};

// consonants ( ca cha ja nya )
      key <AD09> { [      0x1000F45, 0x1000F95, 0x1000F1E, 0x1000F18   ]	};
      key <AD10> { [      0x1000F46, 0x1000F96, 0x1000F1F, 0x1000F19   ]	};
      key <AD11> { [      0x1000F47, 0x1000F97, bracketleft, 0x1000F3E ]	};
      key <AD12> { [      0x1000F49, 0x1000F99, bracketright, 0x1000F3F  ]	};

// consonants ( ta tha da na pa pha ba ma tsa tsha dza wa )
      key <AC01> { [      0x1000F4F, 0x1000F9F, 0x1000F4A, 0x1000F9A ]	};
      key <AC02> { [      0x1000F50, 0x1000FA0, 0x1000F4B, 0x1000F9B ]	};
      key <AC03> { [      0x1000F51, 0x1000FA1, 0x1000F4C, 0x1000F9C ]	};
      key <AC04> { [      0x1000F53, 0x1000FA3, 0x1000F4E, 0x1000F9E ]	};
      key <AC05> { [      0x1000F54, 0x1000FA4, 0x1002039, guillemotleft ]	};
      key <AC06> { [      0x1000F55, 0x1000FA5, 0x100203A, guillemotright ]	};
      key <AC07> { [      0x1000F56, 0x1000FA6, 0x1000F37, 0x1000F35 ]	};
      key <AC08> { [      0x1000F58, 0x1000FA8, 0x1000F7E, VoidSymbol ]	};
      key <AC09> { [      0x1000F59, 0x1000FA9, 0x1000F39, VoidSymbol ]	};
      key <AC10> { [      0x1000F5A, 0x1000FAA, colon, semicolon ]	};
      key <AC11> { [      0x1000F5B, 0x1000FAB, apostrophe, quotedbl ]	};

// TODO: BKSL and LSGT are from gb layout, are there any variants?
      key <BKSL> { [      0x1000F5D, 0x1000FAD, backslash, 0x1000FBA ]	};
      key <LSGT> { [      0x1000F0D, 0x1000F11, 0x1000F10, 0x1000F0F ]	};

// consonants ( zha za 'a ya ra la sha sa ha a )
      key <AB01> { [      0x1000F5E, 0x1000FAE, 0x1000F13, 0x1000F36 ]	};
      key <AB02> { [      0x1000F5F, 0x1000FAF, 0x1000FBE, 0x1000FBF ]	};
      key <AB03> { [      0x1000F60, 0x1000F71, 0x1000F03, 0x1000FB0 ]	};
      key <AB04> { [      0x1000F61, 0x1000FB1, 0x1000F12, 0x1000FBB ]	};
      key <AB05> { [      0x1000F62, 0x1000FB2, 0x1000F6A, 0x1000FBC ]	};
      key <AB06> { [      0x1000F63, 0x1000FB3, 0x1000F8A, 0x1000F8B ]	};
      key <AB07> { [      0x1000F64, 0x1000FB4, 0x1000F65, 0x1000FB5 ]	};
      key <AB08> { [      0x1000F66, 0x1000FB6, comma, less ]	};
      key <AB09> { [      0x1000F67, 0x1000FB7, period, greater ]	};
      key <AB10> { [      0x1000F68, 0x1000FB8, slash, question ]	};

// space
      key <SPCE> { [ 0x1000F0B, space, 0x1000F0C, nobreakspace ] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          default  partial alphanumeric_keys
xkb_symbols "tswana" {

    include "us"

    name[Group1]= "Tswana";

    key <AC10> { [ semicolon,	    colon,  0x01000324,  0x01000324 ] };	//COMBINING DIAERESIS BELOW	
    key <AC11> { [apostrophe,    quotedbl,  0x01000301,  0x01000308 ] };	//COMBINING ACUTE ACCENT, COMBINING DIAERESIS
    key <TLDE> { [     grave,  asciitilde,  0x01000300,  0x01000303 ] };	//COMBINING GRAVE ACCENT, COMBINING TILDE
    key <AE06> { [   	   6, asciicircum,  0x01000302 	       	    ] };	//COMBINING CIRCUMFLEX ACCENT
    key <AE08> { [	   8,    asterisk,  0x01000307,  0x01000323 ] };	//COMBINING DOT ABOVE, COMBINING DOT BELOW
    key <AE09> { [	   9,   parenleft,  0x01000306	            ] };	//COMBINING BREVE
    key <AE10> { [	   0,  parenright,  0x0100030c 	            ] };	//COMBINING CARON
    key <AE11> { [     minus,  underscore,  0x01000304,  0x01000331 ] };	//COMBINING MACRON,COMBINING MACRON BELOW  
  	
    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           // based on
// belarusian standard keyboard 
// Alexander Mikhailian <mikhailian@altern.org>
// Reworked to use winkeys by default and russian keymap as base by Paul Lubetsky <vegeek@gmail.com>
// Added third level with russian symbols
// See freedesktop.org bug #23604

default  partial alphanumeric_keys
xkb_symbols "basic" {
	include "ru(winkeys)"
	name[Group1]= "Belarusian";

	key	<AD09> {	[	Byelorussian_shortu,	Byelorussian_SHORTU	]	};
	key	<AD12> {	[	apostrophe,	apostrophe	]	};
	key	<AB05> {	[	Ukrainian_i,	Ukrainian_I	]	};
};

partial alphanumeric_keys
xkb_symbols "legacy" {
	include "by(basic)"
	name[Group1]= "Belarusian (legacy)";

	key <AE03> {        [               3,      numbersign      ]       };
	key <AE04> {        [               4,        asterisk      ]       };
	key <AE05> {        [               5,           colon      ]       };
	key <AE06> {        [               6,           comma      ]       };
	key <AE07> {        [               7,          period      ]       };
	key <AE08> {        [               8,       semicolon      ]       };
	key <AB10> {        [           slash,        question      ]       };
	key <BKSL> {        [       backslash,             bar      ]       };
};

// based on a keyboard map from an 'xkb/symbols/iso3335-3' file

partial alphanumeric_keys
xkb_symbols "latin" {
	include "latin"
	name[Group1]= "Belarusian (Latin)";

	key <AD02> {        [    w,    W,    scaron,    Scaron    ]       };
	key <AD07> {        [    u,    U,    ubreve,    Ubreve    ]       };
	key <AC02> {        [    s,    S,    sacute,    Sacute    ]       };
	key <AC09> {        [    l,    L,    lstroke,   Lstroke   ]       };
	key <AB01> {        [    z,    Z,    zacute,    Zacute    ]       };
	key <AB02> {        [    x,    X,    zcaron,    Zcaron    ]       };
	key <AB03> {        [    c,    C,    cacute,    Cacute    ]       };
	key <AB04> {        [    v,    V,    ccaron,    Ccaron    ]       };
	key <AB06> {        [    n,    N,    nacute,    Nacute    ]       };

	include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     default  partial
xkb_symbols "fr" {
    name[Group1] = "French (Canada)";

    key <TLDE>	{ [ numbersign,       bar,     backslash ]	};
    key <AE01>	{ [         1,     exclam,     plusminus ]	};
    key <AE02>	{ [         2,   quotedbl,            at ]	};
    key <AE03>	{ [         3,      slash,      sterling ]	};
    key <AE04>	{ [         4,     dollar,          cent ]	};
    key <AE05>	{ [         5,    percent,      currency ] 	};
    key <AE06>	{ [         6,   question,       notsign ]	};
    key <AE07>	{ [         7,  ampersand,     brokenbar ]	};
    key <AE08>	{ [         8,   asterisk,   twosuperior ]	};
    key <AE09>	{ [         9,  parenleft, threesuperior ]	};
    key <AE10>	{ [         0, parenright,    onequarter ]	};
    key <AE11>	{ [     minus, underscore,       onehalf ]	};
    key <AE12>	{ [     equal,       plus, threequarters ]	};

    key <AD01>	{ [         q,          Q ]	};
    key <AD02>	{ [         w,          W ]	};
    key <AD03>	{ [         e,          E ]	};
    key <AD04>	{ [         r,          R ]	};
    key <AD05>	{ [         t,          T ]	};
    key <AD06>	{ [         y,          Y ]	};
    key <AD07>	{ [         u,          U ]	};
    key <AD08>	{ [         i,          I ]	};
    key <AD09>	{ [         o,          O,   section ]	};
    key <AD10>	{ [         p,          P, paragraph ]	};
    key <AD11>	{ [dead_circumflex, dead_circumflex, bracketleft  ]	};
    key <AD12>	{ [   dead_cedilla,  dead_diaeresis, bracketright ]	};

    key <AC01>	{ [         a,          A ]	};
    key <AC02>	{ [         s,          S ]	};
    key <AC03>	{ [         d,          D ]	};
    key <AC04>	{ [         f,          F ]	};
    key <AC05>	{ [         g,          G ]	};
    key <AC06>	{ [         h,          H ]	};
    key <AC07>	{ [         j,          J ]	};
    key <AC08>	{ [         k,          K ]	};
    key <AC09>	{ [         l,          L ]	};
    key <AC10>	{ [ semicolon,      colon, asciitilde ]	};
    key <AC11>	{ [dead_grave, dead_grave,  braceleft ]	};
    key <BKSL>	{ [      less,    greater, braceright ]	};

    key <LSGT>	{ [guillemotleft, guillemotright, degree]	};
    key <AB01>	{ [         z,          Z ]	};
    key <AB02>	{ [         x,          X ]	};
    key <AB03>	{ [         c,          C ]	};
    key <AB04>	{ [         v,          V ]	};
    key <AB05>	{ [         b,          B ]	};
    key <AB06>	{ [         n,          N ]	};
    key <AB07>	{ [         m,          M,           mu ]	};
    key <AB08>	{ [     comma, apostrophe,       macron ]	};
    key <AB09>	{ [    period,     period,       hyphen ]	};
    key <AB10>	{ [    eacute,     Eacute,   dead_acute ]	};

    key <SPCE>	{ [     space,      space, nobreakspace ]	};

    include "level3(ralt_switch)"
};

xkb_symbols "fr-dvorak" {
    name[Group1] = "French (Canada, Dvorak)";

    key <TLDE>  { [ numbersign,       bar,     backslash ]  };
    key <AE01>  { [         1,     exclam,     plusminus ]  };
    key <AE02>  { [         2,   quotedbl,            at ]  };
    key <AE03>  { [         3,      slash,      sterling ]  };
    key <AE04>  { [         4,     dollar,          cent ]  };
    key <AE05>  { [         5,    percent,      currency ]  };
    key <AE06>  { [         6,   question,       notsign ]  };
    key <AE07>  { [         7,  ampersand,     brokenbar ]  };
    key <AE08>  { [         8,   asterisk,   twosuperior ]  };
    key <AE09>  { [         9,  parenleft, threesuperior ]  };
    key <AE10>  { [         0, parenright,    onequarter ]  };
    key <AE11>  { [dead_circumflex, dead_circumflex, bracketleft  ] };
    key <AE12>  { [   dead_cedilla,  dead_diaeresis, bracketright ] };

    key <AD01>  { [dead_grave, dead_grave,  braceleft ] };
    key <AD02>  { [     comma, apostrophe,       macron ]   };
    key <AD03>  { [    period,     period,       hyphen ]   };
    key <AD04>  { [         p,          P, paragraph ]  };
    key <AD05>  { [         y,          Y ] };
    key <AD06>  { [         f,          F ] };
    key <AD07>  { [         g,          G ] };
    key <AD08>  { [         c,          C ] };
    key <AD09>  { [         r,          R ] };
    key <AD10>  { [         l,          L ] };
    key <AD11>  { [    eacute,     Eacute,   dead_acute ]   };
    key <AD12>  { [     equal,       plus, threequarters ]  };

    key <AC01>  { [         a,          A ] };
    key <AC02>  { [         o,          O,   section ]  };
    key <AC03>  { [         e,          E ] };
    key <AC04>  { [         u,          U ] };
    key <AC05>  { [         i,          I ] };
    key <AC06>  { [         d,          D ] };
    key <AC07>  { [         h,          H ] };
    key <AC08>  { [         t,          T ] };
    key <AC09>  { [         n,          N ] };
    key <AC10>  { [         s,          S ] };
    key <AC11>  { [     minus, underscore,       onehalf ]  };
    key <BKSL>  { [      less,    greater, braceright ] };

    key <LSGT>  { [guillemotleft, guillemotright, degree]   };
    key <AB01>  { [ semicolon,      colon, asciitilde ] };
    key <AB02>  { [         q,          Q ] };
    key <AB03>  { [         j,          J ] };
    key <AB04>  { [         k,          K ] };
    key <AB05>  { [         x,          X ] };
    key <AB06>  { [         b,          B ] };
    key <AB07>  { [         m,          M,           mu ]   };
    key <AB08>  { [         w,          W ] };
    key <AB09>  { [         v,          V ] };
    key <AB10>  { [         z,          Z ] };

    key <SPCE>  { [     space,      space, nobreakspace ]   };

    include "level3(ralt_switch)"
};

partial
xkb_symbols "fr-legacy" {

    include "ca(fr)"

    name[Group1] = "French (Canada, legacy)";

    key <TLDE>	{ [    degree,     degree,       notsign ]	};
    key <AE01>	{ [         1,     exclam,   onesuperior ]	};

    key <AE03>	{ [         3, numbersign, threesuperior ]	};
    key <AE04>	{ [         4,     dollar,    onequarter ]	};
    key <AE05>	{ [         5,    percent,       onehalf ] 	};
    key <AE06>	{ [         6,   question, threequarters ]	};
    key <AE07>	{ [         7,  ampersand,     braceleft ]	};
    key <AE08>	{ [         8,   asterisk,   bracketleft ]	};
    key <AE09>	{ [         9,  parenleft,  bracketright,   plusminus ]	};
    key <AE10>	{ [         0, parenright,    braceright ]	};
    key <AE11>	{ [     minus, underscore,           bar, questiondown]	};
    key <AE12>	{ [     equal,       plus,  dead_cedilla ]	};

    key <AD04>	{ [         r,          R,     paragraph,  registered ]	};
    key <AD06>	{ [         y,          Y,           yen ]	};
    key <AD09>	{ [         o,          O,        oslash,      Ooblique ] };
    key <AD10>	{ [         p,          P,         thorn,       THORN ]	};
    key <AD11>	{ [dead_circumflex, dead_circumflex,           degree ]	};
    key <AD12>	{ [  ccedilla,   Ccedilla, dead_tilde, dead_diaeresis ]	};

    key <AC01>	{ [         a,          A,            ae,          AE ]	};
    key <AC02>	{ [         s,          S,        ssharp,     section ]	};
    key <AC03>	{ [         d,          D,           eth,         ETH ]	};
    key <AC04>	{ [         f,          F,   ordfeminine ]	};
    key <AC10>	{ [ semicolon,      colon,    dead_acute,  dead_acute ]	};
    key <AC11>	{ [    egrave,     Egrave ]	};
    key <BKSL>	{ [    agrave,     Agrave,    dead_grave ]	};

    key <LSGT>	{ [    ugrave,     Ugrave,     backslash,         bar ]	};
    key <AB01>	{ [         z,          Z, guillemotleft  ]	};
    key <AB02>	{ [         x,          X, guillemotright ]	};
    key <AB03>	{ [         c,          C,          cent,   copyright ]	};
    key <AB07>	{ [         m,          M,            mu,   masculine ]	};
    key <AB08>	{ [     comma, apostrophe,         less ]	};
    key <AB09>	{ [    period,     period,      greater ]	};
    key <AB10>	{ [    eacute,     Eacute,        slash ]	};
};

partial
xkb_symbols "multi" {

    include "ca(fr)"

    name[Group1] = "Canadian Multilingual (first part)";

    key <TLDE>	{ [     slash,  backslash,           bar ]	};
    key <AE01>	{ [         1,     exclam ]	};
    key <AE02>	{ [         2,         at ]	};
    key <AE03>	{ [         3, numbersign ]	};
    key <AE04>	{ [         4,     dollar ]	};
    key <AE05>	{ [         5,    percent ] 	};
    key <AE06>	{ [         6,   question ]	};
    key <AE07>	{ [         7,  ampersand,    braceleft ]	};
    key <AE08>	{ [         8,   asterisk,   braceright ]	};
    key <AE09>	{ [         9,  parenleft,  bracketleft ]	};
    key <AE10>	{ [         0, parenright, bracketright ]	};
    key <AE11>	{ [     minus, underscore ]	};
    key <AE12>	{ [     equal,       plus,      notsign ]	};

    key <AD09>	{ [         o,          O ]	};
    key <AD10>	{ [         p,          P ]	};
    key <AD11>	{ [dead_circumflex, dead_diaeresis, dead_grave  ]	};
    key <AD12>	{ [  ccedilla,   Ccedilla,   asciitilde ]	};

    key <AC10>	{ [ semicolon,      colon,     degree ]	};
    key <AC11>	{ [    egrave,     Egrave ]	};
    key <BKSL>	{ [    agrave,     Agrave ]	};

    key <LSGT>	{ [    ugrave,     Ugrave ] 	};
    key <AB01>	{ [         z,          Z, guillemotleft  ]	};
    key <AB02>	{ [         x,          X, guillemotright ]	};
    key <AB08>	{ [     comma, apostrophe,           less ]	};
    key <AB09>	{ [    period,   quotedbl,        greater ]	};
    key <AB10>	{ [    eacute,     Eacute ]	};
};

partial
xkb_symbols "multi-2gr" {

    name[Group1] = "Canadian Multilingual (second part)";

    key <TLDE>	{ [    NoSymbol,      hyphen ]	};
    key <AE01>	{ [   onesuperior,  exclamdown ]	};
    key <AE02>	{ [   twosuperior,  NoSymbol ]	};
    key <AE03>	{ [ threesuperior,    sterling ]	};
    key <AE04>	{ [    onequarter,    currency ]	};
    key <AE05>	{ [       onehalf,threeeighths ]	};
    key <AE06>	{ [ threequarters, fiveeighths ]	};
    key <AE07>	{ [    NoSymbol,seveneighths ]	};
    key <AE08>	{ [    NoSymbol,   trademark ]	};
    key <AE09>	{ [    NoSymbol,   plusminus ]	};

    key <AE11>	{ [    NoSymbol, questiondown]	};
    key <AE12>	{ [  dead_cedilla, dead_ogonek ]	};

    key <AD01>	{ [ NoSymbol,    Greek_OMEGA ]	};
    key <AD02>	{ [    lstroke,        Lstroke ]	};
    key <AD03>	{ [         oe,             OE ]	};
    key <AD04>	{ [  paragraph,     registered ]	};
    key <AD05>	{ [     tslash,         Tslash ]	};
    key <AD06>	{ [  leftarrow,            yen ]	};
    key <AD07>	{ [  downarrow,        uparrow ]	};
    key <AD08>	{ [ rightarrow,       idotless ]	};
    key <AD09>	{ [     oslash,       Ooblique ]	};
    key <AD10>	{ [      thorn,          THORN ]	};
    key <AD11>	{ [ NoSymbol, dead_abovering ]	};
    key <AD12>	{ [ dead_tilde,    dead_macron ]	};

    key <AC01>	{ [         ae,          AE ]	};
    key <AC02>	{ [     ssharp,     section ]	};
    key <AC03>	{ [        eth,         ETH ]	};
    key <AC04>	{ [ NoSymbol, ordfeminine ]	};
    key <AC05>	{ [        eng,         ENG ]	};
    key <AC06>	{ [    hstroke,     Hstroke ]	};
    key <AC07>	{ [      U0133,       U0132 ]	};
    key <AC08>	{ [        kra,  NoSymbol ]	};
    key <AC09>	{ [      U0140,       U013F ]	};
    key <AC10>	{ [ dead_acute, dead_doubleacute ]	};
    key <AC11>	{ [ NoSymbol,  dead_caron ]	};
    key <BKSL>	{ [ NoSymbol,  dead_breve ]	};


    key <LSGT>	{ [ NoSymbol,   brokenbar ]	};

    key <AB03>	{ [       cent,   copyright ]	};
    key <AB04>	{ [  leftdoublequotemark,  leftsinglequotemark ]	};
    key <AB05>	{ [ rightdoublequotemark, rightsinglequotemark ]	};
    key <AB06>	{ [      U0149,       U266A ]	};
    key <AB07>	{ [         mu,   masculine ]	};
    key <AB08>	{ [ Greek_horizbar, multiply ]	};
    key <AB09>	{ [ periodcentered, division ]	};
    key <AB10>	{ [ NoSymbol, dead_abovedot ]	};
};

// based on
// Inuktitut keyboard for X11
// written by Pablo Saratxaga <pablo@mandrakesoft.com>

alphanumeric_keys
xkb_symbols "ike" {

    name[Group1]= "Inuktitut";

    key	<AE01> { [ 0x01001595, 1		]	};
    key	<AE02> { [ 0x01001449, 2		]	};
    key	<AE03> { [ 0x01001550, 3		]	};
    key	<AE04> { [ 0x01001483, 4		]	};
    key	<AE05> { [ 0x01001466, 5		]	};
    key	<AE06> { [ 0x01001585, 6		]	};
    key	<AE07> { [ 0x010014bb, 7		]	};
    key	<AE08> { [ 0x010014d0, 8		]	};
    key	<AE09> { [ 0x010014ea, 9		]	};
    key	<AE10> { [ 0x0100153e, 0		]	};
    key	<AE11> { [ minus,	  underscore	]	};
    key	<AE12> { [ 0x0100155d, equal		]	};

	key <AD01> { [ 0x0100158f, 0x0100148b	]	};
	key <AD02> { [ 0x01001403, 0x01001431	]	};
	key <AD03> { [ 0x0100157f, 0x01001546	]	};
	key <AD04> { [ 0x0100146d, 0x01001596	]	};
	key <AD05> { [ 0x0100144e, 0x01001671	]	};
	key <AD06> { [ 0x010014ef, 0x01001673	]	};
	key <AD07> { [ 0x010014a5, 0x01001675	]	};
	key <AD08> { [ 0x010014c2, 0x010015a4	]	};
	key <AD09> { [ 0x010014d5, 0x010015a0	]	};
	key <AD10> { [ 0x01001528, 0x010015a6	]	};
	key <AD11> { [ 0x010014a1, 0x01001505	]	};
	key <AD12> { [ dead_abovedot, 0x0100141e]	};

	key <AC01> { [ 0x01001591, 0x0100148d	]	};
	key <AC02> { [ 0x01001405, 0x01001433	]	};
	key <AC03> { [ 0x01001581, 0x01001548	]	};
	key <AC04> { [ 0x0100146f, 0x01001555	]	};
	key <AC05> { [ 0x01001450, parenleft 	]	};
	key <AC06> { [ 0x010014f1, parenright	]	};
	key <AC07> { [ 0x010014a7, 0x0100152a	]	};
	key <AC08> { [ 0x010014c4, 0x01001557	]	};
	key <AC09> { [ 0x010014d7, 0x010015a2	]	};
	key <AC10> { [ semicolon,  colon     	]	};
	key <AC11> { [ apostrophe, quotedbl     ]	};

	key <AB01> { [ 0x01001593, 0x01001490	]	};
	key <AB02> { [ 0x0100140a, 0x01001438	]	};
	key <AB03> { [ 0x01001583, 0x0100154b	]	};
	key <AB04> { [ 0x01001472, question  	]	};
	key <AB05> { [ 0x01001455, 0x0100157c	]	};
	key <AB06> { [ 0x010014f4, 0x010014c7	]	};
	key <AB07> { [ 0x010014aa, 0x010014da	]	};
	key <AB08> { [ comma,      less      	]	};
	key <AB09> { [ period,     greater   	]	};
	key <AB10> { [ 0x0100152d, 0x01001559	]	};

    key	<TLDE> { [ 0x0100157b, 0x01001575	]	};
    key	<LSGT> { [ 0x01001579, 0x01001577	]	};
    key	<BKSL> { [ backslash,  bar		]	};
};

partial
xkb_symbols "multix" {

    name[Group1] = "Canadian Multilingual";

    key.type[group1]="EIGHT_LEVEL_SEMIALPHABETIC";
    key <TLDE>	{ [     slash,  backslash,            bar, NoSymbol,
    		   NoSymbol,     hyphen ]	};
    key <AE01>	{ [         1,     exclam,      plusminus, NoSymbol,
    		  onesuperior, exclamdown ]	};
    key <AE02>	{ [         2,         at,             at, NoSymbol,
    		  twosuperior, NoSymbol ]	};
    key <AE03>	{ [         3, numbersign,       sterling, NoSymbol,
    		threesuperior,   sterling ]	};
    key <AE04>	{ [         4,     dollar,           cent, NoSymbol,
    		   onequarter,   currency ]	};
    key <AE05>	{ [         5,    percent,       currency, NoSymbol,
    		      onehalf, threeeighths ]	};
    key <AE06>	{ [         6,   question,        notsign, NoSymbol,
    		threequarters, fiveeighths ]	};
    key <AE07>	{ [         7,  ampersand,      braceleft, NoSymbol,
    		   NoSymbol, seveneighths ]	};
    key <AE08>	{ [         8,   asterisk,     braceright, NoSymbol,
    		   NoSymbol,  trademark ]	};
    key <AE09>	{ [         9,  parenleft,    bracketleft, NoSymbol,
    		   NoSymbol,  plusminus ]	};
    key <AE10>	{ [         0, parenright,   bracketright, NoSymbol ] };
    key <AE11>	{ [     minus, underscore,        onehalf, NoSymbol,
    		   NoSymbol, questiondown]	};
    key <AE12>	{ [     equal,       plus,        notsign, NoSymbol,
    		dead_cedilla, dead_ogonek ]	};

    key.type[group1]="EIGHT_LEVEL_SEMIALPHABETIC";
    key <AD01>	{ [         q,           Q,     NoSymbol, NoSymbol,
		   NoSymbol, Greek_OMEGA ]	};
    key <AD02>	{ [         w,           W,     NoSymbol, NoSymbol,
   		      lstroke,     Lstroke ]	};
    key <AD03>	{ [         e,           E,     NoSymbol, NoSymbol,
    			   oe,          OE ]	};
    key <AD04>	{ [         r,           R,     NoSymbol, NoSymbol,
    		    paragraph,  registered ]	};
    key <AD05>	{ [         t,           T,     NoSymbol, NoSymbol,
		       tslash,      Tslash ]	};
    key <AD06>	{ [         y,           Y,     NoSymbol, NoSymbol,
		    leftarrow,         yen ]	};
    key <AD07>	{ [         u,           U,     NoSymbol, NoSymbol,
    		    downarrow,     uparrow ]	};
    key <AD08>	{ [         i,           I,     NoSymbol, NoSymbol,
    		   rightarrow,    idotless ]	};
    key <AD09>	{ [         o,           O,        section, NoSymbol,
		       oslash,    Ooblique ]	};
    key <AD10>	{ [         p,           P,      paragraph, NoSymbol,
		        thorn,       THORN ]	};

    key.type[group1]="EIGHT_LEVEL";
    key <AD11>	{ [dead_circumflex, dead_diaeresis, dead_grave, NoSymbol,
    			NoSymbol, dead_abovering ]	};

    key.type[group1]="EIGHT_LEVEL_SEMIALPHABETIC";
    key <AD12>	{ [  ccedilla,   Ccedilla,     asciitilde, NoSymbol,
		   dead_tilde,    dead_macron ]	};

    key <AC01>	{ [         a,          A,     NoSymbol, NoSymbol,
    			   ae,         AE ]	};
    key <AC02>	{ [         s,          S,     NoSymbol, NoSymbol,
    		       ssharp,    section ]	};
    key <AC03>	{ [         d,          D,     NoSymbol, NoSymbol,
    			  eth,        ETH ]	};
    key <AC04>	{ [         f,          F,     NoSymbol, NoSymbol,
    		   NoSymbol, ordfeminine ]	};
    key <AC05>	{ [         g,          G,     NoSymbol, NoSymbol,
    			  eng,        ENG ]	};
    key <AC06>	{ [         h,          H,     NoSymbol, NoSymbol,
    		      hstroke,    Hstroke ]	};
    key <AC07>	{ [         j,          J,     NoSymbol, NoSymbol,
    			U0133,      U0132 ]	};
    key <AC08>	{ [         k,          K,     NoSymbol, NoSymbol,
    			  kra, NoSymbol ]	};
    key <AC09>	{ [         l,          L,     NoSymbol, NoSymbol,
    			U0140,      U013F ]	};

    key.type[group1]="EIGHT_LEVEL";
    key <AC10>	{ [ semicolon,          colon,         degree, NoSymbol,
    		   dead_acute, dead_doubleacute ]	};

    key.type[group1]="EIGHT_LEVEL_SEMIALPHABETIC";
    key <AC11>	{ [    egrave,         Egrave,      braceleft, NoSymbol,
    		   NoSymbol,  dead_caron ]	};
    key <BKSL>	{ [    agrave,         Agrave,     braceright, NoSymbol,
    		   NoSymbol,  dead_breve ]	};

    key <LSGT>	{ [    ugrave,     Ugrave,         degree, NoSymbol,
    		   NoSymbol,   brokenbar ]	};

    key.type[group1]="FOUR_LEVEL_SEMIALPHABETIC";
    key <AB01>	{ [         z,          Z,  guillemotleft, NoSymbol ]	};
    key <AB02>	{ [         x,          X, guillemotright, NoSymbol ]	};

    key.type[group1]="EIGHT_LEVEL_SEMIALPHABETIC";
    key <AB03>	{ [         c,          C,     NoSymbol, NoSymbol,
    			 cent,   copyright ]	};
    key <AB04>	{ [         v,          V,     NoSymbol, NoSymbol,
    	  leftdoublequotemark,  leftsinglequotemark ]	};
    key <AB05>	{ [         b,          B,     NoSymbol, NoSymbol,
    	 rightdoublequotemark, rightsinglequotemark ]	};
    key <AB06>	{ [         n,          N,     NoSymbol, NoSymbol,
    			U0149,       U266A ]	};
    key <AB07>	{ [         m,          M,             mu, NoSymbol,
    			   mu,   masculine ]	};
    key <AB08>	{ [     comma, apostrophe,           less, NoSymbol,
    	       Greek_horizbar, multiply ]	};
    key <AB09>	{ [    period,   quotedbl,        greater, NoSymbol,
    	       periodcentered, division ]	};
    key <AB10>	{ [    eacute,     Eacute,     dead_acute, NoSymbol,
    		   NoSymbol, dead_abovedot ]	};

    include "nbsp(level3s)"

    modifier_map Control{ Control_L };

    include "level3(ralt_switch)"
    include "level5(rctrl_switch)"
};

// OLPC Section
xkb_symbols "olpc" {

    include "ca(fr)"

    key <AE02>	{ [          2,    quotedbl,          ograve,        Ograve ] };
    key <AE03>	{ [          3,    slash,          at,        VoidSymbol ] };

    key <AD03>	{ [          e,    E,          EuroSign, VoidSymbol]	};

    key <AB09>	{ [  period,         period,         0x1002010 ]	};

    key <I219>  { [  guillemotleft,  guillemotright, degree, VoidSymbol ] };
};

partial alphanumeric_keys
xkb_symbols "eng" {
    include "us(basic)"
    name[Group1] = "English (Canada)";
};

// EXTRAS:

partial alphanumeric_keys
xkb_symbols "kut" {

    // Ejective U0313 and acute accents are taken from shs layout.
    include "ca(shs)"

    name[Group1]= "Kutenai";

    // Alveolar Click
    key <AD05> {	[ t,	T,U01C2	,U01C2	]	};

    //Cent sign
    key <AB03> {	[ c,	C,U00A2,U00A2	]	};

    //Mid dot
    key <AB09> {	[ period,     greater,U00B7   	]	};

    //Glottal stop
    key <AB10> {	[ slash,	question, U0294	]	};

    //COMBINING COMMA ABOVE RIGHT
    key <AC11> {	[ apostrophe,	quotedbl, U0315,U0315	]	};

    //MODIFIER LETTER RIGHT HALF RING
    key <AC10> {	[ semicolon,	colon,U02BE,U02BE	]	};
};

// Secwepemctsin keyboard for X11
// written by Neskie Manuel <neskiem@gmail.com>
partial alphanumeric_keys
xkb_symbols "shs" {

    include "us"

    name[Group1]= "Secwepemctsin";

    // Using a "dead key" to get a COMBINING COMMA ABOVE
    // for ejectives on q, l, t, s, m, g, k, p, w, y, r.
    // The Compose key is used for the other acutes and grave.

    key <AB08>	{ [ comma, less, U0313    ]	};
    key <AC01>	{ [ a, A, aacute, Aacute  ]	};
    key <AD03>	{ [ e, E, eacute, Eacute  ]	};
    key <AD07>	{ [ u, U, uacute, Uacute  ]	};
    key <AD08>	{ [ i, I, iacute, Iacute  ]	};
    key <AD09>	{ [ o, O, oacute, Oacute  ]	};

    include "level3(ralt_switch)"
    include "compose(rctrl)"
};


partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/ca(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            default  hidden partial modifier_keys
xkb_symbols "capslock" {
    replace key <CAPS> { [ Caps_Lock ] };
    modifier_map Lock { Caps_Lock };
};

hidden partial modifier_keys
xkb_symbols "shiftlock" {
    replace key <CAPS> { [ Shift_Lock ] };
    modifier_map Shift { Shift_Lock };
};

hidden partial modifier_keys
xkb_symbols "grouplock" {
    replace key <CAPS> { [ ISO_Next_Group, Caps_Lock ] };
};

hidden partial modifier_keys
xkb_symbols "groupshift" {
    key <CAPS> {
        type[Group1] = "PC_ALT_LEVEL2",
        [ Mode_switch, Caps_Lock ]
    };
};

hidden partial modifier_keys
xkb_symbols "swapescape" {
    key <CAPS> { [ Escape ] };
    key <ESC>  { [ Caps_Lock ] };
};

hidden partial modifier_keys
xkb_symbols "escape" {
    key <CAPS> { [ Escape ] };
};

hidden partial modifier_keys
xkb_symbols "backspace" {
    key <CAPS> { [ BackSpace ] };
};

hidden partial modifier_keys
xkb_symbols "super" {
    key <CAPS> { [ Super_L ] };
    modifier_map Mod4 { <CAPS> };
};

hidden partial modifier_keys
xkb_symbols "hyper" {
    key <CAPS> { [ Hyper_L ] };
    modifier_map Mod4 { <CAPS> };
};

hidden partial modifier_keys
xkb_symbols "menu" {
    key <CAPS> { [ Menu ] };
};

hidden partial modifier_keys
xkb_symbols "numlock" {
    key <CAPS> { [ Num_Lock ] };
};

// This changes the <CAPS> key to become a Control modifier,
// but it will still produce the Caps_Lock keysym.
hidden partial modifier_keys
xkb_symbols "ctrl_modifier" {
    replace key <CAPS> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ Caps_Lock ],
        actions[Group1] = [ SetMods(modifiers=Control) ]
    };
    modifier_map Control { <CAPS> };
};

hidden partial modifier_keys
xkb_symbols "none" {
    key <CAPS> { [ VoidSymbol ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           partial modifier_keys
xkb_symbols "ralt" {
    key <RALT>	{ type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "lwin" {
    key <LWIN>	{ type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "lwin-altgr" {
    key <LWIN>	{ type[Group1]="FOUR_LEVEL", [ Super_L, Super_L, Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "rwin" {
    key <RWIN>	{ type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "rwin-altgr" {
    key <RWIN>	{ type[Group1]="FOUR_LEVEL", [ Super_R, Super_R, Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "menu" {
    key <MENU>	{ type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "menu-altgr" {
    key <MENU>	{ type[Group1]="FOUR_LEVEL", [ Menu, Menu, Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "rctrl" {
    key <RCTL> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "rctrl-altgr" {
    key <RCTL> { type[Group1]="FOUR_LEVEL", [ Control_R, Control_R, Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "lctrl" {
    key <LCTL> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "lctrl-altgr" {
    key <LCTL> { type[Group1]="FOUR_LEVEL", [ Control_L, Control_L, Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "caps" {
    key <CAPS> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "caps-altgr" {
    key <CAPS> { type[Group1]="FOUR_LEVEL", [ Caps_Lock, Caps_Lock, Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "102" {
    key <LSGT> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "102-altgr" {
    key <LSGT> { type[Group1]="FOUR_LEVEL", [ less, greater, Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "paus" {
    key <PAUS> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "prsc" {
    key <PRSC> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};

partial modifier_keys
xkb_symbols "sclk" {
    key <SCLK> { type[Group1]="TWO_LEVEL", [ Multi_key, Multi_key ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 // based on us_intl keyboard map file and a Sinhala keyboard map
// version 0.3

default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]= "French (Democratic Republic of the Congo)";

    key.type[Group1] = "FOUR_LEVEL";

    // GRAVE, TILDE, COMBINING TILDE
    key <TLDE> { [     grave, asciitilde, 0x01000303                      ] };
    key <AE01> { [ ampersand,          1, numbersign                      ] };
    key <AE02> { [0x01000301,          2, at                              ] };
    key <AE03> { [0x01000300,          3, guillemotleft                   ] };
    key <AE04> { [ parenleft,          4, bracketleft                     ] };
    key <AE05> { [ braceleft,          5, less                            ] };
    key <AE06> { [ braceright,         6, greater                         ] };
    key <AE07> { [parenright,          7, bracketright                    ] };
    key <AE08> { [0x01000302,          8, guillemotright                  ] };
    key <AE09> { [0x0100030c,          9, 0x0100030D                      ] };
    key <AE10> { [0x01000308,          0, at                              ] };
    key <AE11> { [     minus,      underscore,  percent,          degree  ] };
    key <AE12> { [     equal,      plus,       multiply,        division  ] };

    key <AD01> { [	   a,          A,            ae,              AE  ] };
    key <AD02> { [	   z,          Z                                  ] };
    key <AD03> { [	   e,          E,            oe,              OE  ] };
    key <AD04> { [	   r,          R                                  ] };
    key <AD05> { [	   t,          T                                  ] };
    key <AD06> { [	   y,          Y                                  ] };
    key <AD07> { [	   u,          U,    0x01000289,       0x01000244 ] };
    key <AD08> { [	   i,          I,    0x01000268,       0x01000197 ] };
    key <AD09> { [	   o,          O,        oslash,         Ooblique ] };
    key <AD10> { [	   p,          P                                  ] };
    key <AD11> { [0x0100025B, 0x01000190,   asciicircum                   ] };
    key <AD12> { [ asterisk, asciicircum,        dollar                   ] };

    key <AC01> { [	   q,          Q                                  ] };
    key <AC02> { [	   s,          S                                  ] };
    key <AC03> { [	   d,          D                                  ] };
    key <AC04> { [	   f,          F                                  ] };
    key <AC05> { [	   g,          G                                  ] };
    key <AC06> { [	   h,          H                                  ] };
    key <AC07> { [	   j,          J                                  ] };
    key <AC08> { [	   k,          K                                  ] };
    key <AC09> { [	   l,          L                                  ] };
    key <AC10> { [	   m,          M                                  ] };
    key <AC11> { [0x01000254, 0x01000186                                  ] };
    key <LSGT> { [    backslash,     bar                                  ] };

    key <AB01> { [	   w,          W                                  ] };
    key <AB02> { [	   x,          X                                  ] };
    key <AB03> { [	   c,          C                                  ] };
    key <AB04> { [	   v,          V                                  ] };
    key <AB05> { [	   b,          B                                  ] };
    key <AB06> { [	   n,          N,    0x0100014B,       0x0100014A ] };
    key <AB07> { [     comma,   question,    0x01000327                   ] };
    key <AB08> { [ semicolon,     period                                  ] };
    key <AB09> { [     colon,      slash                                  ] };
    key <AB10> { [    exclam,   apostrophe,  0x01002019                   ] };
    key <BKSL> { [  quotedbl,  backslash,           bar                   ] };

    // SPACE, SPACE, NO-BREAK SPACE, NARROW NO_BREAK SPACE
    key <SPCE> { [ space,          space,    nobreakspace,     0x0100202F ] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin"
    name[Group1]= "German (Switzerland)";

    key <TLDE> { [    section,     degree                           ] };
    key <AE01> { [          1,       plus,          bar, exclamdown ] };
    key <AE02> { [          2,   quotedbl,           at, oneeighth  ] };
    key <AE03> { [          3,   asterisk,   numbersign             ] };
    key <AE04> { [          4,   ccedilla                           ] };
    key <AE05> { [          5,    percent                           ] };
    key <AE06> { [          6,  ampersand,      notsign             ] };
    key <AE07> { [          7,      slash,          bar             ] };
    key <AE08> { [          8,  parenleft,         cent             ] };
    key <AE09> { [          9, parenright                           ] };
    key <AE10> { [          0,      equal                           ] };
    key <AE11> { [ apostrophe,   question,   dead_acute             ] };
    key <AE12> { [ dead_circumflex, dead_grave, dead_tilde          ] };

    key <AD03> { [          e,          E,     EuroSign             ] };
    key <AD06> { [          z,          Z                           ] };
    key <AD09> { [          o,          O,     oe,       OE         ] };
    key <AD11> { [ udiaeresis,     egrave,  bracketleft             ] };
    key <AD12> { [ dead_diaeresis, exclam, bracketright             ] };

    key <AC10> { [ odiaeresis,     eacute                           ] };
    key <AC11> { [ adiaeresis,     agrave,    braceleft             ] };
    key <BKSL> { [     dollar,   sterling,   braceright             ] };

    key <LSGT> { [       less,    greater,    backslash, brokenbar  ] };
    key <AB01> { [          y,          Y                           ] };
    key <AB08> { [      comma,  semicolon                           ] };
    key <AB09> { [     period,      colon                           ] };
    key <AB10> { [      minus, underscore                           ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "legacy" {
    include "ch(basic)"

    name[Group1]= "German (Switzerland, legacy)";
    key <AE07> { [          7,      slash,    brokenbar             ] };
};

partial alphanumeric_keys
xkb_symbols "de" {
    include "ch(basic)"
};

partial alphanumeric_keys
xkb_symbols "de_Sundeadkeys" {
    // modify the basic Swiss German layout to use Sun dead keys
    include "ch(basic)"
    key <AE11> { [      apostrophe,    question,  dead_acute   ] };
    key <AE12> { [    dead_circumflex, dead_grave,  dead_tilde   ] };
    key <AD12> { [ dead_diaeresis,      exclam, bracketright   ] };
};

partial alphanumeric_keys
xkb_symbols "de_sundeadkeys" {
    include "ch(de_Sundeadkeys)"
    name[Group1]= "German (Switzerland, Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "de_nodeadkeys" {
    // modify the basic Swiss German layout not to have any dead keys
    include "ch(basic)"
    name[Group1]= "German (Switzerland, eliminate dead keys)";
    key <AE11> { [  apostrophe, question,        acute  ] };
    key <AE12> { [ asciicircum,    grave,   asciitilde  ] };
    key <AD12> { [   diaeresis,   exclam, bracketright  ] };
};

partial alphanumeric_keys
xkb_symbols "fr" {

    include "ch(basic)"
    name[Group1]= "French (Switzerland)";

    override key <AD11> {
	[ egrave,	udiaeresis,	bracketleft	]
    };
    override key <AC10> {
	[ eacute,	odiaeresis	]
    };
    override key <AC11> {
	[ agrave,	adiaeresis,	braceleft	]
    };
};

partial alphanumeric_keys
xkb_symbols "fr_Sundeadkeys" {
    // modify the basic Swiss French layout to use Sun dead keys
    include "ch(fr)"
    key <AE11> { [      apostrophe,    question,  dead_acute   ] };
    key <AE12> { [    dead_circumflex, dead_grave,  dead_tilde   ] };
    key <AD12> { [ dead_diaeresis,      exclam, bracketright   ] };
};

partial alphanumeric_keys
xkb_symbols "fr_sundeadkeys" {
    include "ch(fr_Sundeadkeys)"
    name[Group1]= "French (Switzerland, Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "fr_nodeadkeys" {
    // modify the basic Swiss French layout not to have any dead keys
    include "ch(fr)"
    name[Group1]= "French (Switzerland, eliminate dead keys)";
    key <AE11> { [  apostrophe, question,        acute  ] };
    key <AE12> { [ asciicircum,    grave,   asciitilde  ] };
    key <AD12> { [   diaeresis,   exclam, bracketright  ] };
};

// Copied from macintosh_vndr/ch
// 03.01.2003
// Andreas Tobler <a.tobler@schweiz.ch>
// modified for Swiss German Apple Extended Keyboard II

partial alphanumeric_keys
xkb_symbols "de_mac" {

    name[Group1]= "German (Switzerland, Macintosh)";

    key <AE01> { [	1,	plus, 	plusminus,	infinity		]	};
    key <AE02> { [	2,	quotedbl, leftdoublequotemark, rightdoublequotemark 	]	};
    key <AE03> { [	3,	asterisk, 	numbersign,	leftcaret	]	};
					// not displayed here
    key <AE04> { [	4,	ccedilla, 	Ccedilla,	slash		]	};
    key <AE05> { [	5,	percent, 	bracketleft			]	};
    key <AE06> { [	6,	ampersand, 	bracketright			]	};
    key <AE07> { [	7,	slash, 	bar,		backslash		]	};
    key <AE08> { [	8,	parenleft, 	braceleft,	Ograve		]	};
    key <AE09> { [	9,	parenright, 	braceright,	Ocircumflex	]	};
    key <AE10> { [	0,	equal, 	notequal,	Uacute			]	};
    key <AE11> { [	apostrophe,	question, 	questiondown, 	NoSymbol		]	};
    key <AE12> { [	dead_circumflex,dead_grave, 	dead_acute,	asciicircum		]	};
    key <AD01> { [	q,	Q, 	oe,		OE			]	};
    key <AD02> { [	w,	W, 	Greek_SIGMA,	Aacute			]	};
    key <AD03> { [ 	e,	E, 	EuroSign,	Ediaeresis		]	};
    key <AD04> { [ 	r,	R, 	registered,	Egrave			]	};
    key <AD05> { [ 	t,	T, 	dagger,		Icircumflex		]	};
    key <AD06> { [	z,	Z, 	Greek_OMEGA,	Iacute			]	};
    key <AD07> { [ 	u,	U, 	degree,		Ugrave			]	};
    key <AD08> { [ 	i,	I, 	exclamdown,	idotless		]	};
    key <AD09> { [ 	o,	O, 	oslash,		Ooblique		]	};
    key <AD10> { [ 	p,	P, 	Greek_pi,	Greek_PI		]	};
    key <AD11> { [	udiaeresis,	egrave, 	section,	ydiaeresis		]	};
    key <AD12> { [	dead_diaeresis,	exclam, 	grave,		apostrophe		]	};
    key <AC01> { [ 	a,	A, 	aring,		Aring			]	};
    key <AC02> { [ 	s,	S, 	ssharp, 	NoSymbol		]	};
					// ligature fl
    key <AC03> { [ 	d,	D, 	Greek_sigma,	NoSymbol		]	};
			// partialderivative is not available here att
    key <AC04> { [ 	f,	F, 	function,	doubledagger		]	};
    key <AC05> { [ 	g,	G, 	at,		comma			]	};
    key <AC06> { [ 	h,	H, 	ordfeminine,	periodcentered		]	};
    key <AC07> { [ 	j,	J,  	masculine,	eth	 		]	};
    key <AC08> { [ 	k,	K, 	Greek_DELTA,	macron			]	};
    key <AC09> { [ 	l,	L, 	notsign,	caret			]	};
    key <AC10> { [	odiaeresis,	eacute, 	cent,		breve	]	};
    key <AC11> { [	adiaeresis,	agrave, 	ae,		AE	]	};
    key <AB01> { [	y,	Y, 	yen,		Ydiaeresis		]	};
    key <AB02> { [ 	x,	X, 	similarequal,	trademark		]	};
    key <AB03> { [ 	c,	C, 	copyright,	NoSymbol		]	};
    key <AB04> { [ 	v,	V, 	radical,	diamond			]	};
    key <AB05> { [ 	b,	B, 	integral,	NoSymbol		]	};
    key <AB06> { [ 	n,	N, 	dead_tilde, 	enopencircbullet	]       };
					// to be fixed att
    key <AB07> { [ 	m,	M, 	mu,		dead_abovering		]       };
					// not sure att
    key <AB08> { [	comma,	semicolon, 	guillemotleft,	guillemotright	]	};
    key <AB09> { [	period,	colon, 	ellipsis,	division		]	};
    key <AB10> { [	minus,	underscore, 	hyphen,		emdash		]	};
    key <TLDE> { [	section,	degree,   	NoSymbol, 	NoSymbol		]	};
			// ligature fi	// per mille
    key <SPCE> { [	space, 	nobreakspace,	nobreakspace		]	};
    key <LSGT> { [	less,	greater, 	lessthanequal,	greaterthanequal	]  	};
    key <BKSL> { [	dollar,	sterling, 	paragraph,	enfilledcircbullet	]	};

    include "kpdl(comma)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "fr_mac" {

    include "ch(de_mac)"
    name[Group1]= "French (Switzerland, Macintosh)";

    override key <AD11> {
	[ egrave,	udiaeresis,  bracketleft	]
    };
    override key <AC10> {
	[ eacute,	odiaeresis	]
    };
    override key <AC11> {
	[ agrave,	adiaeresis,   braceleft		]
    };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6_de" {
	include "sun_vndr/ch(sun_type6_de)"
};

partial alphanumeric_keys
	xkb_symbols "sun_type6_fr" {
	include "sun_vndr/ch(sun_type6_fr)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       // ========== Cameroon Keyboards ==========


// ----------------------------------------------------------------------------
// This comment was added by <fotang at mmuock dot org>, on 18-Jun-2016:
//  
// All comments below this one, were in the original cm file;they do not
// apply to the Mmuock keyboard which is defined towards the end of this file.
// ----------------------------------------------------------------------------

// ****** For Instructions, see "Use of Cameroon Keyboards" section	below ******


// The XKB versions of these keyboards were developed by Matthew Lee, Jenni Beadle, and Bruce Cox of SIL Cameroon in association with Going Komputya, Uwe Yung of the Goethe Institute, Yaoundé, and Centre ANACLAC.  

// Cameroon is officially a bilingual country, using French and English, but there are over 270 minority languages.  

// * Cameroon Français is an exact copy of the French France keyboard intended for AZERTY users.
// * Cameroon is an exact copy of the Basic US Keyboard. I can not currently name this "Cameroon English" due to a limitation of XKB.
// * Cameroon QWERTY and Cameroon AZERTY are based largely on SIL Cameroon's Keyman and Microsoft keyboards of the same style already in wide use.  These keyboards are designed to allow the user to type any of Cameroon's 270+ languages and dialects that use the approved orthography.  This Approved Orthography was adopted in 1979 by the National Committee for the Unification and Harmonisation of Alphabets of Camerooninan Languages. 
// * Cameroon Dvorak is described below.

// ===== Use of Cameroon Keyboards =====

// == Fonts ==
// These keyboards are fully Unicode (5.1), so we recommend using a good unicode font for diacritics to position correctly. Recommended fonts are: ttf-sil-charis, ttf-sil-doulos, ttf-sil-gentium and ttf-sil-andika (All of which are free for Linux, Mac, and Windows).


// == Cameroon AZERTY ==
// Cameroon AZERTY uses the French France (AZERTY) layout, as french keyboards are widely used here. While this keyboard is designed for Cameroonian orthography, it still is possible but not recommended, to type French with minimal discomfort using this keyboard.
// Cameroon AZERTY uses the "!" (exclamation) key as the "Cameroon" key. Pressing this key before another key allows you to access the special letters and diacritics needed in Cameroonian orthography.
// For example, press "!" then "a" and get "ɛ" (small epsilon). "!" then "Shift" + "a" (A) will get an "Ɛ" (capital epsilon). Press the "!" key twice to get a "!".
// If you prefer, you can hold the AltGr (and/or Shift) key to access the same letters, but we have found this to be much more awkward in practice. If you really don't like our Cameroon key, simply comment out "include "cm(exclamation_switch)"" and the exclamation key will return to normal.
// All Diacritics (with the exception of French Trema and Circumflex) must be typed (in order of stacking) after the letter.


// == Cameroon QWERTY ==
// Cameroon QWERTY uses the US QWERTY layout, as US keyboards are also widely used here. While this keyboard is designed for Cameroonian orthography, it is possible, but not recommended, to type English with minimal discomfort using this keyboard.
// Cameroon QWERTY uses the ";" (semicolon) key as the "Cameroon" key.	Pressing this key before another key allows you to access the special letters and diacritics needed in Cameroonian orthography.
// For example, press ";" then "a" and get "ɛ" (small epsilon). ";" then "Shift" + "a" (A) will get an "Ɛ" (capital epsilon). Press ";" twice to get a ";", or press Shift + ; (:) twice to get a ":" (colon).
// If you prefer, you can hold the AltGr (and/or Shift) key to access the same letters, but we have found this to be much more awkward in practice. If you really don't like our Cameroon key, simply comment out "include "cm(semicolon_switch)"" and the semicolon key will return to normal.
// All Diacritics must be typed (in order of stacking) after the letter.


// == Cameroon Dvorak ==
// Cameroon Dvorak is uses a similar system to Cameroon QWERTY.

default  partial alphanumeric_keys
xkb_symbols "basic" {

	name[Group1]="English (Cameroon)";

	key <TLDE> { [ grave, asciitilde ] };
	key <AE01> { [ 1, exclam ] };
	key <AE02> { [ 2, at ] };
	key <AE03> { [ 3, numbersign ] };
	key <AE04> { [ 4, dollar ] };
	key <AE05> { [ 5, percent ] };
	key <AE06> { [ 6, asciicircum ] };
	key <AE07> { [ 7, ampersand ] };
	key <AE08> { [ 8, asterisk ] };
	key <AE09> { [ 9, parenleft ] };
	key <AE10> { [ 0, parenright ] };
	key <AE11> { [ minus, underscore ] };
	key <AE12> { [ equal, plus ] };

	key <AD01> { [ q, Q ] };
	key <AD02> { [ w, W ] };
	key <AD03> { [ e, E ] };
	key <AD04> { [ r, R ] };
	key <AD05> { [ t, T ] };
	key <AD06> { [ y, Y ] };
	key <AD07> { [ u, U ] };
	key <AD08> { [ i, I ] };
	key <AD09> { [ o, O ] };
	key <AD10> { [ p, P ] };
	key <AD11> { [ bracketleft, braceleft ] };
	key <AD12> { [ bracketright, braceright ] };
	key <AC01> { [ a, A ] };
	key <AC02> { [ s, S ] };
	key <AC03> { [ d, D ] };
	key <AC04> { [ f, F ] };
	key <AC05> { [ g, G ] };
	key <AC06> { [ h, H ] };
	key <AC07> { [ j, J ] };
	key <AC08> { [ k, K ] };
	key <AC09> { [ l, L ] };
	key <AC10> { [ semicolon, colon ] };
	key <AC11> { [ apostrophe, quotedbl ] };

	key <AB01> { [ z, Z ] };
	key <AB02> { [ x, X ] };
	key <AB03> { [ c, C ] };
	key <AB04> { [ v, V ] };
	key <AB05> { [ b, B ] };
	key <AB06> { [ n, N ] };
	key <AB07> { [ m, M ] };
	key <AB08> { [ comma, less ] };
	key <AB09> { [ period, greater ] };
	key <AB10> { [ slash, U003F ] };

	key <BKSL> { [ backslash, bar ] };
};

partial alphanumeric_keys
xkb_symbols "french"
{
	include "latin"
	name[Group1]="French (Cameroon)";

	key <AE01> { [ ampersand, 1, onesuperior, exclamdown ] };
	key <AE02> { [ eacute, 2, asciitilde, oneeighth ] };
	key <AE03> { [ quotedbl, 3, numbersign, sterling ] };
	key <AE04> { [apostrophe, 4, braceleft, dollar ] };
	key <AE05> { [ parenleft, 5, bracketleft, threeeighths ] };
	key <AE06> { [ minus, 6, bar, fiveeighths ] };
	key <AE07> { [ egrave, 7, grave, seveneighths ] };
	key <AE08> { [underscore, 8, backslash, trademark ] };
	key <AE09> { [ ccedilla, 9, asciicircum, plusminus ] };
	key <AE10> { [ agrave, 0, at, degree ] };
	key <AE11> { [parenright, degree, bracketright, questiondown ] };
	key <AE12> { [ equal, plus, braceright, dead_ogonek ] };

	key <AD01> { [ a, A, ae, AE ] };
	key <AD02> { [ z, Z, guillemotleft, less ] };
	key <AD03> { [ e, E, EuroSign, cent ] };
	key <AD11> { [dead_circumflex, dead_diaeresis, dead_diaeresis, dead_abovering ] };
	key <AD12> { [ dollar, sterling, currency, dead_macron ] };

	key <AC01> { [ q, Q, at, Greek_OMEGA ] };
	key <AC10> { [ m, M, mu, masculine ] };
	key <AC11> { [ ugrave, percent, dead_circumflex, dead_caron] };
	key <TLDE> { [twosuperior, asciitilde, notsign, notsign ] };

	key <BKSL> { [ asterisk, mu, dead_grave, dead_breve ] };
	key <AB01> { [ w, W, lstroke, Lstroke ] };
	key <AB07> { [ comma, U003F, dead_acute, dead_doubleacute ] };
	key <AB08> { [ semicolon, period, horizconnector, multiply ] };
	key <AB09> { [ colon, slash, periodcentered, division ] };
	key <AB10> { [ exclam, section, dead_belowdot, dead_abovedot ] };

	include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "azerty"
{
	include "cm(basic)"
	name[Group1] = "Cameroon Multilingual (azerty)";
	key <AB01> { [ w, W, U1E85, U1E84 ] };	//  SMALL LETTER W,  CAPITAL LETTER W, SMALL LETTER W WITH DIAERESIS, CAPITAL LETTER W WITH DIAERESIS
	key <AB02> { [ x, X, U2039, U203A ] };	// SMALL LETTER X, CAPITAL LETTER X, SINGLE LEFT-POINTING ANGLE QUOTATION MARK, SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
	key <AB03> { [ c, C, U0327, copyright ] };	// SMALL LETTER C, CAPITAL LETTER C, COMBINING CEDILLA, COPYRIGHT SIGN
	key <AB04> { [ v, V, UA78C, UA78B ] };	// SMALL LETTER V, CAPITAL LETTER V, SMALL LETTER GLOTTAL (SALTILLO), CAPITAL LETTER GLOTTAL (SALTILLO)
	key <AB05> { [ b, B, U0253, U0181 ] };	// SMALL LETTER B, CAPITAL LETTER B, SMALL LETTER B WITH HOOK, CAPITAL LETTER B WITH HOOK
	key <AB06> { [ n, N, U014B, U014A ] };	// SMALL LETTER N, CAPITAL LETTER N, SMALL LETTER ENG, CAPITAL LETTER ENG
	key <AB07> { [ U002C, U003F, NoSymbol, U00D7 ] };	// COMMA, QUESTION MARK, , MULTIPLY
	key <AB08> { [ semicolon, period, dead_acute, dead_grave ] };	// SEMICOLON, PERIOD
	key <AB09> { [ colon, slash, U0323 ] };	// COLON, SLASH, COMBINING DOT BELOW
	key <AB10> { [ exclam, U00A7 ] };	// EXCLAMATION MARK, SECTION SIGN
	key <AC01> { [ q, Q, U2014, U2013 ] };	// SMALL LETTER Q, CAPITAL LETTER Q, EM DASH, EN DASH
	key <AC02> { [ s, S, U201C, U201D ] };	// SMALL LETTER S, CAPITAL LETTER S, LEFT DOUBLE QUOTES, RIGHT DOUBLE QUOTES 
	key <AC03> { [ d, D, U0257, U018A ] };	// SMALL LETTER D, CAPITAL LETTER D, SMALL LETTER D WITH HOOK, CAPITAL LETTER D WITH HOOK
	key <AC04> { [ f, F, U00E6, U00C6 ] };	// SMALL LETTER F, CAPITAL LETTER F, SMALL LIGATURE AE, CAPITAL LIGATURE AE
	key <AC05> { [ g, G, U02BC, UA78B ] };	// SMALL LETTER G, CAPITAL LETTER G, CURVED GLOTTAL, CAPITAL LETTER GLOTTAL (SALTILLO)
	key <AC06> { [ h, H, U0251, U2C6D ] };	// SMALL LETTER H, CAPITAL LETTER H, SMALL LETTER ALPHA, CAPITAL LETTER ALPHA
	key <AC07> { [ j, J, leftarrow, U2122 ] };	//SMALL LETTER J, CAPITAL LETTER J, LEFT ARROW, TRADE MARK SIGN
	key <AC08> { [ k, K, downarrow, uparrow ] };	// SMALL LETTER K, CAPITAL LETTER K, DOWN ARROW, UP ARROW
	key <AC09> { [ l, L, rightarrow, U00A3 ] };	// SMALL LETTER L, CAPITAL LETTER L, RIGHT ARROW, POUND STERLING
	key <AC10> { [ m, M, U00F9, U00B5 ] };	// SMALL LETTER M, CAPITAL LETTER M, SMALL LETTER U WITH GRAVE, MICRO SYMBOL
	key <AC11> { [ U0300, U0302, U1DC5, U1DC4 ] };	// COMBINING LOW TONE, COMBINING FALLING TONE, COMBINING LOW-MID TONE, COMBINING MID-HIGH TONE
	key <AD01> { [ a, A, U025B, U0190 ] };	// SMALL LETTER A, CAPITAL LETTER A, SMALL LETTER OPEN E, CAPITAL LETTER OPEN E
	key <AD02> { [ z, Z, U2026, U2020 ] };	// SMALL LETTER Z, CAPITAL LETTER Z, ELLIPSIS, DAGGER
	key <AD03> { [ e, E, U0259, U018F ] };	// SMALL LETTER E, CAPITAL LETTER E, SMALL LETTER SCHWA, CAPITAL LETTER SCHWA
	key <AD04> { [ r, R, U25CC, U00AE ] };	// SMALL LETTER R, CAPITAL LETTER R, PLACEHOLDER SYMBOL, REGISTERED SIGN
	key <AD05> { [ t, T, U0153, U0152 ] };	// SMALL LETTER T, CAPITAL LETTER T, SMALL LIGATURE OE, CAPITAL LIGATURE OE
	key <AD06> { [ y, Y, U01B4, U01B3 ] };	// SMALL LETTER Y, CAPITAL LETTER Y, SMALL LETTER Y WITH HOOK, CAPITAL LETTER Y WITH HOOK
	key <AD07> { [ u, U, U0289, U0244 ] };	// SMALL LETTER U, CAPITAL LETTER U, SMALL LETTER U BAR, CAPITAL LETTER U BAR
	key <AD08> { [ i, I, U0268, U0197 ] };	// SMALL LETTER I, CAPITAL LETTER I, SMALL LETTER I BAR, CAPITAL LETTER I BAR
	key <AD09> { [ o, O, U0254, U0186 ] };	// SMALL LETTER O, CAPITAL LETTER O, SMALL LETTER OPEN O, CAPITAL LETTER OPEN O
	key <AD10> { [ p, P, U00F8, U00D8 ] };	// SMALL LETTER P, CAPITAL LETTER P, SMALL LETTER O BAR, CAPITAL LETTER O BAR
	key <AD11> { [ U0301, U030C, dead_circumflex, dead_diaeresis ] };	// COMBINING HIGH TONE, COMBINING RISING TONE, DEAD CIRCUMFLEX, DEAD DIAERESIS
	key <AD12> { [ U0330, U0303, U0304, U030D ] };	// COMBINING TILDE (NASAL) BELOW, COMBINING TILDE (NASAL), COMBINING MID TONE, COMBINING VERTICAL LINE ABOVE
	key <AE01> { [ U0026, KP_1, U00B9, U2018 ] };	// AMPERSAND, 1, SUPERSCRIPT 1, LEFT SINGLE QUOTE
	key <AE02> { [ eacute, KP_2, asciitilde, U2019 ] };	// SMALL LETTER E WITH ACUTE, 2, TILDE, RIGHT SINGLE QUOTE
	key <AE03> { [ U0022, KP_3, U0025 ] };	// QUOTATION MARK, 3, PERCENT SIGN
	key <AE04> { [ U0027, KP_4, U007B ] };	// APOSTROPHE, 4, LEFT CURLY BRACKET
	key <AE05> { [ U0028, KP_5, U005B, numbersign ] };	// LEFT PARENTHESIS, 5, LEFT SQUARE BRACKET, NUMBER SIGN
	key <AE06> { [ U002D, KP_6, U007C ] };	// HYPHEN/MINUS, 6, BAR
	key <AE07> { [ U00E8, KP_7, U0300 ] };	// SMALL LETTER E WITH GRAVE, 7, COMBINING GRAVE
	key <AE08> { [ underscore, KP_8, backslash, U20D6 ] };	// UNDERSCORE, 8, BACKSLASH, COMBINING LEFT ARROW ABOVE
	key <AE09> { [ ccedilla, KP_9, U005E] };	// SMALL LETTER C WITH CEDILLA, 9, CIRCUMFLEX
	key <AE10> { [ U00E0, KP_0, at, U20D7 ] };	// SMALL LETTER A WITH GRAVE
	key <AE11> { [ U0029, U00B0, U005D ] };	// RIGHT PARENTHESIS, DEGREE, RIGHT SQUARE BRACKET
	key <AE12> { [ U003D, U002B, U007D, U00B1 ] };	// EQUAL SIGN, PLUS SIGN, RIGHT CURLY BRACKET, PLUS-MINUS SIGN
	key <BKSL> { [ U1DC6, U1DC7, KP_Multiply, U00A4 ] };	//  COMBINING MID-LOW, COMBINING HIGH-MID, MULTIPLY, CURRENCY SIGN
	key <LSGT> { [ U003C, U003E, U00AB, U00BB ] };	// LESS THAN, GREATER THAN, LEFT GUILLEMET, RIGHT GUILLEMET
	key <TLDE> { [ U0024, U20AC, U00B2, U00B3 ] };	// DOLLAR, EURO, SUPERSCRIPT 2, SUPERSCRIPT 3
	include "cm(exclamation_switch)"
	include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "qwerty"
{
	include "cm(basic)"
	name[Group1] = "Cameroon Multilingual (qwerty)";
	key <AB01> { [ z, Z, U2026, U2020 ] };	// SMALL LETTER Z, CAPITAL LETTER Z, ELLIPSIS, DAGGER
	key <AB02> { [ x, X ] };	// SMALL LETTER X, CAPITAL LETTER X
	key <AB03> { [ c, C, U0327, U00A9 ] };	// SMALL LETTER C, CAPITAL LETTER C, CEDILLA, COPYRIGHT
	key <AB04> { [ v, V, UA78C, UA78B ] };	// SMALL LETTER V, CAPITAL LETTER V, SMALL LETTER GLOTTAL (SALTILLO), CAPITAL LETTER GLOTTAL (SALTILLO)
	key <AB05> { [ b, B, U0253, U0181 ] };	// SMALL LETTER B, CAPITAL LETTER B, SMALL LETTER B WITH HOOK, CAPITAL LETTER B WITH HOOK
	key <AB06> { [ n, N, U014B, U014A ] };	// SMALL LETTER N, CAPITAL LETTER N, SMALL LETTER ENG, CAPITAL LETTER ENG
	key <AB07> { [ m, M, NoSymbol, U2122 ] };	// SMALL LETTER M, CAPITAL LETTER M, , TRADEMARK SIGN
	key <AB08> { [ U002C, U003C, U2039, U00AB ] };	// COMMA, LESS THAN SIGN, LEFT SINGLE GUILLEMET, LEFT DOUBLE GUILLEMET
	key <AB09> { [ U002E, U003E, U203A, U00BB ] };    // PERIOD, GREATER THAN SIGN, RIGHT SINGLE GUILLEMET, RIGHT DOUBLE GUILLEMET
	key <AB10> { [ U002F, U003F, U00F7 ] };    // SLASH, QUESTION MARK, DIVISION SIGN
	key <AC01> { [ a, A, U025B, U0190 ] };	// SMALL LETTER A, CAPITAL LETTER A, SMALL LETTER OPEN E, CAPITAL LETTER OPEN E
	key <AC02> { [ s, S ] };	// SMALL LETTER S, CAPITAL LETTER S
	key <AC03> { [ d, D, U0257, U018A ] };	// SMALL LETTER D, CAPITAL LETTER D, SMALL LETTER D WITH HOOK, CAPITAL LETTER D WITH HOOK
	key <AC04> { [ f, F, U00E6, U00C6 ] };	// SMALL LETTER F, CAPITAL LETTER F, SMALL LIGATURE AE, CAPITAL LIGATURE AE
	key <AC05> { [ g, G, U02BC, UA78B ] };	// SMALL LETTER G, CAPITAL LETTER G, CURVED GLOTTAL, CAPITAL LETTER GLOTTAL (SALTILLO)
	key <AC06> { [ h, H, U0251, U2C6D ] };	// SMALL LETTER H, CAPITAL LETTER H, SMALL LETTER ALPHA, CAPITAL LETTER ALPHA
	key <AC07> { [ j, J, U0330, U0323 ] };	// SMALL LETTER J, CAPITAL LETTER J, COMBINING TILDE (NASAL) BELOW, COMBINING DOT BELOW
	key <AC08> { [ k, K, U1DC5, U1DC7 ] };	// SMALL LETTER K, CAPITAL LETTER K, COMBINING LOW-MID TONE, COMBINING HIGH-MID
	key <AC09> { [ l, L, U1DC6, U1DC4 ] };	// SMALL LETTER L, CAPITAL LETTER L, COMBINING MID-LOW, COMBINING MID-HIGH TONE
	key <AC10> { [ U003B, U003A ] };	// SEMICOLON, COLON
	key <AC11> { [ U0300, U0302, U0027, U0022 ] };	// COMBINING LOW TONE, COMBINING FALLING TONE, APOSTROPHE, QUOTATION MARK
	key <AD01> { [ q, Q, U2014, U2013 ] };	// SMALL LETTER Q, CAPITAL LETTER Q, EM DASH, EN DASH
	key <AD02> { [ w, W, U1E85, U1E84 ] };	// SMALL LETTER W, CAPITAL LETTER W, SMALL LETTER W WITH DIAERESIS, CAPITAL LETTER W WITH DIAERESIS
	key <AD03> { [ e, E, U0259, U018F ] };	// SMALL LETTER E, CAPITAL LETTER E, SMALL LETTER SCHWA, CAPITAL LETTER SCHWA
	key <AD04> { [ r, R, U25CC, U00AE ] };	// SMALL LETTER R, CAPITAL LETTER R, PLACEHOLDER SYMBOL, REGISTERED SIGN
	key <AD05> { [ t, T, U0153, U0152 ] };	// SMALL LETTER T, CAPITAL LETTER T, SMALL LIGATURE OE, CAPITAL LIGATURE OE
	key <AD06> { [ y, Y, U01B4, U01B3 ] };	// SMALL LETTER Y, CAPITAL LETTER Y, SMALL LETTER Y WITH HOOK, CAPITAL LETTER Y WITH HOOK
	key <AD07> { [ u, U, U0289, U0244 ] };	// SMALL LETTER U, CAPITAL LETTER U, SMALL LETTER U BAR, CAPITAL LETTER U BAR
	key <AD08> { [ i, I, U0268, U0197 ] };	// SMALL LETTER I, CAPITAL LETTER I, SMALL LETTER I BAR, CAPITAL LETTER I BAR
	key <AD09> { [ o, O, U0254, U0186 ] };	// SMALL LETTER O, CAPITAL LETTER O, SMALL LETTER OPEN O, CAPITAL LETTER OPEN O
	key <AD10> { [ p, P, U00F8, U00D8 ] };	// SMALL LETTER P, CAPITAL LETTER P, SMALL LETTER O BAR, CAPITAL LETTER O BAR
	key <AD11> { [ U0301, U030C, U005B, U007B ] };	// COMBINING HIGH TONE, COMBINING RISING TONE, LEFT SQUARE BRACKET, LEFT CURLY BRACKET
	key <AD12> { [ U0327, U0308, U005D, U007D ] };	// COMBINING CEDILLA, COMBINING DIAERESIS, RIGHT SQUARE BRACKET, RIGHT CURLY BRACKET
	key <AE01> { [ U0031, U0021, U00BC ] };	// 1, EXCLAMATION POINT, ONE QUARTER
	key <AE02> { [ U0032, U0040, U00BD ] };	//2, AT SYMBOL, ONE HALF
	key <AE03> { [ U0033, U0023, U00BE ] };	// 3, NUMBER SIGN, THREE QUARTERS
	key <AE04> { [ U0034, U0024, NoSymbol, U20AC ] };	// 4, DOLLAR, , EURO SIGN
	key <AE08> { [ U0038, U002A, NoSymbol, U00D7 ] };	// 8, ASTERISK, , MATH MULTIPLY
	key <AE09> { [ U0039, U0028, U2018, U201C ] };	// 9, LEFT PARENTHESIS, LEFT SINGLE QUOTE MARK, LEFT DOUBLE QUOTE MARK
	key <AE10> { [ U0030, U0029, U2019, U201D ] };	// 0, RIGHT PARENTHESIS, RIGHT SINGLE QUOTE MARK, LEFT DOUBLE QUOTE MARK
	key <AE11> { [ U002D, U005F, U0304 ] };	// MINUS, UNDERSCORE, COMBINING MID TONE, COMBINING MID TONE
	key <AE12> { [ U003D, U002B, NoSymbol, U00B1 ] };	// EQUAL, PLUS, , PLUS-MINUS
	key <BKSL> { [ U005C, U007C ] };	// BACKSLASH, BAR
	key <TLDE> { [ U030D, U0303, U0060, U007E ] };	// COMBINING VERTICAL LINE ABOVE, COMBINING TILDE ABOVE, GRAVE ACCENT, TILDE
	include "cm(semicolon_switch)"
	include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "dvorak"
{
	include "us(dvorak)"
	name[Group1] = "Cameroon Multilingual (Dvorak)";
	key <AB01> { [ semicolon, colon ] };	// SEMICOLON, COLON
	key <AB02> { [ q, Q, U2014, U2013 ] };	// SMALL LETTER Q, CAPITAL LETTER Q, EM DASH, EN DASH
	key <AB03> { [ j, J, U0330, U0323 ] };	// SMALL LETTER J, CAPITAL LETTER J, COMBINING TILDE (NASAL) BELOW, COMBINING DOT BELOW
	key <AB04> { [ k, K, U1DC5, U1DC7 ] };	// SMALL LETTER K, CAPITAL LETTER K, COMBINING LOW-MID TONE, COMBINING HIGH-MID
	key <AB05> { [ x, X ] };	// SMALL LETTER X, CAPITAL LETTER X
	key <AB06> { [ b, B, U0253, U0181 ] };	// SMALL LETTER B, CAPITAL LETTER B, SMALL LETTER B WITH HOOK, CAPITAL LETTER B WITH HOOK
	key <AB07> { [ m, M, NoSymbol, U2122 ] };	// SMALL LETTER M, CAPITAL LETTER M, , TRADEMARK SIGN
	key <AB08> { [ w, W, U1E85, U1E84 ] };	// SMALL LETTER W, CAPITAL LETTER W, SMALL LETTER W WITH DIAERESIS, CAPITAL LETTER W WITH DIAERESIS
	key <AB09> { [ v, V, UA78C, UA78B ] };	// SMALL LETTER V, CAPITAL LETTER V, SMALL LETTER GLOTTAL (SALTILLO), CAPITAL LETTER GLOTTAL (SALTILLO)
	key <AB10> { [ z, Z, U2026, U2020 ] };	// SMALL LETTER Z, CAPITAL LETTER Z, ELLIPSIS, DAGGER
	key <AC01> { [ a, A, U025B, U0190 ] };	// SMALL LETTER A, CAPITAL LETTER A, SMALL LETTER OPEN E, CAPITAL LETTER OPEN E
	key <AC02> { [ o, O, U0254, U0186 ] };	// SMALL LETTER O, CAPITAL LETTER O, SMALL LETTER OPEN O, CAPITAL LETTER OPEN O
	key <AC03> { [ e, E, U0259, U018F ] };	// SMALL LETTER E, CAPITAL LETTER E, SMALL LETTER SCHWA, CAPITAL LETTER SCHWA
	key <AC04> { [ u, U, U0289, U0244 ] };	// SMALL LETTER U, CAPITAL LETTER U, SMALL LETTER U BAR, CAPITAL LETTER U BAR
	key <AC05> { [ i, I, U0268, U0197 ] };	// SMALL LETTER I, CAPITAL LETTER I, SMALL LETTER I BAR, CAPITAL LETTER I BAR
	key <AC06> { [ d, D, U0257, U018A ] };	// SMALL LETTER D, CAPITAL LETTER D, SMALL LETTER D WITH HOOK, CAPITAL LETTER D WITH HOOK
	key <AC07> { [ h, H, U0251, U2C6D ] };	// SMALL LETTER H, CAPITAL LETTER H, SMALL LETTER ALPHA, CAPITAL LETTER ALPHA
	key <AC08> { [ t, T, U0153, U0152 ] };	// SMALL LETTER T, CAPITAL LETTER T, SMALL LIGATURE OE, CAPITAL LIGATURE OE
	key <AC09> { [ n, N, U014B, U014A ] };	// SMALL LETTER N, CAPITAL LETTER N, SMALL LETTER ENG, CAPITAL LETTER ENG
	key <AC10> { [ s, S ] };	// SMALL LETTER S, CAPITAL LETTER S
	key <AC11> { [ minus, underscore, U0304 ] };	// MINUS, UNDERSCORE, COMBINING MID TONE
	key <AD01> { [ U0300, U0302, U0027, U0022 ] };	// COMBINING LOW TONE, COMBINING FALLING TONE, APOSTROPHE, QUOTATION MARK
	key <AD02> { [ comma, less, U2039, U00AB ] };	// COMMA, LESS THAN SIGN, LEFT SINGLE GUILLEMET, LEFT DOUBLE GUILLEMET
	key <AD03> { [ period, greater, U203A, U00BB ] };	// PERIOD, GREATER THAN SIGN, RIGHT SINGLE GUILLEMET, RIGHT DOUBLE GUILLEMET
	key <AD04> { [ p, P, U00F8, U00D8 ] };	// SMALL LETTER P, CAPITAL LETTER P, SMALL LETTER O BAR, CAPITAL LETTER O BAR
	key <AD05> { [ y, Y, U01B4, U01B3 ] };	// SMALL LETTER Y, CAPITAL LETTER Y, SMALL LETTER Y WITH HOOK, CAPITAL LETTER Y WITH HOOK
	key <AD06> { [ f, F, U00E6, U00C6 ] };	// SMALL LETTER F, CAPITAL LETTER F, SMALL LIGATURE AE, CAPITAL LIGATURE AE
	key <AD07> { [ g, G, U02BC, UA78B ] };	// SMALL LETTER G, CAPITAL LETTER G, CURVED GLOTTAL, CAPITAL LETTER GLOTTAL (SALTILLO)
	key <AD08> { [ c, C, U0327, U00A9 ] };	// SMALL LETTER C, CAPITAL LETTER C, CEDILLA, COPYRIGHT
	key <AD09> { [ r, R, U25CC, U00AE ] };	// SMALL LETTER R, CAPITAL LETTER R, PLACEHOLDER SYMBOL, REGISTERED SIGN
	key <AD10> { [ l, L, U1DC6, U1DC4 ] };	// SMALL LETTER L, CAPITAL LETTER L, COMBINING MID-LOW, COMBINING MID-HIGH TONE
	key <AD11> { [ slash, U003F, U00F7, U0294 ] };	// SLASH, QUESTION MARK, DIVISION SIGN, GLOTTAL STOP
	key <AD12> { [ equal, plus, NoSymbol, plusminus ] };	// EQUAL, PLUS, , PLUS-MINUS
	key <AE01> { [ KP_1, exclam, U00BC ] };	// 1, EXCLAMATION POINT, ONE QUARTER
	key <AE02> { [ KP_2, at, U00BD ] };	// 2, AT SYMBOL, ONE HALF
	key <AE03> { [ KP_3, numbersign, U00BE ] };	// 3, NUMBER SIGN, THREE QUARTERS
	key <AE04> { [ KP_4, dollar, NoSymbol, U20AC ] };	// 4, DOLLAR, , EURO SIGN
	key <AE05> { [ KP_5, percent ] };	// 5, PERCENT
	key <AE06> { [ KP_6, asciicircum ] };	// 6, CARET
	key <AE07> { [ KP_7, ampersand ] };	// 7, AMPERSAND
	key <AE08> { [ KP_8, asterisk, NoSymbol, multiply ] };	// 8, ASTERISK, , MULTIPLY
	key <AE09> { [ KP_9, parenleft, leftsinglequotemark, leftdoublequotemark ] };	// 9, LEFT PARENTHESIS, LEFT SINGLE QUOTE MARK, LEFT DOUBLE QUOTE MARK
	key <AE10> { [ KP_0, parenright, rightsinglequotemark, rightdoublequotemark ] };	// 0, RIGHT PARENTHESIS, RIGHT SINGLE QUOTE MARK, LEFT DOUBLE QUOTE MARK
	key <AE11> { [ U0301, U030C, U005B, U007B ] };	// COMBINING HIGH TONE, COMBINING RISING TONE, LEFT SQUARE BRACKET, LEFT CURLY BRACKET
	key <AE12> { [ U0327, dead_diaeresis, U005D, braceright ] };	// COMBINING CEDILLA, DEAD DIAERESIS, RIGHT SQUARE BRACKET, RIGHT CURLY BRACKET
	key <BKSL> { [ backslash, bar ] };	// BACKSLASH, BAR
	key <TLDE> { [ U030D, U0303, U0060, U007E ] };	// COMBINING VERTICAL LINE ABOVE, COMBINING TILDE ABOVE, GRAVE ACCENT, TILDE
	include "cm(semicolon_switch_dvorak)"
	include "level3(ralt_switch)"
};

// The following code creates the "Cameroon key" phenomenon.

partial modifier_keys
xkb_symbols "semicolon_switch" {
	key <AC10> {
	symbols[Group1] = [ ISO_Level3_Latch,	colon,	semicolon,	colon ]};
	modifier_map Mod5	{ ISO_Level3_Latch };
};

partial modifier_keys
xkb_symbols "exclamation_switch" {
	key <AB10> {
	symbols[Group1] = [ ISO_Level3_Latch,	U00A7,	exclam,	U00A7 ]
	};
	modifier_map Mod5	{ ISO_Level3_Latch };
};

partial modifier_keys
xkb_symbols "semicolon_switch_dvorak" {
	key <AB01> {
	symbols[Group1] = [ ISO_Level3_Latch,	colon,	semicolon,	colon ]
	};
modifier_map Mod5	{ ISO_Level3_Latch };
};


// ------- begin Mmuock alphabet layout ------------------------------------------
//   This layout is used for the Mmuock alphabet as described in the book
//   _The Sound of Mmuock: Orthography (2. ed.)_ [isbn: 978-9956-645-28-1].
//   Mmuock is the language of the Mmuock (local: Muòk) people of Western
//   Cameroon.  
// 
//      Author: Tano Fotang <fotang at mmuock dot org>
//     Created: 2014-06-24
//     Version: 1.2
//
// CHANGES v 1.0:
//	2014-07-06 corrected shifted level3 of <AC11> to quotedbl
// CHANGES v 1.1:
//  2015-05-23 1- added dead_tilde to key <TILDE>; this is needed to produce
//               the letter <ñ> which was totally missing from the keyboard
//             2- added letter <dz> to <AB01>; the letter had been missing.
//             3- if we're not re-defining particular symbols from the included
//               latin layout, then maintain the original latin mappings.
//               Previously, we had set them to NoSymbol. Now, we want to
//               keep the original latin mappings except for those few that we
//               want to overwrite for our own keyboard.
//
// CHANGES v 1.2:
// 2016-06-17  1- added dead keys dead_macron, dead_acute, and dead_grave for
//                tones 1, 3, and 4, for compatibility with the Keyman version.
//             2- rearranged combining diacritics for tones 0 to 5 such that
//                the diacritics are on consequetive keys (AC01 to AC05).
//             3- moved tone 8 to level 3 of AE12.
//             4- moved layout definition out of the EXTRAS section.
//             5- for a cleaner keyboard,
//                replaced ṭhe included latin layout with us(basic).
//
//
// NOTES:
// 0. This map is based on the Latin alphabet layout for the US keyboard.
//
// 1. We use combining diacritical marks to create tone markings. There are 13
//    tones that need to be indicated, although the first 5 are usually enough
//    to represent the rest in simplified orthography.
//
// 2. When composing Mmuock text, about every fourth symbol is for tone. To
//    facilitate easy and fast input, the combining diacritics are placed on
//    the home row (AC). To reduce the number of key strokes required, the
//    unshifted third level is used. Only 5 of the combining diacritics are not
//    on the AC row; they are in the top number row, AE.
//
// 3. Symbols that are used infrequently (`r', `h', `ɛ', `ǝ', etc.) are placed
//    in level3. Additionally, the letter eng (`ŋ'), although commonly used, 
//    is found in level3 because it can alternatively be represented by <ng>.
//    (Indeed, the keyman version of keyboard actually replaces <ng> with `ŋ'.)
//
// 4. The unshifted AB10 key (normally assigned to the slash `/') is used as
//    level 3 switch since the slash is not used in the ordinary course of
//    typing Mmuock text. 
//
// 5. The 'Cameroon Multilingual' keyboards that are defined elsewhere, do not
//    fit our needs because: (a) they are based on a different alphabet, (b) the
//    vast majority of their symbols are not used in Mmuock, and (c) for the few
//    symbols that are used in Mmuock, their placings are not egonomic for 
//    typing Mmuock as the _PRIMARY_ language. The aim of this keyboard, is
//    to give priority to symbols that are actually used in the Mmuock alphabet.
//
// 6. The following fonts have been found to produce the best results with this
//    keyboard:
//         Family                    Accuracy
//      DejaVu (except Sans Mono)        9/10 
//      Linux Libertine                  8/10
//      Ubuntu (except light)            8/10
//      Droid (except sans mono)         7/10
//      Gentium, Gentium Alt           6.5/10
//    In the terminal emulator, the following font variants have been tested:
//      Ubuntu Mono                      9/10
//      Unifont (Medium)                 9/10
//      DejaVu Sans Mono               7.5/10
//      Droid Sans Mono                6.5/10
//   These fonts are all freely available.
// 
// ------the layout-----------
//
//   ┌─────┐
//   │ 2 4 │   2 = Shift,  4 = Level3 + Shift
//   │ 1 3 │   1 = Normal, 3 = Level3
//   └─────┘
//
//   ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
//   │ ~ ~ │ !   │ @   │ #   │ $   │ %   │ ^   │ &   | *   │ (   │ )   │ _ – │ +   ̣┃ ⌫ Back- ┃
// AE│ ` ` │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   ̂│ 7   ̑│ 8   ̍│ 9   ̓│ 0   ̊│ ¯ - │ =   ̋┃  space  ┃
//   ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
//   ┃       ┃ Q   │ W   │ E Ǝ │ Š R │ T   │ Y   │ U Ω │ I Ɛ │ O Φ │ P ∏ │ Ø { │ Σ } ┃ Enter ┃
// AD┃Tab ↹  ┃ q   │ w   │ e ǝ │ š r │ t   │ y   │ u ω │ i ɛ │ o φ │ p π │ ø [ │ σ ] ┃   ⏎   ┃
//   ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
//   ┃        ┃ A   │ S   │ D   │ F   │ G   │  ̇ H │ J   │ K   │ L   │ Œ : │ " ” │ Æ | ┃      ┃
// AC┃Caps ⇬  ┃ a   ̃│ s   ̄| d   ́| f   ̀| g   ̌|  ̣ h │ j   ̆│ k   ̏│ l   ̈│ œ ; │ ' ’ │ æ \ ┃      ┃
//   ┣━━━━━━━━┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
//   ┃             │ Z ǲ │ X   │ C   │ V   │ B   │ N ŋ │ M   │ < « │ > » │ ?   ┃             ┃
// AB┃Shift ⇧      │ z ǳ │ x   │ c   │ v   │ b   │ n Ŋ │ m   │ , ‹ │ . › │   / ┃Shift ⇧      ┃
//   ┣━━━━━━━┳━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
//   ┃       ┃       ┃       ┃                                   ┃       ┃       ┃       ┃
// AA┃Ctrl   ┃Meta   ┃Alt    ┃             Space                 ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
//   ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛
//

partial alphanumeric_keys
xkb_symbols "mmuock" {

   include "us(basic)"
   include "level3(ralt_switch)"

   name[Group1]= "Mmuock";
   key <AE06> { [          6, asciicircum,          U0302                ] }; // tone 10
   key <AE07> { [          7,   ampersand,          U0311                ] }; // tone 12
   key <AE08> { [          8,    asterisk,          U030D                ] }; // tone 13
   key <AE09> { [          9,   parenleft,          U0307                ] }; // tone 7
   key <AE10> { [          0,  parenright,          U030A                ] }; // tone 6
   key <AE11> { [dead_macron,  underscore,          minus,        endash ] };
   key <AE12> { [      equal,        plus,          U030B, dead_belowdot ] }; // U030B = tone 8
   key <AD03> { [          e,           E,          U01DD,         U018E ] }; // U01DD = reversed E
   key <AD04> { [     scaron,      Scaron,              r,             R ] };
   key <AD07> { [          u,           U,    Greek_omega,   Greek_OMEGA ] };
   key <AD08> { [          i,           I,          U025B,         U0190 ] }; // U025B = open E
   key <AD09> { [          o,           O,      Greek_phi,     Greek_PHI ] };
   key <AD10> { [          p,           P,       Greek_pi,      Greek_PI ] };
   key <AD11> { [     oslash,    Ooblique,    bracketleft,     braceleft ] };
   key <AD12> { [Greek_sigma, Greek_SIGMA,   bracketright,    braceright ] }; 
   key <AC01> { [          a,           A,          U0303                ] }; // tone 0
   key <AC02> { [          s,           S,          U0304                ] }; // tone 1
   key <AC03> { [          d,           D,          U0301                ] }; // tone 3
   key <AC04> { [          f,           F,          U0300                ] }; // tone 4
   key <AC05> { [          g,           G,          U030C                ] }; // tone 5
   key <AC06> { [      U0323,       U0307,              h,             H ] }; // COMBINING DOT BELOW, ABOVE
   key <AC07> { [          j,           J,          U0306                ] }; // tone 9
   key <AC08> { [          k,           K,          U030F                ] }; // tone 11
   key <AC09> { [          l,           L,          U0308                ] }; // tone 14
   key <AC10> { [         oe,          OE,      semicolon,         colon ] };
   key <AC11> { [ dead_acute,    quotedbl,     apostrophe                ] };
   key <TLDE> { [ dead_grave,  dead_tilde,          grave,    asciitilde ] };
   key <AB01> { [          z,           Z,          U01F3,         U01F2 ] }; // U01F3 = letter dz
   key <AB06> { [          n,           N,            eng,           ENG ] };
   key <AB08> { [      comma,        less,  guillemotleft,         U2039 ] };
   key <AB09> { [     period,     greater, guillemotright,         U203A ] };
   key <BKSL> { [         ae,          AE,      backslash,           bar ] };

   include "cm(solidus_switch)"
};
// use slash as special key for switching to level3
partial modifier_keys
xkb_symbols "solidus_switch" {
   key <AB10> {
     symbols[Group1] = [ ISO_Level3_Latch, question, slash, dead_abovedot ]
   };
   modifier_map Mod5	{ ISO_Level3_Latch };
};
// ------- end of Mmuock keyboard map --------------------------------------------

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              //
// Default Chinese is the same as American
//
default  partial alphanumeric_keys
xkb_symbols "basic" {
    include "us(basic)"

    name[Group1]= "Chinese";
};

// Tibetan Standard Keyboard map for XKB/X.org
//
// Based on the CNS Tibetan keyboard as supported by Windows Vista
// using information published by Tashi Tsering:
// http://www.yalasoo.com/English/docs/yalasoo_en_MStbKb.html
//
// XKB version by Rich Felker <dalias@aerifal.cx>.
//
// The CNS Tibetan keyboard standard specifies 5 keyboards worth of keys,
// but apparently makes no requirements about how each is accessed. Only
// the first 2 are needed for native Tibetan text; the remainder are
// filled with special symbols and letters for transliterating foreign
// text. Further, CNS leaves the level of support of keyboards 2-5 as an
// option to the implementor (despite the fact that #2 is absolutely
// essential...). Windows Vista maps them as follows:
//
// 1. Unshifted
// 2. "m"-key-prefixed
// 3. Shift-modified
// 4. Ctrl+Alt+Shift-modified
// 5. "M"-key-prefixed
//
// I roughly copy the Windows Vista mapping, which was intended by the
// designer of the keyboard, with the following exceptions:
//
// The fifth keyboard is almost empty and contains only precomposed forms
// of subjoined letter characters whose use is strongly discouraged, and
// is not implemented at all in this XKB map. The fourth is implemented,
// but is accessed by an "m"-prefix (or "M"-prefix, for convenience)
// followed by a Shift-modified key. This avoids stealing the Ctrl and Alt
// keys, which belong to applications on *nix and not to the keyboard or
// input method. Aside from enterring rare special symbols and
// foreign-word-transliteration letters, these differences should not
// affect users.
//
// Implementation notes:
//
// A latching ISO Level3 shift is used for the "m"-prefix modifier. In
// principle moving it to other keys (e.g. AltGr) would be possible
// according to user preference, but this is not practical for typing
// Tibetan, since the subjoined consonants, of which Tibetan has 0-2 per
// syllable, are accessed via this mechanism.
//
// One annoyance is that the latching Level3 shift fails to work if the
// previous key is not yet released when "m" is pressed (the key release
// event kills the latch). I consider this a bug in X and don't know an
// easy way to work around it. Complain to the maintainers if it bothers
// you and maybe they'll find a fix. You won't notice it unless you're
// fast at typing Tibetan anyway.

partial alphanumeric_keys
xkb_symbols "tib" {

    name[Group1]= "Tibetan";

    key <TLDE> { [ 0x1000f68, 0x1000f01, 0x1000fb8, 0x1000f00 ] }; # ཨ ༁ ྸ ༀ
    key <AE01> { [ 0x1000f21, 0x1000f2a, 0x1000f04, 0x1000f76 ] }; # ༡ ༪ ༄ ྲྀ
    key <AE02> { [ 0x1000f22, 0x1000f2b, 0x1000f05, 0x1000f77 ] }; # ༢ ༫ ༅ ཷ
    key <AE03> { [ 0x1000f23, 0x1000f2c, 0x1000f7e, 0x1000f78 ] }; # ༣ ༬ ཾ ླྀ
    key <AE04> { [ 0x1000f24, 0x1000f2d, 0x1000f83, 0x1000f79 ] }; # ༤ ༭ ྃ ཹ
    key <AE05> { [ 0x1000f25, 0x1000f2e, 0x1000f37, 0x1000f81 ] }; # ༥ ༮ ༷ ཱྀ
    key <AE06> { [ 0x1000f26, 0x1000f2f, 0x1000f35, 0x1000f09 ] }; # ༦ ༯ ༵ ༉
    key <AE07> { [ 0x1000f27, 0x1000f30, 0x1000f7f, 0x1000f0a ] }; # ༧ ༰ ཿ ༊
    key <AE08> { [ 0x1000f28, 0x1000f31, 0x1000f14, 0x1000f0f ] }; # ༨ ༱ ༔ ༏
    key <AE09> { [ 0x1000f29, 0x1000f32, 0x1000f11, 0x1000f10 ] }; # ༩ ༲ ༑ ༐
    key <AE10> { [ 0x1000f20, 0x1000f33, 0x1000f08, 0x1000f12 ] }; # ༠ ༳ ༈ ༒
    key <AE11> { [ 0x1000f67, 0x1000f3c, 0x1000fb7, 0x1000f0c ] }; # ཧ ༼ ྷ ༌
    key <AE12> { [ 0x1000f5d, 0x1000f3d, 0x1000fba, 0x1000f13 ] }; # ཝ ༽ ྺ ༓

    key <AD01> { [ 0x1000f45, 0x1000f15, 0x1000f95, 0x1000f89 ] }; # ཅ ༕ ྕ ྉ
    key <AD02> { [ 0x1000f46, 0x1000f16, 0x1000f96, 0x1000f88 ] }; # ཆ ༖ ྖ ྈ
    key <AD03> { [ 0x1000f7a, 0x1000f17, 0x1000f7b, 0x1000fbe ] }; # ེ ༗ ཻ ྾
    key <AD04> { [ 0x1000f62, 0x1000fbc, 0x1000fb2, 0x1000f6a ] }; # ར ྼ ྲ ཪ
    key <AD05> { [ 0x1000f4f, 0x1000f4a, 0x1000f9f, 0x1000f9a ] }; # ཏ ཊ ྟ ྚ
    key <AD06> { [ 0x1000f61, 0x1000fbb, 0x1000fb1, 0x1000fbf ] }; # ཡ ྻ ྱ ྿
    key <AD07> { [ 0x1000f74, 0x1000f18, 0x1000fad, 0x1000f75 ] }; # ུ ༘ ྭ ཱུ
    key <AD08> { [ 0x1000f72, 0x1000f19, 0x1000f80, 0x1000f73 ] }; # ི ༙ ྀ ཱི
    key <AD09> { [ 0x1000f7c, 0x1000f1a, 0x1000f7d, 0x1000fc0 ] }; # ོ ༚ ཽ ࿀
    key <AD10> { [ 0x1000f55, 0x1000f1b, 0x1000fa5, 0x1000fc1 ] }; # ཕ ༛ ྥ ࿁
    key <AD11> { [ 0x1000f59, 0x1000f1c, 0x1000fa9, 0x1000fc2 ] }; # ཙ ༜ ྩ ࿂
    key <AD12> { [ 0x1000f5a, 0x1000f1d, 0x1000faa, 0x1000fc3 ] }; # ཚ ༝ ྪ ࿃
    key <BKSL> { [ 0x1000f5b, 0x1000f1e, 0x1000fab, 0x1000f5c ] }; # ཛ ༞ ྫ ཛྷ

    key <AC01> { [ 0x1000f60, 0x1000f71, 0x1000fb0, 0x1000fc4 ] }; # འ ཱ ྰ ࿄
    key <AC02> { [ 0x1000f66, 0x1000f1f, 0x1000fb6, 0x1000fc5 ] }; # ས ༟ ྶ ࿅
    key <AC03> { [ 0x1000f51, 0x1000f4c, 0x1000fa1, 0x1000f9c ] }; # ད ཌ ྡ ྜ
    key <AC04> { [ 0x1000f56, 0x1000f3e, 0x1000fa6, 0x1000f57 ] }; # བ ༾ ྦ བྷ
    key <AC05> { [ 0x1000f44, 0x1000f3f, 0x1000f94, 0x1000fc6 ] }; # ང ༿ ྔ ࿆
    key <AC06> { [ 0x1000f58, 0x1000fcf, 0x1000fa8, 0x1000fc7 ] }; # མ ࿏ ྨ ࿇
    key <AC07> { [ 0x1000f0b, 0x1000f02, 0x1000f84, 0x1000fc8 ] }; # ་ ༂ ྄ ࿈
    key <AC08> { [ 0x1000f42, 0x1000f03, 0x1000f92, 0x1000f43 ] }; # ག ༃ ྒ གྷ
    key <AC09> { [ 0x1000f63, 0x1000f06, 0x1000fb3, 0x1000fc9 ] }; # ལ ༆ ླ ࿉
    key <AC10> { [ 0x1000f5e, 0x1000f07, 0x1000fae, 0x1000fca ] }; # ཞ ༇ ྮ ࿊
    key <AC11> { [ 0x1000f0d, 0x1000f38, 0x1000f0e, 0x1000fcb ] }; # ། ༸ ༎ ࿋

    key <AB01> { [ 0x1000f5f, 0x1000f34, 0x1000faf, 0x1000fcc ] }; # ཟ ༴ ྯ ࿌
    key <AB02> { [ 0x1000f64, 0x1000f65, 0x1000fb4, 0x1000fb5 ] }; # ཤ ཥ ྴ ྵ
    key <AB03> { [ 0x1000f40, 0x1000f69, 0x1000f90, 0x1000fb9 ] }; # ཀ ཀྵ ྐ ྐྵ
    key <AB04> { [ 0x1000f41, 0x1000f87, 0x1000f91, 0x1000f36 ] }; # ཁ ྇ ྑ ༶
    key <AB05> { [ 0x1000f54, 0x1000f86, 0x1000fa4, 0x1000f82 ] }; # པ ྆ ྤ ྂ
    key <AB06> { [ 0x1000f53, 0x1000f4e, 0x1000fa3, 0x1000f9e ] }; # ན ཎ ྣ ྞ
    key <AB07> { [ ISO_Level3_Latch, ISO_Level3_Latch, 0x1000f85, 0x1000f52 ] }; # -བཏགས་ ྅ དྷ
    key <AB08> { [ 0x1000f50, 0x1000f4b, 0x1000fa0, 0x1000f9b ] }; # ཐ ཋ ྠ ྛ
    key <AB09> { [ 0x1000f47, 0x1000f3a, 0x1000f97, 0x1000f8b ] }; # ཇ ༺ ྗ ྋ
    key <AB10> { [ 0x1000f49, 0x1000f3b, 0x1000f99, 0x1000f8a ] }; # ཉ ༻ ྙ ྊ

};

// Tibetan Standard Keyboard with ASCII numerals
//
// Users may prefer that the numeral keys enter ASCII numerals instead of
// Tibetan numerals, since the latter are not in modern use in Tibet.
// This is especially an issue for laptop users who do not have a numeric
// keypad by which to access the ASCII numerals, and who need to type
// numbers to be interpreted by applications.
//
// In this mapping, the Shift-modified numeral keys generate Tibetan
// numerals, since it was unclear to me that the standard Latin punctuation
// keys would be any use without Latin letters. (One can imagine wanting to
// type an email address using the @ sign, but as of present non-ASCII
// email addresses are not possible.) This mapping may change in the future
// if a clearly better use for the shifted numerals is pointed out by users.

partial alphanumeric_keys
xkb_symbols "tib_asciinum" {
    include "cn(tib)"

    name[Group1]= "Tibetan (with ASCII numerals)";

    key <AE01> { [ 1, 0x1000f21, 0x1000f04, 0x1000f76 ] }; # 1 ༡ ༄ ྲྀ
    key <AE02> { [ 2, 0x1000f22, 0x1000f05, 0x1000f77 ] }; # 2 ༢ ༅ ཷ
    key <AE03> { [ 3, 0x1000f23, 0x1000f7e, 0x1000f78 ] }; # 3 ༣ ཾ ླྀ
    key <AE04> { [ 4, 0x1000f24, 0x1000f83, 0x1000f79 ] }; # 4 ༤ ྃ ཹ
    key <AE05> { [ 5, 0x1000f25, 0x1000f37, 0x1000f81 ] }; # 5 ༥ ༷ ཱྀ
    key <AE06> { [ 6, 0x1000f26, 0x1000f35, 0x1000f09 ] }; # 6 ༦ ༵ ༉
    key <AE07> { [ 7, 0x1000f27, 0x1000f7f, 0x1000f0a ] }; # 7 ༧ ཿ ༊
    key <AE08> { [ 8, 0x1000f28, 0x1000f14, 0x1000f0f ] }; # 8 ༨ ༔ ༏
    key <AE09> { [ 9, 0x1000f29, 0x1000f11, 0x1000f10 ] }; # 9 ༩ ༑ ༐
    key <AE10> { [ 0, 0x1000f20, 0x1000f08, 0x1000f12 ] }; # 0 ༠ ༈ ༒
};

// Uyghur Standard Keyboard Map for XKB/X.Org
//
// XKB version in collaboration by Muhemmed Abdullah <muhammad@yulghun.com>,
// Abdussalam Abdurrahman <abdusalam.abdurahman@gmail.com>, and
// Ekrem Tomur <ekrem.tomur@gmail.com>

partial alphanumeric_keys
xkb_symbols "ug" {
    include "us(basic)"

    name[Group1]= "Uyghur";

    key <AE09> { [ 9,                parenright           ] };  // 9 )
    key <AE10> { [ 0,                parenleft            ] };  // 0 (
    key <AE11> { [ minus,            0x1002014            ] };  // - —

    key <AD01> { [ 0x1000686,        VoidSymbol           ] };  // چ
    key <AD02> { [ 0x10006cb,        VoidSymbol           ] };  // ۋ
    key <AD03> { [ 0x10006d0,        VoidSymbol           ] };  // ې
    key <AD04> { [ 0x1000631,        VoidSymbol           ] };  // ر
    key <AD05> { [ 0x100062a,        VoidSymbol           ] };  // ت
    key <AD06> { [ 0x100064a,        VoidSymbol           ] };  // ي
    key <AD07> { [ 0x10006c7,        VoidSymbol           ] };  // ۇ
    key <AD08> { [ 0x10006ad,        VoidSymbol           ] };  // ڭ
    key <AD09> { [ 0x1000648,        VoidSymbol           ] };  // و
    key <AD10> { [ 0x100067e,        VoidSymbol           ] };  // پ
    key <AD11> { [ bracketright,     guillemotright       ] };  // ] »
    key <AD12> { [ bracketleft,      guillemotleft        ] };  // [ «

    key <AC01> { [ 0x10006be,        VoidSymbol           ] };  // ھ
    key <AC02> { [ 0x1000633,        VoidSymbol           ] };  // س
    key <AC03> { [ 0x100062f,        0x1000698            ] };  // د ژ
    key <AC04> { [ 0x1000627,        0x1000641            ] };  // ا ف
    key <AC05> { [ 0x10006d5,        0x10006af            ] };  // ە گ
    key <AC06> { [ 0x1000649,        0x100062e            ] };  // ى خ
    key <AC07> { [ 0x1000642,        0x100062c            ] };  // ق ج
    key <AC08> { [ 0x1000643,        0x10006c6            ] };  // ك ۆ
    key <AC09> { [ 0x1000644,        VoidSymbol           ] };  // ل
    key <AC10> { [ Arabic_semicolon, colon                ] };  // ؛ :

    key <AB01> { [ 0x1000632,        VoidSymbol           ] };  // ز
    key <AB02> { [ 0x1000634,        VoidSymbol           ] };  // ش
    key <AB03> { [ 0x100063a,        VoidSymbol           ] };  // غ
    key <AB04> { [ 0x10006c8,        VoidSymbol           ] };  // ۈ
    key <AB05> { [ 0x1000628,        VoidSymbol           ] };  // ب
    key <AB06> { [ 0x1000646,        VoidSymbol           ] };  // ن
    key <AB07> { [ 0x1000645,        VoidSymbol           ] };  // م
    key <AB08> { [ Arabic_comma,     0x100203a            ] };  // ، ›
    key <AB09> { [ period,           0x1002039            ] };  // . ‹
    key <AB10> { [ 0x1000626,        Arabic_question_mark ] };  // ئ ؟
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        // Eliminate CapsLock, making it another Ctrl.
partial modifier_keys
xkb_symbols "nocaps" {
    replace key <CAPS> { [ Control_L, Control_L ] };
    modifier_map  Control { <CAPS>, <LCTL> };
};

// Make the left Ctrl key a left Meta.
xkb_symbols "lctrl_meta" {
    replace key <LCTL> { [ Meta_L ] };
};

// Swap the functions of the CapsLock key and the left Ctrl key.
partial modifier_keys
xkb_symbols "swapcaps" {
    replace key <CAPS> { [ Control_L ] };
    replace key <LCTL> { [ Caps_Lock ] };
};

// Move Ctrl to the leftmost key on the middle row and CapsLock to the
// leftmost key on the bottom row.  Only works if the geometry or keycodes
// file has defined appropriate aliases for the keys in question.
partial modifier_keys
xkb_symbols "ac_ctrl" {
    replace key <AC00> { [ Control_L ] };
    replace key <AA00> { [ Caps_Lock ] };
};

// Move Ctrl to the leftmost key on the bottom row and CapsLock to the
// leftmost key on the middle row.  Only works if the geometry or keycodes
// file has defined appropriate aliases for the keys in question.
partial modifier_keys
xkb_symbols "aa_ctrl" {
    replace key <AA00> { [ Control_L ] };
    replace key <AC00> { [ Caps_Lock ] };
};

// Right Ctrl key functions as another right Alt.
partial modifier_keys
xkb_symbols "rctrl_ralt" {
    key <RCTL> { symbols[Group1]= [ Alt_R ] };
};

// Menu key functions as another right Ctrl.
partial modifier_keys
xkb_symbols "menu_rctrl" {
    replace key <MENU> { [ Control_R, Control_R ] };
    modifier_map Control { Control_L, <MENU> };
};

// Right Alt key functions as another right Ctrl.
partial modifier_keys
xkb_symbols "ralt_rctrl" {
    replace key <RALT> { type[Group1] = "TWO_LEVEL",
                         symbols[Group1] = [ Control_R, Control_R ] };
    modifier_map Control { <RALT> };
};

// Swap the functions of the left Alt key and the left Ctrl key.
partial modifier_keys
xkb_symbols "swap_lalt_lctl" {
    replace key <LALT> { [ Control_L, Control_L ] };
    replace key <LCTL> { [ Alt_L, Meta_L ] };
};

// Swap the functions of the left Win key and the left Ctrl key.
partial modifier_keys
xkb_symbols "swap_lwin_lctl" {
    replace key <LWIN> { [ Control_L ] };
    replace key <LCTL> { [ Super_L ] };
};

// Swap the functions of the right Win key and the right Ctrl key.
partial modifier_keys
xkb_symbols "swap_rwin_rctl" {
    replace key <RWIN> { [ Control_R ] };
    replace key <RCTL> { [ Super_R ] };
};

// Map Ctrl to the left Alt key, Alt to the left Win key,
// and Super to the left Ctrl key.
partial modifier_keys
xkb_symbols "swap_lalt_lctl_lwin" {
    replace key <LALT> { [ Control_L, Control_L ] };
    replace key <LWIN> { [ Alt_L, Meta_L ] };
    replace key <LCTL> { [ Super_L ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   // based on
// Estonian XKB-keymap by Ville Hallik <ville@linux.ee>
//

default  partial alphanumeric_keys
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple Estonian keyboard
    // This layout conforms to both EVS8:1993 and EVS8:2000 standards

    include "latin(type4)"

    name[Group1]="Estonian";

    key <AE03>	{ [         3, numbersign,     sterling,     sterling ]	};
    key <AE04>	{ [         4,   currency,       dollar,       dollar ]	};
    key <AE11>	{ [      plus,   question,    backslash, questiondown ]	};
    key <AE12>	{ [dead_acute, dead_grave,        grave,   apostrophe ]	};

    key <AD11>	{ [udiaeresis, Udiaeresis, dead_diaeresis, dead_abovering ] };
    key <AD12>	{ [    otilde,     Otilde,      section,  dead_macron ]	};

    key <AC02>	{ [         s,          S,       scaron,       Scaron ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,   dead_acute, dead_doubleacute ] };
    key <AC11>	{ [adiaeresis, Adiaeresis,  asciicircum,   dead_caron ]	};
    key <TLDE>	{ [dead_caron, dead_tilde,      notsign,      notsign ]	};

    key <BKSL>	{ [apostrophe,   asterisk,      onehalf,   dead_breve ]	};
    key <AB01>	{ [         z,          Z,       zcaron,       Zcaron ]	};
    key <AB08>	{ [     comma,  semicolon,         less,     multiply ]	};
    key <AB09>	{ [    period,      colon,      greater,     division ]	};
    key <AB10>	{ [     minus, underscore,          bar,     abovedot ] };

    include "level3(ralt_switch)"
    include "eurosign(e)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // Modifies the basic Estonian layout to eliminate all dead keys

    include "ee(basic)"
    name[Group1]="Estonian (eliminate dead keys)";

    key <TLDE>	{ [asciicircum,asciitilde ]	};
    key <AE12>	{ [apostrophe,      grave ]	};
    key <AD11>	{ [udiaeresis, Udiaeresis,    diaeresis,       degree ]	};
    key <AD12>	{ [    otilde,     Otilde,      section,       macron ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,        acute,  doubleacute ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis,  asciicircum,        caron ]	};
    key <BKSL>	{ [apostrophe,   asterisk,      onehalf,        breve ]	};
    key <AB10>	{ [     minus, underscore, dead_belowdot,    abovedot ]	};
};

// Dvorak with Estonian characters
partial alphanumeric_keys
xkb_symbols "dvorak" {
   include "us(dvorak)"
   name[Group1]= "Estonian (Dvorak)";

    key <AE03>	{ [         3, numbersign,   sterling ]	};
    key <AE04>	{ [         4,     dollar,    section,   currency ]	};
    key <AE08>	{ [         8,   asterisk,    onehalf ]	};

    key <AC01>	{ [         a,          A, adiaeresis, Adiaeresis ]	};
    key <AC02>	{ [         o,          O,     otilde,     Otilde ]	};
    key <AC03>	{ [         e,          E, odiaeresis, Odiaeresis ]	};
    key <AC04>	{ [         u,          U, udiaeresis, Udiaeresis ]	};
    key <AC10>	{ [         s,          S,     scaron,     Scaron ]	};
    key <AB10>	{ [         z,          Z,     zcaron,     Zcaron ]	};

    include "level3(ralt_switch)"
    include "kpdl(comma)"
    include "eurosign(5)"
};

// Estonian few characters on basic US keymap.
// by Elan Ruusamäe <glen@delfi.ee>
partial alphanumeric_keys
xkb_symbols "us" {
    include "us(euro)"
    name[Group1] = "Estonian (US keyboard with Estonian letters)";

    // ž, Ž
    key <AB01>	{ [           z,  Z,          zcaron,     Zcaron     ]	};
    // ¢
    key <AB03>	{ [           c,  C,          cent,       cent       ]	};
    // š, Š
    key <AC02>	{ [           s,  S,          scaron,     Scaron     ]	};
    key <AC10>	{ [ semicolon,    colon,      odiaeresis, Odiaeresis ]	};
    key <AC11>	{ [ apostrophe,   quotedbl,   adiaeresis, Adiaeresis ]	};
    key <AD11>	{ [ bracketleft,  braceleft,  udiaeresis, Udiaeresis ]	};
    key <AD12>	{ [ bracketright, braceright, otilde,     Otilde     ]	};
    // £
    key <AE03>	{ [           3,  numbersign, sterling,   sterling   ]	};

    include "level3(ralt_switch)"
    include "eurosign(e)"
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/ee(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              default  partial alphanumeric_keys
xkb_symbols "basic" {

    // This layout conforms to a new Czech compromise standard
    // designed to satisfy most Unix, Windows and Mac users.
    // 2001 by Kamil Toman <ktoman@email.cz>

    include "latin"
    name[Group1]= "Czech";

    key <TLDE>  { [ semicolon, dead_abovering,    grave,   asciitilde ] };
    key <AE01>  { [      plus,          1,       exclam,   dead_tilde ] };
    key <AE02>  { [    ecaron,          2,           at,   dead_caron ] };
    key <AE03>  { [    scaron,          3,   numbersign, dead_circumflex ] };
    key <AE04>  { [    ccaron,          4,       dollar,   dead_breve ] };
    key <AE05>  { [    rcaron,          5,      percent, dead_abovering]};
    key <AE06>  { [    zcaron,          6,  asciicircum,  dead_ogonek ] };
    key <AE07>  { [    yacute,          7,    ampersand,   dead_grave ] };
    key <AE08>  { [    aacute,          8,     asterisk, dead_abovedot] };
    key <AE09>  { [    iacute,          9,    braceleft,   dead_acute ] };
    key <AE10>  { [    eacute,          0,   braceright, dead_doubleacute ] };
    key <AE11>  { [     equal,    percent,     NoSymbol, dead_diaeresis]};
    key <AE12>  { [dead_acute, dead_caron,  dead_macron, dead_cedilla ] };

    key <AD01>  { [         q,          Q,    backslash,     NoSymbol ] };
    key <AD02>  { [         w,          W,          bar,     Nosymbol ] };
    key <AD03>  { [         e,          E,     EuroSign,     NoSymbol ] };
    key <AD04>  { [         r,          R,     NoSymbol,     NoSymbol ] };
    key <AD05>  { [         t,          T,     NoSymbol,     NoSymbol ] };
    key <AD06>  { [         z,          Z,     NoSymbol,     NoSymbol ] };
    key <AD07>  { [         u,          U,     NoSymbol,     NoSymbol ] };
    key <AD08>  { [         i,          I,     NoSymbol,     NoSymbol ] };
    key <AD09>  { [         o,          O,     NoSymbol,     NoSymbol ] };
    key <AD10>  { [         p,          P,     NoSymbol,     NoSymbol ] };

    key <AD11>  { [    uacute,      slash,  bracketleft,     division ] };
    key <AD12>  { [parenright,  parenleft, bracketright,     multiply ] };

    key <AC01>  { [         a,          A,   asciitilde,     NoSymbol ] };
    key <AC02>  { [         s,          S,      dstroke,     NoSymbol ] };
    key <AC03>  { [         d,          D,      Dstroke,     NoSymbol ] };
    key <AC04>  { [         f,          F,  bracketleft,     NoSymbol ] };
    key <AC05>  { [         g,          G, bracketright,     NoSymbol ] };
    key <AC06>  { [         h,          H,        grave,     NoSymbol ] };
    key <AC07>  { [         j,          J,   apostrophe,     NoSymbol ] };
    key <AC08>  { [         k,          K,      lstroke,     NoSymbol ] };
    key <AC09>  { [         l,          L,      Lstroke,     NoSymbol ] };

    key <AC10>  { [     uring,   quotedbl,       dollar,     NoSymbol ] };
    key <AC11>  { [   section,     exclam,   apostrophe,       ssharp ] };
    key <AC12>  { [  EuroSign, dead_diaeresis, NoSymbol,     NoSymbol ] };
    key <BKSL>  { [dead_diaeresis, apostrophe, backslash,         bar ] };

    key <LSGT>  { [ backslash,        bar,        slash,     NoSymbol ] };
    key <AB01>  { [         y,          Y,       degree,     NoSymbol ] };
    key <AB02>  { [         x,          X,   numbersign,     Nosymbol ] };
    key <AB03>  { [         c,          C,    ampersand,     NoSymbol ] };
    key <AB04>  { [         v,          V,           at,     NoSymbol ] };
    key <AB05>  { [         b,          B,    braceleft,     NoSymbol ] };
    key <AB06>  { [         n,          N,   braceright,     NoSymbol ] };
    key <AB07>  { [         m,          M,  asciicircum,     NoSymbol ] };
    key <AB08>  { [     comma,   question,         less,     NoSymbol ] };
    key <AB09>  { [    period,      colon,      greater,     NoSymbol ] };
    key <AB10>  { [     minus, underscore,     asterisk,     NoSymbol ] };

    key <SPCE>  { [     space,      space,        space,       space  ] };

    include "level3(ralt_switch)"
};

xkb_symbols "bksl" {

    // Use <BKSL> instead of <LSGT> (useful for keyboards without <LSGT> key).

    include "cz(basic)"
    name[Group1]= "Czech (with <\|> key)";

    key <BKSL>  { [ backslash,        bar,        slash,     NoSymbol ] };
};

partial alphanumeric_keys
xkb_symbols "qwerty" {

    // This layout represents the actual Czech keyboards;
    // it complies with the symbols printed on the keys.
    // 2011 by Lukáš Mojžíš <lmojzis@grenames.cz>

    include "cz(basic)"
    name[Group1]= "Czech (qwerty)";

    key <AB01>  { [         z,          Z,       degree,         NoSymbol ] };
    key <AC10>  { [     uring,   quotedbl,    semicolon,            colon ] };
    key <AC11>  { [   section,     exclam,   apostrophe,           ssharp ] };
    key <AD06>  { [         y,          Y,     NoSymbol,         NoSymbol ] };
    key <AD11>  { [    uacute,      slash,  bracketleft,        braceleft ] };
    key <AD12>  { [parenright,  parenleft, bracketright,       braceright ] };
    key <AE09>  { [    iacute,          9,    parenleft,       dead_acute ] };
    key <AE10>  { [    eacute,          0,   parenright, dead_doubleacute ] };
};

xkb_symbols "qwerty_bksl" {

    // Use <BKSL> instead of <LSGT> (useful for keyboards without <LSGT> key).

    include "cz(qwerty)"
    name[Group1]= "Czech (qwerty, extended Backslash)";

    key <BKSL>  { [ backslash,        bar,        slash,     NoSymbol ] };
};

partial alphanumeric_keys alternate_group
xkb_symbols "ucw" {

    // This layout is usually used as the second group,
    // it contains accented characters only, no 'latin' set.
    // 2008 by Milan Vancura <mvancura@suse.cz>

    name[Group1]= "Czech (UCW layout, accented letters only)";

    key <AB01> { [zcaron,      Zcaron      ] };
    key <AB02> { [ssharp                   ] };
    key <AB03> { [ccaron,      Ccaron      ] };
    key <AB04> { [ccedilla,    Ccedilla    ] };
    key <AB05> { [ntilde,      Ntilde      ] };
    key <AB06> { [ncaron,      Ncaron      ] };
    key <AB07> { [lacute,      Lacute      ] };

    key <AC01> { [aacute,      Aacute      ] };
    key <AC02> { [scaron,      Scaron      ] };
    key <AC03> { [dcaron,      Dcaron      ] };
    key <AC04> { [ediaeresis,  Ediaeresis  ] };
    key <AC05> { [racute,      Racute      ] };
    key <AC06> { [uacute,      Uacute      ] };
    key <AC07> { [udiaeresis,  Udiaeresis  ] };
    key <AC08> { [ocircumflex, Ocircumflex ] };
    key <AC09> { [lcaron,      Lcaron      ] };

    key <AD01> { [adiaeresis,  Adiaeresis  ] };
    key <AD02> { [ecaron,      Ecaron      ] };
    key <AD03> { [eacute,      Eacute      ] };
    key <AD04> { [rcaron,      Rcaron      ] };
    key <AD05> { [tcaron,      Tcaron      ] };
    key <AD06> { [yacute,      Yacute      ] };
    key <AD07> { [uring,       Uring       ] };
    key <AD08> { [iacute,      Iacute      ] };
    key <AD09> { [oacute,      Oacute      ] };
    key <AD10> { [odiaeresis,  Odiaeresis  ] };
};

partial alphanumeric_keys
xkb_symbols "dvorak-ucw" {

    // US Dvorak layout extended with UCW,
    // AltGr produces accented characters.

    include "us(dvorak)"
    name[Group1]= "Czech (US Dvorak with CZ UCW support)";

    key <AB03> { [ j, J, eacute, Eacute ] };
    key <AB04> { [ k, K, uacute, Uacute ] };
    key <AB10> { [ z, Z, zcaron, Zcaron ] };

    key <AC01> { [ a, A, aacute, Aacute ] };
    key <AC02> { [ o, O, oacute, Oacute ] };
    key <AC03> { [ e, E, ecaron, Ecaron ] };
    key <AC04> { [ u, U, uring,  Uring  ] };
    key <AC05> { [ i, I, iacute, Iacute ] };
    key <AC06> { [ d, D, dcaron, Dcaron ] };
    key <AC08> { [ t, T, tcaron, Tcaron ] };
    key <AC09> { [ n, N, ncaron, Ncaron ] };
    key <AC10> { [ s, S, scaron, Scaron ] };

    key <AD05> { [ y, Y, yacute, Yacute ] };
    key <AD08> { [ c, C, ccaron, Ccaron ] };
    key <AD09> { [ r, R, rcaron, Rcaron ] };

    include "level3(ralt_switch)"
};

// phonetic layout for Russian letters on an CZ (QWERTY) keyboard
// originaly created by Pavel Sorejs <sorejs@gmail.com>

partial alphanumeric_keys
xkb_symbols "rus" {

    include "cz(qwerty)"
    name[Group1]= "Russian (Czech, phonetic)";

    key <AE01> { [              plus,         ampersand,            1 ,       1 ] };
    key <AE02> { [ Cyrillic_hardsign,                 2,            2 ,       2 ] };
    key <AE03> { [      Cyrillic_sha,      Cyrillic_SHA,            3 ,       3 ] };
    key <AE04> { [      Cyrillic_che,      Cyrillic_CHE,            4 ,       4 ] };
    key <AE05> { [    Cyrillic_shcha,    Cyrillic_SHCHA,            5 ,       5 ] };
    key <AE06> { [      Cyrillic_zhe,      Cyrillic_ZHE,            6 ,       6 ] };
    key <AE07> { [          quotedbl,                 4,            7 ,       7 ] };
    key <AE08> { [           section,                 5,            8 ,       8 ] };
    key <AE09> { [            dollar,                 6,            9 ,       9 ] };
    key <AE10> { [             equal,                 7,            0 ,       0 ] };
    key <AE11> { [           percent,                 8                         ] };
    key <AE12> { [        apostrophe,                 9                         ] };

    key <AB08> { [             comma,          question                         ] };
    key <AB09> { [            period,            exclam                         ] };
    key <AB10> { [             minus,             slash                         ] };

    key <AC11> { [         semicolon,             colon                         ] };

    key <LSGT> { [               bar,         brokenbar                         ] };

    key <TLDE> { [       Cyrillic_io,       Cyrillic_IO                         ] };


    key <AD01> { [        numerosign,                 1,            q,        Q ] };
    key <AD02> { [       Cyrillic_yu,       Cyrillic_YU,            w,        W ] };
    key <AD03> { [       Cyrillic_ie,       Cyrillic_IE,            e,        E ] };
    key <AD04> { [       Cyrillic_er,       Cyrillic_ER,            r,        R ] };
    key <AD05> { [       Cyrillic_te,       Cyrillic_TE,            t,        T ] };
    key <AD06> { [     Cyrillic_yeru,     Cyrillic_YERU,            y,        Y ] };
    key <AD07> { [        Cyrillic_u,        Cyrillic_U,            u,        U ] };
    key <AD08> { [        Cyrillic_i,        Cyrillic_I,            i,        I ] };
    key <AD09> { [        Cyrillic_o,        Cyrillic_O,            o,        O ] };
    key <AD10> { [       Cyrillic_pe,       Cyrillic_PE,            p,        P ] };
    key <AD11> { [        Cyrillic_e,        Cyrillic_E,  bracketleft, division ] };
    key <AD12> { [        parenright,         parenleft, bracketright, multiply ] };

    key <AC01> { [        Cyrillic_a,        Cyrillic_A,            a,        A ] };
    key <AC02> { [       Cyrillic_es,       Cyrillic_ES,            s,        S ] };
    key <AC03> { [       Cyrillic_de,       Cyrillic_DE,            d,        D ] };
    key <AC04> { [       Cyrillic_ef,       Cyrillic_EF,            f,        F ] };
    key <AC05> { [      Cyrillic_ghe,      Cyrillic_GHE,            g,        G ] };
    key <AC06> { [       Cyrillic_ha,       Cyrillic_HA,            h,        H ] };
    key <AC07> { [   Cyrillic_shorti,   Cyrillic_SHORTI,            j,        J ] };
    key <AC08> { [       Cyrillic_ka,       Cyrillic_KA,            k,        K ] };
    key <AC09> { [       Cyrillic_el,       Cyrillic_EL,            l,        L ] };
    key <AC10> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN,         less,  greater ] };

    key <AB01> { [       Cyrillic_ze,       Cyrillic_ZE,            z,        Z ] };
    key <AB02> { [       Cyrillic_ya,       Cyrillic_YA,            x,        X ] };
    key <AB03> { [      Cyrillic_tse,      Cyrillic_TSE,            c,        C ] };
    key <AB04> { [       Cyrillic_ve,       Cyrillic_VE,            v,        V ] };
    key <AB05> { [       Cyrillic_be,       Cyrillic_BE,            b,        B ] };
    key <AB06> { [       Cyrillic_en,       Cyrillic_EN,            n,        N ] };
    key <AB07> { [       Cyrillic_em,       Cyrillic_EM,            m,        M ] };

    key <BKSL> { [         backslash,         brokenbar                         ] };

   include "level3(ralt_switch)"
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/cz(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // based on a keyboard map from an 'xkb/symbols/de' file

default
xkb_symbols "basic" {

    include "latin(type4)"

    name[Group1]="German";

    key <AE02>	{ [         2,   quotedbl,  twosuperior,    oneeighth ]	};
    key <AE03>	{ [         3,    section, threesuperior,    sterling ]	};
    key <AE04>	{ [         4,     dollar,   onequarter,     currency ]	};

    key <AE11> {type[Group1]="FOUR_LEVEL_PLUS_LOCK",  symbols[Group1]=
                  [ssharp, question, backslash, questiondown, 0x1001E9E ]};
// The unicode capital letter sharp s U+1E9E is transformed to "SS"
// to match the rules for capitalizing sharp s in german.
// If the capital sharp s is needed, delete the line
// starting with <U1E9C> from /usr/share/X11/locale/iso8859-15/Compose.
// If both doubled S and capital sharp s are needed, use  0x1001E9E
// for capital sharp s and some free unicode codepoint like 0x1001E9C
// for doubled S. Don`t forget to change this in the Compose file, too.

    key <AE12>	{ [dead_acute, dead_grave, dead_cedilla,  dead_ogonek ]	};

    key <AD03>	{ [         e,          E,     EuroSign,     EuroSign ]	};
    key <AD06>	{ [         z,          Z,    leftarrow,          yen ]	};
    key <AD11>	{ [udiaeresis, Udiaeresis, dead_diaeresis, dead_abovering ] };
    key <AD12>	{ [      plus,   asterisk,   asciitilde,  macron ]	};

    key <AC02>  { [         s,          S,                U017F,     U1E9E    ] };
    key <AC07>  { [         j,          J,        dead_belowdot, dead_abovedot   ] };
    key <AC10>	{ [odiaeresis, Odiaeresis, dead_doubleacute, dead_belowdot ] };
    key <AC11>	{ [adiaeresis, Adiaeresis, dead_circumflex, dead_caron ] };
    key <TLDE>	{ [dead_circumflex, degree,	U2032,    U2033	] };

    key <BKSL>	{ [numbersign, apostrophe, rightsinglequotemark,   dead_breve ]	};
    key <AB01>	{ [         y,          Y,       guillemotright,    U203A 	] };
    key <AB02>	{ [         x,          X,        guillemotleft,    U2039 	] };
    key <AB04>	{ [         v,          V,   doublelowquotemark, singlelowquotemark ]	};
    key <AB05>	{ [         b,          B,  leftdoublequotemark, leftsinglequotemark ] };
    key <AB06>	{ [         n,          N, rightdoublequotemark, rightsinglequotemark ]	};
    key <AB08>  { [     comma,  semicolon,       periodcentered,     multiply	] };
    key <AB09>	{ [    period,      colon,                U2026,     division 	] };
    key <AB10>	{ [     minus, underscore,               endash,     emdash	] };
    key <LSGT>	{ [     less,     greater,                  bar,     NoSymbol   ] };

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "deadtilde" {
    // previous standard German layout with tilde as dead key

    include "de(basic)"
    name[Group1]="German (dead tilde)";

    key <AD12>	{ [      plus,   asterisk,   dead_tilde,  dead_macron ]	};
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // modify the basic German layout to not have any dead keys

    include "de(basic)"
    name[Group1]="German (eliminate dead keys)";

    key <TLDE>	{ [asciicircum,    degree,      notsign,      notsign ]	};
    key <AE12>	{ [     acute,      grave,      cedilla,      cedilla ]	};
    key <AD11>	{ [udiaeresis, Udiaeresis,    diaeresis,    diaeresis ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,       macron ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,  doubleacute,  doubleacute ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis,  asciicircum,  asciicircum ]	};
    key <BKSL>	{ [numbersign, apostrophe,        grave,        grave ]	};
};

partial alphanumeric_keys
xkb_symbols "deadgraveacute" {
    // modify the basic German layout to have only acute and grave
    // as dead keys (tilde and circumflex are needed as spacing characters
    // in many programming languages)

    include "de(basic)"
    name[Group1]="German (dead grave acute)";

    key <TLDE>	{ [asciicircum,    degree,      notsign,      notsign ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,  dead_macron ]	};
    key <BKSL>	{ [numbersign, apostrophe,        grave,        grave ]	};
};

partial alphanumeric_keys
xkb_symbols "deadacute" {
    // modify the basic German layout to have only acute as
    // dead keys (ASCII grave, tilde and circumflex are needed as
    // spacing characters in many programming languages and text formatters)

    include "de(deadgraveacute)"

    name[Group1]="German (dead acute)";

    key <AE12>	{ [dead_acute,      grave, dead_cedilla,  dead_ogonek ]	};
    key <BKSL>	{ [numbersign, apostrophe,   dead_grave,   dead_grave ]	};
};


partial alphanumeric_keys
xkb_symbols "T3" {
    name[Group1]="German (T3)";

    key.type[Group1] = "EIGHT_LEVEL";
    key <TLDE> { [ dead_circumflex,          degree,        multiply,        NoSymbol,           U204A,            hyphen,             bar,        NoSymbol ] };
    key <AE01> { [               1,          exclam, rightsinglequotemark,   NoSymbol,     onesuperior,        exclamdown,           U02B9,        NoSymbol ] };
    key <AE02> { [               2,        quotedbl,     twosuperior,        NoSymbol,     twosuperior,          currency,           U02BA,        NoSymbol ] };
    key <AE03> { [               3,         section,   threesuperior,        NoSymbol,   threesuperior,          sterling,           U02BF,        NoSymbol ] };
    key <AE04> { [               4,          dollar,          emdash,        NoSymbol,      onequarter,            0x20AC,           U02BE,        NoSymbol ] };
    key <AE05> { [               5,         percent,      exclamdown,        NoSymbol,         onehalf,           uparrow,           U02C1,        NoSymbol ] };
    key <AE06> { [               6,       ampersand,    questiondown,        NoSymbol,   threequarters,         downarrow,           U02C0,        NoSymbol ] };
    key <AE07> { [               7,           slash,       braceleft,        NoSymbol,       oneeighth,         leftarrow,       braceleft,        NoSymbol ] };
    key <AE08> { [               8,       parenleft,     bracketleft,        NoSymbol,    threeeighths,        rightarrow,      braceright,        NoSymbol ] };
    key <AE09> { [               9,      parenright,    bracketright,        NoSymbol,     fiveeighths,         plusminus,     bracketleft,        NoSymbol ] };
    key <AE10> { [               0,           equal,      braceright,        NoSymbol,    seveneighths,         trademark,    bracketright,        NoSymbol ] };
    key <AE11> { [          ssharp,        question,       backslash,        NoSymbol,       backslash,      questiondown,           U02BB,        NoSymbol ] };
    key <AE12> { [      dead_acute,      dead_grave,   dead_abovedot,        NoSymbol,    dead_cedilla,       dead_ogonek,         notsign,        NoSymbol ] };

    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC";
    key <AD01> { [               q,               Q,              at,        NoSymbol,           U0242,           U0241,           U030D,        NoSymbol ] };
    key <AD02> { [               w,               W,      dead_caron,        NoSymbol,           U02B7,           U2126,   dead_abovedot,        NoSymbol ] };
    key <AD03> { [               e,               E,        EuroSign,        NoSymbol,              oe,              OE,      dead_breve,        NoSymbol ] };
    key <AD04> { [               r,               R,  dead_diaeresis,        NoSymbol,       paragraph,      registered, dead_circumflex,        NoSymbol ] };
    key <AD05> { [               t,               T,     dead_macron,        NoSymbol,           UA78C,           UA78B,  dead_diaeresis,        NoSymbol ] };
    key <AD06> { [               z,               Z, dead_doubleacute,       NoSymbol,           U027C,             yen, dead_invertedbreve,     NoSymbol ] };
    key <AD07> { [               u,               U,      dead_breve,        NoSymbol,           U0223,           U0222,      dead_caron,        NoSymbol ] };
    key <AD08> { [               i,               I,      dead_tilde,        NoSymbol,        idotless,           U214D, dead_abovecomma,        NoSymbol ] };
    key <AD09> { [               o,               O,  dead_abovering,        NoSymbol,          oslash,          Oslash,       dead_horn,        NoSymbol ] };
    key <AD10> { [               p,               P,       dead_hook,        NoSymbol,           thorn,           THORN,       dead_hook,        NoSymbol ] };
    key <AD11> { [      udiaeresis,      Udiaeresis,       dead_horn,        NoSymbol,           U017F,  dead_abovering,      dead_grave,        NoSymbol ] };
    key.type[Group1] = "EIGHT_LEVEL";
    key <AD12> { [            plus,        asterisk,      asciitilde,        NoSymbol,      dead_tilde,     dead_macron,              at,        NoSymbol ] };

    key.type[Group1] = "ONE_LEVEL";
    key <CAPS>  { [ Caps_Lock	]	};
    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC";
    key <AC01> { [               a,               A,   lessthanequal,        NoSymbol,              ae,              AE,           U0329,        NoSymbol ] };
    key <AC02> { [               s,               S, greaterthanequal,       NoSymbol,          ssharp,         section,   dead_belowdot,        NoSymbol ] };
    key <AC03> { [               d,               D,           U2300,        NoSymbol,             eth,             ETH, dead_belowbreve,        NoSymbol ] };
    key <AC04> { [               f,               F,         minutes,        NoSymbol,           U0294,     ordfeminine, dead_belowcircumflex,   NoSymbol ] };
    key <AC05> { [               g,               G,         seconds,        NoSymbol,             eng,             ENG, dead_belowmacron,       NoSymbol ] };
    key <AC06> { [               h,               H,           U1E9E,        NoSymbol,           U0272,           U019D,           U0332,        NoSymbol ] };
    key <AC07> { [               j,               J,    dead_cedilla,        NoSymbol,           U0133,           U0132,  dead_belowring,        NoSymbol ] };
    key <AC08> { [               k,               K, dead_belowcomma,        NoSymbol,             kra, dead_belowcomma,     dead_stroke,        NoSymbol ] };
    key <AC09> { [               l,               L,     dead_ogonek,        NoSymbol,         lstroke,         Lstroke,           U0338,        NoSymbol ] };
    key <AC10> { [      odiaeresis,      Odiaeresis,   dead_belowdot,        NoSymbol,      dead_acute, dead_doubleacute,         degree,        NoSymbol ] };
    key <AC11> { [      adiaeresis,      Adiaeresis,     dead_stroke,        NoSymbol,           U019B,           U1E9E,         minutes,        NoSymbol ] };
    key.type[Group1] = "EIGHT_LEVEL";
    key <BKSL> { [      numbersign,      apostrophe,      registered,        NoSymbol,           schwa,           SCHWA,         seconds,        NoSymbol ] };

    key <LSGT> { [            less,         greater,             bar,        NoSymbol,           U0149,       brokenbar,           U266A,        NoSymbol ] };
    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC";
    key <AB01> { [               y,               Y,           U203A,        NoSymbol,           U0292,           U01B7,   guillemotleft,        NoSymbol ] };
    key <AB02> { [               x,               X,  guillemotright,        NoSymbol, doublelowquotemark, singlelowquotemark, guillemotright,   NoSymbol ] };
    key <AB03> { [               c,               C,       copyright,        NoSymbol,            cent,       copyright,  Greek_horizbar,        NoSymbol ] };
    key <AB04> { [               v,               V,   guillemotleft,        NoSymbol, leftdoublequotemark, leftsinglequotemark,   U2039,        NoSymbol ] };
    key <AB05> { [               b,               B,           U2039,        NoSymbol, rightdoublequotemark, rightsinglequotemark, U203A,        NoSymbol ] };
    key <AB06> { [               n,               N,          endash,        NoSymbol,           U019E,           U0220,          endash,        NoSymbol ] };
    key <AB07> { [               m,               M,        Greek_mu,        NoSymbol,              mu,       masculine,          emdash,        NoSymbol ] };
    key.type[Group1] = "EIGHT_LEVEL";
    key <AB08> { [           comma,       semicolon,           U02BB,        NoSymbol,        ellipsis,        multiply,          dollar,        NoSymbol ] };
    key <AB09> { [          period,           colon,           U200C,        NoSymbol,  periodcentered,        division,      numbersign,        NoSymbol ] };
    key <AB10> { [           minus,      underscore,          hyphen,        NoSymbol,           U0140,           U013F,           U2011,        NoSymbol ] };

    key <SPCE> { [           space,           space,    nobreakspace,        NoSymbol,           U202F,           U200C,    nobreakspace,        NoSymbol ] };

    include "kpdl(comma)"

    include "level5(modifier_mapping)"
    include "level3(modifier_mapping)"
    key.type[Group1] = "THREE_LEVEL";
    key <LFSH> { [ Shift_L, Shift_L, ISO_Level5_Latch ] };
    key <RTSH> { [ Shift_R, Shift_R, ISO_Level5_Latch ] };
    key <RALT> { [ ISO_Level3_Latch, ISO_Level5_Latch, ISO_Level5_Latch ] };
 };

partial alphanumeric_keys
xkb_symbols "ro" {
    // add romanian-specific letters to the basic German layout.
    // Romanian symbols are accessible with combination of <AltGr> and
    // 'a', 's', 't', 'i', 'ä (&auml)' (+<Shift> for capital letters).
    // To view romanian-specific symbols, add "export LC_CTYPE=ro_RO"
    // or "export LC_CTYPE=de_DE.utf8" to your .profile.

    include "de(basic)"

    name[Group1]="Romanian (Germany)";

    key <AD05> { [         t,    T,           tcedilla,     Tcedilla    ] };
    key <AD08> { [         i,    I,        icircumflex,  Icircumflex    ] };
    key <AC01> { [         a,    A,        acircumflex,  Acircumflex    ] };
    key <AC02> { [         s,    S,           scedilla,     Scedilla    ] };
    key <AC11> { [ adiaeresis,   Adiaeresis,    abreve,       Abreve    ] };
};

partial alphanumeric_keys
xkb_symbols "ro_nodeadkeys" {
    // add romanian-specific letters to the German nodeadkeys layout.
    // Read the comment for de_ro !

    include "de(nodeadkeys)"
    name[Group1]="Romanian (Germany, eliminate dead keys)";

    key <AD05> { [         t,    T,           tcedilla,     Tcedilla    ] };
    key <AD08> { [         i,    I,        icircumflex,  Icircumflex    ] };
    key <AC01> { [         a,    A,        acircumflex,  Acircumflex    ] };
    key <AC02> { [         s,    S,           scedilla,     Scedilla    ] };
    key <AC11> { [ adiaeresis,   Adiaeresis, abreve,       Abreve       ] };
};

// German Dvorak keymap by Thorsten Staerk (www.staerk.de/thorsten)
// Have acute and grave as dead keys, tilde and circumflex alive as they are needed 
// in many programming languages.
// to use this keymap, use a 105-key-keyboard and the command setxkbmap -model pc105 -layout dvorak -variant de
// source: http://www-lehre.informatik.uni-osnabrueck.de/~rfreund/dvorak.php
partial alphanumeric_keys
xkb_symbols "dvorak" {
    include "us(dvorak)"

    name[Group1]="German (Dvorak)";

    key <TLDE> { [ asciicircum, degree ] };

    key <AE01> { [ 1, exclam, onesuperior ] };
    key <AE02> { [ 2, quotedbl, twosuperior ] };
    key <AE03> { [ 3, section, threesuperior ] };
    key <AE04> { [ 4, dollar, bar ] };
    key <AE05> { [ 5, percent, bar ] };
    key <AE06> { [ 6, ampersand, brokenbar ] };
    key <AE07> { [ 7, slash, braceleft ] };
    key <AE08> { [ 8, parenleft, bracketleft ] };
    key <AE09> { [ 9, parenright, bracketright ] };
    key <AE10> { [ 0, equal, braceright ] };
    key <AE11> { [ plus, asterisk, asciitilde ] };
    key <AE12> { [ less, greater, dead_grave ] };

    key <AD01> { [ udiaeresis, Udiaeresis, at ] };
    key <AD02> { [ comma, semicolon, dead_diaeresis ] };
    key <AD03> { [ period, colon ] };
    key <AD08> { [ c, C, copyright, Cacute ] };
    key <AD09> { [ t, T, trademark ] };
    key <AD10> { [ z, Z, zabovedot, Zabovedot ] };
    key <AD11> { [ question, ssharp ] };
    key <AD12> { [ slash, backslash, dead_acute ] };

    key <AC01> { [ a, A, at, aogonek ] };
    key <AC02> { [ o, O, oacute, Oacute ] };
    key <AC03> { [ e, E, EuroSign, eogonek ] };
    key <AC04> { [ i, I ] };
    key <AC05> { [ u, U ] };
    key <AC06> { [ h, H ] };
    key <AC07> { [ d, D ] };
    key <AC08> { [ r, R, registered ] };
    key <AC09> { [ n, N, nacute, Nacute ] };
    key <AC10> { [ s, S, sacute, Sacute] };
    key <AC11> { [ l, L, lstroke, Lstroke ] };

    key <AB01> { [ odiaeresis, Odiaeresis ] };
    key <AB02> { [ q, Q, at ] };
    key <AB07> { [ m, M, mu ] };
    key <AB10> { [ numbersign, apostrophe ] };

    key <BKSL> { [ minus, underscore, hyphen, diaeresis] };

    key <LSGT> { [ adiaeresis, Adiaeresis, bar ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {

    // For naming consistency

    include "de(basic)"

};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {

    // For naming consistency

    include "de(Sundeadkeys)"

    name[Group1]="German (Sun dead keys)";
};


// German Neo-Layout Version 2
// adopted 2004 by Hanno Behrens <Hanno.Behrens@gmx.de>
// inspired by Dvorak/de-ergo  http://www.goebel-consult.de/de-ergo/
//
// Authors: 
//      Stephan Hilb <stephan at ehilb dot de>
//      <lucky at zankt dot net>
//      Benjamin Kellermann <Benjamin dot Kellermann at gmx dot Germany>
//      Erik Streb <mail at erikstreb dot de>
//        and many other contributors
//
//      http://www.neo-layout.org
//
// $Revision$, $Date$

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "neo_base" {

    // Levels in Neo jargon
    // --------------------------------------------------------------
    // Ebene 1: normal
    // Ebene 2: Shift
    // Ebene 3: Mod3
    // Ebene 4: Mod4 (for marking something use Shift + Mod4)
    // Ebene 5: Shift + Mod3
    // Ebene 6: Mod3 + Mod4
    // Compose (not a level): Mod3 + Tab
    // Feststelltaste (Capslock): Shift + Shift
    // Mod4-Lock: Mod4 + Mod4
    // Mod4-Lock: Shift + Mod3 + Tab

    // Legend
    // ===============
    // Levels in Xkbmap jargon to be found here in the definitions. 
    // These are the levels used, and Xorg's translations:
    // --------------------------------------------------------------
    // Xorg:       Level1                   Level2                   Level3                   Level4                   Level5                   Level6                   Level7                   Level8                   
    // Neo:        Ebene1                   Ebene2                   Ebene3                   Ebene5                   Ebene4                   Pseudo-Ebene             Ebene6                   ???                      
    // Keys (Neo): None                     Shift                    Mod3                     Mod3 + Shift             Mod4                     Mod4 + Shift             Mod3 + Mod4              Mod3 + Mod4 + Shift      


    // Alphanumeric-keys
    // ===============
    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";

    // Tab as Multi_key (Compose)
    // --------------------------------------------------------------
    key  <TAB> { [ Tab,                     ISO_Left_Tab,            Multi_key,               ISO_Level5_Lock,         NoSymbol,                NoSymbol,                NoSymbol,                ISO_Level5_Lock          ] };


    // Number row
    // --------------------------------------------------------------
    key <TLDE> { [ dead_circumflex,         dead_caron,              U21BB,                   U02DE,                   dead_abovedot,           Pointer_EnableKeys,      dead_belowdot,           NoSymbol                 ] };

    key <AE01> { [ 1,                       degree,                  onesuperior,             onesubscript,            ordfeminine,             NoSymbol,                notsign,                 NoSymbol                 ] };
    key <AE02> { [ 2,                       section,                 twosuperior,             twosubscript,            masculine,               NoSymbol,                logicalor,               NoSymbol                 ] };
    key <AE03> { [ 3,                       U2113,                   threesuperior,           threesubscript,          numerosign,              NoSymbol,                logicaland,              NoSymbol                 ] };
    key <AE04> { [ 4,                       guillemotright,          U203A,                   femalesymbol,            NoSymbol,                NoSymbol,                U22A5,                   NoSymbol                 ] };
    key <AE05> { [ 5,                       guillemotleft,           U2039,                   malesymbol,              periodcentered,          NoSymbol,                U2221,                   NoSymbol                 ] };
    key <AE06> { [ 6,                       dollar,                  cent,                    U26A5,                   sterling,                NoSymbol,                U2225,                   NoSymbol                 ] };

    key <AE07> { [ 7,                       EuroSign,                yen,                     U03F0,                   currency,                NoSymbol,                rightarrow,              NoSymbol                 ] };
    key <AE08> { [ 8,                       doublelowquotemark,      singlelowquotemark,      U27E8,                   Tab,                     ISO_Left_Tab,            U221E,                   NoSymbol                 ] };
    key <AE09> { [ 9,                       leftdoublequotemark,     leftsinglequotemark,     U27E9,                   KP_Divide,               KP_Divide,               variation,               NoSymbol                 ] };
    key <AE10> { [ 0,                       rightdoublequotemark,    rightsinglequotemark,    zerosubscript,           KP_Multiply,             KP_Multiply,             emptyset,                NoSymbol                 ] };

    key <AE11> { [ minus,                   emdash,                  NoSymbol,                U2011,                   KP_Subtract,             KP_Subtract,             hyphen,                  NoSymbol                 ] };
    key <AE12> { [ dead_grave,              dead_cedilla,            dead_abovering,          dead_dasia,              dead_diaeresis,          NoSymbol,                dead_macron,             NoSymbol                 ] };

    // Top row
    // --------------------------------------------------------------
    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AD01> { [ x,                       X,                       ellipsis,                Greek_xi,                Prior,                   Prior,                   Greek_XI,                NoSymbol                 ] };
    key <AD02> { [ v,                       V,                       underscore,              NoSymbol,                BackSpace,               BackSpace,               radical,                 NoSymbol                 ] };
    key <AD03> { [ l,                       L,                       bracketleft,             Greek_lambda,            Up,                      Up,                      Greek_LAMBDA,            NoSymbol                 ] };
    key <AD04> { [ c,                       C,                       bracketright,            Greek_chi,               Delete,                  Delete,                  U2102,                   NoSymbol                 ] };
    key <AD05> { [ w,                       W,                       asciicircum,             Greek_omega,             Next,                    Next,                    Greek_OMEGA,             NoSymbol                 ] };

    key <AD06> { [ k,                       K,                       exclam,                  Greek_kappa,             exclamdown,              NoSymbol,                multiply,                NoSymbol                 ] };
    key <AD07> { [ h,                       H,                       less,                    Greek_psi,               KP_7,                    KP_7,                    Greek_PSI,               NoSymbol                 ] };
    key <AD08> { [ g,                       G,                       greater,                 Greek_gamma,             KP_8,                    KP_8,                    Greek_GAMMA,             NoSymbol                 ] };
    key <AD09> { [ f,                       F,                       equal,                   Greek_phi,               KP_9,                    KP_9,                    Greek_PHI,               NoSymbol                 ] };
    key <AD10> { [ q,                       Q,                       ampersand,               U03D5,                   KP_Add,                  KP_Add,                  U211A,                   NoSymbol                 ] };

    key <AD11> { [ ssharp,                  U1E9E,                   U017F,                   Greek_finalsmallsigma,   U2212,                   NoSymbol,                jot,                     NoSymbol                 ] };

    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";
    key <AD12> { [ dead_acute,              dead_tilde,              dead_stroke,             dead_psili,              dead_doubleacute,        NoSymbol,                dead_breve,              NoSymbol                 ] };

    // Middle row
    // --------------------------------------------------------------
    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AC01> { [ u,                       U,                       backslash,               NoSymbol,                Home,                    Home,                    includedin,              NoSymbol                 ] };
    key <AC02> { [ i,                       I,                       slash,                   Greek_iota,              Left,                    Left,                    integral,                NoSymbol                 ] };
    key <AC03> { [ a,                       A,                       braceleft,               Greek_alpha,             Down,                    Down,                    U2200,                   NoSymbol                 ] };
    key <AC04> { [ e,                       E,                       braceright,              Greek_epsilon,           Right,                   Right,                   U2203,                   NoSymbol                 ] };
    key <AC05> { [ o,                       O,                       asterisk,                Greek_omicron,           End,                     End,                     elementof,               NoSymbol                 ] };

    key <AC06> { [ s,                       S,                       question,                Greek_sigma,             questiondown,            NoSymbol,                Greek_SIGMA,             NoSymbol                 ] };
    key <AC07> { [ n,                       N,                       parenleft,               Greek_nu,                KP_4,                    KP_4,                    U2115,                   NoSymbol                 ] };
    key <AC08> { [ r,                       R,                       parenright,              Greek_rho,               KP_5,                    KP_5,                    U211D,                   NoSymbol                 ] };
    key <AC09> { [ t,                       T,                       minus,                   Greek_tau,               KP_6,                    KP_6,                    partialderivative,       NoSymbol                 ] };
    key <AC10> { [ d,                       D,                       colon,                   Greek_delta,             KP_Separator,            comma,                   Greek_DELTA,             NoSymbol                 ] };

    key <AC11> { [ y,                       Y,                       at,                      Greek_upsilon,           period,                  KP_Decimal,              nabla,                   NoSymbol                 ] };

    // Bottom row
    // --------------------------------------------------------------
    key <AB01> { [ udiaeresis,              Udiaeresis,              numbersign,              NoSymbol,                Escape,                  Escape,                  union,                   NoSymbol                 ] };
    key <AB02> { [ odiaeresis,              Odiaeresis,              dollar,                  U03F5,                   Tab,                     Tab,                     intersection,            NoSymbol                 ] };
    key <AB03> { [ adiaeresis,              Adiaeresis,              bar,                     Greek_eta,               Insert,                  Insert,                  U2135,                   NoSymbol                 ] };
    key <AB04> { [ p,                       P,                       asciitilde,              Greek_pi,                Return,                  Return,                  Greek_PI,                NoSymbol                 ] };
    key <AB05> { [ z,                       Z,                       grave,                   Greek_zeta,              Undo,                    Redo,                    U2124,                   NoSymbol                 ] };

    key <AB06> { [ b,                       B,                       plus,                    Greek_beta,              colon,                   NoSymbol,                U21D0,                   NoSymbol                 ] };
    key <AB07> { [ m,                       M,                       percent,                 Greek_mu,                KP_1,                    KP_1,                    ifonlyif,                NoSymbol                 ] };
    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";
    key <AB08> { [ comma,                   endash,                  quotedbl,                U03F1,                   KP_2,                    KP_2,                    U21D2,                   NoSymbol                 ] };
    key <AB09> { [ period,                  enfilledcircbullet,      apostrophe,              U03D1,                   KP_3,                    KP_3,                    U21A6,                   NoSymbol                 ] };
    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AB10> { [ j,                       J,                       semicolon,               Greek_theta,             semicolon,               NoSymbol,                Greek_THETA,             NoSymbol                 ] };
    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";

    // Space key
    // --------------------------------------------------------------
    key <SPCE> { [ space,                   space,                   space,                   nobreakspace,            KP_0,                    KP_0,                    U202F,                   NoSymbol                 ] };


    // Keypad-keys
    // ===============

    // The former Numlock key:
    key <NMLK> { [ Tab,                     ISO_Left_Tab,            equal,                   approxeq,                notequal,                Pointer_EnableKeys,      identical,               NoSymbol                 ] };

    // Topmost row
    // --------------------------------------------------------------
    key <KPDV> { [ KP_Divide,               KP_Divide,               division,                U2300,                   U2215,                   NoSymbol,                U2223,                   NoSymbol                 ] };
    key <KPMU> { [ KP_Multiply,             KP_Multiply,             U22C5,                   U2299,                   multiply,                NoSymbol,                U2297,                   NoSymbol                 ] };
    key <KPSU> { [ KP_Subtract,             KP_Subtract,             U2212,                   U2296,                   U2216,                   NoSymbol,                U2238,                   NoSymbol                 ] };

    // Top row
    // --------------------------------------------------------------
    key  <KP7> { [ KP_7,                    U2714,                   U2195,                   U226A,                   KP_Home,                 KP_Home,                 upstile,                 NoSymbol                 ] };
    key  <KP8> { [ KP_8,                    U2718,                   uparrow,                 intersection,            KP_Up,                   KP_Up,                   U22C2,                   NoSymbol                 ] };
    key  <KP9> { [ KP_9,                    dagger,                  U20D7,                   U226B,                   KP_Prior,                KP_Prior,                U2309,                   NoSymbol                 ] };
    key <KPAD> { [ KP_Add,                  KP_Add,                  plusminus,               U2295,                   U2213,                   NoSymbol,                U2214,                   NoSymbol                 ] };

    // Middle row
    // --------------------------------------------------------------
    key  <KP4> { [ KP_4,                    club,                    leftarrow,               includedin,              KP_Left,                 KP_Left,                 U2286,                   NoSymbol                 ] };
    key  <KP5> { [ KP_5,                    EuroSign,                colon,                   U22B6,                   KP_Begin,                KP_Begin,                U22B7,                   NoSymbol                 ] };
    key  <KP6> { [ KP_6,                    U2023,                   rightarrow,              includes,                KP_Right,                KP_Right,                U2287,                   NoSymbol                 ] };

    // Bottom row
    // --------------------------------------------------------------
    key  <KP1> { [ KP_1,                    diamond,                 U2194,                   lessthanequal,           KP_End,                  KP_End,                  downstile,               NoSymbol                 ] };
    key  <KP2> { [ KP_2,                    heart,                   downarrow,               union,                   KP_Down,                 KP_Down,                 U22C3,                   NoSymbol                 ] };
    key  <KP3> { [ KP_3,                    U2660,                   U21CC,                   greaterthanequal,        KP_Next,                 KP_Next,                 U230B,                   NoSymbol                 ] };
    key <KPEN> { [ KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                NoSymbol                 ] };
    key <KPEQ> { [ KP_Equal,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol                 ] };

    // Bottommost row
    // --------------------------------------------------------------
    key  <KP0> { [ KP_0,                    U2423,                   percent,                 U2030,                   KP_Insert,               KP_Insert,               U25A1,                   NoSymbol                 ] };
    key <KPDL> { [ KP_Separator,            period,                  comma,                   minutes,                 KP_Delete,               KP_Delete,               seconds,                 NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "neo" {

    include "de(neo_base)"

    name[Group1]= "German (Neo 2)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch_lock)"
    include "level5(ralt_switch_lock)"
};

// Copied from macintosh_vndr/de
// olh@suse.de   very close to MacOS map

partial alphanumeric_keys
xkb_symbols "mac" {

    include "de"
    name[Group1]= "German (Macintosh)";

    key <AE01>	{ [         1,     exclam,   exclamdown,           at ]	};
    key <AE05>	{ [         5,    percent,  bracketleft       ]	};
    key <AE06>	{ [         6,  ampersand, bracketright       ]	};
    key <AE07>	{ [         7,      slash,          bar,    backslash ]	};
    key <AE08>	{ [         8,  parenleft,    braceleft,   asciitilde ]	};
    key <AE09>	{ [         9, parenright,   braceright       ]	};
    key <AD01>	{ [         q,          Q, guillemotleft, guillemotright ]	};
    key <AD04>	{ [         r,          R,   registered       ]	};
    key <AD07>	{ [         u,          U,    diaeresis,       Aacute ]	};
    key <AD08>	{ [         i,          I,        slash,  Ucircumflex ]	};
    key <AD11>	{ [ udiaeresis, Udiaeresis, periodcentered,    degree ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde       ]	};
    key <AC01>	{ [         a,          A,        aring,        Aring ]	};
    key <AC05>	{ [         g,          G,    copyright       ]	};
    key <AC06>	{ [         h,          H,  ordfeminine       ]	};
    key <AC09>	{ [         l,          L,           at       ]	};
    key <AC10>	{ [ odiaeresis, Odiaeresis,  dead_acute       ]	};
    key <AB06>	{ [         n,          N,   asciitilde       ]	};

};

partial alphanumeric_keys
xkb_symbols "mac_nodeadkeys" {
    // modify the standard German mac layout to not have any dead keys
    include "de(mac)"
    name[Group1]= "German (Macintosh, eliminate dead keys)";

    key <TLDE>	{ [ asciicircum,    degree,     notsign       ]	};
    key <AE04>	{ [          4,     dollar,  onequarter,     currency ]	};
    key <AE12>	{ [      acute,      grave,     cedilla       ]	};
    key <AD11>	{ [ udiaeresis, Udiaeresis,   diaeresis       ]	};
    key <AD12>	{ [       plus,   asterisk,  asciitilde,       macron ]	};
    key <AC10>	{ [ odiaeresis, Odiaeresis,       acute       ]	};
    key <AC11>	{ [ adiaeresis, Adiaeresis, asciicircum       ]	};

    key <BKSL>	{ [ numbersign, apostrophe,       grave       ]	};
};

partial alphanumeric_keys
xkb_symbols "dsb"
{
	include "latin(basic)"
	name[Group1] = "Lower Sorbian";
	key <AB01> { [              z,              Z,         zcaron,         Zcaron ] };
	key <AB02> { [              x,              X,         zacute,         Zacute ] };
	key <AB03> { [              c,              C,         cacute,         Cacute ] };
	key <AB04> { [              v,              V,         ccaron,         Ccaron ] };
	key <AB06> { [              n,              N,         nacute,         Nacute ] };
	key <AC02> { [              s,              S,         sacute,         Sacute ] };
	key <AC03> { [              d,              D,         scaron,         Scaron ] };
	key <AC04> { [              f,              F                                 ] };
	key <AD01> { [              q,              Q                                 ] };
	key <AD02> { [              w,              W                                 ] };
	key <AD03> { [              e,              E,         ecaron,         Ecaron ] };
	key <AD04> { [              r,              R,         racute,         Racute ] };
	key <AD05> { [              t,              T,          U20B5,       EuroSign ] };
	key <AD09> { [              o,              O,         oacute,         Oacute ] };
	include "kpdl(comma)"
	include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "dsb_qwertz"
{
	include "latin(basic)"
	name[Group1] = "Lower Sorbian (qwertz)";
	key <AB01> { [              y,              Y                                 ] };
	key <AB02> { [              x,              X                                 ] };
	key <AB03> { [              c,              C,         cacute,         Cacute ] };
	key <AB04> { [              v,              V,         ccaron,         Ccaron ] };
	key <AB06> { [              n,              N,         nacute,         Nacute ] };
	key <AC02> { [              s,              S,         sacute,         Sacute ] };
	key <AC03> { [              d,              D,         scaron,         Scaron ] };
	key <AC04> { [              f,              F                                 ] };
	key <AD01> { [              q,              Q                                 ] };
	key <AD02> { [              w,              W                                 ] };
	key <AD03> { [              e,              E,         ecaron,         Ecaron ] };
	key <AD04> { [              r,              R,         racute,         Racute ] };
	key <AD05> { [              t,              T,          U20B5,       EuroSign ] };
	key <AD06> { [              z,              Z,         zcaron,         Zcaron ] };
	key <AD07> { [              u,              U,         zacute,         Zacute ] };
	key <AD09> { [              o,              O,         oacute,         Oacute ] };
	include "kpdl(comma)"
	include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "qwerty" {

    // This layout should work exactly as a de with the exception 
    // of 'Z' and 'Y' keys, which are in the qwerty style (ie. swapped).
    // 2008 by Matej Košík <kosik@fiit.stuba.sk>

    include "de(basic)"

    name[Group1] = "German (qwerty)";

    key <AB01>	{ [         z,          Z,     leftarrow,         yen ]	};
    key <AD06>	{ [         y,          Y, guillemotleft,        less ]	};
};

// layout for Russian letters on an german keyboard
// based on US-RU layout by Ivan Popov <pin@konvalo.org> 2005-07-17
// adopted for german layout by Alexey Fisher <bug-track@fisher-privat.net> 2010-08-19

partial alphanumeric_keys
xkb_symbols "ru" {

    include "de(basic)"

    name[Group1]= "Russian (Germany, phonetic)";

    key <LatA> { [        Cyrillic_a,        Cyrillic_A ] };
    key <LatB> { [       Cyrillic_be,       Cyrillic_BE ] };
    key <LatW> { [       Cyrillic_ve,       Cyrillic_VE ] };
    key <LatG> { [      Cyrillic_ghe,      Cyrillic_GHE ] };
    key <LatD> { [       Cyrillic_de,       Cyrillic_DE ] };
    key <LatE> { [       Cyrillic_ie,       Cyrillic_IE ] };
    key <TLDE> { [       Cyrillic_io,       Cyrillic_IO, asciitilde ] };
    key <LatX> { [      Cyrillic_zhe,      Cyrillic_ZHE ] };
    key <LatZ> { [       Cyrillic_ze,       Cyrillic_ZE ] };
    key <LatI> { [        Cyrillic_i,        Cyrillic_I ] };
    key <LatJ> { [   Cyrillic_shorti,   Cyrillic_SHORTI ] };
    key <LatK> { [       Cyrillic_ka,       Cyrillic_KA ] };
    key <LatL> { [       Cyrillic_el,       Cyrillic_EL ] };
    key <LatM> { [       Cyrillic_em,       Cyrillic_EM ] };
    key <LatN> { [       Cyrillic_en,       Cyrillic_EN ] };
    key <LatO> { [        Cyrillic_o,        Cyrillic_O ] };
    key <LatP> { [       Cyrillic_pe,       Cyrillic_PE ] };
    key <LatR> { [       Cyrillic_er,       Cyrillic_ER ] };
    key <LatS> { [       Cyrillic_es,       Cyrillic_ES ] };
    key <LatT> { [       Cyrillic_te,       Cyrillic_TE ] };
    key <LatU> { [        Cyrillic_u,        Cyrillic_U ] };
    key <LatF> { [       Cyrillic_ef,       Cyrillic_EF ] };
    key <LatH> { [       Cyrillic_ha,       Cyrillic_HA ] };
    key <LatC> { [      Cyrillic_tse,      Cyrillic_TSE ] };
    key <AC10> { [      Cyrillic_che,      Cyrillic_CHE ] };
    key <AD11> { [      Cyrillic_sha,      Cyrillic_SHA ] };
    key <AD12> { [    Cyrillic_shcha,    Cyrillic_SHCHA, plus, asterisk ] };
    key <AE12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN ] };
    key <LatY> { [     Cyrillic_yeru,     Cyrillic_YERU ] };
    key <LatV> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN ] };
    key <AC11> { [        Cyrillic_e,        Cyrillic_E ] };
    key <BKSL> { [       Cyrillic_yu,       Cyrillic_YU, numbersign, apostrophe ] };
    key <LatQ> { [       Cyrillic_ya,       Cyrillic_YA ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "pl" {

    // Combined layout for entering both German and Polish symbols on a German physical
    // keyboard. Based on German (eliminate dead keys) and Polish (basic). Polish diacritics
    // on AltGr+"acelnosxz". EuroSign moved to AE04 (AltGr+dollar key) to avoid conflict
    // with Polish eogonek.
    //
    // https://github.com/kontextify/xkeyboard-config

    include "latin(type4)"
 
    name[Group1]= "Polish (Germany, eliminate dead keys)";

    include "de(nodeadkeys)"
    key <AE04>	{ [         4,     dollar,   EuroSign,     currency ]	};

    key <AD01>  { [         q,          Q ] };
    key <AD02>  { [         w,          W ] };
    key <AD03>	{ [         e,          E,      eogonek,      Eogonek ]	};
    key <AD09>	{ [         o,          O,       oacute,       Oacute ]	};
    key <AC01>	{ [         a,          A,      aogonek,      Aogonek ]	};
    key <AC02>	{ [         s,          S,       sacute,       Sacute ]	};
    key <AC04>  { [         f,          F ] };
    key <AD06>	{ [         z,          Z,    zabovedot,    Zabovedot ]	};
    key <AB02>	{ [         x,          X,       zacute,       Zacute ]	};
    key <AB03>	{ [         c,          C,       cacute,       Cacute ]	};
    key <AB06>	{ [         n,          N,       nacute,       Nacute ]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "htcdream" {
        include "inet(htcdream)"

        name[Group1]= "German";

        //second row
        key <AD01> { [ q, Q, Tab, Tab ] };
        key <AD02> { [ w, W, grave, grave ] };
        key <AD03> { [ e, E, EuroSign, EuroSign ] };
        key <AD04> { [ r, R, underscore, underscore ] };
        key <AD05> { [ t, T, sterling, sterling] };
        key <AD06> { [ z, Z, division, division ] };
        key <AD07> { [ u, U, udiaeresis, udiaeresis ] };
        key <AD08> { [ i, I, minus, minus ] };
        key <AD09> { [ o, O, odiaeresis, odiaeresis ] };
        key <AD10> { [ p, P, equal, equal ] };

        //third row
        key <AC01> { [ a, A, adiaeresis, adiaeresis ] };
        key <AC02> { [ s, S, ssharp, ssharp] };
        key <AC03> { [ d ,D, backslash, backslash ] };
        key <AC04> { [ f, F, braceleft, braceleft ] };
        key <AC05> { [ g, G, braceright, braceright ] };
        key <AC06> { [ h, H, multiply, multiply ] };
        key <AC07> { [ j, J, colon, colon ] };
        key <AC08> { [ k, K, plus, plus ] };
        key <AC09> { [ l, L, apostrophe, apostrophe ] };

        //forth row
        key <AB01> { [ y, Y, bar, bar ] };
        key <AB02> { [ x, X, bracketleft, bracketleft ] };
        key <AB03> { [ c, C, bracketright, bracketright ] };
        key <AB04> { [ v, V, less, less ] };
        key <AB05> { [ b, B, greater, greater ] };
        key <AB06> { [ n, N, semicolon, semicolon ] };
        key <AB07> { [ m, M, quotedbl, quotedbl ] };
        key <AB08> { [ comma, comma, question, question ] };

        //fifth row
        key <FK15> { [ at, at, asciitilde, asciitilde ] };

        include "level3(alt_switch)"
};

partial alphanumeric_keys
xkb_symbols "tr" {

    // add turkish-specific letters to the basic German layout.
    // Turkish symbols are accessible with combination of <AltGr> and
    // 'i', 's', 'g', 'c'' (+<Shift> for capital letters).

    include "de(basic)"

    name[Group1]="Turkish (Germany)";

    key <AD08>  { [    i,      I,      U0131,  U0130   ] };
    key <AC02>  { [    s,      S,      U015F,  U015E   ] };
    key <AC05>  { [    g,      G,      U011F,  U011E   ] };
    key <AB03>  { [    c,      C,      U0E7,   U0C7    ] };

};

// EXTRAS:

partial alphanumeric_keys
xkb_symbols "us" {
    include "us"

    name[Group1]="German (US keyboard with German letters)";

    key <AC01> { [           a,          A, adiaeresis, Adiaeresis ] };
    key <AC02> { [           s,          S,     ssharp,     ssharp ] };
    key <AC10> { [   semicolon,      colon, odiaeresis, Odiaeresis ] };
    key <AC11> { [  apostrophe,   quotedbl, adiaeresis, Adiaeresis ] };
    key <AD03> { [           e,          E,   EuroSign,   EuroSign ] };
    key <AD07> { [           u,          U, udiaeresis, Udiaeresis ] };
    key <AD09> { [           o,          O, odiaeresis, Odiaeresis ] };
    key <AD11> { [ bracketleft,  braceleft, udiaeresis, Udiaeresis ] };
    key <AE03> { [           3, numbersign,    section,    section ] };
    key <AE11> { [       minus, underscore,     ssharp,   question ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "hu" {

    // modify the basic German layout to not have any dead keys and add Hungarian letters

    include "de(basic)"
    name[Group1]="German (with Hungarian letters and no dead keys)";

    key <AB01> { [         y,          Y, guillemotleft,        less ] };
    key <AC10> { [odiaeresis, Odiaeresis,        eacute,      Eacute ] };
    key <AC11> { [adiaeresis, Adiaeresis,        aacute,       Aacute] };
    key <AD03> { [         e,          E,      EuroSign,    EuroSign ] };
    key <AD06> { [         z,          Z,     leftarrow,         yen ] };
    key <AD07> { [         u,          U,        uacute,      Uacute ] };
    key <AD08> { [         i,          I,        iacute,      Iacute ] };
    key <AD09> { [         o,          O,  odoubleacute,Odoubleacute ] };
    key <AD11> { [udiaeresis, Udiaeresis,  udoubleacute,Udoubleacute ] };
    key <AD12> { [      plus,   asterisk,    asciitilde,      macron ] };
    key <AE12> { [     acute,      grave,        oacute,      Oacute ] };
    key <BKSL> { [numbersign, apostrophe,         grave,       grave ] };
    key <TLDE> { [asciicircum,    degree,       notsign,     notsign ] };
};

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/de(sun_type6)"
};

partial alphanumeric_keys
xkb_symbols "adnw_base" {
    include "de(neo_base)"

    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";
    key <AD04> { [ period,                  enfilledcircbullet,      NoSymbol,                U03D1,                   NoSymbol,                NoSymbol,                U21A6,                   NoSymbol                 ] };
    key <AB04> { [ comma,                   endash,                  NoSymbol,                U03F1,                   NoSymbol,                NoSymbol,                U21D2,                   NoSymbol                 ] };

    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AD01> { [ k,                       K,                       NoSymbol,                Greek_kappa,             NoSymbol,                NoSymbol,                multiply,                NoSymbol                 ] };
    key <AD02> { [ u,                       U,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                includedin,              NoSymbol                 ] };
    key <AD03> { [ udiaeresis,              Udiaeresis,              NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                union,                   NoSymbol                 ] };
    key <AD05> { [ adiaeresis,              Adiaeresis,              NoSymbol,                Greek_eta,               NoSymbol,                NoSymbol,                U2135,                   NoSymbol                 ] };
    key <AD06> { [ v,                       V,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                radical,                 NoSymbol                 ] };
    key <AD07> { [ g,                       G,                       NoSymbol,                Greek_gamma,             NoSymbol,                NoSymbol,                Greek_GAMMA,             NoSymbol                 ] };
    key <AD08> { [ c,                       C,                       NoSymbol,                Greek_chi,               NoSymbol,                NoSymbol,                U2102,                   NoSymbol                 ] };
    key <AD09> { [ l,                       L,                       NoSymbol,                Greek_lambda,            NoSymbol,                NoSymbol,                Greek_LAMBDA,            NoSymbol                 ] };
    key <AD10> { [ j,                       J,                       NoSymbol,                Greek_theta,             NoSymbol,                NoSymbol,                Greek_THETA,             NoSymbol                 ] };
    key <AD11> { [ f,                       F,                       NoSymbol,                Greek_phi,               NoSymbol,                NoSymbol,                Greek_PHI,               NoSymbol                 ] };
    key <AC01> { [ h,                       H,                       NoSymbol,                Greek_psi,               NoSymbol,                NoSymbol,                Greek_PSI,               NoSymbol                 ] };
    key <AC02> { [ i,                       I,                       NoSymbol,                Greek_iota,              NoSymbol,                NoSymbol,                integral,                NoSymbol                 ] };
    key <AC03> { [ e,                       E,                       NoSymbol,                Greek_epsilon,           NoSymbol,                NoSymbol,                U2203,                   NoSymbol                 ] };
    key <AC04> { [ a,                       A,                       NoSymbol,                Greek_alpha,             NoSymbol,                NoSymbol,                U2200,                   NoSymbol                 ] };
    key <AC05> { [ o,                       O,                       NoSymbol,                Greek_omicron,           NoSymbol,                NoSymbol,                elementof,               NoSymbol                 ] };
    key <AC06> { [ d,                       D,                       NoSymbol,                Greek_delta,             NoSymbol,                NoSymbol,                Greek_DELTA,             NoSymbol                 ] };
    key <AC07> { [ t,                       T,                       NoSymbol,                Greek_tau,               NoSymbol,                NoSymbol,                partialderivative,       NoSymbol                 ] };
    key <AC08> { [ r,                       R,                       NoSymbol,                Greek_rho,               NoSymbol,                NoSymbol,                U211D,                   NoSymbol                 ] };
    key <AC09> { [ n,                       N,                       NoSymbol,                Greek_nu,                NoSymbol,                NoSymbol,                U2115,                   NoSymbol                 ] };
    key <AC10> { [ s,                       S,                       NoSymbol,                Greek_sigma,             NoSymbol,                NoSymbol,                Greek_SIGMA,             NoSymbol                 ] };
    key <AC11> { [ ssharp,                  U1E9E,                   NoSymbol,                Greek_finalsmallsigma,   NoSymbol,                NoSymbol,                jot,                     NoSymbol                 ] };
    key <AB01> { [ x,                       X,                       NoSymbol,                Greek_xi,                NoSymbol,                NoSymbol,                Greek_XI,                NoSymbol                 ] };
    key <AB02> { [ y,                       Y,                       NoSymbol,                Greek_upsilon,           NoSymbol,                NoSymbol,                nabla,                   NoSymbol                 ] };
    key <AB03> { [ odiaeresis,              Odiaeresis,              NoSymbol,                U03F5,                   NoSymbol,                NoSymbol,                intersection,            NoSymbol                 ] };
    key <AB05> { [ q,                       Q,                       NoSymbol,                U03D5,                   NoSymbol,                NoSymbol,                U211A,                   NoSymbol                 ] };
    key <AB06> { [ b,                       B,                       NoSymbol,                Greek_beta,              NoSymbol,                NoSymbol,                U21D0,                   NoSymbol                 ] };
    key <AB07> { [ p,                       P,                       NoSymbol,                Greek_pi,                NoSymbol,                NoSymbol,                Greek_PI,                NoSymbol                 ] };
    key <AB08> { [ w,                       W,                       NoSymbol,                Greek_omega,             NoSymbol,                NoSymbol,                Greek_OMEGA,             NoSymbol                 ] };
    key <AB09> { [ m,                       M,                       NoSymbol,                Greek_mu,                NoSymbol,                NoSymbol,                ifonlyif,                NoSymbol                 ] };
    key <AB10> { [ z,                       Z,                       NoSymbol,                Greek_zeta,              NoSymbol,                NoSymbol,                U2124,                   NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "adnw" {

    include "de(adnw_base)"

    name[Group1]= "German (Aus der Neo-Welt)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch_lock)"
    include "level5(ralt_switch_lock)"
};

partial alphanumeric_keys
xkb_symbols "koy_base" {
    include "de(neo_base)"

    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";
    key <AD02> { [ period,                  enfilledcircbullet,      NoSymbol,                U03D1,                   NoSymbol,                NoSymbol,                U21A6,                   NoSymbol                 ] };
    key <AD04> { [ comma,                   endash,                  NoSymbol,                U03F1,                   NoSymbol,                NoSymbol,                U21D2,                   NoSymbol                 ] };

    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AD01> { [ k,                       K,                       NoSymbol,                Greek_kappa,             NoSymbol,                NoSymbol,                multiply,                NoSymbol                 ] };
    key <AD03> { [ o,                       O,                       NoSymbol,                Greek_omicron,           NoSymbol,                NoSymbol,                elementof,               NoSymbol                 ] };
    key <AD05> { [ y,                       Y,                       NoSymbol,                Greek_upsilon,           NoSymbol,                NoSymbol,                nabla,                   NoSymbol                 ] };
    key <AD06> { [ v,                       V,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                radical,                 NoSymbol                 ] };
    key <AD07> { [ g,                       G,                       NoSymbol,                Greek_gamma,             NoSymbol,                NoSymbol,                Greek_GAMMA,             NoSymbol                 ] };
    key <AD08> { [ c,                       C,                       NoSymbol,                Greek_chi,               NoSymbol,                NoSymbol,                U2102,                   NoSymbol                 ] };
    key <AD09> { [ l,                       L,                       NoSymbol,                Greek_lambda,            NoSymbol,                NoSymbol,                Greek_LAMBDA,            NoSymbol                 ] };
    key <AD10> { [ ssharp,                  U1E9E,                   NoSymbol,                Greek_finalsmallsigma,   NoSymbol,                NoSymbol,                jot,                     NoSymbol                 ] };
    key <AD11> { [ z,                       Z,                       NoSymbol,                Greek_zeta,              NoSymbol,                NoSymbol,                U2124,                   NoSymbol                 ] };
    key <AC01> { [ h,                       H,                       NoSymbol,                Greek_psi,               NoSymbol,                NoSymbol,                Greek_PSI,               NoSymbol                 ] };
    key <AC02> { [ a,                       A,                       NoSymbol,                Greek_alpha,             NoSymbol,                NoSymbol,                U2200,                   NoSymbol                 ] };
    key <AC03> { [ e,                       E,                       NoSymbol,                Greek_epsilon,           NoSymbol,                NoSymbol,                U2203,                   NoSymbol                 ] };
    key <AC04> { [ i,                       I,                       NoSymbol,                Greek_iota,              NoSymbol,                NoSymbol,                integral,                NoSymbol                 ] };
    key <AC05> { [ u,                       U,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                includedin,              NoSymbol                 ] };
    key <AC06> { [ d,                       D,                       NoSymbol,                Greek_delta,             NoSymbol,                NoSymbol,                Greek_DELTA,             NoSymbol                 ] };
    key <AC07> { [ t,                       T,                       NoSymbol,                Greek_tau,               NoSymbol,                NoSymbol,                partialderivative,       NoSymbol                 ] };
    key <AC08> { [ r,                       R,                       NoSymbol,                Greek_rho,               NoSymbol,                NoSymbol,                U211D,                   NoSymbol                 ] };
    key <AC09> { [ n,                       N,                       NoSymbol,                Greek_nu,                NoSymbol,                NoSymbol,                U2115,                   NoSymbol                 ] };
    key <AC10> { [ s,                       S,                       NoSymbol,                Greek_sigma,             NoSymbol,                NoSymbol,                Greek_SIGMA,             NoSymbol                 ] };
    key <AC11> { [ f,                       F,                       NoSymbol,                Greek_phi,               NoSymbol,                NoSymbol,                Greek_PHI,               NoSymbol                 ] };
    key <AB01> { [ x,                       X,                       NoSymbol,                Greek_xi,                NoSymbol,                NoSymbol,                Greek_XI,                NoSymbol                 ] };
    key <AB02> { [ q,                       Q,                       NoSymbol,                U03D5,                   NoSymbol,                NoSymbol,                U211A,                   NoSymbol                 ] };
    key <AB03> { [ adiaeresis,              Adiaeresis,              NoSymbol,                Greek_eta,               NoSymbol,                NoSymbol,                U2135,                   NoSymbol                 ] };
    key <AB04> { [ udiaeresis,              Udiaeresis,              NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                union,                   NoSymbol                 ] };
    key <AB05> { [ odiaeresis,              Odiaeresis,              NoSymbol,                U03F5,                   NoSymbol,                NoSymbol,                intersection,            NoSymbol                 ] };
    key <AB06> { [ b,                       B,                       NoSymbol,                Greek_beta,              NoSymbol,                NoSymbol,                U21D0,                   NoSymbol                 ] };
    key <AB07> { [ p,                       P,                       NoSymbol,                Greek_pi,                NoSymbol,                NoSymbol,                Greek_PI,                NoSymbol                 ] };
    key <AB08> { [ w,                       W,                       NoSymbol,                Greek_omega,             NoSymbol,                NoSymbol,                Greek_OMEGA,             NoSymbol                 ] };
    key <AB09> { [ m,                       M,                       NoSymbol,                Greek_mu,                NoSymbol,                NoSymbol,                ifonlyif,                NoSymbol                 ] };
    key <AB10> { [ j,                       J,                       NoSymbol,                Greek_theta,             NoSymbol,                NoSymbol,                Greek_THETA,             NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "koy" {

    include "de(koy_base)"

    name[Group1]= "German (KOY)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch_lock)"
    include "level5(ralt_switch_lock)"
};

partial alphanumeric_keys
xkb_symbols "bone_base" {
    include "de(neo_base)"

    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";
    key <AB08> { [ comma,                   endash,                  NoSymbol,                U03F1,                   NoSymbol,                NoSymbol,                U21D2,                   NoSymbol                 ] };
    key <AB09> { [ period,                  enfilledcircbullet,      NoSymbol,                U03D1,                   NoSymbol,                NoSymbol,                U21A6,                   NoSymbol                 ] };

    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AD01> { [ j,                       J,                       NoSymbol,                Greek_theta,             NoSymbol,                NoSymbol,                Greek_THETA,             NoSymbol                 ] };
    key <AD02> { [ d,                       D,                       NoSymbol,                Greek_delta,             NoSymbol,                NoSymbol,                Greek_DELTA,             NoSymbol                 ] };
    key <AD03> { [ u,                       U,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                includedin,              NoSymbol                 ] };
    key <AD04> { [ a,                       A,                       NoSymbol,                Greek_alpha,             NoSymbol,                NoSymbol,                U2200,                   NoSymbol                 ] };
    key <AD05> { [ x,                       X,                       NoSymbol,                Greek_xi,                NoSymbol,                NoSymbol,                Greek_XI,                NoSymbol                 ] };
    key <AD06> { [ p,                       P,                       NoSymbol,                Greek_pi,                NoSymbol,                NoSymbol,                Greek_PI,                NoSymbol                 ] };
    key <AD07> { [ h,                       H,                       NoSymbol,                Greek_psi,               NoSymbol,                NoSymbol,                Greek_PSI,               NoSymbol                 ] };
    key <AD08> { [ l,                       L,                       NoSymbol,                Greek_lambda,            NoSymbol,                NoSymbol,                Greek_LAMBDA,            NoSymbol                 ] };
    key <AD09> { [ m,                       M,                       NoSymbol,                Greek_mu,                NoSymbol,                NoSymbol,                ifonlyif,                NoSymbol                 ] };
    key <AD10> { [ w,                       W,                       NoSymbol,                Greek_omega,             NoSymbol,                NoSymbol,                Greek_OMEGA,             NoSymbol                 ] };
    key <AD11> { [ ssharp,                  U1E9E,                   NoSymbol,                Greek_finalsmallsigma,   NoSymbol,                NoSymbol,                jot,                     NoSymbol                 ] };
    key <AC01> { [ c,                       C,                       NoSymbol,                Greek_chi,               NoSymbol,                NoSymbol,                U2102,                   NoSymbol                 ] };
    key <AC02> { [ t,                       T,                       NoSymbol,                Greek_tau,               NoSymbol,                NoSymbol,                partialderivative,       NoSymbol                 ] };
    key <AC03> { [ i,                       I,                       NoSymbol,                Greek_iota,              NoSymbol,                NoSymbol,                integral,                NoSymbol                 ] };
    key <AC04> { [ e,                       E,                       NoSymbol,                Greek_epsilon,           NoSymbol,                NoSymbol,                U2203,                   NoSymbol                 ] };
    key <AC05> { [ o,                       O,                       NoSymbol,                Greek_omicron,           NoSymbol,                NoSymbol,                elementof,               NoSymbol                 ] };
    key <AC06> { [ b,                       B,                       NoSymbol,                Greek_beta,              NoSymbol,                NoSymbol,                U21D0,                   NoSymbol                 ] };
    key <AC07> { [ n,                       N,                       NoSymbol,                Greek_nu,                NoSymbol,                NoSymbol,                U2115,                   NoSymbol                 ] };
    key <AC08> { [ r,                       R,                       NoSymbol,                Greek_rho,               NoSymbol,                NoSymbol,                U211D,                   NoSymbol                 ] };
    key <AC09> { [ s,                       S,                       NoSymbol,                Greek_sigma,             NoSymbol,                NoSymbol,                Greek_SIGMA,             NoSymbol                 ] };
    key <AC10> { [ g,                       G,                       NoSymbol,                Greek_gamma,             NoSymbol,                NoSymbol,                Greek_GAMMA,             NoSymbol                 ] };
    key <AC11> { [ q,                       Q,                       NoSymbol,                U03D5,                   NoSymbol,                NoSymbol,                U211A,                   NoSymbol                 ] };
    key <AB01> { [ f,                       F,                       NoSymbol,                Greek_phi,               NoSymbol,                NoSymbol,                Greek_PHI,               NoSymbol                 ] };
    key <AB02> { [ v,                       V,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                radical,                 NoSymbol                 ] };
    key <AB03> { [ udiaeresis,              Udiaeresis,              NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                union,                   NoSymbol                 ] };
    key <AB04> { [ adiaeresis,              Adiaeresis,              NoSymbol,                Greek_eta,               NoSymbol,                NoSymbol,                U2135,                   NoSymbol                 ] };
    key <AB05> { [ odiaeresis,              Odiaeresis,              NoSymbol,                U03F5,                   NoSymbol,                NoSymbol,                intersection,            NoSymbol                 ] };
    key <AB06> { [ y,                       Y,                       NoSymbol,                Greek_upsilon,           NoSymbol,                NoSymbol,                nabla,                   NoSymbol                 ] };
    key <AB07> { [ z,                       Z,                       NoSymbol,                Greek_zeta,              NoSymbol,                NoSymbol,                U2124,                   NoSymbol                 ] };
    key <AB10> { [ k,                       K,                       NoSymbol,                Greek_kappa,             NoSymbol,                NoSymbol,                multiply,                NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "bone" {

    include "de(bone_base)"

    name[Group1]= "German (Bone)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch_lock)"
    include "level5(ralt_switch_lock)"
};

partial alphanumeric_keys
xkb_symbols "bone_eszett_home_base" {
    include "de(bone_base)"

    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AD11> { [ q,                       Q,                       NoSymbol,                U03D5,                   NoSymbol,                NoSymbol,                U211A,                   NoSymbol                 ] };
    key <AC11> { [ ssharp,                  U1E9E,                   NoSymbol,                Greek_finalsmallsigma,   NoSymbol,                NoSymbol,                jot,                     NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "bone_eszett_home" {

    include "de(bone_eszett_home_base)"

    name[Group1]= "German (Bone, eszett home row)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch_lock)"
    include "level5(ralt_switch_lock)"
};

partial alphanumeric_keys
xkb_symbols "neo_qwertz_base" {
    include "de(neo_base)"

    key.type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK";
    key <AB08> { [ comma,                   endash,                  NoSymbol,                U03F1,                   NoSymbol,                NoSymbol,                U21D2,                   NoSymbol                 ] };
    key <AB09> { [ period,                  enfilledcircbullet,      NoSymbol,                U03D1,                   NoSymbol,                NoSymbol,                U21A6,                   NoSymbol                 ] };
    key <AB10> { [ minus,                   emdash,                  NoSymbol,                U2011,                   NoSymbol,                NoSymbol,                hyphen,                  NoSymbol                 ] };

    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AE11> { [ ssharp,                  U1E9E,                   NoSymbol,                Greek_finalsmallsigma,   NoSymbol,                NoSymbol,                jot,                     NoSymbol                 ] };
    key <AD01> { [ q,                       Q,                       NoSymbol,                U03D5,                   NoSymbol,                NoSymbol,                U211A,                   NoSymbol                 ] };
    key <AD02> { [ w,                       W,                       NoSymbol,                Greek_omega,             NoSymbol,                NoSymbol,                Greek_OMEGA,             NoSymbol                 ] };
    key <AD03> { [ e,                       E,                       NoSymbol,                Greek_epsilon,           NoSymbol,                NoSymbol,                U2203,                   NoSymbol                 ] };
    key <AD04> { [ r,                       R,                       NoSymbol,                Greek_rho,               NoSymbol,                NoSymbol,                U211D,                   NoSymbol                 ] };
    key <AD05> { [ t,                       T,                       NoSymbol,                Greek_tau,               NoSymbol,                NoSymbol,                partialderivative,       NoSymbol                 ] };
    key <AD06> { [ z,                       Z,                       NoSymbol,                Greek_zeta,              NoSymbol,                NoSymbol,                U2124,                   NoSymbol                 ] };
    key <AD07> { [ u,                       U,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                includedin,              NoSymbol                 ] };
    key <AD08> { [ i,                       I,                       NoSymbol,                Greek_iota,              NoSymbol,                NoSymbol,                integral,                NoSymbol                 ] };
    key <AD09> { [ o,                       O,                       NoSymbol,                Greek_omicron,           NoSymbol,                NoSymbol,                elementof,               NoSymbol                 ] };
    key <AD10> { [ p,                       P,                       NoSymbol,                Greek_pi,                NoSymbol,                NoSymbol,                Greek_PI,                NoSymbol                 ] };
    key <AD11> { [ udiaeresis,              Udiaeresis,              NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                union,                   NoSymbol                 ] };
    key <AC01> { [ a,                       A,                       NoSymbol,                Greek_alpha,             NoSymbol,                NoSymbol,                U2200,                   NoSymbol                 ] };
    key <AC02> { [ s,                       S,                       NoSymbol,                Greek_sigma,             NoSymbol,                NoSymbol,                Greek_SIGMA,             NoSymbol                 ] };
    key <AC03> { [ d,                       D,                       NoSymbol,                Greek_delta,             NoSymbol,                NoSymbol,                Greek_DELTA,             NoSymbol                 ] };
    key <AC04> { [ f,                       F,                       NoSymbol,                Greek_phi,               NoSymbol,                NoSymbol,                Greek_PHI,               NoSymbol                 ] };
    key <AC05> { [ g,                       G,                       NoSymbol,                Greek_gamma,             NoSymbol,                NoSymbol,                Greek_GAMMA,             NoSymbol                 ] };
    key <AC06> { [ h,                       H,                       NoSymbol,                Greek_psi,               NoSymbol,                NoSymbol,                Greek_PSI,               NoSymbol                 ] };
    key <AC07> { [ j,                       J,                       NoSymbol,                Greek_theta,             NoSymbol,                NoSymbol,                Greek_THETA,             NoSymbol                 ] };
    key <AC08> { [ k,                       K,                       NoSymbol,                Greek_kappa,             NoSymbol,                NoSymbol,                multiply,                NoSymbol                 ] };
    key <AC09> { [ l,                       L,                       NoSymbol,                Greek_lambda,            NoSymbol,                NoSymbol,                Greek_LAMBDA,            NoSymbol                 ] };
    key <AC10> { [ odiaeresis,              Odiaeresis,              NoSymbol,                U03F5,                   NoSymbol,                NoSymbol,                intersection,            NoSymbol                 ] };
    key <AC11> { [ adiaeresis,              Adiaeresis,              NoSymbol,                Greek_eta,               NoSymbol,                NoSymbol,                U2135,                   NoSymbol                 ] };
    key <AB01> { [ y,                       Y,                       NoSymbol,                Greek_upsilon,           NoSymbol,                NoSymbol,                nabla,                   NoSymbol                 ] };
    key <AB02> { [ x,                       X,                       NoSymbol,                Greek_xi,                NoSymbol,                NoSymbol,                Greek_XI,                NoSymbol                 ] };
    key <AB03> { [ c,                       C,                       NoSymbol,                Greek_chi,               NoSymbol,                NoSymbol,                U2102,                   NoSymbol                 ] };
    key <AB04> { [ v,                       V,                       NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                radical,                 NoSymbol                 ] };
    key <AB05> { [ b,                       B,                       NoSymbol,                Greek_beta,              NoSymbol,                NoSymbol,                U21D0,                   NoSymbol                 ] };
    key <AB06> { [ n,                       N,                       NoSymbol,                Greek_nu,                NoSymbol,                NoSymbol,                U2115,                   NoSymbol                 ] };
    key <AB07> { [ m,                       M,                       NoSymbol,                Greek_mu,                NoSymbol,                NoSymbol,                ifonlyif,                NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "neo_qwertz" {

    include "de(neo_qwertz_base)"

    name[Group1]= "German (Neo qwertz)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch_lock)"
    include "level5(ralt_switch_lock)"
};

partial alphanumeric_keys
xkb_symbols "neo_qwerty_base" {
    include "de(neo_qwertz_base)"

    key.type[Group1] = "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK";
    key <AD06> { [ y,                       Y,                       NoSymbol,                Greek_upsilon,           NoSymbol,                NoSymbol,                nabla,                   NoSymbol                 ] };
    key <AB01> { [ z,                       Z,                       NoSymbol,                Greek_zeta,              NoSymbol,                NoSymbol,                U2124,                   NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "neo_qwerty" {

    include "de(neo_qwerty_base)"

    name[Group1]= "German (Neo qwerty)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch_lock)"
    include "level5(ralt_switch_lock)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       // based on a keyboard map from an 'xkb/symbols/dk' file

default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin(type2)"

    name[Group1]="Danish";

    key <AE11>	{ [      plus,   question,    plusminus, questiondown ]	};
    key <AE12>	{ [dead_acute, dead_grave,          bar,    brokenbar ]	};


    key <AC10>	{ [        ae,        AE,   dead_acute, dead_doubleacute ] };
    key <AC11>	{ [    oslash,  Ooblique, dead_circumflex, dead_caron ]	};
    key <TLDE>	{ [   onehalf,   section, threequarters,    paragraph ]	};

    key <BKSL>	{ [apostrophe,   asterisk, dead_doubleacute, multiply ]	};

    key <LSGT>	{ [      less,    greater,    backslash,      notsign ]	};

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    include "dk(basic)"

    name[Group1]="Danish (eliminate dead keys)";

    key <AE12>	{ [     acute,      grave,          bar,       ogonek ]	};
    key <AD11>	{ [     aring,      Aring,    diaeresis,       degree ]	};
    key <AD12>	{ [ diaeresis, asciicircum,  asciitilde,       macron ]	};
    key <AC10>	{ [        ae,         AE,        acute,  doubleacute ]	};
    key <AC11>	{ [    oslash,   Ooblique,  asciicircum,        caron ]	};
    key <BKSL>	{ [apostrophe,   asterisk,  doubleacute,     multiply ]	};
    key <AB08>	{ [     comma,  semicolon,      cedilla,       ogonek ]	};
    key <AB09>	{ [    period,      colon, periodcentered,   abovedot ]	};

};

partial alphanumeric_keys
xkb_symbols "winkeys" {

    include "dk(basic)"
    name[Group1] = "Danish (Winkeys)";
    include "eurosign(5)"
};

// Copied from macintosh_vndr/dk
partial alphanumeric_keys
xkb_symbols "mac" {

    include "dk"
    name[Group1]= "Danish (Macintosh)";

    key <SPCE>	{ [    space,       space, nobreakspace, nobreakspace ]	};
    key <AB10>	{ [    minus,  underscore,       hyphen,       macron ]	};
    include "kpdl(dot)"
};


partial alphanumeric_keys
xkb_symbols "mac_nodeadkeys" {
    include "dk(mac)"
    name[Group1]= "Danish (Macintosh, eliminate dead keys)";

    key <AE12>	{ [    acute,       grave,          bar,       ogonek ]	};
    key <AD12>	{ [diaeresis, asciicircum,   asciitilde,  dead_macron ]	};
};

partial alphanumeric_keys
xkb_symbols "dvorak" {
    include "no(dvorak)"

    name[Group1]= "Danish (Dvorak)";
    key <AD12> { [  asciitilde, asciicircum, dead_diaeresis, dead_tilde ] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/dk(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        // Tamazight en caractères latin 
// Noureddine LOUAHEDJ
// louahedj@noureddine.me

//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ ³ ¸ │ 1 ̨  │ 2 É │ 3 ˘ │ 4 — │ 5 – │ 6 ‑ │ 7 È │ 8 ™ │ 9 Ç │ 0 À │ ° ≠ │ + ± ┃ ⌫ Retour┃
// │ ² ¹ │ & ˇ │ é ~ │ " # │ ' { │ ( [ │ - | │ è ` │ _ \ │ ç ^ │ à @ │ ) ] │ = } ┃  arrière┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ A Æ │ Z Â │ E ¢ │ R Ṛ │ T Ṭ │ Y Ÿ │ U Û │ I Î │ O Ɛ │ P Ô │ ¨ ˚ │ £ Ø ┃Entrée ┃
// ┃Tab ↹  ┃ a æ │ z â │ e € │ r ṛ │ t ṭ │ y ÿ │ u û │ i î │ o ɛ │ p ô │ ^ ~ │ $ ø ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ Q Ä │ S Ṣ │ D Ḍ │ F ‚ │ G Ǧ │ H Ḥ │ J Ü │ K Ï │ L Ŀ │ M Ö │ % Ù │ µ ̄  ┃      ┃
// ┃Maj ⇬   ┃ q ä │ s ṣ │ d ḍ │ f ‘ │ g ǧ │ h ḥ │ j ü │ k ï │ l ŀ │ m ö │ ù ' │ * ` ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃ > ≥ │ W “ │ X ” │ C Č │ V Ɣ │ B ↑ │ N → │ ? … │ . . │ / ∕ │ § − ┃             ┃
// ┃Shift ⇧┃ < ≤ │ w « │ x » │ c č │ v ɣ │ b ↓ │ n ¬ │ , ¿ │ ; × │ : ÷ │ ! ¡ ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣         Espace fine insécable ⍽ ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ Espace       Espace insécable ⍽ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛


default partial alphanumeric_keys
xkb_symbols "la" {

    include "fr(oss)"

    name[Group1]="Berber (Algeria, Latin characters)";
    

    key <AD02>  { [ z,  Z,  0x1001E93,  0x1001E92   ] }; // z Z ẓ Ẓ
    key <AD04>  { [ r,  R,  0x1001E5B,  0x1001E5A   ] }; // r R ṛ Ṛ
    key <AD05>  { [ t,  T,  0x1001E6D,  0x1001E6C   ] }; // t T ṭ Ṭ
    key <AD09>  { [ o,  O,  0x100025B,  0x1000190   ] }; // o O ɛ Ɛ
    key <AC02>  { [ s,  S,  0x1001E63,  0x1001E62   ] }; // s s ṣ Ṣ
    key <AC03>  { [ d,  D,  0x1001E0D,  0x1001E0C   ] }; // d D ḍ Ḍ
    key <AC05>  { [ g,  G,  0x10001E7,  0x10001E6   ] }; // g G ǧ Ǧ
    key <AC06>  { [ h,  H,  0x1001E25,  0x1001E24   ] }; // h H ḥ Ḥ
    key <AB03>  { [ c,  C,  0x100010D,  0x100010C   ] }; // c C č Č
    key <AB04>  { [ v,  V,  0x1000263,  0x1000194   ] }; // v V ɣ Ɣ
 
    include "level3(ralt_switch)"
};


//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │     │ 1 ̨  │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ °   │ +   ┃ ⌫ Retour┃
// │ ²   │ &   │   ~ │ " # │ ' { │ ( [ │ - | │     │ _ \ │   ^ │   @ │ ) ] │ = } ┃  arrière┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃     │ ⵥ      │ ⵦ      │ ⵕ      │ ⵟ      │     │     │     │ ⵧ       │     │     │ £ Ø ┃Entrée ┃
// ┃Tab ↹  ┃ ⴰ        │ ⵣ  ⵤ  │ ⴻ       │ ⵔ      │ ⵜ   ⵝ │ ⵢ       │ ⵓ        │ ⵉ      │ ⵄ       │ ⵃ       │ ⵯ       │ $ ø ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ ⵈ      │ ⵚ      │ ⴹ  ⴺ │     │ ⴵ  ⴶ  │ ⵁ      │ ⵋ      │ ⴿ      │     │     │ % Ù │ µ ̄¯ ┃      ┃
// ┃Maj ⇬   ┃ ⵇ      │ ⵙ      │ ⴷ  ⴸ │ ⴼ       │ ⴳ  ⴴ │ ⵀ   ⵂ  │ ⵊ  ⵌ │ ⴽ   ⴾ │ ⵍ      │ ⵎ       │ ù ´ │ * ` ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃ > ¦ │     │ ⵆ       │ ⵞ      │ ⵗ    ⵠ │ ⴲ      │ ⵐ      │ ? … │ . ⋅ │ / ∕ │ § − ┃             ┃
// ┃Shift ⇧┃ < | │ ⵡ      │ ⵅ       │ ⵛ     │ ⵖ   ⵘ │ ⴱ  ⵒ  │ ⵏ    ⵑ   │ , ¿ │ ; × │ : ÷ │ ! ¡ ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣                                 ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ Espace                          ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial alphanumeric_keys
xkb_symbols "ber" {

    name[Group1]="Berber (Algeria, Tifinagh characters)";

    // First row
    key <TLDE>  { [ twosuperior,    threesuperior,  onesuperior,    dead_cedilla    ] }; // ² ³ ¹ ¸
    key <AE01>  { [ ampersand,  1,  dead_caron, dead_ogonek ] }; // & 1 ˇ ̨
    key <AE02>  { [ eacute, 2,  asciitilde, Eacute  ] }; // é 2 ~ É
    key <AE03>  { [ quotedbl,   3,  numbersign, dead_breve  ] }; // " 3 # ˘
    key <AE04>  { [ apostrophe, 4,  braceleft,  0x1002014   ] }; // ' 4 { — (tiret cadratin)
    key <AE05>  { [ parenleft,  5,  bracketleft,    0x1002013   ] }; // ( 5 [ – (tiret demi-cadratin)
    key <AE06>  { [ minus,  6,  bar,    0x1002011   ] }; // - 6 | ‑ (tiret insécable)
    key <AE07>  { [ egrave, 7,  grave,  Egrave  ] }; // è 7 ` È
    key <AE08>  { [ underscore, 8,  backslash,  trademark   ] }; // _ 8 \ ™
    key <AE09>  { [ ccedilla,   9,  asciicircum,    Ccedilla    ] }; // ç 9 ^ Ç
    key <AE10>  { [ agrave, 0,  at, Agrave  ] }; // à 0 @ À
    key <AE11>  { [ parenright, degree, bracketright,   notequal    ] }; // ) ° ] ≠
    key <AE12>  { [ equal,  plus,   braceright, plusminus   ] }; // = + } ±

    // Second row
    key <AD01>  { [ 0x1002D30   ] }; // ⴰ
    key <AD02>  { [ 0x1002D63,  0x1002D65,  0x1002D64   ] }; // ⵣ ⵥ ⵤ 
    key <AD03>  { [ 0x1002D3B,  0x1002D66   ] }; // ⴻ ⵦ
    key <AD04>  { [ 0x1002D54,  0x1002D55 ] }; // ⵔ ⵕ
    key <AD05>  { [ 0x1002D5C,  0x1002D5F,  0x1002D5D   ] }; // ⵜ ⵟ ⵝ
    key <AD06>  { [ 0x1002D62   ] }; // ⵢ
    key <AD07>  { [ 0x1002D53   ] }; // ⵓ 
    key <AD08>  { [ 0x1002D49   ] }; // ⵉ
    key <AD09>  { [ 0x1002D44,  0x1002D67   ] }; // ⵄ ⵧ
    key <AD10>  { [ 0x1002D43   ] }; // ⵃ
    key <AD11>  { [ 0x1002D6F   ] }; // ⵯ
    key <AD12>  { [ dollar, sterling,   oslash, Ooblique ] }; // $ £ ø Ø

    // Third row
    key <AC01>  { [ 0x1002D47,  0x1002D48   ] }; // ⵇ ⵈ 
    key <AC02>  { [ 0x1002D59,  0x1002D5A   ] }; // ⵙ ⵚ
    key <AC03>  { [ 0x1002D37,  0x1002D39,  0x1002D38,  0x1002D3A   ] }; // ⴷ ⴹ ⴸ ⴺ
    key <AC04>  { [ 0x1002D3C   ] }; // ⴼ
    key <AC05>  { [ 0x1002D33,  0x1002D35, 0x1002D34,   0x1002D36   ] }; // ⴳ ⴵ ⴴ ⴶ
    key <AC06>  { [ 0x1002D40,  0x1002D41,  0x1002D42   ] }; // ⵀ ⵁ ⵂ 
    key <AC07>  { [ 0x1002D4A,  0x1002D4B,  0x1002D4C   ] }; // ⵊ ⵋ ⵌ Ü
    key <AC08>  { [ 0x1002D3D,  0x1002D3F,  0x1002D3E   ] }; // ⴽ ⴿ ⴾ 
    key <AC09>  { [ 0x1002D4D   ] }; // ⵍ 
    key <AC10>  { [ 0x1002D4E   ] }; // ⵎ 
    key <AC11>  { [ ugrave, percent,    dead_acute, Ugrave  ] }; // ù % ' Ù
    key <BKSL>  { [ asterisk,   mu, dead_grave, dead_macron ] }; // * µ ` ̄

    // Fourth row
    key <LSGT>  { [ less,   greater,    lessthanequal,  greaterthanequal    ] }; // < > ≤ ≥
    key <AB01>  { [ 0x1002D61   ] }; // ⵡ
    key <AB02>  { [ 0x1002D45,  0x1002D46   ] }; // ⵅ ⵆ
    key <AB03>  { [ 0x1002D5B,  0x1002D5E   ] }; // ⵛ ⵞ
    key <AB04>  { [ 0x1002D56,  0x1002D57,  0x1002D58,  0x1002D60   ] }; // ⵖ ⵗ ⵘ ⵠ
    key <AB05>  { [ 0x1002D31,  0x1002D32,  0x1002D52   ] }; // ⴱ ⴲ ⵒ
    key <AB06>  { [ 0x1002D4F,  0x1002D50,  0x1002D51   ] }; // ⵏ ⵐ ⵑ
    key <AB07>  { [ comma,  question,   questiondown,   0x1002026   ] }; // , ? ¿ …
    key <AB08>  { [ semicolon,  period, multiply,   0x10022C5   ] }; // ; . × ⋅
    key <AB09>  { [ colon,  slash,  division,   0x1002215   ] }; // : / ÷ ∕
    key <AB10>  { [ exclam, section,    exclamdown, 0x1002212   ] }; // ! § ¡ −

    include "level3(ralt_switch)"
};

// Arabic AZERTY with modern Latin digits 
partial alphanumeric_keys
xkb_symbols "ar" {
    include "ara(azerty)"

    name[Group1]="Arabic (Algeria)";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {
    name[Group1]= "Empty";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           // Esperanto keyboard maps -- "Ekverto"
//
// Ekverto A ("legacy") (2004-01-10)
// Chusslove Illich (Ĉaslavo Iliĉo) <caslav.ilic@gmx.net>
//
// Ekverto B ("basic") (2006-12-02)
// Benno Schulenberg (Beno Sĥilenberĥ) <bensberg@justemail.net>
// Chusslove Illich (Ĉaslavo Iliĉo) <caslav.ilic@gmx.net>

default  partial alphanumeric_keys
xkb_symbols "basic" {

  include "us(basic)"
  name[Group1]= "Esperanto";

  key.type[Group1] = "FOUR_LEVEL_ALPHABETIC";

  key <AD01>  { [ scircumflex,  Scircumflex,  q,             Q          ] };
  key <AD02>  { [ gcircumflex,  Gcircumflex,  w,             W          ] };
  key <AB02>  { [ ccircumflex,  Ccircumflex,  x,             X          ] };
  key <AD06>  { [ ubreve,       Ubreve,       y,             Y          ] };

  key.type[Group1] = "FOUR_LEVEL_SEMIALPHABETIC";

  key <AD11>  { [ jcircumflex,  Jcircumflex,  bracketleft,   braceleft  ] };
  key <AD12>  { [ hcircumflex,  Hcircumflex,  bracketright,  braceright ] };

  key <AD09>  { [ o,            O,            braceleft,     braceleft  ] };
  key <AD10>  { [ p,            P,            braceright,    braceright ] };

  key <AC01>  { [ a,            A,     leftsinglequotemark,  NoSymbol   ] };
  key <AC02>  { [ s,            S,    rightsinglequotemark,  NoSymbol   ] };
  key <AC03>  { [ d,            D,     leftdoublequotemark,  NoSymbol   ] };
  key <AC04>  { [ f,            F,    rightdoublequotemark,  NoSymbol   ] };

  key <AB06>  { [ n,            N,            endash,        endash     ] };
  key <AB07>  { [ m,            M,            emdash,        emdash     ] };

  key.type[Group1] = "FOUR_LEVEL";

  key <AE05>  { [ 5,            percent,      EuroSign,      EuroSign   ] };

  include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "legacy" {

  name[Group1]= "Esperanto (displaced semicolon and quote, obsolete)";

  key.type[Group1] = "FOUR_LEVEL";

  key <TLDE>  { [ grave,         asciitilde,  NoSymbol,  NoSymbol ] };
  key <AE01>  { [ 1,             exclam,      NoSymbol,  NoSymbol ] };
  key <AE02>  { [ 2,             quotedbl,    NoSymbol,  NoSymbol ] };
  key <AE03>  { [ 3,             numbersign,  NoSymbol,  NoSymbol ] };
  key <AE04>  { [ 4,             dollar,      NoSymbol,  NoSymbol ] };
  key <AE05>  { [ 5,             percent,     NoSymbol,  NoSymbol ] };
  key <AE06>  { [ 6,             apostrophe,  NoSymbol,  NoSymbol ] };
  key <AE07>  { [ 7,             ampersand,   NoSymbol,  NoSymbol ] };
  key <AE08>  { [ 8,             asterisk,    NoSymbol,  NoSymbol ] };
  key <AE09>  { [ 9,             parenleft,   NoSymbol,  NoSymbol ] };
  key <AE10>  { [ 0,             parenright,  NoSymbol,  NoSymbol ] };
  key <AE11>  { [ minus,         underscore,  NoSymbol,  NoSymbol ] };
  key <AE12>  { [ equal,         plus,        NoSymbol,  NoSymbol ] };

  key <AB08>  { [ comma,         semicolon,   NoSymbol,  NoSymbol ] };
  key <AB09>  { [ period,        colon,       NoSymbol,  NoSymbol ] };
  key <AB10>  { [ slash,         question,    NoSymbol,  NoSymbol ] };

  key <AD11>  { [ bracketleft,   braceleft,   NoSymbol,  NoSymbol ] };
  key <AD12>  { [ bracketright,  braceright,  NoSymbol,  NoSymbol ] };

  key <BKSL>  { [ backslash,     bar,         NoSymbol,  NoSymbol ] };
  key <LSGT>  { [ NoSymbol,      NoSymbol,    NoSymbol,  NoSymbol ] };

  key.type[Group1] = "FOUR_LEVEL_SEMIALPHABETIC";

  key <AD01>  { [ scircumflex,  Scircumflex,  at,                    NoSymbol ] };
  key <AD02>  { [ jcircumflex,  Jcircumflex,  asciicircum,           NoSymbol ] };
  key <AD03>  { [ e,            E,            EuroSign,              NoSymbol ] };
  key <AD04>  { [ r,            R,            emdash,                NoSymbol ] };
  key <AD05>  { [ t,            T,            endash,                NoSymbol ] };
  key <AD06>  { [ gcircumflex,  Gcircumflex,  NoSymbol,              NoSymbol ] };
  key <AD07>  { [ u,            U,            NoSymbol,              NoSymbol ] };
  key <AD08>  { [ i,            I,            NoSymbol,              NoSymbol ] };
  key <AD09>  { [ o,            O,            NoSymbol,              NoSymbol ] };
  key <AD10>  { [ p,            P,            NoSymbol,              NoSymbol ] };

  key <AC01>  { [ a,            A,            less,                  NoSymbol ] };
  key <AC02>  { [ s,            S,            greater,               NoSymbol ] };
  key <AC03>  { [ d,            D,            leftdoublequotemark,   NoSymbol ] };
  key <AC04>  { [ f,            F,            rightdoublequotemark,  NoSymbol ] };
  key <AC05>  { [ g,            G,            NoSymbol,              NoSymbol ] };
  key <AC06>  { [ h,            H,            NoSymbol,              NoSymbol ] };
  key <AC07>  { [ j,            J,            NoSymbol,              NoSymbol ] };
  key <AC08>  { [ k,            K,            NoSymbol,              NoSymbol ] };
  key <AC09>  { [ l,            L,            NoSymbol,              NoSymbol ] };
  key <AC10>  { [ ubreve,       Ubreve,       NoSymbol,              NoSymbol ] };
  key <AC11>  { [ hcircumflex,  Hcircumflex,  NoSymbol,              NoSymbol ] };

  key <AB01>  { [ z,            Z,            leftsinglequotemark,   NoSymbol ] };
  key <AB02>  { [ ccircumflex,  Ccircumflex,  rightsinglequotemark,  NoSymbol ] };
  key <AB03>  { [ c,            C,            NoSymbol,              NoSymbol ] };
  key <AB04>  { [ v,            V,            NoSymbol,              NoSymbol ] };
  key <AB05>  { [ b,            B,            NoSymbol,              NoSymbol ] };
  key <AB06>  { [ n,            N,            NoSymbol,              NoSymbol ] };
  key <AB07>  { [ m,            M,            NoSymbol,              NoSymbol ] };

  include "level3(ralt_switch)"
};

// Add the Esperanto supersigned letters to their related keys on a Qwerty keyboard.
// This is a generic "component" that is not used by the other layouts in this file,
// but is meant to be applied to any Qwerty layout.  If you have any questions, ask
// J. Pablo Fernández <pupeno@pupeno.com>.
partial
xkb_symbols "qwerty" {
    key <AB03> { [ NoSymbol, NoSymbol, ccircumflex, Ccircumflex ] };
    key <AC05> { [ NoSymbol, NoSymbol, gcircumflex, Gcircumflex ] };
    key <AC06> { [ NoSymbol, NoSymbol, hcircumflex, Hcircumflex ] };
    key <AC07> { [ NoSymbol, NoSymbol, jcircumflex, Jcircumflex ] };
    key <AC02> { [ NoSymbol, NoSymbol, scircumflex, Scircumflex ] };
    key <AD07> { [ NoSymbol, NoSymbol,      ubreve,      Ubreve ] };
};

// Add the Esperanto supersigned letters to their related keys in a
// Dvorak layout.  Similar comment as above applies.
partial
xkb_symbols "dvorak" {
    key <AD08> { [ NoSymbol, NoSymbol, ccircumflex, Ccircumflex ] };
    key <AD07> { [ NoSymbol, NoSymbol, gcircumflex, Gcircumflex ] };
    key <AC07> { [ NoSymbol, NoSymbol, hcircumflex, Hcircumflex ] };
    key <AB03> { [ NoSymbol, NoSymbol, jcircumflex, Jcircumflex ] };
    key <AC10> { [ NoSymbol, NoSymbol, scircumflex, Scircumflex ] };
    key <AC04> { [ NoSymbol, NoSymbol,      ubreve,      Ubreve ] };
};

// Add the Esperanto supersigned letters to their related keys in a
// Colemak layout.  Similar comment as above applies.
partial
xkb_symbols "colemak" {
    key <AB03> { [ NoSymbol, NoSymbol, ccircumflex, Ccircumflex ] };
    key <AD05> { [ NoSymbol, NoSymbol, gcircumflex, Gcircumflex ] };
    key <AC06> { [ NoSymbol, NoSymbol, hcircumflex, Hcircumflex ] };
    key <AD06> { [ NoSymbol, NoSymbol, jcircumflex, Jcircumflex ] };
    key <AC03> { [ NoSymbol, NoSymbol, scircumflex, Scircumflex ] };
    key <AD08> { [ NoSymbol, NoSymbol,      ubreve,      Ubreve ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // Modified for a real Spanish keyboard by Jon Tombs.

default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin(type4)"

    name[Group1]="Spanish";

    key <AE01>	{ [         1,     exclam,          bar,   exclamdown ]	};
    key <AE03>	{ [         3, periodcentered, numbersign,   sterling ]	};
    key <AE04>	{ [         4,     dollar,   asciitilde,       dollar ]	};
    key <AE06>	{ [         6,  ampersand,      notsign,  fiveeighths ]	};
    key <AE11>	{ [apostrophe,   question,    backslash, questiondown ]	};
    key <AE12>	{ [exclamdown, questiondown, dead_tilde,   asciitilde ]	};

    key <AD11>	{ [dead_grave, dead_circumflex, bracketleft, dead_abovering ] };
    key <AD12>	{ [      plus,   asterisk, bracketright,  dead_macron ]	};

    key <AC10>	{ [    ntilde, Ntilde,   asciitilde, dead_doubleacute ]	};
    key <AC11>	{ [dead_acute, dead_diaeresis, braceleft,   braceleft ]	};
    key <TLDE>	{ [ masculine, ordfeminine,    backslash,   backslash ]	};

    key <BKSL>	{ [  ccedilla,   Ccedilla,   braceright,   dead_breve ]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "winkeys" {

    include "es(basic)"
    name[Group1]="Spanish (Winkeys)";
    include "eurosign(5)"
};

partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {

    include "es(basic)"

    key <AC11>	{ [dead_acute, dead_diaeresis, braceleft, braceleft ]	};
    key <AD11>	{ [dead_grave, dead_circumflex, bracketleft, dead_abovering ] };
};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {

    include "es(Sundeadkeys)"

    name[Group1]="Spanish (Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    include "es(basic)"

    name[Group1]="Spanish (eliminate dead keys)";

    key <AD11>	{ [     grave, asciicircum,  bracketleft,      degree ]	};
    key <AD12>	{ [      plus,   asterisk, bracketright,       macron ]	};
    key <AC10>	{ [    ntilde,     Ntilde,   asciitilde,  doubleacute ]	};
    key <AC11>	{ [     acute,  diaeresis,    braceleft,    braceleft ]	};
    key <BKSL>	{ [  ccedilla,   Ccedilla,   braceright,        breve ]	};
    key <AB10>	{ [     minus, underscore, dead_belowdot,    abovedot ]	};
};

// Spanish mapping (note R-H exchange)
partial alphanumeric_keys
xkb_symbols "dvorak" {

    name[Group1]="Spanish (Dvorak)";

    key <TLDE> {[  masculine, ordfeminine, backslash, degree		]};
    key <AE01> {[          1, exclam, bar, onesuperior			]};
    key <AE02> {[          2, quotedbl, at, twosuperior			]};
    key <AE03> {[          3, periodcentered, numbersign, threesuperior	]};
    key <AE04> {[          4, dollar, asciitilde, onequarter		]};
    key <AE05> {[          5, percent, brokenbar, fiveeighths		]};
    key <AE06> {[          6, ampersand, notsign, threequarters		]};
    key <AE07> {[          7, slash, onehalf, seveneighths		]};
    key <AE08> {[          8, parenleft, oneeighth, threeeighths	]};
    key <AE09> {[          9, parenright, asciicircum			]};
    key <AE10> {[          0, equal, grave, dead_doubleacute		]};
    key <AE11> {[ apostrophe, question, dead_macron, dead_ogonek	]};
    key <AE12> {[ exclamdown, questiondown, dead_breve, dead_abovedot	]};

    key <AD01> {[     period, colon, less, guillemotleft                ]};
    key <AD02> {[      comma, semicolon, greater, guillemotright        ]};
    key <AD03> {[     ntilde, Ntilde, lstroke, Lstroke			]};
    key <AD04> {[          p, P, paragraph				]};
    key <AD05> {[          y, Y, yen					]};
    key <AD06> {[          f, F, tslash, Tslash				]};
    key <AD07> {[          g, G, dstroke, Dstroke			]};
    key <AD08> {[          c, C, cent, copyright			]};
    key <AD09> {[          h, H, hstroke, Hstroke			]};
    key <AD10> {[          l, L, sterling				]};
    key <AD11> {[ dead_grave, dead_circumflex, bracketleft, dead_caron	]};
    key <AD12> {[       plus, asterisk, bracketright, plusminus		]};

    key <AC01> {[          a, A, ae, AE					]};
    key <AC02> {[          o, O, oslash, Oslash				]};
    key <AC03> {[          e, E, EuroSign				]};
    key <AC04> {[          u, U, aring, Aring				]};
    key <AC05> {[          i, I, oe, OE					]};
    key <AC06> {[          d, D, eth, ETH				]};
    key <AC07> {[          r, R, registered, trademark			]};
    key <AC08> {[          t, T, thorn, THORN				]};
    key <AC09> {[          n, N, eng, ENG				]};
    key <AC10> {[          s, S, ssharp, section			]};
    key <AC11> {[ dead_acute, dead_diaeresis, braceleft, dead_tilde	]};
    key <BKSL> {[   ccedilla, Ccedilla, braceright, dead_cedilla	]};

    key <LSGT> {[       less, greater, guillemotleft, guillemotright	]};
    key <AB01> {[      minus, underscore, hyphen, macron		]};
    key <AB02> {[          q, Q, currency				]};
    key <AB03> {[          j, J						]};
    key <AB04> {[          k, K, kra					]};
    key <AB05> {[          x, X, multiply, division			]};
    key <AB06> {[          b, B						]};
    key <AB07> {[          m, M, mu					]};
    key <AB08> {[          w, W						]};
    key <AB09> {[          v, V						]};
    key <AB10> {[          z, Z						]};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "cat" {

    include "es(basic)"

    name[Group1]="Catalan (Spain, with middle-dot L)";

    key <AC09>  { [	    l,      L,		0x1000140,  0x100013F ] };
};

partial alphanumeric_keys
xkb_symbols "ast" {

    include "es(basic)"

    name[Group1]="Asturian (Spain, with bottom-dot H and bottom-dot L)";

    key <AC06>  { [	    h,      H,		0x1001E25,  0x1001E24 ] };
    key <AC09>  { [	    l,      L,		0x1001E37,  0x1001E36 ] };
};

// Copied from macintosh_vndr/es
partial alphanumeric_keys
xkb_symbols "mac" {
    include "es"
    name[Group1]= "Spanish (Macintosh)";
};

partial alphanumeric_keys
xkb_symbols "olpc" {

    // http://wiki.laptop.org/go/OLPC_Spanish_Keyboard

    include "us(basic)"
    name[Group1]="Spanish";

    key <AE00> { [    masculine,    ordfeminine      ] };
    key <AE01> { [            1,         exclam,             bar ] };
    key <AE02> { [            2,       quotedbl,              at ] };
    key <AE03> { [            3,     dead_grave,      numbersign,   grave           ] };
    key <AE05> { [            5,        percent,     asciicircum,   dead_circumflex ] };
    key <AE06> { [            6,      ampersand,         notsign ] };
    key <AE07> { [            7,          slash,       backslash ] };
    key <AE08> { [            8,      parenleft                         ] };
    key <AE09> { [            9,     parenright                         ] };
    key <AE10> { [            0,          equal                  ] };
    key <AE11> { [   apostrophe,       question                  ] };
    key <AE12> { [   exclamdown,   questiondown                  ] };

    key <AD03> { [            e,              E,        EuroSign ] };
    key <AD11> { [   dead_acute, dead_diaeresis,           acute,   dead_abovering  ] };
    key <AD12> { [  bracketleft,      braceleft                  ] };

    key <AC10> { [       ntilde,        Ntilde                  ] };
    key <AC11> { [         plus,       asterisk,      dead_tilde ] };
    key <AC12> { [ bracketright,     braceright,      section    ] };

    key <AB08> { [        comma,      semicolon                  ] };
    key <AB09> { [       period,          colon                  ] };
    key <AB10> { [        minus,     underscore                  ] };

    key <I219> { [         less,        greater,  ISO_Next_Group ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "olpcm" {

    // Mechanical (non-membrane) OLPC Spanish keyboard layout.
    // See: http://wiki.laptop.org/go/OLPC_Spanish_Non-membrane_Keyboard

    include "us(basic)"
    name[Group1]="Spanish";

    key <AE00> { [    questiondown,    exclamdown, backslash      ] };
    key <AE01> { [            1,         exclam,             bar ] };
    key <AE02> { [            2,       quotedbl,              at ] };
    key <AE03> { [            3,     dead_grave,      numbersign,   grave           ] };
    key <AE04> { [            4,     dollar,     asciitilde,     dead_tilde ] };
    key <AE05> { [            5,        percent,     asciicircum,   dead_circumflex ] };
    key <AE06> { [            6,      ampersand,         notsign ] };
    key <AE07> { [            7,          slash,       backslash ] };   // no '\' label on olpcm, leave for compatibility
    key <AE08> { [            8,      parenleft,    masculine                ] };
    key <AE09> { [            9,     parenright,    ordfeminine                 ] };
    key <AE10> { [            0,          equal                  ] };
    key <AE11> { [   apostrophe,       question                  ] };

    key <AD03> { [            e,              E,        EuroSign ] };
    key <AD11> { [   dead_acute, dead_diaeresis,     dead_abovering, acute  ] };
    key <AD12> { [  plus,      asterisk                  ] };

    key <AC10> { [       ntilde,        Ntilde                  ] };
    // no AC11 or AC12 on olpcm

    key <AB08> { [        comma,      semicolon                  ] };
    key <AB09> { [       period,          colon                  ] };
    key <AB10> { [        minus,     underscore                  ] };

    key <AA02>  { [        less,        greater ] };
    key <AA06>  { [  bracketleft,      braceleft,   ccedilla,         Ccedilla  ] };
    key <AA07>  { [  bracketright,     braceright                ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "deadtilde" {

    include "es(basic)"

    name[Group1]="Spanish (include dead tilde)";

    key <AE04>	{ [         4,     dollar,   dead_tilde,       dollar ]	};
};

partial alphanumeric_keys
xkb_symbols "olpc2" {

    // Modified variant of US International layout, specifically for Peru
    // Contact: Sayamindu Dasgupta <sayamindu@laptop.org>

    include "us(olpc)"
    name[Group1]="Spanish (OLPC2)";

    key <AE03> { [  3, numbersign,   dead_grave,  dead_grave] }; // combining grave
    key <I236>  { [ XF86Start ] };

    include "level3(ralt_switch)"
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/es(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                //
// Ethiopia
// Designed as a part of OLPC project
//
// 2007 Sergey Udaltsov <svu@gnome.org>
//

default  partial alphanumeric_keys
xkb_symbols "basic" {
    include "et(olpc)"
    name[Group1]="Amharic";
};

partial alphanumeric_keys
xkb_symbols "olpc" {

    name[Group1]="Amharic";

    key <AE01>	{ [        0x01001369,  0x01001372 ] }; // 1
    key <AE02>	{ [        0x0100136a,  0x01001373 ] }; // 2
    key <AE03>	{ [        0x0100136b,  0x01001374 ] }; // 3 
    key <AE04>	{ [        0x0100136c,  0x01001375 ] }; // 4
    key <AE05>	{ [        0x0100136d,  0x01001376 ] }; // 5
    key <AE06>	{ [        0x0100136e,  0x01001377 ] }; // 6
    key <AE07>	{ [        0x0100136f,  0x01001378 ] }; // 7
    key <AE08>	{ [        0x01001370,  0x01001379 ] }; // 8
    key <AE09>	{ [        0x01001371,  0x0100137a ] }; // 9
    key <AE10>	{ [        0x0100137b,  0x0100137c ] }; // 0
    key <AE11>	{ [        minus,       underscore ] }; // -_
    key <AE12>	{ [        equal,       plus       ] }; // =+

    key <AD01>	{ [        0x01001240,  0x01001250 ]	}; // q
    key <AD02>	{ [        0x010012C8,  VoidSymbol ]	}; // w
    key <AD03>	{ [        0x0100FE69,  0x0100FE70 ]	}; // dead e
    key <AD04>	{ [        0x01001228,  VoidSymbol ]	}; // r
    key <AD05>	{ [        0x01001270,  0x01001320 ]	}; // t
    key <AD06>	{ [        0x010012E8,  VoidSymbol ]	}; // y
    key <AD07>	{ [        0x0100FE75,  0x0100FE76 ]	}; // dead u
    key <AD08>	{ [        0x0100FE71,  0x0100FE72 ]	}; // dead i
    key <AD09>	{ [        0x0100FE73,  0x0100FE74 ]	}; // dead o
    key <AD10>	{ [        0x01001350,  0x01001330 ]	}; // p
    key <AD11>	{ [        0x01001340,  0x01001338 ]	}; // [
    key <AD12>	{ [        0x01001328,  0x01001280 ]	}; // ]

    key <AC01>	{ [        0x0100FE67,  0x0100FE68 ]	}; // dead a
    key <AC02>	{ [        0x01001230,  0x01001220 ]	}; // s
    key <AC03>	{ [        0x010012F0,  0x010012F8 ]	}; // d
    key <AC04>	{ [        0x01001348,  VoidSymbol ]	}; // f
    key <AC05>	{ [        0x01001308,  0x01001318 ]	}; // g
    key <AC06>	{ [        0x01001200,  0x01001210 ]	}; // h
    key <AC07>	{ [        0x01001300,  VoidSymbol ]	}; // j
    key <AC08>	{ [        0x010012A8,  0x010012B8 ]	}; // k
    key <AC09>	{ [        0x01001208,  VoidSymbol ]	}; // l

    key <AC10>	{ [        0x01001362,  0x01001361 ]	}; // :;
    key <AC11>  { [        0x01001366,  0x01001365 ]    }; // '"

    key <AB01>	{ [        0x010012D8,  0x010012E0 ]	}; // z
    key <AB02>	{ [        0x010012A0,  0x010012D0 ]	}; // x
    key <AB03>  { [        0x01001278,  0x0100FE78 ]    }; // c
    key <AB04>	{ [        0x01001238,  0x01001268 ]	}; // v
    key <AB05>	{ [        0x01001260,  VoidSymbol ]	}; // b
    key <AB06>	{ [        0x01001290,  0x01001298 ]	}; // n
    key <AB07>	{ [        0x01001218,  VoidSymbol ]	}; // m

    key <AB08>	{ [        0x01001363,  VoidSymbol ]	}; // <
    key <AB09>	{ [        0x01001364,  VoidSymbol ]	}; // >
    key <AB10>  { [        0x01001367,  question   ]    }; // ?

    key <BKSL> {  [        VoidSymbol,  0x01002010 ]    }; // bksl

    include "group(olpc)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  // Based on <http://eurkey.steffen.bruentjen.eu/>
// Copyright: Copyright 2012 Steffen Bruentjen (eurkey (at) steffen dot bruentjen dot de)
// modified by Christoph Roeper <spam (at) roeper dot biz> (use firstName to mail)

default  partial alphanumeric_keys modifier_keys 
xkb_symbols "basic"  {

        include "us(basic)"
 
        name[Group1] = "EurKEY (US based layout with european letters)";

        key <AB01> { [              z,                 Z,               agrave,               Agrave ] };
        key <AB02> { [              x,                 X,               aacute,               Aacute ] };
        key <AB03> { [              c,                 C,             ccedilla,             Ccedilla ] };
        key <AB04> { [              v,                 V,               igrave,               Igrave ] };
        key <AB05> { [              b,                 B,               iacute,               Iacute ] };
        key <AB06> { [              n,                 N,               ntilde,               Ntilde ] };
        key <AB07> { [              m,                 M,            Multi_key,            Multi_key ] };
        key <AB08> { [          comma,              less,               ograve,               Ograve ] };
        key <AB09> { [         period,           greater,               oacute,               Oacute ] };
        key <AB10> { [          slash,          question,         questiondown,            0x1002026 ] };
        key <AC01> { [              a,                 A,           adiaeresis,           Adiaeresis ] };
        key <AC02> { [              s,                 S,               ssharp,              section ] };
        key <AC03> { [              d,                 D,                  eth,                  Eth ] };
        key <AC04> { [              f,                 F,               egrave,               Egrave ] };
        key <AC05> { [              g,                 G,               eacute,               Eacute ] };
        key <AC06> { [              h,                 H,               ugrave,               Ugrave ] };
        key <AC07> { [              j,                 J,               uacute,               Uacute ] };
        key <AC08> { [              k,                 K,                U0133,                U0132 ] };
        key <AC09> { [              l,                 L,               oslash,               Oslash ] };
        key <AC10> { [      semicolon,             colon,       dead_diaeresis,       periodcentered ] };
        key <AC11> { [     apostrophe,          quotedbl,           dead_acute,                dagger] };
        key <AD01> { [              q,                 Q,                   ae,                   AE ] };
        key <AD02> { [              w,                 W,                aring,                Aring ] };
        key <AD03> { [              e,                 E,           ediaeresis,           Ediaeresis ] };
        key <AD04> { [              r,                 R,               yacute,               Yacute ] };
        key <AD05> { [              t,                 T,                thorn,                Thorn ] };
        key <AD06> { [              y,                 Y,           ydiaeresis,           Ydiaeresis ] };
        key <AD07> { [              u,                 U,           udiaeresis,           Udiaeresis ] };
        key <AD08> { [              i,                 I,           idiaeresis,           Idiaeresis ] };
        key <AD09> { [              o,                 O,           odiaeresis,           Odiaeresis ] };
        key <AD10> { [              p,                 P,                   oe,                   OE ] };
        key <AD11> { [    bracketleft,         braceleft,        guillemotleft,                U2039 ] };
        key <AD12> { [   bracketright,        braceright,       guillemotright,                U203A ] };
        key <AE01> { [              1,            exclam,           exclamdown,          onesuperior ] };
        key <AE02> { [              2,                at,          ordfeminine,          twosuperior ] };
        key <AE03> { [              3,        numbersign,            masculine,        threesuperior ] };
        key <AE04> { [              4,            dollar,             sterling,                  yen ] };
        key <AE05> { [              5,           percent,             EuroSign,                 cent ] };
        key <AE06> { [              6,       asciicircum,      dead_circumflex,           dead_caron ] };
        key <AE07> { [              7,         ampersand,       dead_abovering,          dead_macron ] };
        key <AE08> { [              8,          asterisk,   doublelowquotemark,   singlelowquotemark ] };
        key <AE09> { [              9,         parenleft,  leftdoublequotemark,  leftsinglequotemark ] };
        key <AE10> { [              0,        parenright, rightdoublequotemark, rightsinglequotemark ] };
        key <AE11> { [          minus,        underscore,            copyright,           numerosign ] };
        key <AE12> { [          equal,              plus,             multiply,             division ] };
        key <BKSL> { [      backslash,               bar,              notsign,            brokenbar ] };
        key <TLDE> { [          grave,        asciitilde,           dead_grave,           dead_tilde ] };
        key <KPDL> { [      KP_Delete,        KP_Decimal,                comma,                comma ] };

        include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // Most keyboards have the EuroSign engraved on the E key
partial
xkb_symbols "e" {
    key <AD03>	{ [  NoSymbol,   NoSymbol,   EuroSign,	NoSymbol ]	};
};

// Many Apple keyboards have the EuroSign engraved on the 2 key
partial
xkb_symbols "2" {
    key <AE02>	{ [  NoSymbol,   NoSymbol,   EuroSign,	NoSymbol ]	};
};

// Some keyboards have the EuroSign engraved on the 4 key
partial
xkb_symbols "4" {
    key <AE04>	{ [  NoSymbol,   NoSymbol,   EuroSign,	NoSymbol ]	};
};

// Many keyboards have the EuroSign engraved on the 5 key
partial
xkb_symbols "5" {
    key <AE05>	{ [  NoSymbol,   NoSymbol,   EuroSign,	NoSymbol ]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           //
// X keyboard maps for Finland
//
// SFS 5966 / Kotoistus keymap created by Troy Korjuslommi
// Classic keymap based on traditional by Marko Myllynen
// Eliminate deadkeys alternative sent by Linus Torvalds
//

default  partial alphanumeric_keys
xkb_symbols "kotoistus" {

    // Official keymap for Finland based on SFS 5966 standard
    //
    // This keymap implements all the functionality of Annex 1
    // of the standard and additionally defines the following to
    // allow entering these characters with keyboards without LSGT.
    //
    // AE08+4, U+003C : LESS-THAN SIGN     (less)
    // AE09+4, U+003E : GREATER-THAN SIGN  (greater)
    // AD08+4, U+007C : VERTICAL LINE      (bar)
    //
    // Annex 3 of the standard is implemented in fi_FI.UTF-8/Compose

    name[Group1]="Finnish";

    key <TLDE> { [  section,         onehalf,          dead_stroke,           NoSymbol              ] };
    key <AE01> { [  1,               exclam,           NoSymbol,              exclamdown            ] };
    key <AE02> { [  2,               quotedbl,         at,                    rightdoublequotemark  ] };
    key <AE03> { [  3,               numbersign,       sterling,              guillemotright        ] };
    key <AE04> { [  4,               currency,         dollar,                guillemotleft         ] };
    key <AE05> { [  5,               percent,          permille,              leftdoublequotemark   ] };
    key <AE06> { [  6,               ampersand,        singlelowquotemark,    doublelowquotemark    ] };
    key <AE07> { [  7,               slash,            braceleft,             NoSymbol              ] };
    key <AE08> { [  8,               parenleft,        bracketleft,           less                  ] };
    key <AE09> { [  9,               parenright,       bracketright,          greater               ] };
    key <AE10> { [  0,               equal,            braceright,            degree                ] };
    key <AE11> { [  plus,            question,         backslash,             questiondown          ] };
    key <AE12> { [  dead_acute,      dead_grave,       dead_cedilla,          dead_ogonek           ] };

    key <AD01> { [  q,               Q,                q,                     Q                     ] };
    key <AD02> { [  w,               W,                w,                     W                     ] };
    key <AD03> { [  e,               E,                EuroSign,              NoSymbol              ] };
    key <AD04> { [  r,               R,                r,                     R                     ] };
    key <AD05> { [  t,               T,                thorn,                 THORN                 ] };
    key <AD06> { [  y,               Y,                y,                     Y                     ] };
    key <AD07> { [  u,               U,                u,                     U                     ] };
    key <AD08> { [  i,               I,                idotless,              bar                   ] };
    key <AD09> { [  o,               O,                oe,                    OE                    ] };
    key <AD10> { [  p,               P,                dead_horn,             dead_hook             ] };
    key <AD11> { [  aring,           Aring,            dead_doubleacute,      dead_abovering        ] };
    key <AD12> { [  dead_diaeresis,  dead_circumflex,  dead_tilde,            dead_macron           ] };

    key <AC01> { [  a,               A,                schwa,                 SCHWA                 ] };
    key <AC02> { [  s,               S,                ssharp,                NoSymbol              ] };
    key <AC03> { [  d,               D,                eth,                   ETH                   ] };
    key <AC04> { [  f,               F,                f,                     F                     ] };
    key <AC05> { [  g,               G,                g,                     G                     ] };
    key <AC06> { [  h,               H,                h,                     H                     ] };
    key <AC07> { [  j,               J,                j,                     J                     ] };
    key <AC08> { [  k,               K,                kra,                   NoSymbol              ] };
    key <AC09> { [  l,               L,                dead_stroke,           NoSymbol              ] };
    key <AC10> { [  odiaeresis,      Odiaeresis,       oslash,                Oslash                ] };
    key <AC11> { [  adiaeresis,      Adiaeresis,       ae,                    AE                    ] };
    key <BKSL> { [  apostrophe,      asterisk,         dead_caron,            dead_breve            ] };

    key <LSGT> { [  less,            greater,          bar,                   NoSymbol              ] };
    key <AB01> { [  z,               Z,                ezh,                   EZH                   ] };
    key <AB02> { [  x,               X,                multiply,              periodcentered        ] };
    key <AB03> { [  c,               C,                c,                     C                     ] };
    key <AB04> { [  v,               V,                v,                     V                     ] };
    key <AB05> { [  b,               B,                b,                     B                     ] };
    key <AB06> { [  n,               N,                eng,                   ENG                   ] };
    key <AB07> { [  m,               M,                mu,                    emdash                ] };
    key <AB08> { [  comma,           semicolon,        rightsinglequotemark,  leftsinglequotemark   ] };
    key <AB09> { [  period,          colon,            dead_belowdot,         dead_abovedot         ] };
    key <AB10> { [  minus,           underscore,       endash,                dead_belowcomma       ] };

    include "nbsp(level4)"
    include "nbsp(level3)"
    include "kpdl(comma)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "winkeys" {

    include "fi(kotoistus)"
    name[Group1]="Finnish (Winkeys)";
    include "eurosign(5)"
};

partial alphanumeric_keys
xkb_symbols "classic" {

    include "fi(fi)"

    name[Group1]="Finnish (classic)";
};

hidden partial alphanumeric_keys
xkb_symbols "fi" {

    // Classic Finnish keyboard layout with dead keys

    key <TLDE> { [  section,         onehalf,          onequarter,            threequarters         ] };
    key <AE01> { [  1,               exclam,           exclamdown,            onesuperior           ] };
    key <AE02> { [  2,               quotedbl,         at,                    twosuperior           ] };
    key <AE03> { [  3,               numbersign,       sterling,              threesuperior         ] };
    key <AE04> { [  4,               currency,         dollar,                cent                  ] };
    key <AE05> { [  5,               percent,          EuroSign,              masculine             ] };
    key <AE06> { [  6,               ampersand,        yen,                   ordfeminine           ] };
    key <AE07> { [  7,               slash,            braceleft,             plusminus             ] };
    key <AE08> { [  8,               parenleft,        bracketleft,           less                  ] };
    key <AE09> { [  9,               parenright,       bracketright,          greater               ] };
    key <AE10> { [  0,               equal,            braceright,            degree                ] };
    key <AE11> { [  plus,            question,         backslash,             questiondown          ] };
    key <AE12> { [  dead_acute,      dead_grave,       dead_cedilla,          dead_ogonek           ] };

    key <AD01> { [  q,               Q,                q,                     Q                     ] };
    key <AD02> { [  w,               W,                w,                     W                     ] };
    key <AD03> { [  e,               E,                EuroSign,              cent                  ] };
    key <AD04> { [  r,               R,                registered,            NoSymbol              ] };
    key <AD05> { [  t,               T,                thorn,                 THORN                 ] };
    key <AD06> { [  y,               Y,                y,                     Y                     ] };
    key <AD07> { [  u,               U,                u,                     U                     ] };
    key <AD08> { [  i,               I,                idotless,              bar                   ] };
    key <AD09> { [  o,               O,                o,                     O                     ] };
    key <AD10> { [  p,               P,                paragraph,             NoSymbol              ] };
    key <AD11> { [  aring,           Aring,            oe,                    OE                    ] };
    key <AD12> { [  dead_diaeresis,  dead_circumflex,  dead_tilde,            dead_caron            ] };

    key <AC01> { [  a,               A,                schwa,                 SCHWA                 ] };
    key <AC02> { [  s,               S,                scaron,                Scaron                ] };
    key <AC03> { [  d,               D,                eth,                   ETH                   ] };
    key <AC04> { [  f,               F,                f,                     F                     ] };
    key <AC05> { [  g,               G,                eng,                   ENG                   ] };
    key <AC06> { [  h,               H,                h,                     H                     ] };
    key <AC07> { [  j,               J,                j,                     J                     ] };
    key <AC08> { [  k,               K,                kra,                   NoSymbol              ] };
    key <AC09> { [  l,               L,                dead_stroke,           NoSymbol              ] };
    key <AC10> { [  odiaeresis,      Odiaeresis,       oslash,                Oslash                ] };
    key <AC11> { [  adiaeresis,      Adiaeresis,       ae,                    AE                    ] };
    key <BKSL> { [  apostrophe,      asterisk,         dead_caron,            dead_breve            ] };

    key <LSGT> { [  less,            greater,          bar,                   brokenbar             ] };
    key <AB01> { [  z,               Z,                zcaron,                Zcaron                ] };
    key <AB02> { [  x,               X,                multiply,              division              ] };
    key <AB03> { [  c,               C,                copyright,             cent                  ] };
    key <AB04> { [  v,               V,                v,                     V                     ] };
    key <AB05> { [  b,               B,                ssharp,                NoSymbol              ] };
    key <AB06> { [  n,               N,                ntilde,                Ntilde                ] };
    key <AB07> { [  m,               M,                mu,                    NoSymbol              ] };
    key <AB08> { [  comma,           semicolon,        dead_cedilla,          dead_ogonek           ] };
    key <AB09> { [  period,          colon,            periodcentered,        notsign               ] };
    key <AB10> { [  minus,           underscore,       hyphen,                dead_macron           ] };

    include "nbsp(level4)"
    include "kpdl(comma)"
    include "level3(ralt_switch)"
    include "compose(rwin)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // Classic Finnish keyboard layout without dead keys

    include "fi(fi)"

    name[Group1]="Finnish (classic, eliminate dead keys)";

    key <AE12> { [  acute,           grave,            cedilla,               ogonek                ] };
    key <AD12> { [  diaeresis,       asciicircum,      asciitilde,            caron                 ] };
    key <AC09> { [  l,               L,                l,                     L                     ] };
    key <BKSL> { [  apostrophe,      asterisk,         caron,                 breve                 ] };
    key <AB08> { [  comma,           semicolon,        cedilla,               ogonek                ] };
    key <AB10> { [  minus,           underscore,       hyphen,                macron                ] };
};

partial alphanumeric_keys
xkb_symbols "smi" {

    // Describes the differences between a Norwegian Northern Sami
    // (keyboard with dead key support) and a Swedish/Finnish Sami
    // keyboard according to the specs at:
    // http://www.hum.uit.no/a/trond/se-lat9-sefi-keys.html

    include "no(smi)"

    name[Group1]="Northern Saami (Finland)";

    key <AC10> { [  odiaeresis,      Odiaeresis,       oslash,                Oslash                ] };
    key <AC11> { [  adiaeresis,      Adiaeresis,       ae,                    AE                    ] };
};

partial alphanumeric_keys
xkb_symbols "mac" {

    // Macintosh keyboard for Finland based on Swedish(Macintosh) keyboard

    include "se(mac)"

    name[Group1]="Finnish (Macintosh)";
};

partial alphanumeric_keys
xkb_symbols "sun_type6" {

    // Sun Type 6/7 keyboard for Finland

    include "sun_vndr/fi(sun_type6)"
};

partial
xkb_symbols "das" {

    // This is DAS layout for typing Finnish. It is originally designed by
    // Cristian Seres (cseres at iki.fi).
    // More information about DAS: http://c.seres.fi/DAS_en.html
    // This xkeyboard layout is originally made by Joel Lehtonen,
    // (joel.lehtonen at iki.fi) on 2008-01-14. He released it under Public
    // domain.

    name[Group1]="Finnish (DAS)";

    key <AE01> { [  1,               exclam,           section                                      ] };
    key <AE02> { [  2,               quotedbl,         twosuperior                                  ] };
    key <AE03> { [  3,               at,               sterling                                     ] };
    key <AE04> { [  4,               EuroSign,         dollar                                       ] };
    key <AE05> { [  5,               percent,          onehalf                                      ] };
    key <AE06> { [  6,               ampersand                                                      ] };
    key <AE07> { [  7,               braceleft                                                      ] };
    key <AE08> { [  8,               parenleft,        bracketleft                                  ] };
    key <AE09> { [  9,               parenright,       bracketright                                 ] };
    key <AE10> { [  0,               braceright,       degree                                       ] };
    key <AE11> { [  plus,            question,         currency                                     ] };
    key <AE12> { [  equal,           numbersign                                                     ] };

    key <AD01> { [  p,               P,                Greek_pi                                     ] };
    key <AD02> { [  h,               H                                                              ] };
    key <AD03> { [  r,               R,                dead_circumflex                              ] };
    key <AD04> { [  k,               K,                dead_caron                                   ] };
    key <AD05> { [  less,            greater                                                        ] };
    key <AD06> { [  apostrophe,      bar                                                            ] };
    key <AD07> { [  w,               W                                                              ] };
    key <AD08> { [  u,               U                                                              ] };
    key <AD09> { [  y,               Y                                                              ] };
    key <AD10> { [  b,               B                                                              ] };
    key <AD11> { [  q,               Q                                                              ] };
    key <AD12> { [  z,               Z,                zcaron,                Zcaron                ] };

    key <AC01> { [  s,               S,                scaron,                Scaron                ] };
    key <AC02> { [  l,               L,                dead_acute                                   ] };
    key <AC03> { [  n,               N,                dead_grave                                   ] };
    key <AC04> { [  t,               T,                dead_diaeresis                               ] };
    key <AC05> { [  v,               V                                                              ] };
    key <AC06> { [  g,               G                                                              ] };
    key <AC07> { [  a,               A                                                              ] };
    key <AC08> { [  i,               I                                                              ] };
    key <AC09> { [  o,               O                                                              ] };
    key <AC10> { [  e,               E                                                              ] };
    key <AC11> { [  c,               C                                                              ] };
    key <TLDE> { [  backslash,       dead_tilde                                                     ] };

    key <BKSL> { [  asterisk,        slash                                                          ] };
    key <LSGT> { [  f,               F                                                              ] };
    key <AB01> { [  x,               X                                                              ] };
    key <AB02> { [  d,               D                                                              ] };
    key <AB03> { [  m,               M,                mu                                           ] };
    key <AB04> { [  j,               J                                                              ] };
    key <AB05> { [  aring,           Aring                                                          ] };
    key <AB06> { [  odiaeresis,      Odiaeresis,       oe,                    OE                    ] };
    key <AB07> { [  adiaeresis,      Adiaeresis,       ae,                    AE                    ] };
    key <AB08> { [  comma,           semicolon                                                      ] };
    key <AB09> { [  period,          colon                                                          ] };
    key <AB10> { [  minus,           underscore,       U2013,                 dead_macron           ] };
    key <SPCE> { [  space,           space,            space,                 nobreakspace          ] };

    include "kpdl(comma)"
    include "level3(ralt_switch)"
    include "compose(rwin)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin(type2)"

    name[Group1]= "Faroese";

    key <TLDE>	{ [   onehalf,   section, threequarters,    paragraph ]	};
    key <LSGT>	{ [      less,    greater,    backslash,      notsign ]	};
    key <SPCE>	{ [     space,      space, nobreakspace, nobreakspace ] };

    key <AE05>	{ [         5,    percent,     NoSymbol,         cent ] };
    key <AE06>	{ [         6,  ampersand,          yen,     NoSymbol ] };
    key <AE11>	{ [      plus,   question,    plusminus, questiondown ] };
    key <AE12>	{ [dead_acute, dead_grave,          bar,    brokenbar ] };

    key <AB03>	{ [         c,          C,    copyright,     NoSymbol ] };
    key <AB10>	{ [     minus, underscore,       hyphen,       macron ] };

    key <AC03>	{ [         d,          D,          eth,          ETH ] };
    key	<AC10>	{ [        ae,	       AE	] };
    key <AC11>	{ [    oslash,   Ooblique 	] };

    key <AD08>	{ [         i,          I       ] };
    key <AD11>	{ [     aring,      Aring, dead_diaeresis, dead_circumflex ] };
    key <AD12>	{ [       eth,        ETH,   dead_tilde,   dead_caron ] };

    key <BKSL>	{ [apostrophe,   asterisk, dead_doubleacute, multiply ]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    include "fo(basic)"

    name[Group1]= "Faroese (eliminate dead keys)";

    key <AE12>	{ [     acute,      grave,          bar,       ogonek ]	};
    key <AD11>	{ [     aring,      Aring,    diaeresis,       degree ]	};
    key <AD12>	{ [ diaeresis, asciicircum,  asciitilde,       macron ]	};
    key <AC10>	{ [        ae,         AE,        acute,  doubleacute ]	};
    key <AC11>	{ [    oslash,   Ooblique,  asciicircum,        caron ]	};
    key <BKSL>	{ [apostrophe,   asterisk,  doubleacute,     multiply ]	};
    key <AB08>	{ [     comma,  semicolon,      cedilla,       ogonek ]	};
    key <AB09>	{ [    period,      colon, periodcentered,   abovedot ]	};
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin"

    name[Group1]="French";

    key <AE01>	{ [ ampersand,          1,  onesuperior,   exclamdown ]	};
    key <AE02>	{ [    eacute,          2,   asciitilde,    oneeighth ]	};
    key <AE03>	{ [  quotedbl,          3,   numbersign,     sterling ]	};
    key <AE04>	{ [apostrophe,          4,    braceleft,       dollar ]	};
    key <AE05>	{ [ parenleft,          5,  bracketleft, threeeighths ]	};
    key <AE06>	{ [     minus,          6,          bar,  fiveeighths ]	};
    key <AE07>	{ [    egrave,          7,        grave, seveneighths ]	};
    key <AE08>	{ [underscore,          8,    backslash,    trademark ]	};
    key <AE09>	{ [  ccedilla,          9,  asciicircum,    plusminus ]	};
    key <AE10>	{ [    agrave,          0,           at,       degree ]	};
    key <AE11>	{ [parenright,     degree, bracketright, questiondown ]	};
    key <AE12>	{ [     equal,       plus,   braceright,  dead_ogonek ]	};

    key <AD01>	{ [         a,          A,           ae,           AE ]	};
    key <AD02>	{ [         z,          Z, guillemotleft,        less ]	};
    key <AD03>	{ [         e,          E,     EuroSign,         cent ]	};
    key <AD11>	{ [dead_circumflex, dead_diaeresis, dead_diaeresis, dead_abovering ] };
    key <AD12>	{ [    dollar,   sterling,     currency,  dead_macron ]	};

    key <AC01>	{ [         q,          Q,           at,  Greek_OMEGA ]	};
    key <AC10>	{ [         m,          M,           mu,    masculine ]	};
    key <AC11>	{ [    ugrave,    percent, dead_circumflex, dead_caron]	};
    key <TLDE>	{ [twosuperior, asciitilde,     notsign,      notsign ]	};

    key <BKSL>	{ [  asterisk,         mu,   dead_grave,   dead_breve ]	};
    key <AB01>	{ [         w,          W,      lstroke,      Lstroke ]	};
    key <AB07>	{ [     comma,   question,   dead_acute, dead_doubleacute ] };
    key <AB08>	{ [ semicolon,     period, horizconnector,   multiply ]	};
    key <AB09>	{ [     colon,      slash, periodcentered,   division ]	};
    key <AB10>	{ [    exclam,    section, dead_belowdot, dead_abovedot ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "olpc" {
    // Contact: Sayamindu Dasgupta <sayamindu@laptop.org>
    include "fr(basic)"

    name[Group1]="French";

    key <I219>	{ [ less, greater ]	};
    key <AD11>	{ [ dead_circumflex, dead_diaeresis, notsign, dead_abovering ]	};
    key <AB08>	{ [ semicolon, period, underscore, multiply ]	};
    key <TLDE>	{ [ twosuperior, asciitilde, VoidSymbol, VoidSymbol ]	};

    // Some keys only have the Shift+AltGr character printed on them (alongside
    // the unmodified one). Make such keys shift-invariant so that the printed
    // value is achieved by pressing AltGr or Shift+AltGr.
    key <AB02>	{ [ x,  X,  guillemotright, guillemotright ]	};
    key <AC02>	{ [ s,  S,  ssharp, ssharp ]	};
    key <AD02>	{ [ z,  Z,  guillemotleft, guillemotleft ]	};
};

partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {

    // Modifies the basic French layout to use the Sun dead keys

    include "fr(basic)"

    key <AD11>	{ [dead_circumflex, dead_diaeresis ]	};
    key <AB07>	{ [comma,   question,  dead_acute, dead_doubleacute ]	};
};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {
    include "fr(Sundeadkeys)"

    name[Group1]="French (Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // Modifies the basic French layout to eliminate all dead keys

    include "fr(basic)"

    name[Group1]="French (eliminate dead keys)";

    key <AE12>	{ [     equal,       plus,   braceright,       ogonek ]	};
    key <AD11>	{ [asciicircum,  diaeresis ]	};
    key <AD12>	{ [    dollar,   sterling,     currency,       macron ]	};
    key <AC11>	{ [    ugrave,    percent,  asciicircum,        caron ]	};
    key <BKSL>	{ [  asterisk,         mu,        grave,        breve ]	};
    key <AB07>	{ [     comma,   question,        acute,  doubleacute ]	};
    key <AB10>	{ [    exclam,    section, dead_belowdot,    abovedot ]	};
};


// Unicode French derivative
// Loose refactoring of the historic Linux French keyboard layout
//
// Copyright © 2006-2008 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// Credits (fr-latin1, fr-latin0, fr-latin9)
//   © 199x-1996 René Cougnenc ✝
//   © 1997-2002 Guylhem Aznar <clavier @ externe.net>
//   © 2003-2006 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ ³ ¸ │ 1 ̨  │ 2 É │ 3 ˘ │ 4 — │ 5 – │ 6 ‑ │ 7 È │ 8 ™ │ 9 Ç │ 0 À │ ° ≠ │ + ± ┃ ⌫ Retour┃
// │ ² ¹ │ & ˇ │ é ~ │ " # │ ' { │ ( [ │ - | │ è ` │ _ \ │ ç ^ │ à @ │ ) ] │ = } ┃  arrière┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ A Æ │ Z Â │ E ¢ │ R Ê │ T Þ │ Y Ÿ │ U Û │ I Î │ O Œ │ P Ô │ ¨ ˚ │ £ Ø ┃Entrée ┃
// ┃Tab ↹  ┃ a æ │ z â │ e € │ r ê │ t þ │ y ÿ │ u û │ i î │ o œ │ p ô │ ^ ~ │ $ ø ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ Q Ä │ S „ │ D Ë │ F ‚ │ G ¥ │ H Ð │ J Ü │ K Ï │ L Ŀ │ M Ö │ % Ù │ µ ̄  ┃      ┃
// ┃Maj ⇬   ┃ q ä │ s ß │ d ë │ f ‘ │ g ’ │ h ð │ j ü │ k ï │ l ŀ │ m ö │ ù ' │ * ` ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃ > ≥ │ W “ │ X ” │ C ® │ V ← │ B ↑ │ N → │ ? … │ . . │ / ∕ │ § − ┃             ┃
// ┃Shift ⇧┃ < ≤ │ w « │ x » │ c © │ v ⍽ │ b ↓ │ n ¬ │ , ¿ │ ; × │ : ÷ │ ! ¡ ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣         Espace fine insécable ⍽ ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ Espace       Espace insécable ⍽ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛
partial alphanumeric_keys
xkb_symbols "oss" {

    include "latin"
    include "level3(ralt_switch)"
    include "nbsp(level4n)"
    include "keypad(oss)"

    name[Group1]="French (alternative)";

    // First row
    key <TLDE>	{ [      twosuperior,    threesuperior,          onesuperior,          dead_cedilla ] }; // ² ³ ¹ ¸
    key <AE01>	{ [        ampersand,                1,           dead_caron,           dead_ogonek ] }; // & 1 ˇ ̨
    key <AE02>	{ [           eacute,                2,           asciitilde,                Eacute ] }; // é 2 ~ É
    key <AE03>	{ [         quotedbl,                3,           numbersign,            dead_breve ] }; // " 3 # ˘
    key <AE04>	{ [       apostrophe,                4,            braceleft,             0x1002014 ] }; // ' 4 { — (tiret cadratin)
    key <AE05>	{ [        parenleft,                5,          bracketleft,             0x1002013 ] }; // ( 5 [ – (tiret demi-cadratin)
    key <AE06>	{ [            minus,                6,                  bar,             0x1002011 ] }; // - 6 | ‑ (tiret insécable)
    key <AE07>	{ [           egrave,                7,                grave,                Egrave ] }; // è 7 ` È
    key <AE08>	{ [       underscore,                8,            backslash,             trademark ] }; // _ 8 \ ™
    key <AE09>	{ [         ccedilla,                9,          asciicircum,              Ccedilla ] }; // ç 9 ^ Ç
    key <AE10>	{ [           agrave,                0,                   at,                Agrave ] }; // à 0 @ À
    key <AE11>	{ [       parenright,           degree,         bracketright,              notequal ] }; // ) ° ] ≠
    key <AE12>	{ [            equal,             plus,           braceright,             plusminus ] }; // = + } ±

    // Second row
    key <AD01>	{ [                a,                A,                   ae,                    AE ] }; // a A æ Æ
    key <AD02>	{ [                z,                Z,          acircumflex,           Acircumflex ] }; // z Z â Â
    key <AD03>	{ [                e,                E,             EuroSign,                  cent ] }; // e E € ¢
    key <AD04>	{ [                r,                R,          ecircumflex,           Ecircumflex ] }; // r R ê Ê
    key <AD05>	{ [                t,                T,                thorn,                 THORN ] }; // t T þ Þ
    key <AD06>	{ [                y,                Y,           ydiaeresis,            Ydiaeresis ] }; // y Y ÿ Ÿ
    key <AD07>	{ [                u,                U,          ucircumflex,           Ucircumflex ] }; // u U û Û
    key <AD08>	{ [                i,                I,          icircumflex,           Icircumflex ] }; // i I î Î
    key <AD09>	{ [                o,                O,                   oe,                    OE ] }; // o O œ Œ
    key <AD10>	{ [                p,                P,          ocircumflex,           Ocircumflex ] }; // p P ô Ô
    key <AD11>	{ [  dead_circumflex,   dead_diaeresis,           dead_tilde,        dead_abovering ] }; // ^ ̈ ̃ ˚
    key <AD12>	{ [           dollar,         sterling,               oslash,              Ooblique ] }; // $ £ ø Ø

    // Third row
    key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä
    key <AC02>	{ [                s,                S,               ssharp,    doublelowquotemark ] }; // s S ß „
    key <AC03>	{ [                d,                D,           ediaeresis,            Ediaeresis ] }; // d D ë Ë
    key <AC04>	{ [                f,                F,  leftsinglequotemark,    singlelowquotemark ] }; // f F ‘ ‚
    key <AC05>	{ [                g,                G, rightsinglequotemark,                   yen ] }; // g G ’ ¥
    key <AC06>	{ [                h,                H,                  eth,                   ETH ] }; // h H ð Ð
    key <AC07>	{ [                j,                J,           udiaeresis,            Udiaeresis ] }; // j J ü Ü
    key <AC08>	{ [                k,                K,           idiaeresis,            Idiaeresis ] }; // k K ï Ï
    key <AC09>	{ [                l,                L,            0x1000140,             0x100013F ] }; // l L ŀ Ŀ
    key <AC10>	{ [                m,                M,           odiaeresis,            Odiaeresis ] }; // m M ö Ö
    key <AC11>	{ [           ugrave,          percent,           dead_acute,                Ugrave ] }; // ù % ' Ù
    key <BKSL>	{ [         asterisk,               mu,           dead_grave,           dead_macron ] }; // * µ ` ̄

    // Fourth row
    key <LSGT>  { [             less,          greater,        lessthanequal,      greaterthanequal ] }; // < > ≤ ≥
    key <AB01>  { [                w,                W,        guillemotleft,   leftdoublequotemark ] }; // w W « “
    key <AB02>  { [                x,                X,       guillemotright,  rightdoublequotemark ] }; // x X » ”
    key <AB03>  { [                c,                C,            copyright,            registered ] }; // c C © ®
    key <AB04>  { [                v,                V,            0x100202F,             leftarrow ] }; // v V ⍽ ← (espace fine insécable)
    key <AB05>  { [                b,                B,            downarrow,               uparrow ] }; // b B ↓ ↑
    key <AB06>  { [                n,                N,              notsign,            rightarrow ] }; // n N ¬ →
    key <AB07>  { [            comma,         question,         questiondown,             0x1002026 ] }; // , ? ¿ …
    key <AB08>  { [        semicolon,           period,             multiply,             0x10022C5 ] }; // ; . × ⋅
    key <AB09>  { [            colon,            slash,             division,             0x1002215 ] }; // : / ÷ ∕
    key <AB10>  { [           exclam,          section,           exclamdown,             0x1002212 ] }; // ! § ¡ −
};

partial alphanumeric_keys
xkb_symbols "oss_latin9" {

    // Restricts the fr(oss) layout to latin9 symbols

    include "fr(oss)"
    include "keypad(oss_latin9)"

    name[Group1]="French (alternative, Latin-9 only)";

    // First row
    key <AE01>	{ [        ampersand,                1,           dead_caron,          dead_cedilla ] }; // & 1 ˇ ¸
    key <AE03>	{ [         quotedbl,                3,           numbersign,            dead_tilde ] }; // " 3 # ~
    key <AE04>	{ [       apostrophe,                4,            braceleft,            underscore ] }; // ' 4 { _
    key <AE05>	{ [        parenleft,                5,          bracketleft,                 minus ] }; // ( 5 [ -
    key <AE06>	{ [            minus,                6,                  bar,                 minus ] }; // - 6 | -
    key <AE08>	{ [       underscore,                8,            backslash,             backslash ] }; // _ 8 \ \
    key <AE11>	{ [       parenright,           degree,         bracketright,                 equal ] }; // ) ° ] =

    // Third row
    key <AC02>	{ [                s,                S,               ssharp,         guillemotleft ] }; // s S ß «
    key <AC04>	{ [                f,                F,           apostrophe,            apostrophe ] }; // f F ' '
    key <AC05>	{ [                g,                G,           apostrophe,                   yen ] }; // g G ' ¥
    key <AC09>	{ [                l,                L,       periodcentered,        periodcentered ] }; // l L · ·
    key <BKSL>	{ [         asterisk,               mu,           dead_grave,       dead_circumflex ] }; // * µ ` ^

    // Fourth row
    key <LSGT>  { [             less,          greater,                 less,               greater ] }; // < > < >
    key <AB01>  { [                w,                W,        guillemotleft,         guillemotleft ] }; // w W « «
    key <AB02>  { [                x,                X,       guillemotright,        guillemotright ] }; // x X » »
    key <AB04>  { [                v,                V,         nobreakspace,                  less ] }; // v V ⍽ < (espace insécable)
    key <AB05>  { [                b,                B,                minus,           asciicircum ] }; // b B - ^
    key <AB06>  { [                n,                N,              notsign,               greater ] }; // n N ¬ >
    key <AB07>  { [            comma,         question,         questiondown,                period ] }; // , ? ¿ .
    key <AB08>  { [        semicolon,           period,             multiply,        periodcentered ] }; // ; . × ·
    key <AB09>  { [            colon,            slash,             division,                 slash ] }; // : / ÷ /
    key <AB10>  { [           exclam,          section,           exclamdown,                 minus ] }; // ! § ¡ -
};

partial alphanumeric_keys
xkb_symbols "oss_Sundeadkeys" {

    // Modifies the basic fr(oss) layout to use the Sun dead keys

    include "fr(oss)"

    key <TLDE>	{ [      twosuperior,    threesuperior,          onesuperior,          dead_cedilla ] }; // ¹ ² ³ ¸

    key <AD11>	{ [  dead_circumflex,   dead_diaeresis,           dead_tilde,        dead_abovering ] }; // ^ ̈ ̃ ˚

    key <AC11>	{ [           ugrave,          percent,           dead_acute,                Ugrave ] }; // ù % ' Ù
    key <BKSL>	{ [         asterisk,               mu,           dead_grave,           dead_macron ] }; // * µ ` ̄
};

partial alphanumeric_keys
xkb_symbols "oss_sundeadkeys" {

    include "fr(oss_Sundeadkeys)"

    name[Group1]="French (alternative, Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "oss_nodeadkeys" {

    // Modifies the basic fr(oss) layout to eliminate all dead keys

    include "fr(oss)"

    name[Group1]="French (alternative, eliminate dead keys)";

    key <TLDE>	{ [      twosuperior,    threesuperior,          onesuperior,               cedilla ] }; // ² ³ ¹ ¸
    key <AE01>	{ [        ampersand,                1,                caron,                ogonek ] }; // & 1 ˇ ̨
    key <AE03>	{ [         quotedbl,                3,           numbersign,                 breve ] }; // " 3 # ˘

    key <AD11>	{ [      asciicircum,        diaeresis,           asciitilde,                 Aring ] }; // ^ ̈ ̃ Å
    key <AC11>	{ [           ugrave,          percent,                acute,                Ugrave ] }; // ù % ' Ù
    key <BKSL>	{ [         asterisk,               mu,                grave,                macron ] }; // * µ ` ̄
};


// Historic Linux French keyboard layout (fr-latin9)
// Copyright (c) 199x, 2002 Rene Cougnenc (original work)
//                          Guylhem Aznar <clavier @ externe.net> (maintainer)
//                          Nicolas Mailhot <Nicolas.Mailhot @ laposte.net>
//                              (XFree86 submission)
//
// This layout has long been distributed and refined outside official channels.
// To this day it remains more feature-rich and popular than the 'fr' layout.
//
// This layout is derived from an original version by Guylhem Aznar.
// The original version is always available from:
// http://en.tldp.org/HOWTO/Francophones-HOWTO.html
// and is distributed under a GPL license.
//
// The author has given permission for this derived version to be distributed
// under the standard XFree86 license. He would like all changes to this
// version to be sent to him at <clavier @ externe.net>, so he can sync
// the identically named linux console map (kbd, linux-console) and his
// out-of-tree GPL version.
//
// Now follows the keyboard design description in French.
// (If you can't read it you probably have no business changing this file anyway:)
//
// Les accents circonflexes des principales voyelles sont obtenus avec
// la touche Alt_Gr, les trémas sont obtenus par Alt_Gr + Shift.
//
//  ____                                     _________ _____________ _______
// | S A| S = Shift,  A = AltGr + Shift     | Imprime | Arrêt défil | Pause |
// | s a| s = normal, a = AltGr             |  Exec   |             | Halte |
//  ¯¯¯¯                                     ¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯
//  ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ _______
// | œ "| 1 ·| 2 É| 3 ,| 4 '| 5 "| 6 || 7 È| 8 ¯| 9 Ç| 0 À| ° ÿ| + °| <--   |
// | Œ "| & '| é ~| " #| ' {| ( [| - || è `| _ \| ç ^| à @| ) ]| = }|       |
//  ========================================================================
// | |<-  | A ä| Z Å| E ¢| R Ç| T Þ| Y Ý| U ü| I ï| O ö| P '| " `| $ ë|   , |
// |  ->| | a â| z å| e €| r ç| t þ| y ý| u û| i î| o ô| p ¶| ^ ~| £ ê| <-' |
//  ===================================================================¬    |
// |       | Q Ä| S Ø| D Ë| F ª| G Æ| H Ð| J Ü| K Ï| L Ö| M º| % Ù| µ ¥|    |
// | MAJ   | q Â| s ø| d Ê| f ±| g æ| h ð| j Û| k Î| l Ô| m ¹| ù ²| * ³|    |
//  ========================================================================
// | ^   | >  | W  | X  | C  | V  | B  | N  | ?  | .  | /  | §  |     ^     |
// | |   | < || w «| x »| c ©| v ®| b ß| n ¬| , ¿| ; ×| : ÷| ! ¡|     |     |
//  ========================================================================
// |      |      |      |                       |       |      |     |      |
// | Ctrl | Super| Alt  | Space    Nobreakspace | AltGr | Super|Menu | Ctrl |
//  ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯ ¯¯¯¯¯¯
//
//
//		Si les touches mortes fonctionnent, utiliser les accents dits
//		« morts », i.e. fonctionnant comme l'accent circonflexe & le
//		tréma des machines à écrire ; sont disponibles :
//
// (^) : accent circonflexe,
// Shift+(^) : tréma,
// Shift+AltGr+(^) : tilde,
// AltGr+(1) : accent aigu,
// AltGr+(7) : accent grave
//
// Pour s'en servir, procéder comme avec l'accent circonflexe & le tréma
// sur les vielles machines à écrire :
//
// AltGr+(1) puis e : é
// AltGr+(1) puis E : É
//
partial alphanumeric_keys

xkb_symbols "latin9" {

    include "latin"
    include "nbsp(level3)"

    name[Group1]="French (legacy, alternative)";

    key <TLDE>	{ [              oe,              OE, leftdoublequotemark, rightdoublequotemark ] };
    key <AE01>	{ [       ampersand,               1,          dead_acute,       periodcentered ] };
    key <AE02>	{ [          eacute,               2,          asciitilde,               Eacute ] };
    key <AE03>	{ [        quotedbl,               3,          numbersign,              cedilla ] };
    key <AE04>	{ [      apostrophe,               4,           braceleft,                acute ] };
    key <AE05>	{ [       parenleft,               5,         bracketleft,            diaeresis ] };
    key <AE06>	{ [           minus,               6,                 bar,            brokenbar ] };
    key <AE07>	{ [          egrave,               7,          dead_grave,               Egrave ] };
    key <AE08>	{ [      underscore,               8,           backslash,               macron ] };
    key <AE09>	{ [        ccedilla,               9,         asciicircum,             Ccedilla ] };
    key <AE10>	{ [          agrave,               0,                  at,               Agrave ] };
    key <AE11>	{ [      parenright,          degree,        bracketright,           ydiaeresis ] };
    key <AE12>	{ [           equal,            plus,          braceright,       dead_abovering ] };

    key <AD01>	{ [               a,               A,         acircumflex,           adiaeresis ] };
    key <AD02>	{ [               z,               Z,               aring,                Aring ] };
    key <AD03>	{ [               e,               E,            EuroSign,                 cent ] };
    key <AD04>	{ [               r,               R,            ccedilla,             Ccedilla ] };
    key <AD05>	{ [               t,               T,               thorn,                THORN ] };
    key <AD06>	{ [               y,               Y,              yacute,               Yacute ] };
    key <AD07>	{ [               u,               U,         ucircumflex,           udiaeresis ] };
    key <AD08>	{ [               i,               I,         icircumflex,           idiaeresis ] };
    key <AD09>	{ [               o,               O,         ocircumflex,           odiaeresis ] };
    key <AD10>	{ [               p,               P,           paragraph,                grave ] };
    key <AD11>	{ [ dead_circumflex,  dead_diaeresis,          dead_tilde,           apostrophe ] };
    key <AD12>	{ [          dollar,	    sterling,         ecircumflex,           ediaeresis ] };

    key <AC01>	{ [               q,               Q,         Acircumflex,           Adiaeresis ] };
    key <AC02>	{ [               s,               S,              oslash,             Ooblique ] };
    key <AC03>	{ [               d,               D,         Ecircumflex,           Ediaeresis ] };
    key <AC04>	{ [               f,               F,           plusminus,          ordfeminine ] };
    key <AC05>	{ [               g,               G,                  ae,                   AE ] };
    key <AC06>	{ [               h,               H,                 eth,                  ETH ] };
    key <AC07>	{ [               j,               J,         Ucircumflex,           Udiaeresis ] };
    key <AC08>	{ [               k,               K,         Icircumflex,           Idiaeresis ] };
    key <AC09>	{ [               l,               L,         Ocircumflex,           Odiaeresis ] };
    key <AC10>	{ [               m,               M,         onesuperior,            masculine ] };
    key <AC11>	{ [          ugrave,         percent,         twosuperior,               Ugrave ] };
    key <BKSL>  { [        asterisk,              mu,       threesuperior,                  yen ] };

    key <LSGT>	{ [            less,         greater,                 bar                       ] };
    key <AB01>	{ [               w,               W,       guillemotleft	        	] };
    key <AB02>	{ [               x,               X,      guillemotright                       ] };
    key <AB03>	{ [               c,               C,           copyright                       ] };
    key <AB04>	{ [               v,               V,          registered		        ] };
    key <AB05>	{ [               b,               B,              ssharp                       ] };
    key <AB06>	{ [               n,               N,             notsign                       ] };
    key <AB07>	{ [           comma,        question,        questiondown                       ] };
    key <AB08>	{ [       semicolon,          period,            multiply		        ] };
    key <AB09>	{ [           colon,           slash,            division                       ] };
    key <AB10>	{ [          exclam,         section,          exclamdown                       ] };

    // French uses a comma as decimal separator, but keyboards are labeled with a period
    // Will take effect when KP_Decimal is mapped to the locale decimal separator
    key <KPDL>  { [       KP_Delete,      KP_Decimal,           KP_Delete,           KP_Decimal ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "latin9_Sundeadkeys" {

    // Modifies the basic fr-latin9 layout to use the Sun dead keys

    include "fr(latin9)"

    key <AE01>	{ [       ampersand,               1,         dead_acute,       periodcentered ] };
    key <AE07>	{ [          egrave,               7,         dead_grave,               Egrave ] };
    key <AD11>	{ [ dead_circumflex,  dead_diaeresis,         dead_tilde,           apostrophe ] };
};

partial alphanumeric_keys
xkb_symbols "latin9_sundeadkeys" {

    include "fr(latin9_Sundeadkeys)"

    name[Group1]="French (legacy, alternative, Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "latin9_nodeadkeys" {

    // Modifies the basic fr-latin9 layout to eliminate all dead keys

    include "fr(latin9)"

    name[Group1]="French (legacy, alternative, eliminate dead keys)";

    key <AE01>	{ [       ampersand,               1,          apostrophe,       periodcentered ] };
    key <AE07>	{ [          egrave,               7,               grave,               Egrave ] };
    key <AE12>	{ [           equal,            plus,          braceright         	        ] };
    key <AD11>	{ [	asciicircum,  	   diaeresis,          asciitilde,           apostrophe ] };
};

// Bépo : Improved ergonomic french keymap using Dvorak method.
// Built by community on 'Dvorak Fr / Bépo' :
// see http://www.clavier-dvorak.org/wiki/ to join and help.
// XOrg integration (1.0rc2 version) in 2008
// by Frédéric Boiteux <fboiteux at free dot fr>
//
// Bépo layout (1.0rc2 version) for a pc105 keyboard (french) :
// ┌─────┐
// │ S A │   S = Shift,  A = AltGr + Shift
// │ s a │   s = normal, a = AltGr
// └─────┘
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ # ¶ │ 1 „ │ 2 “ │ 3 ” │ 4 ≤ │ 5 ≥ │ 6   │ 7 ¬ │ 8 ¼ │ 9 ½ │ 0 ¾ │ ° ′ │ ` ″ ┃ ⌫ Retour┃
// │ $ – │ " — │ « < │ » > │ ( [ │ ) ] │ @ ^ │ + ± │ - − │ / ÷ │ * × │ = ≠ │ % ‰ ┃  arrière┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ B ¦ │ É ˝ │ P § │ O Œ │ È ` │ !   │ V   │ D Ð │ L   │ J Ĳ │ Z Ə │ W   ┃Entrée ┃
// ┃Tab ↹  ┃ b | │ é ˊ │ p & │ o œ │ è ` │ ˆ ¡ │ v ˇ │ d ð │ l / │ j ĳ │ z ə │ w ̆  ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ A Æ │ U Ù │ I ˙ │ E ¤ │ ; ̛  │ C ſ │ T Þ │ S ẞ │ R ™ │ N   │ M º │ Ç , ┃      ┃
// ┃Maj ⇬   ┃ a æ │ u ù │ i ̈  │ e € │ , ’ │ c © │ t þ │ s ß │ r ® │ n ˜ │ m ¯ │ ç ¸ ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃ Ê   │ À   │ Y ‘ │ X ’ │ : · │ K   │ ? ̉  │ Q ̣  │ G   │ H ‡ │ F ª ┃             ┃
// ┃Shift ⇧┃ ê / │ à \ │ y { │ x } │ . … │ k ~ │ ' ¿ │ q ˚ │ g µ │ h † │ f ˛ ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ Espace inséc.   Espace inséc. fin ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ (Espace)      _               ␣ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛
partial alphanumeric_keys
xkb_symbols "bepo" {

    include "level3(ralt_switch)"
    include "keypad(oss)"

    name[Group1]= "French (Bepo, ergonomic, Dvorak way)";

    // First row
    key <TLDE> { [          dollar,   numbersign,        endash,       paragraph ] }; // $ # – ¶
    key <AE01> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [        quotedbl,            1,         emdash, doublelowquotemark ] }; // " 1 — „
    key <AE02> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [   guillemotleft,            2,           less,  leftdoublequotemark ] }; // « 2 < “
    key <AE03> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [  guillemotright,            3,        greater, rightdoublequotemark ] }; // » 3 > ”
    key <AE04> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [       parenleft,            4,    bracketleft,      lessthanequal ] }; // ( 4 [ ≤
    key <AE05> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [      parenright,            5,   bracketright,   greaterthanequal ] }; // ) 5 ] ≥
    key <AE06> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [              at,            6,    asciicircum                 ] }; // @ 6 ^
    key <AE07> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [            plus,            7,      plusminus,        notsign ] }; // + 7 ± ¬
    key <AE08> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [           minus,            8,          U2212,     onequarter ] }; // - 8 − ¼
    key <AE09> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [           slash,            9,       division,        onehalf ] }; // / 9 ÷ ½
    key <AE10> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [        asterisk,            0,       multiply,  threequarters ] }; // * 0 × ¾
    key <AE11> { [           equal,       degree,       notequal,        minutes ] }; // = ° ≠ ′
    key <AE12> { [         percent,        grave,          U2030,        seconds ] }; // % ` ‰ ″

    // Second row
    key <AD01> { [               b,            B,            bar,      brokenbar ] }; // b B | ¦
    key <AD02> { [          eacute,       Eacute,     dead_acute, dead_doubleacute ] }; // é É ˊ ˝
    key <AD03> { [               p,            P,      ampersand,        section ] }; // p P & §
    key <AD04> { [               o,            O,             oe,             OE ] }; // o O œ Œ
    key <AD05> { [          egrave,       Egrave,     dead_grave,          grave ] }; // è È ` `
    key <AD06> { [ dead_circumflex,       exclam,     exclamdown                 ] }; // ^ ! ¡
    key <AD07> { [               v,            V,     dead_caron                 ] }; // v V ˇ
    key <AD08> { [               d,            D,            eth,            ETH ] }; // d D ð Ð
    key <AD09> { [               l,            L,    dead_stroke                 ] }; // l L /
    key <AD10> { [               j,            J,          U0133,          U0132 ] }; // j J ĳ Ĳ
    key <AD11> { [               z,            Z,          schwa,          SCHWA ] }; // z Z ə Ə
    key <AD12> { [               w,            W,     dead_breve                 ] }; // w W ̆

    // Third row
    key <AC01> { [               a,            A,             ae,             AE ] }; // a A æ Æ
    key <AC02> { [               u,            U,         ugrave,         Ugrave ] }; // u U ù Ù
    key <AC03> { [               i,            I, dead_diaeresis,  dead_abovedot ] }; // i I ̈ ˙
    key <AC04> { [               e,            E,       EuroSign,  dead_currency ] }; // e E € ¤
    key <AC05> { [           comma,    semicolon, rightsinglequotemark, dead_horn ] }; // , ; ’ ̛
    key <AC06> { [               c,            C,      copyright,          U017F ] }; // c C © ſ
    key <AC07> { [               t,            T,          thorn,          THORN ] }; // t T þ Þ
    key <AC08> { [               s,            S,         ssharp,          U1E9E ] }; // s S ß ẞ
    key <AC09> { [               r,            R,     registered,      trademark ] }; // r R ® ™
    key <AC10> { [               n,            N,     dead_tilde                 ] }; // n N ~
    key <AC11> { [               m,            M,    dead_macron,      masculine ] }; // m M ̄ º
    key <BKSL> { [        ccedilla,     Ccedilla,   dead_cedilla, dead_belowcomma ] }; // ç Ç ¸ ,

    // Fourth row
    key <LSGT> { [     ecircumflex,  Ecircumflex,          slash                 ] }; // ê Ê /
    key <AB01> { [          agrave,       Agrave,      backslash                 ] }; // à À \
    key <AB02> { [               y,            Y,      braceleft, leftsinglequotemark  ] }; // y Y { ‘
    key <AB03> { [               x,            X,     braceright, rightsinglequotemark ] }; // x X } ’
    key <AB04> { [          period,        colon,       ellipsis, periodcentered ] }; // . : … ·
    key <AB05> { [               k,            K,     asciitilde                 ] }; // k K ~
    key <AB06> { [      apostrophe,     question,   questiondown,      dead_hook ] }; // ' ? ¿ ̉
    key <AB07> { [               q,            Q, dead_abovering,  dead_belowdot ] }; // q Q ˚ ̣
    key <AB08> { [               g,            G,     dead_greek                 ] }; // g G µ
    key <AB09> { [               h,            H,         dagger,   doubledagger ] }; // h H † ‡
    key <AB10> { [               f,            F,    dead_ogonek,    ordfeminine ] }; // f F ̨ ª

    key <SPCE> { [           space, nobreakspace,     underscore,          U202F ] }; // ␣ (espace insécable) _ (espace insécable fin)
};

partial alphanumeric_keys
xkb_symbols "bepo_latin9" {

    // Restricts the fr(bepo) layout to latin9 symbols

    include "fr(bepo)"
    include "keypad(oss_latin9)"

    name[Group1]="French (Bepo, ergonomic, Dvorak way, Latin-9 only)";

    key <TLDE> { [          dollar,   numbersign,        dollar,       paragraph ] }; // $ # $ ¶

    key <AE01> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [        quotedbl,            1                                 ] }; // " 1
    key <AE02> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [   guillemotleft,            2,           less                 ] }; // « 2 <
    key <AE03> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [  guillemotright,            3,        greater                 ] }; // » 3 >
    key <AE04> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [       parenleft,            4,    bracketleft                 ] }; // ( 4 [
    key <AE05> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [      parenright,            5,   bracketright                 ] }; // ) 5 ]
    key <AE08> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [           minus,            8,          minus,     onequarter ] }; // - 8 - ¼
    key <AE11> { [           equal,       degree                                 ] }; // = °
    key <AE12> { [         percent,        grave                                 ] }; // % `

    key <AD01> { [               b,            B,            bar                 ] }; // b B |
    key <AD02> { [          eacute,       Eacute,     dead_acute                 ] }; // é É ˊ
    key <AD10> { [               j,            J                                 ] }; // j J
    key <AD11> { [               z,            Z                                 ] }; // z Z
    key <AD12> { [               w,            W                                 ] }; // w W

    key <AC03> { [               i,            I, dead_diaeresis                 ] }; // i I ̈
    key <AC05> { [           comma,    semicolon,          comma,      dead_horn ] }; // , ; , ̛
    key <AC06> { [               c,            C,      copyright                 ] }; // c C ©
    key <AC08> { [               s,            S,         ssharp                 ] }; // s S ß
    key <AC09> { [               r,            R,     registered                 ] }; // r R ®
    key <AC11> { [               m,            M,         macron,      masculine ] }; // m M ̄ º

    key <AB02> { [               y,            Y,      braceleft                 ] }; // y Y {
    key <AB03> { [               x,            X,     braceright                 ] }; // x X }
    key <AB04> { [          period,        colon                                 ] }; // . :
    key <AB09> { [               h,            H                                 ] }; // h H
    key <AB10> { [               f,            F,              f,    ordfeminine ] }; // f F   ª

    // Note : on a besoin de redéfinir les niveaux 3 et 4,
    // donc nbsp(level2) ne suffit pas !
    key <SPCE> { [           space,  nobreakspace,    underscore,   nobreakspace ] }; // ␣ (espace insécable) _ (espace insécable)
};

// Author   : Francis Leboutte, http://www.algo.be/ergo/dvorak-fr.html
//            thanks to Fabien Cazenave for his help
// Licence  : X11
// Version  : 0.3

// Base layer + dead AltGr key (`):
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
// │ *   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ +   │ %   ┃          ┃
// │ _   │ =   │ / ± │ - ¼ │ è ½ │ \ ¾ │ ^   │ (   │ ` ` │ )   │ "   │ [   │ ]   ┃ ⌫        ┃
// ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
// ┃        ┃ ? Æ │ <   │ >   │ G   │ !   │ H   │ V   │ C Ç │ M   │ K   │ Z   │ &   ┃       ┃
// ┃ ↹      ┃ : æ │ ' $ │ é É │ g € │ . ° │ h   │ v   │ c ç │ m µ │ k   │ z   │ ¨   ┃       ┃
// ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
// ┃         ┃ O Ò │ A À │ U Ù │ E È │ B   │ F   │ S   │ T   │ N   │ D   │ W   │ #   ┃      ┃
// ┃ ⇬       ┃ o ò │ a à │ u ù │ e è │ b   │ f   │ s « │ t   │ n » │ d   │ w   │ ~   ┃      ┃
// ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
// ┃      ┃ ç Ç │ | Œ │ Q   │ @   │ I Ì │ Y   │ X   │ R   │ L   │ P   │ J   ┃               ┃
// ┃ ⇧    ┃ à À │ ; œ │ q { │ , } │ i ì │ y £ │ x   │ r º │ l   │ p § │ j   ┃ ⇧             ┃
// ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
// ┃       ┃       ┃       ┃ ␣                            ⍽ ┃       ┃       ┃       ┃       ┃
// ┃ ctrl  ┃ super ┃ alt   ┃ ␣ Espace    Espace insécable ⍽ ┃ alt   ┃ super ┃ menu  ┃ ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

// Notice the specific Caps_Lock layer:
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
// │ *   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ +   │ %   ┃          ┃
// │     │     │     │     │     │     │     │     │     │     │     │     │     ┃ ⌫        ┃
// ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
// ┃        ┃     │ <   │ >   │     │     │     │     │     │     │     │     │     ┃       ┃
// ┃ ↹      ┃     │     │     │     │     │     │     │     │     │     │     │     ┃       ┃
// ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
// ┃         ┃     │     │     │     │     │     │     │     │     │     │     │     ┃      ┃
// ┃ ⇬       ┃     │     │     │     │     │     │     │     │     │     │     │     ┃      ┃
// ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
// ┃      ┃ /   │ -   │     │     │     │     │     │     │     │     │     ┃               ┃
// ┃ ⇧    ┃     │     │     │     │     │     │     │     │     │     │     ┃ ⇧             ┃
// ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
// ┃       ┃       ┃       ┃ ␣                            ⍽ ┃       ┃       ┃       ┃       ┃
// ┃ ctrl  ┃ super ┃ alt   ┃ ␣ Espace    Espace insécable ⍽ ┃ alt   ┃ super ┃ menu  ┃ ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial alphanumeric_keys modifier_keys
xkb_symbols "dvorak" {
  name[Group1]="French (Dvorak)";

  // First row
  key <TLDE> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [       underscore,   asterisk                  ] };
  key <AE01> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [            equal,          1                  ] };
  key <AE02> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [            slash,          2,       plusminus ] };
  key <AE03> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [            minus,          3,      onequarter ] };
  key <AE04> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [           egrave,          4,         onehalf ] };
  key <AE05> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [        backslash,          5,   threequarters ] };
  key <AE06> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [  dead_circumflex,          6                  ] };
  key <AE07> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [        parenleft,          7                  ] };
  key <AE08> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [ ISO_Level3_Latch,          8,           grave ] };
  key <AE09> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [       parenright,          9                  ] };
  key <AE10> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [         quotedbl,          0                  ] };
  key <AE11> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [      bracketleft,       plus                  ] };
  key <AE12> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [     bracketright,    percent                  ] };

  // Second row
  key <AD01> { [            colon,         question,              ae,               AE ] };
  key <AD02> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [       apostrophe,       less,          dollar ] };
  key <AD03> { type[group1] = "FOUR_LEVEL_SEMIALPHABETIC", [           eacute,    greater,          Eacute ] };
  key <AD04> { [                g,                G,        EuroSign                   ] };
  key <AD05> { [           period,           exclam,          degree                   ] };
  key <AD06> { [                h,                H                                    ] };
  key <AD07> { [                v,                V                                    ] };
  key <AD08> { [                c,                C,        ccedilla,         Ccedilla ] };
  key <AD09> { [                m,                M,              mu                   ] };
  key <AD10> { [                k,                K                                    ] };
  key <AD11> { [                z,                Z                                    ] };
  key <AD12> { [   dead_diaeresis,        ampersand                                    ] };

  // Third row
  key <AC01> { [                o,                O,          ograve,           Ograve ] };
  key <AC02> { [                a,                A,          agrave,           Agrave ] };
  key <AC03> { [                u,                U,          ugrave,           Ugrave ] };
  key <AC04> { [                e,                E,          egrave,           Egrave ] };
  key <AC05> { [                b,                B                                    ] };
  key <AC06> { [                f,                F                                    ] };
  key <AC07> { [                s,                S,   guillemotleft                   ] };
  key <AC08> { [                t,                T                                    ] };
  key <AC09> { [                n,                N,  guillemotright                   ] };
  key <AC10> { [                d,                D                                    ] };
  key <AC11> { [                w,                W                                    ] };
  key <BKSL> { [       asciitilde,       numbersign                                    ] };

  // Fourth row
  key <LSGT> { type[group1] = "FOUR_LEVEL_PLUS_LOCK", [       agrave, ccedilla,  Agrave, Ccedilla,   slash ] };
  key <AB01> { type[group1] = "FOUR_LEVEL_PLUS_LOCK", [    semicolon,      bar,      oe,       OE,   minus ] };
  key <AB02> { [                q,                Q,       braceleft                   ] };
  key <AB03> { [            comma,               at,      braceright                   ] };
  key <AB04> { [                i,                I,          igrave,           Igrave ] };
  key <AB05> { [                y,                Y,        sterling                   ] };
  key <AB06> { [                x,                X                                    ] };
  key <AB07> { [                r,                R,       masculine                   ] };
  key <AB08> { [                l,                L                                    ] };
  key <AB09> { [                p,                P,         section                   ] };
  key <AB10> { [                j,                J                                    ] };

  key <SPCE> { [            space,            space,    nobreakspace,     nobreakspace ] };
};

// C'WHERTY: Breton keyboard. Ar c'hlavier brezhoneg.
// Copyright © 2009 Dominique Pellé <dominique.pelle@gmail.com>
// Version: 0.1
//
// ┌─────┐
// │ S A │   S = Reol = Shift,  A = ArErl + Pennlizherenn = AltGr + Shift
// │ s a │   s = normal,        a = ArErl = AltGr
// └─────┘
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ $ Γ │ 1 Δ │ 2 Θ │ 3 Λ │ 4 Ξ │ 5 Π │ 6 Σ │ 7 Φ │ 8 Ψ │ 9 Ç │ 0 Ω │ ° ß │ + ¬ ┃ ⌫ Souzañ┃
// │ ² ˙ │ & ¯ │ é ´ │ " # │ ' { │ ( [ │ - | │ è ` │ - \ │ ç ± │ à @ │ ) ] │ = } ┃         ┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃Toalenn┃ C'h │ W ω │ E ε │ R ρ │ T τ │ Y ψ │ U υ │ I ι │ O OE│ P π │ ¨ ¥ │ * £ ┃Enankañ┃
// ┃     ↹ ┃ c'h │ w   │ e € │ r   │ t   │ y   │ u   │ i ı │ o oe│ p   │ ^ « │ / » ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃Prenn   ┃ A Æ │ S σ │ D δ │ F φ │ G γ │ H η │ J ς │ K κ │ L λ │ M μ │ Ù ® │ ! ¡ ┃      ┃
// ┃Pennli ⇬┃ a æ │ s   │ d $ │ f   │ g   │ h   │ j   │ k   │ l   │ m   │ ù ŭ │ ? ¿ ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃ Q θ │ Z ζ │ X ξ │ C χ │ V   │ B β │ N ν │ CH  │ Ñ   │ : © │ ;   ┃             ┃
// ┃Shift ⇧┃ q < │ z > │ x   │ c ¢ │ v   │ b   │ n   │ ch  │ ñ   │ .   │ ,   ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ⍽ Espace insécable              ␣ ┃       ┃       ┃       ┃
// ┃Reol   ┃Meta   ┃Erl    ┃ ␣ Espace                        ␣ ┃ArErl ⇮┃Menu   ┃Reol   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛
partial alphanumeric_keys
xkb_symbols "bre" {

    include "keypad(oss)"

    name[Group1]= "French (Breton)";

    // First row
    key <TLDE> { [     twosuperior,     dead_tilde,   dead_abovedot,    Greek_GAMMA ] };
    key <AE01> { [       ampersand,              1,     dead_macron,    Greek_DELTA ] };
    key <AE02> { [          eacute,              2,      dead_acute,    Greek_THETA ] };
    key <AE03> { [        quotedbl,              3,      numbersign,    Greek_LAMDA ] };
    key <AE04> { [      apostrophe,              4,       braceleft,       Greek_XI ] };
    key <AE05> { [       parenleft,              5,     bracketleft,       Greek_PI ] };
    key <AE06> { [           minus,              6,             bar,    Greek_SIGMA ] };
    key <AE07> { [          egrave,              7,      dead_grave,      Greek_PHI ] };
    key <AE08> { [      underscore,              8,       backslash,      Greek_PSI ] };
    key <AE09> { [        ccedilla,              9,       plusminus,       Ccedilla ] };
    key <AE10> { [          agrave,              0,              at,    Greek_OMEGA ] };
    key <AE11> { [      parenright, dead_abovering,    bracketright,         ssharp ] };
    key <AE12> { [           equal,           plus,      braceright,        notsign ] };

    // Second row
    // Handling the C'H key correctly requires an inputmethod (XIM)
    // See https://bugs.freedesktop.org/show_bug.cgi?id=19506
 // key <AD01> { [    trigraph_c_h,   trigraph_C_h,    trigraph_C_H,    Greek_alpha ] };
    key <AD01> { [           UF8FD,          UF8FE,           UF8FF,    Greek_alpha ] };
    key <AD02> { [               w,              W,     Greek_omega,    Greek_omega ] };
    key <AD03> { [               e,              E,        EuroSign,  Greek_epsilon ] };
    key <AD04> { [               r,              R,       Greek_rho,      Greek_rho ] };
    key <AD05> { [               t,              T,       Greek_tau,      Greek_tau ] };
    key <AD06> { [               y,              Y,       Greek_psi,      Greek_psi ] };
    key <AD07> { [               u,              U,   Greek_upsilon,  Greek_upsilon ] };
    key <AD08> { [               i,              I,        idotless,     Greek_iota ] };
    key <AD09> { [               o,              O,              oe,             OE ] };
    key <AD10> { [               p,              P,        Greek_pi,       Greek_pi ] };
    key <AD11> { [ dead_circumflex, dead_diaeresis,   guillemotleft,            yen ] };
    key <AD12> { [           slash,       asterisk,  guillemotright,       sterling ] };

    // Third row
    key <AC01> { [               a,              A,              ae,             AE ] };
    key <AC02> { [               s,              S,     Greek_sigma,    Greek_sigma ] };
    key <AC03> { [               d,              D,          dollar,    Greek_delta ] };
    key <AC04> { [               f,              F,       Greek_phi,      Greek_phi ] };
    key <AC05> { [               g,              G,     Greek_gamma,    Greek_gamma ] };
    key <AC06> { [               h,              H,       Greek_eta,      Greek_eta ] };
    key <AC07> { [               j,              J, Greek_finalsmallsigma, Greek_finalsmallsigma ] };
    key <AC08> { [               k,              K,       Greek_kappa,  Greek_kappa ] };
    key <AC09> { [               l,              L,       Greek_lamda, Greek_lambda ] };
    key <AC10> { [               m,              M,          Greek_mu,     Greek_mu ] };
    key <AC11> { [          ugrave,         Ugrave,            ubreve,   registered ] };
    key <BKSL> { [        question,         exclam,      questiondown,   exclamdown ] };

    // Fourth row
    key <LSGT> { [               q,              Q,            less,    Greek_theta ] };
    key <AB01> { [               z,              Z,         greater,     Greek_zeta ] };
    key <AB02> { [               x,              X,        Greek_xi,       Greek_xi ] };
    key <AB03> { [               c,              C,            cent,      Greek_chi ] };
    key <AB04> { [               v,              V                                  ] };
    key <AB05> { [               b,              B,      Greek_beta,     Greek_beta ] };
    key <AB06> { [               n,              N,        Greek_nu,       Greek_nu ] };
    // Handling the CH key correctly requires an inputmethod (XIM)
    // See https://bugs.freedesktop.org/show_bug.cgi?id=19506
 // key <AB07> { [      digraph_ch,     digraph_Ch,      digraph_CH,  Greek_omicron ] };
    key <AB07> { [           UF8FA,          UF8FB,           UF8FC,  Greek_omicron ] };
    key <AB08> { [          ntilde,         Ntilde                                  ] };
    key <AB09> { [          period,          colon,         section,      copyright ] };
    key <AB10> { [           comma,      semicolon,         percent                 ] };

    key <SPCE> { [           space,   nobreakspace,           space,   nobreakspace ] };

    include "level3(ralt_switch)"
};

// Occitan layout
// Author : 2009 Thomas Metz <tmetz @ free.fr>
// Derived from the layout defined at http://www.panoccitan.org
// Version: 0.1
// Differences from OSS French keyboard :
// - add á, í, ò, ó et ú, Á, Í, Ò, Ó, Ú, ñ, Ñ
// - change position of æ, ü, î, û, œ, ô, ö, ï, â, ë
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ ³ ¸ │ 1 ̨  │ 2 É │ 3 ˘ │ 4 — │ 5 – │ 6 ‑ │ 7 È │ 8 ™ │ 9 Ç │ 0 À │ ° ≠ │ + ± ┃ ⌫ Retour┃
// │ ² ¹ │ & ˇ │ é ~ │ " # │ ' { │ ( [ │ - | │ è ` │ _ \ │ ç ^ │ à @ │ ) ] │ = } ┃  arrière┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ A Á │ Z Æ │ E ¢ │ R Ê │ T Ë │ Y Û │ U Ú │ I Í │ O Ó │ P Ò │ ¨ Œ │ £ Ø ┃Entrée ┃
// ┃Tab ↹  ┃ a á │ z æ │ e € │ r ê │ t ë │ y û │ u ú │ i í │ o ó │ p ò │ ^ œ │ $ ø ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ Q Ä │ S „ │ D Â │ F ‚ │ G ¥ │ H Ü │ J Î │ K Ï │ L Ô │ M Ö │ % Ù │ µ ̄  ┃      ┃
// ┃Maj ⇬   ┃ q ä │ s ß │ d â │ f ‘ │ g ’ │ h ü │ j î │ k ï │ l ô │ m ö │ ù ' │ * ` ┃      ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃       ┃ > ≥ │ W “ │ X ” │ C ® │ V ← │ B ↑ │ N Ñ │ ? … │ . . │ / ∕ │ § − ┃             ┃
// ┃Shift ⇧┃ < ≤ │ w « │ x » │ c © │ v → │ b ↓ │ n ñ │ , ¿ │ ; × │ : ÷ │ ! ¡ ┃Shift ⇧      ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣         Espace fine insécable ⍽ ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ Espace       Espace insécable ⍽ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛
partial alphanumeric_keys
xkb_symbols "oci" {

    include "fr(oss)"

    name[Group1]= "Occitan";

    key <AD01>	{ [                a,                A,               aacute,                Aacute ] }; // a A á Á
    key <AD02>	{ [                z,                Z,                   ae,                    AE ] }; // z Z æ Æ
    key <AD05>	{ [                t,                T,           ediaeresis,            Ediaeresis ] }; // t T ë Ë
    key <AD06>	{ [                y,                Y,          ucircumflex,           Ucircumflex ] }; // y Y û Û
    key <AD07>	{ [                u,                U,               uacute,                Uacute ] }; // u U ú Ú
    key <AD08>	{ [                i,                I,               iacute,                Iacute ] }; // i I í Í
    key <AD09>	{ [                o,                O,               oacute,                Oacute ] }; // o O ó Ó
    key <AD10>	{ [                p,                P,               ograve,                Ograve ] }; // p P ò Ò
    key <AD11>	{ [  dead_circumflex,   dead_diaeresis,                   oe,                    OE ] }; // ^ ̈ ̃ œ Œ

    key <AC03>	{ [                d,                D,          acircumflex,           Acircumflex ] }; // d D â Â
    key <AC06>	{ [                h,                H,           udiaeresis,            Udiaeresis ] }; // h H ü Ü
    key <AC07>	{ [                j,                J,          icircumflex,           Icircumflex ] }; // j J î Î
    key <AC08>	{ [                k,                K,           idiaeresis,            Idiaeresis ] }; // k K ï Ï
    key <AC09>	{ [                l,                L,          ocircumflex,           Ocircumflex ] }; // l L ô Ô

    key <AB04>  { [                v,                V,           rightarrow,             leftarrow ] }; // v V → ←
    key <AB06>  { [                n,                N,               ntilde,                Ntilde ] }; // n N ñ Ñ
};

// Marc.Shapiro@inria.fr 19-sep-1998
// modifications : Etienne Herlent <eherlent@linux-france.org> june 2000
// adapted to the new input layer :
//        Martin Costabel <costabel@wanadoo.fr> 3-jan-2001
// adapted for Latin9 alphabet (ISO-8859-15):
//        Etienne Herlent <eherlent@linux-france.org> march 2005

// This map is an almost-complete mapping of the standard French
// MacIntosh keyboard under Xwindows.  I tried to remain as faithful
// as possible to the Mac meaning of each key.	I did this entirely by
// hand and by intuition, relying on the Clavier (Keyboard?) Desktop
// Accessory for the Mac meaning of keys, and on reading keysymdef.h
// to intuit the corresponding X names.	 Lacking proper documentation,
// I may have made some mistakes.

// Entries marked CHECK are particularly uncertain

// Entries marked MISSING mark Mac characters for which I was unable
// to find a corresponding keysym.  (Some for sure don't: e.g. the
// Apple mark and the oe/OE character; others I may have simply not
// found.)

// Copied from macintosh_vndr/fr
partial alphanumeric_keys
xkb_symbols "mac" {

    name[Group1]= "French (Macintosh)";

    key <TLDE> {	[          at, numbersign, periodcentered,  Ydiaeresis	]	}; // MISSING: Ydiaeresis; eherlent : ok in Latin9
    key <AE01> {	[   ampersand,    1,   VoidSymbol,    dead_acute	]	}; // MISSING: Apple
    key <AE02> {	[      eacute,    2,   ediaeresis,        Eacute	]	};
    key <AE03> {	[    quotedbl,    3,   VoidSymbol,    VoidSymbol	] 	}; // CHECK all quotemarks
    key <AE04> {	[  apostrophe,    4,   VoidSymbol,    VoidSymbol	] 	};
    key <AE05> {	[   parenleft,    5,    braceleft,   bracketleft	]	};
 // CHECK section
    key <AE06> {	[     section,    6,    paragraph,         aring	]	};
    key <AE07> {	[      egrave,    7, guillemotleft, guillemotright	]	};
    key <AE08> {	[      exclam,    8,   exclamdown,   Ucircumflex	]	};
    key <AE09> {	[    ccedilla,    9,     Ccedilla,        Aacute	]	};
    key <AE10> {	[      agrave,    0,       oslash,    VoidSymbol	]	}; // MISSING: Oslash
    key <AE11> {	[  parenright, degree, braceright,  bracketright	]	};
    key <AE12> {	[       minus, underscore, emdash,        endash	]	}; // CHECK dashes

    key <AD01> {	[           a,  A,           ae,          AE	]	};
    key <AD02> {	[           z,  Z,  Acircumflex,       Aring	]	};
    key <AD03> {	[           e,  E,  ecircumflex, Ecircumflex	]	};
    key <AD04> {	[           r,  R,   registered,    currency	]	};
    key <AD05> {	[           t,  T,   VoidSymbol,  VoidSymbol	]	};
    key <AD06> {	[           y,  Y,       Uacute,  Ydiaeresis	]	}; // MISSING: Ydiaeresis; eherlent : ok in Latin9
    key <AD07> {	[           u,  U,   VoidSymbol, ordfeminine	]	}; // MISSING: ordmasculine?
    key <AD08> {	[           i,  I,  icircumflex,  idiaeresis	]	};
    key <AD09> {	[           o,  O,           oe,          OE	]	}; // MISSING: oe, OE lacking in Latin1; eherlent ok in Latin9
    key <AD10> {	[           p,  P,   VoidSymbol,  VoidSymbol	]	};
    key <AD11> {	[dead_circumflex,dead_diaeresis, ocircumflex, Ocircumflex	]	};
    key <AD12> {	[      dollar, asterisk,   EuroSign, yen	]	}; // eherlent : EuroSign in Latin9

    key <AC01> {	[         q, Q, acircumflex,         Agrave	]	};
    key <AC02> {	[         s, S,      Ograve,     VoidSymbol	]	};
    key <AC03> {	[         d, D,  VoidSymbol,     VoidSymbol	]	};
    key <AC04> {	[         f, F,  VoidSymbol, periodcentered	]	}; // MISSING: oblong script f??
    key <AC05> {	[         g, G,  VoidSymbol,     VoidSymbol	]	}; // MISSING: kerned fi, fl
    key <AC06> {	[         h, H,      Igrave,    Icircumflex	]	};
    key <AC07> {	[         j, J,  Idiaeresis,         Iacute	]	};
    key <AC08> {	[         k, K,      Egrave,     Ediaeresis	]	};
    key <AC09> {	[         l, L,     notsign,            bar	]	};
    key <AC10> {	[         m, M,          mu,         Oacute	]	};
    key <AC11> {	[    ugrave,percent, Ugrave,    ucircumflex	]	}; // MISSING: per-mille
    key <BKSL> {	[ dead_grave, sterling,  at,     numbersign	]	};

    key <LSGT> {	[      less, greater, VoidSymbol, VoidSymbol	]	};
    key <AB01> {	[         w, W, VoidSymbol,   VoidSymbol	]	}; // MISSING: half-guillemot (single angle bracket)
    key <AB02> {	[         x, X, VoidSymbol,   VoidSymbol	]	}; // CHECK similarequal; MISSING: extra-slanted slash
    key <AB03> {	[         c, C,  copyright,         cent	]	};
    key <AB04> {	[         v, V,    diamond,  leftradical	]	}; // CHECK diamond, leftradical
    key <AB05> {	[         b, B,     ssharp,   VoidSymbol	]	}; // CHECK: Greek_beta or ssharp?; MISSING: oblong script s
    key <AB06> {	[         n, N,  dead_tilde,  asciitilde	]	};
    key <AB07> {	[     comma,  question, VoidSymbol,  questiondown	]	};
    key <AB08> {	[ semicolon,  period, VoidSymbol,  periodcentered	]	};
    key <AB09> {	[     colon,  slash,   division,        backslash	]	};
    key <AB10> {	[     equal,   plus, VoidSymbol,        plusminus	]	};

    key <SPCE> {	[     space,  space, nobreakspace,   nobreakspace	]	};

    key <KPDL> {	[  comma,KP_Decimal	]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "geo" {
    include "ge(basic)"

    name[Group1]= "Georgian (France, AZERTY Tskapo)";

    key <TLDE> { [ exclam, noSymbol ] };
    key <AE01> { [ 0x0100201e, 1 ] };
    key <AE02> { [ 0x01002116, 2 ] };
    key <AE03> { [ percent, 3    ] };
    key <AE04> { [ parenleft, 4  ] };
    key <AE05> { [ colon, 5      ] };
    key <AE06> { [ semicolon, 6  ] };
    key <AE07> { [ question, 7   ] };
    key <AE08> { [ 0x01002116, 8 ] };
    key <AE09> { [ degree, 9     ] };
    key <AE10> { [ parenright, 0 ] };
    key <AE11> { [ minus, underscore, 0x01002014 ] };
    key <AE12> { [ less, greater ] };

    key <AD01> { [ 0x010010d0,  0x010010fa     ] };
    key <AD02> { [ 0x010010d6,  Z              ] };
    key <AD03> { [ 0x010010d4,  E, 0x010010f1  ] };
    key <AD04> { [ 0x010010e0,  0x010000ae     ] };
    key <AD05> { [ 0x010010e2,  T              ] };
    key <AD06> { [ 0x010010e7,  0x010010f8     ] };
    key <AD07> { [ 0x010010e3,  U              ] };
    key <AD08> { [ 0x010010d8,  0x010010f2     ] };
    key <AD09> { [ 0x010010dd,  O              ] };
    key <AD10> { [ 0x010010de,  P              ] };
    key <AD11> { [ 0x010010d7,  T              ] };
    key <AD12> { [ 0x010010eb,  Z              ] };

    key <AC01> { [ 0x010010e5,  Q              ] };
    key <AC02> { [ 0x010010e1,  S              ] };
    key <AC03> { [ 0x010010d3,  D              ] };
    key <AC04> { [ 0x010010e4,  0x010010f6     ] };
    key <AC05> { [ 0x010010d2,  0x010010f9     ] };
    key <AC06> { [ 0x010010f0,  0x010010f5     ] };
    key <AC07> { [ 0x010010ef,  0x010010f7     ] };
    key <AC08> { [ 0x010010d9,  K              ] };
    key <AC09> { [ 0x010010da,  L              ] };
    key <AC10> { [ 0x010010db,  M              ] };
    key <AC11> { [ 0x010010df,  J              ] };
    key <BKSL> { [ 0x010010e9,  0x010000a9     ] };

    key <LSGT> { [ guillemotleft,guillemotright ] };
    key <AB01> { [ 0x010010ec,  W               ] };
    key <AB02> { [ 0x010010ee,  0x010010f4      ] };
    key <AB03> { [ 0x010010ea,  0x010000a9      ] };
    key <AB04> { [ 0x010010d5,  0x010010f3      ] };
    key <AB05> { [ 0x010010d1,  B               ] };
    key <AB06> { [ 0x010010dc,  0x010010fc      ] };
    key <AB07> { [ comma,       0x01002014      ] };
    key <AB08> { [ 0x010010e8,  S               ] };
    key <AB09> { [ 0x010010e6,  noSymbol        ] };
    key <AB10> { [ 0x010010ed,  noSymbol        ] };

};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/fr(sun_type6)"
};


partial alphanumeric_keys
xkb_symbols "azerty" {
    name[Group1]="French (Azerty)";

    include "level3(ralt_switch)"

// French AZERTY-Keyboard layout
// Author : 2015, Mats Blakstad <mats @ globalbility.org>
// Based on the layout at https://en.wikipedia.org/wiki/File:KB_France.svg

// LAYOUT OVERVIEW                              
//  ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ ____ _______
// |    | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | 0  | °  | +  | <--   |
// | ²  | &  | é ~| " #| ' {| ( [| - || è `| _ \| ç ^| à @| ) ]| = }|       |
//  ========================================================================
// | |<-  | A  | Z  | E  | R  | T  | Y  | U  | I  | O  | P  | ¨  | $  |   , |
// |  ->| | a  | z  | e €| r  | t  | y  | u  | i  | o  | p  | ^  | £ ¤| <-' |
//  ===================================================================¬    |
// |       | Q  | S  | D  | F  | G  | H  | J  | K  | L  | M  | %  | µ  |    |
// | MAJ   | q  | s  | d  | f  | g  | h  | j  | k  | l  | m  | ù  | *  |    |
//  ========================================================================
// | ^   | >  | W  | X  | C  | V  | B  | N  | ?  | .  | /  | §  |     ^     |
// | |   | <  | w  | x  | c  | v  | b  | n  | ,  | ;  | :  | !  |     |     |
//  ========================================================================
// |      |      |      |                       |       |      |     |      |
// | Ctrl | Super| Alt  | Space    Nobreakspace | AltGr | Super|Menu | Ctrl |
//  ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ ¯¯¯¯¯¯¯ ¯¯¯¯¯¯ ¯¯¯¯¯ ¯¯¯¯¯¯

    // First row
    key <TLDE>	{ [	twosuperior 						] };
    key <AE01>	{ [	ampersand,	1 					] };
    key <AE02> { [	eacute,		2,		asciitilde	 	] };
    key <AE03>	{ [	quotedbl,	3,		numbersign		] };
    key <AE04>	{ [	apostrophe,	4,		braceleft		] };
    key <AE05>	{ [	parenleft,	5,		bracketleft		] };
    key <AE06>	{ [	minus,		6,		bar			] };
    key <AE07>	{ [	egrave,		7,		grave			] };
    key <AE08>	{ [	underscore, 	8,		backslash		] };
    key <AE09>	{ [	ccedilla, 	9,		asciicircum		] };
    key <AE10>	{ [	agrave,		0,		at			] };
    key <AE11>	{ [	parenright,	degree,		bracketright		] };
    key <AE12>	{ [	equal,		plus,		braceright		] };

    // Second row
    key <AD01>	{ [	a,		A					] };
    key <AD02>	{ [	z,		Z				 	] };
    key <AD03>	{ [	e,		E,		EuroSign		] };	
    key <AD04>	{ [	r,		R				 	] };
    key <AD05>	{ [	t,		T					] };
    key <AD06>	{ [	y,		Y					] };	
    key <AD07>	{ [	u,		U					] };	
    key <AD08>	{ [	i,		I					] };	
    key <AD09>	{ [	o,		O					] };	
    key <AD10>	{ [	p,		P					] };
    key <AD11>	{ [	dead_circumflex,dead_diaeresis				] };
    key <AD12>	{ [	dollar,		sterling,	currency		] };	

    // Third row
    key <AC01>	{ [	q,		Q					] };
    key <AC02>	{ [	s,		S				 	] };
    key <AC03>	{ [	d,		D					] };	
    key <AC04>	{ [	f,		F					] };
    key <AC05>	{ [	g,		G					] };	
    key <AC06>	{ [	h,		H				 	] };
    key <AC07>	{ [	j,		J					] };
    key <AC08>	{ [	k,		K					] };
    key <AC09>	{ [	l,		L					] };
    key <AC10>	{ [	m,		M					] };	
    key <AC11>	{ [	ugrave,		percent					] };
    key <BKSL>  { [	asterisk,	mu					] };

    // Fourth row
    key <LSGT>	{ [	less,		greater					] };
    key <AB01>	{ [	w,		W					] };
    key <AB02>	{ [	x,		X					] };
    key <AB03>	{ [	c,		C					] };
    key <AB04>	{ [	v,		V					] };	
    key <AB05>  { [	b,		B				 	] };
    key <AB06>	{ [	n,		N				 	] };
    key <AB07>	{ [	comma,		question				] };
    key <AB08>	{ [ 	semicolon,	period					] };
    key <AB09>	{ [ 	colon,		slash					] };
    key <AB10>	{ [	exclam,		section					] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // based on a keyboard map from an 'xkb/symbols/gb' file

default  partial alphanumeric_keys
xkb_symbols "basic" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple U.K. keyboard layout defined by
    // the SVR4 European Language Supplement and sometimes also
    // known as the IBM 166 layout.

    include "latin"

    name[Group1]="English (UK)";

    key <AE02>	{ [         2,   quotedbl,  twosuperior,    oneeighth ]	};
    key <AE03>	{ [         3,   sterling, threesuperior,    sterling ]	};
    key <AE04>	{ [         4,     dollar,     EuroSign,   onequarter ]	};

    key <AC11>	{ [apostrophe,         at, dead_circumflex, dead_caron]	};
    key <TLDE>	{ [     grave,    notsign,          bar,          bar ]	};

    key <BKSL>	{ [numbersign, asciitilde,   dead_grave,   dead_breve ]	};
    key <LSGT>	{ [ backslash,        bar,          bar,    brokenbar ]	};

    include "level3(ralt_switch_multikey)"
};

partial alphanumeric_keys
xkb_symbols "intl" { 

    // Describes the differences between a very simple en_US 
    // keyboard and a very simple U.K. keyboard layout with 
    // dead keys. By Phil Jones (philjones1@blueyonder.co.uk) 

    // Includes the following keys: 
    // dead_grave 
    // dead_acute 
    // dead_circumflex 
    // dead_tilde 
    // dead_diaeresis 

    include "latin" 

    name[Group1]="English (UK, international with dead keys)";

    key <AE02>  { [   2,  dead_diaeresis,      twosuperior,     onehalf ] };
    key <AE03>  { [   3,        sterling,    threesuperior,    onethird ] };
    key <AE04>  { [   4,          dollar,         EuroSign,  onequarter ] };
    key <AE06>  { [   6, dead_circumflex,         NoSymbol,    onesixth ] };

    key <AC11>  { [ dead_acute,         at,     apostrophe,         bar ] };
    key <TLDE>  { [ dead_grave,    notsign,            bar,         bar ] };

    key <BKSL>  { [ numbersign, dead_tilde,            bar,         bar ] };
    key <LSGT>  { [  backslash,        bar,            bar,         bar ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "extd" {
    // Clone of the Microsoft "English (UK, Extended" layout, which
    // includes dead keys for: grave; diaeresis; circumflex; tilde; and
    // accute. It also enables direct access to accute characters using
    // the Multi_key (Alt Gr).
    //
    // Taken from...
    //    "Windows Keyboard Layouts"
    //    http://msdn.microsoft.com/en-us/goglobal/bb964651.aspx
    //
    // -- Jonathan Miles <jon@cybah.co.uk>

    include "latin"

    name[Group1]="English (UK, extended WinKeys)";

    key <TLDE> { [ dead_grave,    notsign,       brokenbar,    NoSymbol ] };

    key <AE02> { [     2,        quotedbl,  dead_diaeresis,     onehalf ] };
    key <AE03> { [     3,        sterling,   threesuperior,    onethird ] };
    key <AE04> { [     4,          dollar,        EuroSign,  onequarter ] };
    key <AE06> { [     6,     asciicircum, dead_circumflex,    NoSymbol ] };

    key <AD02> { [   w,                 W,          wacute,      Wacute ] };
    key <AD03> { [   e,                 E,          eacute,      Eacute ] };
    key <AD06> { [   y,                 Y,          yacute,      Yacute ] };
    key <AD07> { [   u,                 U,          uacute,      Uacute ] };
    key <AD08> { [   i,                 I,          iacute,      Iacute ] };
    key <AD09> { [   o,                 O,          oacute,      Oacute ] };

    key <AC01> { [   a,                 A,          aacute,      Aacute ] };
    key <AC11> { [  apostrophe,         at,     dead_acute,    NoSymbol ] };

    key <AB03> { [   c,                 C,        ccedilla,    Ccedilla ] };

    key <BKSL>  { [ numbersign, asciitilde,     dead_tilde,    NoSymbol ] };
    key <LSGT>  { [  backslash,        bar,       NoSymbol,    NoSymbol ] };

    include "level3(ralt_switch)"
};

// Describe the differences between the US Colemak layout
// and a UK variant. By Andy Buckley (andy@insectnation.org)

partial alphanumeric_keys
xkb_symbols "colemak" {
    include "us(colemak)"

    name[Group1]="English (UK, Colemak)";

    key <AE02>	{ [         2,   quotedbl,  twosuperior,    oneeighth ]	};
    key <AE03>	{ [         3,   sterling, threesuperior,    sterling ]	};
    key <AE04>	{ [         4,     dollar,     EuroSign,   onequarter ]	};

    key <AC11>	{ [apostrophe,         at, dead_circumflex, dead_caron]	};
    key <TLDE>	{ [     grave,    notsign,          bar,          bar ]	};

    key <BKSL>	{ [numbersign, asciitilde,   dead_grave,   dead_breve ]	};
    key <LSGT>	{ [ backslash,        bar,          bar,    brokenbar ]	};

    include "level3(ralt_switch_multikey)"
};


// Dvorak (UK) keymap (by odaen) allowing the usage of
// the £ and ? key and swapping the @ and " keys.

partial alphanumeric_keys
xkb_symbols "dvorak" {
    include "us(dvorak-alt-intl)"

    name[Group1]="English (UK, Dvorak)";

    key <AD01> { [ apostrophe,	at		] };
    key <AE02> { [	    2,	quotedbl,  twosuperior,   NoSymbol	] };
    key <AE03> { [	    3,	sterling,  threesuperior, NoSymbol	] };
    key <BKSL> { [ numbersign,	asciitilde	] };
    key <LSGT> { [  backslash,	bar		] };
    key <TLDE> { [	grave,	notsign,   bar,           bar		] };
};

// Dvorak letter positions, but punctuation all in the normal UK positions.
partial alphanumeric_keys
xkb_symbols "dvorakukp" {
    include "gb(dvorak)"

    name[Group1]="English (UK, Dvorak with UK punctuation)";

    key <AE11> {        [     minus,    underscore      ]       };
    key <AE12> {        [     equal,    plus            ]       };
    key <AD11> {        [ bracketleft,  braceleft       ]       };
    key <AD12> {        [ bracketright, braceright      ]       };
    key <AD01> {        [ slash,        question        ]       };
    key <AC11> {        [apostrophe,    at,         dead_circumflex, dead_caron] };
};

// Copied from macintosh_vndr/gb
partial alphanumeric_keys
xkb_symbols "mac" {

    // Describes the differences between a very simple en_US
    // keyboard and a very simple U.K. keyboard layout

    include "latin"

    name[Group1]= "English (UK, Macintosh)";

    key <AE02> {	[               2,              at,         EuroSign	]	};
    key <AE03> {	[               3,        sterling,       numbersign	]	};
    key <TLDE> {	[         section,       plusminus ]	};
    key <LSGT> {	[           grave,      asciitilde ]	};

    include "level3(ralt_switch)"
    include "level3(enter_switch)"
};


partial alphanumeric_keys
xkb_symbols "mac_intl" { 

    include "latin" 

    name[Group1]="English (UK, Macintosh international)";

    key <AE02>  { [   2,                       at,           EuroSign,    onehalf ] };
    key <AE03>  { [   3,                 sterling,        twosuperior,   onethird ] };
    key <AE04>  { [   4,                   dollar,      threesuperior, onequarter ] };
    key <AE06>  { [   6,          dead_circumflex,           NoSymbol,   onesixth ] };
    key <AD09>    { [   o,                        O,                 oe,       OE ] };

    key <AC11>  { [ dead_acute,    dead_diaeresis,     dead_diaeresis,        bar ] }; //dead_doubleacute
    key <TLDE>  { [ section,            plusminus,            notsign,    notsign ] }; //dead_grave

    key <BKSL>  { [ backslash,                bar,         numbersign,        bar ] };
    key <LSGT>  { [ dead_grave,        dead_tilde,          brokenbar,        bar ] };

    include "level3(ralt_switch)"
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/gb(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      // Georgian Keyboard Layouts by Aiet Kolkhi <aietkolkhi@gmail.com>
// Full layout descriptions available at http://www.gakartuleba.org/layouts/
//
// This includes the following keyboard layouts: Georgian QWERTY; Georgian Ergonomic;
// Georgian MESS; Georgian AZERTY Tskapo; Georgian Russian.
//
// Layouts include Georgian Mkhedruli alphabeth; most layouts also include some special
// and ancient characters (like Fi, Yn, Elifi, Turned Gan and Ain). Layouts do not
// include Georgian Asomtavruli or Georgian Khutsuri alphabeths which are also present
// in Unicode.
//
// Georgian Typewriter no longer supported, as it is no longer used in Georgia.
//
// some layouts based on Georgian keyboard map, in the so called "latin" layout.
// 1999, Pablo Saratxaga <srtxg@chanae.alphanet.ch>
//

default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]= "Georgian";

    key <TLDE> { [ 0x0100201e, 0x0100201c, 0x0100201e, asciitilde ] };
    key <AE01> { [ 1, exclam, apostrophe ] };
    key <AE02> { [ 2, at, 0x0100201e ] };
    key <AE03> { [ 3, numbersign, 0x0100201c ] };
    key <AE04> { [ 4, dollar, 0x01002116 ] };
    key <AE05> { [ 5, percent, EuroSign ] };
    key <AE06> { [ 6, asciicircum ] };
    key <AE07> { [ 7, ampersand, section ] };
    key <AE08> { [ 8, asterisk,	degree ] };
    key <AE09> { [ 9, parenleft ] };
    key <AE10> { [ 0, parenright ] };
    key <AE11> { [ minus, underscore, 0x01002014 ] };
    key <AE12> { [ equal, plus, 0x01002013 ] };

    key <AD01> { [ 0x010010e5,  Q               ]       };
    key <AD02> { [ 0x010010ec,  0x010010ed      ]       };
    key <AD03> { [ 0x010010d4,  E, 0x010010f1   ]       };
    key <AD04> { [ 0x010010e0,  0x010010e6, 0x010000ae ] };
    key <AD05> { [ 0x010010e2,  0x010010d7 ] };
    key <AD06> { [ 0x010010e7,  Y, 0x010010f8   ]       };
    key <AD07> { [ 0x010010e3,  U               ]       };
    key <AD08> { [ 0x010010d8,  I, 0x010010f2   ]       };
    key <AD09> { [ 0x010010dd,  O               ]       };
    key <AD10> { [ 0x010010de,  P               ]       };
    key <AD11> { [ bracketleft, braceleft       ]       };
    key <AD12> { [ bracketright,braceright      ]       };

    key <AC01> { [ 0x010010d0,  A, 0x010010fa   ]       };
    key <AC02> { [ 0x010010e1,  0x010010e8      ]       };
    key <AC03> { [ 0x010010d3,  D               ]       };
    key <AC04> { [ 0x010010e4,  F, 0x010010f6   ]       };
    key <AC05> { [ 0x010010d2,  G, 0x010010f9   ]       };
    key <AC06> { [ 0x010010f0,  H, 0x010010f5   ]       };
    key <AC07> { [ 0x010010ef, 0x010010df, 0x010010f7 ] };
    key <AC08> { [ 0x010010d9,  K               ]       };
    key <AC09> { [ 0x010010da,  L               ]       };
    key <AC10> { [ semicolon, colon             ]       };
    key <AC11> { [ apostrophe, quotedbl         ]       };
    key <BKSL> { [ backslash, bar, asciitilde, asciitilde ]  };

    key <LSGT> { [ guillemotleft,guillemotright ]       };
    key <AB01> { [ 0x010010d6,  0x010010eb      ]       };
    key <AB02> { [ 0x010010ee,  X, 0x010010f4   ]       };
    key <AB03> { [ 0x010010ea, 0x010010e9, 0x010000a9 ] };
    key <AB04> { [ 0x010010d5,  V, 0x010010f3   ]       };
    key <AB05> { [ 0x010010d1,  B               ]       };
    key <AB06> { [ 0x010010dc,  N, 0x010010fc   ]       };
    key <AB07> { [ 0x010010db,  M               ]       };
    key <AB08> { [ comma, less, guillemotleft   ]       };
    key <AB09> { [ period, greater, guillemotright    ] };
    key <AB10> { [ slash, question, 0x010010fb  ]       };

    include "level3(ralt_switch)"

};

partial alphanumeric_keys
xkb_symbols "qwerty" {
    include "ge(basic)"
};

partial alphanumeric_keys
xkb_symbols "ergonomic" {
    include "ge(basic)"

    name[Group1]= "Georgian (ergonomic)";

    key <TLDE> { [ 0x0100201e, apostrophe, 0x0100201e, asciitilde ] };
    key <AE01> { [ exclam, 1, exclam      ] };
    key <AE02> { [ 0x01002116, 2, at      ] };
    key <AE03> { [ comma, 3, numbersign, section ] };
    key <AE04> { [ semicolon, 4, dollar   ] };
    key <AE05> { [ percent, 5, EuroSign	 ] };
    key <AE06> { [ colon, 6, asciicircum  ] };
    key <AE07> { [ question, 7, ampersand ] };
    key <AE08> { [ period, 8, asterisk, degree ] };
    key <AE09> { [ parenleft, 9, parenleft, guillemotleft ] };
    key <AE10> { [ parenright, 0, parenright, guillemotright ] };
    key <AE11> { [ minus, plus, 0x01002014, underscore ] };
    key <AE12> { [ 0x0100201c, equal, equal ] };

    key <AD01> { [ 0x010010e9, noSymbol      ]       };
    key <AD02> { [ 0x010010de, noSymbol      ]       };
    key <AD03> { [ 0x010010e3, noSymbol      ]       };
    key <AD04> { [ 0x010010eb, noSymbol, noSymbol, 0x010000ae ] };
    key <AD05> { [ 0x010010ed, noSymbol, noSymbol, 0x010010d7 ] };
    key <AD06> { [ 0x010010e2, noSymbol, noSymbol, 0x010010f8 ] };
    key <AD07> { [ 0x010010d7, noSymbol      ]       };
    key <AD08> { [ 0x010010dc, noSymbol, 0x010010fc, I ] };
    key <AD09> { [ 0x010010d5, noSymbol, 0x010010f3    ] };
    key <AD10> { [ 0x010010e8, noSymbol                ] };
    key <AD11> { [ 0x010010d9, noSymbol, bracketleft, braceleft  ] };
    key <AD12> { [ 0x010010e5, noSymbol, bracketright,braceright ] };

    key <AC01> { [ 0x010010ee, noSymbol, 0x010010f4    ] };
    key <AC02> { [ 0x010010d8, noSymbol, 0x010010f2    ] };
    key <AC03> { [ 0x010010d0, noSymbol, 0x010010fa, D ] };
    key <AC04> { [ 0x010010d4, noSymbol, 0x010010f1    ] };
    key <AC05> { [ 0x010010dd, noSymbol     ]       };
    key <AC06> { [ 0x010010d3, noSymbol     ]       };
    key <AC07> { [ 0x010010db, noSymbol     ]       };
    key <AC08> { [ 0x010010e1, noSymbol     ]       };
    key <AC09> { [ 0x010010e0, noSymbol, L  ]       };
    key <AC10> { [ 0x010010d1, noSymbol, colon         ] };
    key <AC11> { [ 0x010010d2, noSymbol, 0x010010f9, quotedbl ] };
    key <BKSL> { [ slash, section, backslash, bar ] };

    key <LSGT> { [ guillemotleft,guillemotright   ] };
    key <AB01> { [ 0x010010ef, noSymbol      ]      };
    key <AB02> { [ 0x010010f0, noSymbol, 0x010010f5, X ] };
    key <AB03> { [ 0x010010e7, noSymbol, 0x010010f8, C ] };
    key <AB04> { [ 0x010010e6, noSymbol, 0x010010f7, V ] };
    key <AB05> { [ 0x010010df, noSymbol                ] };
    key <AB06> { [ 0x010010d6, noSymbol                ] };
    key <AB07> { [ 0x010010ea, noSymbol, noSymbol, M   ] };
    key <AB08> { [ 0x010010da, noSymbol, guillemotleft, less ] };
    key <AB09> { [ 0x010010e4, noSymbol, 0x010010f6, guillemotright ] };
    key <AB10> { [ 0x010010ec, noSymbol, 0x010010fb    ] };

    include "level3(ralt_switch)"

};

partial alphanumeric_keys
xkb_symbols "mess" {
    include "ge(basic)"

    name[Group1]= "Georgian (MESS)";

    key <TLDE> { [ 0x010010ed, backslash, grave ] };
    key <AE01> { [ 1, exclam, apostrophe ] };
    key <AE02> { [ 2, at, asciitilde ] };
    key <AE03> { [ 3, 0x01002116, numbersign ]	};
    key <AE04> { [ 4, dollar, EuroSign ] };
    key <AE05> { [ 5, percent ]	};
    key <AE06> { [ 6, asciicircum ] };
    key <AE07> { [ 7, ampersand, section ] };
    key <AE08> { [ 8, asterisk, degree ] };
    key <AE09> { [ 9, parenleft ] };
    key <AE10> { [ 0, parenright, 0x01002014 ] };
    key <AE11> { [ minus, underscore, 0x01002013 ] };
    key <AE12> { [ 0x010010df,	plus, bar   ]  };
    key <AD01> { [ 0x010010e5,	Q ] };
    key <AD02> { [ 0x010010ec,	W ] };
    key <AD03> { [ 0x010010d4,	E ] };
    key <AD04> { [ 0x010010e0,	R ] };
    key <AD05> { [ 0x010010e2,	T ] };
    key <AD06> { [ 0x010010e7,	Y ] };
    key <AD07> { [ 0x010010e3,	U ] };
    key <AD08> { [ 0x010010d8,	I, 0x010010f2 ] };
    key <AD09> { [ 0x010010dd,	O ] };
    key <AD10> { [ 0x010010de,	P ] };
    key <AD11> { [ 0x010010e8,	bracketleft,  guillemotleft  ] };
    key <AD12> { [ 0x010010e6,	bracketright, guillemotright ] };
    key <AC01> { [ 0x010010d0,	A, 0x010010fa ] };
    key <AC02> { [ 0x010010e1,	S ] };
    key <AC03> { [ 0x010010d3,	D ] };
    key <AC04> { [ 0x010010e4,	F, 0x010010f6 ] };
    key <AC05> { [ 0x010010d2,	G, 0x010010f9 ] };
    key <AC06> { [ 0x010010f0,	H, 0x010010f1 ]	};
    key <AC07> { [ 0x010010ef,	J, 0x010010f7 ] };
    key <AC08> { [ 0x010010d9,	K ] };
    key <AC09> { [ 0x010010da,	L ] };
    key <AC10> { [ 0x010010d7,0x0100201e ] };
    key <AC11> { [ 0x010010e9,0x0100201c ] };
    key <BKSL> { [ equal, slash, bar ]	};

    key <LSGT> { [ guillemotleft, guillemotright ] };
    key <AB01> { [ 0x010010d6, Z, 0x010010f5 ] };
    key <AB02> { [ 0x010010ee, X, 0x010010f4 ]	};
    key <AB03> { [ 0x010010ea,	C ] };
    key <AB04> { [ 0x010010d5,	V, 0x010010f3 ]	};
    key <AB05> { [ 0x010010d1,	B ] };
    key <AB06> { [ 0x010010dc,	N, 0x010010fc ] };
    key <AB07> { [ 0x010010db,	M ] };
    key <AB08> { [ comma, semicolon, less ] };
    key <AB09> { [ period, colon, greater ] };
    key <AB10> { [ 0x010010eb, question, 0x010010fb ] };

    include "level3(ralt_switch)"

};

partial alphanumeric_keys
xkb_symbols "ru" {

    name[Group1]= "Russian (Georgia)";

    key <TLDE> { [ asciicircum, asciitilde      ]       };
    key <AE01> { [         1,    exclam         ]       };
    key <AE02> { [         2,    at             ]       };
    key <AE03> { [         3,    numbersign     ]       };
    key <AE04> { [         4,    semicolon      ]       };
    key <AE05> { [         5,    colon          ]       };
    key <AE06> { [         6,    comma          ]       };
    key <AE07> { [         7,    period         ]       };
    key <AE08> { [         8,    asterisk       ]       };
    key <AE09> { [         9,    parenleft      ]       };
    key <AE10> { [         0,    parenright     ]       };
    key <AE11> { [     minus,    underscore     ]       };
    key <AE12> { [ numbersign,   bar            ]       };

    key <AD01> { [ 0x010010e6,  q               ]       };
    key <AD02> { [ 0x010010ea,  w               ]       };
    key <AD03> { [ 0x010010e3,  e               ]       };
    key <AD04> { [ 0x010010d9,  r               ]       };
    key <AD05> { [ 0x010010d4,  t               ]       };
    key <AD06> { [ 0x010010dc,  y               ]       };
    key <AD07> { [ 0x010010d2,  u               ]       };
    key <AD08> { [ 0x010010e8,  i               ]       };
    key <AD09> { [ 0x010010ec,  o               ]       };
    key <AD10> { [ 0x010010d6,  p               ]       };
    key <AD11> { [ 0x010010ee,  bracketleft     ]       };
    key <AD12> { [ 0x010010ef,  bracketright    ]       };

    key <AC01> { [ 0x010010e4,  a               ]       };
    key <AC02> { [ 0x010010d7,  s               ]       };
    key <AC03> { [ 0x010010d5,  d               ]       };
    key <AC04> { [ 0x010010d0,  f               ]       };
    key <AC05> { [ 0x010010de,  g               ]       };
    key <AC06> { [ 0x010010e0,  h               ]       };
    key <AC07> { [ 0x010010dd,  j               ]       };
    key <AC08> { [ 0x010010da,  k               ]       };
    key <AC09> { [ 0x010010d3,  l               ]       };
    key <AC10> { [ 0x010010df,  semicolon       ]       };
    key <AC11> { [ 0x010010eb,  percent         ]       };
    key <BKSL> { [ backslash,    bar            ]       };

    key <LSGT> { [ guillemotleft,guillemotright ]       };
    key <AB01> { [ 0x010010ed,  z               ]       };
    key <AB02> { [ 0x010010e9,  x               ]       };
    key <AB03> { [ 0x010010e1,  c               ]       };
    key <AB04> { [ 0x010010db,  v               ]       };
    key <AB05> { [ 0x010010d8,  b               ]       };
    key <AB06> { [ 0x010010e2,  n               ]       };
    key <AB07> { [ 0x010010e5,  m               ]       };
    key <AB08> { [ 0x010010d1,  less            ]       };
    key <AB09> { [ 0x010010e7,  greater         ]       };
    key <AB10> { [ 0x010010f0,  question        ]       };

};

partial alphanumeric_keys
xkb_symbols "os" {

    include "ru(os_legacy)"

    name[Group1]= "Ossetian (Georgia)";

};
                                                                                                                                                                                                                                                                                                 // based on us_intl keyboard map file and a Sinhala keyboard map
// version 0.3

default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]="French (Guinea)";

    key <AE01>	{ [0x010007F1, 0x010007C1 ]	};
    key <AE02>	{ [0x010007EB, 0x010007C2 ]	};
    key <AE03>	{ [0x010007F5, 0x010007C3,  numbersign,     sterling ]	};
    key <AE04>	{ [0x010007F4, 0x010007C4,  0x01002E1C,       dollar ]	};
    key <AE05>	{ [ parenleft, 0x010007C5,  0x01002E1D				 ]	};
    key <AE06>	{ [     minus, 0x010007C6,         bar				 ]	};
    key <AE07>	{ [0x010007EC, 0x010007C7,       grave				 ]	};
    key <AE08>	{ [0x010007FA, 0x010007C8,   backslash				 ]	};
    key <AE09>	{ [0x010007ED, 0x010007C9, asciicircum,    plusminus ]	};
    key <AE10>	{ [0x010007EE, 0x010007C0,          at,       degree ]	};
    key <AE11>	{ [parenright ]	};
    key <AE12>	{ [     equal,       plus,   braceright ]	};

    key <AD01>	{ [0x010007CA ]	};
    key <AD02>	{ [0x010007E0, less ]	};
    key <AD03>	{ [0x010007CD,0x010007CB ]	};
    key <AD04>	{ [0x010007D9,0x010007DA ]	};
    key <AD05>	{ [0x010007D5 ]	};
    key <AD06>	{ [0x010007E6,0x010007E7 ]	};
    key <AD07>	{ [0x010007CE,0x010007F6 ]	};
    key <AD08>	{ [0x010007CC ]	};
    key <AD09>	{ [0x010007D0,0x010007CF ]	};
    key <AD10>	{ [0x010007D4 ]	};
    key <AD11>	{ [0x010007F3 ] };
    key <AD12>	{ [    dollar,   sterling,     currency ]	};

    key <AC01>	{ [0x010007EB ]	};
    key <AC02>	{ [0x010007DB ]	};
    key <AC03>	{ [0x010007D8 ]	};
    key <AC04>	{ [0x010007DD ]	};
    key <AC05>	{ [0x010007DC,0x010007F7 ]	};
    key <AC06>	{ [0x010007E4 ]	};
    key <AC07>	{ [0x010007D6,0x010007E8 ]	};
    key <AC08>	{ [0x010007DE ]	};
    key <AC09>	{ [0x010007DF,0x010007EA ]	};
    key <AC10>	{ [0x010007E1 ]	};
    key <AC11>	{ [0x010007EF, 0x010007F8, percent ]	};
    key <TLDE>	{ [0x010007EC, asciitilde,     notsign ]	};

    key <BKSL>	{ [0x010007D1, asterisk ]	};
    key <AB01>	{ [0x010007E5 ]	};
    key <AB02>	{ [0x0100060C ]	};
    key <AB03>	{ [0x010007D7,0x010007E9 ]	};
    key <AB04>	{ [0x010007E2 ]	};
    key <AB05>	{ [0x010007D3 ] };
    key <AB06>	{ [0x010007E3,0x010007D2 ]	};
    key <AB07>	{ [0x010007F8,0x0100061F ] };
    key <AB08>	{ [0x0100061B ]	};
    key <AB09>	{ [0x0100060C,      slash ]	};
    key <AB10>	{ [0x010007F9] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "us"

    name[Group1]= "English (Ghana)";

    key <AE04> { [          4, 0x010020B5,     dollar,       cent ] };
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "akan" {
    include "gh(basic)"

    name[Group1]= "Akan";

    key <AD01> { [ 0x0100025B, 0x01000190,          q,          Q ] };
    key <AB02> { [ 0x01000254, 0x01000186,          x,          X ] };
};

partial alphanumeric_keys
xkb_symbols "ga" {
    include "gh(basic)"

    name[Group1]= "Ga";

    key <AD01> { [ 0x0100025B, 0x01000190,          q,          Q ] };
    key <AB02> { [ 0x01000254, 0x01000186,          x,          X ] };
    key <AB03> { [ 0x0100014B, 0x0100014A,          c,          C ] };
};

partial alphanumeric_keys
xkb_symbols "ewe" {
    include "gh(basic)"

    name[Group1]= "Ewe";

    key <AD01> { [ 0x0100025B, 0x01000190,          q,          Q ] };
    key <AB03> { [ 0x0100014B, 0x0100014A,          c,          C ] };
    key <AD11> { [ 0x01000254, 0x01000186,  braceleft,  braceleft ] };
    key <AD12> { [ 0x0100028B, 0x010001B2, braceright, braceright ] };
    key <BKSL> { [ 0x01000256, 0x01000189,  backslash,  backslash ] };
    key <AC07> { [ 0x01000192, 0x01000191,          j,          J ] };
    key <AC05> { [          g,          G, 0x01000263, 0x01000194 ] };

};

partial alphanumeric_keys
xkb_symbols "fula" {
    include "gh(basic)"

    name[Group1]= "Fula";

    key <AD01> { [ 0x01000071, 0x01000051,          q,          Q ] };
    key <AD02> { [ udiaeresis, Udiaeresis,          w,          W ] };
    key <AD03> { [          e,          E,   EuroSign,	     cent ] };
    key <AD11> { [ 0x010001B4, 0x010001B3,bracketleft,  braceleft ] };
    key <AD12> { [     gcaron,     Gcaron,bracketright, braceright] };
    key <AC03> { [ 0x01000257, 0x0100018A,         d,           D ] };
    key <AC10> { [ 0x01000131, 0x01000130, semicolon,       colon ] };
    key <AC11> { [ 0x010001DD, 0x0100018E,apostrophe,    quotedbl ] };
    key <AB01> { [ 0x01000272, 0x0100019D,         z,           Z ] };
    key <AB07> { [     ntilde,     Ntilde,         m,           M ] };
    key <AB09> { [   ccedilla,   Ccedilla,    period,     greater ] };
    key <AB10> { [   scedilla,   Scedilla,     slash,    question ] };

};

partial alphanumeric_keys
xkb_symbols "hausa" {
    include "gh(fula)"

    name[Group1]= "Hausa";
};

partial alphanumeric_keys
xkb_symbols "generic" {
    include "gh(basic)"

    name[Group1]= "English (Ghana, multilingual)";

    key <AD03> { [          e,	        E, 0x0100025b, 0x01000190 ] };
    key <AB03> { [          c,          C, 0x01000254, 0x01000186 ] };
    key <AC03> { [          d,          D, 0x01000256, 0x01000189 ] };
    key <AC04> { [          f,          F, 0x01000192, 0x01000191 ] };
    key <AC05> { [          g,          G, 0x01000263, 0x01000194 ] };
    key <AB06> { [          n,          N, 0x0100014b, 0x0100014a ] };
    key <AB01> { [          z,          Z, 0x010001B6, 0x010001B5 ] };
    key <AB04> { [          v,          V, 0x0100028B, 0x010001B2 ] };
	key <AE04> { [          4,     dollar, 0x010020B5,       cent ] };
    include "level3(ralt_switch)"

};

partial alphanumeric_keys
xkb_symbols "avn" {
    include "gh(basic)"

    name[Group1]= "Avatime";

    key <TLDE> { [      grave,     asciitilde,   0x01000300,  0x01000303 ] }; // combining grave; combining tilde
    key <AE04> { [          4,         dollar,         cent,  0x010020B5 ] }; // ¢, ₵
    key <AE11> { [      minus,     underscore,   0x01000304,  0x01000304 ] }; // combining macron
    key <AD01> { [ 0x0100028B,      0x010001B2                           ] }; // ʋ, Ʋ
    key <AD07> { [          u,              U,   0x0100028A,  0x010001B1 ] }; // ʊ, Ʊ
    key <AD08> { [          i,              I,   0x01000269,  0x01000196 ] }; // ɩ, Ɩ
    key <AD11> { [ 0x0100025B,      0x01000190, bracketleft,  braceleft  ] }; // ɛ, Ɛ
    key <AC03> { [          d,              D,   0x01000256,  0x01000189 ] }; // ɖ, Ɖ
    key <AC04> { [          f,              F,   0x01000192,  0x01000191 ] }; // ƒ, Ƒ
    key <AC07> { [ 0x0100014B,      0x0100014A                           ] }; // ŋ, Ŋ
    key <AC11> { [ apostrophe,       quotedbl,   0x01000301,  0x01000301 ] }; // combining acute
    key <AB03> { [ 0x01000254,      0x01000186                           ] }; // ɔ, Ɔ

    include "level3(ralt_switch)"

};

// This keyboard layout fully imitates the 'Ghana Unicode' layout which is used in GILLBT on Windows with Keyman.
// However, in this layout a 3rd level key (R ALT) is used rather than dead keys.
// Also it has three additional features:
// 1) combining macron above: <R ALT> + <SHIFT> + <->
// 2) cent: <R ALT> + <4> or <R ALT> + <SHIFT> + <4>
// 3) ʊ/Ʊ: <R ALT> + <u>/<U>

partial alphanumeric_keys
xkb_symbols "gillbt" {
    include "gh(basic)"

    name[Group1]= "English (Ghana, GILLBT)";

    key <TLDE> { [ grave,      asciitilde,  0x01000300,   0x01000303  ] }; // combining grave; combining tilde
    key <AE04> { [ 4,          dollar,      cent,         0x010020B5  ] }; // ¢, ₵
    key <AE06> { [ 6,          asciicircum, 0x01000302,   0x01000302  ] }; // combining circumflex accent
    key <AE11> { [ minus,      underscore,  0x01000331,   0x01000304  ] }; // combining macron below; combining macron above
    key <AE12> { [ 0x0100014B, 0x0100014A,  equal,        plus        ] }; // ŋ, Ŋ
    key <AD01> { [ 0x0100028B, 0x010001B2,  q,            Q           ] }; // ʋ, Ʋ
    key <AD03> { [ e,          E,           0x010001DD,   0x0100018E  ] }; // ǝ, Ǝ
    key <AD07> { [ u,          U,           0x0100028A,   0x010001B1  ] }; // ʊ, Ʊ
    key <AD11> { [ 0x0100025B, 0x01000190,  bracketleft,  braceleft   ] }; // ɛ, Ɛ
    key <AD12> { [ 0x01000254, 0x01000186,  bracketright, braceright  ] }; // ɔ, Ɔ
    key <AC03> { [ d,          D,           0x01000256,   0x01000189  ] }; // ɖ, Ɖ
    key <AC04> { [ f,          F,           0x01000192,   0x01000191  ] }; // ƒ, Ƒ
    key <AC05> { [ g,          G,           0x01000263,   0x01000194  ] }; // ɣ, Ɣ
    key <AC11> { [ apostrophe, quotedbl,    0x01000301,   0x01000301  ] }; // combining acute
    key <AB01> { [ z,          Z,           0x01000292,   0x010001B7  ] }; // ʒ, Ʒ
    key <AB02> { [ 0x01000269, 0x01000196,  x,            X           ] }; // ɩ, Ɩ
    key <AB03> { [ c,          C,           0x010000E7,   0x010000C7  ] }; // ç, Ç

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  // Hellenic keyboard map for X.org
//
// Original version:
//   Kostas Gewrgiou <gewrgiou@imbc.gr>
// Heavily modified and maintained by:
//   Vasilis Vasaitis <vvas@hal.csd.auth.gr>
// Originally converted to single group form by:
//   Ivan Pascal <pascal@info.tsu.ru>

default  partial alphanumeric_keys alternate_group
xkb_symbols "basic" {
	include "gr(simple)"

	name[Group1] = "Greek";

	include "eurosign(e)"
	include "eurosign(5)"
	include "kpdl(comma)"
	include "level3(ralt_switch)"

	key <AB01> { [       NoSymbol,       NoSymbol,          U037D,          U03FF ] };
	key <AB02> { [       NoSymbol,       NoSymbol,     rightarrow,      leftarrow ] };
	key <AB03> { [       NoSymbol,       NoSymbol,      copyright                 ] };
	key <AB04> { [       NoSymbol,       NoSymbol,          U03D6                 ] };
	key <AB05> { [       NoSymbol,       NoSymbol,          U03D0                 ] };
	key <AB06> { [       NoSymbol,       NoSymbol,          U0374,          U0375 ] };
	key <AB07> { [       NoSymbol,       NoSymbol,          U03FB,          U03FA ] };
	key <AB08> { [       NoSymbol,       NoSymbol,  guillemotleft                 ] };
	key <AB09> { [       NoSymbol,       NoSymbol, guillemotright, periodcentered ] };
	key <AC03> { [       NoSymbol,       NoSymbol,      downarrow,        uparrow ] };
	key <AC04> { [       NoSymbol,       NoSymbol,          U03D5                 ] };
	key <AC05> { [       NoSymbol,       NoSymbol,          U03DD,          U03DC ] };
	key <AC07> { [       NoSymbol,       NoSymbol,          U037C,          U03FE ] };
	key <AC08> { [       NoSymbol,       NoSymbol,          U03DF,          U03DE ] };
	key <AC09> { [       NoSymbol,       NoSymbol,          U03F2,          U03F9 ] };
	key <AC10> { [       NoSymbol,       NoSymbol,     dead_acute,     dead_psili ] };
	key <AC11> { [       NoSymbol,       NoSymbol,     dead_grave,     dead_dasia ] };
	key <AD01> { [       NoSymbol,       NoSymbol, periodcentered                 ] };
	key <AD02> { [       NoSymbol,       NoSymbol,          U03DB,          U03DA ] };
	key <AD04> { [       NoSymbol,       NoSymbol,     registered,          U03F1 ] };
	key <AD07> { [       NoSymbol,       NoSymbol,          U03D1,          U03F4 ] };
	key <AD08> { [       NoSymbol,       NoSymbol,          U037B,          U03FD ] };
	key <AD10> { [       NoSymbol,       NoSymbol,          U03E1,          U03E0 ] };
	key <AD11> { [       NoSymbol,       NoSymbol,     dead_tilde,    dead_macron ] };
	key <AD12> { [       NoSymbol,       NoSymbol,      dead_iota,     dead_breve ] };
	key <AE01> { [       NoSymbol,       NoSymbol,       NoSymbol,    onesuperior ] };
	key <AE02> { [       NoSymbol,       NoSymbol,        onehalf,    twosuperior ] };
	key <AE03> { [       NoSymbol,       NoSymbol,       sterling,  threesuperior ] };
	key <AE04> { [       NoSymbol,       NoSymbol,     onequarter,  threequarters ] };
	key <AE07> { [       NoSymbol,       NoSymbol,          U03F0                 ] };
	key <AE10> { [       NoSymbol,       NoSymbol,         degree                 ] };
};

partial alphanumeric_keys alternate_group
xkb_symbols "simple" {

    include "gr(bare)"

    name[Group1] = "Greek (simple)";

    key <TLDE> { [        grave,  asciitilde ] }; // ` ~
    key <AE01> { [            1,      exclam ] }; // 1 !
    key <AE02> { [            2,          at ] }; // 2 @
    key <AE03> { [            3,  numbersign ] }; // 3 #
    key <AE04> { [            4,      dollar ] }; // 4 $
    key <AE05> { [            5,     percent ] }; // 5 %
    key <AE06> { [            6, asciicircum ] }; // 6 ^
    key <AE07> { [            7,   ampersand ] }; // 7 &
    key <AE08> { [            8,    asterisk ] }; // 8 *
    key <AE09> { [            9,   parenleft ] }; // 9 (
    key <AE10> { [            0,  parenright ] }; // 0 )
    key <AE11> { [        minus,  underscore ] }; // - _
    key <AE12> { [        equal,        plus ] }; // = +

    key <AD11> { [  bracketleft,   braceleft ] }; // [ {
    key <AD12> { [ bracketright,  braceright ] }; // ] }

    key <AC11> { [   apostrophe,    quotedbl ] }; // ' "

    key <AB08> { [        comma,        less ] }; // , <
    key <AB09> { [       period,     greater ] }; // . >
    key <AB10> { [        slash,    question ] }; // / ?
    key <BKSL> { [    backslash,         bar ] }; // \ |

    include "kpdl(comma)"
};

hidden partial alphanumeric_keys alternate_group
xkb_symbols "bare" {

    key <AD01> { [             semicolon,          colon ] }; // ; :
    key <AD02> { [ Greek_finalsmallsigma,    Greek_SIGMA ] }; // ς Σ
    key <AD03> { [         Greek_epsilon,  Greek_EPSILON ] }; // ε Ε
    key <AD04> { [             Greek_rho,      Greek_RHO ] }; // ρ Ρ
    key <AD05> { [             Greek_tau,      Greek_TAU ] }; // τ Τ
    key <AD06> { [         Greek_upsilon,  Greek_UPSILON ] }; // υ Υ
    key <AD07> { [           Greek_theta,    Greek_THETA ] }; // θ Θ
    key <AD08> { [            Greek_iota,     Greek_IOTA ] }; // ι Ι
    key <AD09> { [         Greek_omicron,  Greek_OMICRON ] }; // ο Ο
    key <AD10> { [              Greek_pi,       Greek_PI ] }; // π Π

    key <AC01> { [           Greek_alpha,    Greek_ALPHA ] }; // α Α
    key <AC02> { [           Greek_sigma,    Greek_SIGMA ] }; // σ Σ
    key <AC03> { [           Greek_delta,    Greek_DELTA ] }; // δ Δ
    key <AC04> { [             Greek_phi,      Greek_PHI ] }; // φ Φ
    key <AC05> { [           Greek_gamma,    Greek_GAMMA ] }; // γ Γ
    key <AC06> { [             Greek_eta,      Greek_ETA ] }; // η Η
    key <AC07> { [              Greek_xi,       Greek_XI ] }; // ξ Ξ
    key <AC08> { [           Greek_kappa,    Greek_KAPPA ] }; // κ Κ
    key <AC09> { [           Greek_lamda,    Greek_LAMDA ] }; // λ Λ
    key <AC10> { [            dead_acute, dead_diaeresis ] }; // ´ ¨

    key <AB01> { [            Greek_zeta,     Greek_ZETA ] }; // ζ Ζ
    key <AB02> { [             Greek_chi,      Greek_CHI ] }; // χ Χ
    key <AB03> { [             Greek_psi,      Greek_PSI ] }; // ψ Ψ
    key <AB04> { [           Greek_omega,    Greek_OMEGA ] }; // ω Ω
    key <AB05> { [            Greek_beta,     Greek_BETA ] }; // β Β
    key <AB06> { [              Greek_nu,       Greek_NU ] }; // ν Ν
    key <AB07> { [              Greek_mu,       Greek_MU ] }; // μ Μ

    key <LSGT> { [         guillemotleft, guillemotright ] }; // « »
};

// ===========================================================================================
// Greek - Extended                                                                          |
// ===========================================================================================
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━━┓
// │ ~   │ !   │ @   │ #   │ $   │ %   │ ^   │ &   │ *   │ (   │ )   │ _   │ +   ┃Backspace  ┃
// │ `   │ 1   │ 2   │ 3 £ │ 4   │ 5 € │ 6   │ 7   │ 8   │ 9   │ 0 ° │ - ± │ =   ┃           ┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━━━┫
// ┃       ┃ :   │ Σ   │ Ε   │ Ρ   │ Τ   │ Υ   │ Θ   │ Ι   │ Ο   │ Π   │ {   │ }   ┃Enter    ┃
// ┃Tab    ┃ ; · │ ς   │ ε € │ ρ ® │ τ   │ υ   │ θ   │ ι   │ ο   │ π   │ [   │ ]   ┃         ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓        ┃
// ┃Caps    ┃ Α   │ Σ   │ Δ   │ Φ   │ Γ   │ Η   │ Ξ   │ Κ   │ Λ   │ ¨   │ "   │ |   ┃        ┃
// ┃Lock    ┃ α   │ σ   │ δ   │ φ   │ γ   │ η   │ ξ   │ κ   │ λ   │ ´   │ '   │ \   ┃        ┃
// ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━━━┫
// ┃       ┃ »   │ Ζ   │ Χ   │ Ψ   │ Ω   │ Β   │ Ν   │ Μ   │ <   │ >   │ ?   ┃               ┃
// ┃Shift  ┃ «   │ ζ   │ χ   │ ψ © │ ω   │ β   │ ν   │ μ   │ , « │ . » │ /   ┃Shift          ┃
// ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴──┲━━┷━━━━┳┷━━━━━┻┳━━━━━━━┳━━━━━━┫
// ┃       ┃       ┃       ┃                                  ┃       ┃       ┃       ┃      ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃              Space               ┃AltGr  ┃Meta   ┃Menu   ┃Ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹──────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━┛

partial alphanumeric_keys alternate_group
xkb_symbols "extended" {

    include "gr(simple)"

    name[Group1] = "Greek (extended)";

    key.type[Group1] = "THREE_LEVEL";

    key <AE03> { [ NoSymbol, NoSymbol,       sterling ] }; // £
    key <AE10> { [ NoSymbol, NoSymbol,         degree ] }; // °
    key <AE11> { [ NoSymbol, NoSymbol,      plusminus ] }; // ±

    key <AD01> { [ NoSymbol, NoSymbol, periodcentered ] }; // ·
    key <AD04> { [ NoSymbol, NoSymbol,     registered ] }; // ®

    key <AB03> { [ NoSymbol, NoSymbol,      copyright ] }; // ©
    key <AB08> { [ NoSymbol, NoSymbol,  guillemotleft ] }; // «
    key <AB09> { [ NoSymbol, NoSymbol, guillemotright ] }; // »

    include "level3(ralt_switch)"
    include "eurosign(5)"
    include "eurosign(e)"
};

partial alphanumeric_keys alternate_group
xkb_symbols "polytonic" {

    include "gr(extended)"

    name[Group1] = "Greek (polytonic)";

    key.type[Group1] = "THREE_LEVEL";

    key <AD11> { [ dead_tilde, dead_diaeresis, dead_macron ] }; // ~ ¨ ¯
    key <AD12> { [  dead_iota,     VoidSymbol,  dead_breve ] }; // ͺ   ˘

    key <AC10> { [ dead_acute, dead_psili  ] }; // ´ ̓ 
    key <AC11> { type[Group1]="FOUR_LEVEL",
                 [ dead_grave, dead_dasia, apostrophe, quotedbl  ] };
                 // ` ̔  ' "
};

partial alphanumeric_keys alternate_group
xkb_symbols "nodeadkeys" {

    include "gr(simple)"

    name[Group1] = "Greek (eliminate dead keys)";

    key <AC10> { [ semicolon, colon ] }; // ; :
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/gr(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // The right Alt key (while pressed) chooses the second keyboard group.
partial modifier_keys
xkb_symbols "switch" {
    key <RALT> {
        symbols[Group1] = [ Mode_switch, Multi_key ],
        virtualMods= AltGr
    };
};

// The left Alt key (while pressed) chooses the second keyboard group.
partial modifier_keys
xkb_symbols "lswitch" {
    key <LALT> {
        symbols[Group1] = [ Mode_switch, Multi_key ],
        virtualMods= AltGr
    };
};

// Either Win key (while pressed) chooses the second keyboard group.
partial modifier_keys
xkb_symbols "win_switch" {
    include "group(lwin_switch)"
    include "group(rwin_switch)"
};

// The left Win key (while pressed) chooses the second keyboard group.
// (Using this map, you should declare your keyboard as pc101 or pc102
// instead of pc104 or pc105.)
partial modifier_keys
xkb_symbols "lwin_switch" {
    key <LWIN> {
        symbols[Group1] = [ Mode_switch, Multi_key ],
        virtualMods= AltGr
    };
};

// The right Win key (while pressed) chooses the second keyboard group.
// (Using this map, you should declare your keyboard as pc101 or pc102
// instead of pc104 or pc105.)
partial modifier_keys
xkb_symbols "rwin_switch" {
    key <RWIN> {
        symbols[Group1] = [ Mode_switch, Multi_key ],
        virtualMods= AltGr
    };
};

// The right Ctrl key (while pressed) chooses the second keyboard group.
// (Needed mainly for the Canadian keyboard.)
partial modifier_keys
xkb_symbols "rctrl_switch" {
    key <RCTL> {
        symbols[Group1] = [ Mode_switch ]
    };
};

// Pressing the right Alt key switches to the next group.
partial modifier_keys
xkb_symbols "toggle" {
    virtual_modifiers AltGr;
    key <RALT> {
        symbols[Group1] = [ ISO_Next_Group ],
        virtualMods= AltGr
    };
};

// Pressing both Shift keys switches to the next or previous group
// (depending on which Shift is pressed first).
partial modifier_keys
xkb_symbols "shifts_toggle" {
    key <LFSH> { [ Shift_L, ISO_Prev_Group ] };
    key <RTSH> { [ Shift_R, ISO_Next_Group ] };
};

// Pressing Shift+Caps_Lock switches to the next group.
partial modifier_keys
xkb_symbols "shift_caps_toggle" {
    key <CAPS> { [ Caps_Lock, ISO_Next_Group ] };
};

// Pressing Caps_Lock selects the first group,
// pressing Shift+Caps_Lock selects the last group.
partial modifier_keys
xkb_symbols "shift_caps_switch" {
    key <CAPS> { [ ISO_First_Group, ISO_Last_Group ] };
};

// toggle using win + space as combo
partial modifier_keys
xkb_symbols "win_space_toggle" {
  key <SPCE> {
    type="PC_SUPER_LEVEL2",
    symbols[Group1]= [ space, ISO_Next_Group ],
    symbols[Group2]= [ space, ISO_Next_Group ]
  };
};

// Pressing the left Win key selects the first group,
// pressing the right Win or the Menu key selects the last group.
partial modifier_keys
xkb_symbols "win_menu_switch" {
    virtual_modifiers AltGr;
    key <LWIN> {
        virtualMods= AltGr,
        symbols[Group1] = [ ISO_First_Group ]
    };
    key <MENU> {
        virtualMods= AltGr,
        symbols[Group1] = [ ISO_Last_Group ]
    };
    key <RWIN> {
        virtualMods= AltGr,
        symbols[Group1] = [ ISO_Last_Group ]
    };
};

// Pressing the left Ctrl key selects the first group,
// pressing the right Ctrl key selects the last group.
partial modifier_keys
xkb_symbols "lctrl_rctrl_switch" {
    virtual_modifiers AltGr;
    key <LCTL> {
        virtualMods= AltGr,
        symbols[Group1] = [ ISO_First_Group ]
    };
    key <RCTL> {
        virtualMods= AltGr,
        symbols[Group1] = [ ISO_Last_Group ]
    };
};


//
// CTRL-SHIFT toggle section
//
partial modifier_keys
xkb_symbols "lctrl_lshift_toggle" {
    key <LFSH> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ Shift_L, ISO_Next_Group ]
    };
    key <LCTL> { [ Control_L, ISO_Next_Group ] };
};

partial modifier_keys
xkb_symbols "lctrl_lshift_toggle_rev" {
    key <LFSH> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ Shift_L, ISO_Prev_Group ]
    };
    key <LCTL> { [ Control_L, ISO_Prev_Group ] };
};

partial modifier_keys
xkb_symbols "rctrl_rshift_toggle" {
    key <RTSH> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ Shift_R, ISO_Next_Group ]
    };
    key <RCTL> { [ Control_R, ISO_Next_Group ] };
};

partial modifier_keys
xkb_symbols "ctrl_shift_toggle" {
    include "group(lctrl_lshift_toggle)"
    include "group(rctrl_rshift_toggle)"
};

partial modifier_keys
xkb_symbols "ctrl_shift_toggle_bidir" {
    include "group(lctrl_lshift_toggle_rev)"
    include "group(rctrl_rshift_toggle)"
};


//
// CTRL-ALT toggle section
//
partial modifier_keys
xkb_symbols "lctrl_lalt_toggle" {
    virtual_modifiers Alt;
    key <LALT> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ NoSymbol, ISO_Next_Group ],
        virtualMods= Alt
    };
    key <LCTL> {
        type[Group1]="PC_ALT_LEVEL2",
        symbols[Group1] = [ Control_L, ISO_Next_Group ]
    };
};

partial modifier_keys
xkb_symbols "lctrl_lalt_toggle_rev" {
    virtual_modifiers Alt;
    key <LALT> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ NoSymbol, ISO_Prev_Group ],
        virtualMods= Alt
    };
    key <LCTL> {
        type[Group1]="PC_ALT_LEVEL2",
        symbols[Group1] = [ Control_L, ISO_Prev_Group ]
    };
};

partial modifier_keys
xkb_symbols "rctrl_ralt_toggle" {
    virtual_modifiers Alt;
    key <RALT> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ NoSymbol, ISO_Next_Group ],
        virtualMods= Alt
    };
    key <RCTL> {
        type[Group1]="PC_ALT_LEVEL2",
        symbols[Group1] = [ Control_R, ISO_Next_Group ]
    };
};

partial modifier_keys
xkb_symbols "ctrl_alt_toggle" {
    include "group(lctrl_lalt_toggle)"
    include "group(rctrl_ralt_toggle)"
};

partial modifier_keys
xkb_symbols "ctrl_alt_toggle_bidir" {
    include "group(lctrl_lalt_toggle_rev)"
    include "group(rctrl_ralt_toggle)"
};


//
// ALT-SHIFT toggle section
//
partial modifier_keys
xkb_symbols "lalt_lshift_toggle" {
    virtual_modifiers Alt;
    key <LALT> {
        symbols[Group1] = [ NoSymbol, ISO_Next_Group ],
        virtualMods= Alt
    };
    key <LFSH> {
        type[Group1]="PC_ALT_LEVEL2",
        symbols[Group1] = [ Shift_L, ISO_Next_Group ]
    };
};

partial modifier_keys
xkb_symbols "lalt_lshift_toggle_rev" {
    virtual_modifiers Alt;
    key <LALT> {
        symbols[Group1] = [ NoSymbol, ISO_Prev_Group ],
        virtualMods= Alt
    };
    key <LFSH> {
        type[Group1]="PC_ALT_LEVEL2",
        symbols[Group1] = [ Shift_L, ISO_Prev_Group ]
    };
};

partial modifier_keys
xkb_symbols "ralt_rshift_toggle" {
    virtual_modifiers Alt;
    key <RALT> {
        symbols[Group1] = [ NoSymbol, ISO_Next_Group ],
        virtualMods= Alt
    };
    key <RTSH> {
        type[Group1]="PC_ALT_LEVEL2",
        symbols[Group1] = [ Shift_R, ISO_Next_Group ]
    };
};

partial modifier_keys
xkb_symbols "alt_shift_toggle" {
    include "group(lalt_lshift_toggle)"
    include "group(ralt_rshift_toggle)"
};

partial modifier_keys
xkb_symbols "alt_shift_toggle_bidir" {
    include "group(lalt_lshift_toggle_rev)"
    include "group(ralt_rshift_toggle)"
};


// Pressing the Menu key switches to the next group,
// while Shift+Menu acts as Menu.
partial modifier_keys
xkb_symbols "menu_toggle" {
    key <MENU> { [ ISO_Next_Group, Menu ] };
};

// Pressing the left Win key switches to the next group.
// (Using this map, you should declare your keyboard as
// pc101 or pc102 instead of pc104 or pc105.)
partial modifier_keys
xkb_symbols "lwin_toggle" {
    virtual_modifiers AltGr;
    key <LWIN> {
         virtualMods= AltGr,
        symbols[Group1] = [ ISO_Next_Group ]
    };
};

// Pressing the right Win key switches to the next group.
// (Using this map, you should declare your keyboard as
// pc101 or pc102 instead of pc104 or pc105.)
partial modifier_keys
xkb_symbols "rwin_toggle" {
    virtual_modifiers AltGr;
    key <RWIN> {
        virtualMods= AltGr,
        symbols[Group1] = [ ISO_Next_Group ]
    };
};

// Pressing both Ctrl keys switches to the next or previous group
// (depending on which Ctrl is pressed first).
partial modifier_keys
xkb_symbols "ctrls_toggle" {
    virtual_modifiers LControl, RControl;
    key <LCTL> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ NoSymbol, ISO_Prev_Group ],
        virtualMods= LControl
    };
    key <RCTL> {
        type[Group1]="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ NoSymbol, ISO_Next_Group ],
        virtualMods= RControl
    };
};

// Pressing both Alt keys switches to the next or previous group
// (depending on which Alt is pressed first).
partial modifier_keys
xkb_symbols "alts_toggle" {
    virtual_modifiers LAlt, RAlt;
    key <LALT> {
        type[Group1]="PC_RALT_LEVEL2",
        symbols[Group1] = [ NoSymbol, ISO_Prev_Group ],
        virtualMods= LAlt
    };
    key <RALT> {
        type[Group1]="PC_LALT_LEVEL2",
        symbols[Group1] = [ NoSymbol, ISO_Next_Group ],
        virtualMods= RAlt
    };
};

// Pressing the left Shift key switches to the next group.
partial modifier_keys
xkb_symbols "lshift_toggle" {
    virtual_modifiers AltGr;
    key <LFSH> {
        symbols[Group1] = [ ISO_Next_Group ],
        virtualMods= AltGr
    };
};

// Pressing the right Shift key switches to the next group.
partial modifier_keys
xkb_symbols "rshift_toggle" {
    virtual_modifiers AltGr;
    key <RTSH> {
        symbols[Group1] = [ ISO_Next_Group ],
        virtualMods= AltGr
    };
};

// Pressing the left Alt key switches to the next group.
partial modifier_keys
xkb_symbols "lalt_toggle" {
    virtual_modifiers AltGr;
    key <LALT> {
        symbols[Group1] = [ ISO_Next_Group ],
        virtualMods= AltGr
    };
};

// Pressing the left Ctrl key switches to the next group.
partial modifier_keys
xkb_symbols "lctrl_toggle" {
    virtual_modifiers AltGr;
    key <LCTL> {
        symbols[Group1] = [ ISO_Next_Group ],
        virtualMods= AltGr
    };
};

// Pressing the right Ctrl key switches to the next group.
partial modifier_keys
xkb_symbols "rctrl_toggle" {
    virtual_modifiers AltGr;
    key <RCTL> {
        symbols[Group1] = [ ISO_Next_Group ],
        virtualMods= AltGr
    };
};

// Pressing Alt+Caps_Lock switches to the next group,
// pressing Caps_Lock toggles CapsLock.
partial modifier_keys
xkb_symbols "alt_caps_toggle" {
    key <CAPS> {
       type="PC_ALT_LEVEL2",
       symbols[Group1] = [ Caps_Lock, ISO_Next_Group ]
    };
};

hidden partial modifier_keys
xkb_symbols "olpc" {
    key <I219> { [ ISO_Next_Group, ISO_Prev_Group ] };
};

partial modifier_keys
xkb_symbols "alt_space_toggle" {
    key <SPCE> {
        type[Group1]="PC_ALT_LEVEL2",
        symbols[Group1] = [ space, ISO_Next_Group ]
    };
};

// Pressing the Scroll Lock key switches to the next group,
partial modifier_keys
xkb_symbols "sclk_toggle" {
    virtual_modifiers AltGr;
    key <SCLK> {
        virtualMods= AltGr,
        symbols[Group1] = [ ISO_Next_Group ]
    };
};

// Control_L+Win_L selects the first group (presumably Lat),
// Control_R+Menu selects the second group (presumably Rus).
partial modifier_keys
xkb_symbols "lctrl_lwin_rctrl_menu" {
    key <LWIN> {
        type[Group1] = "PC_CONTROL_LEVEL2",
        symbols[Group1] = [ Super_L, ISO_First_Group ]
    };
    key <MENU> {
        type[Group1] = "PC_CONTROL_LEVEL2",
        symbols[Group1] = [ Menu, ISO_Last_Group ]
    };
};

// Control_L+Win_L toggles groups.
partial modifier_keys
xkb_symbols "lctrl_lwin_toggle" {
    key <LWIN> {
        type[ Group1 ]    = "PC_CONTROL_LEVEL2",
        symbols[ Group1 ] = [ Super_L,    ISO_Next_Group ]
    };
};

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "rs(latin)"
    name[Group1]="Croatian";

    // Redefine these keys to match the XFree86 Croatian layout.
    key <AE01> { [     1,     exclam,    asciitilde,      dead_tilde ] };
    key <AE03> { [     3, numbersign,   asciicircum, dead_circumflex ] };
    key <AE05> { [     5,    percent,        degree,  dead_abovering ] };
    key <AE07> { [     7,      slash,         grave,      dead_grave ] };
    key <AB10> { [ minus, underscore, dead_belowdot,   dead_abovedot ] };
};

partial alphanumeric_keys
xkb_symbols "us" {

    include "us"
    name[Group1]= "Croatian (US keyboard with Croatian letters)";

    key <AD01> { [  any,  any,  backslash               ] };
    key <AD02> { [  any,  any,  bar                     ] };
    key <AD03> { [  any,  any,  EuroSign                ] };
    key <AD06> { [  any,  any,  z,           Z          ] };
    key <AD11> { [  any,  any,  scaron,      Scaron     ] };
    key <AD12> { [  any,  any,  dstroke,     Dstroke    ] };
    key <AC04> { [  any,  any,  bracketleft             ] };
    key <AC05> { [  any,  any,  bracketright            ] };
    key <AC08> { [  any,  any,  lstroke                 ] };
    key <AC09> { [  any,  any,  Lstroke                 ] };
    key <AC10> { [  any,  any,  ccaron,      Ccaron     ] };
    key <AC11> { [  any,  any,  cacute,      Cacute     ] };
    key <LSGT> { [  any,  any,  bar                     ] };
    key <AB01> { [  any,  any,  y,           Y          ] };
    key <AB04> { [  any,  any,  at                      ] };
    key <AB05> { [  any,  any,  braceleft               ] };
    key <AB06> { [  any,  any,  braceright              ] };
    key <AB07> { [  any,  any,  section                 ] };
    key <AB08> { [  any,  any,  semicolon               ] };
    key <AB09> { [  any,  any,  colon                   ] };
    key <AB10> { [  any,  any,  minus,       underscore ] };
    key <BKSL> { [  any,  any,  zcaron,      Zcaron     ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "alternatequotes" {

    include "rs(latinalternatequotes)"
    name[Group1]= "Croatian (with guillemets for quotes)";
};

partial alphanumeric_keys
xkb_symbols "unicode" {

    include "rs(latinunicode)"
    name[Group1]= "Croatian (with Croatian digraphs)";
};

partial alphanumeric_keys
xkb_symbols "unicodeus" {

    include "rs(latinunicodeyz)"
    name[Group1]= "Croatian (US keyboard with Croatian digraphs)";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        // Modified from Arabic (buckwalter)
default partial alphanumeric_keys
xkb_symbols "jawi" {
    name[Group1]= "Indonesian (Jawi)";

    // `
    key <TLDE> { [ Arabic_superscript_alef, Arabic_shadda, grave, asciitilde ] }; // ـٰ supercript alef

    // 1..=
    key <AE01> { [ Arabic_1,     exclam             ] };
    key <AE02> { [ Arabic_2,     at                 ] };
    key <AE03> { [ Arabic_3,     numbersign         ] };
    key <AE04> { [ Arabic_4,     0x1000657          , dollar, 0x10006e9 ] }; // ـٗ inverted damma, ۩
    key <AE05> { [ Arabic_5,     Arabic_percent     ] };
    key <AE06> { [ Arabic_6,     asciicircum        ] };
    key <AE07> { [ Arabic_7,     ampersand          ] };
    key <AE08> { [ Arabic_8,     asterisk           , 0x100066d, 0x10006de ] }; // ٭, ۞
    key <AE09> { [ Arabic_9,     parenright         , 0x100fd3e, 0x100fd3e ] }; // ornate left
    key <AE10> { [ Arabic_0,     parenleft          , 0x100fd3f, 0x100fd3f ] }; // ornate right
    key <AE11> { [ minus,        Arabic_tatweel     , underscore, underscore ] };
    key <AE12> { [ equal,        plus               ] };

    // Q..]
    key <AD01> { [ Arabic_qaf,   Arabic_hamza       ] };
    key <AD02> { [ Arabic_waw,   Arabic_hamzaonwaw  ] };
    key <AD03> { [ Arabic_ain,   0x10006ce          ] }; // yeh with small v
    key <AD04> { [ Arabic_ra,    0x1000656          ] }; // ـٖ subscript alef
    key <AD05> { [ Arabic_teh,   Arabic_tah         ] };
    key <AD06> { [ Arabic_yeh,   Arabic_alefmaksura ] };
    key <AD07> { [ Arabic_damma, Arabic_hamzaonalef ] };
    key <AD08> { [ Arabic_kasra, Arabic_hamzaunderalef ] };
    key <AD09> { [ Arabic_sukun, 0x10006c6          ] }; // oe
    key <AD10> { [ Arabic_veh,   Arabic_tehmarbuta  ] }; // ڤ p
    key <AD11> { [ Arabic_fathatan, 0x1000671       , bracketright,	braceright ] }; // ٱ alef wasla
    key <AD12> { [ Arabic_kasratan, Arabic_hamzaonyeh, bracketleft,	braceleft ] };

    // A..'
    key <AC01> { [ Arabic_fatha, Arabic_alef        ] };
    key <AC02> { [ Arabic_seen,  Arabic_sad         ] };
    key <AC03> { [ Arabic_dal,   Arabic_dad         ] };
    key <AC04> { [ Arabic_feh,   0x10006a0          ] }; // ڠ ng
    key <AC05> { [ 0x1000762,    Arabic_ghain       ] }; // ݢ g (prefered)
    key <AC06> { [ Arabic_ha,    Arabic_hah         ] };
    key <AC07> { [ Arabic_jeem,  0x10006ac          ] }; // ڬ g
    key <AC08> { [ Arabic_kaf,   Arabic_keheh       ] }; // ک k (prefered)
    key <AC09> { [ Arabic_lam,   Arabic_madda_above ] }; // ـٓ maddah above
    key <AC10> { [ Arabic_semicolon, colon          ] };
    key <AC11> { [ apostrophe,	 quotedbl           , 0x100066c, 0x100066c ] }; // thousand sep

    // \ 
    key <BKSL> { [ Arabic_dammatan, Arabic_maddaonalef, backslash, bar ] };

    // not exist in US keyboard
    key <LSGT> { [ bar,          brokenbar	        ] };

    // Z../
    key <AB01> { [ Arabic_zain,  Arabic_zah         ] };
    key <AB02> { [ Arabic_khah,  Arabic_sheen       ] };
    key <AB03> { [ Arabic_tcheh, Arabic_thal        ] }; // چ c/ch
    key <AB04> { [ 0x10006cf,    Arabic_theh        ] }; // ۏ v
    key <AB05> { [ Arabic_beh,   0x10000bb          ] }; // »
    key <AB06> { [ Arabic_noon,  0x10006bd          ] }; // ڽ ny
    key <AB07> { [ Arabic_meem,  0x10000ab          ] }; // «
    key <AB08> { [ Arabic_comma, less               , 0x100066b, 0x100060d ] }; // decimal sep, date sep
    key <AB09> { [ period,       greater,           Arabic_fullstop, 0x10006dd ] }; // ۔ full stop, ۝
    key <AB10> { [ slash,        Arabic_question_mark ] };
    
    
    include "level3(ralt_switch)"
};

                                                                                                                                                                                                                                                                                                                                                                                                                                                             // New style XKB layout for some widely used Hungarian keyboard layouts
//
// Based on old style 'xkb/symbols/hu"
//
// (C) 2002-2004 Soós Péter <sp@osb.hu>
// (C) 2010 Andras Timar <timar@fsf.hu>
//
// Permission is granted to anyone to use, distribute and modify
// this file in any way, provided that the above copyright notice
// is left intact and the author of the modification summarizes
// the changes in this header.
//
// This file is distributed without any expressed or implied warranty.
//
// Changes:
//  2004-04-17 - Moved to new style (only Unicode based layouts)
//             - Added consistent dead key support
//             - Fixed abovedot
//             - Added adiaeresis
//             - Added EuroSign and cent symbol
//  2010-04-23 - Added doublelowquotemark
//             - Added rightdoublequotemark
//             - Added endash
//  2010-05-13 - Added ellipsis


// Default layout
default  partial
xkb_symbols "basic" {
    include "hu(102_qwertz_comma_dead)"
    name[Group1] = "Hungarian";
};

// Standard layout
partial
xkb_symbols "standard" {
    include "hu(102_qwertz_comma_dead)"
    name[Group1] = "Hungarian (standard)";
};

// Standard layout without dead key support
partial
xkb_symbols "nodeadkeys" {
    include "hu(102_qwertz_comma_nodead)"
    name[Group1] = "Hungarian (eliminate dead keys)";
};

// Qwerty layout
partial
xkb_symbols "qwerty" {
    include "hu(101_qwerty_comma_dead)"
    name[Group1] = "Hungarian (qwerty)";
};

// Main layouts

// 101_qwertz_comma_dead
// 101 key qwertz layout
// with decimal comma on keypad
// and with dead key support
partial
xkb_symbols "101_qwertz_comma_dead" {
    name[Group1] = "Hungarian (101/qwertz/comma/dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwertz)"
    include "kpdl(comma)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 101_qwertz_comma_nodead
// 101 key qwertz layout
// with decimal comma on keypad
// and without dead key support
partial
xkb_symbols "101_qwertz_comma_nodead" {
    name[Group1] = "Hungarian (101/qwertz/comma/eliminate dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwertz)"
    include "kpdl(comma)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 101_qwertz_dot_dead
// 101 key qwertz layout
// with decimal dot on keypad
// and with dead key support
partial
xkb_symbols "101_qwertz_dot_dead" {
    name[Group1] = "Hungarian (101/qwertz/dot/dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwertz)"
    include "hu(def_dot)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 101_qwertz_dot_nodead
// 101 key qwertz layout
// with decimal dot on keypad
// and without dead key support
partial
xkb_symbols "101_qwertz_dot_nodead" {
    name[Group1] = "Hungarian (101/qwertz/dot/eliminate dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwertz)"
    include "hu(def_dot)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 101_qwerty_comma_dead
// 101 key qwerty layout
// with decimal comma on keypad
// and with dead key support
partial
xkb_symbols "101_qwerty_comma_dead" {
    name[Group1] = "Hungarian (101/qwerty/comma/dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwerty)"
    include "kpdl(comma)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 101_qwerty_comma_nodead
// 101 key qwerty layout
// with decimal comma on keypad
// and without dead key support
partial
xkb_symbols "101_qwerty_comma_nodead" {
    name[Group1] = "Hungarian (101/qwerty/comma/eliminate dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwerty)"
    include "kpdl(comma)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 101_qwerty_dot_dead
// 101 key qwerty layout
// with decimal dot on keypad
// and with dead key support
partial
xkb_symbols "101_qwerty_dot_dead" {
    name[Group1] = "Hungarian (101/qwerty/dot/dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwerty)"
    include "hu(def_dot)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 101_qwerty_dot_nodead
// 101 key qwerty layout
// with decimal dot on keypad
// and without dead key support
partial
xkb_symbols "101_qwerty_dot_nodead" {
    name[Group1] = "Hungarian (101/qwerty/dot/eliminate dead keys)";
    include "latin"
    include "hu(def_101)"
    include "hu(def_qwerty)"
    include "hu(def_dot)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwertz_comma_dead
// 102 key qwertz layout
// with decimal comma on keypad
// and with dead key support
partial
xkb_symbols "102_qwertz_comma_dead" {
    name[Group1] = "Hungarian (102/qwertz/comma/dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwertz)"
    include "kpdl(comma)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwertz_comma_nodead
// 102 key qwertz layout
// with decimal comma on keypad
// and without dead key support
partial
xkb_symbols "102_qwertz_comma_nodead" {
    name[Group1] = "Hungarian (102/qwertz/comma/eliminate dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwertz)"
    include "kpdl(comma)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwertz_dot_dead
// 102 key qwertz layout
// with decimal dot on keypad
// and with dead key support
partial
xkb_symbols "102_qwertz_dot_dead" {
    name[Group1] = "Hungarian (102/qwertz/dot/dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwertz)"
    include "hu(def_dot)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwertz_dot_nodead
// 102 key qwertz layout
// with decimal dot on keypad
// and without dead key support
partial
xkb_symbols "102_qwertz_dot_nodead" {
    name[Group1] = "Hungarian (102/qwertz/dot/eliminate dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwertz)"
    include "hu(def_dot)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwerty_comma_dead
// 102 key qwerty layout
// with decimal comma on keypad
// and with dead key support
partial
xkb_symbols "102_qwerty_comma_dead" {
    name[Group1] = "Hungarian (102/qwerty/comma/dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwerty)"
    include "kpdl(comma)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwerty_comma_nodead
// 102 key qwerty layout
// with decimal comma on keypad
// and without dead key support
partial
xkb_symbols "102_qwerty_comma_nodead" {
    name[Group1] = "Hungarian (102/qwerty/comma/eliminate dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwerty)"
    include "kpdl(comma)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwerty_dot_dead
// 102 key qwerty layout
// with decimal dot on keypad
// and with dead key support
partial
xkb_symbols "102_qwerty_dot_dead" {
    name[Group1] = "Hungarian (102/qwerty/dot/dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwerty)"
    include "hu(def_dot)"
    include "hu(def_dead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// 102_qwerty_dot_nodead
// 102 key qwerty layout
// with decimal dot on keypad
// and without dead key support
partial
xkb_symbols "102_qwerty_dot_nodead" {
    name[Group1] = "Hungarian (102/qwerty/dot/eliminate dead keys)";
    include "latin"
    include "hu(def_102)"
    include "hu(def_qwerty)"
    include "hu(def_dot)"
    include "hu(def_nodead)"
    include "hu(def_common)"
    include "level3(ralt_switch)"
};

// Partial layouts

// def_102:
// The standard Hungarian 102 key layout
hidden partial alphanumeric_keys
xkb_symbols "def_102" {
    key <TLDE>  { [            0,      section,           notsign                  ] };
    key <LSGT>  { [       iacute,       Iacute,              less,         greater ] };

};

// def_101:
// An alternative layout for 101 key keyboards
hidden partial alphanumeric_keys
xkb_symbols "def_101" {
    key <TLDE>  { [       iacute,       Iacute,                 0,         section ] };
    key <LSGT>  { [         less,      greater                                     ] };
};

// def_qwertz:
// The standard Hungaryan qwertz layout
hidden partial alphanumeric_keys
xkb_symbols "def_qwertz" {
    key <AD06>  { [            z,            Z,           endash                   ] };
    key <AB01>  { [            y,            Y,           greater                  ] };
};


// def_qwerty:
// The qwerty layout for people who familiar with the standard US layout
hidden partial alphanumeric_keys
xkb_symbols "def_qwerty" {
    key <AD06>  { [            y,            Y,           endash                   ] };
    key <AB01>  { [            z,            Z,           greater                  ] };
};

// def_dot: 	 
// The Hungarian standard is the comma on the keypad not decimal dot, 	 
// but programmers hate it 	 
hidden partial keypad_keys 	 
xkb_symbols "def_dot" { 	 
    key <KPDL>  { [    KP_Delete,   KP_Decimal                                     ] }; 	 
}; 	 


// def_dead:
// Dead keys support part
hidden partial alphanumeric_keys
xkb_symbols "def_dead" {
    key <AE01>  { [            1,   apostrophe,        asciitilde,      dead_tilde ] };
    key <AE02>  { [            2,     quotedbl,        dead_caron,           caron ] };
    key <AE03>  { [            3,         plus,       asciicircum, dead_circumflex ] };
    key <AE04>  { [            4,       exclam,        dead_breve,           breve ] };
    key <AE05>  { [            5,      percent,    dead_abovering,          degree ] };
    key <AE06>  { [            6,        slash,       dead_ogonek,          ogonek ] };
    key <AE07>  { [            7,        equal,             grave,      dead_grave ] };
    key <AE08>  { [            8,    parenleft,     dead_abovedot,        abovedot ] };
    key <AE09>  { [            9,   parenright,        dead_acute,           acute ] };
    key <AE10>  { [   odiaeresis,   Odiaeresis,  dead_doubleacute,     doubleacute ] };
    key <AE11>  { [   udiaeresis,   Udiaeresis,    dead_diaeresis,       diaeresis ] };
    key <AE12>  { [       oacute,       Oacute,      dead_cedilla,         cedilla ] };
};

// def_nodead:
// Without dead keys support
hidden partial alphanumeric_keys
xkb_symbols "def_nodead" {
    key <AE01>  { [            1,   apostrophe,        asciitilde                  ] };
    key <AE02>  { [            2,     quotedbl,             caron                  ] };
    key <AE03>  { [            3,         plus,       asciicircum                  ] };
    key <AE04>  { [            4,       exclam,             breve                  ] };
    key <AE05>  { [            5,      percent,            degree                  ] };
    key <AE06>  { [            6,        slash,            ogonek                  ] };
    key <AE07>  { [            7,        equal,             grave                  ] };
    key <AE08>  { [            8,    parenleft,          abovedot                  ] };
    key <AE09>  { [            9,   parenright,             acute                  ] };
    key <AE10>  { [   odiaeresis,   Odiaeresis,       doubleacute                  ] };
    key <AE11>  { [   udiaeresis,   Udiaeresis,         diaeresis                  ] };
    key <AE12>  { [       oacute,       Oacute,           cedilla                  ] };
};


// def_common:
// The common part of all Hungarian layout above
hidden partial alphanumeric_keys
xkb_symbols "def_common" {
    key <AD01>  { [            q,            Q,         backslash                  ] };
    key <AD02>  { [            w,            W,               bar                  ] };
    key <AD03>  { [            e,            E,        Adiaeresis                  ] };
    key <AD07>  { [            u,            U,          EuroSign                  ] };
    key <AD08>  { [            i,            I,            Iacute,          iacute ] };
    key <AD09>	{ [            o,            O,        doublelowquotemark          ] };
    key <AD10>	{ [            p,            P,        rightdoublequotemark        ] };
    key <AD11>  { [ odoubleacute, Odoubleacute,          division                  ] };
    key <AD12>  { [       uacute,       Uacute,          multiply                  ] };

    key <AC01>  { [            a,            A,        adiaeresis,      Adiaeresis ] };
    key <AC02>  { [            s,            S,           dstroke                  ] };
    key <AC03>  { [            d,            D,           Dstroke                  ] };
    key <AC04>  { [            f,            F,       bracketleft                  ] };
    key <AC05>  { [            g,            G,      bracketright                  ] };
    key <AC07>  { [            j,            J,            iacute,          Iacute ] };
    key <AC08>  { [            k,            K,           lstroke                  ] };
    key <AC09>  { [            l,            L,           Lstroke                  ] };
    key <AC10>  { [       eacute,       Eacute,            dollar,            cent ] };
    key <AC11>  { [       aacute,       Aacute,            ssharp                  ] };

    key <BKSL>  { [ udoubleacute, Udoubleacute,          currency                  ] };

    key <AB02>  { [            x,            X,        numbersign                  ] };
    key <AB03>  { [            c,            C,         ampersand                  ] };
    key <AB04>  { [            v,            V,                at                  ] };
    key <AB05>  { [            b,            B,         braceleft                  ] };
    key <AB06>  { [            n,            N,        braceright                  ] };
    key <AB07>  { [            m,            M,              less                  ] };
    key <AB08>  { [        comma,     question,         semicolon                  ] };
    key <AB09>  { [       period,        colon,           greater                  ] };
    key <AB10>  { [        minus,   underscore,          asterisk                  ] };

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  // Irish keyboard map

// Support for Irish (old and new orthography) and English
// Seamus O Ciardhuain <seoc@cnds.ucd.ie>  (19 December 2002)

// The general idea is to provide the characters in ISO 8859-1,
// ISO 8859-15, ISO 8859-14, CP1252 and "Extended Latin-8".
// However, not all are accessible directly because there aren't
// enough keys; some need deadkeys to access them, others the 
// "Multi_key" compose sequences.

// Designed to be similar to the layouts used on Windows
// and the Macintosh.

// Everything is in Group 1 to be compatible with the
// multi-layout keyboard support in XFree86 4.3.

// The basic layout is a modern keyboard, but dotted consonants are
// accessible using a deadkey (AltGr+H or AltGr+W).
// If a proper Clo Gaelach keyboard is needed, then use the layout
// defined below as ie(CloGaelach), which gives dotted consonants
// without use of a deadkey.


default  partial alphanumeric_keys
xkb_symbols "basic" {

    // Modern keyboard for Irish and English
    //  - acute-accented vowels as AltGr+vowel and AltGr+Shift+vowel
    //  - euro currency sign as AltGr+4
    //  - Comhartha Agus (Tironian Sign Et) as AltGr+Shift+7
    //  - non-breaking space as AltGr+Space and AltGr+Shift+Space
    //  - matches hardware (keys and engraved symbols) for Irish keyboards

    name[Group1] = "Irish";

    //
    // Numeric row `1234567890-=
    //
    key <TLDE> { [        grave,     notsign,            brokenbar,             NoSymbol ] };
    key <AE01> { [            1,      exclam,           exclamdown,          onesuperior ] };
    key <AE02> { [            2,    quotedbl,            trademark,          twosuperior ] };
    key <AE03> { [            3,    sterling,            copyright,        threesuperior ] };
    key <AE04> { [            4,      dollar,             EuroSign,                 cent ] };
    key <AE05> { [            5,     percent,              section,               dagger ] };
    key <AE06> { [            6, asciicircum,      dead_circumflex,            0x1002030 ] };
                                                                         // per thousand
    key <AE07> { [            7,   ampersand,            paragraph,            0x100204A ] };
                                                                          // Tironian Et
    key <AE08> { [            8,    asterisk,       dead_diaeresis,   enfilledcircbullet ] };
    key <AE09> { [            9,   parenleft,          ordfeminine,       periodcentered ] };
    key <AE10> { [            0,  parenright,            masculine,               degree ] };
    key <AE11> { [        minus,  underscore,               endash,               emdash ] };
    key <AE12> { [        equal,        plus,             notequal,            plusminus ] };

    //
    // QWERTYUIOP[]
    //
    key <AD01> { [            q,           Q,                   oe,                   OE ] };
    key <AD02> { [            w,           W,        dead_abovedot,        dead_abovedot ] };
    key <AD03> { [            e,           E,               eacute,               Eacute ] };
    key <AD04> { [            r,           R,           registered,            0x1002030 ] };
                                                                         // per thousand
    key <AD05> { [            t,           T,                thorn,                THORN ] };
    key <AD06> { [            y,           Y,                  yen,                   mu ] };
    key <AD07> { [            u,           U,               uacute,               Uacute ] };
    key <AD08> { [            i,           I,               iacute,               Iacute ] };
    key <AD09> { [            o,           O,               oacute,               Oacute ] };
    key <AD10> { [            p,           P,   singlelowquotemark,             NoSymbol ] };
    key <AD11> { [  bracketleft,   braceleft,  leftdoublequotemark, rightdoublequotemark ] };
    key <AD12> { [ bracketright,  braceright,  leftsinglequotemark, rightsinglequotemark ] };

    //
    // ASDFGHJKL;'#
    //
    key <AC01> { [          a,             A,               aacute,               Aacute ] };
    key <AC02> { [          s,             S,               ssharp,             NoSymbol ] };
    key <AC03> { [          d,             D,                  eth,                  ETH ] };
    key <AC04> { [          f,             F,            0x1000192,             NoSymbol ] };
                                                    // f with hook
    key <AC05> { [          g,             G,            copyright,             NoSymbol ] };
    key <AC06> { [          h,             H,        dead_abovedot,        dead_abovedot ] };
    key <AC07> { [          j,             J,             idotless,           onequarter ] };
    key <AC08> { [          k,             K,       dead_abovering,              onehalf ] };
    key <AC09> { [          l,             L,                acute,        threequarters ] };
    key <AC10> { [  semicolon,         colon,             ellipsis,         doubledagger ] };
    key <AC11> { [ apostrophe,            at,                   ae,                   AE ] };
    key <BKSL> { [ numbersign,    asciitilde,        guillemotleft,       guillemotright ] };


    //
    // \ZXCVBNM,./
    //
    key <LSGT> { [  backslash,           bar,           dead_grave,           dead_acute ] };
    key <AB01> { [          z,             Z,     leftanglebracket,    rightanglebracket ] };
    key <AB02> { [          x,             X,             multiply,          approximate ] };
    key <AB03> { [          c,             C,         dead_cedilla,              cedilla ] };
    key <AB04> { [          v,             V,           dead_caron,             NoSymbol ] };
    key <AB05> { [          b,             B,            diaeresis,             NoSymbol ] };
    key <AB06> { [          n,             N,           dead_tilde,             NoSymbol ] };
    key <AB07> { [          m,             M,               macron,             NoSymbol ] };
    key <AB08> { [      comma,          less,        lessthanequal,   doublelowquotemark ] };
    key <AB09> { [     period,       greater,     greaterthanequal,   singlelowquotemark ] };
    key <AB10> { [      slash,      question,             division,         questiondown ] };


    key <SPCE> { [      space,         space,         nobreakspace,         nobreakspace ] };

    include "level3(ralt_switch)"

    // NB: putting Shift+<RALT> as Multi_key gives odd behaviour since the
    // order of pressing keys affects the result.

    include "compose(rwin)"
};

partial alphanumeric_keys
xkb_symbols "CloGaelach" {

    // Adds support for Clo Gaelach (old orthography for Irish).
    // Changes from "basic":
    //  - dotted consonants as AltGr+consonant or AltGr+Shift+consonant (TPSDFGCBM)
    //  - long lowercase r as AltGr+R
    //  - long lowercase s as AltGr+Z
    //  - long lowercase s dotted as AltGr+Shift+Z
    //  - some symbols moved around to retain them
    //  - several characters unlikely to be used are lost
    // The long letters are needed only where the font provides
    // both the long and short forms as different glyphs.

    include "ie(basic)"

    name[Group1] = "CloGaelach";

    key <TLDE> { [     grave, notsign,  brokenbar,       ssharp ] };
    key <AD04> { [         r,       R,  0x100027C,   registered ] };
                                        // long r
    key <AD05> { [         t,       T,  tabovedot,    Tabovedot ] };
    key <AD10> { [         p,       P,  pabovedot,    Pabovedot ] };

    key <AC02> { [         s,       S,  sabovedot,    Sabovedot ] };
    key <AC03> { [         d,       D,  dabovedot,    Dabovedot ] };
    key <AC04> { [         f,       F,  fabovedot,    Fabovedot ] };
    key <AC05> { [         g,       G,  gabovedot,    Gabovedot ] };

    key <AB01> { [         z,       Z,  0x100017F,    0x1001E9B ] };
                                        // long s,   long s dot
    key <AB03> { [         c,       C,  cabovedot,    Cabovedot ] };
    key <AB05> { [         b,       B,  babovedot,    Babovedot ] };
    key <AB07> { [         m,       M,  mabovedot,    Mabovedot ] };

    key <LSGT> { [ backslash,     bar, dead_grave, dead_cedilla ] };
};

partial alphanumeric_keys
xkb_symbols "UnicodeExpert" {

// This should eventually be a "Unicode Expert" layout like the Mac one.

    name[Group1] = "Irish (UnicodeExpert)";

    //
    // Numeric row `1234567890-=
    //
    key <TLDE> { [        grave,     notsign,        0x10000A6,        0x10000A6 ] };
                                                 // broken bar
    key <AE01> { [            1,      exclam,         NoSymbol,         NoSymbol ] };
    key <AE02> { [            2,    quotedbl, dead_doubleacute, dead_doubleacute ] };
    key <AE03> { [            3,    sterling,         NoSymbol,         NoSymbol ] };
    key <AE04> { [            4,      dollar,         EuroSign,         EuroSign ] };
    key <AE05> { [            5,     percent,         NoSymbol,         NoSymbol ] };
    key <AE06> { [            6, asciicircum,  dead_circumflex,  dead_circumflex ] };
    key <AE07> { [            7,   ampersand,        0x100204A,        0x100204A ] };
                                                // Tironian Et
    key <AE08> { [            8,    asterisk,   dead_abovering,   dead_abovering ] };
    key <AE09> { [            9,   parenleft,       dead_breve,       dead_breve ] };
    key <AE10> { [            0,  parenright,      dead_ogonek,      dead_ogonek ] };
    key <AE11> { [        minus,  underscore,      dead_macron,      dead_macron ] };
    key <AE12> { [        equal,        plus,         NoSymbol,         NoSymbol ] };

    //
    // QWERTYUIOP[]
    //
    key <AD01> { [            q,           Q,        NoSymbol,       NoSymbol ] };
    key <AD02> { [            w,           W,        NoSymbol,       NoSymbol ] };
    key <AD03> { [            e,           E,          eacute,         Eacute ] };
    key <AD04> { [            r,           R,       0x100027C,      0x100027C ] };
                                                    // long r
    key <AD05> { [            t,           T,        NoSymbol,       NoSymbol ] };
    key <AD06> { [            y,           Y,        NoSymbol,       NoSymbol ] };
    key <AD07> { [            u,           U,          uacute,         Uacute ] };
    key <AD08> { [            i,           I,          iacute,         Iacute ] };
    key <AD09> { [            o,           O,          oacute,         Oacute ] };
    key <AD10> { [            p,           P,        NoSymbol,       NoSymbol ] };
    key <AD11> { [  bracketleft,   braceleft,       dead_hook,      dead_hook ] };
    key <AD12> { [ bracketright,  braceright,       dead_horn,      dead_horn ] };

    //
    // ASDFGHJKL;'#
    //
    key <AC01> { [          a,             A,          aacute,         Aacute ] };
    key <AC02> { [          s,             S,        NoSymbol,       NoSymbol ] };
    key <AC03> { [          d,             D,        NoSymbol,       NoSymbol ] };
    key <AC04> { [          f,             F,        NoSymbol,       NoSymbol ] };
    key <AC05> { [          g,             G,        NoSymbol,       NoSymbol ] };
    key <AC06> { [          h,             H,   dead_abovedot,  dead_abovedot ] };
    key <AC07> { [          j,             J,        NoSymbol,       NoSymbol ] };
    key <AC08> { [          k,             K,        NoSymbol,       NoSymbol ] };
    key <AC09> { [          l,             L,        NoSymbol,       NoSymbol ] };
    key <AC10> { [  semicolon,         colon,  dead_diaeresis, dead_diaeresis ] };
    key <AC11> { [ apostrophe,            at,      dead_acute,     dead_acute ] };
    key <BKSL> { [ numbersign,    asciitilde,      dead_tilde,     dead_tilde ] };

    //
    // \ZXCVBNM,./
    //
    key <LSGT> { [  backslash,           bar,      dead_grave,     dead_grave ] };
    key <AB01> { [          z,             Z,       0x100017F,      0x1001E9B ] };
                                                    // long s,     long s dot
    key <AB02> { [          x,             X,        NoSymbol,       NoSymbol ] };
    key <AB03> { [          c,             C,        NoSymbol,       NoSymbol ] };
    key <AB04> { [          v,             V,      dead_caron,     dead_caron ] };
    key <AB05> { [          b,             B,        NoSymbol,       NoSymbol ] };
    key <AB06> { [          n,             N,        NoSymbol,       NoSymbol ] };
    key <AB07> { [          m,             M,        NoSymbol,       NoSymbol ] };
    key <AB08> { [      comma,          less,    dead_cedilla,   dead_cedilla ] };
    key <AB09> { [     period,       greater,   dead_abovedot,  dead_abovedot ] };
    key <AB10> { [      slash,      question,   dead_belowdot,  dead_belowdot ] };

    key <SPCE> { [      space,         space,           space,   nobreakspace ] };

    include "level3(ralt_switch)"

    include "compose(rwin)"
};

//
// Ogham keyboard map for XFree86
//
// Seamus O Ciardhuain <seoc@cnds.ucd.ie> (17 December 2002)
//
// Ogham keyboard layout as recommended in I.S. 434:1999.
// Suitable for multi-layout xkbcomp.
// Character names are given as in the Unicode standard,
// range U+1680 to U+169F.

partial alphanumeric_keys
xkb_symbols "ogam" {

    name[Group1] = "Ogham";

    key.type[Group1] = "ONE_LEVEL";

    key <LSGT> { type[Group1]="TWO_LEVEL",
                 [ 0x100169B, 0x100169C ] };
                 // OGHAM FEATHER MARK, OGHAM REVERSED FEATHER MARK

    key <BKSL> { [ 0x1001680 ] }; // OGHAM SPACE MARK

    key <TLDE> { [ 0x100169C ] }; // OGHAM REVERSED FEATHER MARK

    key <SPCE> { [ space ] };

    //
    // Top Row QWERTYUIOP
    //
    key <AD01> { [ 0x100168A ] };  // OGHAM LETTER CEIRT
    key <AD02> { [ 0x1001695 ] };  // OGHAM LETTER EABHADH
    key <AD03> { [ 0x1001693 ] };  // OGHAM LETTER EADHADH
    key <AD04> { [ 0x100168F ] };  // OGHAM LETTER RUIS
    key <AD05> { [ 0x1001688 ] };  // OGHAM LETTER TINNE
    key <AD06> { [ 0x1001698 ] };  // OGHAM LETTER IFIN
    key <AD07> { [ 0x1001692 ] };  // OGHAM LETTER UR
    key <AD08> { [ 0x1001694 ] };  // OGHAM LETTER IODHADH
    key <AD09> { [ 0x1001691 ] };  // OGHAM LETTER ONN
    key <AD10> { [ 0x100169A ] };  // OGHAM LETTER PEITH

    //
    // Middle Row ASDFGHJKL
    //
    key <AC01> { [ 0x1001690 ] };  // OGHAM LETTER AILM
    key <AC02> { [ 0x1001684 ] };  // OGHAM LETTER SAIL
    key <AC03> { [ 0x1001687 ] };  // OGHAM LETTER DAIR
    key <AC04> { [ 0x1001683 ] };  // OGHAM LETTER FEARN
    key <AC05> { [ 0x100168C ] };  // OGHAM LETTER GORT
    key <AC06> { [ 0x1001686 ] };  // OGHAM LETTER UATH
    key <AC07> { [ 0x1001697 ] };  // OGHAM LETTER UILLEANN
    key <AC08> { [ 0x1001696 ] };  // OGHAM LETTER OR
    key <AC09> { [ 0x1001682 ] };  // OGHAM LETTER LUIS

    //
    // Bottom Row ZXCVBNM
    //
    key <AB01> { [ 0x100168E ] };  // OGHAM LETTER STRAIF
    key <AB02> { [ 0x1001699 ] };  // OGHAM LETTER EAMHANCHOLL
    key <AB03> { [ 0x1001689 ] };  // OGHAM LETTER COLL
    key <AB04> { [ 0x100168D ] };  // OGHAM LETTER NGEADAL
    key <AB05> { [ 0x1001681 ] };  // OGHAM LETTER BEITH
    key <AB06> { [ 0x1001685 ] };  // OGHAM LETTER NION
    key <AB07> { [ 0x100168B ] };  // OGHAM LETTER MUIN

    // As an extension because <BKSL> and <LSGT> may not be
    // available or sensible. These are also a bit more
    // intuitive on a standard Irish keyboard.
    key <AB08> { [ 0x100169C ] }; // OGHAM REVERSED FEATHER MARK
    key <AB09> { [ 0x100169B ] }; // OGHAM FEATHER MARK
    key <AB10> { [ 0x1001680 ] }; // OGHAM SPACE MARK

    include "compose(rwin)"
};

partial alphanumeric_keys
xkb_symbols "ogam_is434" {

    // This has the full layout of IS434 with an Irish QWERTY keyboard,
    // and the Ogham characters accessed when CAPS LOCK is on.

    name[Group1] = "Ogham (IS434)";

    key.type[Group1] = "THREE_LEVEL";

    key <LSGT> { type[Group1] = "FOUR_LEVEL_ALPHABETIC",
                 [ backslash, bar, 0x100169B, 0x100169C ] };
                 // OGHAM FEATHER MARK, OGHAM REVERSED FEATHER MARK

    key <BKSL> { [ numbersign, asciitilde, 0x1001680 ] }; // OGHAM SPACE MARK
    key <TLDE> { [      grave,    notsign, 0x100169C ] }; // OGHAM REVERSED FEATHER MARK
    key <SPCE> { [      space,      space,     space ] };

    //
    // Numeric row
    //
    key <AE01> { type[Group1]="TWO_LEVEL", [     1,      exclam            ] };
    key <AE02> { type[Group1]="TWO_LEVEL", [     2,    quotedbl            ] };
    key <AE03> { type[Group1]="TWO_LEVEL", [     3,    sterling            ] };
    key <AE04> {                           [     4,      dollar,  EuroSign ] };
    key <AE05> { type[Group1]="TWO_LEVEL", [     5,     percent            ] };
    key <AE06> { type[Group1]="TWO_LEVEL", [     6, asciicircum            ] };
    key <AE07> {                           [     7,   ampersand, 0x100204A ] }; // Tironian Et
    key <AE08> { type[Group1]="TWO_LEVEL", [     8,    asterisk            ] };
    key <AE09> { type[Group1]="TWO_LEVEL", [     9,   parenleft            ] };
    key <AE10> { type[Group1]="TWO_LEVEL", [     0,  parenright            ] };
    key <AE11> { type[Group1]="TWO_LEVEL", [ minus,  underscore            ] };
    key <AE12> { type[Group1]="TWO_LEVEL", [ equal,        plus            ] };

    //
    // Top Row QWERTYUIOP
    //
    key <AD01> { [ q, Q, 0x100168A ] };  // OGHAM LETTER CEIRT
    key <AD02> { [ w, W, 0x1001695 ] };  // OGHAM LETTER EABHADH
    key <AD03> { [ e, E, 0x1001693 ] };  // OGHAM LETTER EADHADH
    key <AD04> { [ r, R, 0x100168F ] };  // OGHAM LETTER RUIS
    key <AD05> { [ t, T, 0x1001688 ] };  // OGHAM LETTER TINNE
    key <AD06> { [ y, Y, 0x1001698 ] };  // OGHAM LETTER IFIN
    key <AD07> { [ u, U, 0x1001692 ] };  // OGHAM LETTER UR
    key <AD08> { [ i, I, 0x1001694 ] };  // OGHAM LETTER IODHADH
    key <AD09> { [ o, O, 0x1001691 ] };  // OGHAM LETTER ONN
    key <AD10> { [ p, P, 0x100169A ] };  // OGHAM LETTER PEITH

    //
    // Middle Row ASDFGHJKL
    //
    key <AC01> { [ a, A, 0x1001690 ] };  // OGHAM LETTER AILM
    key <AC02> { [ s, S, 0x1001684 ] };  // OGHAM LETTER SAIL
    key <AC03> { [ d, D, 0x1001687 ] };  // OGHAM LETTER DAIR
    key <AC04> { [ f, F, 0x1001683 ] };  // OGHAM LETTER FEARN
    key <AC05> { [ g, G, 0x100168C ] };  // OGHAM LETTER GORT
    key <AC06> { [ h, H, 0x1001686 ] };  // OGHAM LETTER UATH
    key <AC07> { [ j, J, 0x1001697 ] };  // OGHAM LETTER UILLEANN
    key <AC08> { [ k, K, 0x1001696 ] };  // OGHAM LETTER OR
    key <AC09> { [ l, L, 0x1001682 ] };  // OGHAM LETTER LUIS

    //
    // Bottom Row ZXCVBNM
    //
    key <AB01> { [ z, Z, 0x100168E ] };  // OGHAM LETTER STRAIF
    key <AB02> { [ x, X, 0x1001699 ] };  // OGHAM LETTER EAMHANCHOLL
    key <AB03> { [ c, C, 0x1001689 ] };  // OGHAM LETTER COLL
    key <AB04> { [ v, V, 0x100168D ] };  // OGHAM LETTER NGEADAL
    key <AB05> { [ b, B, 0x1001681 ] };  // OGHAM LETTER BEITH
    key <AB06> { [ n, N, 0x1001685 ] };  // OGHAM LETTER NION
    key <AB07> { [ m, M, 0x100168B ] };  // OGHAM LETTER MUIN

    // As an extension because <BKSL> and <LSGT> may not be
    // available or sensible. These are also a bit more
    // intuitive on a standard Irish keyboard.
    key <AB08> { [  comma,     less, 0x100169C ] }; // OGHAM REVERSED FEATHER MARK
    key <AB09> { [ period,  greater, 0x100169B ] }; // OGHAM FEATHER MARK
    key <AB10> { [  slash, question, 0x1001680 ] }; // OGHAM SPACE MARK

    // The standard says the Ogham characters should be accessed when
    // Caps Lock is down; not clear if this means it should lock but
    // seems logical.

    key <CAPS>  { type[Group1] = "ONE_LEVEL", [ ISO_Level3_Lock ] };

    // Also allow access to Ogham characters using RALT for convenience
    include "level3(ralt_switch)"

    // Redefine Scroll Lock as locking shift in case that's needed.
    // Also overcomes annoying use of Scroll Lock LED inherited from
    // US symbols but not relevant here since we're not changing group.
    key <SCLK> {type[Group1] = "ONE_LEVEL", [ Shift_Lock ] };
    modifier_map Shift { Shift_Lock };

    include "compose(rwin)"
};
                                                                                                                                                                                                           // Iraque keyboard layout,

// 3-Level layout

default  partial alphanumeric_keys
xkb_symbols "basic" {
    include "ara(basic)"
    name[Group1]= "Iraqi";
};

partial alphanumeric_keys
xkb_symbols "ku" {
    include "tr(ku)"
    name[Group1]= "Kurdish (Iraq, Latin Q)";
};

partial alphanumeric_keys
xkb_symbols "ku_f" {
    include "tr(ku_f)"
    name[Group1]= "Kurdish (Iraq, F)";
};

partial alphanumeric_keys
xkb_symbols "ku_alt" {
    include "tr(ku_alt)"
    name[Group1]= "Kurdish (Iraq, Latin Alt-Q)";
};

partial alphanumeric_keys
xkb_symbols "ku_ara" {
    include "ir(ku_ara)"
    name[Group1]= "Kurdish (Iraq, Arabic-Latin)";
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              // Kirghiz (aka Kyrgyz) Standard Keyboard
//
// Standard	 -	Phonetic
// ______________- ________________
// ё1234567890өң     ё1234567890яю
// Ё!"№;%:?*()ӨҢ     Ё!"№;%:?-()ЯЮ
//
// йцукенгшщзхъү     өүертыуиопчшъ
// фывапролджэ       асдфгңйклэь
// ячсмитьбю.(,)     зхжвбнмцщ.(,)

// Authors:
// Timur Jamakeev <ztimur [at] gmail.com>
// Ilyas Bakirov <just_ilyas [at] yahoo.com>
// Yury Fedorov <yury-fedorov [at] prime-task.com>
// Emil Asanov <a7 [at] on.kg>
// Ulan Melisbek <ulan.melisbek [at] gmail.com>


// Kyrgyz standard keyboard
default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]= "Kyrgyz";

    key	<AE01> {	[		1,	    exclam 	]	};
    key	<AE02> {	[		2,        quotedbl	]	};
    key	<AE03> {	[		3,      numerosign	]	};
    key	<AE04> {	[		4,       semicolon	]	};
    key	<AE05> {	[		5,	   percent	]	};
    key	<AE06> {	[		6,	     colon	]	};
    key	<AE07> {	[		7,	  question	]	};
    key	<AE08> {	[		8,	  asterisk	]	};
    key	<AE09> {	[		9,	 parenleft	]	};
    key	<AE10> {	[		0,	parenright	]	};
    key	<AE11> {	[    Cyrillic_o_bar,  		Cyrillic_O_bar		]	};
    key	<AE12> {	[    Cyrillic_en_descender,   	Cyrillic_EN_descender	]	};
    key	<BKSL> {	[    Cyrillic_u_straight,  	Cyrillic_U_straight	]	};
    key	<AB10> {	[	   period,	     comma	]	};
    key <LSGT> {        [           slash,             bar      ]       };

    key	<TLDE> {	[     Cyrillic_io,     Cyrillic_IO	]	};
    key	<AD01> {	[ Cyrillic_shorti, Cyrillic_SHORTI	]	};
    key	<AD02> {	[    Cyrillic_tse,    Cyrillic_TSE	]	};
    key	<AD03> {	[      Cyrillic_u,	Cyrillic_U	]	};
    key	<AD04> {	[     Cyrillic_ka,     Cyrillic_KA	]	};
    key	<AD05> {	[     Cyrillic_ie,     Cyrillic_IE	]	};
    key	<AD06> {	[     Cyrillic_en,     Cyrillic_EN	]	};
    key	<AD07> {	[    Cyrillic_ghe,    Cyrillic_GHE	]	};
    key	<AD08> {	[    Cyrillic_sha,    Cyrillic_SHA	]	};
    key	<AD09> {	[  Cyrillic_shcha,  Cyrillic_SHCHA	]	};
    key	<AD10> {	[     Cyrillic_ze,     Cyrillic_ZE	]	};
    key	<AD11> {	[     Cyrillic_ha,     Cyrillic_HA	]	};
    key	<AD12> {	[	Cyrillic_hardsign,	Cyrillic_HARDSIGN	]	};
    key	<AC01> {	[     Cyrillic_ef,     Cyrillic_EF	]	};
    key	<AC02> {	[   Cyrillic_yeru,   Cyrillic_YERU	]	};
    key	<AC03> {	[     Cyrillic_ve,     Cyrillic_VE	]	};
    key	<AC04> {	[      Cyrillic_a,	Cyrillic_A	]	};
    key	<AC05> {	[     Cyrillic_pe,     Cyrillic_PE	]	};
    key	<AC06> {	[     Cyrillic_er,     Cyrillic_ER	]	};
    key	<AC07> {	[      Cyrillic_o,	Cyrillic_O	]	};
    key	<AC08> {	[     Cyrillic_el,     Cyrillic_EL	]	};
    key	<AC09> {	[     Cyrillic_de,     Cyrillic_DE	]	};
    key	<AC10> {	[    Cyrillic_zhe,    Cyrillic_ZHE	]	};
    key	<AC11> {	[      Cyrillic_e,	Cyrillic_E	]	};
    key	<AB01> {	[     Cyrillic_ya,     Cyrillic_YA	]	};
    key	<AB02> {	[    Cyrillic_che,    Cyrillic_CHE	]	};
    key	<AB03> {	[     Cyrillic_es,     Cyrillic_ES	]	};
    key	<AB04> {	[     Cyrillic_em,     Cyrillic_EM	]	};
    key	<AB05> {	[      Cyrillic_i,	Cyrillic_I	]	};
    key	<AB06> {	[     Cyrillic_te,     Cyrillic_TE	]	};
    key	<AB07> {	[ 	Cyrillic_softsign,	Cyrillic_SOFTSIGN	]	};
    key	<AB08> {	[     Cyrillic_be,     Cyrillic_BE	]	};
    key	<AB09> {	[     Cyrillic_yu,     Cyrillic_YU	]	};
};

// Kyrgyz phonetic layout
partial alphanumeric_keys
xkb_symbols "phonetic" {

    name[Group1]="Kyrgyz (phonetic)";

    key	<AE01> {	[		1,	    	exclam 			]	};
    key	<AE02> {	[		2,        	quotedbl		]	};
    key	<AE03> {	[		3,      	numerosign		]	};
    key	<AE04> {	[		4,     	 	semicolon		]	};
    key	<AE05> {	[		5,    	   	percent			]	};
    key	<AE06> {	[		6, 	     	colon			]	};
    key	<AE07> {	[		7,	  	question		]	};
    key	<AE08> {	[		8,           	minus			]	};
    key	<AE09> {	[		9,	 	parenleft		]	};
    key	<AE10> {	[		0,		parenright		]	};
    key	<AE11> {	[    	Cyrillic_ya,     	Cyrillic_YA		]	};
    key	<AE12> {	[    	Cyrillic_yu,     	Cyrillic_YU		]	};

    key	<AD11> {	[    	Cyrillic_che,		Cyrillic_CHE		]	};
    key	<AD12> {	[    	Cyrillic_sha,    	Cyrillic_SHA		]	};
    key	<BKSL> {	[	Cyrillic_hardsign, 	Cyrillic_HARDSIGN	]	};
    key	<AB09> {	[    	Cyrillic_shcha,    	Cyrillic_SHCHA		]	};
    key	<AB10> {	[      	period, 		comma			]	};
    key	<AB08> {	[	Cyrillic_tse, 		Cyrillic_TSE		]	};
    key	<AC10> {	[	Cyrillic_e,        	Cyrillic_E		]	};
    key	<AC11> {	[	Cyrillic_softsign, 	Cyrillic_SOFTSIGN	]	};
    key	<TLDE> {	[     	Cyrillic_io,     	Cyrillic_IO		]	};

    key	<LatQ> {	[     	Cyrillic_o_bar,  	Cyrillic_O_bar		]	};
    key	<LatZ> {	[     	Cyrillic_ze,     	Cyrillic_ZE		]	};
    key	<LatS> {	[     	Cyrillic_es,     	Cyrillic_ES		]	};
    key	<LatA> {	[     	Cyrillic_a,		Cyrillic_A		]	};
    key	<LatW> {	[     	Cyrillic_u_straight,  	Cyrillic_U_straight	]	};
    key	<LatC> {	[     	Cyrillic_zhe,    	Cyrillic_ZHE		]	};
    key	<LatX> {	[	Cyrillic_ha,     	Cyrillic_HA 		]	};
    key	<LatD> {	[     	Cyrillic_de,		Cyrillic_DE		]	};
    key	<LatE> {	[     	Cyrillic_ie,     	Cyrillic_IE		]	};
    key	<LatV> {	[     	Cyrillic_ve,     	Cyrillic_VE		]	};
    key	<LatF> {	[     	Cyrillic_ef,     	Cyrillic_EF		]	};
    key	<LatT> {	[     	Cyrillic_te,     	Cyrillic_TE		]	};
    key	<LatR> {	[     	Cyrillic_er,     	Cyrillic_ER		]	};
    key	<LatN> {	[     	Cyrillic_en,     	Cyrillic_EN		]	};
    key	<LatB> {	[     	Cyrillic_be,     	Cyrillic_BE		]	};
    key	<LatH> {	[     	Cyrillic_en_descender,  Cyrillic_EN_descender	]	};
    key	<LatG> {	[    	Cyrillic_ghe,    	Cyrillic_GHE		]	};
    key	<LatY> {	[   	Cyrillic_yeru,   	Cyrillic_YERU		]	};
    key	<LatM> {	[     	Cyrillic_em,     	Cyrillic_EM		]	};
    key	<LatJ> {	[ 	Cyrillic_shorti, 	Cyrillic_SHORTI		]	};
    key	<LatU> {	[      	Cyrillic_u,		Cyrillic_U		]	};
    key	<LatK> {	[     	Cyrillic_ka,     	Cyrillic_KA		]	};
    key	<LatI> {	[      	Cyrillic_i,		Cyrillic_I		]	};
    key	<LatO> {	[      	Cyrillic_o,		Cyrillic_O		]	};
    key	<LatL> {	[     	Cyrillic_el,     	Cyrillic_EL		]	};
    key	<LatP> {	[     	Cyrillic_pe,     	Cyrillic_PE		]	};

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // based on a keyboard map from an 'xkb/symbols/il' file

// This is an implemetation of the Israeli standard SI-1452 (2013)
// It does not implement changes to the English layout, as that part
// of the standard is not normative nor really useful in the context
// of xkb.
// This implementation extends the standard with Yiddish digraphs
// (a common extension) and Nun Hafukha (a fun character).

default  partial alphanumeric_keys
xkb_symbols "basic" {
    // uses the kbd layout in use in Israel.

    name[Group1]= "Hebrew";
    key.type[Group1] = "FOUR_LEVEL_SEMIALPHABETIC";

    key <AB01> { [ hebrew_zain,	Z		]       };
    key <AB02> { [ hebrew_samech, X,	U05B6	]       };  // Segol
    key <AB03> { [ hebrew_bet,	C,	U05B1	]       };  // Hataf Segol
    key <AB04> { [ hebrew_he,	V		]       };
    key <AB05> { [ hebrew_nun,	B,	NoSymbol,	U05C6	]}; // Nun Hafukha
    key <AB06> { [ hebrew_mem,	N		]	};
    key <AB07> { [ hebrew_zade,	M,	U05B5	]	};  // Tsere
    key <AB08> { [ hebrew_taw,	greater,	rightsinglequotemark	]}; // greater Mirrored
    key <AB09> { [ hebrew_finalzade,	less,	singlelowquotemark	]}; // less Mirrored

    key <AC01> { [ hebrew_shin,	A,	U05B0	]	};  // Shva
    key <AC02> { [ hebrew_dalet,S,	U05BC	]       };  // Dagesh
    key <AC03> { [ hebrew_gimel,D		]       };
    key <AC04> { [ hebrew_kaph,	F		]	};
    key <AC05> { [ hebrew_ayin,	G,	U05F1	]       };  // Yiddish Vav Yod
    key <AC06> { [ hebrew_yod,	H,	U05F2	]       };  // Yiddish Double Yod
    key <AC07> { [ hebrew_chet,	J,	U05B4	]	};  // Hiriq
    key <AC08> { [ hebrew_lamed, K		]	};
    key <AC09> { [ hebrew_finalkaph,	L,	rightdoublequotemark	]};
    key <AC10> { [ hebrew_finalpe,	colon,	doublelowquotemark	]};

    key <AD01> { [ slash,	Q,	U05C2	]	};  // Sin Dot
    key <AD02> { [ apostrophe,	W,	U05C1	]	};  // Shin Dot
    key <AD03> { [ hebrew_qoph,	E,	U05B8	]	};  // Qamats
    key <AD04> { [ hebrew_resh,	R,	U05B3	]	};  // Hataf Qamats
    key <AD05> { [ hebrew_aleph,T		]       };
    key <AD06> { [ hebrew_tet,	Y,	U05F0	]       };  // Yiddish Double Vav
    key <AD07> { [ hebrew_waw,	U,	U05B9	]       };  // Holam
    key <AD08> { [ hebrew_finalnun,	I	]       };
    key <AD09> { [ hebrew_finalmem,	O	]       };
    key <AD10> { [ hebrew_pe,	P,	U05B7	]	};  // Patah

    key.type[Group1] = "FOUR_LEVEL";

    // Non-alphanumeric keys
    key <AB10> { [ period,	question,  division	]};
    key <AC11> { [ comma,	quotedbl,	U05F4]	};  // Gershayim
    key <AD11> { [ bracketright, braceright, U05B2	]}; // Mirrored; Hataf Patah
    key <AD12> { [ bracketleft,  braceleft,  U05BF	]}; // Mirrored; Rafe
    key <BKSL> { [ backslash,    bar,  U05BB	]	};  // Qubuts

    // Top (digits) row
    key <TLDE> { [ semicolon,	asciitilde,	U05F3	]}; // Geresh
    key <AE01> { [     1,	exclam	]		};
    key <AE02> { [     2,	at	]		};
    key <AE03> { [     3, 	numbersign,	EuroSign	]};
    key <AE04> { [     4, 	dollar,		NewSheqelSign	]};
    key <AE05> { [     5,	percent,	degree	]};
    key <AE06> { [     6, 	asciicircum,	U05AB	]}; // Hebrew Accent Ole
    key <AE07> { [     7,	ampersand,	U05BD	]}; // Meteg
    key <AE08> { [     8,	asterisk,	multiply]};
    key <AE09> { [     9,	parenright,	U200E	]}; // LRM; Paren Mirrored
    key <AE10> { [     0,	parenleft,	U200F	]}; // RLM; Paren Mirrored
    key <AE11> { [ minus,	underscore,	U05BE	]}; // Maqaf
    key <AE12> { [ equal, 	plus,		endash	]};

    include "level3(ralt_switch)"
};


// nikud patter based on Dekel Tsur's Hebrew mapping for LyX
partial alphanumeric_keys
xkb_symbols "lyx" {
    name[Group1]= "Hebrew (lyx)";

    key <TLDE> { [ semicolon,	asciitilde	]	};
    // On some key (e.g. AD01, right below) there is not yet mapping for the
    // second shift level. Since I could not figure a simple way to map this
    // to "emit nothing", it is currently mapped to the same letter of the
    // first shift level (avoiding mapping may risk it be used by a character
    // from a different group).
    key <AD01> { [ slash,	slash		]       };
    key <AD02> { [ apostrophe,	apostrophe	]       };
    key <AD03> { [ hebrew_qoph,	0x10005b8	]	}; // Qamats
    key <AD04> { [ hebrew_resh,	0x10005bc	]       }; // Dagesh/Shuruq
    key <AD05> { [ hebrew_aleph,	0x100200e	]       }; // LRM
    key <AD06> { [ hebrew_tet,	0x100200f	]       }; // RLM
    key <AD07> { [ hebrew_waw,	0x10005b9	]       }; // Holam
    key <AD08> { [ hebrew_finalnun,hebrew_finalnun]      };
    key <AD09> { [ hebrew_finalmem,hebrew_finalmem]      };
    key <AD10> { [ hebrew_pe,	0x10005b7	]	}; // Patah

    key <AC01> { [ hebrew_shin,	0x10005b0	]	}; // Sheva
    key <AC02> { [ hebrew_dalet,	0x10005bc	]       }; // Dagesh/Shuruq
    key <AC03> { [ hebrew_gimel,	hebrew_gimel	]       };
    key <AC04> { [ hebrew_kaph,	hebrew_kaph	]	};
    key <AC05> { [ hebrew_ayin,	0x10005c2	]       }; // Sin dot
    key <AC06> { [ hebrew_yod,	0x10005c1	]       }; // Shin dot
    key <AC07> { [ hebrew_chet,	0x10005b4	]	}; // Hiriq
    key <AC08> { [ hebrew_lamed, 0x10020aa	]	}; // NIS
    key <AC09> { [ hebrew_finalkaph,hebrew_finalkaph]    };
    key <AC10> { [ hebrew_finalpe,	colon	]       };
    key <AC11> { [ comma,	quotedbl	]	};

    key <AB01> { [ hebrew_zain,	hebrew_zain	]       };
    key <AB02> { [ hebrew_samech,0x10005b6	]       }; // Segol
    key <AB03> { [ hebrew_bet,	0x10005bb	]       }; // Qubuts
    key <AB04> { [ hebrew_he,	0x10005b1	]       }; // H. Segol
    key <AB05> { [ hebrew_nun,	0x10005b2	]	}; // H. Patah
    key <AB06> { [ hebrew_mem,	0x10005b3	]       }; // H.  Qamats
    key <AB07> { [ hebrew_zade,	0x10005b5	]	}; // Tsere
    key <AB08> { [ hebrew_taw,	greater		]	};
    key <AB09> { [ hebrew_finalzade,	less	]	};
    key <AB10> { [ period,	question	]	};

    // Note the parens mirroring below:
    key <AD11> { [ bracketright,	braceright	]       };
    key <AD12> { [ bracketleft,	braceleft	]       };
    key <AE01> { [ 1, exclam      ]};
    key <AE02> { [ 2, at          ]};
    key <AE03> { [ 3, numbersign  ]};
    key <AE04> { [ 4, dollar      ]};
    key <AE05> { [ 5, percent     ]};
    key <AE06> { [ 6, asciicircum ]};
    key <AE07> { [ 7, ampersand   ]};
    key <AE08> { [ 8, asterisk    ]};
    key <AE09> { [ 9, parenright  ]};
    key <AE10> { [ 0, parenleft	  ]};

    key <AE11> { [ minus     ,	0x10005be	]	}; // H. Hiphen
    key <AE12> { [ equal     ,	plus		]	};
};


partial alphanumeric_keys
xkb_symbols "phonetic" {

    // uses the phonetic layout from old Slackware 'il.map' file

    name[Group1]= "Hebrew (phonetic)";

    key <AE12> {        [     equal,    plus, hebrew_doublelowline, hebrew_doublelowline ]};

    key <LatQ> {	[ hebrew_qoph, hebrew_qoph	]	};
    key <LatW> {	[ hebrew_waw, hebrew_waw	]	};
    key <LatE> {	[ hebrew_aleph, hebrew_aleph	]       };
    key <LatR> {	[ hebrew_resh, hebrew_resh	]	};
    key <LatT> {	[ hebrew_taw, hebrew_tet	]       };
    key <LatY> {	[ hebrew_ayin, hebrew_ayin	]       };
    key <LatU> {	[ hebrew_waw, hebrew_waw	]       };
    key <LatI> {	[ hebrew_yod, hebrew_yod	]       };
    key <LatO> {	[ hebrew_samech, hebrew_samech	]       };
    key <LatP> {	[ hebrew_pe, hebrew_finalpe	]	};

    key <LatA> {	[ hebrew_aleph, hebrew_aleph	]	};
    key <LatS> {	[ hebrew_shin, hebrew_shin	]       };
    key <LatD> {	[ hebrew_dalet, hebrew_dalet	]       };
    key <LatF> {	[ hebrew_pe, hebrew_finalpe	]	};
    key <LatG> {	[ hebrew_gimel, hebrew_gimel	]       };
    key <LatH> {	[ hebrew_he, hebrew_he		]       };
    key <LatJ> {	[ hebrew_yod, hebrew_yod	]	};
    key <LatK> {	[ hebrew_kaph, hebrew_finalkaph	]	};
    key <LatL> {	[ hebrew_lamed, hebrew_lamed	]       };

    key <LatZ> {	[ hebrew_zain, hebrew_zain	]       };
    key <LatX> {	[ hebrew_chet, hebrew_chet	]       };
    key <LatC> {	[ hebrew_zade, hebrew_finalzade	]       };
    key <LatV> {	[ hebrew_waw, hebrew_waw	]       };
    key <LatB> {	[ hebrew_bet, hebrew_bet	]       };
    key <LatN> {	[ hebrew_nun, hebrew_finalnun	]	};
    key <LatM> {	[ hebrew_mem, hebrew_finalmem	]	};
};

// The 'Biblical Hebrew' keyboard layout as defined by Tiro for use with the
// 'SBL Hebrew' font was added 2006.11.13 by Sebastian J. Bronner
// <waschtl@sbronner.com>.  Its primary features (as compared to the lyx layout)
// are that the consonants are in the Israeli standard positions, that a great
// multitude of glyphs can be input directly from the keyboard, and that it is
// the closest thing to a standard layout a theologian can hope for.
// Documentation (including printable keyboard tables), SBL Hebrew font, and
// keyboard layout for Windows are available at
// http://www.sbl-site.org/Resources/Resources_BiblicalFonts.aspx.
//
// It is of interest that the 'basic' layout defined first in this file (as
// ships with x.org disagrees in the non-consonant characters that the Tiro-
// layout claims to be the Israeli standard.  Tiros apparent diligence in the
// PDF-documentation accompanying the keyboard-layout-files lead me to put
// greater stock in their claim than in this file.  Therefore, the 'biblical'
// layout below does not include 'il(basic)' but redoes the _whole_ thing from
// scratch.

partial alphanumeric_keys
xkb_symbols "biblical" {
	name[Group1]= "Hebrew (Biblical, Tiro)";
	key.type = "FOUR_LEVEL_SEMIALPHABETIC";

	key <TLDE> { [ U05C3, U05AE, semicolon, asciitilde ] };
	key <AE01> { [ 1,     U05A9, VoidSymbol, exclam ] };
	key <AE02> { [ 2,     U0599, VoidSymbol, at ] };
	key <AE03> { [ 3,     U0592, VoidSymbol, numbersign ] };
	key <AE04> { [ 4,     U05AF, NewSheqelSign, dollar ] };
	key <AE05> { [ 5,     U05BA, U200D, percent ] };
	key <AE06> { [ 6,     U05B9, U200C, asciicircum ] };
	key <AE07> { [ 7,     U05BF, U034F, ampersand ] };
	key <AE08> { [ 8,     U05C2, U200E, asterisk ] };
	key <AE09> { [ 9,     U05C1, U200F, parenright ] };
	key <AE10> { [ 0,     U059D, U25CC, parenleft ] };
	key <AE11> { [ U05BE, U05A0, minus, underscore ] };
	key <AE12> { [ equal, U05BC, VoidSymbol, plus ] };

	key <AD01> { [ U0307, U05C4, U0308, slash ] };
	key <AD02> { [ U05F3, U05AC, U05F4, apostrophe ] };
	key <AD03> { [ hebrew_qoph, U05AB, U20AC ] };
	key <AD04> { [ hebrew_resh, U059F ] };
	key <AD05> { [ hebrew_aleph, U0593 ] };
	key <AD06> { [ hebrew_tet, U059E ] };
	key <AD07> { [ hebrew_waw, U059C, U05F0 ] };
	key <AD08> { [ hebrew_finalnun, U05A1 ] };
	key <AD09> { [ hebrew_finalmem, U0595 ] };
	key <AD10> { [ hebrew_pe, U0594 ] };
	key <AD11> { [ bracketright, U0597, VoidSymbol, braceright ] };
	key <AD12> { [ bracketleft, U0598, VoidSymbol, braceleft ] };
	key <BKSL> { [ U05C0, U05A8, backslash, bar ] };

	key <AC01> { [ hebrew_shin, U05BD ] };
	key <AC02> { [ hebrew_dalet, U05B0 ] };
	key <AC03> { [ hebrew_gimel, U05BB ] };
	key <AC04> { [ hebrew_kaph, U05B4 ] };
	key <AC05> { [ hebrew_ayin, U05B1 ] };
	key <AC06> { [ hebrew_yod, U05B6, U05F2 ] };
	key <AC07> { [ hebrew_chet, U05B5, U05F1 ] };
	key <AC08> { [ hebrew_lamed, U05B3 ] };
	key <AC09> { [ hebrew_finalkaph, U05B8, U05C7 ] };
	key <AC10> { [ hebrew_finalpe, U05B2, VoidSymbol, colon ] };
	key <AC11> { [ U059a, U05B7, comma, quotedbl ] };

	key <AB01> { [ hebrew_zain, U05C5 ] };
	key <AB02> { [ hebrew_samech, U05A4 ] };
	key <AB03> { [ hebrew_bet, U05AA, U05A2 ] };
	key <AB04> { [ hebrew_he, U05A6 ] };
	key <AB05> { [ hebrew_nun, U05A5, U05C6 ] };
	key <AB06> { [ hebrew_mem, U05A7 ] };
	key <AB07> { [ hebrew_zade, U059B ] };
	key <AB08> { [ hebrew_taw, U0591, VoidSymbol, greater ] };
	key <AB09> { [ hebrew_finalzade, U0596, VoidSymbol, less ] };
	key <AB10> { [ U05AD, U05A3, period, question ] };

	key <SPCE> { [ space, space, thinspace, nobreakspace ] };
};

// EXTRAS

// Biblical hebrew (SIL) US Standard layout version 1.5
// This map is based closely on v 1.5 of the standard. The only deviation being the replacement of the composite characters sin and shin 
// by their more recent Unicodev6 counterparts
// this map contains all the characters found in Biblical annotation, masoretic and Dead Sea Scroll related work.
// The layout corresponds phonetically to a US standard layout or similar (Qwerty).
// If you are using an actual Hebrew keyboard, you are probably better off using a Tiro compliant scholarly layout
// This linux port created and maintained by Dennis Meulensteen, dennis@meulensteen.nl
partial alphanumeric_keys
xkb_symbols "biblicalSIL" {
	name[Group1]= "Hebrew (Biblical, SIL phonetic)";
	key.type = "FOUR_LEVEL_SEMIALPHABETIC";

	key <TLDE> { [ U20AC,		U20AA,		U0024 ] }; 			//Euro, 		Shekel, 		Dollar		-
	key <AE01> { [ 1,		U0021,		U05BD,		U0597 ] };		//1,			exclamation	meteg		revia
	key <AE02> { [ 2,		U0598,		U05A2,		U05AE ] };	//2,			zarqa		atn. hafukh	zinor
	key <AE03> { [ 3,		U05A8,		U0596,		U0599 ] };		//3,			qadma		tipeha		pashta
	key <AE04> { [ 4,		U059C,		U05A5,		U05A0 ] };		//4,			geresh		merkha		tel. gedola
	key <AE05> { [ 5,		U059E,		U05A6,		U05A9 ] };		//5,			gershayim		mer. kefula	tel qetana
	key <AE06> { [ 6,		VoidSymbol,	U05AD,		U059F ] };		//6,			-			dehi			qar. para
	key <AE07> { [ 7,		U05AC,		U05A3,		U05A1 ] };		//7,			iluy			munah		pazer
	key <AE08> { [ 8,		U059D,		U059B,		U0595 ] };		//8,			g. muqdam	tevir			zaq. gadol
	key <AE09> { [ 9,		U0029,		U05A7,		U0593 ] };		//9,			parenth.R		darqa		shalshelet
	key <AE10> { [ 0,		U0028,		U05AA,		U05AF ] };		//0,			paren.L		yer. ben yomo	masora c.
	key <AE11> { [ U05BE,		U2013,		U2014,		U05BF ] };	//Maqaf, 		en dash		em dash		rafe
	key <AE12> { [ U05BC,		VoidSymbol,	U0591,		U25CC ] };	//Dagesh		-			etnahta		mark base

	key <AD01> { [ hebrew_qoph,	U0597 ] };							//Qof		revia			-			-
	key <AD02> { [ hebrew_waw] }; 								//waw		-			-			-
	key <AD03> { [ U05B6,		U05B5,		VoidSymbol,	U05B1 ] };	//segol		tsere			-			hat. segol
	key <AD04> { [ hebrew_resh ] };								//resh		-			-			-
	key <AD05> { [ hebrew_taw ] }; 								//taw		-			-			-
	key <AD06> { [ hebrew_yod,	U059F ] };							//jod		qar. para		-			-
	key <AD07> { [ U05BB] }; 									//quibuts		-			-			-
	key <AD08> { [ U05B4 ] };									//hiriq, 		-			-			-
	key <AD09> { [ U05B9,		U05BA,		U05C7, 		U05B3 ] };	//holam, 		holam(wav)	qam. qatan	hat. Qamats
	key <AD10> { [ hebrew_pe,	hebrew_finalpe,	VoidSymbol,	U034F ] };	//pe			final pe		-			c. grapheme joiner
	key <AD11> { [ bracketright,	braceright,	VoidSymbol,	U0594 ] };		//Bracket R	brace R		-			zaq. qatan
	key <AD12> { [ bracketleft,	braceleft, 	U059A,		U0592 ] };		//Brachket L	brace L		yetiv			segolta
	key <BKSL> { [ U05C0, 		U05C0, 		U05A4,		U05AB ] };//Paseq		Paseq		mahapakh		ole

	key <AC01> { [ U05B7,		U05B8,		U05C7,		U05B2 ] };  //patah		Qamats		Qam. Qatan	hat. patah
	key <AC02> { [ hebrew_samech,	U05E9 ] }; 					//Samech, 	shin no dot	-			-
	key <AC03> { [ hebrew_dalet ] }; 								//dalet		-			-			-
	key <AC04> { [ UFB2B,		hebrew_shin,	U05C2 ] }; 			//UCSv6 Sin	shin (nodot)	sindot		-
	key <AC05> { [ hebrew_gimel,	VoidSymbol,	U25E6,		U2022 ] };	//gimel		-			bullet(DSS)	bulletfill (DSS)
	key <AC06> { [ hebrew_he,	VoidSymbol,	U0336,		U030A ] };//he			-			strikeout(DSS)	Ring Above(DSS)
	key <AC07> { [ UFB2A,		hebrew_shin,	U05C1] };				//UCSv6 Shin	shin (nodot)	shindot		-
	key <AC08> { [ hebrew_kaph,	hebrew_finalkaph ] };					//kaph		Final kaph		-
	key <AC09> { [ hebrew_lamed,	VoidSymbol ] };						//lamed		-			-
	key <AC10> { [ U05B0,		U05F4,		semicolon,	U05C3 ] };		//sva		gers. p		semicolon		sof pasuq
	key <AC11> { [ U2019,		U201D, 		U0323,		U05C4 ] };//QuoteRight	double R Quote	punctum		punctum Above

	key <AB01> { [ hebrew_zain ] };								//Zayin		-			-			
	key <AB02> { [ hebrew_chet ] };								//chet		-			-
	key <AB03> { [ hebrew_zade, 	U05E5 ] };							// tzade, 		final tzade		-
	key <AB04> { [ hebrew_tet ] };									//tet			-			-
	key <AB05> { [ hebrew_bet ] };									//bet			-			-
	key <AB06> { [ hebrew_nun,	hebrew_finalnun ] }; 					//nun, 		final nun
	key <AB07> { [ hebrew_mem,	hebrew_finalmem, U200C,		U200D ] };	//mem, 		final mem		0.wid.non.join.	0.wid.joiner
	key <AB08> { [ U002C,		U05E2, 		U00AB,		U0307 ] }; //comma, 	ayin			guillemetsR	masora dot
	key <AB09> { [ U0002E,		U05D0, 		U00BB,		U0308 ] }; //period, 		alef			guillemetsL	thousands
	key <AB10> { [ slash,		question,	U05F3 ] };					//slash		question		geresh P

	key <SPCE> { [ space, 		space,		thinspace,	nobreakspace ] };//space		space			thin space,		nbsp
};
                                                                                                                                // This layout includes all Indian layouts, including:
//     - Devanagari (Hindi, Marathi, Sanskrit)
//     - Bangla
//     - Gujarati
//     - Kannada
//     - Malayalam
//     - Ol Chiki
//     - Oriya
//     - Tamil
//     - Telugu
//     - Urdu

// Links:
// - Indic INSCRIPT keyboard layout diagrams:
//     http://java.sun.com/products/jfc/tsc/articles/InputMethod/indiclayout.html
// - Bangla Baishakhi (Bangla layouts):
// - Bangla Baishakhi Inscript (Bangla layouts):
// - Bangla Bornona (Bangla layouts):
// - Uni Gitanjali (Bangla layouts):
//     http://nltr.org
// - Ekusheyr Shadhinota (Bangla layouts):
//     http://ekushey.org/projects/shadhinota/index.html
// - Microsoft Windows XP SP2: Indic Language Standards - an Introduction:
//     http://www.bhashaindia.com/MSProducts/XpSp2/Articles/IndicLanguageStandards.aspx
// - Ol Chiki:
//    http://www.unicode.org/L2/L2005/05243r-n2984-ol-chiki.pdf (fig. 9)

// based on a keyboard map from an 'xkb/symbols/dev' file

// Devangari is the default. Kill me if I am wrong:)
default  partial alphanumeric_keys
xkb_symbols "deva" {
	// March 2004 -- David Holl <smyrph+dev_xkb@ece.wpi.edu>
	name[Group1]="Indian";

	key.type="FOUR_LEVEL";

	key <TLDE> { [ U094a, U0912,   grave, asciitilde  ] };
	key <AE01> { [ U0967, U090d,       1, exclam      ] };
	key <AE02> { [ U0968, U0945,       2, at          ] };
	// Shift+AE0[3-8] really need to return a macro of keys defined by
	// INSCRIPT in place of the symbols that are here for now.  But this
	// requires XKB to map 1 key into two to three other key presses.
	key <AE03> { [ U0969, numbersign,  3, numbersign  ] };
	key <AE04> { [ U096a, dollar,      4		  ] };
	key <AE05> { [ U096b, percent,     5, percent     ] };
	key <AE06> { [ U096c, asciicircum, 6, asciicircum ] };
	key <AE07> { [ U096d, ampersand,   7, ampersand   ] };
	key <AE08> { [ U096e, asterisk,    8, asterisk    ] };
	key <AE09> { [ U096f, parenleft,   9, parenleft   ] };
	key <AE10> { [ U0966, parenright,  0, parenright  ] };
	key <AE11> { [ minus, U0903, minus, underscore    ] };
	key <AE12> { [ U0943, U090b, U0944, U0960 ] };

	key <AD01> { [ U094c, U0914 ] };
	key <AD02> { [ U0948, U0910 ] };
	key <AD03> { [ U093e, U0906 ] };
	key <AD04> { [ U0940, U0908, U0963, U0961 ] };
	key <AD05> { [ U0942, U090a ] };
	key <AD06> { [ U092c, U092d ] };
	key <AD07> { [ U0939, U0919 ] };
	key <AD08> { [ U0917, U0918, U095a ] };
	key <AD09> { [ U0926, U0927 ] };
	key <AD10> { [ U091c, U091d, U095b ] };
	key <AD11> { [ U0921, U0922, U095c, U095d ] };
	key <AD12> { [ U093c, U091e ] };
	// I added \ / ? | for shell-convenience (file names and piping)
	key <BKSL> { [ U0949, U0911, U005C, U007C ] };

	key <AC01> { [ U094b, U0913 ] };
	key <AC02> { [ U0947, U090f ] };
	key <AC03> { [ U094d, U0905 ] };
	key <AC04> { [ U093f, U0907, U0962, U090c ] };
	key <AC05> { [ U0941, U0909 ] };
	key <AC06> { [ U092a, U092b, NoSymbol, U095e ] };
	key <AC07> { [ U0930, U0931 ] };
	key <AC08> { [ U0915, U0916, U0958, U0959 ] };
	key <AC09> { [ U0924, U0925 ] };
	key <AC10> { [ U091a, U091b, U0952 ] };
	key <AC11> { [ U091f, U0920, NoSymbol, U0951 ] };

	key <AB01> { [ U0946, U090e, U0953 ] };
	key <AB02> { [ U0902, U0901, NoSymbol, U0950 ] };
	key <AB03> { [ U092e, U0923, U0954 ] };
	key <AB04> { [ U0928, U0929 ] };
	key <AB05> { [ U0935, U0934 ] };
	key <AB06> { [ U0932, U0933 ] };
	key <AB07> { [ U0938, U0936 ] };
	key <AB08> { [ comma, U0937, U0970 ] };
	key <AB09> { [ period, U0964, U0965, U093d ] };
	// I added \ / ? | for shell-convenience (file names and piping)
	key <AB10> { [ U092f, U095f, slash, question ] };

	// space, space, Zero-Width-Non-Joiner (ZWNJ), Zero-Width-Joiner (ZWJ):
	include "nbsp(zwnj3zwj4)"
        include "rupeesign(4)"
        include "level3(ralt_switch)"
};

//Name		:	Bolnagri (Combined)
//Description	:	A phonetic keyboard layout for Devnagari(Hindi)
//			http://www.indlinux.org/wiki/index.php/BolNagri
//NOTE		: 	This is a combined map of bolnagri_matras and bolnagri_vowels.
//Inspired by "devrom" keymap by Steve Smith for the windows tool "keyman"
//Original Author :	Noah Levitt<nlevitt at columbia.edu>
//Past Authors  : Pramod.R <pramodr at gmail.com> and Ravikant <ravikant at sarai.net>
//Current Main. : G Karunakar <karunakar@indlinux.org>

partial alphanumeric_keys
xkb_symbols "bolnagri" {
     name[Group1] = "Hindi (Bolnagri)";
     key.type="FOUR_LEVEL";

    // Roman digits
    key <TLDE>  { [   U0902,	U0901,		apostrophe, 	asciitilde ] }; // apostrophe: anusvara, candrabindu
    key <AE01>  { [   1,	exclam,		U0967,		exclam	   ] };
    key <AE02>  { [   2,	at,		U0968,		at	   ] };
    key <AE03>  { [   3,    	numbersign, 	U0969,		numbersign ] };
    key <AE04>  { [   4,	dollar,		U096A			    ] }; // Rupee symbol on AltGr+4
    key <AE05>  { [   5,	percent,	U096B,		percent    ] };
    key <AE06>  { [   6,	asciicircum,	U096C,		asciicircum ] };
    key <AE07>  { [   7,	ampersand,	U096D,		ampersand  ] };
    key <AE08>  { [   8,	asterisk,	U096E,		asterisk   ] };
    key <AE09>  { [   9,	parenleft,	U096F,		parenleft  ] };
    key <AE10>  { [   0,	parenright,	U0966,		parenright ] };
    key <AE11>	{ [   minus,	underscore	     ] };
    key <AE12>	{ [   equal,	plus		     ] };
    key <BKSL>  { [   U0964,	U0965,		U007C,		U005C   ] }; //pipe : danda, double danda

    //Q Row	
    key <AD01>   { [   U200C, 	U200D   ] };  // Q: ZWNJ, ZWJ
    key <AD02>   { [   U0935,  	U950	] };  // W: wa, OM
    key <AD03>   { [   U0947,   U0948,	U090F,	U0910   ] };  // E: e, ai matras
    key <AD04>   { [   U0930,	U0943,	U0931,  U090B  	] };  // R: ra, vocalic Ri
    key <AD05>   { [   U0924,   U0925   ] };  // T: ta, tha
    key <AD06>   { [   U092f,	U091E   ] };  // Y: ya, nya
    key <AD07>   { [   U0941,   U0942,	U0909,	U090A   ] };  // U: u, uu matras
    key <AD08>   { [   U093F,   U0940,	U0907,	U0908   ] };  // I: i, ii matras
    key <AD09>   { [   U094B,   U094C,	U0913,	U0914   ] };  // O: o, au matras
    key <AD10>   { [   U092A,   U092B   ] };  // P: pa, pha
    key <AD11>   { [   bracketleft,   braceleft   ] };
    key <AD12>	 { [   bracketright, braceright   ] };

    //A Row
    key <AC01>   { [   U093E,	 U0906,	U0905,	U0906  ] };   // A: aa, full A, AA
    key <AC02>   { [   U0938,    U0937   ] };  // S: sa, ssa
    key <AC03>   { [   U0926,    U0927   ] };  // D: da, dha
    key <AC04>   { [   U091F,    U0920   ] };  // F: TA, THA
    key <AC05>   { [   U0917,    U0918   ] };  // G: ga, gha
    key <AC06>   { [   U0939,    U0903   ] };  // H: ha, visarg 
    key <AC07>   { [   U091C,    U091D   ] };  // J: ja, jha
    key <AC08>   { [   U0915,    U0916   ] };  // K: ka, kha
    key <AC09>   { [   U0932,	 U0933,	U0962,   U090C   ] };  // L: la, vocalic L or lru matra
    key <AC10>   { [   semicolon, colon  ] };
    key <AC11>   { [apostrophe, quotedbl ] };

    //Z Row
    key <AB01>   { [   U0936,	 U0945, U0936, U090D 	 ] };  // Z: sha, akaar candra
    key <AB02>   { [   U094D,    U0949, U094D, U0911	 ] };  // X: halant, aakaar candra, chandra A
    key <AB03>   { [   U091A,    U091B   ] };  // C: ca, cha
    key <AB04>   { [   U0921,    U0922   ] };  // V: da, dha
    key <AB05>   { [   U092C,    U092D   ] };  // B: ba, bha
    key <AB06>   { [   U0928,    U0923   ] };  // N: na, nna
    key <AB07>   { [   U092E,    U0919,	U092E,	U093D   ] };  // M: ma, nga, avagraha
    key <AB08>   { [   comma,    U0970	 ] };// comma: comma, dev abbreviation sign
    key <AB09>   { [   period,   U093C 	 ] };  // period: period, nukta
    key <AB10>	 { [   slash,   question ] };

//    modifier_map Shift  { Shift_L };
//    modifier_map Lock   { Caps_Lock };
//    modifier_map Control{ Control_L };
//    modifier_map Mod3   { Mode_switch };

    include "level3(ralt_switch)"
    include "rupeesign(4)"
};

// based on a keyboard map from an 'xkb/symbols/ben' file

partial alphanumeric_keys
xkb_symbols "ben" {
    name[Group1]= "Bangla (India)";

      // Mainly numbers.
      key <AE01> { [      U09E7 		]	};
      key <AE02> { [      U09E8 		]	};
      key <AE03> { [      U09E9 		]	};
      key <AE04> { [      U09EA 		]	};
      key <AE05> { [      U09EB		]	};
      key <AE06> { [      U09EC 		]	};
      key <AE07> { [      U09ED	        ]	};
      key <AE08> { [      U09EE 		]	};
      key <AE09> { [      U09EF, parenleft	]	};
      key <AE10> { [      U09E6, parenright	]	};
      key <AE11> { [      minus, U0983 	]	};
      key <AE12> { [      U098B, U09C3	]	};

// Mainly long vowels

      key <AD01> { [      U09CC,  U0994	]	};
      key <AD02> { [      U09C8,  U0990	]	};
      key <AD03> { [      U09BE,  U0986	]	};
      key <AD04> { [      U09C0,  U0988	]	};
      key <AD05> { [      U09C2,  U098A	]	};

// Mainly voiced consonants

      key <AD06> { [      U09AC,  U09AD	]	};
      key <AD07> { [      U09B9,  U0999 ]	};
      key <AD08> { [      U0997,  U0998 ]	};
      key <AD09> { [      U09A6,  U09A7 ]	};
      key <AD10> { [      U099C,  U099D ]	};
      key <AD11> { [      U09A1, U09A2 	]	};
      key <AD12> { [      U09BC, U099E 	]	};

// Mainly short vowels
      key <AC01> { [      U09CB,  U0993 ]	};
      key <AC02> { [      U09C7,  U098F ]	};
      key <AC03> { [      U09CD,  U0985 ]	};
      key <AC04> { [      U09BF,  U0987 ]	};
      key <AC05> { [      U09C1,  U0989 ]	};


// Mainly unvoiced consonants

      key <AC06> { [      U09AA,  U09AB ]	};
      key <AC07> { [      U09B0,  U09DD ]	};
      key <AC08> { [      U0995,  U0996 ]	};
      key <AC09> { [      U09A4,  U09A5 ]	};
      key <AC10> { [      U099A,  U099B ]	};
      key <AC11> { [      U099F, U09A0 	]	};
      key <BKSL> { [      U005C, U007C 	]	};

      key <AB01> { [      z, Z  		]       };
      key <AB02> { [      U0982,  U0981 ]       };
      key <AB03> { [      U09AE,  U09A3 ]       };
      key <AB04> { [      U09A8,  U09A8 ]       };
      key <AB05> { [      U09AC,  U09AC ]       };
      key <AB06> { [      U09B2,  U09B2 ]       };
      key <AB07> { [      U09B8,  U09B6 ]       };
      key <AB08> { [      comma,      U09B7 ]       };
      key <AB09> { [      period,     U0964 ]       };
      key <AB10> { [      U09DF,  U09AF	]       };

    include "level3(ralt_switch)"
    include "rupeesign(4)"
};

xkb_symbols "ben_probhat" {
 name[Group1]= "Bangla (India, Probhat)";
   key <ESC>  { [ Escape ] };

// numbers
   key <TLDE> { [ U200D, asciitilde   ] };
   key <AE01> { [ U09E7, exclam       ] };
   key <AE02> { [ U09E8, at           ] };
   key <AE03> { [ U09E9, numbersign   ] };
   key <AE04> { [ U09EA, U09F3    ] };
   key <AE05> { [ U09EB, percent      ] };
   key <AE06> { [ U09EC, asciicircum  ] };
   key <AE07> { [ U09ED, U099E    ] };
   key <AE08> { [ U09EE, U09CE    ] };
   key <AE09> { [ U09EF, parenleft    ] };
   key <AE10> { [ U09E6, parenright   ] };
   key <AE11> { [ minus,     underscore   ] };
   key <AE12> { [ equal,     plus         ] };
   key <BKSP> { [ BackSpace               ] };

// tab, q to ] 
   key <TAB>  { [   Tab,  ISO_Left_Tab     ] };
   key <AD01> { [   U09A6,  U09A7  ] };
   key <AD02> { [   U09C2,  U098A  ] };
   key <AD03> { [   U09C0,  U0988  ] };
   key <AD04> { [   U09B0,  U09DC  ] };
   key <AD05> { [   U099F,  U09A0  ] };
   key <AD06> { [   U098F,  U0990  ] };
   key <AD07> { [   U09C1,  U0989  ] };
   key <AD08> { [   U09BF,  U0987  ] };
   key <AD09> { [   U0993,  U0994  ] };
   key <AD10> { [   U09AA,  U09AB  ] };
   key <AD11> { [   U09C7,  U09C8  ] };
   key <AD12> { [   U09CB,  U09CC  ] };
   key <RTRN> { [   Return                 ] };

// caps, a to ' 
//   key <CAPS> { [   Caps_Lock              ] };
   key <AC01> { [   U09BE,  U0985  ] };
   key <AC02> { [   U09B8,  U09B7  ] };
   key <AC03> { [   U09A1,  U09A2  ] };
   key <AC04> { [   U09A4,  U09A5  ] };
   key <AC05> { [   U0997,  U0998  ] };
   key <AC06> { [   U09B9,  U0983  ] };
   key <AC07> { [   U099C,  U099D  ] };
   key <AC08> { [   U0995,  U0996  ] };
   key <AC09> { [   U09B2,  U0982  ] };
   key <AC10> { [   semicolon,  colon      ] };
   key <AC11> { [   apostrophe, quotedbl   ] };

// shift, z to /
//   key <LFSH> { [   Shift_L                ] };
   key <AB01> { [   U09DF,  U09AF  ] };
   key <AB02> { [   U09B6,  U09DD  ] };
   key <AB03> { [   U099A,  U099B  ] };
   key <AB04> { [   U0986,  U098B  ] };
   key <AB05> { [   U09AC,  U09AD  ] };
   key <AB06> { [   U09A8,  U09A3  ] };
   key <AB07> { [   U09AE,  U0999  ] };
   key <AB08> { [   comma,      U09C3  ] };
   key <AB09> { [   U0964,  U0981  ] };
   key <AB10> { [   U09CD,  question   ] };
   key <BKSL> { [   U200C,  U0965  ] };

//   key <LCTL> { [   Control_L              ] };
//   key <SPCE> { [   space                  ] };

//   modifier_map Shift  { Shift_L };
//   modifier_map Lock   { Caps_Lock };
//   modifier_map Control{ Control_L };

    include "level3(ralt_switch)"
    include "rupeesign(4)"
};

// Bangla Baishakhi, Bangla Baishakhi Inscript, Bangla Bornona, Uni Gitanjali Layouts are added by Promathesh Mandal <promathesh812004@gmail.com>

xkb_symbols "ben_baishakhi" {
 name[Group1]= "Bangla (India, Baishakhi)";
   key <ESC>   { [ Escape 					] };

// numbers
   key <TLDE> { [ 0x100200D, 0x100200C	] };
   key <AE01> { [ 0x10009E7, exclam		] };
   key <AE02> { [ 0x10009E8, at		] };
   key <AE03> { [ 0x10009E9, numbersign	] };
   key <AE04> { [ 0x10009EA, dollar, 0x10009F2	] };
   key <AE05> { [ 0x10009EB, percent		] };
   key <AE06> { [ 0x10009EC, asciicircum, 0x10009D7    ] };
   key <AE07> { [ 0x10009ED, ampersand ] };
   key <AE08> { [ 0x10009EE,   asterisk,0x10009FA       		] };
   key <AE09> { [ 0x10009EF, parenleft    	] };
   key <AE10> { [ 0x10009E6, parenright   	] };
   key <AE11> { [ minus, underscore   	] };
   key <AE12> { [ equal,     plus 	] };
   key <BKSP> { [ BackSpace               		] };

// tab, q to ] 
   key <TAB>   { [   Tab,  ISO_Left_Tab		] };
   key <AD01> { [   0x10009A1,  0x10009A2  ] };
   key <AD02> { [  0x10009C0 ,  0x10009C2  ] };
   key <AD03> { [   0x10009C7,  0x100098F, 0x1000990 ] };
   key <AD04> { [   0x10009B0 , 0x10009C3, 0x100098B             		] };
   key <AD05> { [   0x100099F,  0x10009A0	] };
   key <AD06> { [   0x10009AF,  0x10009DF	] };
   key <AD07> { [   0x10009C1,  0x1000989, 0x100098A  ] };
   key <AD08> { [   0x10009BF,  0x1000987, 0x1000988  ] };
   key <AD09> { [   0x10009CB,  0x1000993, 0x1000994	] };
   key <AD10> { [   0x10009AA,  0x10009AB	] };
   key <AD11> { [   bracketleft,  braceleft] };
   key <AD12> { [   bracketright,	braceright	] };
   key <RTRN> { [   Return                 		] };

// caps, a to ' 
// key <CAPS> { [   Caps_Lock            		] };
   key <AC01> { [   0x10009BE,  0x1000985, 0x1000986  ] };
   key <AC02> { [   0x10009B8,  0x10009B6,  0x10009B7  ] };
   key <AC03> { [   0x10009A6,  0x10009A7  ] };
   key <AC04> { [   0x10009A4,   0x10009A5, 0x10009CE  ] };
   key <AC05> { [   0x1000997,  0x1000998	] };
   key <AC06> { [   0x10009CD,  0x10009B9, 0x1000983  ] };
   key <AC07> { [   0x100099C,  0x100099D	] };
   key <AC08> { [   0x1000995,  0x1000996  	] };
  key <AC09> { [   0x10009B2,  0x1000964, 0x100098C  ] };
   key <AC10> { [   semicolon,  colon  	] };
   key <AC11> { [   apostrophe, quotedbl   	] };

// shift, z to /
// key <LFSH> { [   Shift_L              			] };
   key <AB01> { [   0x10009C8, 0x10009CC              		] };
   key <AB02> { [   0x10009DC, 0x10009DD              		] };
   key <AB03> { [   0x100099A,  0x100099B  ] };
   key <AB04> { [   0x10009F1,  0x10009F0	] };
   key <AB05> { [   0x10009AC,  0x10009AD  ] };
   key <AB06> { [   0x10009A8,  0x10009A3, 0x100099E  ] };
   key <AB07> { [   0x10009AE,  0x1000999, 0x1000981  ] };
   key <AB08> { [   comma,      less	] };
   key <AB09> { [    period,	greater,0x10009BC 		] };
   key <AB10> { [   slash,  question, 0x1000982   	] };
   key <BKSL> { [   backslash,        bar	] };

// third level with right-alt
    include "level3(ralt_switch)"

//   key <LCTL> { [   Control_L              ] };
//   key <SPCE> { [   space                  ] };

//   modifier_map Shift  { Shift_L };
//   modifier_map Lock   { Caps_Lock };
//   modifier_map Control{ Control_L };
};

xkb_symbols "ben_inscript" {
    name[Group1]= "Bangla (India, Baishakhi Inscript)";

      // Mainly numbers.
      key <TLDE> { [      0x100200D, 0x100200C	] 	};
      key <AE01> { [      0x10009E7  		]	};
      key <AE02> { [      0x10009E8 		]	};
      key <AE03> { [      0x10009E9 		]	};
      key <AE04> { [      0x10009EA 		]	};
      key <AE05> { [      0x10009EB		]	};
      key <AE06> { [      0x10009EC 		]	};
      key <AE07> { [      0x10009ED	        ]	};
      key <AE08> { [      0x10009EE 		]	};
      key <AE09> { [      0x10009EF, parenleft	]	};
      key <AE10> { [      0x10009E6, parenright	]	};
      key <AE11> { [      minus, 0x1000983 	]	};
      key <AE12> { [      0x10009C3, 0x100098B 	]	};

// Mainly long vowels

      key <AD01> { [      0x10009CC,  0x1000994	]	};
      key <AD02> { [      0x10009C8,  0x1000990	]	};
      key <AD03> { [      0x10009BE,  0x1000986	]	};
      key <AD04> { [      0x10009C0,  0x1000988	]	};
      key <AD05> { [      0x10009C2,  0x100098A	]	};

// Mainly voiced consonants

      key <AD06> { [      0x10009AC,  0x10009AD	]	};
      key <AD07> { [      0x10009B9,  0x1000999 ]	};
      key <AD08> { [      0x1000997,  0x1000998 ]	};
      key <AD09> { [      0x10009A6,  0x10009A7 ]	};
      key <AD10> { [      0x100099C,  0x100099D ]	};
      key <AD11> { [      0x10009A1,  0x10009A2 ]	};
      key <AD12> { [      0x10009BC,  0x100099E ]	};

// Mainly short vowels
      key <AC01> { [      0x10009CB,  0x1000993 ]	};
      key <AC02> { [      0x10009C7,  0x100098F ]	};
      key <AC03> { [      0x10009CD,  0x1000985 ]	};
      key <AC04> { [      0x10009BF,  0x1000987 ]	};
      key <AC05> { [      0x10009C1,  0x1000989 ]	};


// Mainly unvoiced consonants

      key <AC06> { [      0x10009AA,  0x10009AB ]	};
      key <AC07> { [      0x10009B0,  0x10009DD ]	};
      key <AC08> { [      0x1000995,  0x1000996 ]	};
      key <AC09> { [      0x10009A4,  0x10009A5 ]	};
      key <AC10> { [      0x100099A,  0x100099B ]	};
      key <AC11> { [      0x100099F, 0x10009A0 	]	};
      key <BKSL> { [      backslash, bar 	]	};

      key <AB01> { [      0x10009CE  		]       };
      key <AB02> { [      0x1000982,  0x1000981 ]       };
      key <AB03> { [      0x10009AE,  0x10009A3 ]       };
      key <AB04> { [      0x10009A8,  0x10009A8 ]       };
      key <AB05> { [      0x10009AC,  0x10009AC ]       };
      key <AB06> { [      0x10009B2,  0x10009B2 ]       };
      key <AB07> { [      0x10009B8,  0x10009B6 ]       };
      key <AB08> { [      comma,      0x10009B7 ]       };
      key <AB09> { [      period,     0x1000964 ]       };
      key <AB10> { [      0x10009DF,  0x10009AF	]       };
};

xkb_symbols "ben_gitanjali" {
 name[Group1]= "Bangla (India, Uni Gitanjali)";
   key <ESC>   { [ Escape			] };

// numbers
   key <TLDE> { [ colon, question	] };
   key <AE01> { [ 0x10009E7, 0x10009CE	] };
   key <AE02> { [ 0x10009E8, apostrophe	] };
   key <AE03> { [ 0x10009E9, numbersign	] };
   key <AE04> { [ 0x10009EA, 0x10009F3	] };
   key <AE05> { [ 0x10009EB, slash	] };
   key <AE06> { [ 0x10009EC, period	] };
   key <AE07> { [ 0x10009ED, ampersand 	] };
   key <AE08> { [ 0x10009EE, asterisk 	] };
   key <AE09> { [ 0x10009EF, parenleft  ] };
   key <AE10> { [ 0x10009E6, parenright	] };
   key <AE11> { [ minus, 0x1000983   	] };
   key <AE12> { [ 0x10009C3, 0x100098B 	] };
   key <BKSP> { [ BackSpace		] };

// tab, q to ] 
   key <TAB>   { [   Tab,  ISO_Left_Tab	] };
   key <AD01> { [   0x10009D7,  0x1000994 ] };
   key <AD02> { [   0x10009C8,  0x1000990 ] };
   key <AD03> { [   0x10009BE,  0x1000985 ] };
   key <AD04> { [   0x10009C0,  0x1000988 ] };
   key <AD05> { [   0x10009C2,  0x100098A ] };
   key <AD06> { [   0x10009AC,  0x10009AD ] };
   key <AD07> { [   0x10009B9,  0x1000999 ] };
   key <AD08> { [   0x1000997,  0x1000998 ] };
   key <AD09> { [   0x10009A6,  0x10009A7 ] };
   key <AD10> { [   0x100099C,  0x100099D ] };
   key <AD11> { [   0x10009A1,  0x10009A2 ] };
   key <AD12> { [   0x100200C,  0x100099E ] };
   key <RTRN> { [   Return		  ] };

// caps, a to ' 
// key <CAPS> { [   Caps_Lock            		] };
   key <AC01> { [   0x100200D,  0x1000993 ] };
   key <AC02> { [   0x10009C7,  0x100098F ] };
   key <AC03> { [   0x10009CD		  ] };
   key <AC04> { [   0x10009BF,  0x1000987 ] };
   key <AC05> { [   0x10009C1,  0x1000989 ] };
   key <AC06> { [   0x10009AA,  0x10009AB ] };
   key <AC07> { [   0x10009B0,  0x10009F0 ] };
   key <AC08> { [   0x1000995,  0x1000996 ] };
   key <AC09> { [   0x10009A4,  0x10009A5 ] };
   key <AC10> { [   0x100099A,  0x100099B ] };
   key <AC11> { [   0x100099F,  0x10009A0 ] };

// shift, z to /
// key <LFSH> { [   Shift_L              			] };
   key <AB01> { [   0x10009C7, 0x100098F ] };
   key <AB02> { [   0x1000982, 0x1000981 ] };
   key <AB03> { [   0x10009AE, 0x10009A3 ] };
   key <AB04> { [   0x10009A8, 0x10009DC ] };
   key <AB05> { [   0x10009F1, 0x10009DD ] };
   key <AB06> { [   0x10009B2		 ] };
   key <AB07> { [   0x10009B8, 0x10009B6 ] };
   key <AB08> { [   comma,     0x10009B7 ] };
   key <AB09> { [   0x1000964, 0x10009FA ] };
   key <AB10> { [   0x10009AF, 0x10009DF ] };
   key <BKSL> { [   backslash, bar	 ] };

// third level with right-win
//    include "level3(lwin_switch)"

//   key <LCTL> { [   Control_L              ] };
//   key <SPCE> { [   space                  ] };

//   modifier_map Shift  { Shift_L };
//   modifier_map Lock   { Caps_Lock };
//   modifier_map Control{ Control_L };
};


xkb_symbols "ben_bornona" {
 name[Group1]= "Bangla (India, Bornona)";
   key <ESC>  { [ Escape 					] };

// numbers
   key <TLDE> { [ 0x100200D, 0x100200C   	] };
   key <AE01> { [ 0x10009E7, exclam         	] };
   key <AE02> { [ 0x10009E8, 0x1000981 	] };
   key <AE03> { [ 0x10009E9, numbersign   	] };
   key <AE04> { [ 0x10009EA, 0x10009F3    	] };
   key <AE05> { [ 0x10009EB, percent      	] };
   key <AE06> { [ 0x10009EC, 0x1000983    	] };
   key <AE07> { [ 0x10009ED, 0x10009CE	] };
   key <AE08> { [ 0x10009EE, asterisk		] };
   key <AE09> { [ 0x10009EF, parenleft    	] };
   key <AE10> { [ 0x10009E6, parenright	] };
   key <AE11> { [ minus,	   underscore	] };
   key <AE12> { [ equal,          plus			] };
   key <BKSP> { [ BackSpace               		] };

// tab, q to ] 
   key <TAB>   { [   Tab,  	ISO_Left_Tab	] };
   key <AD01> { [   0x1000982,  0x1000999, 0x10009D7	] };
   key <AD02> { [   0x10009A2,  0x10009A0, 0x100098A ] };
   key <AD03> { [   0x10009C7,  0x10009C8, 0x1000988	] };
   key <AD04> { [   0x10009B0,  0x10009C3, 0x100098B	] };
   key <AD05> { [   0x10009A4,  0x100099F	] };
   key <AD06> { [   0x10009A7,  0x10009A5, 0x100098F  ] };
   key <AD07> { [   0x10009C1,  0x10009C2, 0x1000989	] };
   key <AD08> { [   0x10009BF,  0x10009C0, 0x1000987	] };
   key <AD09> { [   0x10009CB,  0x10009CC, 0x1000993	] };
   key <AD10> { [   0x10009AA, 0x1000990, 0x1000994		] };
   key <AD11> { [   0x100005B,  0x100007B, 0x10009DC  ] };
   key <AD12> { [   0x100005D,  0x100007D  ] };
   key <RTRN> { [   Return					] };

// caps, a to ' 
// key <CAPS> { [   Caps_Lock            		] };
   key <AC01> { [   0x10009BE,  0x1000985, 0x10009F4  ] };
   key <AC02> { [   0x10009B8,  0x10009B6, 0x10009F5  ] };
   key <AC03> { [   0x10009A6,  0x10009A1, 0x10009F8  ] };
   key <AC04> { [   0x10009AB				] };
   key <AC05> { [   0x1000997,  0x1000998	] };
   key <AC06> { [   0x10009CD, 0x10009B9	] };
   key <AC07> { [   0x100099C,  0x100099D	] };
   key <AC08> { [   0x1000995,  0x1000996	] };
   key <AC09> { [   0x10009B2,  0x1000964  ] };
   key <AC10> { [   semicolon,  0x100003A	] };
   key <AC11> { [   apostrophe, quotedbl   	] };

// shift, z to /
// key <LFSH> { [   Shift_L              			] };
   key <AB01> { [   0x10009AF, 0x10009DC	] };
   key <AB02> { [   0x10009B7, 0x10009DD, 0x10009FA	] };
   key <AB03> { [   0x100099A,  0x100099B  ] };
   key <AB04> { [   0x10009AD				] };
   key <AB05> { [   0x10009AC,  0x10009DF	] };
   key <AB06> { [   0x10009A8,  0x10009A3	] };
   key <AB07> { [   0x10009AE,  0x100099E	] };
   key <AB08> { [   comma,      0x100003C	] };
   key <AB09> { [   0x100002E,  0x100003E  ] };
   key <AB10> { [   0x100002F,  question   	] };
   key <BKSL> { [   0x10009F1,  0x10009F0	] };

//   key <LCTL> { [   Control_L              ] };
//   key <SPCE> { [   space                  ] };

//   modifier_map Shift  { Shift_L };
//   modifier_map Lock   { Caps_Lock };
//   modifier_map Control{ Control_L };
// third level with right-alt
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "guj" {
      name[Group1]= "Gujarati";

      // Mainly numbers.
      key <AE01> { [      U0AE7, U0A8D 	]	};
      key <AE02> { [      U0AE8, U0AC5 	]	};
      key <AE03> { [      U0AE9 	 	]	};
      key <AE04> { [      U0AEA  	 	]	};
      key <AE05> { [      U0AEB  	 	]	};
      key <AE06> { [      U0AEC  	 	]	};
      key <AE07> { [      U0AED 		]	};
      key <AE08> { [      U0AEE  	 	]	};
      key <AE09> { [      U0AEF, parenleft 	]	};
      key <AE10> { [      U0AE6, parenright ]	};
      key <AE11> { [      minus,     U0A83  ]	};
      key <AE12> { [      U0A8B, U0AC3 	]	};

// Mainly long vowels

      key <AD01> { [      U0ACC, U0A94  ]	};
      key <AD02> { [      U0AC8, U0A90  ]	};
      key <AD03> { [      U0ABE, U0A86  ]	};
      key <AD04> { [      U0AC0, U0A88  ]	};
      key <AD05> { [      U0AC2, U0A8A  ]	};

// Mainly voiced consonants

      key <AD06> { [      U0AAC, U0AAD 	]	};
      key <AD07> { [      U0AB9, U0A99 	]	};
      key <AD08> { [      U0A97, U0A98 	]	};
      key <AD09> { [      U0AA6, U0AA7 	]	};
      key <AD10> { [      U0A9C, U0A9D 	]	};
      key <AD11> { [      U0AA1, U0AA2 	]	};
      key <AD12> { [      U0ABC, U0A9E 	]	};

// Mainly short vowels
      key <AC01> { [      U0ACB, U0A93	]	};
      key <AC02> { [      U0AC7, U0A8F	]	};
      key <AC03> { [      U0ACD, U0A85  ]	};
      key <AC04> { [      U0ABF, U0A87  ]	};
      key <AC05> { [      U0AC1, U0A89  ]	};

// Mainly unvoiced consonants

      key <AC06> { [      U0AAA, U0AAB 	]	};
      key <AC07> { [      U0AB0, U0AB0 	]	};
      key <AC08> { [      U0A95, U0A96 	]	};
      key <AC09> { [      U0AA4, U0AA5 	]	};
      key <AC10> { [      U0A9A, U0A9B 	]	};
      key <AC11> { [      U0A9F, U0AA0 	]	};
      key <BKSL> { [      U0AC9, U0A91 	]	};

      key <AB01> { [      z        , Z		]       };
      key <AB02> { [      U0A82, U0A81	]       };
      key <AB03> { [      U0AAE, U0AA3  ]       };
      key <AB04> { [      U0AA8, U0AA8   ]       };
      key <AB05> { [      U0AB5, U0AB5   ]       };
      key <AB06> { [      U0AB2, U0AB3  ]       };
      key <AB07> { [      U0AB8, U0AB6  ]       };
      key <AB08> { [      comma,     U0AB7  ]       };
      key <AB09> { [      period,    U0964  ]       };
      key <AB10> { [      U0AAF, question   ]       };
      include "rupeesign(4)"
      include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "kan" {

    // Inscript layout for Kannada  
    // Author : G Karunakar <karunakar@freedomink.org>
    // Date   : Wed Nov 13 17:22:58 IST 2002
    // Kannada digits mapped in basic only

    name[Group1]= "Kannada";

    key <TLDE> { [  U0cca, U0c92	] };
    key <AE01> { [  U0ce7			] };
    key <AE02> { [  U0ce8			] };
    key <AE03> { [  U0ce9			] };
    key <AE04> { [  U0cea			] };
    key <AE05> { [  U0ceb			] };
    key <AE06> { [  U0cec			] };
    key <AE07> { [  U0ced			] };
    key <AE08> { [  U0cee			] };
    key <AE09> { [  U0cef			] };
    key <AE10> { [  U0ce6			] };
    key <AE11> { [  U0c83			] };
    key <AE12> { [  U0cc3, U0c8b	] };

    key <AD01> { [  U0ccc, U0c94	] };
    key <AD02> { [  U0cc8, U0c90	] };
    key <AD03> { [  U0cbe, U0c86	] };
    key <AD04> { [  U0cc0, U0c88	] };
    key <AD05> { [  U0cc2, U0c8a	] };
    key <AD06> { [  U0cac, U0cad	] };
    key <AD07> { [  U0cb9, U0c99	] };
    key <AD08> { [  U0c97, U0c98	] };
    key <AD09> { [  U0ca6, U0ca7	] };
    key <AD10> { [  U0c9c, U0c9d	] };
    key <AD11> { [  U0ca1, U0ca2	] };
    key <AD12> { [  U0cbc, U0c9e	] };

    key <AC01> { [  U0ccb, U0c93	] };
    key <AC02> { [  U0cc7, U0c8f	] };
    key <AC03> { [  U0ccd, U0c85	] };
    key <AC04> { [  U0cbf, U0c87	] };
    key <AC05> { [  U0cc1, U0c89	] };
    key <AC06> { [  U0caa, U0cab	] };
    key <AC07> { [  U0cb0, U0cb1	] };
    key <AC08> { [  U0c95, U0c96	] };
    key <AC09> { [  U0ca4, U0ca5	] };
    key <AC10> { [  U0c9a, U0c9b	] };
    key <AC11> { [  U0c9f, U0ca0	] };

    key <AB01> { [  U0cc6, U0c8e	] };
    key <AB02> { [  U0c82			] };
    key <AB03> { [  U0cae, U0ca3	] };
    key <AB04> { [  U0ca8			] };
    key <AB05> { [  U0cb5, U0cb4	] };
    key <AB06> { [  U0cb2, U0cb3	] };
    key <AB07> { [  U0cb8, U0cb6	] };
    key <AB08> { [  comma     , U0cb7	] };
    key <AB09> { [  period    				] };
    key <AB10> { [  U0caf, U0040	] };

    key <RALT> {
	symbols[Group1] = [ Mode_switch, Multi_key ],
	virtualMods = AltGr
    };
    include "rupeesign(4)"
    include "level3(ralt_switch)"
};

// Description : A keymap for Malayalam
// Encoding    : Unicode (http://www.unicode.org)
// Author      : Baiju M <baiju@freeshell.org>
// Date        : Sat Aug  17 21:10:48 IST 2002
// Mapping:

partial alphanumeric_keys
xkb_symbols "mal" {

    name[Group1] = "Malayalam";

    //From grave to backslash (\)

    key <TLDE> { [ U0d4a , U0d12           ] };

// svu: 
// These lines were in former "mal" variant - 
// but the digits are replaced with the ones from 'mal_plusnum' -
// for the integrity of all Indian layouts
//
//    key <AE01> { [1           ,     exclam           ] };
//    key <AE02> { [2           ,         at           ] };
//    key <AE03> { [3           , numbersign           ] };
//    key <AE04> { [4           ,     dollar           ] };
//    key <AE05> { [5           ,    percent           ] };
//    key <AE06> { [6           ,asciicircum           ] };
//    key <AE07> { [7           ,  ampersand           ] };
//    key <AE08> { [8           , asterisk           ] };
//    key <AE09> { [9           ,  parenleft           ] };
//    key <AE10> { [0           , parenright           ] };

      key <AE01> { [ U0d67 ,      exclam ] };
      key <AE02> { [ U0d68 ,          at ] };
      key <AE03> { [ U0d69 ,  numbersign ] };
      key <AE04> { [ U0d6a ,      dollar ] };
      key <AE05> { [ U0d6b ,     percent ] };
      key <AE06> { [ U0d6c , asciicircum ] };
      key <AE07> { [ U0d6d ,   ampersand ] };
      key <AE08> { [ U0d6e ,  asterisk ] };
      key <AE09> { [ U0d6f ,   parenleft ] };
      key <AE10> { [ U0d66 ,  parenright ] };

    key <AE11> { [ minus      , U0d03           ] };
    key <AE12> { [ U0d43 , U0d0b           ] };
    key <BKSL>  { [U0200c, U05C ]};//bksl: ZWNJ 


    // From 'q' to right bracket (])

    key <AD01> { [ U0d4c , U0d14 ] };
    key <AD02> { [ U0d48 , U0d10 ] };
    key <AD03> { [ U0d3e , U0d06 ] };
    key <AD04> { [ U0d40 , U0d08 ] };
    key <AD05> { [ U0d42 , U0d0a ] };
    key <AD06> { [ U0d2c , U0d2d ] };
    key <AD07> { [ U0d39 , U0d19 ] };
    key <AD08> { [ U0d17 , U0d18 ] };
    key <AD09> { [ U0d26 , U0d27 ] };
    key <AD10> { [ U0d1c , U0d1d ] };
    key <AD11> { [ U0d21 , U0d22 ] };
    key <AD12> { [ U0200d , U0d1e ] };

    // From 'a' to apostrophe (')

    key <AC01> { [ U0d4b , U0d13 ] };
    key <AC02> { [ U0d47 , U0d0f ] };
    key <AC03> { [ U0d4d , U0d05 ] };
    key <AC04> { [ U0d3f , U0d07 ] };
    key <AC05> { [ U0d41 , U0d09 ] };
    key <AC06> { [ U0d2a , U0d2b ] };
    key <AC07> { [ U0d30 , U0d31 ] };
    key <AC08> { [ U0d15 , U0d16 ] };
    key <AC09> { [ U0d24 , U0d25 ] };
    key <AC10> { [ U0d1a , U0d1b ] };
    key <AC11> { [ U0d1f , U0d20 ] };

    // From 'z' to slash (/)

    key <AB01> { [ U0d46 , U0d0e ] };
    key <AB02> { [ U0d02 , U200b ] };//X:ZWSP
    key <AB03> { [ U0d2e , U0d23 ] };
    key <AB04> { [ U0d28 ] };
    key <AB05> { [ U0d35 , U0d34 ] };
    key <AB06> { [ U0d32 , U0d33 ] };
    key <AB07> { [ U0d38 , U0d36 ] };
    key <AB08> { [ comma      , U0d37 ] };
    key <AB09> { [ period     , U0200d ] };
    key <AB10> { [ U0d2f , question   ] };

    include "rupeesign(4)"
    include "level3(ralt_switch)"
};

//Name		:	Lalitha
//Description	:	A transliteration keyboard layout for Malayalam
//Original Author :	Noah Levitt<nlevitt at columbia.edu>
//Current Main  : 	Jinesh K.J<jinesh.k@gmail.com>, Swathantra Malayalam Computing (SMC)<smc-discuss@googlegroups.com>

partial alphanumeric_keys
xkb_symbols "mal_lalitha" {
     name[Group1] = "Malayalam (Lalitha)";
     key.type="FOUR_LEVEL";

    // Roman digits
    key <TLDE>  { [   U0D4D,	U0D02,		apostrophe, 	asciitilde ] }; // apostrophe: virama(chandrakala),anusvara
    key <AE01>  { [   1,	exclam,	U0D67,		exclam	   ] };
    key <AE02>  { [   2,	at,		U0D68,		at	   ] };
    key <AE03>  { [   3,    	numbersign, 	U0D69,		numbersign ] };
    key <AE04>  { [   4,	dollar,		U0D6A			     ] };
    key <AE05>  { [   5,	percent,	U0D6B,		percent    ] };
    key <AE06>  { [   6,	asciicircum,	U0D6C,		asciicircum ] };
    key <AE07>  { [   7,	ampersand,	U0D6D,		ampersand  ] };
    key <AE08>  { [   8,	asterisk,	U0D6E,		asterisk   ] };
    key <AE09>  { [   9,	parenleft,	U0D6F,		parenleft  ] };
    key <AE10>  { [   0,	parenright,	U0D66,		parenright ] };
    key <AE11>	{ [   minus,	underscore	     ] };
    key <AE12>	{ [   equal,	plus		     ] };
    key <BKSL>  { [   U005C,	U007C,		U200C	] };//backslash:pipe,backslash,ZWNJ 

    //Q Row	
    key <AD01>   { [   U0D48,	U0D4C,	U0D10,	U0D14  ] }; // Q: ai and au matras 
    key <AD02>   { [   U0D35	] };  // W: wa, OM
    key <AD03>   { [   U0D46,   U0D47,	U0D0E,	U0D0F   ] };  // E: e,ee matras
    key <AD04>   { [   U0D30,	U0D31,	U0D43,	U0D0B  	] };  // R: ra,rra, vocalic Ri
    key <AD05>   { [   U0D24,   U0D25,	U0D1F,	U0D20   ] };  // T: tha, ttha,ta,tta
    key <AD06>   { [   U0D2f    ] };  // Y: ya
    key <AD07>   { [   U0D41,   U0D42,	U0D09,	U0D0A   ] };  // U: u, uu matras
    key <AD08>   { [   U0D3F,   U0D40,	U0D07,	U0D08   ] };  // I: i, ii matras
    key <AD09>   { [   U0D4A,   U0D4B,	U0D12,	U0D13   ] };  // O: o, oo matras
    key <AD10>   { [   U0D2A   ] };  // P: pa
    key <AD11>   { [   bracketleft,   braceleft   ] };//braceleft:   
    key <AD12>	 { [   bracketright, braceright   ] };//braceright:

    //A Row
    key <AC01>   { [   U0D3E,	 U0D05,	U0D06,	U0D05  ] };   // A: a,aa
    key <AC02>   { [   U0D38,    U0D37   ] };  // S: sa, ssa
    key <AC03>   { [   U0D26,    U0D27,	U0D21,	U0D22   ] };  // D: soft da,soft dda,hard da,hard dda,
    key <AC04>   { [   U0D2B     ] };  // F: pha
    key <AC05>   { [   U0D17,    U0D18   ] };  // G: ga, gha
    key <AC06>   { [   U0D39,    U0D03   ] };  // H: ha, visarg 
    key <AC07>   { [   U0D1C,    U0D1D   ] };  // J: ja, jha
    key <AC08>   { [   U0D15,    U0D16   ] };  // K: ka, kha
    key <AC09>   { [   U0D32,	 U0D33   ] };  // L: la, vocalic L or lru matra`
    key <AC10>   { [   semicolon, colon  ] };
    key <AC11>   { [apostrophe, quotedbl ] };

    //Z Row
    key <AB01>   { [   U0D34,	 U0D36 	 ] };  // Z: sha,zha
    key <AB02>   { [   U0D4D,	 U200B  ] };  // X: chandrakala,ZWSP
    key <AB03>   { [   U0D1A,    U0D1B   ] };  // C: ca, cha
    key <AB04>   { [   U0D35,	 U200D  ] };  // V: va,ZWJ
    key <AB05>   { [   U0D2C,    U0D2D   ] };  // B: ba, bha
    key <AB06>   { [   U0D28,    U0D23,	U0D19,	U0D1E   ] };  // N: na, hard na,nga,nha
    key <AB07>   { [   U0D2E,	 U0D02  ] };  // M: ma
    key <AB08>   { [   comma,    U003C ] };// comma: comma
    key <AB09>   { [   period, 	 U003E ] };  // period: period
    key <AB10>	 { [   slash,   question ] };

//    modifier_map Shift  { Shift_L };
//    modifier_map Lock   { Caps_Lock };
//    modifier_map Control{ Control_L };
//    modifier_map Mod3   { Mode_switch };
    include "level3(ralt_switch)"
    include "rupeesign(4)"
};


partial alphanumeric_keys
xkb_symbols "olck" {

    // Layout for the Ol Chiki script.
    // http://www.unicode.org/L2/L2005/05243r-n2984-ol-chiki.pdf (figure 9)

    name[Group1]= "Ol Chiki";

    key <TLDE> { [  grave, U1C7B		] };

    key <AE01> { [  U1C51, exclam		] };
    key <AE02> { [  U1C52, at			] };
    key <AE03> { [  U1C53, numbersign		] };
    key <AE04> { [  U1C54, dollar, U20B9	] };
    key <AE05> { [  U1C55, percent		] };
    key <AE06> { [  U1C56, asciicircum		] };
    key <AE07> { [  U1C57, ampersand		] };
    key <AE08> { [  U1C58, asterisk		] };
    key <AE09> { [  U1C59, parenleft		] };
    key <AE10> { [  U1C50, parenright		] };
    key <AE11> { [  minus, U1C7C		] };
    key <AE12> { [  equal, plus			] };

    key <AD01> { [  U1C67			] };
    key <AD02> { [  U1C63			] };
    key <AD03> { [  U1C6E			] };
    key <AD04> { [  U1C68			] };
    key <AD05> { [  U1C74, U1C5B		] };
    key <AD06> { [  U1C6D  			] };
    key <AD07> { [  U1C69			] };
    key <AD08> { [  U1C64			] };
    key <AD09> { [  U1C5A, U1C73		] };
    key <AD10> { [  U1C6F  			] };
    key <AD11> { [  bracketleft, braceleft	] };
    key <AD12> { [  bracketright, braceright 	] };
    key <BKSL> { [  U1C7F, U1C7E		] };

    key <AC01> { [  U1C5F  			] };
    key <AC02> { [  U1C65			] };
    key <AC03> { [  U1C70, U1C6B		] };
    key <AC04> { [  U1C5D  			] };
    key <AC05> { [  U1C5C			] };
    key <AC06> { [  U1C66, U1C77		] };
    key <AC07> { [  U1C61  			] };
    key <AC08> { [  U1C60			] };
    key <AC09> { [  U1C5E			] };
    key <AC10> { [  semicolon, U1C7A		] };
    key <AC11> { [  apostrophe, quotedbl	] };

    key <AB01> { [  U1C72			] };
    key <AB02> { [  U1C7D			] };
    key <AB03> { [  U1C6A			] };
    key <AB04> { [  U1C76			] };
    key <AB05> { [  U1C75			] };
    key <AB06> { [  U1C71, U1C78		] };
    key <AB07> { [  U1C62, U1C6C		] };
    key <AB08> { [  comma, less			] };
    key <AB09> { [  U1C79, greater		] };
    key <AB10> { [  slash, question		] };

    key <RALT> {
	symbols[Group1] = [ Mode_switch, Multi_key ],
	virtualMods = AltGr
    };

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "ori" {
    // Inscript layout for Oriya  
    // Author: G Karunakar <karunakar@freedomink.org>
    // Date: Wed Nov 13 18:16:19 IST 2002

    name[Group1]= "Oriya";

    key <AE01> { [  U0b67			] };
    key <AE02> { [  U0b68			] };
    key <AE03> { [  U0b69			] };
    key <AE04> { [  U0b6a			] };
    key <AE05> { [  U0b6b			] };
    key <AE06> { [  U0b6c			] };
    key <AE07> { [  U0b6d			] };
    key <AE08> { [  U0b6e			] };
    key <AE09> { [  U0b6f			] };
    key <AE10> { [  U0b66			] };
    key <AE11> { [  U0b03			] };
    key <AE12> { [  U0b43, U0b0b	] };

    key <AD01> { [  U0b4c, U0b14	] };
    key <AD02> { [  U0b48, U0b10	] };
    key <AD03> { [  U0b3e, U0b06	] };
    key <AD04> { [  U0b40, U0b08	] };
    key <AD05> { [  U0b42, U0b0a	] };
    key <AD06> { [  U0b2c, U0b2d	] };
    key <AD07> { [  U0b39, U0b19	] };
    key <AD08> { [  U0b17, U0b18	] };
    key <AD09> { [  U0b26, U0b27	] };
    key <AD10> { [  U0b1c, U0b1d	] };
    key <AD11> { [  U0b21, U0b22	] };
    key <AD12> { [  U0b3c, U0b1e	] };

    key <AC01> { [  U0b4b, U0b13	] };
    key <AC02> { [  U0b47, U0b0f	] };
    key <AC03> { [  U0b4d, U0b05	] };
    key <AC04> { [  U0b3f, U0b07	] };
    key <AC05> { [  U0b41, U0b09	] };
    key <AC06> { [  U0b2a, U0b2b	] };
    key <AC07> { [  U0b30			] };
    key <AC08> { [  U0b15, U0b16	] };
    key <AC09> { [  U0b24, U0b25	] };
    key <AC10> { [  U0b1a, U0b1b	] };
    key <AC11> { [  U0b1f, U0b20	] };

    key <AB02> { [  U0b02, U0b01	] };
    key <AB03> { [  U0b2e, U0b23	] };
    key <AB04> { [  U0b28			] };
    key <AB05> { [  U0b35			] };
    key <AB06> { [  U0b32, U0b33	] };
    key <AB07> { [  U0b38, U0b36	] };
    key <AB08> { [  comma     , U0b37	] };
    key <AB09> { [  period    				] };
    key <AB10> { [  U0b2f, U0040	] };

    key <RALT> {
	symbols[Group1] = [ Mode_switch, Multi_key ],
	virtualMods = AltGr
    };
    include "rupeesign(4)"
    include "level3(ralt_switch)"
};

// based on a keyboard map from an 'xkb/symbols/tml' file
// INSCRIPT
partial alphanumeric_keys
xkb_symbols "tam" {
      name[Group1]= "Tamil";

      key <TLDE> { [      U0BCA, U0B92	]	};

      // Mainly numbers.
      key <AE01> { [      U0BE7 		]	};
      key <AE02> { [      U0BE8 		]	};
      key <AE03> { [      U0BE9 		]	};
      key <AE04> { [      U0BEA 		]	};
      key <AE05> { [      U0BEB 		]	};
      key <AE06> { [      U0BEC 		]	};
      key <AE07> { [      U0BED        	]	};
      key <AE08> { [      U0BEE 		]	};
      key <AE09> { [      U0BEF, parenleft	]	};
      key <AE10> { [      U0BF0, parenright	]	};
      key <AE11> { [      U0BF1, U0B83  ]	};
      key <AE12> { [      U0BF2, plus	] 	};

// Mainly long vowels

      key <AD01> { [      U0BCC,  U0B94 ]	};
      key <AD02> { [      U0BC8,  U0B90 ]	};
      key <AD03> { [      U0BBE,  U0B86 ]	};
      key <AD04> { [      U0BC0,  U0B88 ]	};
      key <AD05> { [      U0BC2,  U0B8A ]	};

// Mainly voiced consonants

      key <AD07> { [      U0BB9, U0B99	]	};
      key <AD10> { [      U0B9c 	]	};
      key <AD12> { [      U0B9E				]	};

// Mainly short vowels
      key <AC01> { [      U0BCB,  U0B93 ]	};
      key <AC02> { [      U0BC7,  U0B8F ]	};
      key <AC03> { [      U0BCD,  U0B85 ]	};
      key <AC04> { [      U0BBF,  U0B87 ]	};
      key <AC05> { [      U0BC1,  U0B89 ]	};

// Mainly unvoiced consonants

      key <AC06> { [      U0BAA 		]	};
      key <AC07> { [      U0BB0,  U0BB1 ]	};
      key <AC08> { [      U0B95 		]	};
      key <AC09> { [      U0BA4 		]	};
      key <AC10> { [      U0B9A 		]	};
      key <AC11> { [      U0B9F 		]	};
      key <BKSL> { [      U005C, U007C	]	};//backslash-bar  - Changed to Unicode

      key <AB01> { [      U0BC6,  U0B8E	]	};
      key <AB02> { [      U0B82   		]       };
      key <AB03> { [      U0BAE,  U0BA3 ]       };
      key <AB04> { [      U0BA8,  U0BA9 ]       };
      key <AB05> { [      U0BB5,  U0BB4 ]       };
      key <AB06> { [      U0BB2,  U0BB3 ]       };
      key <AB07> { [      U0BB8,  U0BB6	]       };
      key <AB08> { [      comma,      U0BB7 ]       };
      key <AB09> { [      period,     U0964 ]       };
      key <AB10> { [      U0BAF,  question  ]       };

      include "level3(ralt_switch)"
      include "rupeesign(4)"
};

partial alphanumeric_keys
xkb_symbols "tam_unicode" {

// Description: A keymap based on the TamilNet'99 typewriter keyboard 
// Encoding: Unicode (http://www.unicode.org)
// Author: Thuraiappah Vaseeharan <vasee@ieee.org>
// Modifed by: Malathi S <malathiramya@gmail.com>
// Secondary contact: Sri Ramadoss M <amachu@au-kbc.org>
// Date  : Fri Sep 4 11:32:00 CST 2009
// Mapping:

    name[Group1]= "Tamil (Unicode)";

    // granthas
    key <TLDE> {  [ apostrophe, asciitilde ] };
    key <AE01> {  [ U0031, exclam ] } ;
    key <AE02> {  [ U0032, at ] } ;
    key <AE03> {  [ U0033, numbersign ] } ;
    key <AE04> {  [ U0034, U0BF9 ] } ;
    key <AE05> {  [ U0035, percent ] } ;
    key <AE06> {  [ U0036, asciicircum ] } ;
    key <AE07> {  [ U0037, ampersand ] } ;
    key <AE08> {  [ U0038, asterisk ] } ;
    key <AE09> {  [ U0039, parenleft ] } ;
    key <AE10> {  [ U0030, parenright ] } ;
    key <AE11> {  [ minus, underscore ] };
    key <AE12> {  [ equal, plus	] };


    // Qrow
    key <AD01> {  [ U0B9E, U0BB6 ] };
    key <AD02> {  [ U0BB1, U0BB7 ] };
    key <AD03> {  [ U0BA8, U0BB8 ] };
    key <AD04> {  [ U0B9A, U0BB9 ] };
    key <AD05> {  [ U0BB5, U0B9C ] };
    key <AD06> {  [ U0BB2 ] };
    key <AD07> {  [ U0BB0 ] };
    key <AD08> {  [ U0BC8, U0B90 ] };
    key <AD09> {  [ U0BCA, U0BCB ] };
    key <AD10> {  [ U0BBF, U0BC0 ] };
    key <AD11> {  [ U0BC1, U0BC2 ] };

    // Arow
    key <AC01> { [ U0BAF ] };
    key <AC02> { [ U0BB3 ] };
    key <AC03> { [ U0BA9 ] };
    key <AC04> { [ U0B95 ] };
    key <AC05> { [ U0BAA ] };
    key <AC06> { [ U0BBE, U0BB4 ] };
    key <AC07> { [ U0BA4 ] };
    key <AC08> { [ U0BAE ] };
    key <AC09> { [ U0B9F ] };
    key <AC10> { [ U0BCD, U0B83 ] };
    key <AC11> { [ U0B99 ] };

    // Zrow
    key <AB01> { [ U0BA3 ]  };
    key <AB02> { [ U0B92, U0B93 ]  };
    key <AB03> { [ U0B89, U0B8A ]  };
    key <AB04> { [ U0B8E, U0B8F ]  };
    key <AB05> { [ U0BC6, U0BC7 ]  };
    key <AB06> { [ U0B94, U0BCC ]  };
    key <AB07> { [ U0B85, U0B86 ]  };
    key <AB08> { [ U0B87, U0B88 ]  };
};

partial alphanumeric_keys
xkb_symbols "tam_keyboard_with_numerals" {

// Description: A keymap based on the TamilNet'99 typewriter keyboard 
// Encoding: Unicode (http://www.unicode.org)
// Author: Malathi S <malathiramya@gmail.com>
// Secondary contact: Sri Ramadoss M <amachu@au-kbc.org>
// Date  : Fri Sep 4 11:33:00 CST 2009
// Mapping:

      name[Group1]= "Tamil (keyboard with numerals)";

      // Mainly numbers.
      key <TLDE> { [ apostrophe, asciitilde ] };
      key <AE01> { [ U0BE7, exclam ] };
      key <AE02> { [ U0BE8, at ] };
      key <AE03> { [ U0BE9, numbersign ] };
      key <AE04> { [ U0BEA, U0BF9 ] };
      key <AE05> { [ U0BEB, percent ] };
      key <AE06> { [ U0BEC, asciicircum ] };
      key <AE07> { [ U0BED, ampersand ] };
      key <AE08> { [ U0BEE, asterisk ] };
      key <AE09> { [ U0BEF, parenleft ] };
      key <AE10> { [ U0BE6, parenright ] };
      key <AE11> { [ minus, underscore ] };
      key <AE12> { [ equal, plus ] };


    // Qrow
    key <AD01> {  [ U0B9E, U0BB6 ] };
    key <AD02> {  [ U0BB1, U0BB7 ] };
    key <AD03> {  [ U0BA8, U0BB8 ] };
    key <AD04> {  [ U0B9a, U0BB9 ] };
    key <AD05> {  [ U0BB5, U0B9c ] };
    key <AD06> {  [ U0BB2 ] };
    key <AD07> {  [ U0BB0 ] };
    key <AD08> {  [ U0BC8, U0B90 ] };
    key <AD09> {  [ U0BCA, U0BCB ] };
    key <AD10> {  [ U0BBF, U0BC0 ] };
    key <AD11> {  [ U0BC1, U0BC2 ] };

    // Arow
    key <AC01> { [ U0BAF ] };
    key <AC02> { [ U0BB3 ] };
    key <AC03> { [ U0BA9 ] };
    key <AC04> { [ U0B95 ] };
    key <AC05> { [ U0BAA ] };
    key <AC06> { [ U0BBE, U0BB4 ] };
    key <AC07> { [ U0BA4 ] };
    key <AC08> { [ U0BAE ] };
    key <AC09> { [ U0B9F ] };
    key <AC10> { [ U0BCD, U0B83 ] };
    key <AC11> { [ U0B99 ] };

    // Zrow
    key <AB01> { [ U0BA3 ]  };
    key <AB02> { [ U0B92, U0B93 ]  };
    key <AB03> { [ U0B89, U0B8A ]  };
    key <AB04> { [ U0B8E, U0B8F ]  };
    key <AB05> { [ U0BC6, U0BC7 ]  };
    key <AB06> { [ U0B94, U0BCC ]  };
    key <AB07> { [ U0B85, U0B86 ]  };
    key <AB08> { [ U0B87, U0B88 ]  };
};

partial alphanumeric_keys
xkb_symbols "tam_TSCII" {

// Description	: A Tamil typewrite-style keymap 
//		  loosely based on TamilNet'99 reommendations 
// Encoding	: TSCII (http://www.tscii.org)
// Author	: Thuraiappah Vaseeharan <vasee@ieee.org>
// Last Modified: Sat Jan  5 17:11:26 CST 2002

    name[Group1]= "Tamil (TSCII typewriter)";

    key <AE01> {  [ 0x10000b7, 0x10000a4 ] }; // aytham
    key <AE02> {  [ 0x1000082, 0x10000a5 ] }; // shri
    key <AE03> {  [ 0x1000083, 0x1000088 ] }; // ja
    key <AE04> {  [ 0x1000084, 0x1000089 ] }; // sha
    key <AE05> {  [ 0x1000085, 0x100008a ] }; // sa
    key <AE06> {  [ 0x1000086, 0x100008b ] }; // ha
    key <AE07> {  [ 0x1000087, 0x100008c ] }; // ksha

    // Qrow
    key <AD01> {  [ 0x10000bb, 0x100009a ] }; // nja
    key <AD02> {  [ 0x10000c8, 0x10000da ] }; // Ra
    key <AD03> {  [ 0x10000bf, 0x10000d1 ] }; // NNa
    key <AD04> {  [ 0x10000ba, 0x10000cd ] }; // ca
    key <AD05> {  [ 0x10000c5, 0x10000d7 ] }; // va
    key <AD06> {  [ 0x10000c4, 0x10000d6 ] }; // la
    key <AD07> {  [ 0x10000c3, 0x10000d5 ] }; // ra
    key <AD08> {  [ 0x10000a8, 0x10000b3 ] }; // sangili, ai
    key <AD09> {  [ 0x10000ca, 0x10000cb ] }; // di, dI
    key <AD10> {  [ 0x10000a2, 0x10000a3 ] }; // visiri
    key <AD11> {  [ dead_acute, 0x10000a3 ] }; // Ukaaram

    // Arow
    key <AC01> { [ 0x10000c2, 0x10000d4 ] }; // ya
    key <AC02> { [ 0x10000c7, 0x10000d9 ] }; // La
    key <AC03> { [ 0x10000c9, 0x10000db ] }; // na
    key <AC04> { [ 0x10000b8, 0x10000cc ] }; // ka
    key <AC05> { [ 0x10000c0, 0x10000d2 ] }; // pa
    key <AC06> { [ dead_grave,0x10000a1 ] }; // pulli,aravu
    key <AC07> { [ 0x10000be, 0x10000d0 ] }; // tha
    key <AC08> { [ 0x10000c1, 0x10000d3 ] }; // ma
    key <AC09> { [ 0x10000bc, 0x10000ce ] }; // da
    key <AC10> { [ 0x10000c6, 0x10000d8 ] }; // zha
    key <AC11> { [ 0x10000b9, 0x1000099 ] }; // nga

    // Zrow
    key <AB01> { [ 0x10000bd, 0x10000cf ] }; // Na
    key <AB02> { [ 0x10000b4, 0x10000b5 ] }; // o, O
    key <AB03> { [ 0x10000af, 0x10000b0 ] }; // u, U
    key <AB04> { [ 0x10000b1, 0x10000b2 ] }; // e, E
    key <AB05> { [ 0x10000a6, 0x10000a7 ] }; // kombus
    key <AB06> { [ 0x10000b6, 0x10000aa ] }; // au
    key <AB07> { [ 0x10000ab, 0x10000ac ] }; // a, A
    key <AB08> { [ 0x10000fe, 0x10000ae ] }; // i, I
};

partial alphanumeric_keys
xkb_symbols "tam_TAB" {

// Description: A keymap based on the TamilNet'99 typewriter keyboard 
// Encoding: TAB (http://www.tamilnet99.org)
// Author: Thuraiappah Vaseeharan <t_vasee@yahoo.com>
// Date  : Sun Aug 12 02:23:00 CDT 2001

    name[Group1]= "Tamil (TAB typewriter)";

    // numeral row
    key <AE01> {  [ 0x10000e7, 0x10000a7 ] } ;
    key <AE02> {  [ 0x10000fa, 0x10000a8 ] } ;
    key <AE03> {  [ 0x10000fb ] } ;
    key <AE04> {  [ 0x10000fc ] } ;
    key <AE05> {  [ 0x10000fd ] } ;
    key <AE06> {  [ 0x10000fe ] } ;
    key <AE07> {  [ 0x10000ff ] } ;

    // q-row
    key <AD01> {  [ 0x10000eb, 0x10000b3 ] };
    key <AD02> {  [ 0x10000f8, 0x10000c1 ] };
    key <AD03> {  [ 0x10000ef, 0x10000b8 ] };
    key <AD04> {  [ 0x10000ea, 0x10000b2 ] };
    key <AD05> {  [ 0x10000f5, 0x10000be ] };
    key <AD06> {  [ 0x10000f4, 0x10000bd ] };
    key <AD07> {  [ 0x10000f3, 0x10000bc ] };
    key <AD08> {  [ 0x10000ac, 0x10000e4 ] };
    key <AD09> {  [ 0x10000ae, 0x10000af ] };
    key <AD10> {  [ 0x10000a4, 0x10000a6 ] };
    key <AD11> {  [ dead_circumflex, 0x10000a6 ] }; // Ukaaram

    // a-row
    key <AC01> {  [ 0x10000f2, 0x10000bb ] };
    key <AC02> {  [ 0x10000f7, 0x10000c0 ] };
    key <AC03> {  [ 0x10000f9, 0x10000c2 ] };
    key <AC04> {  [ 0x10000e8, 0x10000b0 ] };
    key <AC05> {  [ 0x10000f0, 0x10000b9 ] };
    key <AC06> {  [ 0x10000a2, 0x10000a3 ] };
    key <AC07> {  [ 0x10000ee, 0x10000b6 ] };
    key <AC08> {  [ 0x10000f1, 0x10000ba ] };
    key <AC09> {  [ 0x10000ec, 0x10000b4 ] };
    key <AC10> {  [ 0x10000f6, 0x10000bf ] };
    key <AC11> {  [ 0x10000e9, 0x10000b1 ] };

    // z-row
    key <AB01> {  [ 0x10000ed, 0x10000b5 ] };
    key <AB02> {  [ 0x10000e5, 0x10000e6 ] };
    key <AB03> {  [ 0x10000e0, 0x10000e1 ] };
    key <AB04> {  [ 0x10000e2, 0x10000e3 ] };
    key <AB05> {  [ 0x10000aa, 0x10000ab ] };
    key <AB06> {  [ 0x10000ac, 0x10000a3 ] };
    key <AB07> {  [ 0x10000dc, 0x10000dd ] };
    key <AB08> {  [ 0x10000de, 0x10000df ] };
};

partial alphanumeric_keys
xkb_symbols "tel" {

    // Inscript layout for Telugu using Unicode 
    // Author: G Karunakar <karunakar@freedomink.org>
    // Date:
    // See layout at http://www.indlinux.org/keymap/telugu.php

    name[Group1]= "Telugu";

    key <TLDE> { [  U0c4a, U0c12	] };
    key <AE01> { [  U0c67			] };
    key <AE02> { [  U0c68			] };
    key <AE03> { [  U0c69, numbersign	] };
    key <AE04> { [  U0c6a, dollar		] };
    key <AE05> { [  U0c6b, percent		] };
    key <AE06> { [  U0c6c, asciicircum	] };
    key <AE07> { [  U0c6d, ampersand	] };
    key <AE08> { [  U0c6e, asterisk	] };
    key <AE09> { [  U0c6f, parenleft	] };
    key <AE10> { [  U0c66, parenright	] };
    key <AE11> { [  U0c03, underscore	] };
    key <AE12> { [  U0c43, U0c0b	] };
    key <BKSP> { [  BackSpace			] };

    key <AD01> { [  U0c4c, U0c14	] };
    key <AD02> { [  U0c48, U0c10	] };
    key <AD03> { [  U0c3e, U0c06	] };
    key <AD04> { [  U0c40, U0c08	] };
    key <AD05> { [  U0c42, U0c0a	] };
    key <AD06> { [  U0c2c, U0c2d	] };
    key <AD07> { [  U0c39, U0c19	] };
    key <AD08> { [  U0c17, U0c18	] };
    key <AD09> { [  U0c26, U0c27	] };
    key <AD10> { [  U0c1c, U0c1d	] };
    key <AD11> { [  U0c21, U0c22	] };
    key <AD12> { [  U0c1e			] };

    key <AC01> { [  U0c4b, U0c13	] };
    key <AC02> { [  U0c47, U0c0f	] };
    key <AC03> { [  U0c4d, U0c05	] };
    key <AC04> { [  U0c3f, U0c07	] };
    key <AC05> { [  U0c41, U0c09	] };
    key <AC06> { [  U0c2a, U0c2b	] };
    key <AC07> { [  U0c30, U0c31	] };
    key <AC08> { [  U0c15, U0c16	] };
    key <AC09> { [  U0c24, U0c25	] };
    key <AC10> { [  U0c1a, U0c1b	] };
    key <AC11> { [  U0c1f, U0c20	] };

    key <AB01> { [  U0c46, U0c0e	] };
    key <AB02> { [  U0c02, U0c01	] };
    key <AB03> { [  U0c2e, U0c23	] };
    key <AB04> { [  U0c28			] };
    key <AB05> { [  U0c35			] };
    key <AB06> { [  U0c32, U0c33	] };
    key <AB07> { [  U0c38, U0c36	] };
    key <AB08> { [  comma     , U0c37	] };
    key <AB09> { [  period    				] };
    key <AB10> { [  U0c2f, U0040	] };

    key <RALT> {        
        symbols[Group1] = [ Mode_switch, Multi_key ],
        virtualMods = AltGr
    };
    include "rupeesign(4)"
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "urd-phonetic" {
    include "pk(urd-phonetic)"
    name[Group1]= "Urdu (phonetic)";
};

partial alphanumeric_keys
xkb_symbols "urd-phonetic3" {
    include "pk(urd-crulp)"
    name[Group1]= "Urdu (alternative phonetic)";
};

partial alphanumeric_keys
xkb_symbols "urd-winkeys" {
    include "pk(urd-nla)"
    name[Group1]= "Urdu (WinKeys)";
};

// based on a keyboard map from an 'xkb/symbols/gur' file

partial alphanumeric_keys
xkb_symbols "guru" {
      name[Group1]= "Punjabi (Gurmukhi)";

      // Mainly numbers.
      key <AE01> { [      U0A67 		]	};
      key <AE02> { [      U0A68		]	};
      key <AE03> { [      U0A69, U0A71	]	};
      key <AE04> { [      U0A6A, U0A74	 	]	};
      key <AE05> { [      U0A6B, U262C		]	};
      key <AE06> { [      U0A6C  	 	]	};
      key <AE07> { [      U0A6D 		]	};
      key <AE08> { [      U0A6e  	 	]	};
      key <AE09> { [      U0A6F, parenleft 	]	};
      key <AE10> { [      U0A66, parenright ]	};
      key <AE11> { [      U0A03 	 	]	};
      key <AE12> { [      equal,	plus 	]	};

// Mainly long vowels

      key <AD01> { [      U0A4C, U0A14  ]	};
      key <AD02> { [      U0A48, U0A10  ]	};
      key <AD03> { [      U0A3E, U0A06  ]	};
      key <AD04> { [      U0A40, U0A08  ]	};
      key <AD05> { [      U0A42, U0A0A  ]	};

// Mainly voiced consonants

      key <AD06> { [      U0A2C, U0A2D 	]	};
      key <AD07> { [      U0A39, U0A19 	]	};
      key <AD08> { [      U0A17, U0A18 	]	};
      key <AD09> { [      U0A26, U0A27 	]	};
      key <AD10> { [      U0A1C, U0A1D 	]	};
      key <AD11> { [      U0A21, U0A22 	]	};
      key <AD12> { [      U0A3C, U0A1E 	]	};

// Mainly short vowels
      key <AC01> { [      U0A4B, U0A13  ]	};
      key <AC02> { [      U0A47, U0A0F  ]	};
      key <AC03> { [      U0A4D, U0A05  ]	};
      key <AC04> { [      U0A3F, U0A07  ]	};
      key <AC05> { [      U0A41, U0A09  ]	};

// Mainly unvoiced consonants

      key <AC06> { [      U0A2A, U0A2B 	]	};
      key <AC07> { [      U0A30, U0A5C 	]	};
      key <AC08> { [      U0A15, U0A16 	]	};
      key <AC09> { [      U0A24, U0A25 	]	};
      key <AC10> { [      U0A1A, U0A1B 	]	};
      key <AC11> { [      U0A1F, U0A20 	]	};
      key <BKSL> { [      U005C, U007C	]	};

      key <AB01> { [      z, 	 U0A01	]       };
      key <AB02> { [      U0A02, U0A70, U0A71  ]       };
      key <AB03> { [      U0A2E, U0A23  ]       };
      key <AB04> { [      U0A28, U0A28  ]       };
      key <AB05> { [      U0A35, U0A35  ]       };
      key <AB06> { [      U0A32, U0A33  ]       };
      key <AB07> { [      U0A38, U0A36  ]       };
      key <AB08> { [      comma,     less       ]       };
      key <AB09> { [      period,    U0964  ]       };
      key <AB10> { [      U0A2F, question   ]       };

    include "rupeesign(4)"
    include "level3(ralt_switch)"
};

//Name		:	Jhelum (Refind Inscript)
//Description	:	A Jhelum keyboard layout for Gurmukhi (Punjabi)
//			http://www.satluj.org/Jhelum.html
//Modified for Inscript to make
//Original Author :	Amanpreet Singh Alam <apreet.alam@gmail.com

partial alphanumeric_keys
xkb_symbols "jhelum" {
      name[Group1] = "Punjabi (Gurmukhi Jhelum)";
          key.type="FOUR_LEVEL";

     // Roman digits
     key <TLDE>  { [  apostrophe, asciitilde, U0A02,U0A01 ] }; // apostrophe: anusvara, candrabindu
     key <AE01>  { [   1,exclam,	U0A67,	exclam	   ] };
     key <AE02>  { [   2,at,	U0A68,	at	   ] };
     key <AE03>  { [   3,numbersign, U0A69,	numbersign ] };
     key <AE04>  { [   4,dollar,	U0A6A		 ] };
     key <AE05>  { [   5,percent,U0A6B,	percent    ] };
     key <AE06>  { [   6,U0A73, U0A6C,asciicircum ] };
     key <AE07>  { [   7,U0A72,U0A6D,ampersand  ] };
     key <AE08>  { [   8,asterisk,U0A6E,	asterisk   ] };
     key <AE09>  { [   9,parenleft,U0A6F,parenleft  ] };
     key <AE10>  { [   0,parenright,U0A66,parenright ] };
     key <AE11>	{ [   minus,underscore] };
     key <AE12>	{ [   equal,plus] };
     key <BKSL>  { [   U0964,U0965,U007C,U005C] }; //pipe : danda, double danda

     //Q Row	
     key <AD01>   { [   U0A4C, 	U0A14   ] };  // Q: oo, ooh
     key <AD02>   { [   U0A48,  	U0A10	] };  // W: ee, ae
     key <AD03>   { [   U0A3E,   U0A06  ] };  // E: a, aa
     key <AD04>   { [   U0A40,	U0A08, U20B9  	] };  // R: ee, ai, rupeesign
     key <AD05>   { [   U0A42,   U0A0A   ] };  // T: u, uu
     key <AD06>   { [   U0A30,	U0A5C   ] };  // Y: ra, raa
     key <AD07>   { [   U0A26,   U0A27   ] };  // U: tha, thha
     key <AD08>   { [   U0A17,   U0A18, U0A5A   ] };  // I:ga, gha
     key <AD09>   { [   U0A24,   U0A1F   ] };  // O: ta, tha
     key <AD10>   { [   U0A2A,   U0A5E, VoidSymbol,U0A5E  ] };  // P: pa, pha
     key <AD11>   { [   U0A21,   U0A22,   bracketleft,   braceleft   ] };
     key <AD12>	 { [   U0A19,   U0A1E,   bracketright, braceright   ] };

     //A Row
     key <AC01>   { [   U0A4B,	 U0A13  ] };   // A: o, oo
     key <AC02>   { [   U0A47,    U0A0F   ] };  // S: e, ee
     key <AC03>   { [   U0A4D,    U0A05   ] };  // D: halant, aa
     key <AC04>   { [   U0A3F,    U0A07   ] };  // F: i, aa
     key <AC05>   { [   U0A41,    U0A09   ] };  // G: u, uh
     key <AC06>   { [   U0A39,    U0A20   ] };  // H: ha, thha
     key <AC07>   { [   U0A1C,    U0A1D, U0A5B   ] };  // J: ja, jha
     key <AC08>   { [   U0A15,    U0A16,VoidSymbol ,U0A59   ] };  // K: ka, kha
     key <AC09>   { [   U0A32,	 U0A25, U0A33   ] };  // L: la, tha
     key <AC10>   { [   U0A38,   colon, U0A36  ] }; //; sa
     key <AC11>   { [apostrophe, quotedbl ] };

     //Z Row
     key <AB01>   { [   U0A71,	 U0A3C 	 ] };  // Z: addak, par bindi
     key <AB02>   { [   U0A02,    U0A70	 ] };  // X: bindi, tippi
     key <AB03>   { [   U0A1A,    U0A1B   ] };  // C: ca, cha
     key <AB04>   { [   U0A35,    U0A2F   ] };  // V: va, ya
     key <AB05>   { [   U0A2C,    U0A2D   ] };  // B: ba, bha
     key <AB06>   { [   U0A28,    U0A23   ] };  // N: na, nha
     key <AB07>   { [   U0A2E, U0A2E       ] };  // M: ma
     key <AB08>   { [   comma,    U262C	 ] };// comma: comma, dev abbreviation sign
     key <AB09>   { [   period,   U0A74 	 ] };  // period: period, nukta
     key <AB10>   { [   slash,   question ] };

//    modifier_map Shift  { Shift_L };
//    modifier_map Lock   { Caps_Lock };
//    modifier_map Control{ Control_L };
//    modifier_map Mod3   { Mode_switch };
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "olpc" {

// Contact: Walter Bender <walter@laptop.org>

  include "in(deva)"
  key <TLDE> { [	U094A,	U0912 ] }; // DEVANAGARI VOWEL SIGN SHORT O; DEVANAGARI LETTER SHORT O
  key <AE01> { [	U0967,	U090D ] }; // DEVANAGARI DIGIT ONE; DEVANAGARI LETTER CANDRA E
  key <AE02> { [	U0968,	U0945 ] }; // DEVANAGARI DIGIT TWO; DEVANAGARI VOWEL SIGN CANDRA E
  key <AE03> { [	U0969	 ] }; // DEVANAGARI DIGIT THREE;
  key <AE04> { [	U096A	 ] }; // DEVANAGARI DIGIT FOUR;
  key <AE05> { [	U096B	 ] }; // DEVANAGARI DIGIT FIVE;
  key <AE06> { [	U096C	 ] }; // DEVANAGARI DIGIT SIX;
  key <AE07> { [	U096D	 ] }; // DEVANAGARI DIGIT SEVEN;
  key <AE08> { [	U096E	 ] }; // DEVANAGARI DIGIT EIGHT;
  key <AE09> { [	U096F,	parenleft ] }; // DEVANAGARI DIGIT NINE;
  key <AE10> { [	U0966,	parenright ] }; // DEVANAGARI DIGIT ZERO;
  key <AE11> { [	minus,		U0903 ] }; // DEVANAGARI SIGN VISARGA;
  key <AE12> { [	U0943,	U090B ] }; // DEVANAGARI VOWEL SIGN VOCALIC R; DEVANAGARI LETTER VOCALIC R

  key <AD01> { [	U094C,	U0914 ] }; // DEVANAGARI VOWEL SIGN AU; DEVANAGARI LETTER AU
  key <AD02> { [	U0948,	U0910 ] }; // DEVANAGARI VOWEL SIGN AI; DEVANAGARI LETTER AI
  key <AD03> { [	U093E,	U0906 ] }; // DEVANAGARI VOWEL SIGN AA; DEVANAGARI LETTER AA
  key <AD04> { [	U0940,	U0908 ] }; // DEVANAGARI VOWEL SIGN II; DEVANAGARI LETTER II
  key <AD05> { [	U0942,	U090A ] }; // DEVANAGARI VOWEL SIGN UU; DEVANAGARI LETTER UU
  key <AD06> { [	U092C,	U092D ] }; // DEVANAGARI LETTER BA; DEVANAGARI LETTER BHA
  key <AD07> { [	U0939,	U0919 ] }; // DEVANAGARI LETTER HA; DEVANAGARI LETTER NGA
  key <AD08> { [	U0917,	U0918 ] }; // DEVANAGARI LETTER GA; DEVANAGARI LETTER GHA
  key <AD09> { [	U0926,	U0927 ] }; // DEVANAGARI LETTER DA; DEVANAGARI LETTER DHA
  key <AD10> { [	U091C,	U091D ] }; // DEVANAGARI LETTER JA; DEVANAGARI LETTER JHA
  key <AD11> { [	U0921,	U0922 ] }; // DEVANAGARI LETTER DDA; DEVANAGARI LETTER DDHA
  key <AD12> { [	U093C,	U091E ] }; // DEVANAGARI SIGN NUKTA; DEVANAGARI LETTER NYA

  key <BKSL> { [	U0949,	U0911 ] }; // DEVANAGARI VOWEL SIGN CANDRA O; DEVANAGARI LETTER CANDRA O

  key <AC01> { [	U094B,	U0913 ] }; // DEVANAGARI VOWEL SIGN O; DEVANAGARI LETTER O
  key <AC02> { [	U0947,	U090F ] }; // DEVANAGARI VOWEL SIGN E; DEVANAGARI LETTER E
  key <AC03> { [	U094D,	U0905 ] }; // DEVANAGARI SIGN VIRAMA; DEVANAGARI LETTER A
  key <AC04> { [	U093F,	U0907 ] }; // DEVANAGARI VOWEL SIGN I; DEVANAGARI LETTER I
  key <AC05> { [	U0941,	U0909 ] }; // DEVANAGARI VOWEL SIGN U; DEVANAGARI LETTER U
  key <AC06> { [	U092A,	U092B ] }; // DEVANAGARI LETTER PA; DEVANAGARI LETTER PHA
  key <AC07> { [	U0930,	U0931 ] }; // DEVANAGARI LETTER RA; DEVANAGARI LETTER RRA
  key <AC08> { [	U0915,	U0916 ] }; // DEVANAGARI LETTER KA; DEVANAGARI LETTER KHA
  key <AC09> { [	U0924,	U0925 ] }; // DEVANAGARI LETTER TA; DEVANAGARI LETTER THA
  key <AC10> { [	U091A,	U091B ] }; // DEVANAGARI LETTER CA; DEVANAGARI LETTER CHA
  key <AC11> { [	U091F,	U0920 ] }; // DEVANAGARI LETTER TTA; DEVANAGARI LETTER TTHA

  key <AB01> { [	U0946,	U090E ] }; // DEVANAGARI VOWEL SIGN SHORT E; DEVANAGARI LETTER SHORT E
  key <AB02> { [	U0902,	U0901 ] }; // DEVANAGARI SIGN ANUSVARA; DEVANAGARI SIGN CANDRABINDU
  key <AB03> { [	U092E,	U0923 ] }; // DEVANAGARI LETTER MA; DEVANAGARI LETTER NNA
  key <AB04> { [	U0928,	U0929 ] }; // DEVANAGARI LETTER NA; DEVANAGARI LETTER NNNA
  key <AB05> { [	U0935,	U0934 ] }; // DEVANAGARI LETTER VA; DEVANAGARI LETTER LLLA
  key <AB06> { [	U0932,	U0933 ] }; // DEVANAGARI LETTER LA; DEVANAGARI LETTER LLA
  key <AB07> { [	U0938,	U0936 ] }; // DEVANAGARI LETTER SA; DEVANAGARI LETTER SHA
  key <AB08> { [	comma,		U0937 ] }; // DEVANAGARI LETTER SSA
  key <AB09> { [	period,		U0964 ] }; // DEVANAGARI DANDA
  key <AB10> { [	U092F,	U095F ] }; // DEVANAGARI LETTER YA; DEVANAGARI LETTER YYA

  // space, space, Zero-Width-Non-Joiner (ZWNJ), Zero-Width-Joiner (ZWJ):
  include "nbsp(zwnj3zwj4)"

  include "group(olpc)"
  include "rupeesign(4)"
  include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "hin-wx" {

    name[Group1]= "Hindi (Wx)";

      key <TLDE> {	 [     grave, asciitilde, 2, 3    ]	};

      key <AE01> {	 [      0x1000967, exclam 		]	};
      key <AE02> {	 [      0x1000968, at 		]	};
      key <AE03> {	 [      0x1000969 , numbersign	 		]	};
      key <AE04> {	 [      0x100096A , dollar		]	};
      key <AE05> {	 [      0x100096B , percent 	 		]	};
      key <AE06> {	 [      0x100096C , asciicircum	 		]	};
      key <AE07> {	 [      0x100096D , ampersand                       ]	};
      key <AE08> {	 [      0x100096e , asterisk 	 		]	};
      key <AE09> {	 [      0x100096F, parenleft 		]	};
      key <AE10> {	 [      0x1000966, parenright 		]	};
      key <AE11> {	 [      minus, underscore 	 		]	};
      key <AE12> {	 [      equal, plus 		]	};


      key <AD01> {	 [      0x1000943,  0x1000944, 0x100090B, 0x1000960]	};
      key <AD02> {	 [      0x1000924,  0x1000925       	]	};
      key <AD03> {	 [      0x1000947,  0x1000948, 0x100090F, 0x1000910]	};
      key <AD04> {	 [      0x1000930,  0x1000937       	]	};
      key <AD05> {	 [      0x100091F,  0x1000920       	]	};


      key <AD06> {	 [      0x100092F 		]	};
      key <AD07> {	 [      0x1000941,  0x1000942, 0x1000909, 0x100090A ]	};
      key <AD08> {	 [      0x100093F,  0x1000940, 0x1000907, 0x1000908 ]	};
      key <AD09> {	 [      0x100094B,  0x100094C, 0x1000913, 0x1000914]	};
      key <AD10> {	 [      0x100092A,  0x100092B 		]	};
      key <AD11> {	 [      bracketleft, braceleft  		]	};
      key <AD12> {	 [      bracketright, braceright  		]	};
      key <BKSL> {       [      backslash, bar, 0x1000964, 0x1000965 ] };

      key <AC01> {	 [      0x100094D,  0x100093E, 0x1000905,0x1000906 ] 	};
      key <AC02> {	 [      0x1000938,  0x1000936       	]	};
      key <AC03> {	 [      0x1000921,  0x1000922       	]	};
      key <AC04> {	 [      0x1000919,  0x100091E       	]	};
      key <AC05> {	 [      0x1000917,  0x1000918       	]	};


      key <AC06> {	 [      0x1000939,  0x1000903 		]	};
      key <AC07> {	 [      0x100091C,  0x100091D 		]	};
      key <AC08> {	 [      0x1000915,  0x1000916 		]	};
      key <AC09> {	 [      0x1000932,  0x1000962, 0x1000933, 0x100090C]	};
      key <AC10> {	 [      semicolon, colon  		]	};
      key <AC11> {	 [      apostrophe, quotedbl 		]	};

      key <AB01> {	 [      0x1000901,   0x100093C, 0x100093D, 0x1000950]   };
      key <AB02> {       [      0x1000926,   0x1000927      ]       };
      key <AB03> {       [      0x100091A,   0x100091B         ]       };
      key <AB04> {       [      0x1000935                      ]       };
      key <AB05> {       [      0x100092C,   0x100092D        ]       };
      key <AB06> {       [      0x1000928,   0x1000923         ]       };
      key <AB07> {       [      0x100092E,   0x1000902         ]       };
      key <AB08> {       [      comma,       less         ]       };
      key <AB09> {       [      period,      greater       ]       };
      key <AB10> {       [      slash,      question        ]       };

    include "level3(ralt_switch)"
    include "rupeesign(4)"
};

partial alphanumeric_keys
xkb_symbols "eng" {

    include "us(basic)"
    name[Group1]= "English (India, with rupee sign)";

    include "rupeesign(4)"
    include "level3(ralt_switch)"
};


// Description : Enhanced INSCRIPT keymap for Malayalam
// Encoding    : Unicode (http://www.unicode.org)
// Author      : Mahesh T Pai <paivakil@gmail.com>
// Date        : March, 2011
// Source      : http://www.nongnu.org/smc/docs/images/ml_inscript_layout.jpg
// Comment     : Based on the Inscript Keyboard created by M Baiju
// Mapping:

partial alphanumeric_keys
xkb_symbols "mal_enhanced" {

    name[Group1] = "Malayalam (enhanced Inscript, with rupee sign)";

   //From grave to backslash (\)

      key <TLDE> { [ U0d4a ,       U0d12 ] };
      key <AE01> { [ U0d67 ,      exclam ] };
      key <AE02> { [ U0d68 ,          at ] };
      key <AE03> { [ U0d69 ,  numbersign ] };
      key <AE04> { [ U0d6a ,      dollar ] };
      key <AE05> { [ U0d6b ,     percent ] };
      key <AE06> { [ U0d6c , asciicircum ] };
      key <AE07> { [ U0d6d ,   ampersand ] };
      key <AE08> { [ U0d6e ,       U0d7e ] };
      key <AE09> { [ U0d6f ,   parenleft ] };
      key <AE10> { [ U0d66 ,  parenright ] };

      key <AE11> { [ minus , U0d03       ] };
      key <AE12> { [ U0d43 , U0d0b       ] };
      key <BKSL> { [ U0d7c , U05C        ] }; //bksl: chillu RR 


  // From 'q' to right bracket (])

    key <AD01> { [ U0d57 , U0d14 ] };
    key <AD02> { [ U0d48 , U0d10 ] };
    key <AD03> { [ U0d3e , U0d06 ] };
    key <AD04> { [ U0d40 , U0d08 ] };
    key <AD05> { [ U0d42 , U0d0a ] };
    key <AD06> { [ U0d2c , U0d2d ] };
    key <AD07> { [ U0d39 , U0d19 ] };
    key <AD08> { [ U0d17 , U0d18 ] };
    key <AD09> { [ U0d26 , U0d27 ] };
    key <AD10> { [ U0d1c , U0d1d ] };
    key <AD11> { [ U0d21 , U0d22 ] };
    key <AD12> { [ U0200d , U0d1e ] };

    // From 'a' to apostrophe (')

    key <AC01> { [ U0d4b , U0d13 ] };
    key <AC02> { [ U0d47 , U0d0f ] };
    key <AC03> { [ U0d4d , U0d05 ] };
    key <AC04> { [ U0d3f , U0d07 ] };
    key <AC05> { [ U0d41 , U0d09 ] };
    key <AC06> { [ U0d2a , U0d2b ] };
    key <AC07> { [ U0d30 , U0d31 ] };
    key <AC08> { [ U0d15 , U0d16 ] };
    key <AC09> { [ U0d24 , U0d25 ] };
    key <AC10> { [ U0d1a , U0d1b ] };
    key <AC11> { [ U0d1f , U0d20 ] };

    // From 'z' to slash (/)

    key <AB01> { [ U0d46 , U0d0e ] };
    key <AB02> { [ U0d02 , U0d7a ] };
    key <AB03> { [ U0d2e , U0d23 ] };
    key <AB04> { [ U0d28 , U0d7b ] };
    key <AB05> { [ U0d35 , U0d34 ] };
    key <AB06> { [ U0d32 , U0d33 ] };
    key <AB07> { [ U0d38 , U0d36 ] };
    key <AB08> { [ comma , U0d37 ] };
    key <AB09> { [ period , U0d7d ] }; //chillu l
    key <AB10> { [ U0d2f , question ] };

    include "rupeesign(4)"
    include "level3(ralt_switch)"
};


// ---- BEGIN Hindi KaGaPa phonetic ----
// Name:        KaGaPa phonetic
// Brief:       Devanagari layout (Hindi, Sanskrit, Nepali, Marathi, etc.)
// Diagram:     (Original)[http://baraha.com/help/Keyboards/dev_brhkbd.htm]
//              (This layout)[http://bdsatish.in/lang/dev-kagapa.png]
//
// Description: Based on KaGaPa layout (also called Baraha layout or Nudi layout)
//              which is a modified layout of the specification by Dr. K. P. Rao.
//              This is a phonetic layout with the following features:
//              [1] All letters are mapped to phonetically-similar English keys
//                  as much as possible.
//              [2] The independent vowel (svara) and its dependent vowel (maatra)
//                  use the same key (depending upon SHIFT, ALTGR or ALTGR + SHIFT).
//              [3] Consonant conjuncts are produced by explicitly invoking the
//                  'viraama' (key f). The 'short a' maatra is implicit in all
//                  consonants.
//              [4] Zero width non-joiner and joiner are on keys 6 and 7
//                  respectively. These are absolutely essential for alternative
//                  glyph renderings of consonant half-forms.
//              [5] Rigvedic accent marks, visarga variants.
//
// Author:      Satish BD <bdsatish@gmail.com>
//
partial alphanumeric_keys
xkb_symbols "hin-kagapa" {
     name[Group1] = "Hindi (KaGaPa phonetic)";
     key.type="FOUR_LEVEL";

    // Roman digits
    key <TLDE>  { [   apostrophe,   asciitilde,   U201C          ] };  // U201C: left double quotation mark
    key <AE01>  { [   1,            exclam,       U0967          ] };
    key <AE02>  { [   2,            at,           U0968,  U20A8  ] };  // U20A8: generic rupee sign (Rs)
    key <AE03>  { [   3,            numbersign,   U0969          ] };
    key <AE04>  { [   4,            dollar,       U096A,  U20B9  ] };  // U20B9: new Indian rupee sign
    key <AE05>  { [   5,            percent,      U096B          ] };
    key <AE06>  { [   6,            asciicircum,  U096C,  U200C  ] };  // ZWNJ
    key <AE07>  { [   7,            ampersand,    U096D,  U200D  ] };  // ZWJ
    key <AE08>  { [   8,            asterisk,     U096E,  U0901  ] };  // U0901: Devanagari candrabindu
    key <AE09>  { [   9,            parenleft,    U096F          ] };
    key <AE10>  { [   0,            parenright,   U0966,  U0970  ] };  // U0970: Devanagari abbreviation sign
    key <AE11>  { [   minus,        underscore,   U0952          ] };  // U0952: Devanagari stress sign anudatta
    key <AE12>  { [   equal,        plus                         ] };
    key <BKSL>  { [   U005C,        U007C,        U0964,  U0965  ] };  // backslash, pipe, danda, double danda

    //Q Row
    key <AD01>  { [   U091F,         U0920                       ] };  // Q: retroflex Ta, Tha
    key <AD02>  { [   U0921,         U0922,      U095C,  U095D   ] };  // W: retroflex Da, Dha, Da-nukta, Dha-nukta
    key <AD03>  { [   U0946,         U0947,      U090E,  U090F   ] };  // E: matras, short E, long E
    key <AD04>  { [   U0930,         U0943,      U090B,  U0931   ] };  // R: ra, vocalic R matra, vocalic R, ra-nukta
    key <AD05>  { [   U0924,         U0925                       ] };  // T: dental ta, tha
    key <AD06>  { [   U092F,         U0948,      U0910,  U095F   ] };  // Y: ya, ai matra, ai, ya-nukta
    key <AD07>  { [   U0941,         U0942,      U0909,  U090A   ] };  // U: matras, u, uu
    key <AD08>  { [   U093F,         U0940,      U0907,  U0908   ] };  // I: matras, i, ii
    key <AD09>  { [   U094A,         U094B,      U0912,  U0913   ] };  // O: matras, short o, long o
    key <AD10>  { [   U092A,         U092B,      U095E           ] };  // P: pa, pha, pha-nukta
    key <AD11>  { [   bracketleft,   braceleft                   ] };
    key <AD12>  { [   bracketright,  braceright                  ] };

    //A Row
    key <AC01>  { [   U093E,        U0906,     U0905,    U0972   ] };  // A: aa matra, aa, short a, candra a
    key <AC02>  { [   U0938,        U0936                        ] };  // S: sa, sha
    key <AC03>  { [   U0926,        U0927                        ] };  // D: dental da, dha
    key <AC04>  { [   U094D,        U0944,     U0960             ] };  // F: virama, vocalic RR matra, vocalic RR
    key <AC05>  { [   U0917,        U0918,     U095A             ] };  // G: ga, gha, ga-nukta
    key <AC06>  { [   U0939,        U0903,     U1CF5,    U1CF6   ] };  // H: ha, visarga, jihvamuliya, upadhmaniya
    key <AC07>  { [   U091C,        U091D,     U095B             ] };  // J: ja, jha, ja-nukta
    key <AC08>  { [   U0915,        U0916,     U0958,    U0959   ] };  // K: ka, kha, ka-nukta, kha-nukta
    key <AC09>  { [   U0932,        U0933,     U0962,    U090C   ] };  // L: la, lla, vocalic L matra, vocalic L
    key <AC10>  { [   semicolon,    colon,     U1CF2,    U1CF3   ] };  // U1CF2/3: ardhavisarga/rotated ardhavisarga
    key <AC11>  { [   apostrophe,   quotedbl,  U0951,    U201D   ] };  // U0951: Devanagari stress sign udatta
                                                                       // U201D: Right double quotation mark
    //Z Row
    key <AB01>  { [   U091E,   U0919                   ] };  // Z: nya, nga
    key <AB02>  { [   U0937,   U093C,  U0934           ] };  // X: ssa, nukta below, lla-nukta
    key <AB03>  { [   U091A,   U091B                   ] };  // C: ca, cha
    key <AB04>  { [   U0935,   U094C,  U0914           ] };  // V: va, matra au, au
    key <AB05>  { [   U092C,   U092D                   ] };  // B: ba, bha
    key <AB06>  { [   U0928,   U0923,  U0929           ] };  // N: na, nna, nnna
    key <AB07>  { [   U092E,   U0902,  U093D,  U0950   ] };  // M: ma, anusvara, avagraha, Devanagari OM
    key <AB08>  { [   comma,   U003C,  U0945,  U090D   ] };  // comma: comma, less than, matra, candra e
    key <AB09>  { [   period,  U003E,  U0949,  U0911   ] };  // period: period, greater than, matra, candra o
    key <AB10>  { [   slash,   question                ] };

    include "level3(ralt_switch)"
};
// ---- END Hindi KaGaPa ----

// Sanskrit uses Devanagari layout of Hindi
partial alphanumeric_keys
xkb_symbols "san-kagapa" {
  include "in(hin-kagapa)"
  name[Group1] = "Sanskrit (KaGaPa phonetic)";
};

// Marathi uses Devanagari layout of Hindi
partial alphanumeric_keys
xkb_symbols "mar-kagapa" {
  include "in(hin-kagapa)"
  name[Group1] = "Marathi (KaGaPa phonetic)";
};


// ---- BEGIN Kannada KaGaPa phonetic ----
// Name:        Kannada KaGaPa phonetic
// Diagram:     (Original)[http://www.baraha.com/help/Keyboards/kan_brhkbd.htm]
//              (This layout)[http://bdsatish.in/lang/kan-kagapa.png]
//
// Description: Based on KaGaPa layout (also called Baraha layout or Nudi layout).
//              See the description to "hin-kagapa" above.
//              Certain punctuation characters from Devanagari block are
//              retained for compatibility.
//
// Author:      Satish BD <bdsatish@gmail.com>
//
partial alphanumeric_keys
xkb_symbols "kan-kagapa" {
    name[Group1] = "Kannada (KaGaPa phonetic)";
    key.type="FOUR_LEVEL";

    // Roman digits
    key <TLDE>  { [   apostrophe,   asciitilde,   U201C          ] };  // U201C: left double quotation mark
    key <AE01>  { [   1,            exclam,       U0CE7          ] };
    key <AE02>  { [   2,            at,           U0CE8,  U20A8  ] };  // U20A8: generic rupee sign (Rs)
    key <AE03>  { [   3,            numbersign,   U0CE9          ] };
    key <AE04>  { [   4,            dollar,       U0CEA,  U20B9  ] };  // U20B9: new Indian rupee sign
    key <AE05>  { [   5,            percent,      U0CEB          ] };
    key <AE06>  { [   6,            asciicircum,  U0CEC,  U200C  ] };  // ZWNJ
    key <AE07>  { [   7,            ampersand,    U0CED,  U200D  ] };  // ZWJ
    key <AE08>  { [   8,            asterisk,     U0CEE,  U0901  ] };  // U0901: Devanagari candrabindu
    key <AE09>  { [   9,            parenleft,    U0CEF          ] };
    key <AE10>  { [   0,            parenright,   U0CE6          ] };
    key <AE11>  { [   minus,        underscore,   U0952          ] };  // U0952: Devanagari stress sign anudatta
    key <AE12>  { [   equal,        plus                         ] };
    key <BKSL>  { [   U005C,        U007C,        U0964,  U0965  ] };  // backslash, pipe, danda, double danda

    //Q Row
    key <AD01>  { [   U0C9F,         U0CA0                       ] };  // Q: retroflex Ta, Tha
    key <AD02>  { [   U0CA1,         U0CA2                       ] };  // W: retroflex Da, Dha
    key <AD03>  { [   U0CC6,         U0CC7,      U0C8E,  U0C8F   ] };  // E: matras, short E, long E
    key <AD04>  { [   U0CB0,         U0CC3,      U0C8B,  U0CB1   ] };  // R: ra, vocalic R matra, vocalic R, RRA
    key <AD05>  { [   U0CA4,         U0CA5                       ] };  // T: dental ta, tha
    key <AD06>  { [   U0CAF,         U0CC8,      U0C90           ] };  // Y: ya, ai matra, ai
    key <AD07>  { [   U0CC1,         U0CC2,      U0C89,  U0C8A   ] };  // U: matras, u, uu
    key <AD08>  { [   U0CBF,         U0CC0,      U0C87,  U0C88   ] };  // I: matras, i, ii
    key <AD09>  { [   U0CCA,         U0CCB,      U0C92,  U0C93   ] };  // O: matras, short o, long o
    key <AD10>  { [   U0CAA,         U0CAB                       ] };  // P: pa, pha
    key <AD11>  { [   bracketleft,   braceleft                   ] };
    key <AD12>  { [   bracketright,  braceright                  ] };

    //A Row
    key <AC01>  { [   U0CBE,        U0C86,     U0C85             ] };  // A: aa matra, aa, short a
    key <AC02>  { [   U0CB8,        U0CB6                        ] };  // S: sa, sha
    key <AC03>  { [   U0CA6,        U0CA7                        ] };  // D: dental da, dha
    key <AC04>  { [   U0CCD,        U0CC4,     U0CE0             ] };  // F: virama, vocalic RR matra, vocalic RR
    key <AC05>  { [   U0C97,        U0C98                        ] };  // G: ga, gha
    key <AC06>  { [   U0CB9,        U0C83,     U0CF1,    U0CF2   ] };  // H: ha, visarga, jihvanuliya, upadhmaniya
    key <AC07>  { [   U0C9C,        U0C9D                        ] };  // J: ja, jha
    key <AC08>  { [   U0C95,        U0C96                        ] };  // K: ka, kha
    key <AC09>  { [   U0CB2,        U0CB3,     U0CE2,    U0C8C   ] };  // L: la, lla, vocalic L matra, vocalic L
    key <AC10>  { [   semicolon,    colon                        ] };
    key <AC11>  { [   apostrophe,   quotedbl,  U0951,    U201D   ] };  // U0951: Devanagari stress sign udatta
                                                                       // U201D: Right double quotation mark
    //Z Row
    key <AB01>  { [   U0C9E,   U0C99                   ] };  // Z: nya, nga
    key <AB02>  { [   U0CB7,   U0CBC,  U0CDE           ] };  // X: ssa, nukta below, LLLA
    key <AB03>  { [   U0C9A,   U0C9B                   ] };  // C: ca, cha
    key <AB04>  { [   U0CB5,   U0CCC,  U0C94           ] };  // V: va, matra au, au
    key <AB05>  { [   U0CAC,   U0CAD                   ] };  // B: ba, bha
    key <AB06>  { [   U0CA8,   U0CA3                   ] };  // N: na, nna
    key <AB07>  { [   U0CAE,   U0C82,  U0CBD,  U0950   ] };  // M: ma, anusvara, avagraha, Devanagari OM
    key <AB08>  { [   comma,   U003C,  U0CB1           ] };  // comma: comma, less than, RRA
    key <AB09>  { [   period,  U003E,  U0CDE           ] };  // period: period, greater than, LLLA
    key <AB10>  { [   slash,   question                ] };

    include "level3(ralt_switch)"
};
// ---- END Kannada KaGaPa ----


// ---- BEGIN Telugu KaGaPa phonetic ----
// Name:        Telugu KaGaPa phonetic
// Diagram:     (Original)[http://www.baraha.com/help/Keyboards/tel_brhkbd.htm]
//              (This layout)[http://bdsatish.in/lang/tel-kagapa.png]
//
// Description: Based on KaGaPa layout (also called Baraha layout or Nudi layout).
//              See the description to "hin-kagapa" above.
//              Certain punctuation characters from Devanagari block are
//              retained for compatibility.
//
// Author:      Satish BD <bdsatish@gmail.com>
//
partial alphanumeric_keys
xkb_symbols "tel-kagapa" {
    name[Group1] = "Telugu (KaGaPa phonetic)";
    key.type="FOUR_LEVEL";

    // Roman digits
    key <TLDE>  { [   apostrophe,   asciitilde,   U201C          ] };  // U201C: left double quotation mark
    key <AE01>  { [   1,            exclam,       U0C67          ] };
    key <AE02>  { [   2,            at,           U0C68,  U20A8  ] };  // U20A8: generic rupee sign (Rs)
    key <AE03>  { [   3,            numbersign,   U0C69          ] };
    key <AE04>  { [   4,            dollar,       U0C6A,  U20B9  ] };  // U20B9: new Indian rupee sign
    key <AE05>  { [   5,            percent,      U0C6B          ] };
    key <AE06>  { [   6,            asciicircum,  U0C6C,  U200C  ] };  // ZWNJ
    key <AE07>  { [   7,            ampersand,    U0C6D,  U200D  ] };  // ZWJ
    key <AE08>  { [   8,            asterisk,     U0C6E,  U0C01  ] };  // U0C01: Telugu arasunna
    key <AE09>  { [   9,            parenleft,    U0C6F          ] };
    key <AE10>  { [   0,            parenright,   U0C66          ] };
    key <AE11>  { [   minus,        underscore,   U0952          ] };  // U0952: Devanagari stress sign anudatta
    key <AE12>  { [   equal,        plus                         ] };
    key <BKSL>  { [   U005C,        U007C,        U0964,  U0965  ] };  // backslash, pipe, danda, double danda

    //Q Row
    key <AD01>  { [   U0C1F,         U0C20                       ] };  // Q: retroflex Ta, Tha
    key <AD02>  { [   U0C21,         U0C22                       ] };  // W: retroflex Da, Dha
    key <AD03>  { [   U0C46,         U0C47,      U0C0E,  U0C0F   ] };  // E: matras, short E, long E
    key <AD04>  { [   U0C30,         U0C43,      U0C0B,  U0C31   ] };  // R: ra, vocalic R matra, vocalic R, RRA
    key <AD05>  { [   U0C24,         U0C25                       ] };  // T: dental ta, tha
    key <AD06>  { [   U0C2F,         U0C48,      U0C10           ] };  // Y: ya, ai matra, ai
    key <AD07>  { [   U0C41,         U0C42,      U0C09,  U0C0A   ] };  // U: matras, u, uu
    key <AD08>  { [   U0C3F,         U0C40,      U0C07,  U0C08   ] };  // I: matras, i, ii
    key <AD09>  { [   U0C4A,         U0C4B,      U0C12,  U0C13   ] };  // O: matras, short o, long o
    key <AD10>  { [   U0C2A,         U0C2B                       ] };  // P: pa, pha
    key <AD11>  { [   bracketleft,   braceleft                   ] };
    key <AD12>  { [   bracketright,  braceright                  ] };

    //A Row
    key <AC01>  { [   U0C3E,        U0C06,     U0C05             ] };  // A: aa matra, aa, short a
    key <AC02>  { [   U0C38,        U0C36                        ] };  // S: sa, sha
    key <AC03>  { [   U0C26,        U0C27                        ] };  // D: dental da, dha
    key <AC04>  { [   U0C4D,        U0C44,     U0C60             ] };  // F: virama, vocalic RR matra, vocalic RR
    key <AC05>  { [   U0C17,        U0C18                        ] };  // G: ga, gha
    key <AC06>  { [   U0C39,        U0C03                        ] };  // H: ha, visarga
    key <AC07>  { [   U0C1C,        U0C1D                        ] };  // J: ja, jha
    key <AC08>  { [   U0C15,        U0C16                        ] };  // K: ka, kha
    key <AC09>  { [   U0C32,        U0C33,     U0C62,    U0C0C   ] };  // L: la, lla, vocalic L matra, vocalic L
    key <AC10>  { [   semicolon,    colon                        ] };
    key <AC11>  { [   apostrophe,   quotedbl,  U0951,    U201D   ] };  // U0951: Devanagari stress sign udatta
                                                                       // U201D: Right double quotation mark
    //Z Row
    key <AB01>  { [   U0C1E,   U0C19                   ] };  // Z: nya, nga
    key <AB02>  { [   U0C37                            ] };  // X: ssa
    key <AB03>  { [   U0C1A,   U0C1B                   ] };  // C: ca, cha
    key <AB04>  { [   U0C35,   U0C4C,  U0C14           ] };  // V: va, matra au, au
    key <AB05>  { [   U0C2C,   U0C2D                   ] };  // B: ba, bha
    key <AB06>  { [   U0C28,   U0C23                   ] };  // N: na, nna
    key <AB07>  { [   U0C2E,   U0C02,  U0C3D,  U0950   ] };  // M: ma, anusvara, avagraha, Devanagari OM
    key <AB08>  { [   comma,   U003C,  U0C58           ] };  // comma: comma, less than, TSA
    key <AB09>  { [   period,  U003E,  U0C59           ] };  // period: period, greater than, DZA
    key <AB10>  { [   slash,   question                ] };

    include "level3(ralt_switch)"
};

// Description 	: Keymap for Manipuri language (Meetei mayek script)
// Encoding    	: Unicode (http://www.unicode.org)
// Author      	: Santosh Heigrujam <santosh.tomba@gmail.com>
// Date        	: December, 2013
// Source	: 
// Comment	:
	
partial alphanumeric_keys modifier_keys
xkb_symbols "eeyek" {

    name[Group1]= "Manipuri (Eeyek)";

    key <TLDE> {	[     grave,	asciitilde	]	};
    key <AE01> {	[	  Uabf1,	exclam 		]	};
    key <AE02> {	[	  Uabf2,	at		]	};
    key <AE03> {	[	  Uabf3,	numbersign	]	};
    key <AE04> {	[	  Uabf4,	dollar		]	};
    key <AE05> {	[	  Uabf5,	percent		]	};
    key <AE06> {	[	  Uabf6,	asciicircum	]	};
    key <AE07> {	[	  Uabf7,	ampersand	]	};
    key <AE08> {	[	  Uabf8,	asterisk	]	};
    key <AE09> {	[	  Uabf9,	parenleft	]	};
    key <AE10> {	[	  Uabf0,	parenright	]	};
    key <AE11> {	[     minus,	underscore	]	};
    key <AE12> {	[     equal,	plus		]	};

    key <AD01> {	[	  Uabc8,	Uabd8 		]	};
    key <AD02> {	[	  Uabcb,	Uabcb		]	};
    key <AD03> {	[	  Uabcf,	Uabe2		]	};
    key <AD04> {	[	  Uabd4,	Uabd4		]	};
    key <AD05> {	[	  Uabc7,	Uabe0		]	};
    key <AD06> {	[	  Uabcc,	Uabe6		]	};
    key <AD07> {	[	  Uabce,	Uabe8		]	};
    key <AD08> {	[	  Uabe4,	Uabe9		]	};
    key <AD09> {	[	  Uabe3,	Uabe7		]	};
    key <AD10> {	[	  Uabc4,	Uabde		]	};
    key <AD11> {	[ bracketleft,	braceleft	]	};
    key <AD12> {	[ bracketright,	braceright	]	};

    key <AC01> {	[	  Uabd1,	Uabe5 		]	};
    key <AC02> {	[	  Uabc1,	Uabd3		]	};
    key <AC03> {	[	  Uabd7,	Uabd9		]	};
    key <AC04> {	[	  Uabd0,	Uabda		]	};
    key <AC05> {	[	  Uabd2,	Uabd8		]	};
    key <AC06> {	[	  Uabcd,	Uabea		]	};
    key <AC07> {	[	  Uabd6,	Uabd3		]	};
    key <AC08> {	[	  Uabc0,	Uabdb		]	};
    key <AC09> {	[	  Uabc2,	Uabdc		]	};
    key <AC10> {	[ semicolon,	colon		]	};
    key <AC11> {	[ apostrophe,	quotedbl	]	};

    key <AB01> {	[	  Uabc9,	Uabe1 		]	};
    key <AB02> {	[	  Uabca,	Uabd9		]	};
    key <AB03> {	[	  Uabc6,	Uabeb		]	};
    key <AB04> {	[	  Uabda,	Uabed		]	};
    key <AB05> {	[	  Uabd5,	Uabec		]	};
    key <AB06> {	[	  Uabc5,	Uabdf		]	};
    key <AB07> {	[	  Uabc3,	Uabdd		]	};
    key <AB08> {	[     comma,	less		]	};
    key <AB09> {	[    period,	greater		]	};
    key <AB10> {	[     slash,	question	]	};

    key <BKSL> {	[ backslash,         bar	]	};
    
    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     //
//   khmer unicode keyboard for XFree86 4.3 or XOrg 
//   (might work with older versions, not tested)
//
//   layout defined by National Information Communications Technology Development Authority (NiDA)
//   http://www.nida.gov.kh
//
//   version:  1.0.1
//
//   date: 14.09.2005
//
//   author:  Jens Herden   (jens at khmeros.info)
//
//
//   understanding the symbols:
//
//         0x100yyyy  = unicode, yyyy is hexcode
//                      codes that are not assigned in unicode (0x10017fb-0x10017ff),
//                      are used to make compositions for special vowels
//
//         voidsymbol = no symbol for this combination
//
//         all other symbol are defined in: /usr/X11/include/X11/keysymdef.h
//         but with a leading 'XK_'
//

default  partial alphanumeric_keys
xkb_symbols "basic" {
    name[Group1]= "Khmer (Cambodia)";

// there are four levels defined:
//
//                 normal           shift			right-alt	right-alt + shift
//

//  keys: `1234567890-=\
    key <TLDE> { [ guillemotleft,	guillemotright,	0x100200d,	voidsymbol	] };
    key <AE01> { [ 0x10017e1,		exclam,			0x100200c, 	0x10017f1	] };
    key <AE02> { [ 0x10017e2,		0x10017d7,		at, 		0x10017f2	] };
    key <AE03> { [ 0x10017e3,		quotedbl,		0x10017d1, 	0x10017f3	] };
    key <AE04> { [ 0x10017e4,		0x10017db,		dollar, 	0x10017f4	] };
    key <AE05> { [ 0x10017e5,		percent,		EuroSign, 	0x10017f5	] };
    key <AE06> { [ 0x10017e6,		0x10017cd,		0x10017d9, 	0x10017f6	] };
    key <AE07> { [ 0x10017e7,		0x10017d0,		0x10017da, 	0x10017f7	] };
    key <AE08> { [ 0x10017e8,		0x10017cf,		asterisk, 	0x10017f8	] };
    key <AE09> { [ 0x10017e9,		parenleft,		braceleft, 	0x10017f9	] };
    key <AE10> { [ 0x10017e0,		parenright,		braceright, 0x10017f0	] };
    key <AE11> { [ 0x10017a5,		0x10017cc,		x, 		    voidsymbol	] };
    key <AE12> { [ 0x10017b2,		equal,			0x10017ce, 	voidsymbol	] };
    key <BKSL> { [ 0x10017ae,		0x10017ad,		backslash, 	voidsymbol	] };

//  keys: qwertyuiop[]
    key <AD01> { [ 0x1001786,		0x1001788,		0x10017dc, 	0x10019e0	] };
    key <AD02> { [ 0x10017b9,		0x10017ba,		0x10017dd, 	0x10019e1	] };
    key <AD03> { [ 0x10017c1,		0x10017c2,		0x10017af, 	0x10019e2	] };
    key <AD04> { [ 0x100179a,		0x10017ac,		0x10017ab, 	0x10019e3	] };
    key <AD05> { [ 0x100178f,		0x1001791,		0x10017a8, 	0x10019e4	] };
    key <AD06> { [ 0x1001799,		0x10017bd,		voidsymbol, 0x10019e5	] };
    key <AD07> { [ 0x10017bb,		0x10017bc,		voidsymbol, 0x10019e6	] };
    key <AD08> { [ 0x10017b7,		0x10017b8,		0x10017a6, 	0x10019e7	] };
    key <AD09> { [ 0x10017c4,		0x10017c5,		0x10017b1, 	0x10019e8	] };
    key <AD10> { [ 0x1001795,		0x1001797,		0x10017b0, 	0x10019e9	] };
    key <AD11> { [ 0x10017c0,		0x10017bf,		0x10017a9, 	0x10019ea	] };
    key <AD12> { [ 0x10017aa,		0x10017a7,		0x10017b3, 	0x10019eb	] };

//  keys: asdfghjkl;'
    key <AC01> { [ 0x10017b6,		0x10017ff,		voidsymbol, 0x10019ec	] };
    key <AC02> { [ 0x100179f,		0x10017c3,		voidsymbol, 0x10019ed	] };
    key <AC03> { [ 0x100178a,		0x100178c,		voidsymbol, 0x10019ee	] };
    key <AC04> { [ 0x1001790,		0x1001792,		voidsymbol, 0x10019ef	] };
    key <AC05> { [ 0x1001784,		0x10017a2,		voidsymbol, 0x10019f0	] };
    key <AC06> { [ 0x10017a0,		0x10017c7,		voidsymbol, 0x10019f1	] };
    key <AC07> { [ 0x10017d2,		0x1001789,		voidsymbol, 0x10019f2	] };
    key <AC08> { [ 0x1001780,		0x1001782,		0x100179d, 	0x10019f3	] };
    key <AC09> { [ 0x100179b,		0x10017a1,		voidsymbol, 0x10019f4	] };
    key <AC10> { [ 0x10017be,		0x10017fe,		0x10017d6, 	0x10019f5	] };
    key <AC11> { [ 0x10017cb,		0x10017c9,		0x10017c8, 	0x10019f6	] };

//  keys: zxcvbnm,./
    key <AB01> { [ 0x100178b,		0x100178d,		voidsymbol, 0x10019f7	] };
    key <AB02> { [ 0x1001781,		0x1001783,		voidsymbol, 0x10019f8	] };
    key <AB03> { [ 0x1001785,		0x1001787,		voidsymbol, 0x10019f9	] };
    key <AB04> { [ 0x100179c,		0x10017fd,		voidsymbol, 0x10019fa	] };
    key <AB05> { [ 0x1001794,		0x1001796,		0x100179e, 	0x10019fb	] };
    key <AB06> { [ 0x1001793,		0x100178e,		voidsymbol, 0x10019fc	] };
    key <AB07> { [ 0x1001798,		0x10017c6,		voidsymbol, 0x10019fd	] };
    key <AB08> { [ 0x10017fc,		0x10017fb,		comma, 		0x10019fe	] };
    key <AB09> { [ 0x10017d4,		0x10017d5,		period, 	0x10019ff	] };
    key <AB10> { [ 0x10017ca,		question,		slash,		voidsymbol	] };

    key <SPCE> { [ 0x100200b,		space,			0x10000a0,	voidsymbol	] };
    key <RALT> { [ Alt_R	] };

// third level with right-Alt
    include "level3(ralt_switch)"

};

partial alphanumeric_keys
xkb_symbols "olpc" {
    include "kh(basic)"

// Contact Walter@laptop.org

    key <AC10> { [ 0x10017be,		0x10017c8,		0x10017d6, 	0x10019f5	] };
    key <AE01> { [ 0x10017e1,		0x100200c,		exclam, 	0x10017f1	] };
    key <AE03> { [ 0x10017e3,		0x10017d1,		quotedbl, 	0x10017f3	] };
    key <AE05> { [ 0x10017e5,		EuroSign,		percent, 	0x10017f5	] };
    key <AE12> { [ 0x10017b2,		0x10017ce,		equal, 	 	voidsymbol	] };

   //language key
   include "group(olpc)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           // Iranian keyboard layout

////////////////////////////////////////
// Persian layout,
// based on
// Information Technology – Layout of Persian Letters and Symbols on Computer Keyboards
// ISIRI 9147 – 1st Edition
// Institute of Standards and Industrial Research of Iran
// http://www.isiri.org/UserStd/DownloadStd.aspx?id=9147
// http://behnam.esfahbod.info/standards/isiri-keyboard-9147.pdf
//
// Author: Behnam Esfahbod <behnam@esfahbod.info>
//

default  partial alphanumeric_keys
xkb_symbols "pes" {
    name[Group1]= "Persian";

    include "ir(pes_part_basic)"
    include "ir(pes_part_ext)"

    include "nbsp(zwnj2nb3nnb4)"
    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "pes_keypad" {
    name[Group1]= "Persian (with Persian keypad)";

    include "ir(pes_part_basic)"
    include "ir(pes_part_ext)"
    include "ir(pes_part_keypad)"

    include "nbsp(zwnj2nb3nnb4)"
    include "level3(ralt_switch)"
};

hidden partial alphanumeric_keys
xkb_symbols "pes_part_basic" {

    // Persian digits
    key <AE01> { [ Farsi_1,	exclam,		grave			] };
    key <AE02> { [ Farsi_2,	0x100066c,	at			] };
    key <AE03> { [ Farsi_3,	0x100066b,	numbersign		] };
    key <AE04> { [ Farsi_4,	0x100fdfc,	dollar			] };
    key <AE05> { [ Farsi_5,	0x100066a,	percent			] };
    key <AE06> { [ Farsi_6,	multiply,	asciicircum		] };
    key <AE07> { [ Farsi_7,	Arabic_comma,	ampersand		] };
    key <AE08> { [ Farsi_8,	asterisk,	enfilledcircbullet	] };
    key <AE09> { [ Farsi_9,	parenright,	0x100200e		] };
    key <AE10> { [ Farsi_0,	parenleft,	0x100200f		] };

    // Persian letters and symbols
    key <AD01> { [ Arabic_dad,		Arabic_sukun,		degree		] };
    key <AD02> { [ Arabic_sad,		Arabic_dammatan,	VoidSymbol	] };
    key <AD03> { [ Arabic_theh,		Arabic_kasratan,	0x13a4		] };
    key <AD04> { [ Arabic_qaf,		Arabic_fathatan,	VoidSymbol	] };
    key <AD05> { [ Arabic_feh,		Arabic_damma,		VoidSymbol	] };
    key <AD06> { [ Arabic_ghain,	Arabic_kasra,		VoidSymbol	] };
    key <AD07> { [ Arabic_ain,		Arabic_fatha,		VoidSymbol	] };
    key <AD08> { [ Arabic_heh,		Arabic_shadda,		0x100202d	] };
    key <AD09> { [ Arabic_khah,		bracketright,		0x100202e	] };
    key <AD10> { [ Arabic_hah,		bracketleft,		0x100202c	] };
    key <AD11> { [ Arabic_jeem,		braceright,		0x100202a	] };
    key <AD12> { [ Arabic_tcheh,	braceleft,		0x100202b	] };

    key <AC01> { [ Arabic_sheen,	Arabic_hamzaonwaw,	VoidSymbol	] };
    key <AC02> { [ Arabic_seen,		Arabic_hamzaonyeh,	VoidSymbol	] };
    key <AC03> { [ Farsi_yeh,		Arabic_yeh,		Arabic_alefmaksura ] };
    key <AC04> { [ Arabic_beh,		Arabic_hamzaunderalef,	VoidSymbol	] };
    key <AC05> { [ Arabic_lam,		Arabic_hamzaonalef,	VoidSymbol	] };
    key <AC06> { [ Arabic_alef,		Arabic_maddaonalef,	0x1000671	] };
    key <AC07> { [ Arabic_teh,		Arabic_tehmarbuta,	VoidSymbol	] };
    key <AC08> { [ Arabic_noon,		guillemotright,		0x100fd3e	] };
    key <AC09> { [ Arabic_meem,		guillemotleft,		0x100fd3f	] };
    key <AC10> { [ Arabic_keheh,	colon,			semicolon	] };
    key <AC11> { [ Arabic_gaf,		Arabic_semicolon,	quotedbl	] };

    key <AB01> { [ Arabic_zah,		Arabic_kaf,		VoidSymbol	] };
    key <AB02> { [ Arabic_tah,		0x1000653,		VoidSymbol	] };
    key <AB03> { [ Arabic_zain,		Arabic_jeh,		VoidSymbol	] };
    key <AB04> { [ Arabic_ra,		Arabic_superscript_alef,0x1000656	] };
    key <AB05> { [ Arabic_thal,		0x100200c,		0x100200d	] };
    key <AB06> { [ Arabic_dal,		Arabic_hamza_above,	Arabic_hamza_below	] };
    key <AB07> { [ Arabic_peh,		Arabic_hamza,		ellipsis	] };
    key <AB08> { [ Arabic_waw,		greater,		comma		] };
    key <AB09> { [ period,		less,			apostrophe	] };
    key <AB10> { [ slash,		Arabic_question_mark,	question	] };

    key <TLDE> { [ 0x100200d,		division,		asciitilde	] };
    key <AE11> { [ minus,		Arabic_tatweel,		underscore	] };
    key <AE12> { [ equal,		plus,			0x1002212	] };
    key <BKSL> { [ backslash,		bar,			0x1002010	] };
};

hidden partial alphanumeric_keys
xkb_symbols "pes_part_ext" {

    // Persian and ASCII digits
    key <AE01> { [ Farsi_1,	exclam,		grave,			1	] };
    key <AE02> { [ Farsi_2,	0x100066c,	at,			2	] };
    key <AE03> { [ Farsi_3,	0x100066b,	numbersign,		3	] };
    key <AE04> { [ Farsi_4,	0x100fdfc,	dollar,			4	] };
    key <AE05> { [ Farsi_5,	0x100066a,	percent,		5	] };
    key <AE06> { [ Farsi_6,	multiply,	asciicircum,		6	] };
    key <AE07> { [ Farsi_7,	Arabic_comma,	ampersand,		7	] };
    key <AE08> { [ Farsi_8,	asterisk,	enfilledcircbullet,	8	] };
    key <AE09> { [ Farsi_9,	parenright,	0x100200e,		9	] };
    key <AE10> { [ Farsi_0,	parenleft,	0x100200f,		0	] };
};

hidden partial alphanumeric_keys
xkb_symbols "pes_part_keypad" {

    // Persian digits and Mathematical operators
    key <KPDV> { [ division,	XF86_Ungrab	] };
    key <KPMU> { [ multiply,	XF86_ClearGrab	] };
    key <KPSU> { [ 0x1002212,	XF86_Prev_VMode	] };
    key <KPAD> { [ plus,	XF86_Next_VMode	] };

    key <KPEN> { [ KP_Enter	] };
    key <KPEQ> { [ equal	] };

    key <KP7>  { [ KP_Home,	Farsi_7	] };
    key <KP8>  { [ KP_Up,	Farsi_8	] };
    key <KP9>  { [ KP_Prior,	Farsi_9	] };

    key <KP4>  { [ KP_Left,	Farsi_4	] };
    key <KP5>  { [ KP_Begin,	Farsi_5	] };
    key <KP6>  { [ KP_Right,	Farsi_6	] };

    key <KP1>  { [ KP_End,	Farsi_1	] };
    key <KP2>  { [ KP_Down,	Farsi_2	] };
    key <KP3>  { [ KP_Next,	Farsi_3	] };

    key <KP0>  { [ KP_Insert,	Farsi_0	] };
    key <KPDL> { [ KP_Delete,	0x100066b	] };
};


////////////////////////////////////////
// Kurdish Layout

partial alphanumeric_keys
xkb_symbols "ku" {
    include "tr(ku)"
    name[Group1]= "Kurdish (Iran, Latin Q)";
};

partial alphanumeric_keys
xkb_symbols "ku_f" {
    include "tr(ku_f)"
    name[Group1]= "Kurdish (Iran, F)";
};

partial alphanumeric_keys
xkb_symbols "ku_alt" {
    include "tr(ku_alt)"
    name[Group1]= "Kurdish (Iran, Latin Alt-Q)";
};

////////////////////////////////////////
// Kurdish Soranî Bahdînî (Arabic) keyboard layout,
// based on the Kurdî Soranî Bahdînî keyboard from KurdITGroup
// which is based on National Iranian Keyboard Standard (ISIRI 2901:1994),
// with additions.
//
// Copyright (C) 2006 Erdal Ronahî, published under the GPL v2
//
// Special copyright note: author explicitly permitted to license this
// layout under MIT/X11 license, for details see
// https://bugs.freedesktop.org/show_bug.cgi?id=9541
//
// Author: Erdal Ronahî  <erdal.ronahi@gmail.com>
//
// Kurdish Arabic-Latin Layout for Soranî

partial alphanumeric_keys
xkb_symbols "ku_ara" {
    name[Group1]= "Kurdish (Iran, Arabic-Latin)";

    // Other 3-Level symbols
    key <TLDE> { [ 0x100200d,		division,		asciitilde	] };
    key <BKSL> { [ backslash,		bar,			ccedilla, Ccedilla	] };

    // Digits
    key <AE01> { [ 1,	exclam,		Farsi_1,	grave		] };
    key <AE02> { [ 2,	at, 		Farsi_2,	at		] };
    key <AE03> { [ 3,	numbersign,	Farsi_3,	0x100066b	] };
    key <AE04> { [ 4,	dollar,		Farsi_4, 	0x100fdfc	] };
    key <AE05> { [ 5,	percent,	Farsi_5,	0x100066a	] };
    key <AE06> { [ 6,	asciicircum,	Farsi_6,	multiply	] };
    key <AE07> { [ 7,	ampersand,	Farsi_7, 	Arabic_comma	] };
    key <AE08> { [ 8,	asterisk,	Farsi_8,	enfilledcircbullet	] };
    key <AE09> { [ 9,	parenright,	Farsi_9,	0x100200e	] };
    key <AE10> { [ 0,	parenleft,	Farsi_0,	0x100200f	] };
    key <AE11> { [ minus,		Arabic_tatweel,		underscore	] };
    key <AE12> { [ equal,		plus,			0x1002212	] };

    key <AD01> { [         Arabic_qaf,            X,  q,  Q ] };
    key <AD02> { [         Arabic_waw,            X,  w,  W ] };
    key <AD03> { [          0x10006d5,   Arabic_heh,  e,  E ] };
    key <AD04> { [         Arabic_ra ,    0x1000695,  r,  R ] };
    key <AD05> { [         Arabic_teh,   Arabic_tah,  t,  T ] };
    key <AD06> { [          0x10006cc,    0x10006ce,  y,  Y ] };
    key <AD07> { [  Arabic_hamzaonyeh, Arabic_hamza,  u,  U ] };
    key <AD08> { [         Arabic_hah,   Arabic_ain,  i,  I ] };
    key <AD09> { [          0x10006c6, Arabic_hamzaonwaw,  o,  O ] };
    key <AD10> { [          0x100067e,  Arabic_theh,  p,  P ] };
    key <AD11> { [ bracketright,	braceright,	ucircumflex, Ucircumflex	] };
    key <AD12> { [ bracketleft,		braceleft,	scedilla, Scedilla	] };

    key <AC01> { [ Arabic_alef,	Arabic_maddaonalef,	a, A	] };
    key <AC02> { [ Arabic_seen,		Arabic_sheen,	s, S	] };
    key <AC03> { [  Arabic_dal,		Arabic_thal,	d, D	] };
    key <AC04> { [  Arabic_feh,	Arabic_hamzaunderalef,	f, F	] };
    key <AC05> { [   0x10006af,		Arabic_ghain,	g, G	] };
    key <AC06> { [  Arabic_heh,		0x100200c,	h, H	] };
    key <AC07> { [   0x1000698,	Arabic_hamzaonalef,	j, J	] };
    key <AC08> { [   0x10006a9,		Arabic_kaf,	k, K	] };
    key <AC09> { [  Arabic_lam,		0x10006b5,	l, L	] };
    key <AC10> { [  Arabic_semicolon, 	colon,		ecircumflex, Ecircumflex	] };
    key <AC11> { [  apostrophe, 	quotedbl,	icircumflex, Icircumflex	] };

    key <AB01> { [ Arabic_zain,		Arabic_dad,	z, Z	] };
    key <AB02> { [ Arabic_khah,		Arabic_sad,	x, X	] };
    key <AB03> { [ Arabic_jeem,		0x1000686,	c, C	] };
    key <AB04> { [   0x10006a4,		Arabic_zah,	v, V	] };
    key <AB05> { [ Arabic_beh,		0x1000649,	b, B	] };
    key <AB06> { [ Arabic_noon,	Arabic_tehmarbuta,	n, N	] };
    key <AB07> { [ Arabic_meem,	Arabic_tatweel,		m, M	] };
    key <AB08> { [ Arabic_comma,	greater,	comma		] };
    key <AB09> { [ period,		less,		apostrophe	] };
    key <AB10> { [ slash,		Arabic_question_mark, 	question	] };

    include "nbsp(zwnj2nb3)"
    include "level3(ralt_switch)"
};

// EXTRAS:

/////////////////////////////////////////////////////////////////////////////////
//
// Generated keyboard layout file with the Keyboard Layout Editor.
// For more about the software, see http://code.google.com/p/keyboardlayouteditor
//
// Version 0.2, fixed AD09.
//
// Layout by Ernst Tremel, http://ubuntuforums.org/showpost.php?p=9365469&postcount=32
// Creation of this file by Simos Xenitellis.

partial alphanumeric_keys
xkb_symbols "ave"
{
	name[Group1] = "Avestan";

	key <AB01> { [ U10B30,         U10B32 ] }; // 𐬰 𐬲
	key <AB02> { [ U10B11,         U10B12 ] }; // 𐬑 𐬒
	key <AB03> { [ U10B17,          UE102 ] }; // 𐬗 
	key <AB04> { [ U10B2C,         U10B13 ] }; // 𐬬 𐬓
	key <AB05> { [ U10B20,         U10B21 ] }; // 𐬠 𐬡
	key <AB06> { [ U10B25,         U10B27 ] }; // 𐬥 𐬧
	key <AB07> { [ U10B28,         U10B29 ] }; // 𐬨 𐬩
	key <AB08> { [ U10B3C,         U10B39 ] }; // 𐬼 𐬹
	key <AB09> { [ U10B3E,         U10B3D ] }; // 𐬾 𐬽
	key <AB10> { [ U10B3F, periodcentered ] }; // 𐬿 ·

	key <AC01> { [ U10B00,         U10B01 ] }; // 𐬀 𐬁
	key <AC02> { [ U10B2F,         U10B31 ] }; // 𐬯 𐬱
	key <AC03> { [ U10B1B,         U10B1C ] }; // 𐬛 𐬜
	key <AC04> { [ U10B1F,         U10B16 ] }; // 𐬟 𐬖
	key <AC05> { [ U10B14,         U10B15 ] }; // 𐬔 𐬕
	key <AC06> { [ U10B35,          UE100 ] }; // 𐬵 
	key <AC07> { [ U10B18,         U10B24 ] }; // 𐬘 𐬤
	key <AC08> { [ U10B10,          UE101 ] }; // 𐬐 
	key <AC09> { [ U10B2E,          UE103 ] }; // 𐬮 
	key <AC10> { [ U10B3B,         U10B3A ] }; // 𐬻 𐬺
	key <AC11> { [ U10B1D                 ] }; // 𐬝

	key <AD01> { [ U10B22,         U10B23 ] }; // 𐬢 𐬣
	key <AD02> { [ U10B33,         U10B34 ] }; // 𐬳 𐬴
	key <AD03> { [ U10B08,         U10B09 ] }; // 𐬈 𐬉
	key <AD04> { [ U10B2D,         U10B26 ] }; // 𐬭 𐬦
	key <AD05> { [ U10B19,         U10B1A ] }; // 𐬙 𐬚
	key <AD06> { [ U10B2B,         U10B2A ] }; // 𐬫 𐬪
	key <AD07> { [ U10B0E,         U10B0F ] }; // 𐬎 𐬏
	key <AD08> { [ U10B0C,         U10B0D ] }; // 𐬌 𐬍
	key <AD09> { [ U10B0A,         U10B0B ] }; // 𐬊 𐬋
	key <AD10> { [ U10B1E                 ] }; // 𐬞
	key <AD11> { [ U10B06,         U10B07 ] }; // 𐬆 𐬇
	key <AD12> { [ U10B02,         U10B03 ] }; // 𐬂 𐬃

	key <AE01> { [ U10B78                 ] }; // 𐭸
	key <AE02> { [ U10B79                 ] }; // 𐭹
	key <AE03> { [ U10B7A                 ] }; // 𐭺
	key <AE04> { [ U10B7B                 ] }; // 𐭻
	key <AE05> { [ U10B7C                 ] }; // 𐭼
	key <AE06> { [ U10B7D                 ] }; // 𐭽
	key <AE07> { [ U10B7E                 ] }; // 𐭾
	key <AE08> { [ U10B7F                 ] }; // 𐭿

	key <BKSL> { [ U10B04,         U10B05 ] }; // 𐬄 𐬅
	key <LSGT> { [ U10B04,         U10B05 ] }; // 𐬄 𐬅
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  // based on
// XKB keyboard by Hrafnkell Eiriksson - hkelle@rhi.hi.is
//     fixes by Olafur Osvaldsson - oli@isnic.is
//
// "basic" corrected according to the Icelandic standard for keyboards,
//     IST 125:1995 (some symbols substituted by a dead diacritic).
//     Some positions are according to IST ISO/IEC 9995-3:1994
//     Added nobreakspace

default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin(type4)"

    name[Group1]="Icelandic";

//  <AE00> = <TLDE>
    key <AE02>	{ [         2,   quotedbl,  twosuperior,    oneeighth ]	};
    key <AE04>	{ [         4,     dollar,   onequarter,     currency ]	};
    key <AE11>	{ [odiaeresis, Odiaeresis,    backslash, questiondown ]	};
    key <AE12>	{ [     minus, underscore, dead_cedilla,  dead_ogonek ]	};

    key <AD11>	{ [       eth,        ETH, dead_diaeresis, dead_abovering ] };
    key <AD12>	{ [apostrophe,   question,   asciitilde,  dead_macron ]	};

    key <AC03>	{ [         d,          D,  U201e,       U201c ] };
    key <AC10>	{ [        ae,         AE,  asciicircum, dead_doubleacute ] };
    key <AC11>	{ [dead_acute, dead_acute, dead_circumflex, dead_caron ] };
    key <TLDE>	{ [dead_abovering,  dead_diaeresis,      notsign,      hyphen ]	};

//  <AC12> = <BKSL>
    key <BKSL>	{ [      plus,   asterisk,   grave,   dead_breve ]	};

//  <AB00> = <LSGT>, is in file "pc": pc105
    key <AB10>	{ [     thorn,      THORN, dead_belowdot, dead_abovedot ] };

    key <SPCE>  { [     space,      space,  space, space ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {

    // modify the basic Icelandic layout to use Sun dead keys

    include "is(basic)"

    name[Group1]="Icelandic (Sun dead keys)";

    key <TLDE>	{ [dead_circumflex,     degree,      notsign,    notsign ]	};
    key <AE12>	{ [dead_acute, dead_grave, dead_cedilla, dead_cedilla ] };
    key <AD11>	{ [udiaeresis, Udiaeresis, dead_diaeresis, dead_diaeresis ] };
    key <AD12>	{ [      plus,   asterisk,  dead_tilde,  dead_macron ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,  dead_acute,  dead_acute ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis, dead_circumflex, dead_circumflex ]	};
    key <BKSL>	{ [numbersign,      acute,  dead_grave,  dead_grave ]	};
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // modify the basic Icelandic layout to not have any dead keys

    include "is(basic)"

    name[Group1]="Icelandic (eliminate dead keys)";

    key <TLDE>	{ [asciicircum,    degree,      notsign,      notsign ]	};
    key <AE12>	{ [apostrophe,      grave,      cedilla,      cedilla ]	};
    key <AD11>	{ [udiaeresis, Udiaeresis,    diaeresis,    diaeresis ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,       macron ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,        acute,        acute ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis,  asciicircum,  asciicircum ]	};
    key <BKSL>	{ [numbersign,      acute,        grave,        grave ]	};
    key <AB10>	{ [     thorn,      THORN, dead_belowdot,    abovedot ]	};
};

// Copyright (C) 2004, 2006 Ævar Arnfjörð Bjarmason <avarab@gmail.com>
//
// = HISTORY
// * 2004-09-28:
//   Initial cleanroom writing of the keymap, I just booted Mac OS X, opened
//   TextEdit.app and wrote down what the value produced by each key was when I
//   pressed it, a for a, A for shift + a, å for lalt + a etc and made the
//   keymap from that information
//
// * 2006-01-14:
//   Revised the comments in the file
//
// * 2013-05-30:
//   Renamed the old keyboard layout and created a new one that conforms with the later 
//   model Apple Laptop and Aluminium USB/Bluetooth keyboards (A1243/A1255 and later) 
//   that are used with the more recent versions of OS X. Also replaced some Unicode 
//   codes with proper symbol names.
//
// = NOTES
// * 20 characters in this keymap have no named character defined in
//   include/keysymdef.h and as a result their Unicode code points in
//   hexadecimal are listed here, these can be generated with the following
//   perl command:
//     $ perl -CA -e 'printf "U%x\n", ord shift' Æ
//   and converted back like:
//     $ perl -CO -le '$_=shift;s/[^a-f0-9]//ig;print chr hex' Uc6
// * The Apple logo appears twice on this keymap like the Mac OS and Mac OS X
//   keymaps. In the MacRoman encoding it has the code point 0xF0 (240) but it
//   has no assigned code point in Unicode, the code point Apple uses for it is
//   U+F8FF (63743) which is in the BMP's Private Use Area (U+E000–U+F8FF)
// * This keymap has only been tested on a PowerBook6,5 (iBook G4) but it
//   should work on other Apple laptop models which use the same keyboard
//   layout. It will probably work on standard sized keyboards with little or
//   no modification but it might not support them fully, please report if
//   you're able to get it running with such a keyboard

// Copied from macintosh_vndr/is

xkb_symbols "mac_legacy" {
    name[Group1]= "Icelandic (Macintosh, legacy)";

    //-- Row 5 (E) --//
    key <TLDE> { [ sterling,   section,    UF8FF,        apostrophe ] };
    key <AE01> { [ 1,          exclam,     exclamdown,   VoidSymbol ] };
    key <AE02> { [ 2,          quotedbl,   at,           VoidSymbol ] };
    key <AE03> { [ 3,          numbersign, U2122,        sterling   ] };
    key <AE04> { [ 4,          dollar,     U00A2,        EuroSign   ] };
    key <AE05> { [ 5,          percent,    U2030,        infinity   ] };
    key <AE06> { [ 6,          ampersand,  asciicircum,  U2044      ] };
    key <AE07> { [ 7,          slash,      backslash,    U00F7      ] };
    key <AE08> { [ 8,          parenleft,  bracketleft,  braceleft  ] };
    key <AE09> { [ 9,          parenright, bracketright, braceright ] };
    key <AE10> { [ 0,          equal,      U2260,        U2248      ] };
    key <AE11> { [ odiaeresis, Odiaeresis, oslash,       Ooblique   ] };
    key <AE12> { [ minus,      underscore, endash,       emdash     ] };

    
    //-- Row 4 (D) --//
    key <AD01> { [ q,          Q,        paragraph,       VoidSymbol ] };
    key <AD02> { [ w,          W,        U2211,           VoidSymbol ] };
    key <AD03> { [ e,          E,        dead_grave,      VoidSymbol ] };
    key <AD04> { [ r,          R,        registered,      VoidSymbol ] };
    key <AD05> { [ t,          T,        degree,          VoidSymbol ] };
    key <AD06> { [ y,          Y,        yen,             VoidSymbol ] };
    key <AD07> { [ u,          U,        dead_diaeresis,  VoidSymbol ] };
    key <AD08> { [ i,          I,        U0131,           U00AA      ] };
    key <AD09> { [ o,          O,        dead_circumflex, U00BA      ] };
    key <AD10> { [ p,          P,        Greek_pi,        Greek_PI   ] };
    key <AD11> { [ eth,        Eth,      U201e,           U201c      ] };
    key <AD12> { [ apostrophe, question, questiondown,    U00B7      ] };
    
    
    //-- Row 3 (C) --//
    key <AC01> { [ a,          A,                aring,     Aring      ] };
    key <AC02> { [ s,          S,                ssharp,    abovedot   ] };
    key <AC03> { [ d,          D,                U2202,     U2DA       ] };
    key <AC04> { [ f,          F,                U192,      macron     ] };
    key <AC05> { [ g,          G,                copyright, breve      ] };
    key <AC06> { [ h,          H,                bar,       VoidSymbol ] };
    key <AC07> { [ j,          J,                U2206,     U2dd       ] };
    key <AC08> { [ k,          K,                U00AC,     VoidSymbol ] };
    key <AC09> { [ l,          L,                U2026,     caron      ] };
    key <AC10> { [ ae,         AE,               oe,        OE         ] };
    key <AC11> { [ dead_acute, dead_diaeresis,   U201A,     U2018      ] };
    key <BKSL> { [ plus,       asterisk,         U2022,     plusminus  ] };
    
    
    //-- Row 2  (B) --//
    key <LSGT> { [ less,   greater,   section,          UF8FF          ] };
    key <AB01> { [ z,      Z,         U3A9,             VoidSymbol     ] };
    key <AB02> { [ x,      X,         asciitilde,       VoidSymbol     ] };
    key <AB03> { [ c,      C,         ccedilla,         Ccedilla       ] };
    key <AB04> { [ v,      V,         U221A,            U25CA          ] };
    key <AB05> { [ b,      B,         U222B,            VoidSymbol     ] };
    key <AB06> { [ n,      N,         dead_tilde,       VoidSymbol     ] };
    key <AB07> { [ m,      M,         U00B5,            VoidSymbol     ] };
    key <AB08> { [ comma,  semicolon, lessthanequal,    guillemotleft  ] };
    key <AB09> { [ period, colon,     greaterthanequal, guillemotright ] };
    key <AB10> { [ thorn,  Thorn,     U2019,            U201d          ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "mac" {
    name[Group1]= "Icelandic (Macintosh)";

    //-- Row 5 (E) --//
    key <TLDE> { [ less,       greater,    bar,          UF8FF       ] };
    key <AE01> { [ 1,          exclam,     exclamdown,   VoidSymbol  ] };
    key <AE02> { [ 2,          quotedbl,   at,           VoidSymbol  ] };
    key <AE03> { [ 3,          numbersign, trademark,    sterling    ] };
    key <AE04> { [ 4,          dollar,     cent,         EuroSign    ] };
    key <AE05> { [ 5,          percent,    U2030,        infinity    ] };
    key <AE06> { [ 6,          ampersand,  asciicircum,  U2044       ] };
    key <AE07> { [ 7,          slash,      braceleft,    division    ] };
    key <AE08> { [ 8,          parenleft,  bracketleft,  braceleft   ] };
    key <AE09> { [ 9,          parenright, bracketright, braceright  ] };
    key <AE10> { [ 0,          equal,      braceright,   approxeq    ] };
    key <AE11> { [ odiaeresis, Odiaeresis, backslash,    U2260       ] };
    key <AE12> { [ minus,      underscore, endash,       emdash      ] };


    //-- Row 4 (D) --//
    key <AD01> { [ q,          Q,          U0040,              paragraph           ] };
    key <AD02> { [ w,          W,          U2211,              U00A7               ] };
    key <AD03> { [ e,          E,          U20AC,              U00BF               ] };
    key <AD04> { [ r,          R,          registered,         VoidSymbol          ] };
    key <AD05> { [ t,          T,          degree,             U2022               ] };
    key <AD06> { [ y,          Y,          yen,                VoidSymbol          ] };
    key <AD07> { [ u,          U,          dead_diaeresis,     VoidSymbol          ] };
    key <AD08> { [ i,          I,          idotless,           ordfeminine         ] };
    key <AD09> { [ o,          O,          dead_circumflex,    U00BA               ] };
    key <AD10> { [ p,          P,          Greek_pi,           Greek_PI            ] };
    key <AD11> { [ eth,        Eth,        doublelowquotemark, leftdoublequotemark ] };
    key <AD12> { [ apostrophe, question,   asciitilde,         periodcentered      ] };


    //-- Row 3 (C) --//
    key <AC01> { [ a,          A,          aring,             Aring               ] };
    key <AC02> { [ s,          S,          ssharp,            abovedot            ] };
    key <AC03> { [ d,          D,          partialderivative, U02DA               ] };
    key <AC04> { [ f,          F,          function,          macron              ] };
    key <AC05> { [ g,          G,          copyright,         breve               ] };
    key <AC06> { [ h,          H,          bar,               U00B8               ] };
    key <AC07> { [ j,          J,          U2206,             doubleacute         ] };
    key <AC08> { [ k,          K,          notsign,           U2DB                ] };
    key <AC09> { [ l,          L,          ellipsis,          caron               ] };
    key <AC10> { [ ae,         AE,         oe,                OE                  ] };
    key <AC11> { [ dead_acute, dead_acute, asciicircum,       leftsinglequotemark ] };
    key <BKSL> { [ plus,       asterisk,   grave,             plusminus           ] };


    //-- Row 2  (B) --//
    key <LSGT> { [ degree, dead_diaeresis, oslash,               Ooblique             ] };
    key <AB01> { [ z,      Z,              Greek_OMEGA,          VoidSymbol           ] };
    key <AB02> { [ x,      X,              asciitilde,           VoidSymbol           ] };
    key <AB03> { [ c,      C,              ccedilla,             Ccedilla             ] };
    key <AB04> { [ v,      V,              radical,              U25CA                ] };
    key <AB05> { [ b,      B,              integral,             VoidSymbol           ] };
    key <AB06> { [ n,      N,              dead_tilde,           VoidSymbol           ] };
    key <AB07> { [ m,      M,              mu,                   VoidSymbol           ] };
    key <AB08> { [ comma,  semicolon,      lessthanequal,        guillemotleft        ] };
    key <AB09> { [ period, colon,          greaterthanequal,     guillemotright       ] };
    key <AB10> { [ thorn,  Thorn,          rightsinglequotemark, rightdoublequotemark ] };

    include "level3(ralt_switch)"
};

// This is a modified version of the English Dvorak layout that allows
// you to type all Icelandic letters under X. It's not a full attempt at
// nationalizing the layout as e.g. the Norwegian, Swedish and French
// layouts which modify the primary keys of the basic Dvorak layout
// extensively.

// Rather it's a simple modification of 5 keys of the US Dvorak layout,
// it adds Germanic/Icelandic style quotation marks („“), eth (ðÐ), ae
// (æÆ), endash and emdash (–—), thorn (þÞ), EuroSign (€) and the German
// Sharp S (ßẞ). These keys aren't used in the US version, making the
// Icelandic version a superset of it.

// Maybe someone else will make a "full" attempt at an Icelandic layout
// but I was mostly interested in continuing to type English comfortably
// as a primary function while being able to type the full Icelandic
// alphabet as a secondary function.
//     -- Ævar Arnfjörð Bjarmason <avarab@gmail.com>

// Icelandic Dvorak
partial alphanumeric_keys
xkb_symbols "dvorak" {

    include "us(dvorak)"
    include "eurosign(4)"

    name[Group1]= "Icelandic (Dvorak)";

    key <AD11> { [      slash,  question,    U201e,   U201c   ] };
    key <AC02> { [       o,     O,           odiaeresis, Odiaeresis ] };
    key <AC06> { [       d,     D,           eth,     ETH     ] };
    key <AC10> { [       s,     S,           ae,      AE      ] };
    key <AC11> { [   minus,     underscore,  endash,  emdash  ] };
    key <AB10> { [       z,     Z,           thorn,   Thorn   ] };
    key <AB06> { [       b,     B,           ssharp,  U1E9E   ] };

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               // based on a keyboard map from an 'xkb/symbols/it' file
// 17 May 2003 Modified by Sebastiano Vigna (vigna@dsi.unimi.it)

default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin(type4)"

    name[Group1]="Italian";

    key <TLDE>	{ [ backslash,        bar,      notsign,    brokenbar ]	};

    key <AE02>	{ [         2,   quotedbl,  twosuperior, dead_doubleacute ] };
    key <AE03>	{ [         3,   sterling,threesuperior,   dead_tilde ]	};
    key <AE04>	{ [         4,     dollar,   onequarter,    oneeighth ] };

    key <AE10>	{ [         0,      equal,   braceright,  dead_ogonek ] };
    key <AE11>	{ [apostrophe,   question,        grave, questiondown ]	};
    key <AE12>	{ [    igrave, asciicircum,  asciitilde, dead_circumflex ] };

    key <AD11>	{ [    egrave,     eacute,  bracketleft,    braceleft ]	};
    key <AD12>	{ [      plus,   asterisk, bracketright,   braceright ]	};

    key <AC10>	{ [    ograve,   ccedilla,           at, dead_cedilla ] };
    key <AC11>	{ [    agrave,     degree,   numbersign, dead_abovering ] };

    key <AB06>	{ [         n,          N,       ntilde,       Ntilde ]	};
    key <AB08>	{ [     comma,  semicolon,   dead_acute,     multiply ]	};
    key <AB09>	{ [    period,      colon,periodcentered, dead_diaeresis ] };
    key <AB10>	{ [     minus, underscore,  dead_macron,     division ] };

    key <BKSL>	{ [    ugrave,    section,   dead_grave,   dead_breve ]	};

    key <LSGT>	{ [      less,    greater,guillemotleft,guillemotright] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // Modifies the basic italian layout to eliminate all dead keys

    include "it(basic)"

    name[Group1]="Italian (eliminate dead keys)";

    key <AE02>	{ [         2,   quotedbl,  twosuperior,  doubleacute ] };
    key <AE03>	{ [         3,   sterling,threesuperior,   asciitilde ]	};

    key <AE10>	{ [         0,       equal,  braceright,       ogonek ]	};
    key <AE12>	{ [    igrave, asciicircum,  asciitilde,  asciicircum ] };

    key <AC10>	{ [    ograve,   ccedilla,           at,      cedilla ] };
    key <AC11>	{ [    agrave,     degree,   numbersign,       degree ] };

    key <AB08>	{ [     comma,  semicolon,        acute,     multiply ]	};
    key <AB09>	{ [    period,      colon,periodcentered,   diaeresis ] };
    key <AB10>	{ [     minus, underscore,       macron,     division ] };

    key <BKSL>	{ [    ugrave,    section,        grave,        breve ]	};
};

partial alphanumeric_keys
xkb_symbols "winkeys" {

   include "it(basic)"
   name[Group1]="Italian (Winkeys)";
   include "eurosign(5)"
};

// Copied from macintosh_vndr/it
partial alphanumeric_keys
xkb_symbols "mac" {

    name[Group1]= "Italian (Macintosh)";

    key <LSGT> {	[        less,  greater   	]	};
    key <TLDE> {        [        at,    numbersign,    periodcentered              ]	};
    key <AE01> {	[   ampersand,    1, guillemotleft,guillemotright	]	};
    key <AE02> {	[    quotedbl,    2 		]	};
    key <AE03> {	[  apostrophe,    3         	]	};
    key <AE04> {	[   parenleft,    4,    braceleft,    bracketleft	]	};
    key <AE05> {	[    ccedilla,    5,     Ccedilla,    Iacute	]	};
    key <AE06> {	[      egrave,    6,    paragraph,    periodcentered]	};
    key <AE07> {	[  parenright,    7,   braceright,	  bracketright	]	};
    key <AE08> {	[    sterling,    8,   infinity			]	};
    key <AE09> {	[      agrave,    9,        acute,    Ocircumflex	]	};
    key <AE10> {	[      eacute,    0,        grave,    Oacute	]	};
    key <AE11> {	[       minus,    underscore	]	};
    key <AE12> {	[       equal, 	  plus,     notequal,    plusminus	]	};

    key <AD01> {	[           q,  Q 		]	};
    key <AD02> {	[	    z,  Z		]	};
    key <AD03> {	[	    e,  E,	EuroSign	]	};
    key <AD04> {	[	    r,  R,   registered			] 	};
    key <AD05> {	[	    t,  T		]	};
    key <AD06> {	[	    y,  Y,       Uacute,	ydiaeresis      ] 	};
    key <AD07> {	[	    u,  U		]	};
    key <AD08> {	[	    i,  I,  icircumflex,	idiaeresis      ] 	};
    key <AD09> {	[	    o,  O		]	};
    key <AD10> {	[	    p,  P		]	};
    key <AD11> {	[      igrave,  asciicircum     ]	};
    key <AD12> {	[      dollar,	asterisk        ]	};
    key <BKSL> {	[     section,  degree,           at,  numbersign      ]	};

    key <AC01> {	[	  a,	A,      aring,   Aring		] 	};
    key <AC02> {	[	  s,	S,     ssharp			]	};
    key <AC03> {	[	  d,	D		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H,     Igrave,    Icircumflex     ]	};
    key <AC07> {	[	  j,	J,  Idiaeresis,   Iacute          ]	};
    key <AC08> {	[	  k,	K,     Egrave,    Ediaeresis      ]	};
    key <AC09> {	[	  l,	L,     ssharp,    bar		]	};
    key <AC10> {	[         m,	M,         mu,    Oacute		]	};
    key <AC11> {	[    ugrave,	percent,         ae,    AE		]	};

    key <AB01> {	[	  w,	W 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB03> {	[	  c,	C,  copyright,    copyright	]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N,  dead_tilde                    ]       };
    key <AB07> {	[     comma,	question,          questiondown		]	};
    key <AB08> {	[ semicolon,	period          ]	};
    key <AB09> {	[     colon,	slash,        bar,    backslash	]	};
    key <AB10> {	[    ograve,	exclam,     exclamdown			]	};

    include "kpdl(dot)"
    include "level3(ralt_switch)"
};

// Used by Georgian people in Italy, 
// contributed by Vladimer Sichinava
partial alphanumeric_keys
xkb_symbols "geo" {
    include "it"
    include "ge(basic)"
    name[Group1]= "Georgian (Italy)";

    key <TLDE> { [ backslash, bar, notsign, brokenbar ] };
    key <AE01> { [ 1, exclam, onesuperior ] };
    key <AE02> { [ 2, quotedbl, twosuperior, dead_doubleacute ] };
    key <AE03> { [ 3, sterling, threesuperior, dead_tilde ] };
    key <AE04> { [ 4, dollar, onequarter, oneeighth ] };
    key <AE05> { [ 5, percent, onehalf ] };
    key <AE06> { [ 6, ampersand ] };
    key <AE07> { [ 7, slash, braceleft ] };
    key <AE08> { [ 8, parenleft, bracketleft ] };
    key <AE09> { [ 9, parenright ] };
    key <AE10> { [ 0, equal, braceright, dead_ogonek ] };
    key <AE11> { [ apostrophe, question, grave, questiondown ] };
    key <AE12> { [ igrave, asciicircum, asciitilde, dead_circumflex ] };

    key <AD03> { [ 0x010010d4, E, EuroSign ] };
    key <AD11> { [ egrave, eacute, bracketleft, braceleft ] };
    key <AD12> { [ plus, asterisk, bracketright, braceright ] };

    key <AC10> { [ ograve, ccedilla, at, dead_cedilla ] };
    key <AC11> { [ agrave, degree, numbersign, degree ] };
    key <BKSL> { [ ugrave, section, dead_grave, dead_breve ] };
    key <LSGT> { [ less, greater ] };

    key <AB08> { [ comma, semicolon ] };
    key <AB09> { [ period, colon ] };
    key <AB10> { [ minus, underscore ] };
};

// OLPC Section
xkb_symbols "olpc" {

    include "it(basic)"

    key <AE12> { [ igrave,  asciicircum,    asciitilde,     dead_tilde ] };
    key <BKSL> { [ ugrave,      section,        Egrave,     dead_breve ] };
    key <I219> { [ less,        greater, guillemotleft, guillemotright ] };
};

partial alphanumeric_keys modifier_keys
xkb_symbols "us" {

    include "us(euro)"

    name[Group1]= "Italian (US keyboard with Italian letters)";

    key <TLDE> { [     grave, asciitilde,    dead_grave,       dead_tilde ] };
    key <AE01> { [         1,     exclam,   onesuperior                   ] };
    key <AE02> { [         2,         at,   twosuperior                   ] };
    key <AE03> { [         3, numbersign, threesuperior                   ] };
    key <AE06> { [         6,asciicircum,dead_circumflex                  ] };
    key <AE10> { [         0, parenright,        degree                   ] };
    key <AE11> { [     minus, underscore,   dead_macron                   ] };

    key <AD03> { [         e,          E,        egrave,           Egrave ] };
    key <AD04> { [         r,          R,    registered                   ] };
    key <AD07> { [         u,          U,        ugrave,           Ugrave ] };
    key <AD08> { [         i,          I,        igrave,           Igrave ] };
    key <AD09> { [         o,          O,        ograve,           Ograve ] };

    key <AC01> { [         a,          A,        agrave,           Agrave ] };
    key <AC03> { [         d,          D,        eacute,           Eacute ] };
    key <AC07> { [         j,          J,        uacute,           Uacute ] };
    key <AC08> { [         k,          K,        iacute,           Iacute ] };
    key <AC09> { [         l,          L,        oacute,           Oacute ] };
    key <AC10> { [ semicolon,      colon,dead_diaeresis,   dead_diaeresis ] };
    key <AC11> { [apostrophe,   quotedbl,    dead_acute                   ] };

    key <AB01> { [         z,          Z,        aacute,           Aacute ] };
    key <AB03> { [         c,          C,     copyright                   ] };
    key <AB06> { [         n,          N,        ntilde,           Ntilde ] };
    key <AB08> { [     comma,       less,   guillemotleft                 ] };
    key <AB09> { [    period,    greater,  guillemotright                 ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "htcdream" {
        include "inet(htcdream)"
        name[Group1]= "Italian";

        //second row
        key <AD01> { [ q, Q, Tab, Tab ] };
        key <AD02> { [ w, W, grave, grave ] };
        key <AD03> { [ e, E, egrave, egrave] };
        key <AD04> { [ r, R, eacute, eacute ] };
        key <AD05> { [ t, T, quotedbl, quotedbl ] };
        key <AD06> { [ y, Y, apostrophe, apostrophe ] };
        key <AD07> { [ u, U, ugrave, ugrave ] };
        key <AD08> { [ i, I, igrave, igrave ] };
        key <AD09> { [ o, O, ograve, ograve ] };
        key <AD10> { [ p, P, NoSymbol, NoSymbol ] };

        //third row
        key <AC01> { [ a, A, agrave, agrave ] };
        key <AC02> { [ s, S, bar, bar ] };
        key <AC03> { [ d ,D, EuroSign, EuroSign ] };
        key <AC04> { [ f, F, sterling, sterling ] };
        key <AC05> { [ g, G, division, division ] };
        key <AC06> { [ h, H, multiply, multiply ] };
        key <AC07> { [ j, J, minus, minus ] };
        key <AC08> { [ k, K, plus, plus ] };
        key <AC09> { [ l, L, equal, equal ] };

        //forth row
        key <AB01> { [ z, Z, underscore, underscore ] };
        key <AB02> { [ x, X, asciitilde, asciitilde ] };
        key <AB03> { [ c, C, less, less ] };
        key <AB04> { [ v, V, greater, greater ] };
        key <AB05> { [ b, B,  backslash, backslash ] };
        key <AB06> { [ n, N, colon, colon ] };
        key <AB07> { [ m, M, semicolon, semicolon ] };
        key <AB08> { [ comma, comma, question, question ] };

        //fifth row
        key <FK15> { [ at, at, NoSymbol, NoSymbol ] };

        include "level3(alt_switch)"
};

partial alphanumeric_keys
xkb_symbols "ibm" {

    // Modifies the basic italian layout to match IBM 142 variant

    include "us"

    name[Group1]="Italian (IBM 142)";

    key <TLDE>	{ [ backslash,        bar                             ] };

    key <AE02>	{ [         2,   quotedbl                             ] };
    key <AE03>	{ [         3,   sterling,   numbersign               ] };
    key <AE06>	{ [         6,  ampersand                             ] };
    key <AE07>	{ [         7,      slash,    braceleft               ] };
    key <AE08>	{ [         8,  parenleft,  bracketleft               ] };
    key <AE09>	{ [         9, parenright, bracketright               ] };
    key <AE10>	{ [         0,      equal,   braceright               ] };
    key <AE11>	{ [apostrophe,   question                             ] };
    key <AE12>	{ [    igrave, asciicircum                            ] };

    key <AD01>	{ [         q,           Q,          at               ] };
    key <AD03>	{ [         e,           E,    EuroSign               ] };
    key <AD11>	{ [    egrave,     eacute                             ] };
    key <AD12>	{ [      plus,   asterisk,   asciitilde               ] };

    key <AC10>	{ [    ograve,   ccedilla                             ] };
    key <AC11>	{ [    agrave,     degree                             ] };

    key <AB08>	{ [     comma,  semicolon                             ] };
    key <AB09>	{ [    period,      colon                             ] };
    key <AB10>	{ [     minus, underscore                             ] };

    key <BKSL>	{ [    ugrave,    section,       grave                ] };

    key <LSGT>	{ [      less,    greater                             ] };

    include "level3(ralt_switch)"
    include "kpdl(comma)"
};


// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/it(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             // EAK (Easy Access keyboards: Internet, Multimedia, PDA)
// Copyright (C) 2002 Stanislav Brabec <sbrabec@suse.cz>
//
// Based on the LinEAK project.
// LinEAK - Linux support for Easy Access and Internet Keyboards
// Copyright (C) 2001, 2002 Mark Smulders <Mark@PIRnet.nl>

// Usage in XF86Config:
// Option "XkbLayout"	"my_kb_layout"
// Option "XkbVariant"	"my_kb_variant"
// Option "XkbModel"	"my_eak_type"
// Option "XkbRules"	"xfree86"
// Simple command line usage:
// setxkbmap 'my_kb_layout' -variant 'my_kb_variant' -model 'my_eak_type'

// Very common set of media keys.
hidden partial alphanumeric_keys
xkb_symbols "media_common" {
    key <I01>   {       [ XF86AudioMedia        ] };
    key <I10>   {       [ XF86AudioPrev         ] };
    key <I19>   {       [ XF86AudioNext         ] };
    key <I20>   {       [ XF86AudioMute         ] };
    key <I22>   {       [ XF86AudioPlay, XF86AudioPause ] };
    key <I24>   {       [ XF86AudioStop, XF86Eject ] };
    key <I2E>   {       [ XF86AudioLowerVolume  ] };
    key <I30>   {       [ XF86AudioRaiseVolume  ] };
    key <K5A>   {       [ XF86Eject             ] };
    key <K6C>   {       [ XF86Eject             ] };
};

// Popular web navigation keys.
hidden partial alphanumeric_keys
xkb_symbols "nav_common" {
    key <I21>   {       [ XF86Calculator        ] };
    key <I32>   {       [ XF86WWW               ] };
    key <I65>   {       [ XF86Search            ] };
    key <I66>   {       [ XF86Favorites         ] };
    key <I67>   {       [ XF86Reload            ] };
    key <I68>   {       [ XF86Stop              ] };
    key <I69>   {       [ XF86Forward           ] };
    key <I6A>   {       [ XF86Back              ] };
    key <I6B>   {       [ XF86MyComputer        ] };
    key <I6C>   {       [ XF86Mail              ] };
    key <I6D>   {       [ XF86AudioMedia        ] };
};

// ACPI Standard
hidden partial alphanumeric_keys
xkb_symbols "acpi_common" {
    key <I5E>	{	[ XF86PowerOff		]	};
    key <I5F>	{	[ XF86Standby		]	};
    key <I63>	{	[ XF86WakeUp		]	};
    key <I74>	{	[ XF86Battery		]	};
    key <I76>	{	[ XF86WLAN		]	};
    key <I16>	{	[ XF86Sleep		]	};
};

// Combined sections, for simplicity.
hidden partial alphanumeric_keys
xkb_symbols "media_nav_common" {
    include "inet(media_common)"
    include "inet(nav_common)"
};

hidden partial alphanumeric_keys
xkb_symbols "media_nav_acpi_common" {
    include "inet(media_common)"
    include "inet(nav_common)"
    include "inet(acpi_common)"
};

hidden partial alphanumeric_keys
xkb_symbols "nav_acpi_common" {
    include "inet(nav_common)"
    include "inet(acpi_common)"
};

hidden partial alphanumeric_keys
xkb_symbols "media_acpi_common" {
    include "inet(media_common)"
    include "inet(acpi_common)"
};

// Evdev Standardized Keycodes
partial alphanumeric_keys
xkb_symbols "evdev" {
    key <MUTE>   {      [ XF86AudioMute         ]       };
    key <VOL->   {      [ XF86AudioLowerVolume  ]       };
    key <VOL+>   {      [ XF86AudioRaiseVolume  ]       };
    key <POWR>   {      [ XF86PowerOff          ]       };
    key <STOP>   {      [ Cancel                ]       };
    key <AGAI>   {      [ Redo                  ]       };
    key <PROP>   {      [ SunProps              ]       };
    key <UNDO>   {      [ Undo                  ]       };
    key <FRNT>   {      [ SunFront              ]       };
    key <COPY>   {      [ XF86Copy              ]       };
    key <OPEN>   {      [ XF86Open              ]       };
    key <PAST>   {      [ XF86Paste             ]       };
    key <FIND>   {      [ Find                  ]       };
    key <CUT>    {      [ XF86Cut               ]       };
    key <HELP>   {      [ Help                  ]       };
    key <LNFD>   {      [ Linefeed              ]       };

// Commented out because HZTG has same keycode as TLDE
//    key <HZTG>   {      [ Zenkaku_Hankaku       ]       };

    key <HKTG>   {      [ Hiragana_Katakana     ]       };
    key <HENK>   {      [ Henkan                ]       };
    key <MUHE>   {      [ Muhenkan              ]       };
    key <KATA>   {      [ Katakana              ]       };
    key <HIRA>   {      [ Hiragana              ]       };
    key <RO>     {      [ Romaji                ]       };

    key <HNGL>   {      [ Hangul                ]       };
    key <HJCV>   {      [ Hangul_Hanja          ]       };
    key <FK21>   {      [ XF86TouchpadToggle    ]       };
    key <FK22>   {      [ XF86TouchpadOn        ]       };
    key <FK23>   {      [ XF86TouchpadOff       ]       };

    key <FK20>   {      [ XF86AudioMicMute      ]       };

//  key <I120>   {      [ ]       }; // KEY_MACRO
    key <I126>   {      [ plusminus             ]       };
    key <I128>   {      [ XF86LaunchA           ]       };
    key <I147>   {      [ XF86MenuKB            ]       };
    key <I148>   {      [ XF86Calculator        ]       };
//  key <I149>   {      [ ]       }; // KEY_SETUP
    key <I150>   {      [ XF86Sleep             ]       };
    key <I151>   {      [ XF86WakeUp            ]       };
    key <I152>   {      [ XF86Explorer          ]       };
    key <I153>   {      [ XF86Send              ]       };
//  key <I154>   {      [ ]       }; // KEY_DELETEFILE
    key <I155>   {      [ XF86Xfer              ]       };
    key <I156>   {      [ XF86Launch1           ]       };
    key <I157>   {      [ XF86Launch2           ]       };
    key <I158>   {      [ XF86WWW               ]       };
    key <I159>   {      [ XF86DOS               ]       };
    key <I160>   {      [ XF86ScreenSaver       ]       };
    key <I161>   {      [ XF86RotateWindows     ]       };
    key <I162>   {      [ XF86TaskPane          ]       };
    key <I163>   {      [ XF86Mail              ]       };
    key <I164>   {      [ XF86Favorites         ]       };
    key <I165>   {      [ XF86MyComputer        ]       };
    key <I166>   {      [ XF86Back              ]       };
    key <I167>   {      [ XF86Forward           ]       };
//  key <I168>   {      [ ]       }; // KEY_CLOSECD (opposite of eject)
    key <I169>   {      [ XF86Eject             ]       };
    key <I170>   {      [ XF86Eject, XF86Eject  ]       };
    key <I171>   {      [ XF86AudioNext         ]       };
    key <I172>   {      [ XF86AudioPlay, XF86AudioPause ] };
    key <I173>   {      [ XF86AudioPrev         ]       };
    key <I174>   {      [ XF86AudioStop, XF86Eject ]    };
    key <I175>   {      [ XF86AudioRecord       ]       };
    key <I176>   {      [ XF86AudioRewind       ]       };
    key <I177>   {      [ XF86Phone             ]       };
//  key <I178>   {      [ ]       }; // KEY_ISO
    key <I179>   {      [ XF86Tools             ]       };
    key <I180>   {      [ XF86HomePage          ]       };
    key <I181>   {      [ XF86Reload           ]       };
    key <I182>   {      [ XF86Close             ]       };
//  key <I183>   {      [ ]       }; // KEY_MOVE
//  key <I184>   {      [ ]       }; // KEY_EDIT
    key <I185>   {      [ XF86ScrollUp          ]       };
    key <I186>   {      [ XF86ScrollDown        ]       };
    key <I187>   {      [ parenleft             ]       };
    key <I188>   {      [ parenright            ]       };
    key <I189>   {      [ XF86New               ]       };
    key <I190>   {      [ Redo                  ]       };
    key <I192>   {      [ XF86LaunchA           ]       };
    key <I193>   {      [ XF86LaunchC           ]       };
    key <I194>   {      [ XF86LaunchD           ]       };
    key <I195>   {      [ XF86LaunchE           ]       };
    key <I196>   {      [ XF86LaunchF           ]       };
    key <I208>   {      [ XF86AudioPlay         ]       };
    key <I209>   {      [ XF86AudioPause        ]       };
    key <I210>   {      [ XF86Launch3           ]       };
    key <I211>   {      [ XF86Launch4           ]       };
    key <I212>   {      [ XF86LaunchB           ]       };
    key <I213>   {      [ XF86Suspend           ]       };
    key <I214>   {      [ XF86Close             ]       };
    key <I215>   {      [ XF86AudioPlay         ]       };
    key <I216>   {      [ XF86AudioForward      ]       };
//  key <I217>   {      [ ]       }; // KEY_BASSBOOST
    key <I218>   {      [ Print                 ]       };
//  key <I219>   {      [ ]       }; // KEY_HP
    key <I220>   {      [ XF86WebCam            ]       };
//  key <I221>   {      [ ]       }; // KEY_SOUND
//  key <I222>   {      [ ]       }; // KEY_QUESTION
    key <I223>   {      [ XF86Mail              ]       };
    key <I224>   {      [ XF86Messenger         ]       }; // KEY_CHAT
    key <I225>   {      [ XF86Search            ]       };
    key <I226>   {      [ XF86Go                ]       }; // KEY_CONNECT
    key <I227>   {      [ XF86Finance           ]       };
    key <I228>   {      [ XF86Game              ]       }; // KEY_SPORT
    key <I229>   {      [ XF86Shop              ]       };
//  key <I230>   {      [ ]       }; // KEY_ALTERASE
    key <I231>   {      [ Cancel                ]       };
    key <I232>   {      [ XF86MonBrightnessDown ]       };
    key <I233>   {      [ XF86MonBrightnessUp   ]       };
    key <I234>   {      [ XF86AudioMedia        ]       };
    key <I235>   {      [ XF86Display           ]       };
    key <I236>   {      [ XF86KbdLightOnOff     ]       }; // KEY_KBDILLUMTOGGLE
    key <I237>   {      [ XF86KbdBrightnessDown ]       }; // KEY_KBDILLUMDOWN
    key <I238>   {      [ XF86KbdBrightnessUp   ]       }; // KEY_KBDILLUMUP
    key <I239>   {      [ XF86Send              ]       };
    key <I240>   {      [ XF86Reply             ]       };
    key <I241>   {      [ XF86MailForward       ]       };
    key <I242>   {      [ XF86Save              ]       };
    key <I243>   {      [ XF86Documents         ]       };
    key <I244>   {      [ XF86Battery           ]       };
    key <I245>   {      [ XF86Bluetooth         ]       };
    key <I246>   {      [ XF86WLAN              ]       };
//  key <I249>   {      [ ]       }; // KEY_VIDEO_NEXT  --  drive next video source
//  key <I250>   {      [ ]       }; // KEY_VIDEO_PREV  --  drive previous video source
//  key <I251>   {      [ ]       }; // KEY_BRIGHTNESS_CYCLE  --  bright up, max++ == min
//  key <I252>   {      [ ]       }; // KEY_BRIGHTNESS_ZERO  --  brightness off
//  key <I253>   {      [ ]       }; // KEY_DISPLAY_OFF  --  turn off display
//  key <I254>   {      [ ]       }; // KEY_WIMAX
    key <I255>   {      [ XF86Hibernate         ]       }; // KEY_HIBERNATE

    key <FK13>   {      [ XF86Tools         ]       };
    key <FK14>   {      [ XF86Launch5       ]       };
    key <FK15>   {      [ XF86Launch6       ]       };
    key <FK16>   {      [ XF86Launch7       ]       };
    key <FK17>   {      [ XF86Launch8       ]       };
    key <FK18>   {      [ XF86Launch9       ]       };
};


// Acer

// Acer AirKey V
partial alphanumeric_keys
xkb_symbols "airkey" {
    include "inet(acpi_common)"
    key <I13>	{	[ XF86AudioNext		]	};
    key <I15>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I16>	{	[ XF86Mail		]	};
    key <I18>	{	[ XF86AudioPrev		]	};
    key <I19>	{	[ XF86AudioMute		]	};
    key <I24>	{	[ XF86WWW		]	};
    key <I26>	{	[ XF86AudioLowerVolume	]	};
    key <I2D>	{	[ XF86AudioRaiseVolume	]	};
    key <I2F>	{	[ XF86Terminal		]	};
    key <I31>	{	[ XF86AudioStop, XF86Eject ]	};
};

// Acer C300 Laptop
partial alphanumeric_keys
xkb_symbols "acer_c300" {
    include "inet(nav_common)"
    key <I17>   {       [ F14                   ]       };
    key <I1F>   {       [ F13                   ]       };
    key <I20>   {       [ XF86AudioMute         ]       };
    key <I2E>   {       [ XF86AudioLowerVolume  ]       };
    key <I30>   {       [ XF86AudioRaiseVolume  ]       };
    key <I5E>   {       [ XF86Launch2           ]       };
    key <I75>   {       [ Help                  ]       };
    key <IR7C>  {       [ XF86Launch1           ]       };
};

// Acer Ferrari 4000 Keyboard
// From Alex Dubov <oakad@yahoo.com>
partial alphanumeric_keys
xkb_symbols "acer_ferrari4k" {
    include "inet(media_nav_common)"
    key <I24>   {       [ dollar                ]       };
    key <I25>   {       [ EuroSign              ]       };
    key <I26>   {       [ XF86Display           ]       };
    // Missing keycodes - set-up with setkeycodes
    key <I70>   {       [ Help                  ]       };
    key <I71>   {       [ XF86Launch1           ]       };
    key <I72>   {       [ XF86Launch2           ]       };
    key <I73>   {       [ XF86Launch3           ]       };
    key <I74>   {       [ XF86Launch4           ]       };
};

// Acer Laptop (Generic layout for Acer laptops from 2004 onwards)
// From Carlos Corbacho <cathectic@gmail.com>
// Keys marked (HAL) require HAL 0.5.10 (or newer) to be set up correctly
// (Your laptop must also be added to hal-info)
// (Not all these keys will be available on every Acer laptop)
partial alphanumeric_keys
xkb_symbols "acer_laptop" {
    include "inet(media_nav_acpi_common)"
    key <I17>   {       [ XF86Launch2           ]        }; // "P" or "P2" (HAL)
    key <I1F>   {       [ XF86Launch1           ]        }; // "e" or "P1" (HAL)

    // Hotkeys (Function)
    // Launch Keys
    // Device keys
    key <I56>   {       [ XF86Display           ]        }; // Fn+F5 (HAL)
    key <I71>   {       [ XF86Launch4           ]        }; // Fn+F3 (HAL)
    key <I72>   {       [ XF86LaunchB           ]        }; // Bluetooth (HAL)
    key <I73>   {       [ XF86LaunchA           ]        }; // Wireless (HAL)
    key <I75>   {       [ Help                  ]        }; // Fn+F1 (HAL)
    key <I79>   {       [ XF86Launch5           ]        }; // Fn+F7 (HAL)
    key <K66>   {       [ XF86Launch3           ]        }; // Fn+F2 (HAL)

    // Special Characters
    // To avoid setting a precedent/standard that will be broken in later
    // versions of HAL, these keys are commented out for now. When they are no
    // longer marked 'FIXME' and have saner keycodes, these two entries can be
    // fixed and permanently uncommented. In the meantime, just uncomment these
    // to make the keys work.
//  key <K5D>   {       [ EuroSign              ]        }; // Euro (HAL)
//  key <K5E>   {       [ dollar                ]        }; // Dollar (HAL)
};


// Azona

// Azona RF2300 wireless Internet Keyboard
partial alphanumeric_keys
xkb_symbols "azonaRF2300" {
    // From Radics Laszlo <garaboncias@mailbox.hu>
    include "inet(nav_acpi_common)"
    key <I02>   {       [ XF86HomePage          ]       };
    key <I17>   {       [ XF86AudioStop         ]       };
    key <I1E>   {       [ XF86AudioRaiseVolume  ]       };
    key <I1F>   {       [ XF86AudioPlay, XF86AudioPause ] };
    key <I22>   {       [ XF86AudioNext         ]       };
    key <I24>   {       [ XF86AudioPrev         ]       };
    key <I25>   {       [ XF86AudioLowerVolume  ]       };
    key <I26>   {       [ XF86AudioMute         ]       };
    key <I3C>   {       [ XF86Copy              ]       };
    key <I78>   {       [ XF86Cut               ]       };
//  key <RCTL>  {       [ XF86Paste             ]       };
};


// Brother

// Brother Internet Keyboard
partial alphanumeric_keys
xkb_symbols "brother" {
    include "inet(acpi_common)"
    key <I10>	{	[ XF86ScrollUp		]	};
    key <I12>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I17>	{	[ XF86AudioPrev		]	};
    key <I18>	{	[ XF86ScrollDown	]	};
    key <I19>	{	[ XF86ZoomOut		]	};
    key <I1E>	{	[ XF86AudioMute		]	};
    key <I21>	{	[ XF86WWW		]	};
    key <I22>	{	[ Menu			]	};
    key <I23>	{	[ XF86AudioStop		]	};
    key <I24>	{	[ XF86Calculator	]	};
    key <I25>	{	[ XF86Xfer		]	};
    key <I26>	{	[ XF86Mail		]	};
    key <I2E>	{	[ XF86AudioNext		]	};
    key <I30>	{	[ XF86AudioRaiseVolume	]	};
    key <I32>	{	[ XF86ZoomIn		]	};
    key <I68>	{	[ XF86AudioLowerVolume	]	};
};


// BTC

// BTC 5113RF Multimedia
partial alphanumeric_keys
xkb_symbols "btc5113rf" {
    include "inet(acpi_common)"
    key <I10>	{	[ XF86AudioStop		]	};
    key <I12>	{	[ XF86AudioMute		]	};
    key <I19>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I1E>	{	[ XF86AudioRaiseVolume	]	};
    key <I20>	{	[ XF86Favorites		]	};
    key <I21>	{	[ XF86Eject		]	};
    key <I22>	{	[ XF86AudioPrev		]	};
    key <I24>	{	[ XF86AudioNext		]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86Back		]	};
    key <I30>	{	[ XF86WWW		]	};
    key <I32>	{	[ XF86Search		]	};
};

// BTC 9000
partial alphanumeric_keys
xkb_symbols "btc9000" {
    include "inet(acpi_common)"
    key <I10>	{	[ XF86AudioStop		]	};
    key <I12>	{	[ XF86AudioMute		]	};
    key <I19>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I1E>	{	[ XF86AudioRaiseVolume	]	};
    key <I20>	{	[ XF86Favorites		]	};
    key <I21>	{	[ XF86AudioMedia	]	};
    key <I22>	{	[ XF86AudioPrev		]	};
    key <I24>	{	[ XF86AudioNext		]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86Reload		]	};
    key <I2E>	{	[ XF86Mail		]	};
    key <I30>	{	[ XF86HomePage		]	};
    key <I32>	{	[ XF86Search		]	};
};

// BTC 9000A
partial alphanumeric_keys
xkb_symbols "btc9000a" {
    include "inet(acpi_common)"
    key <I10>	{	[ XF86AudioStop		]	};
    key <I12>	{	[ XF86AudioMute		]	};
    key <I19>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I1E>	{	[ XF86AudioRaiseVolume	]	};
    key <I20>	{	[ XF86Favorites		]	};
    key <I21>	{	[ XF86Eject		]	};
    key <I22>	{	[ XF86AudioPrev		]	};
    key <I24>	{	[ XF86AudioNext		]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86HomePage		]	};
    key <I2E>	{	[ Help			]	};
    key <I30>	{	[ XF86WWW		]	};
    key <I32>	{	[ XF86Search		]	};
};

// BTC 9001AH
xkb_symbols "btc9001ah" {
    include "inet(acpi_common)"
    key <I02>   {       [ XF86HomePage          ]       };
    key <I17>   {       [ XF86AudioStop         ]       };
    key <I1E>   {       [ XF86AudioRaiseVolume  ]       };
    key <I1F>   {       [ XF86AudioPlay, XF86AudioPause ] };
    key <I22>   {       [ XF86AudioNext         ]       };
    key <I24>   {       [ XF86AudioPrev         ]       };
    key <I25>   {       [ XF86AudioLowerVolume  ]       };
    key <I26>   {       [ XF86AudioMute         ]       };
    key <I6C>   {       [ XF86Mail              ]       };
    key <RWIN>  {       [ XF86Eject             ]       };
};

// BTC 5090
partial alphanumeric_keys
xkb_symbols "btc5090" {
    include "inet(media_nav_acpi_common)"
    key <I26>   {       [ XF86Start             ]       };
    key <I33>   {       [ XF86Eject             ]       };
};

// BTC 9019U
partial alphanumeric_keys
xkb_symbols "btc9019u" {
    include "inet(media_nav_acpi_common)"
    key <FK17> {	[ XF86Search		]	};
    key <I02>  {	[ XF86HomePage		]	};
};


// Cherry

// Cherry Blue Line CyBo@rd
partial alphanumeric_keys
xkb_symbols "cherryblue" {
    include "inet(nav_common)"
    key <FK16>	{	[ XF86Reload		]	};
    key <I02>	{	[ XF86HomePage		]	};
    key <I17>	{	[ XF86AudioStop		]	};
    key <I1E>	{	[ XF86AudioRaiseVolume	]	};
    key <I1F>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I22>	{	[ XF86AudioNext		]	};
    key <I24>	{	[ XF86AudioPrev		]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86AudioMute		]	};
    key <I63>	{	[ XF86Standby		]	};
    key <PRSC>	{	[ XF86Terminal		]	};
    key <IR7C>	{	[ XF86Go		]	};
};

// Cherry CyMotion Master XPress
partial alphanumeric_keys
xkb_symbols "cherryblueb" {
    include "inet(media_nav_common)"
    key <FK16>  {       [ XF86Reload            ]       };
    key <I02>   {       [ XF86HomePage          ]       };
    key <I07>   {       [ XF86Forward           ]       };
    key <I08>   {       [ XF86Back              ]       };
    key <I0A>   {       [ XF86Copy              ]       };
    key <I0B>	{	[ XF86ScrollUp		]	};
    key <I12>   {       [ XF86ScrollDown        ]       };
    key <I17>   {       [ XF86Cut               ]       };
    key <I18>   {       [ XF86Paste             ]       };
    key <I1E>   {       [ XF86AudioRaiseVolume  ]       };
    key <I25>   {       [ XF86AudioLowerVolume  ]       };
    key <I26>   {       [ XF86AudioMute         ]       };
    key <I2C>   {       [ XF86Book              ]       };
    key <I32>   {       [ XF86Finance           ]       };
    key <I63>   {       [ XF86Standby                   ] };
    key <I67>   {       [ XF86AudioRewind       ]       };
    key <I70>   {       [ XF86Eject             ]       };
    key <I71>   {       [ XF86Book              ]       };
    key <I72>   {       [ XF86Book              ]       };
    key <PRSC>  {       [ XF86Terminal          ]       };
    key <IR7C>  {       [ XF86Go                ]       };
};

// Cherry Blue Line CyBo@rd (alternate option)
partial alphanumeric_keys
xkb_symbols "cherrybluea" {
    include "inet(media_nav_acpi_common)"
    key <I6D>	{	[ XF86Go		]	};
};

// Cherry CyBo@rd USB-Hub
partial alphanumeric_keys
xkb_symbols "cherrycyboard" {
    include "inet(media_nav_acpi_common)"
    key <FK17>    {   [ XF86Search        ]   };
    key <I02> {   [ XF86HomePage      ]   };
    key <K67> {   [ XF86Terminal      ]   };
    key <IR7C>    {   [ XF86AudioMedia    ]   };
};

// Cherry CyMotion Expert
partial alphanumeric_keys
xkb_symbols "cherrycmexpert" {
    include "inet(cherryblueb)"
    include "inet(acpi_common)"
    key <FK15>	{	[ XF86Mail		]	};
};


// Chicony

// Chicony Internet Keyboard
partial alphanumeric_keys
xkb_symbols "chicony" {
    include "inet(acpi_common)"
    key <I12>	{	[ XF86AudioMute		]	};
    key <I17>	{	[ XF86Mail		]	};
    key <I19>	{	[ XF86AudioLowerVolume	]	};
    key <I1E>	{	[ XF86Forward		]	};
    key <I20>	{	[ XF86AudioNext		]	};
    key <I21>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I22>	{	[ XF86AudioPrev		]	};
    key <I23>	{	[ XF86AudioRaiseVolume	]	};
    key <I24>	{	[ XF86AudioStop		]	};
    key <I25>	{	[ XF86Back		]	};
    key <I26>	{	[ XF86LaunchB		]	};
    key <I2E>	{	[ XF86LaunchC		]	};
    key <I30>	{	[ XF86LaunchA		]	};
    key <I32>	{	[ XF86WWW		]	};
    key <I5F>	{	[ XF86ContrastAdjust	]	};
    key <I63>	{	[ XF86BrightnessAdjust	]	};
};

// Chicony KU-0108
partial alphanumeric_keys
xkb_symbols "chicony0108" {
    include "inet(cherrycyboard)"
};

// Chicony KU-0420 AKA Targus Slim Internet Media USB Keyboard
partial alphanumeric_keys
xkb_symbols "chicony0420" {
    include "inet(media_nav_acpi_common)"
    key <I01>   {       [ XF86AudioMedia        ]       };
    key <K67>   {       [ XF86MyComputer        ]       };
};

// Chicony KB-9885
partial alphanumeric_keys
xkb_symbols "chicony9885" {
    include "inet(acpi_common)"
    key <I12>	{	[ XF86AudioMute		]	};
    key <I17>	{	[ XF86Mail		]	};
    key <I19>	{	[ XF86AudioLowerVolume	]	};
    key <I1E>	{	[ XF86Forward		]	};
    key <I20>	{	[ XF86AudioNext		]	};
    key <I21>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I22>	{	[ XF86AudioPrev		]	};
    key <I23>	{	[ XF86AudioRaiseVolume	]	};
    key <I24>	{	[ XF86AudioStop		]	};
    key <I25>	{	[ XF86Back		]	};
    key <I26>	{	[ XF86LaunchB		]	};
    key <I2E>	{	[ XF86LaunchC		]	};
    key <I30>	{	[ XF86LaunchA		]	};
    key <I32>	{	[ XF86WWW		]	};
};


// Compaq

// Compaq Easy Access Keyboard
partial alphanumeric_keys
xkb_symbols "compaqeak8" {
    key <I13>	{	[ XF86Community		]	};
    key <I14>	{	[ XF86Market		]	};
    key <I15>	{	[ XF86Meeting		]	};
    key <I1A>	{	[ XF86Search		]	};
    key <I1B>	{	[ XF86News		]	};
    key <I1E>	{	[ XF86Mail		]	};
    key <I1F>	{	[ XF86HomePage		]	};
    key <I23>	{	[ XF86WWW		]	};
};

// Compaq Internet Keyboard (7 keys)
partial alphanumeric_keys
xkb_symbols "compaqik7" {
    key <I12>	{	[ XF86LightBulb		]	};
    key <I1E>	{	[ XF86Mail		]	};
    key <I21>	{	[ XF86Search		]	};
    key <I23>	{	[ Help			]	};
    key <I25>	{	[ XF86VendorHome	]	};
    key <I26>	{	[ XF86HomePage		]	};
    key <I32>	{	[ XF86Shop		]	};
};

// Compaq Internet Keyboard (13 keys)
partial alphanumeric_keys
xkb_symbols "compaqik13" {
    include "inet(media_acpi_common)"
    key <I1E>	{	[ XF86Mail		]	};
    key <I1F>	{	[ XF86Go		]	};
    key <I21>	{	[ XF86Search		]	};
    key <I23>	{	[ XF86WWW		]	};
    key <I32>	{	[ XF86Shop		]	};
};

// Compaq Internet Keyboard (18 keys)
partial alphanumeric_keys
xkb_symbols "compaqik18" {
    include "inet(media_acpi_common)"
    key <I12>	{	[ XF86LightBulb		]	};
    key <I18>	{	[ XF86Eject		]	};
    key <I1E>	{	[ XF86Mail		]	};
    key <I1F>	{	[ XF86Go		]	};
    key <I21>	{	[ XF86Search		]	};
    key <I23>	{	[ XF86WWW		]	};
    key <I25>	{	[ XF86VendorHome	]	};
    key <I26>	{	[ XF86Community		]	};
    key <I32>	{	[ XF86Shop		]	};
    key <I68>	{	[ Print			]	};
};

// Laptop/notebook Compaq (eg. Armada, Evo) Laptop Keyboard
partial alphanumeric_keys
xkb_symbols "armada" {
    include "inet(media_acpi_common)"
    key <I1A>	{	[ XF86Search		]	};
    key <I1E>	{	[ XF86Mail		]	};
    key <I1F>	{	[ XF86HomePage		]	};
    key <I23>	{	[ XF86WWW		]	};
    key <I59>   {       [ XF86Launch2           ]       }; // Battery Monitor
    key <I6F>	{	[ XF86AudioMedia	]	};
    key <I75>   {       [ XF86Launch0           ]       }; // Info Center
};

// Laptop/notebook Compaq (eg. Presario) Internet Keyboard
partial alphanumeric_keys
xkb_symbols "presario" {
    include "inet(media_acpi_common)"
    key <I14>	{	[ XF86Q			]	};
    key <I18>	{	[ XF86Launch2		]	};
    key <I1E>	{	[ XF86Mail		]	};
    key <I1F>	{	[ XF86Launch1		]	};
    key <I23>	{	[ XF86WWW		]	};
    key <I32>	{	[ XF86Shop		]	};
    key <I75>	{	[ XF86AudioMedia	]	};
};

// Compaq iPaq Keyboard
partial alphanumeric_keys
xkb_symbols "ipaq" {
    key <FK16>	{	[ XF86Shop		]	};
    key <I02>	{	[ XF86Standby		]	};
    key <I65>	{	[ XF86Search		]	};
    key <I66>	{	[ XF86Travel		]	};
    key <I69>	{	[ XF86BackForward	]	};
    key <I6A>	{	[ XF86Q			]	};
    key <I6C>	{	[ XF86Mail		]	};
};


// Dell

partial alphanumeric_keys
xkb_symbols "dell" {
    include "inet(acpi_common)"
    key <I12>	{	[ XF86Mail		]	};
    key <I1E>	{	[ XF86Search		]	};
    key <I26>	{	[ XF86HomePage		]	};
};

// Dell Precision M65
partial alphanumeric_keys
xkb_symbols "dellm65" {
    include "inet(media_common)"
    key <I04>   {       [ XF86PowerOff          ]       };
    key <LWIN>  {       [ Super_L               ]       };
};

// Laptop/notebook Dell Inspiron 8xxx
partial alphanumeric_keys
xkb_symbols "inspiron" {
    include "inet(media_common)"
    key <I02>   {       [ XF86AudioStop         ]       };
    key <I04>   {       [ XF86AudioNext         ]       };
    key <I21>   {       [ XF86Eject             ]       };
    key <I56>   {       [ XF86Display           ]       };
    key <IR7D>  {       [ XF86AudioPrev         ]       };
    key <IR7C>  {       [ XF86AudioPlay, XF86AudioPause ] };
};

// DELL USB Multimedia Keyboard (former 8135, generalized, superset of 8125)
partial alphanumeric_keys
xkb_symbols "dellusbmm" {
    // Describes the extra keys on a SK-8135 Multimedia keyboard
    // From Olivier Lahaye <olivier dot lahaye at motorola dot com>
    include "inet(media_nav_acpi_common)"
    key <I02>	{	[ XF86HomePage		]	};
    key <K67>	{	[ XF86MyComputer	]	};
    key <IR7C>	{	[ XF86AudioMedia	]	};
};


// Diamond

// Diamond 9801 / 9802 series
partial alphanumeric_keys
xkb_symbols "diamond" {
    include "inet(media_nav_acpi_common)"
    key <I6D>	{	[ XF86Go		]	};
};


// Ennyah

// Ennyah DKB-1008
partial alphanumeric_keys
xkb_symbols "ennyah_dkb1008" {
    include "inet(media_nav_acpi_common)"
    key <IR7C>  {	[ XF86AudioMedia	]	};
};


// Genius

// Genius Comfy KB-16M / Genius MM Keyboard KWD-910
partial alphanumeric_keys
xkb_symbols "genius" {
    include "inet(media_acpi_common)"
    key <I12>   {	[ XF86AudioRaiseVolume	]	};
    key <I17>   {	[ XF86Calculator	]	};
    key <I19>   {	[ XF86AudioLowerVolume	]	};
    key <I1E>   {	[ XF86Forward		]	};
    key <I21>   {	[ XF86AudioNext		]	};
    key <I23>	{	[ XF86AudioPrev		]	};
    key <I25>   {	[ XF86Back		]	};
    key <I26>   {	[ XF86ScreenSaver	]	};
    key <I2E>   {	[ XF86Mail		]	};
    key <I30>   {	[ XF86Eject		]	};
    key <I32>   {	[ XF86WWW		]	};
};

// Genius Comfy 21e
partial alphanumeric_keys
xkb_symbols "geniuscomfy2" {
    // Describes the extra keys on a Genius Comfy KB-21e-Scroll
    // From Radics Laszlo <garaboncias@mailbox.hu>
    include "inet(media_nav_acpi_common)"
    key <I23>   {       [ Return                ]       };
};


// Gyration

partial alphanumeric_keys
xkb_symbols "gyration" {
    include "inet(nav_common)"
    key <FK16>	{	[ XF86Reload		]	};
    key <I02>	{	[ XF86HomePage		]	};
    key <I17>	{	[ XF86AudioStop		]	};
    key <I1E>	{	[ XF86AudioRaiseVolume	]	};
    key <I1F>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I22>	{	[ XF86AudioNext		]	};
    key <I24>	{	[ XF86AudioPrev		]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86AudioMute		]	};
};


// Hewlett-Packard

// Hewlett-Packard Internet Keyboard
partial alphanumeric_keys
xkb_symbols "hpi6" {
    include "inet(media_nav_acpi_common)"
    key <I02>   {       [ XF86HomePage          ]       };
    key <I12>	{	[ XF86Search		]	};
    key <I14>	{	[ XF86VendorHome	]	};
    key <I15>	{	[ XF86Community		]	};
    key <I16>	{	[ XF86AudioMedia	]	};
    key <I18>	{	[ XF86Eject		]	};
    key <I1E>	{	[ XF86Shop		]	};
    key <I1F>	{	[ XF86Launch1		]	};
    key <I26>	{	[ Help			]	};
    key <I27>	{	[ XF86Finance		]	};
    key <I39>	{	[ Print			]	};
    key <I75>   {       [ Help                  ]       };
};

// Hewlett-Packard SK-2501, SK-2505 Multimedia Keyboard
partial alphanumeric_keys
xkb_symbols "hp250x" {
    key <I12>	{	[ XF86Tools		]	};
    key <I17>	{	[ XF86Search		]	};
    key <I18>	{	[ XF86Eject		]	};
    key <I1E>	{	[ XF86Mail		]	};
    key <I20>	{	[ XF86AudioMute		]	};
    key <I21>	{	[ XF86Launch5		]	};
    key <I22>	{	[ XF86Launch3		]	};
    key <I23>	{	[ XF86Launch2		]	};
    key <I24>	{	[ XF86Launch4		]	};
    key <I25>	{	[ XF86Standby		]	};
    key <I26>	{	[ Help			]	};
    key <I2E>	{	[ XF86AudioLowerVolume	]	};
    key <I30>	{	[ XF86AudioRaiseVolume	]	};
    key <I32>	{	[ XF86WWW		]	};
};

// Hewlett-Packard Omnibook XE3 GC, GD, GE and Pavilion N5xxx
partial alphanumeric_keys
xkb_symbols "hpxe3gc" {
    // Describes the OneTouch buttons on HP Omnibook XE3 GC and
    // HP Pavilion N52XX models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    include "inet(media_common)"
    key <I71>	{	[ Help			]	};
    key <I72>	{	[ XF86Launch1		]	};
    key <I73>	{	[ XF86WWW		]	};
    key <I74>	{	[ XF86Mail		]	};
};

// Hewlett-Packard Omnibook XE3 GF
partial alphanumeric_keys
xkb_symbols "hpxe3gf" {
    // Describes the OneTouch buttons on HP Omnibook XE3 GF models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    include "inet(media_nav_common)"
    key <I73>	{	[ Help			]	};
    key <I74>	{	[ XF86Launch1		]	};
};

// Hewlett-Packard Omnibook XT1000
partial alphanumeric_keys
xkb_symbols "hpxt1000" {
    // Describes the OneTouch buttons on HP Omnibook XT1000 models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    include "inet(media_nav_common)"
    key <I71>	{	[ XF86Launch3		]	};
    key <I72>	{	[ Help			]	};
    key <I73>	{	[ XF86Launch2		]	};
    key <I74>	{	[ XF86Launch1		]	};
};

// Hewlett-Packard Pavilion ZT11xx
partial alphanumeric_keys
xkb_symbols "hpzt11xx" {
    // Describes the OneTouch buttons on HP Pavilion ZT11xx models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    include "inet(media_nav_common)"
    key <I71>	{	[ XF86Launch3		]	};
    key <I72>	{	[ Help			]	};
    key <I73>	{	[ XF86Launch2		]	};
    key <I74>	{	[ XF86Launch1		]	};
};

// Hewlett-Packard Pavilion dv5
partial alphanumeric_keys
xkb_symbols "hpdv5" {
    // Describes the OneTouch buttons on HP Pavilion dv5 models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    include "inet(media_common)"
    key <I12>  {       [ XF86ScreenSaver       ]       };
    key <I32>  {       [ XF86WWW               ]       };
    key <I75>  {       [ Help                  ]       };
    key <K6D>  {       [ XF86Launch1           ]       };
};

// Hewlett-Packard Omnibook XE4xxx and ZE4xxx
partial alphanumeric_keys
xkb_symbols "hpxe4xxx" {
    // Describes the OneTouch buttons on HP Omnibook XE4xxx and ZE4xxx
    // models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    include "inet(media_nav_common)"
    key <I70>	{	[ Help			]	};
    key <I71>	{	[ XF86Launch2		]	};
    key <I73>	{	[ XF86Launch1		]	};
};

// Hewlett-Packard Omnibook 500 FA
partial alphanumeric_keys
xkb_symbols "hp500fa" {
    // Describes the OneTouch buttons on HP Omnibook 500 FA models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    key <I73>	{	[ Help			]	};
    key <I74>	{	[ XF86Launch1		]	};
};

// Hewlett-Packard Omnibook 5xx
partial alphanumeric_keys
xkb_symbols "hp5xx" {
    // Describes the OneTouch buttons on HP Omnibook 5xx models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    include "inet(media_common)"
    key <I73>	{	[ Help			]	};
    key <I74>	{	[ XF86Launch1		]	};
};


// Honeywell

// Honeywell Euroboard
partial alphanumeric_keys
xkb_symbols "honeywell_euroboard" {
    // January 2002
    // Scott Penrose <scottp@dd.com.au>
    // http://linux.dd.com.au/quest/linux/keyboard/honeywell/
    key <I10>	{	[ XF86Game		]	};
    key <I12>	{	[ XF86AudioPrev		]	};
    key <I17>	{	[ XF86Eject		]	};
    key <I18>	{	[ XF86Launch2		]	};
    key <I19>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I1E>	{	[ XF86Launch1		]	};
    key <I20>	{	[ XF86AudioMute		]	};
    key <I22>	{	[ XF86AudioNext		]	};
    key <I23>	{	[ XF86AudioStop		]	};
    key <I24>	{	[ XF86Mail		]	};
    key <I25>	{	[ XF86ScreenSaver	]	};
    key <I26>	{	[ XF86Calculator	]	};
    key <I2E>	{	[ XF86AudioLowerVolume	]	};
    key <I30>	{	[ XF86AudioRaiseVolume	]	};
    key <I32>	{	[ XF86WWW		]	};
};


// IBM

// IBM Rapid Access
partial alphanumeric_keys
xkb_symbols "rapidaccess" {
    key <I12>	{	[ XF86AudioMute		]	};
    key <I17>	{	[ XF86Launch2		]	};
    key <I1E>	{	[ XF86AudioLowerVolume	]	};
    key <I20>	{	[ XF86AudioRaiseVolume	]	};
    key <I21>	{	[ XF86AudioNext		]	};
    key <I22>	{	[ XF86AudioPause	]	};
    key <I22>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I23>	{	[ XF86AudioPrev		]	};
    key <I24>	{	[ XF86AudioStop		]	};
    key <I25>	{	[ XF86Standby		]	};
    key <I26>	{	[ Help			]	};
    key <I2E>	{	[ XF86Launch4		]	};
    key <I30>	{	[ XF86Launch3		]	};
    key <I32>	{	[ XF86Launch1		]	};
};

// IBM Rapid Access II
partial alphanumeric_keys
xkb_symbols "rapidaccess2" {
    include "inet(acpi_common)"
    key <I12>	{	[ XF86AudioNext		]	};
    key <I17>	{	[ XF86Favorites		]	};
    key <I1E>	{	[ XF86AudioMute		]	};
    key <I20>	{	[ XF86AudioStop		]	};
    key <I21>	{	[ XF86AudioLowerVolume	]	};
    key <I22>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I23>	{	[ XF86AudioRaiseVolume	]	};
    key <I24>	{	[ XF86AudioPrev		]	};
    key <I25>	{	[ XF86HomePage		]	};
    key <I26>	{	[ XF86Shop		]	};
    key <I2E>	{	[ XF86Search		]	};
    key <I30>	{	[ XF86MyComputer	]	};
    key <I32>	{	[ XF86VendorHome	]	};
};

// IBM ThinkPad 60 series
partial alphanumeric_keys
xkb_symbols "thinkpad60" {
    include "inet(media_nav_common)"
    key <I1F> { [ XF86VendorHome ] };
};

// IBM Space Saver
partial alphanumeric_keys
xkb_symbols "ibm_spacesaver" {
    key <NMLK>  {
        type="ONE_LEVEL",
        symbols[Group1]= [ Num_Lock ]
    };
};


// Logitech

// Logitech common definitions
hidden partial alphanumeric_keys
xkb_symbols "logitech_base" {
    include "inet(media_nav_acpi_common)"
    key <I02> { [ XF86HomePage ] };
    key <I15> { [ XF86Community ] };
    key <I16> { [ XF86ScrollClick ] };
    key <I21> {	[ XF86VendorHome ] };
    key <I3B> { [ XF86New ] };
    key <I3C> { [ XF86Reply ] };
    key <I43> { [ XF86MyComputer ] };
    key <I44> { [ XF86Documents ] };
    key <I57> { [ XF86Pictures ] };
    key <I58> { [ XF86Music ] };
};

// Logitech second set of common keys
hidden partial alphanumeric_keys
xkb_symbols "logitech_set3" {
    key <I17>	{	[ XF86AudioStop		]	};
    key <I1E>	{	[ XF86AudioRaiseVolume	]	};
    key <I1F>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I22>	{	[ XF86AudioNext		]	};
    key <I24>	{	[ XF86AudioPrev		]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86AudioMute		]	};
    key <I44>   {       [ XF86New               ]       };      // F1
    key <I45>   {       [ XF86Reply             ]       };      // F2
    key <I4A>   {       [ XF86Send              ]       };      // F4
    key <I54>   {       [ Print                 ]       };      // F7
    key <I55>   {       [ XF86Save              ]       };      // F8
    key <I56>   {       [ XF86Documents         ]       };      // F10
    key <I69>   {       [ XF86Go                ]       };
    key <IR7C>  {       [ XF86AudioMedia        ]       };
};

// Logitech Access Keyboard
partial alphanumeric_keys
xkb_symbols "logiaccess" {
    include "inet(logitech_base)"
    key <FK13>	{	[ XF86MailForward	]	};
    key <FK14>	{	[ XF86Send		]	};
    key <I11>	{	[ XF86Messenger		]	};
    key <I12>	{	[ XF86WebCam		]	};
};

// Logitech Cordless Desktop (alternate option)
partial alphanumeric_keys
xkb_symbols "logicda" {
    include "inet(logitech_base)"
    include "inet(logitech_set3)"
};

// Logitech Internet Navigator Keyboard
partial alphanumeric_keys
xkb_symbols "logicink" {
    include "inet(logitech_base)"
    key <I11>	{	[ XF86Shop		]	};
    key <I12>	{	[ XF86VendorHome	]	};
    key <I13>	{	[ XF86Finance		]	};
    key <I14>	{	[ XF86Start		]	};
};

// Logitech Cordless Desktop EX110
partial alphanumeric_keys
xkb_symbols "logiex110" {
    include "inet(logitech_base)"
    key <I2F>   {       [ XF86Close             ]       };      // Close
// Extended function keys
// In the Console before starting X
// Using setkeycodes e03b 212 e03c 213 e03d 214 e03e 215 e03f 216 e040 217
//       setkeycodes e041 218 e042 219 e043 220 e044 221 e057 222 e058 223 6d 206
// *=keys that are there but need different symbol names.
    key <I3B>   {       [ Help                  ]       };      // F1
    key <FK13>  {       [ XF86Word              ]       };      // F2
    key <FK14>  {       [ XF86Excel             ]       };      // F3
    key <FK15>  {       [ XF86Pictures          ]       };      // F4
    key <FK16>  {       [ Undo                  ]       };      // F5
    key <I65>   {       [ Redo                  ]       };      // F6 *
    key <I42>   {       [ Print                 ]       };      // F7
    key <I43>   {       [ XF86Save              ]       };      // F8
    key <I44>   {       [ XF86Launch1           ]       };      // F9 *
    key <I45>   {       [ XF86Launch2           ]       };      // F10
    key <I14>   {       [ XF86Launch3           ]       };      // F11
    key <I4A>   {       [ XF86Launch4           ]       };      // F12
};

// Logitech iTouch Internet Navigator Keyboard SE
partial alphanumeric_keys
xkb_symbols "logiinkse" {
    include "inet(logitech_base)"
    key <FK13>	{	[ XF86MailForward	]	};	// F3
    key <FK14>	{	[ XF86Send		]	};	// F4
    key <FK15>	{	[ Undo			]	};	// F5
    key <FK16>	{	[ Redo			]	};	// F6
    key <FK17>	{	[ Print			]	};	// F7
    key <I11>	{	[ XF86Messenger		]	};
    key <I12>	{	[ XF86WebCam		]	};
    key <I13>	{	[ XF86VendorHome	]	};
    key <I14>	{	[ XF86Shop		]	};
    key <I42>	{	[ XF86Save		]	};	// F8
};

// Logitech iTouch Internet Navigator Keyboard SE (USB)
partial alphanumeric_keys
xkb_symbols "logiinkseusb" {
    include "inet(logitech_base)"
    include "inet(logitech_set3)"
};

// Logitech iTouch Cordless Keyboard (model Y-RB6)
partial alphanumeric_keys
xkb_symbols "logiitc" {
    include "inet(logitech_base)"
    key <I2F> {	[ XF86AudioRaiseVolume ] };

    // Just to override RaiseVolume from logitech_base,
    // since no keysym can have two keycodes, see
    // https://bugs.freedesktop.org/show_bug.cgi?id=7095
    key <I30> {	[ XF86Launch1 ] };
};

// Logitech Internet Keyboard
partial alphanumeric_keys
xkb_symbols "logiik" {
    include "inet(logitech_base)"
    key <I12>	{	[ Find			]	};
    key <I17>	{	[ Print			]	};
    key <I18>	{	[ XF86Favorites		]	};
    key <I19>	{	[ XF86Reload		]	};
    key <I1E>	{	[ XF86Search		]	};
    key <I20>	{	[ XF86HotLinks		]	};
    key <I22>	{	[ XF86Forward		]	};
    key <I23>	{	[ XF86HomePage		]	};
    key <I24>	{	[ XF86Stop		]	};
    key <I25>	{	[ XF86OpenURL		]	};
    key <I26>	{	[ XF86AddFavorite	]	};
    key <I32>	{	[ XF86History		]	};
    key <I7A>	{	[ XF86WWW		]	};
};

// Logitech iTouch
partial alphanumeric_keys
xkb_symbols "itouch" {
    include "inet(logitech_base)"
    key <I1F>	{	[ XF86AudioMute		]	};
    key <I2B>	{	[ XF86AudioLowerVolume	]	};
    key <I2D>	{	[ XF86AudioRaiseVolume	]	};
};

// Logitech UltraX Cordless Media Desktop
partial alphanumeric_keys
xkb_symbols "logiultraxc" {
    key <FK16>  {       [ XF86AudioMute ]       };
    key <FK17>  {       [ XF86AudioLowerVolume  ]       };
    key <I2B>   {       [ XF86AudioNext ]       };
    key <I2D>   {       [ XF86AudioPrev ]       };
    key <I2C>   {       [ XF86AudioPlay, XF86AudioPause ]       };
    key <KPDC>  {       [ XF86AudioRaiseVolume  ]       };
};

partial alphanumeric_keys
xkb_symbols "logidinovo" {
    include "inet(media_nav_common)"
    key <I02>	{	[ XF86HomePage		]	};
    key <I12>	{	[ XF86Standby		]	};
    key <I17>	{	[ XF86Search		]	};
    key <I21>	{	[ XF86AudioRaiseVolume	]	};
    key <K66>	{	[ XF86AudioLowerVolume	]	};
    key <KPDC>	{	[ XF86AudioMute		]	};
    key <IR7C>	{	[ XF86AudioMedia	]	};
};

partial alphanumeric_keys
xkb_symbols "logidinovoedge" {
    include "inet(media_acpi_common)"
    key <I02>	{	[ XF86HomePage		]	};
    key <I6C>	{	[ XF86Mail		]	};
    key <FK17>  {       [ XF86Search            ]       };
    key <IR7C>	{	[ XF86AudioMedia	]	};
};

partial alphanumeric_keys
xkb_symbols "logitech_g15" {
    include "inet(media_nav_acpi_common)"
    key <AE13> {         [   XF86Messenger ] };
    key <HKTG> {         [     XF86Launch7 ] };
    key  <I02> {         [     XF86Launch9 ] };
    key  <I04> {         [       XF86Phone ] };
    key  <I08> {         [     XF86LaunchD ] };
    key  <I09> {         [     XF86Support ] };
    key  <I0F> {         [     XF86LaunchF ] };
    key  <I16> {         [      XF86LogOff ] };
    key  <I18> {         [     XF86Launch5 ] };
    key  <I21> {         [      XF86Travel ] };
    key  <I23> {         [       XF86Spell ] };
    key  <I31> {         [     XF86Launch4 ] };
    key  <I3C> {         [       XF86Music ] };
    key  <I42> {         [     XF86Forward ] };
    key  <I43> {         [        XF86Send ] };
    key  <I57> {         [        XF86Save ] };
    key  <I64> {         [    XF86Pictures ] };
    key  <I67> {         [     XF86LaunchA ] };
    key  <I76> {         [      XF86iTouch ] };
    key  <I77> {         [     XF86Launch3 ] };
    key  <I79> {         [    XF86ToDoList ] };
    key  <I7B> {         [  XF86Calculator ] };
    key  <K5A> {         [  XF86VendorHome ] };
    key  <K5D> {         [        XF86Away ] };
    key  <K5E> {         [      XF86WebCam ] };
    key  <K5F> {         [     XF86Launch0 ] };
    key  <K63> {         [     XF86Launch6 ] };
    key  <K6D> {         [    XF86Calendar ] };
    key  <K71> {         [     XF86LaunchB ] };
    key  <K72> {         [     XF86LaunchC ] };
    key  <K74> {         [         XF86WWW ] };
    key  <K75> {         [     XF86LaunchE ] };
    key <II5D> {         [     XF86Launch1 ] };
    key <IR7D> {         [     XF86Launch2 ] };
    key <IR7C> {         [     XF86Launch8 ] };
};


// Memorex

// Memorex MX1998
partial alphanumeric_keys
xkb_symbols "mx1998" {
    include "inet(media_acpi_common)"
    key <DOWN>	{	[ XF86ScrollDown	]	};
    key <I12>	{	[ XF86AudioRewind	]	};
    key <I17>	{	[ XF86Close		]	};
    key <I18>	{	[ XF86Xfer		]	};
    key <I1E>	{	[ XF86AudioRecord	]	};
    key <I21>	{	[ XF86Documents		]	};
    key <I23>	{	[ XF86Game		]	};
    key <I25>	{	[ XF86Calculator	]	};
    key <I26>	{	[ Menu			]	};
    key <I32>	{	[ XF86WWW		]	};
    key <I57>	{	[ XF86WakeUp		]	};
    key <I68>	{	[ XF86DOS		]	};
    key <I7A>	{	[ XF86ScreenSaver	]	};
    key <UP>	{	[ XF86ScrollUp		]	};
};

// Memorex MX2500 EZ-Access Keyboard
partial alphanumeric_keys
xkb_symbols "mx2500" {
    include "inet(media_nav_acpi_common)"
    key <I12>	{	[ XF86Clear		]	};
    key <I13>	{	[ XF86Phone		]	};
    key <I14>	{	[ XF86DOS		]	};
    key <I17>	{	[ XF86Close		]	};
    key <I18>	{	[ XF86Xfer		]	};
    key <I1E>	{	[ XF86Eject		]	};
    key <I1F>	{	[ XF86Documents		]	};
    key <I26>	{	[ XF86News		]	};
    key <I6B>	{	[ XF86WakeUp		]	};
    key <I6D>	{	[ XF86RotateWindows	]	};
};

// Memorex MX2750
partial alphanumeric_keys
xkb_symbols "mx2750" {
    include "inet(media_nav_acpi_common)"
    key <I32>	{	[ XF86Launch0		]	};
};


// Microsoft

// Microsoft Natural Ergonomic Keyboard 4000
partial alphanumeric_keys
xkb_symbols "microsoft4000" {
    include "inet(media_nav_common)"
    key <I192>  {       [ XF86Launch1           ]       };
    key <I193>  {       [ XF86Launch2           ]       };
    key <I194>  {       [ XF86Launch3           ]       };
    key <I195>  {       [ XF86Launch4           ]       };
    key <I196>  {       [ XF86Launch5           ]       };
//  Missing because of lack of support from kbd driver: Zoom in and
//  slider.
};

// Microsoft Natural Wireless Ergonomic Keyboard 7000
partial alphanumeric_keys
xkb_symbols "microsoft7000" {
    include "inet(media_nav_common)"
    key <I07>	{	[ Undo			]	};
    key <I09>	{	[ XF86New		]	};
    key <I0A>	{	[ Redo			]	};
    key <I0E>	{	[ XF86MailForward	]	};
    key <I2F>	{	[ XF86Close		]	};
    key <I39>	{	[ Print			]	};
    key <I55>	{	[ XF86Save		]	};
    key <I5A>	{	[ XF86Send		]	};
    key <I62>	{	[ Help			]	};
    key <I64>	{	[ XF86Reply		]	};
    key <I76>	{	[ parenleft		]	};
    key <I7B>	{	[ parenright		]	};
    key <K59>	{	[ KP_Equal		]	};
    key <K64>	{	[ XF86Open		]	};
//  Missing because of lack of support from kbd driver: Spell, Launch,
//  and Zoom in and out buttons.
};

// Microsoft Internet Keyboard
partial alphanumeric_keys
xkb_symbols "microsoftinet" {
    include "inet(nav_acpi_common)"
    key <I68>	{	[ XF86AudioStop		]	};
};

// Microsoft Natural Keyboard Pro USB
partial alphanumeric_keys
xkb_symbols "microsoftprousb" {
    include "inet(nav_common)"
    key <FK16>   {   [ XF86Reload      ]   };
    key <I01>   {   [ XF86AudioMedia   ]   };
    key <I02>   {   [ XF86HomePage      ]   };
    key <I17>   {   [ XF86AudioStop      ]   };
    key <I1E>   {   [ XF86AudioRaiseVolume   ]   };
    key <I1F>   {   [ XF86AudioPlay, XF86AudioPause ] };
    key <I22>   {   [ XF86AudioNext      ]   };
    key <I24>   {   [ XF86AudioPrev      ]   };
    key <I25>   {   [ XF86AudioLowerVolume   ]   };
    key <I26>   {   [ XF86AudioMute      ]   };
    key <I63>   {   [ XF86Standby      ]   };
//   Internet Section -- Left Side
//   Multimedia Section -- Right Side
//   My Computer Section -- Far Right
//   My computer maps to printscreen, so leaving commented out for now
//   key <PRSC>   {   [ XF86MyComputer   ]   };
};

// Microsoft Natural Keyboard Pro OEM
partial alphanumeric_keys
xkb_symbols "microsoftprooem" {
    include "inet(media_nav_common)"
    key <FK17>	{	[ XF86Search		]	};
    key <I02>	{	[ XF86HomePage		]	};
    key <I63>	{	[ XF86Standby		]	};
    key <K67>	{	[ XF86MyComputer	]	};
//   Internet Section -- Left Side
//   Multimedia Section -- Right Side
//   My Computer Section -- Far Right
};

// Microsoft Internet Keyboard Pro, Swedish
partial alphanumeric_keys
xkb_symbols "microsoftprose" {
    include "inet(nav_common)"
    key <FK16>	{	[ XF86Reload		]	};
    key <I02>	{	[ XF86HomePage		]	};
    key <I17>	{	[ XF86AudioStop		]	};
    key <I1E>	{	[ XF86AudioRaiseVolume	]	};
    key <I1F>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I22>	{	[ XF86AudioNext		]	};
    key <I24>	{	[ XF86AudioPrev		]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86AudioMute		]	};
    key <I63>	{	[ XF86Standby		]	};
    key <I68>	{	[ XF86AudioStop		]	};
    key <PRSC>	{	[ XF86MyComputer	]	};
    key <IR7C>	{	[ XF86AudioMedia	]	};
};

// Microsoft Office Keyboard
partial alphanumeric_keys
xkb_symbols "microsoftoffice" {
    include "inet(nav_acpi_common)"
    key <BRK>	{	[ XF86Calendar		]	};
    key <END>	{	[ Undo			]	};
    key <I02>	{	[ XF86HomePage		]	};
    key <I1E>	{	[ XF86AudioLowerVolume	]	};
    key <I25>	{	[ XF86AudioRaiseVolume	]	};
    key <I26>	{	[ XF86AudioMute		]	};
    key <I3C>	{	[ XF86Cut		]	};
    key <I4A>	{	[ XF86LogOff		]	};
    key <I54>	{	[ XF86ApplicationLeft	]	};
    key <I55>	{	[ XF86TaskPane		]	};
    key <I56>	{	[ XF86Spell		]	};
    key <I57>	{	[ XF86WWW		]	};
    key <I58>	{	[ XF86New		]	};
    key <I59>	{	[ XF86Open		]	};
    key <I5A>	{	[ XF86Close		]	};
    key <I62>	{	[ Help			]	};
    key <I64>	{	[ XF86Save		]	};
    key <I67>	{	[ Print			]	};
    key <I6D>	{	[ XF86OfficeHome	]	};
    key <I70>	{	[ Redo			]	};
    key <I71>	{	[ XF86Reply		]	};
    key <I72>	{	[ XF86MailForward	]	};
    key <I73>	{	[ XF86Send		]	};
    key <I78>	{	[ XF86Copy		]	};
    key <MOAR>	{	[ XF86ApplicationRight	]	};
    key <RCTL>	{	[ XF86Paste		]	};
};

// Microsoft Wireless Multimedia Keyboard 1.0A
partial alphanumeric_keys
xkb_symbols "microsoftmult" {
    include "inet(media_nav_acpi_common)"
    key <AE13>  {       [ XF86Messenger         ]       };
    key <FK14>	{	[ XF86New		]	};
    key <FK15>	{	[ XF86Open		]	};
    key <FK16>	{	[ XF86Close		]	};
    key <FK17>	{	[ XF86Reply		]	};
    key <I07>	{	[ Redo			]	};
    key <I08>	{	[ Undo			]	};
    key <I16>   {       [ XF86LogOff            ]       };
    key <I23>	{	[ XF86Spell		]	};
    key <I3B>	{	[ Help			]	};
    key <I3C>   {       [ XF86Music     ]       };
    key <I42>	{	[ XF86Forward		]	};
    key <I43>	{	[ XF86Send		]	};
    key <I57>	{	[ XF86Save		]	};
    key <I58>	{	[ Print			]	};
    key <I64>   {       [ XF86Pictures  ]       };
    key <I80>   {       [ XF86Documents ]       };
};


// Oretec

// Oretec MCK-800 MM/Internet keyboard
partial alphanumeric_keys
xkb_symbols "oretec" {
    include "inet(acpi_common)"
    key <I10>	{	[ XF86ScrollUp		]	};
    key <I12>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I17>	{	[ XF86AudioPrev		]	};
    key <I18>	{	[ XF86ScrollDown	]	};
    key <I19>	{	[ XF86ZoomOut		]	};
    key <I1E>	{	[ XF86AudioMute		]	};
    key <I21>	{	[ XF86WWW		]	};
    key <I22>	{	[ Menu			]	};
    key <I23>	{	[ XF86AudioStop		]	};
    key <I24>	{	[ XF86Calculator	]	};
    key <I25>	{	[ XF86Xfer		]	};
    key <I26>	{	[ XF86Mail		]	};
    key <I2E>	{	[ XF86AudioNext		]	};
    key <I30>	{	[ XF86AudioRaiseVolume	]	};
    key <I32>	{	[ XF86ZoomIn		]	};
    key <I68>	{	[ XF86AudioLowerVolume	]	};
};


// Propeller

// Propeller Voyager (KTEZ-1000)
partial alphanumeric_keys
xkb_symbols "propeller" {
    include "inet(media_common)"
    key <I12>	{	[ XF86AudioRewind	]	};
    key <I17>	{	[ XF86Close		]	};
    key <I18>	{	[ XF86Xfer		]	};
    key <I1E>	{	[ XF86AudioRecord	]	};
    key <I21>	{	[ XF86Documents		]	};
    key <I23>	{	[ XF86Game		]	};
    key <I25>	{	[ XF86Calculator	]	};
    key <I26>	{	[ Menu			]	};
    key <I32>	{	[ XF86WWW		]	};
    key <I68>	{	[ XF86DOS		]	};
    key <I7A>	{	[ XF86Standby		]	};
};


// QTronix

// QTronix Scorpius 98N+
partial alphanumeric_keys
xkb_symbols "qtronix" {
    key <I10>	{	[ XF86ScrollDown	]	};
    key <I12>	{	[ XF86Forward		]	};
    key <I13>	{	[ XF86WakeUp		]	};
    key <I17>	{	[ XF86Search		]	};
    key <I18>	{	[ XF86Standby		]	};
    key <I19>	{	[ XF86ScrollUp		]	};
    key <I1E>	{	[ XF86Back		]	};
    key <I1F>	{	[ XF86Reload		]	};
    key <I20>	{	[ XF86AudioRaiseVolume	]	};
    key <I21>	{	[ XF86AudioPrev		]	};
    key <I22>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I23>	{	[ XF86AudioNext		]	};
    key <I24>	{	[ XF86AudioStop		]	};
    key <I25>	{	[ XF86HomePage		]	};
    key <I26>	{	[ XF86AudioMute		]	};
    key <I2E>	{	[ XF86AudioLowerVolume	]	};
    key <I30>	{	[ XF86AudioRecord	]	};
    key <I31>	{	[ XF86PowerOff		]	};
    key <I32>	{	[ XF86Stop		]	};
    key <I68>	{	[ XF86Calculator	]	};
};


// Samsung

// Samsung SDM 4500P
partial alphanumeric_keys
xkb_symbols "samsung4500" {
    include "inet(media_nav_acpi_common)"
    key <AE13>	{	[ XF86Launch4		]	};
    key <I02>	{	[ XF86Launch1		]	};
    key <I04>	{	[ XF86Launch3		]	};
    key <I06>	{	[ XF86Launch5		]	};
    key <I09>	{	[ XF86Close		]	};
    key <I0A>	{	[ XF86Book		]	};
    key <I18>	{	[ XF86Eject		]	};
    key <I26>	{	[ Help			]	};
    key <I59>	{	[ XF86Explorer		]	};
    key <IR7D>	{	[ XF86Launch2		]	};
};

// Samsung SDM 4510P
partial alphanumeric_keys
xkb_symbols "samsung4510" {
    include "inet(media_acpi_common)"
    key <I02>	{	[ XF86Launch1		]	};
    key <I04>	{	[ XF86Launch3		]	};
    key <I18>	{	[ XF86Eject		]	};
    key <IR7D>	{	[ XF86Launch2		]	};
};


// SK

// SK-1300
partial alphanumeric_keys
xkb_symbols "sk1300" {
    include "inet(media_common)"
    key <I12>	{	[ XF86Eject		]	};
    key <I1E>	{	[ XF86Forward		]	};
    key <I20>	{	[ XF86WWW		]	};
    key <I25>	{	[ XF86Standby		]	};
    key <I26>	{	[ XF86Back		]	};
    key <I32>	{	[ XF86Stop		]	};
};

// SK-2500
partial alphanumeric_keys
xkb_symbols "sk2500" {
    include "inet(media_nav_common)"
    key <I12>	{	[ XF86AudioRewind	]	};
    key <I17>	{	[ XF86Close		]	};
    key <I18>	{	[ XF86Eject		]	};
    key <I18>	{	[ XF86Eject		]	};
    key <I19>	{	[ XF86Forward		]	};
    key <I1E>	{	[ XF86AudioRecord	]	};
    key <I23>	{	[ XF86Xfer		]	};
    key <I25>	{	[ XF86PowerOff		]	};
    key <I26>	{	[ Menu			]	};
    key <I7A>	{	[ XF86ScreenSaver	]	};
};

// SK-6200
partial alphanumeric_keys
xkb_symbols "sk6200" {
    include "inet(acpi_common)"
    key <I12>	{	[ XF86Favorites		]	};
    key <I14>	{	[ XF86AudioLowerVolume	]	};
    key <I16>	{	[ XF86AudioRaiseVolume	]	};
    key <I17>	{	[ XF86Back		]	};
    key <I19>	{	[ XF86Forward		]	};
    key <I1E>	{	[ XF86WWW		]	};
    key <I20>	{	[ XF86AudioMute		]	};
    key <I21>	{	[ XF86AudioNext		]	};
    key <I22>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I23>	{	[ XF86AudioPrev		]	};
    key <I24>	{	[ XF86AudioStop		]	};
    key <I32>	{	[ XF86Mail		]	};
};

// SK-7100
partial alphanumeric_keys
xkb_symbols "sk7100" {
    include "inet(media_common)"
    key <I12>	{	[ XF86AudioPause	]	};
    key <I17>	{	[ XF86Close		]	};
    key <I18>	{	[ XF86Video		]	};
    key <I1E>	{	[ XF86Eject		]	};
    key <I25>	{	[ XF86CD		]	};
    key <I26>	{	[ XF86Display		]	};
    key <I32>	{	[ XF86WWW		]	};
};


// Sven

// SVEN Ergonomic 2500
partial alphanumeric_keys
xkb_symbols "sven" {
    include "inet(acpi_common)"
    key <I10>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I12>	{	[ XF86Forward		]	};
    key <I17>	{	[ XF86AudioRaiseVolume	]	};
    key <I18>	{	[ XF86ZoomOut		]	};
    key <I19>	{	[ XF86AudioPrev		]	};
    key <I1A>	{	[ XF86AudioStop		]	};
    key <I1E>	{	[ XF86HomePage		]	};
    key <I20>	{	[ XF86Mail		]	};
    key <I21>	{	[ XF86ZoomIn		]	};
    key <I22>	{	[ XF86MyComputer	]	};
    key <I23>	{	[ XF86Stop		]	};
    key <I24>	{	[ XF86ScreenSaver	]	};
    key <I25>	{	[ XF86AudioLowerVolume	]	};
    key <I26>	{	[ XF86AudioMute		]	};
    key <I28>	{	[ XF86Calculator	]	};
    key <I29>	{	[ XF86Reload		]	};
    key <I2E>	{	[ XF86Search		]	};
    key <I30>	{	[ XF86Favorites		]	};
    key <I31>	{	[ XF86ScrollUp		]	};
    key <I32>	{	[ XF86ScrollDown	]	};
    key <I62>	{	[ XF86AudioNext		]	};
    key <I68>	{	[ XF86Back		]	};
};

// SVEN Slim 303
partial alphanumeric_keys
xkb_symbols "sven303" {
    key <I11>	{	[ XF86PowerOff		]	};
    key <I12>	{	[ XF86Sleep		]	};
    key <I16>	{	[ XF86WakeUp		]	};
};


// Symplon

// Symplon PaceBook (tablet PC)
partial alphanumeric_keys
xkb_symbols "symplon" {
    include "inet(nav_acpi_common)"
    key <HOME>	{	[ XF86RotationPB	]	};
    key <I13>	{	[ XF86SplitScreen	]	};
    key <I14>	{	[ XF86Support		]	};
    key <I17>	{	[ XF86New		]	};
    key <I21>	{	[ XF86User2KB		]	};
    key <I25>	{	[ XF86RotationKB	]	};
    key <I26>	{	[ XF86MenuKB		]	};
    key <I6B>	{	[ XF86User1KB		]	};
    key <PAUS>	{	[ XF86UserPB		]	};
    key <UP>	{	[ XF86MenuPB		]	};
};


// Toshiba

// Toshiba Satellite S3000
partial alphanumeric_keys
xkb_symbols "toshiba_s3000" {
    include "inet(media_common)"
    // Describes the Special buttons on Toshiba Satellite 3000 models.
    // See http://sourceforge.net/projects/omke for details on enabling
    // these keys
    key <I06>	{	[ XF86Launch1		]	};
    key <I13>	{	[ XF86Launch2		]	};
    key <I71>	{	[ XF86WWW		]	};
    key <I73>	{	[ XF86Mail		]	};
    key <I75>	{	[ XF86AudioRaiseVolume	]	};
    key <I76>	{	[ XF86AudioLowerVolume	]	};
};


// Trust

// Trust Wireless Keyboard Classic
partial alphanumeric_keys
xkb_symbols "trust" {
    include "inet(media_nav_acpi_common)"
    key <I11>	{	[ XF86ScreenSaver	]	};
    key <I1E>	{	[ XF86Eject		]	};
};

// Trust Direct Access Keyboard
partial alphanumeric_keys
xkb_symbols "trustda" {
    include "inet(media_common)"
    key <I12>	{	[ XF86AudioRewind	]	};
    key <I17>	{	[ XF86Close		]	};
    key <I18>	{	[ XF86Eject		]	};
    key <I1E>	{	[ XF86AudioRecord	]	};
    key <I23>	{	[ XF86Xfer		]	};
    key <I25>	{	[ XF86Standby		]	};
    key <I26>	{	[ Help			]	};
    key <I32>	{	[ XF86WWW		]	};
    key <I7A>	{	[ XF86Away		]	};
};


// YaHoo!

// Yahoo! Internet Keyboard
partial alphanumeric_keys
xkb_symbols "yahoo" {
    include "inet(acpi_common)"
    key <I11>	{	[ XF86AudioPrev		]	};
    key <I12>	{	[ XF86AudioPlay, XF86AudioPause ] };
    key <I1E>	{	[ XF86AudioStop		]	};
    key <I1F>	{	[ XF86AudioNext		]	};
    key <I20>	{	[ XF86AudioRecord	]	};
    key <I21>	{	[ XF86AudioLowerVolume	]	};
    key <I22>	{	[ XF86AudioRaiseVolume	]	};
    key <I23>	{	[ XF86AudioMute		]	};
    key <I24>	{	[ XF86Close		]	};
    key <I25>	{	[ XF86Calculator	]	};
    key <I26>	{	[ Help			]	};
    key <I27>	{	[ XF86Mail		]	};
    key <I28>	{	[ XF86WWW		]	};
};


// Apple keyboards (macbooks, powerbooks, powermac G5, etc)
partial alphanumeric_keys
xkb_symbols "apple" {
// Really brightness up/down
    key <II65>  {       [ XF86BrightnessAdjust  ]       };
    key <I54>   {       [ XF86BrightnessAdjust  ]       };
    key <I20>	{	[ XF86AudioMute		]	};
    key <I2E>	{	[ XF86AudioLowerVolume	]	};
    key <I30>	{	[ XF86AudioRaiseVolume	]	};
    key <I56>   {       [ XF86RotateWindows	]	};
// Really keyboard backlight off/up/down
    key <I57>   {       [ XF86Launch0		]	};
    key <I58>	{	[ XF86Launch1    	]	};
    key <I59>	{	[ XF86Launch2   	]	};
    key <I5E>	{	[ XF86PowerOff          ]       };
    key <K5D>	{	[ F13 ]    };
    key <K5E>	{	[ F14 ]    };
    key <K5F>	{	[ F15 ]    };
    key <K6C>	{	[ XF86Eject ]    };
    key <II5D>	{	[ F16 ]    };
    key <KPEQ>  {       [ KP_Equal ] };
};

partial alphanumeric_keys
xkb_symbols "cymotionlinux" {
    include "inet(media_nav_acpi_common)"
    key <I07>	{	[	Undo			]	};
    key <I0A>	{	[	Redo			]	};
    key <I0F>	{	[	XF86ScrollDown		]	};
    key <I17>	{	[	XF86Launch2		]	};
    key <I1F>	{	[	XF86Launch1		]	};
    key <I28>	{	[	XF86MenuKB		]	};
    key <I2B>	{	[	XF86Launch3		]	};
    key <I3C>	{	[	XF86Cut			]	};
    key <I78>	{	[	XF86Copy		]	};
    key <K65>	{	[	XF86Paste		]	};
    key <K75>	{	[	XF86ScrollUp		]	};
    key <IR7C>	{	[	XF86AudioMedia		]	};
};

partial alphanumeric_keys
xkb_symbols "silvercrest" {
    include "inet(media_nav_acpi_common)"
    key <I02>	{	[ XF86HomePage		]	};
    key <I21>	{	[ XF86Launch2		]	};
    key <K67>	{	[ XF86Launch1		]	};
};


// eMachines

partial alphanumeric_keys
xkb_symbols "emachines" {
    include "inet(media_nav_acpi_common)"
    key <I32>  {  [ XF86iTouch                    ]  };
    key <KP0>  {  [ KP_0                          ]  };
    key <KP1>  {  [ KP_1                          ]  };
    key <KP2>  {  [ KP_2                          ]  };
    key <KP3>  {  [ KP_3                          ]  };
    key <KP4>  {  [ KP_4                          ]  };
    key <KP5>  {  [ KP_5                          ]  };
    key <KP6>  {  [ KP_6                          ]  };
    key <KP7>  {  [ KP_7                          ]  };
    key <KP8>  {  [ KP_8                          ]  };
    key <KP9>  {  [ KP_9                          ]  };
    key <KPAD> {  [ KP_Add                        ]  };
    key <KPDL> {  [ KP_Decimal                    ]  };
    key <KPDV> {  [ KP_Divide                     ]  };
    key <KPMU> {  [ KP_Multiply                   ]  };
    key <KPSU> {  [ KP_Subtract                   ]  };
};


// BenQ

// BenQ X* (X730, X500, X800)
//
// To make the FN_LOCK and CONFIG key work on the BenQ X500 , use:
// setkeycodes e074 130 # KEY_PROPS  from /usr/include/linux/input.h
// setkeycodes e075 171 # KEY_CONFIG from /usr/include/linux/input.h
partial alphanumeric_keys
xkb_symbols "benqx" {
    include "inet(media_nav_acpi_common)"
    key <I02> { [ XF86ModeLock ] };
    key <I21> { [ XF86WWW      ]  };
    key <I2B> { [ XF86Go ] };
    key <I31> { [ XF86Calendar ] };
};


// Intel

// Intel Classmate
partial alphanumeric_keys
xkb_symbols "classmate" {
    key <I2E>   {       [ XF86AudioLowerVolume  ] };
    key <I30>   {       [ XF86AudioRaiseVolume  ] };
};


// Unitek

partial alphanumeric_keys
xkb_symbols "unitekkb1925" {
    include "inet(media_nav_common)"
    key <I0C> { [ XF86AudioMute ] };
    key <I11> { [ XF86PowerOff ] };
    key <I12> { [ XF86Sleep ] };
    key <I16> { [ XF86WakeUp ] };
    key <I18> { [ XF86Search ] };
    key <I1A> { [ XF86Reload ] };
};


// Creative

// Creative Desktop Wireless 7000
partial alphanumeric_keys
xkb_symbols "creativedw7000" {
    include "inet(media_nav_acpi_common)"
    key <I66>   {       [ XF86Pictures ]       };
};


// Compal

// Compal FL90
partial alphanumeric_keys
xkb_symbols "compalfl90" {
    include "inet(media_nav_acpi_common)"
    key <I54>   {       [ XF86MonBrightnessUp   ]       };
    key <II65>  {       [ XF86MonBrightnessDown ]       };
};

partial alphanumeric_keys
xkb_symbols "pc105" {
    include "inet(media_nav_acpi_common)"
};


// HTC Dream
partial alphanumeric_keys
xkb_symbols "htcdream" {
	key <BKSP> { [ BackSpace ] };
	key <RTRN> { [ Return ] };

        key <AE01> { [ 1, 1, exclam, exclam ] };
        key <AE02> { [ 2, 2, at, at ] };
        key <AE03> { [ 3, 3, numbersign, numbersign ] };
        key <AE04> { [ 4, 4, dollar, dollar ] };
        key <AE05> { [ 5, 5, percent, percent ] };
        key <AE06> { [ 6, 6, dead_circumflex, dead_circumflex ] };
        key <AE07> { [ 7, 7, ampersand, ampersand ] };
        key <AE08> { [ 8, 8, asterisk, asterisk ] };
        key <AE09> { [ 9, 9, parenleft, parenleft ] };
        key <AE10> { [ 0, 0, parenright, parenright ] };

	key <LFSH> { [ Shift_L ] };
	key <SPCE> { [ space ] };
	key <AB09> { [ period, period, slash, slash ] };
	key <RTSH> { [ Shift_R ] };

	modifier_map Shift { <LFSH>, <RTSH> };
};

partial alphanumeric_keys
xkb_symbols "chromebook" {
	include "level3(ralt_switch)"
        key <FK01> {    [ XF86Back ] };
        key <FK02> {    [ XF86Forward ] };
        key <FK03> {    [ XF86Reload ] };
        key <FK04> {    [ F11 ] };
//        key <FK05> {    [ F5, F5, F5, F5 ] }; // Overview key
        key <FK06> {    [ XF86MonBrightnessDown ] };
        key <FK07> {    [ XF86MonBrightnessUp ] };
        key <FK08> {    [ XF86AudioMute ] };
        key <FK09> {    [ XF86AudioLowerVolume ] };
        key <FK10> {    [ XF86AudioRaiseVolume ] };
        key <BKSP> {    [ BackSpace, BackSpace, Delete ] };
        key <UP>   {    [ Up, Up, Prior, Up ] };
        key <DOWN> {    [ Down, Down, Next, Down ] };
        key <LEFT> {    [ Left, Left, Home, Left ] };
        key <RGHT> {    [ Right, Right, End, Right ] };
        key <LWIN> {    [ Super_L, Super_L, Caps_Lock, Super_L ] };
};

partial alphanumeric_keys
xkb_symbols "teck227" {
    include "inet(media_nav_common)"
    key <HIRA> { [ Hiragana ] };
};

partial alphanumeric_keys
xkb_symbols "teck229" {
    include "inet(teck227)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   // Symbols for Japanese 106-keys keyboards (by tsuka@kawalab.dnj.ynu.ac.jp).

default  partial alphanumeric_keys
xkb_symbols "106" {

    include "jp(common)"
    name[Group1]= "Japanese";

    key <AE10> { [ 0, asciitilde	] };
    key <AE13> { [ backslash, bar	] };
};

hidden partial alphanumeric_keys
xkb_symbols "common" {
    // "Common" keys for jp 106/109A layouts.

    key <HZTG> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Zenkaku_Hankaku, Kanji ]
    };

    key <AE01> { [ 1, exclam		] };
    key <AE02> { [ 2, quotedbl		] };
    key <AE03> { [ 3, numbersign	] };
    key <AE04> { [ 4, dollar		] };
    key <AE05> { [ 5, percent		] };
    key <AE06> { [ 6, ampersand		] };
    key <AE07> { [ 7, apostrophe	] };
    key <AE08> { [ 8, parenleft		] };
    key <AE09> { [ 9, parenright	] };
    key <AE11> { [ minus, equal		] };
    key <AE12> { [ asciicircum,	asciitilde] };

    key <AD01> { [ q, Q			] };
    key <AD02> { [ w, W			] };
    key <AD03> { [ e, E			] };
    key <AD04> { [ r, R			] };
    key <AD05> { [ t, T			] };
    key <AD06> { [ y, Y			] };
    key <AD07> { [ u, U			] };
    key <AD08> { [ i, I			] };
    key <AD09> { [ o, O			] };
    key <AD10> { [ p, P			] };
    key <AD11> { [ at, grave		] };
    key <AD12> { [ bracketleft,	braceleft ] };

    key <CAPS> { [ Eisu_toggle, Caps_Lock ] };

    key <AC01> { [ a, A			] };
    key <AC02> { [ s, S			] };
    key <AC03> { [ d, D			] };
    key <AC04> { [ f, F			] };
    key <AC05> { [ g, G			] };
    key <AC06> { [ h, H			] };
    key <AC07> { [ j, J			] };
    key <AC08> { [ k, K			] };
    key <AC09> { [ l, L			] };
    key <AC10> { [ semicolon, plus	] };
    key <AC11> { [ colon, asterisk	] };
    key <AC12> { [ bracketright, braceright ] };

    key <AB01> { [ z, Z			] };
    key <AB02> { [ x, X			] };
    key <AB03> { [ c, C			] };
    key <AB04> { [ v, V			] };
    key <AB05> { [ b, B			] };
    key <AB06> { [ n, N			] };
    key <AB07> { [ m, M			] };
    key <AB08> { [ comma,  less		] };
    key <AB09> { [ period, greater	] };
    key <AB10> { [ slash, question	] };
    key <AB11> { [ backslash, underscore] };
    key <LCTL> { [ Control_L		] };

    key <NFER> { [ Muhenkan		] };

    key <XFER> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Henkan, Mode_switch ]
    };

    key <HKTG> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Hiragana_Katakana, Romaji ]
    };

    key <EISU> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Eisu_toggle ]
    };

    key <KANA> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Hiragana_Katakana ]
    };

    key <PRSC> {
	type[Group1]= "PC_ALT_LEVEL2",
	symbols[Group1]= [ Print, Execute ]
    };
};

partial alphanumeric_keys
xkb_symbols "henkan" {
    key <XFER> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Henkan, Mode_switch ]
    };
};

partial alphanumeric_keys
xkb_symbols "OADG109A" {

    include "jp(common)"
    name[Group1]= "Japanese (OADG 109A)";

    key <AE10> { [ 0		] };
    key <AE13> { [ yen, bar	] };
};

// 86 keys with kana map
partial alphanumeric_keys
xkb_symbols "kana86" {

    include "srvr_ctrl(fkey2vt)"
    include "pc(editing)"
    include "keypad(numoperdecsep)"
    include "altwin(menu)"
    include "jp(kana)"
    include "jp(OADG109A)"
    name[Group1]= "Japanese (Kana 86)";

    key  <ESC> {	[ Escape	]	};
    key <NMLK> {	[ Num_Lock	]	};
    key <BKSP> {	[ BackSpace	]	};
    key  <TAB> {	[ Tab, ISO_Left_Tab ]	};
    key <RTRN> {	[ Return	]	};
    key <LFSH> {	[ Shift_L	]	};
    key <RTSH> {	[ Shift_R	]	};
    key <LWIN> {	[ Super_L	]	};
    key <LALT> {	[ Alt_L		]	};
    key <SPCE> {	[ space		]	};
    key <RALT> {	[ Alt_R		]	};
    // For compatibility with other keyboards connected at the same time:
    key <RWIN> {	[ Super_R	]	};
    key <RCTL> {	[ Control_R	]	};
};

partial alphanumeric_keys
xkb_symbols "kana" {

    name[Group1]= "Japanese (Kana)";

    key <HZTG> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Zenkaku_Hankaku, Kanji ]
    };

    key <AE01> { [ kana_NU		]	};
    key <AE02> { [ kana_FU		]	};
    key <AE03> { [ kana_A, kana_a	]	};
    key <AE04> { [ kana_U, kana_u	]	};
    key <AE05> { [ kana_E, kana_e	]	};
    key <AE06> { [ kana_O, kana_o	]	};
    key <AE07> { [ kana_YA, kana_ya	]	};
    key <AE08> { [ kana_YU, kana_yu	]	};
    key <AE09> { [ kana_YO, kana_yo	]	};
    key <AE10> { [ kana_WA, kana_WO	]	};
    key <AE11> { [ kana_HO		]	};
    key <AE12> { [ kana_HE		]	};
    key <AE13> { [ prolongedsound	]	};

    key <AD01> { [ kana_TA		]	};
    key <AD02> { [ kana_TE		]	};
    key <AD03> { [ kana_I, kana_i	]	};
    key <AD04> { [ kana_SU		]	};
    key <AD05> { [ kana_KA		]	};
    key <AD06> { [ kana_N		]	};
    key <AD07> { [ kana_NA		]	};
    key <AD08> { [ kana_NI		]	};
    key <AD09> { [ kana_RA		]	};
    key <AD10> { [ kana_SE		]	};
    key <AD11> { [ voicedsound		]	};
    key <AD12> { [ semivoicedsound, kana_openingbracket ] };

    key <CAPS> { [ Eisu_toggle, Caps_Lock ]	};
    key <AC01> { [ kana_CHI		]	};
    key <AC02> { [ kana_TO		]	};
    key <AC03> { [ kana_SHI		]	};
    key <AC04> { [ kana_HA		]	};
    key <AC05> { [ kana_KI		]	};
    key <AC06> { [ kana_KU		]	};
    key <AC07> { [ kana_MA		]	};
    key <AC08> { [ kana_NO		]	};
    key <AC09> { [ kana_RI		]	};
    key <AC10> { [ kana_RE		]	};
    key <AC11> { [ kana_KE		]	};
    key <AC12> { [ kana_MU, kana_closingbracket ] };

    key <AB01> { [ kana_TSU, kana_tsu	]	};
    key <AB02> { [ kana_SA		]	};
    key <AB03> { [ kana_SO		]	};
    key <AB04> { [ kana_HI		]	};
    key <AB05> { [ kana_KO		]	};
    key <AB06> { [ kana_MI		]	};
    key <AB07> { [ kana_MO		]	};
    key <AB08> { [ kana_NE, kana_comma ]	};
    key <AB09> { [ kana_RU, kana_fullstop ]	};
    key <AB10> { [ kana_ME, kana_middledot ]	};
    key <AB11> { [ kana_RO		]	};
    key <LCTL> { [ Control_L		]	};

    key <NFER> { [ Muhenkan		]	};

    key <XFER> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Henkan, Mode_switch ]
    };
    key <HKTG> {
	type[Group1]="PC_ALT_LEVEL2",
	symbols[Group1]= [ Hiragana_Katakana, Romaji ]
    };

    key <PRSC> {
	type[Group1]= "PC_ALT_LEVEL2",
	symbols[Group1]= [ Print, Execute ]
    };
};

partial alphanumeric_keys
xkb_symbols "nicola_f_bs" {
    key <BKSP> {
	type="",
	symbols[Group1]= [ bracketright, braceright ]
    };
    key <AE10> { [ 0, underscore        ] };
    key <AD11> { [ colon, asterisk      ] };
    key <AC11> { [ BackSpace, BackSpace ] };
    key <AC12> { [ Escape               ] };
    key <AB11> { [ at, grave            ] };
};

// Copied from macintosh_vndr/jp
partial alphanumeric_keys
xkb_symbols "mac" {
    include "jp(kana)"
    name[Group1]= "Japanese (Macintosh)";

    replace key <CAPS> { [ Caps_Lock ] };
};

partial alphanumeric_keys
xkb_symbols "hztg_escape" {
    replace key <HZTG> { [ Escape ] };
};

partial alphanumeric_keys
xkb_symbols "dvorak" {
    include "jp(OADG109A)"
    name[Group1]= "Japanese (Dvorak)";

    key <AE11> { [ at, grave		] };

    key <AD01> { [ colon, asterisk	] };
    key <AD02> { [ comma, less		] };
    key <AD03> { [ period, greater	] };
    key <AD04> { [ p, P			] };
    key <AD05> { [ y, Y			] };
    key <AD06> { [ f, F			] };
    key <AD07> { [ g, G			] };
    key <AD08> { [ c, C			] };
    key <AD09> { [ r, R			] };
    key <AD10> { [ l, L			] };
    key <AD11> { [ slash, question	] };

    key <AC02> { [ o, O			] };
    key <AC03> { [ e, E			] };
    key <AC04> { [ u, U			] };
    key <AC05> { [ i, I			] };
    key <AC06> { [ d, D			] };
    key <AC07> { [ h, H			] };
    key <AC08> { [ t, T			] };
    key <AC09> { [ n, N			] };
    key <AC10> { [ s, S			] };
    key <AC11> { [ minus, equal		] };

    key <AB01> { [ semicolon, plus	] };
    key <AB02> { [ q, Q			] };
    key <AB03> { [ j, J			] };
    key <AB04> { [ k, K			] };
    key <AB05> { [ x, X			] };
    key <AB06> { [ b, B			] };
    key <AB08> { [ w, W			] };
    key <AB09> { [ v, V			] };
    key <AB10> { [ z, Z			] };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6_suncompat" {
	include "sun_vndr/jp(sun_type6_suncompat)"
};

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/jp(sun_type6)"
};

partial alphanumeric_keys
	xkb_symbols "sun_type7_suncompat" {
	include "sun_vndr/jp(sun_type7_suncompat)"
};

partial alphanumeric_keys
	xkb_symbols "suncompat" {
	include "sun_vndr/jp(suncompat)"
};

partial alphanumeric_keys
	xkb_symbols "sun_type7" {
	include "sun_vndr/jp(sun_type7)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  // Keyboard layout for Swahili in Arabic script.
// Based on Martin Vidner's Buckwalter transliteration variant of the Arabic keyboard
// Please notify any corrections or omissions to
// Kevin Donnelly (kevin@dotmon.com)

default  partial alphanumeric_keys
xkb_symbols "swa" {

    include "us"

    name[Group1]= "Swahili (Kenya)";

    key <AC10> { [ semicolon,	    colon,  0x01000324,  0x01000324 ] };	//COMBINING DIAERESIS BELOW	
    key <AC11> { [apostrophe,    quotedbl,  0x01000301,  0x01000308 ] };	//COMBINING ACUTE ACCENT, COMBINING DIAERESIS
    key <TLDE> { [     grave,  asciitilde,  0x01000300,  0x01000303 ] };	//COMBINING GRAVE ACCENT, COMBINING TILDE
    key <AE06> { [   	   6, asciicircum,  0x01000302 	       	    ] };	//COMBINING CIRCUMFLEX ACCENT
    key <AE08> { [	   8,    asterisk,  0x01000307,  0x01000323 ] };	//COMBINING DOT ABOVE, COMBINING DOT BELOW
    key <AE09> { [	   9,   parenleft,  0x01000306	            ] };	//COMBINING BREVE
    key <AE10> { [	   0,  parenright,  0x0100030c 	            ] };	//COMBINING CARON
    key <AE11> { [     minus,  underscore,  0x01000304,  0x01000331 ] };	//COMBINING MACRON,COMBINING MACRON BELOW   

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "kik" {

    include "us"

    name[Group1]= "Kikuyu";

    key <AC10> { [ semicolon,	    colon,  0x01000324,  0x01000324 ] };	//COMBINING DIAERESIS BELOW	
    key <AC11> { [apostrophe,    quotedbl,  0x01000301,  0x01000308 ] };	//COMBINING ACUTE ACCENT, COMBINING DIAERESIS
    key <TLDE> { [     grave,  asciitilde,  0x01000300,  0x01000303 ] };	//COMBINING GRAVE ACCENT, COMBINING TILDE
    key <AE06> { [   	   6, asciicircum,  0x01000302 	       	    ] };	//COMBINING CIRCUMFLEX ACCENT
    key <AE08> { [	   8,    asterisk,  0x01000307,  0x01000323 ] };	//COMBINING DOT ABOVE, COMBINING DOT BELOW
    key <AE09> { [	   9,   parenleft,  0x01000306	            ] };	//COMBINING BREVE
    key <AE10> { [	   0,  parenright,  0x0100030c 	            ] };	//COMBINING CARON
    key <AE11> { [     minus,  underscore,  0x01000304,  0x01000331 ] };	//COMBINING MACRON,COMBINING MACRON BELOW 

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   default  hidden partial keypad_keys
xkb_symbols "x11" {

    include "keypad(operators)"

    key  <KP7> {	[  KP_Home,	KP_7	]	};
    key  <KP8> {	[  KP_Up,	KP_8	]	};
    key  <KP9> {	[  KP_Prior,	KP_9	]	};

    key  <KP4> {	[  KP_Left,	KP_4	]	};
    key  <KP5> {	[  KP_Begin,	KP_5	]	};
    key  <KP6> {	[  KP_Right,	KP_6	]	};

    key  <KP1> {	[  KP_End,	KP_1	]	};
    key  <KP2> {	[  KP_Down,	KP_2	]	};
    key  <KP3> {	[  KP_Next,	KP_3	]	};
    key <KPEN> {	[	KP_Enter	]	};
    key <KPEQ> {	[	KP_Equal	]	};

    key  <KP0> {	[  KP_Insert,	KP_0	]	};
    key <KPDL> {	[  KP_Delete,	KP_Decimal ]	};
    key <KPPT> {	[  KP_Decimal,	KP_Decimal ]	};
};

hidden partial keypad_keys
xkb_symbols "overlay" {
    include "keypad(overlay1)"
};

hidden partial keypad_keys
xkb_symbols "overlay1" {

    key  <KP7> {	[  KP_Home	],	overlay1=<KO7>	};
    key  <KP8> {	[  KP_Up	],	overlay1=<KO8>	};
    key  <KP9> {	[  KP_Prior	],	overlay1=<KO9>	};

    key  <KP4> {	[  KP_Left	],	overlay1=<KO4>	};
    key  <KP5> {	[  KP_Begin	],	overlay1=<KO5>	};
    key  <KP6> {	[  KP_Right	],	overlay1=<KO6>	};

    key  <KP1> {	[  KP_End	],	overlay1=<KO1>	};
    key  <KP2> {	[  KP_Down	],	overlay1=<KO2>	};
    key  <KP3> {	[  KP_Next	],	overlay1=<KO3>	};

    key  <KP0> {	[  KP_Insert	],	overlay1=<KO0>	};
    key <KPDL> {	[  KP_Delete	],	overlay1=<KODL>	};

    key  <KO7> {	[  KP_7	]	};
    key  <KO8> {	[  KP_8	]	};
    key  <KO9> {	[  KP_9	]	};

    key  <KO4> {	[  KP_4	]	};
    key  <KO5> {	[  KP_5	]	};
    key  <KO6> {	[  KP_6	]	};

    key  <KO1> {	[  KP_1	]	};
    key  <KO2> {	[  KP_2	]	};
    key  <KO3> {	[  KP_3	]	};

    key  <KO0> {	[  KP_0	]	};
    key <KODL> {	[  KP_Decimal ]	};
};

hidden partial keypad_keys
xkb_symbols "overlay2" {

    key  <KP7> {	[  KP_Home	],	overlay2=<KO7>	};
    key  <KP8> {	[  KP_Up	],	overlay2=<KO8>	};
    key  <KP9> {	[  KP_Prior	],	overlay2=<KO9>	};

    key  <KP4> {	[  KP_Left	],	overlay2=<KO4>	};
    key  <KP5> {	[  KP_Begin	],	overlay2=<KO5>	};
    key  <KP6> {	[  KP_Right	],	overlay2=<KO6>	};

    key  <KP1> {	[  KP_End	],	overlay2=<KO1>	};
    key  <KP2> {	[  KP_Down	],	overlay2=<KO2>	};
    key  <KP3> {	[  KP_Next	],	overlay2=<KO3>	};

    key  <KP0> {	[  KP_Insert	],	overlay2=<KO0>	};
    key <KPDL> {	[  KP_Delete	],	overlay2=<KODL>	};

    key  <KO7> {	[  KP_7	]	};
    key  <KO8> {	[  KP_8	]	};
    key  <KO9> {	[  KP_9	]	};

    key  <KO4> {	[  KP_4	]	};
    key  <KO5> {	[  KP_5	]	};
    key  <KO6> {	[  KP_6	]	};

    key  <KO1> {	[  KP_1	]	};
    key  <KO2> {	[  KP_2	]	};
    key  <KO3> {	[  KP_3	]	};

    key  <KO0> {	[  KP_0	]	};
    key <KODL> {	[  KP_Decimal ]	};
};

hidden partial keypad_keys
xkb_symbols "operators" {
    // Puts some commands to control the X server on
    // the fifth level of the keypad's operator keys.
    key <KPDV> {
        type="CTRL+ALT",	// Ungrab cancels server/keyboard/pointer grabs
        symbols[Group1]= [ KP_Divide, KP_Divide, KP_Divide, KP_Divide, XF86_Ungrab ]
    };
    key <KPMU> {
        type="CTRL+ALT",	// ClsGrb kills whichever client has a grab in effect
        symbols[Group1]= [ KP_Multiply,	KP_Multiply, KP_Multiply, KP_Multiply, XF86_ClearGrab ]
    };
    key <KPSU> {
        type="CTRL+ALT",	// -VMode switches to the previous video mode
        symbols[Group1]= [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86_Prev_VMode ]
    };
    key <KPAD> {
        type="CTRL+ALT",	// +VMode switches to the next video mode
        symbols[Group1]= [ KP_Add, KP_Add, KP_Add, KP_Add, XF86_Next_VMode ]
    };
};

// Legacy PC keypad definition
// Copyright © 2006-2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
keypad_keys
xkb_symbols "legacy" {

    include "keypad(core)"
    include "keypad(legacymath)"
    include "keypad(legacynumber)"
    include "kpdl(dot)"
};


// Legacy Wang 725-3771-ae and 725-3771-uk keypad definition
// Copyright © 2006-2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
keypad_keys
xkb_symbols "legacy_wang" {

    include "keypad(core)"
    include "keypad(legacymath)"
    include "keypad(legacynumber_wang)"
    include "kpdl(dot)"
};


// Complete new keypad definition
// Copyright © 2006-2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
keypad_keys
xkb_symbols "oss" {

    include "keypad(core)"
    include "keypad(ossmath)"
    include "keypad(ossnumber)"
    include "kpdl(dotoss)"
};


// Latin9 restriction of new keypad definition
// Copyright © 2006-2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
keypad_keys
xkb_symbols "oss_latin9" {

    include "keypad(core)"
    include "keypad(ossmath_latin9)"
    include "keypad(legacynumber)"
    include "kpdl(dotoss_latin9)"
};


// Wang 725-3771-ae and 725-3771-uk keypad variant of oss keypad
// Copyright © 2006-2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
keypad_keys
xkb_symbols "oss_wang" {

    include "keypad(core)"
    include "keypad(ossmath)"
    include "keypad(ossnumber_wang)"
    include "kpdl(dotoss)"
};


// Forward-looking keypad definition
// Won't work with applications that make ASCII assumptions
// Copyright © 2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
keypad_keys
xkb_symbols "future" {

    include "keypad(core)"
    include "keypad(futuremath)"
    include "keypad(ossnumber)"
    include "kpdl(commaoss)"
};


// Forward-looking keypad definition
// Won't work with applications that make ASCII assumptions
// Copyright © 2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
keypad_keys
xkb_symbols "future_wang" {

    include "keypad(core)"
    include "keypad(futuremath)"
    include "keypad(ossnumber_wang)"
    include "kpdl(commaoss)"
};


// Keypad keys nobody changes
// Copyright © 2006 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
partial keypad_keys
xkb_symbols "core" {

    modifier_map Mod2 { Num_Lock };

    key <NMLK> { [ Num_Lock                     ] };
    key <KPEN> { [ KP_Enter                     ] };
    key <KPEQ> { [ KP_Equal                     ] };
};


// Legacy keypad math area
// Copyright © 2006 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┏━━━━━┱─────┬─────┬─────┐
// ┃Num  ┃ ₁   │ ₂   │ ₃   │ ₁ <XF86_Ungrab>
// ┃Lock⇭┃ /   │ *   │ -   │ ₂ <XF86_ClearGrab>
// ┡━━━━━╃─────┼─────┼─────┤ ₃ <XF86_Prev_VMode>
//                   │ ₄   │ ₄ <XF86_Next_VMode>
//                   │     │
//                   ┤     │ 1 None
//                   │     │ 2 Ctrl+Alt
//                   │ +   │
//                   ╆━━━━━┪
partial keypad_keys
xkb_symbols "legacymath" {

    key.type[Group1]="CTRL+ALT" ;

    key <KPDV> { [   KP_Divide, KP_Divide, KP_Divide, KP_Divide, XF86_Ungrab ] }; // / <XF86_Ungrab>
    key <KPMU> { [ KP_Multiply, KP_Multiply, KP_Multiply, KP_Multiply, XF86_ClearGrab ] }; // * <XF86_ClearGrab>
    key <KPSU> { [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86_Prev_VMode ] }; // - <XF86_Prev_VMode>

    key <KPAD> { [      KP_Add, KP_Add, KP_Add, KP_Add, XF86_Next_VMode ] }; // + <XF86_Next_VMode>
};


// Keypad math area with non-CS operators
// Copyright © 2006 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┏━━━━━┱─────┬─────┬─────┐
// ┃Num  ┃ ∕ ₁ │ . ₂ │ − ₃ │ ₁ <XF86_Ungrab>
// ┃Lock⇭┃ / ÷ │ * × │ - − │ ₂ <XF86_ClearGrab>
// ┡━━━━━╃─────┼─────┼─────┤ ₃ <XF86_Prev_VMode>
//                   │ + ₄ │ ₄ <XF86_Next_VMode>
//                   │     │
//                   ┤     │ 1 None
//                   │     │ 2 Level3 ⇮
//                   │ + + │ 3 Shift+Level3 ⇧⇮
//                   ╆━━━━━┪ 4 Ctrl+Alt
partial keypad_keys
xkb_symbols "ossmath" {

    key.type[Group1]="CTRL+ALT" ;

    key <KPDV> { [   KP_Divide, 0x1002215, 0x10000F7, VoidSymbol,     XF86_Ungrab ] }; // / ∕ ÷     <XF86_Ungrab>
    key <KPMU> { [ KP_Multiply, 0x10022C5, 0x10000D7, VoidSymbol,  XF86_ClearGrab ] }; // * ⋅ ×  <XF86_ClearGrab>
    key <KPSU> { [ KP_Subtract, 0x1002212, 0x1002212, VoidSymbol, XF86_Prev_VMode ] }; // - − − <XF86_Prev_VMode>

    key <KPAD> { [      KP_Add, 0x100002B, 0x100002B, VoidSymbol, XF86_Next_VMode ] }; // + + + <XF86_Next_VMode>
};


// Keypad math area with non-CS operators in first levels
// As demanded by users not interested in legacy pre-unicode junk
// Copyright © 2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┏━━━━━┱─────┬─────┬─────┐
// ┃Num  ┃ / ₁ │ * ₂ │ - ₃ │ ₁ <XF86_Ungrab>
// ┃Lock⇭┃ ∕ ÷ │ . × │ − − │ ₂ <XF86_ClearGrab>
// ┡━━━━━╃─────┼─────┼─────┤ ₃ <XF86_Prev_VMode>
//                   │ + ₄ │ ₄ <XF86_Next_VMode>
//                   │     │
//                   ┤     │ 1 None
//                   │     │ 2 Level3 ⇮
//                   │ + + │ 3 Shift+Level3 ⇧⇮
//                   ╆━━━━━┪ 4 Ctrl+Alt
partial keypad_keys
xkb_symbols "futuremath" {

    key.type[Group1]="FOUR_LEVEL_X" ;

    key <KPDV> { [ 0x1002215,   KP_Divide, 0x10000F7,     XF86_Ungrab ] }; // ∕ / ÷     <XF86_Ungrab>
    key <KPMU> { [ 0x10022C5, KP_Multiply, 0x10000D7,  XF86_ClearGrab ] }; // ⋅ * ×  <XF86_ClearGrab>
    key <KPSU> { [ 0x1002212, KP_Subtract, 0x1002212, XF86_Prev_VMode ] }; // − - − <XF86_Prev_VMode>

    key <KPAD> { [ 0x100002B,      KP_Add, 0x100002B, XF86_Next_VMode ] }; // + + + <XF86_Next_VMode>
};


// Keypad math area with non-CS operators, restricted to latin9
// Copyright © 2006 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┏━━━━━┱─────┬─────┬─────┐
// ┃Num  ┃ / ₁ │ · ₂ │ - ₃ │ ₁ <XF86_Ungrab>
// ┃Lock⇭┃ / ÷ │ * × │ - - │ ₂ <XF86_ClearGrab>
// ┡━━━━━╃─────┼─────┼─────┤ ₃ <XF86_Prev_VMode>
//                   │ + ₄ │ ₄ <XF86_Next_VMode>
//                   │     │
//                   ┤     │ 1 None
//                   │     │ 2 Level3 ⇮
//                   │ + + │ 3 Shift+Level3 ⇧⇮
//                   ╆━━━━━┪ 4 Ctrl+Alt
partial keypad_keys
xkb_symbols "ossmath_latin9" {

    key.type[Group1]="FOUR_LEVEL_X";

    key <KPDV> { [   KP_Divide,          slash, division,     XF86_Ungrab ] }; // / / ÷     <XF86_Ungrab>
    key <KPMU> { [ KP_Multiply, periodcentered, multiply,  XF86_ClearGrab ] }; // * · ×  <XF86_ClearGrab>
    key <KPSU> { [ KP_Subtract,          minus,    minus, XF86_Prev_VMode ] }; // - - - <XF86_Prev_VMode>

    key <KPAD> { [      KP_Add,           plus,     plus, XF86_Next_VMode ] }; // + + + <XF86_Next_VMode>
};


// Legacy keypad number area
// Copyright © 2006 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┏━━━━━┱
// ┃Num  ┃                   ⇱ Home
// ┃Lock⇭┃                   ⇲ End
// ┡━━━━━╃─────┼─────┼       ⇞ Page up
// │ 7   │ 8   │ 9   │       ⇟ Page down
// │ ⇱   │ ⇧   │ ⇞   │       ⎀ Insert
// ├─────┼─────┼─────┤       ␥ Delete
// │ 4   │ 5   │ 6   │       ⇦⇧⇨⇩ Directions
// │ ⇦   │     │ ⇨   │
// ├─────┼─────┼─────╆
// │ 1   │ 2   │ 3   ┃
// │ ⇲   │ ⇩   │ ⇟   ┃       1 None
// ├─────┴─────┼─────┨       2 Num Lock ⇭
// │ 0         │
// │ ⎀         │
// └───────────┴
partial keypad_keys
xkb_symbols "legacynumber" {

    key.type[Group1]="KEYPAD" ;

    key <KP7>  { [   KP_Home,       KP_7 ] }; //   <home> 7
    key <KP8>  { [     KP_Up,       KP_8 ] }; //     <up> 8
    key <KP9>  { [  KP_Prior,       KP_9 ] }; //  <prior> 9

    key <KP4>  { [   KP_Left,       KP_4 ] }; //   <left> 4
    key <KP5>  { [  KP_Begin,       KP_5 ] }; //  <begin> 5
    key <KP6>  { [  KP_Right,       KP_6 ] }; //  <right> 6

    key <KP1>  { [    KP_End,       KP_1 ] }; //    <end> 1
    key <KP2>  { [   KP_Down,       KP_2 ] }; //   <down> 2
    key <KP3>  { [   KP_Next,       KP_3 ] }; //   <next> 3

    key <KP0>  { [ KP_Insert,       KP_0 ] }; // <insert> 0
};


// Legacy Wang 725-3771-ae and 725-3771-uk keypad number area
// Copyright © 2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
// This is actually a three-level keypad, declared as four-level
// to avoid defining a new type
//
// ┏━━━━━┱
// ┃Num  ┃                   ⇱ Home
// ┃Lock⇭┃                   ⇲ End
// ┡━━━━━╃─────┼─────┼       ⇞ Page up
// │ 7   │ 8   │ 9   │       ⇟ Page down
// │ ⇱ < │ ⇧ > │ ⇞ ^ │       ⎀ Insert
// ├─────┼─────┼─────┤       ␥ Delete
// │ 4   │ 5   │ 6   │       ⇦⇧⇨⇩ Directions
// │ ⇦ [ │   ] │ ⇨ $ │
// ├─────┼─────┼─────╆
// │ 1   │ 2   │ 3   ┃
// │ ⇲ & │ ⇩ @ │ ⇟ # ┃       1 None
// ├─────┴─────┼─────┨       2 Num Lock ⇭
// │ 0         │             3 Level3 ⇮
// │ ⎀         │
// └───────────┴
partial keypad_keys
xkb_symbols "legacynumber_wang" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KP7>  { [   KP_Home,   KP_7,         less ] }; //   <home> 7 <
    key <KP8>  { [     KP_Up,   KP_8,      greater ] }; //     <up> 8 >
    key <KP9>  { [  KP_Prior,   KP_9,  asciicircum ] }; //  <prior> 9 ^

    key <KP4>  { [   KP_Left,   KP_4,  bracketleft ] }; //   <left> 4 [
    key <KP5>  { [  KP_Begin,   KP_5, bracketright ] }; //  <begin> 5 ]
    key <KP6>  { [  KP_Right,   KP_6,       dollar ] }; //  <right> 6 $

    key <KP1>  { [    KP_End,   KP_1,    ampersand ] }; //    <end> 1 &
    key <KP2>  { [   KP_Down,   KP_2,           at ] }; //   <down> 2 @
    key <KP3>  { [   KP_Next,   KP_3,   numbersign ] }; //   <next> 3 #

    key <KP0>  { [ KP_Insert,   KP_0,   apostrophe ] }; // <insert> 0 '
};


// Keypad number area with arrow symbols
// Copyright © 2006 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┏━━━━━┱
// ┃Num  ┃                   ⇱ Home
// ┃Lock⇭┃                   ⇲ End
// ┡━━━━━╃─────┼─────┼       ⇞ Page up
// │ 7 ⇖ │ 8 ⇑ │ 9 ⇗ │       ⇟ Page down
// │ ⇱ ↖ │ ⇧ ↑ │ ⇞ ↗ │       ⎀ Insert
// ├─────┼─────┼─────┤       ␥ Delete
// │ 4 ⇐ │ 5 ⇔ │ 6 ⇒ │       ⇦⇧⇨⇩ Directions
// │ ⇦ ← │   ↔ │ ⇨ → │       ⍽ narrow no-break space
// ├─────┼─────┼─────╆
// │ 1 ⇙ │ 2 ⇓ │ 3 ⇘ ┃
// │ ⇲ ↙ │ ⇩ ↓ │ ⇟ ↘ ┃       1 None
// ├─────┴─────┼─────┨       2 Num Lock ⇭
// │ 0       ⇕ │             3 Level3 ⇮
// │ ⎀       ↕ │             4 Shift+Level3 ⇧⇮
// └───────────┴
partial keypad_keys
xkb_symbols "ossnumber" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KP7>  { [   KP_Home,   KP_7, 0x1002196, 0x10021D6 ] }; //   <home> 7 ↖ ⇖
    key <KP8>  { [     KP_Up,   KP_8, 0x1002191, 0x10021D1 ] }; //     <up> 8 ↑ ⇑
    key <KP9>  { [  KP_Prior,   KP_9, 0x1002197, 0x10021D7 ] }; //  <prior> 9 ↗ ⇗

    key <KP4>  { [   KP_Left,   KP_4, 0x1002190, 0x10021D0 ] }; //   <left> 4 ← ⇐
    key <KP5>  { [  KP_Begin,   KP_5, 0x1002194, 0x10021D4 ] }; //  <begin> 5 ↔ ⇔
    key <KP6>  { [  KP_Right,   KP_6, 0x1002192, 0x10021D2 ] }; //  <right> 6 → ⇒

    key <KP1>  { [    KP_End,   KP_1, 0x1002199, 0x10021D9 ] }; //    <end> 1 ↙ ⇙
    key <KP2>  { [   KP_Down,   KP_2, 0x1002193, 0x10021D3 ] }; //   <down> 2 ↓ ⇓
    key <KP3>  { [   KP_Next,   KP_3, 0x1002198, 0x10021D8 ] }; //   <next> 3 ↘ ⇘

    key <KP0>  { [ KP_Insert,   KP_0, 0x1002195, 0x10021D5 ] }; // <insert> 0 ↕ ⇕
};


// Wang 725-3771-ae and 725-3771-uk keypad number area with additional arrow symbols
// Copyright © 2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>
//
// ┏━━━━━┱
// ┃Num  ┃                   ⇱ Home
// ┃Lock⇭┃                   ⇲ End
// ┡━━━━━╃─────┼─────┼       ⇞ Page up
// │ 7 ↖ │ 8 ↑ │ 9 ↗ │       ⇟ Page down
// │ ⇱ < │ ⇧ > │ ⇞ ^ │       ⎀ Insert
// ├─────┼─────┼─────┤       ␥ Delete
// │ 4 ← │ 5 ↔ │ 6 → │       ⇦⇧⇨⇩ Directions
// │ ⇦ [ │   ] │ ⇨ $ │       ⍽ narrow no-break space
// ├─────┼─────┼─────╆
// │ 1 ↙ │ 2 ↓ │ 3 ↘ ┃
// │ ⇲ & │ ⇩ @ │ ⇟ # ┃       1 None
// ├─────┴─────┼─────┨       2 Num Lock ⇭
// │ 0       ↕ │             3 Level3 ⇮
// │ ⎀       ' │             4 Shift+Level3 ⇧⇮
// └───────────┴
partial keypad_keys
xkb_symbols "ossnumber_wang" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KP7>  { [   KP_Home,   KP_7,         less, 0x1002196 ] }; //   <home> 7 < ↖
    key <KP8>  { [     KP_Up,   KP_8,      greater, 0x1002191 ] }; //     <up> 8 > ↑
    key <KP9>  { [  KP_Prior,   KP_9,  asciicircum, 0x1002197 ] }; //  <prior> 9 ^ ↗

    key <KP4>  { [   KP_Left,   KP_4,  bracketleft, 0x1002190 ] }; //   <left> 4 [ ←
    key <KP5>  { [  KP_Begin,   KP_5, bracketright, 0x1002194 ] }; //  <begin> 5 ] ↔
    key <KP6>  { [  KP_Right,   KP_6,       dollar, 0x1002192 ] }; //  <right> 6 $ →

    key <KP1>  { [    KP_End,   KP_1,    ampersand, 0x1002199 ] }; //    <end> 1 & ↙
    key <KP2>  { [   KP_Down,   KP_2,           at, 0x1002193 ] }; //   <down> 2 @ ↓
    key <KP3>  { [   KP_Next,   KP_3,   numbersign, 0x1002198 ] }; //   <next> 3 # ↘

    key <KP0>  { [ KP_Insert,   KP_0,   apostrophe, 0x1002195 ] }; // <insert> 0 ' ↕
};

// Standard base "pc" layout only contains cursor keys, and then gets
// augmented with the digits later. If you define your own layout for
// the numpad you can inherit the cursors, but you'll have to define
// the digits yourself. This module can be included in the rules to
// define math operators; these are the variants used in computer
// languages that are based on ASCII. NoSymbol doesn't mean that
// nothing is bound to the key but that no assignment is done here.
// srvr_ctrl(stdkeypad) and keypad(x11) declare the operator keys to
// be of type CTRL+ALT in order to assign server control events to
// them, but it uses the second level which is overwritten if we have
// more than one definition (shift state) for the key. Instead, here
// the commands are put at the fourth level.
partial keypad_keys
xkb_symbols "ops" {
    key <KPDV> { [ NoSymbol,  slash,     NoSymbol,  XF86_Ungrab     ] };
    key <KPMU> { [ NoSymbol,  asterisk,  NoSymbol,  XF86_ClearGrab  ] };
    key <KPSU> { [ NoSymbol,  minus,     NoSymbol,  XF86_Prev_VMode ] };
    key <KPAD> { [ NoSymbol,  plus,      NoSymbol,  XF86_Next_VMode ] };
    key <KPEQ> { [ NoSymbol,  equal      ] };
};

// Hexadecimal Numpad, by Roland Kaufmann <rlndkfmn at gmail dot com>
// License: BSD (also covers variant with ATM digit order)
// Third-level gives the letters used in hexadecimal numbers, or
// columns in small spreadsheets. As a bonus, having 'e' available at
// the center of the keyboard makes it easy to enter floating point
// numbers in scientific notation.
// Equal is added to start formulas (most numpads on PCs don't have
// their own equal key), comma as a list separator (as most
// programming languages wants period as a decimal separator) and
// colon to enter times and ranges. Someone also may want to represent
// multiplication and division in prose using x and colon.
// Two first levels are specified as NoSymbol to not override any
// previous specification. Combine this with another keypad specifier,
// e.g. "legacy".
partial keypad_keys
xkb_symbols "hex" {
    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    //             None       NumLock    AltGr
    // symbol row
    key <KPDV> { [ NoSymbol,  NoSymbol,  parenleft  ] };
    key <KPMU> { [ NoSymbol,  NoSymbol,  parenright ] };
    key <KPSU> { [ NoSymbol,  NoSymbol,  dollar     ] };

    // upper row
    key <KP7>  { [ NoSymbol,  NoSymbol,  a          ] };
    key <KP8>  { [ NoSymbol,  NoSymbol,  b          ] };
    key <KP9>  { [ NoSymbol,  NoSymbol,  c          ] };

    // home row
    key <KP4>  { [ NoSymbol,  NoSymbol,  d          ] };
    key <KP5>  { [ NoSymbol,  NoSymbol,  e          ] };
    key <KP6>  { [ NoSymbol,  NoSymbol,  f          ] };
    key <KPAD> { [ NoSymbol,  NoSymbol,  comma      ] };

    // lower row
    key <KP1>  { [ NoSymbol,  NoSymbol,  equal      ] };
    key <KP2>  { [ NoSymbol,  NoSymbol,  x          ] };
    key <KP3>  { [ NoSymbol,  NoSymbol,  colon      ] };

    // decimal row
    key <KP0>  { [ NoSymbol,  NoSymbol,  backslash  ] };
};

// Main numbers follows the traditions from ATMs and phones with
// numbers increasing downwards to the right. (It is easier to
// change the keyboard layout than to reprogram your local ATM;
// also cell-phones are becoming more common while calculators are
// becoming more rare).
// First level is left unspecified, so it may be combined with another
// layout, e.g. "legacy".
partial keypad_keys
xkb_symbols "atm" {
    // upper row
    key <KP7>  { [ NoSymbol,  KP_1 ] };
    key <KP8>  { [ NoSymbol,  KP_2 ] };
    key <KP9>  { [ NoSymbol,  KP_3 ] };

    // lower row
    key <KP1>  { [ NoSymbol,  KP_7 ] };
    key <KP2>  { [ NoSymbol,  KP_8 ] };
    key <KP3>  { [ NoSymbol,  KP_9 ] };
};


partial modifier_keys
xkb_symbols "pointerkeys" {
    key <NMLK> { [ Num_Lock, Pointer_EnableKeys ] };
};


// Only numbers, operators and decimal separator,
// as seen on keypad overlay on Japanese keyboard.
// ┌─┬─┬─┬─┐
// │7│8│9│*│
// ├─┼─┼─┼─┤
// │4│5│6│-│
// ├─┼─┼─┼─┤
// │1│2│3│+│
// ├─┼─┼─┼─┤
// │0│ │·│/│
// └─┴─┴─┴─┘
partial keypad_keys
xkb_symbols "numoperdecsep" {
    key  <KO7> {	[  KP_7	]	};
    key  <KO8> {	[  KP_8	]	};
    key  <KO9> {	[  KP_9	]	};
// ClsGrb kills whichever client has a grab in effect
    key <KOMU> {
        type="CTRL+ALT",
        symbols[Group1]= [ KP_Multiply, KP_Multiply, KP_Multiply, KP_Multiply, XF86_ClearGrab ]
    };

    key  <KO4> {	[  KP_4	]	};
    key  <KO5> {	[  KP_5	]	};
    key  <KO6> {	[  KP_6	]	};
// -VMode switches to the previous video mode
    key <KOSU> {
        type="CTRL+ALT",
        symbols[Group1]= [ KP_Subtract, KP_Subtract, KP_Subtract, KP_Subtract, XF86_Prev_VMode ]
    };

    key  <KO1> {	[  KP_1	]	};
    key  <KO2> {	[  KP_2	]	};
    key  <KO3> {	[  KP_3	]	};
// +VMode switches to the next video mode
    key <KOAD> {
        type="CTRL+ALT",
        symbols[Group1]= [ KP_Add, KP_Add, KP_Add, KP_Add, XF86_Next_VMode ]
    };

    key  <KO0> {	[  KP_0	]	};
    key <KODL> {	[ KP_Decimal ]	};
// Ungrab cancels server/keyboard/pointer grabs
    key <KODV> {
        type="CTRL+ALT",
        symbols[Group1]= [ KP_Divide, KP_Divide, KP_Divide, KP_Divide, XF86_Ungrab ]
    };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // The <KPDL> key is a mess.
// It was probably originally meant to be a decimal separator.
// Except since it was declared by USA people it didn't use the original
// SI separator "," but a "." (since then the USA managed to f-up the SI
// by making "." an accepted alternative, but standards still use "," as
// default)
// As a result users of SI-abiding countries expect either a "." or a ","
// or a "decimal_separator" which may or may not be translated in one of the
// above depending on applications.
// It's not possible to define a default per-country since user expectations
// depend on the conflicting choices of their most-used applications,
// operating system, etc. Therefore it needs to be a configuration setting
// Copyright © 2007 Nicolas Mailhot <nicolas.mailhot @ laposte.net>


// Legacy <KPDL> #1
// This assumes KP_Decimal will be translated in a dot
partial keypad_keys
xkb_symbols "dot" {

    key.type[Group1]="KEYPAD" ;

    key <KPDL> { [ KP_Delete, KP_Decimal ] }; // <delete> <separator>
};


// Legacy <KPDL> #2
// This assumes KP_Separator will be translated in a comma
partial keypad_keys
xkb_symbols "comma" {

    key.type[Group1]="KEYPAD" ;

    key <KPDL> { [ KP_Delete, KP_Separator ] }; // <delete> <separator>
};


// Period <KPDL>, usual keyboard serigraphy in most countries
partial keypad_keys
xkb_symbols "dotoss" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KPDL> { [ KP_Delete, period, comma, 0x100202F ] }; // <delete> . , ⍽ (narrow no-break space)
};


// Period <KPDL>, usual keyboard serigraphy in most countries, latin-9 restriction
partial keypad_keys
xkb_symbols "dotoss_latin9" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KPDL> { [ KP_Delete, period, comma, nobreakspace ] }; // <delete> . , ⍽ (no-break space)
};


// Comma <KPDL>, what most non anglo-saxon people consider the real separator
partial keypad_keys
xkb_symbols "commaoss" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KPDL> { [ KP_Delete, comma, period, 0x100202F ] }; // <delete> , . ⍽ (narrow no-break space)
};


// Momayyez <KPDL>: Bahrain, Iran, Iraq, Kuwait, Oman, Qatar, Saudi Arabia, Syria, UAE
partial keypad_keys
xkb_symbols "momayyezoss" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KPDL> { [ KP_Delete, 0x100066B, comma, 0x100202F ] }; // <delete> ? , ⍽ (narrow no-break space)
};


// Abstracted <KPDL>, pray everything will work out (it usually does not)
partial keypad_keys
xkb_symbols "kposs" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KPDL> { [ KP_Delete, KP_Decimal, KP_Separator, 0x100202F ] }; // <delete> ? ? ⍽ (narrow no-break space)
};

// Spreadsheets may be configured to use the dot as decimal
// punctuation, comma as a thousands separator and then semi-colon as
// the list separator. Of these, dot and semi-colon is most important
// when entering data by the keyboard; the comma can then be inferred
// and added to the presentation afterwards. Using semi-colon as a
// general separator may in fact be preferred to avoid ambiguities
// in data files. Most times a decimal separator is hard-coded, it
// seems to be period, probably since this is the syntax used in
// (most) programming languages.
partial keypad_keys
xkb_symbols "semi" {

    key.type[Group1]="FOUR_LEVEL_MIXED_KEYPAD" ;

    key <KPDL> { [ NoSymbol, NoSymbol, semicolon ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          default  alphanumeric_keys
xkb_symbols "kr106" {
    include "us"
    name[Group1]= "Korean";
    include "kr(hw_keys)"
};

alphanumeric_keys
xkb_symbols "kr104" {
    include "us"
    name[Group1]= "Korean (101/104 key compatible)";
    include "kr(ralt_hangul)"
    include "kr(rctrl_hanja)"
};

partial function_keys
xkb_symbols "hw_keys" {
    key <HNGL> { [ Hangul       ] };
    key <HJCV> { [ Hangul_Hanja ] };
};

partial function_keys
xkb_symbols "ralt_hangul" {
    replace key <RALT> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1]= [ Hangul ]
    };
};

partial function_keys
xkb_symbols "rctrl_hangul" {
    replace key <RCTL> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1]= [ Hangul ]
    };
};

partial function_keys
xkb_symbols "ralt_hanja" {
    replace key <RALT> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1]= [ Hangul_Hanja ]
    };
};

partial function_keys
xkb_symbols "rctrl_hanja" {
    replace key <RCTL> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1]= [ Hangul_Hanja ]
    };
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/kr(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // Based on http://www.sci.kz/~sairan/keyboard/kzkbd.html
// Baurzhan Ismagulov <ibr@radix50.net>
//

// TODO:
// 1. AltGr with TLDE and LSGT.
// 2. Dead key for ruskaz and kazrus.
// 3. Ctrl + <key>.
// 4. Alt-Tab.

// RST KazSSR 903-90
// levels 3 and 4 are non-standard extensions
default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1] = "Kazakh";

key.type[group1] = "FOUR_LEVEL";

    key <TLDE> { [ parenleft,               parenright,              Cyrillic_io, Cyrillic_IO ] };
    key <AE01> { [ quotedbl,      exclam ] };
    key <AE06> { [ comma,                   semicolon ] };
    key <AE07> { [ period,                  colon ] };
    key <BKSL> { [ backslash,               slash ] };
    key <AB10> { [ numerosign,              question ] };
    key <LSGT> { [ less,                    greater,                 bar,         brokenbar ] };

key.type[group1] = "ALPHABETIC";

    key <AE02> { [ Cyrillic_schwa,          Cyrillic_SCHWA ] };
    key <AE03> { [ Ukrainian_i,             Ukrainian_I ] };
    key <AE04> { [ Cyrillic_en_descender,   Cyrillic_EN_descender ] };
    key <AE05> { [ Cyrillic_ghe_bar,        Cyrillic_GHE_bar ] };
    key <AE08> { [ Cyrillic_u_straight,     Cyrillic_U_straight ] };
    key <AE09> { [ Cyrillic_u_straight_bar, Cyrillic_U_straight_bar ] };
    key <AE10> { [ Cyrillic_ka_descender,   Cyrillic_KA_descender ] };
    key <AE11> { [ Cyrillic_o_bar,          Cyrillic_O_bar ] };
    key <AE12> { [ Cyrillic_shha,           Cyrillic_SHHA ] };

    key <AD01> { [ Cyrillic_shorti,         Cyrillic_SHORTI ] };
    key <AD02> { [ Cyrillic_tse,            Cyrillic_TSE ] };
    key <AD03> { [ Cyrillic_u,              Cyrillic_U ] };
    key <AD04> { [ Cyrillic_ka,             Cyrillic_KA ] };
    key <AD05> { [ Cyrillic_ie,             Cyrillic_IE ] };
    key <AD06> { [ Cyrillic_en,             Cyrillic_EN ] };
    key <AD07> { [ Cyrillic_ghe,            Cyrillic_GHE ] };
    key <AD08> { [ Cyrillic_sha,            Cyrillic_SHA ] };
    key <AD09> { [ Cyrillic_shcha,          Cyrillic_SHCHA ] };
    key <AD10> { [ Cyrillic_ze,             Cyrillic_ZE ] };
    key <AD11> { [ Cyrillic_ha,             Cyrillic_HA ] };
    key <AD12> { [ Cyrillic_hardsign,       Cyrillic_HARDSIGN ] };
    key <AC01> { [ Cyrillic_ef,             Cyrillic_EF ] };
    key <AC02> { [ Cyrillic_yeru,           Cyrillic_YERU ] };
    key <AC03> { [ Cyrillic_ve,             Cyrillic_VE ] };
    key <AC04> { [ Cyrillic_a,              Cyrillic_A ] };
    key <AC05> { [ Cyrillic_pe,             Cyrillic_PE ] };
    key <AC06> { [ Cyrillic_er,             Cyrillic_ER ] };
    key <AC07> { [ Cyrillic_o,              Cyrillic_O ] };
    key <AC08> { [ Cyrillic_el,             Cyrillic_EL ] };
    key <AC09> { [ Cyrillic_de,             Cyrillic_DE ] };
    key <AC10> { [ Cyrillic_zhe,            Cyrillic_ZHE ] };
    key <AC11> { [ Cyrillic_e,              Cyrillic_E ] };
    key <AB01> { [ Cyrillic_ya,             Cyrillic_YA ] };
    key <AB02> { [ Cyrillic_che,            Cyrillic_CHE ] };
    key <AB03> { [ Cyrillic_es,             Cyrillic_ES ] };
    key <AB04> { [ Cyrillic_em,             Cyrillic_EM ] };
    key <AB06> { [ Cyrillic_te,             Cyrillic_TE ] };
    key <AB05> { [ Cyrillic_i,              Cyrillic_I ] };
    key <AB07> { [ Cyrillic_softsign,       Cyrillic_SOFTSIGN ] };
    key <AB08> { [ Cyrillic_be,             Cyrillic_BE ] };
    key <AB09> { [ Cyrillic_yu,             Cyrillic_YU ] };
};

// Kikkarin KZ1
partial alphanumeric_keys
xkb_symbols "ruskaz" {

    name[Group1] = "Russian (Kazakhstan, with Kazakh)";

key.type[group1] = "FOUR_LEVEL";

    key	<AE01> { [ 1,                       exclam ] };
    key	<AE02> { [ 2,                       quotedbl,                at ] };
    key	<AE03> { [ 3,                       numerosign,              numbersign ] };
    key	<AE04> { [ 4,                       semicolon,               dollar ] };
    key	<AE05> { [ 5,                       percent ] };
    key	<AE06> { [ 6,                       colon,                   asciicircum ] };
    key	<AE07> { [ 7,                       question,                ampersand ] };
    key	<AE08> { [ 8,                       asterisk ] };
    key	<AE09> { [ 9,                       parenleft ] };
    key	<AE10> { [ 0,                       parenright ] };
    key	<AE11> { [ minus,                   underscore ] };
    key	<AE12> { [ equal,                   plus ] };
    key	<BKSL> { [ backslash,               slash,                   bar ] };
    key	<AB10> { [ period,                  comma,                   slash,                   question ] };
    key <LSGT> { [ less,                    greater,                 bar,                     brokenbar ] };

key.type[group1] = "FOUR_LEVEL_ALPHABETIC";

    key	<TLDE> { [ Cyrillic_io,             Cyrillic_IO ] };
    key	<AD01> { [ Cyrillic_shorti,         Cyrillic_SHORTI,         Cyrillic_u_straight_bar, Cyrillic_U_straight_bar ] };
    key	<AD02> { [ Cyrillic_tse,            Cyrillic_TSE ] };
    key	<AD03> { [ Cyrillic_u,              Cyrillic_U,              Cyrillic_u_straight,     Cyrillic_U_straight ] };
    key	<AD04> { [ Cyrillic_ka,             Cyrillic_KA,             Cyrillic_ka_descender,   Cyrillic_KA_descender ] };
    key	<AD05> { [ Cyrillic_ie,             Cyrillic_IE,             Cyrillic_io,             Cyrillic_IO ] };
    key	<AD06> { [ Cyrillic_en,             Cyrillic_EN,             Cyrillic_en_descender,   Cyrillic_EN_descender ] };
    key	<AD07> { [ Cyrillic_ghe,            Cyrillic_GHE,            Cyrillic_ghe_bar,        Cyrillic_GHE_bar ] };
    key	<AD08> { [ Cyrillic_sha,            Cyrillic_SHA ] };
    key	<AD09> { [ Cyrillic_shcha,          Cyrillic_SHCHA ] };
    key	<AD10> { [ Cyrillic_ze,             Cyrillic_ZE ] };
    key	<AD11> { [ Cyrillic_ha,             Cyrillic_HA,             Cyrillic_shha,           Cyrillic_SHHA ] };
    key	<AD12> { [ Cyrillic_hardsign,       Cyrillic_HARDSIGN ] };
    key	<AC01> { [ Cyrillic_ef,             Cyrillic_EF ] };
    key	<AC02> { [ Cyrillic_yeru,           Cyrillic_YERU ] };
    key	<AC03> { [ Cyrillic_ve,             Cyrillic_VE ] };
    key	<AC04> { [ Cyrillic_a,              Cyrillic_A,              Cyrillic_schwa,          Cyrillic_SCHWA ] };
    key	<AC05> { [ Cyrillic_pe,             Cyrillic_PE ] };
    key	<AC06> { [ Cyrillic_er,             Cyrillic_ER ] };
    key	<AC07> { [ Cyrillic_o,              Cyrillic_O,              Cyrillic_o_bar,          Cyrillic_O_bar ] };
    key	<AC08> { [ Cyrillic_el,             Cyrillic_EL ] };
    key	<AC09> { [ Cyrillic_de,             Cyrillic_DE ] };
    key	<AC10> { [ Cyrillic_zhe,            Cyrillic_ZHE ] };
    key	<AC11> { [ Cyrillic_e,              Cyrillic_E ] };
    key	<AB01> { [ Cyrillic_ya,             Cyrillic_YA ] };
    key	<AB02> { [ Cyrillic_che,            Cyrillic_CHE ] };
    key	<AB03> { [ Cyrillic_es,             Cyrillic_ES ] };
    key	<AB04> { [ Cyrillic_em,             Cyrillic_EM ] };
    key	<AB06> { [ Cyrillic_te,             Cyrillic_TE ] };
    key	<AB05> { [ Cyrillic_i,              Cyrillic_I,              Ukrainian_i,             Ukrainian_I ] };
    key	<AB07> { [ Cyrillic_softsign,       Cyrillic_SOFTSIGN ] };
    key	<AB08> { [ Cyrillic_be,             Cyrillic_BE ] };
    key	<AB09> { [ Cyrillic_yu,             Cyrillic_YU ] };
};

// Kikkarin KZ2
partial alphanumeric_keys
xkb_symbols "kazrus" {

    name[Group1] = "Kazakh (with Russian)";

key.type[group1] = "FOUR_LEVEL";

    key	<AE01> { [ 1,                       exclam ] };
    key	<AE02> { [ 2,                       quotedbl,                at ] };
    key	<AE03> { [ 3,                       numerosign,              numbersign ] };
    key	<AE04> { [ 4,                       semicolon,               dollar ] };
    key	<AE05> { [ 5,                       percent ] };
    key	<AE06> { [ 6,                       colon,                   asciicircum ] };
    key	<AE07> { [ 7,                       question,                ampersand ] };
    key	<AE08> { [ 8,                       asterisk ] };
    key	<AE09> { [ 9,                       parenleft ] };
    key	<AE10> { [ 0,                       parenright ] };
    key	<AE11> { [ minus,                   underscore ] };
    key	<AE12> { [ equal,                   plus ] };
    key	<BKSL> { [ backslash,               slash,                   bar ] };
    key	<AB10> { [ period,                  comma,                   slash,                   question ] };
    key <LSGT> { [ less,                    greater,                 bar,                     brokenbar ] };

key.type[group1] = "FOUR_LEVEL_ALPHABETIC";

    key	<TLDE> { [ Cyrillic_io,             Cyrillic_IO ] };
    key	<AD01> { [ Cyrillic_shorti,         Cyrillic_SHORTI ] };
    key	<AD02> { [ Cyrillic_en_descender,   Cyrillic_EN_descender,   Cyrillic_tse,            Cyrillic_TSE ] };
    key	<AD03> { [ Cyrillic_u,              Cyrillic_U ] };
    key	<AD04> { [ Cyrillic_ka,             Cyrillic_KA,             Cyrillic_ka_descender,    Cyrillic_KA_descender ] };
    key	<AD05> { [ Cyrillic_ie,             Cyrillic_IE,             Cyrillic_io,             Cyrillic_IO ] };
    key	<AD06> { [ Cyrillic_en,             Cyrillic_EN ] };
    key	<AD07> { [ Cyrillic_ghe,            Cyrillic_GHE ] };
    key	<AD08> { [ Cyrillic_sha,            Cyrillic_SHA ] };
    key	<AD09> { [ Cyrillic_ghe_bar,        Cyrillic_GHE_bar,        Cyrillic_shcha,          Cyrillic_SHCHA ] };
    key	<AD10> { [ Cyrillic_ze,             Cyrillic_ZE ] };
    key	<AD11> { [ Cyrillic_ha,             Cyrillic_HA,             Cyrillic_shha,           Cyrillic_SHHA ] };
    key	<AD12> { [ Cyrillic_u_straight_bar, Cyrillic_U_straight_bar, Cyrillic_hardsign,       Cyrillic_HARDSIGN ] };
    key	<AC01> { [ Cyrillic_o_bar,          Cyrillic_O_bar,          Cyrillic_ef,             Cyrillic_EF ] };
    key	<AC02> { [ Cyrillic_yeru,           Cyrillic_YERU ] };
    key	<AC03> { [ Cyrillic_ka_descender,   Cyrillic_KA_descender,   Cyrillic_ve,             Cyrillic_VE ] };
    key	<AC04> { [ Cyrillic_a,              Cyrillic_A ] };
    key	<AC05> { [ Cyrillic_pe,             Cyrillic_PE ] };
    key	<AC06> { [ Cyrillic_er,             Cyrillic_ER ] };
    key	<AC07> { [ Cyrillic_o,              Cyrillic_O ] };
    key	<AC08> { [ Cyrillic_el,             Cyrillic_EL ] };
    key	<AC09> { [ Cyrillic_de,             Cyrillic_DE ] };
    key	<AC10> { [ Cyrillic_zhe,            Cyrillic_ZHE ] };
    key	<AC11> { [ Cyrillic_schwa,          Cyrillic_SCHWA,          Cyrillic_e,              Cyrillic_E ] };
    key	<AB01> { [ Cyrillic_ya,             Cyrillic_YA ] };
    key	<AB02> { [ Ukrainian_i,             Ukrainian_I,             Cyrillic_che,            Cyrillic_CHE ] };
    key	<AB03> { [ Cyrillic_es,             Cyrillic_ES ] };
    key	<AB04> { [ Cyrillic_em,             Cyrillic_EM ] };
    key	<AB06> { [ Cyrillic_te,             Cyrillic_TE ] };
    key	<AB05> { [ Cyrillic_i,              Cyrillic_I ] };
    key	<AB07> { [ Cyrillic_u_straight,     Cyrillic_U_straight,     Cyrillic_softsign,       Cyrillic_SOFTSIGN ] };
    key	<AB08> { [ Cyrillic_be,             Cyrillic_BE ] };
    key	<AB09> { [ Cyrillic_yu,             Cyrillic_YU ] };
};

partial alphanumeric_keys
xkb_symbols "olpc" {

// Contact: Walter Bender <walter@laptop.org>

// We moved the Cyrillic IO off of the Tilde Key as an Alt-GR character
// and moved it onto the Backslash key, making Backslash and Bar available
// through the Latin side of the keyboard.

   include "kz(basic)"

   key <TLDE> { [ parenleft,               parenright ] };
   key <BKSL> { [ Cyrillic_io,             Cyrillic_IO ] };

   include "group(olpc)"
};

partial alphanumeric_keys
xkb_symbols "ext" {

// Levels 3 and 4 represent main keyboard's numeric part of US layout,
// parens are duplicated for consistency.

    include "kz(basic)"
    name[Group1] = "Kazakh (extended)";

key.type[group1] = "FOUR_LEVEL_ALPHABETIC";

    key <AE01> { [ quotedbl,                exclam,                  1,      exclam ] };
    key <AE02> { [ Cyrillic_schwa,          Cyrillic_SCHWA,          2,      at ] };
    key <AE03> { [ Ukrainian_i,             Ukrainian_I,             3,      numbersign ] };
    key <AE04> { [ Cyrillic_en_descender,   Cyrillic_EN_descender,   4,      dollar ] };
    key <AE05> { [ Cyrillic_ghe_bar,        Cyrillic_GHE_bar,        5,      percent ] };
    key <AE06> { [ comma,                   semicolon,               6,      asciicircum ] };
    key <AE07> { [ period,                  colon,                   7,      ampersand ] };
    key <AE08> { [ Cyrillic_u_straight,     Cyrillic_U_straight,     8,      asterisk ] };
    key <AE09> { [ Cyrillic_u_straight_bar, Cyrillic_U_straight_bar, 9,      parenleft ] };
    key <AE10> { [ Cyrillic_ka_descender,   Cyrillic_KA_descender,   0,      parenright ] };
    key <AE11> { [ Cyrillic_o_bar,          Cyrillic_O_bar,          minus,  underscore  ] };
    key <AE12> { [ Cyrillic_shha,           Cyrillic_SHHA,           equal,  plus ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               // Lao keymap, by Anousak Souphavanh <anousak@muanglao.com>

default  partial alphanumeric_keys
xkb_symbols "basic" {

    // This keymap describes the Lao keyboard standard,
    // which is [kind of] widely used in Laos.

    name[Group1]= "Lao";

    key <TLDE> { [ 0x100200D			]};
    key <AE01> { [ 0x1000ea2,       0x1000ed1	]};
    key <AE01> { [ 0x1000ea2,       0x1000ed1	]};
    key <AE02> { [ 0x1000e9f,       0x1000ed2	]};
    key <AE03> { [ 0x1000ec2,       0x1000ed3	]};
    key <AE04> { [ 0x1000e96,       0x1000ed4	]};
    key <AE05> { [ 0x1000eb8,       0x1000ecc	]};
    key <AE06> { [ 0x1000eb9,       0x1000ebc	]};
    key <AE07> { [ 0x1000e84,       0x1000ed5	]};
    key <AE08> { [ 0x1000e95,       0x1000ed6	]};
    key <AE09> { [ 0x1000e88,       0x1000ed7	]};
    key <AE10> { [ 0x1000e82,       0x1000ed8	]};
    key <AE11> { [ 0x1000e8a,       0x1000ed9	]};
    key <AE12> { [ 0x1000ecd			]};

    key <AD01> { [ 0x1000ebb			]};
    key <AD02> { [ 0x1000ec4,       0x1000ed0	]};
    key <AD03> { [ 0x1000eb3			]};
    key <AD04> { [ 0x1000e9e,       underscore	]};
    key <AD05> { [ 0x1000eb0,       plus	]};
    key <AD06> { [ 0x1000eb4			]};
    key <AD07> { [ 0x1000eb5			]};
    key <AD08> { [ 0x1000ea3,       0x1000eae	]};
    key <AD09> { [ 0x1000e99			]};
    key <AD10> { [ 0x1000e8d,       0x1000ebd	]};
    key <AD11> { [ 0x1000e9a,       minus	]};
    key <AD12> { [ 0x1000ea5,       braceright	]};
    key <BKSL> { [ 0x1000edc,       0x1000edd	]};

    key <AC01> { [ 0x1000eb1			]};
    key <AC02> { [ 0x1000eab,       semicolon	]};
    key <AC03> { [ 0x1000e81,       period	]};
    key <AC04> { [ 0x1000e94,       comma	]};
    key <AC05> { [ 0x1000ec0,       colon	]};
    key <AC06> { [ 0x1000ec9,       0x1000eca	]};
    key <AC07> { [ 0x1000ec8,       0x1000ecb	]};
    key <AC08> { [ 0x1000eb2,       exclam	]};
    key <AC09> { [ 0x1000eaa,       question	]};
    key <AC10> { [ 0x1000ea7,       percent	]};
    key <AC11> { [ 0x1000e87,       equal	]};

    key <AB01> { [ 0x1000e9c,       0x10020ad	]};
    key <AB02> { [ 0x1000e9b,       parenleft	]};
    key <AB03> { [ 0x1000ec1,       0x1000eaf	]};
    key <AB04> { [ 0x1000ead			]};
    key <AB05> { [ 0x1000eb6			]};
    key <AB06> { [ 0x1000eb7			]};
    key <AB07> { [ 0x1000e97,       0x1000ec6	]};
    key <AB08> { [ 0x1000ea1,       grave	]};
    key <AB09> { [ 0x1000ec3,       dollar	]};
    key <AB10> { [ 0x1000e9d,       parenright	]};
};


partial
xkb_symbols "stea" {

    // This keymap describes the proposed Lao keyboard standard by
    // the PAN Localization Project.
    // Science Technology and Environment Agency of Lao PDR
    // National University Computer and Emergency Science of Pakistan
    // International Development Research Center
    // Caveat: assigning multiple codepoints to a single key doesn't
    // work in XKB.  Therefore the combining codepoint assignments
    // have been omitted.

    name[Group1]= "Lao (STEA proposed standard layout)";

    key <TLDE> { [  quotedbl,      apostrophe			]};
    key <AE01> { [ 0x1000ea2,               1,       0x1000ed1	]};
    key <AE02> { [ 0x1000e9f,               2,       0x1000ed2	]};
    key <AE03> { [ 0x1000ec2,               3,       0x1000ed3	]};
    key <AE04> { [ 0x1000e96,               4,       0x1000ed4	]};
    key <AE05> { [ 0x1000eb8,       0x1000ecc,       0x1000ed5	]};
    key <AE06> { [ 0x1000eb9,       0x1000ebc,       0x1000ed6	]};
    key <AE07> { [ 0x1000e84,               5,       0x1000ed7	]};
    key <AE08> { [ 0x1000e95,               6,       0x1000ed8	]};
    key <AE09> { [ 0x1000e88,               7,       0x1000ed9	]};
    key <AE10> { [ 0x1000e82,               8,       0x1000ed0	]};
    key <AE11> { [ 0x1000e8a,               9			]};
    key <AE12> { [ 0x1000ecd					]};

    key <AD01> { [ 0x1000ebb					]};
    key <AD02> { [ 0x1000ec4,               0			]};
    key <AD03> { [ 0x1000eb3,        asterisk			]};
    key <AD04> { [ 0x1000e9e,      underscore			]};
    key <AD05> { [ 0x1000eb0,            plus			]};
    key <AD06> { [ 0x1000eb4					]};
    key <AD07> { [ 0x1000eb5					]};
    key <AD08> { [ 0x1000eae,       0x1000ea3			]};
    key <AD09> { [ 0x1000e99,       0x1000edc			]};
    key <AD10> { [ 0x1000e8d,       0x1000ebd			]};
    key <AD11> { [ 0x1000e9a,           minus			]};
    key <AD12> { [ 0x1000ea5					]};
    key <BKSL> { [     slash,       backslash			]};

    key <AC01> { [ 0x1000eb1			]};
    key <AC02> { [ 0x1000eab,       semicolon	]};
    key <AC03> { [ 0x1000e81,          period	]};
    key <AC04> { [ 0x1000e94,           comma	]};
    key <AC05> { [ 0x1000ec0,           colon	]};
    key <AC06> { [ 0x1000ec9,       0x1000eca	]};
    key <AC07> { [ 0x1000ec8,       0x1000ecb	]};
    key <AC08> { [ 0x1000eb2,          exclam	]};
    key <AC09> { [ 0x1000eaa,        question	]};
    key <AC10> { [ 0x1000ea7,         percent	]};
    key <AC11> { [ 0x1000e87,           equal	]};

    key <AB01> { [ 0x1000e9c,       0x10020ad	]};
    key <AB02> { [ 0x1000e9b,       parenleft	]};
    key <AB03> { [ 0x1000ec1,       0x1000eaf	]};
    key <AB04> { [ 0x1000ead,               x	]};
    key <AB05> { [ 0x1000eb6			]};
    key <AB06> { [ 0x1000eb7			]};
    key <AB07> { [ 0x1000e97,       0x1000ec6	]};
    key <AB08> { [ 0x1000ea1,       0x1000edd	]};
    key <AB09> { [ 0x1000ec3,          dollar	]};
    key <AB10> { [ 0x1000e9d,      parenright	]};

    key <SPCE> { [     space,    nobreakspace,    nobreakspace	]};

    key <KPDL> { [     comma,          period 			]};

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             // based on a keyboard
// Modified for a real Latin American Keyboard by Fabian Mandelbaum

default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin(type4)"

    name[Group1]="Spanish (Latin American)";

    key <AE01>	{ [         1,     exclam,          bar,   exclamdown ]	};
    key <AE03>	{ [         3, numbersign, periodcentered,   sterling ]	};
    key <AE04>	{ [         4,     dollar,   asciitilde,       dollar ]	};
    key <AE06>	{ [         6,  ampersand,      notsign,  fiveeighths ]	};
    key <AE11>	{ [apostrophe,   question,    backslash, questiondown ]	};
    key <AE12>	{ [questiondown, exclamdown, dead_cedilla, dead_ogonek]	};

    key <AD11>	{ [dead_acute, dead_diaeresis, dead_diaeresis, dead_abovering ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,  dead_macron ]	};

    key <AC10>	{ [    ntilde,     Ntilde,   asciitilde, dead_doubleacute ] };
    key <AC11>	{ [ braceleft, bracketleft, dead_circumflex, braceleft]	};
    key <TLDE>	{ [       bar,     degree,      notsign,      notsign ]	};

    key <BKSL>	{ [braceright, bracketright, dead_grave,   braceright ]	};

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {
    include "latam(basic)"

    key <AC11>	{ [dead_acute, dead_diaeresis, braceleft, braceleft ]	};
    key <AD11>	{ [dead_grave, dead_circumflex, bracketleft, dead_abovering ] };
};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {
    include "latam(Sundeadkeys)"
    name[Group1]="Spanish (Latin American, Sun dead keys)";
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    include "latam(basic)"

    name[Group1]="Spanish (Latin American, eliminate dead keys)";

    key <AE12>	{ [questiondown, exclamdown,    cedilla,       ogonek ]	};
    key <AD11>	{ [     grave, asciicircum, bracketleft,       degree ]	};
    key <AD12>	{ [      plus,   asterisk, bracketright,       macron ]	};
    key <AC10>	{ [    ntilde,     Ntilde,   asciitilde,  doubleacute ]	};
    key <AC11>	{ [     acute,  diaeresis,    braceleft,    braceleft ]	};
    key <BKSL>	{ [  ccedilla,   Ccedilla,   braceright,        breve ]	};
    key <AB10>	{ [     minus, underscore, dead_belowdot,    abovedot ]	};
};

partial alphanumeric_keys
xkb_symbols "deadtilde" {

    include "latam(basic)"

    name[Group1]="Spanish (Latin American, include dead tilde)";

    key <AD12>	{ [      plus,   asterisk,   dead_tilde,  dead_macron ]	};
};

// Latin American Spanish Dvorak mapping (note R-H exchange)
partial alphanumeric_keys
xkb_symbols "dvorak" {

    name[Group1]="Spanish (Latin American, Dvorak)";

    key <TLDE> {[          bar,     degree,        notsign,      notsign ]};
    key <AE01> {[            1,     exclam,            bar,   exclamdown ]};
    key <AE02> {[            2,   quotedbl,             at,    oneeighth ]};
    key <AE03> {[            3, numbersign, periodcentered,     sterling ]};
    key <AE04> {[            4,     dollar,     asciitilde,       dollar ]};
    key <AE05> {[            5,    percent,        onehalf, threeeighths ]};
    key <AE06> {[            6,  ampersand,        notsign,  fiveeighths ]};
    key <AE07> {[            7,      slash,      braceleft, seveneighths ]};
    key <AE08> {[            8,  parenleft,    bracketleft,    trademark ]};
    key <AE09> {[            9, parenright,   bracketright,    plusminus ]};
    key <AE10> {[            0,      equal,     braceright,       degree ]};
    key <AE11> {[   apostrophe,   question,      backslash, questiondown ]};
    key <AE12> {[ questiondown, exclamdown,   dead_cedilla,  dead_ogonek ]};

    key <AD01> {[     period,          colon,             at                 ]};
    key <AD02> {[      comma,      semicolon                                 ]};
    key <AD03> {[     ntilde,         Ntilde,        lstroke,        Lstroke ]};
    key <AD04> {[          p,              P,      paragraph                 ]};
    key <AD05> {[          y,              Y,            yen                 ]};
    key <AD06> {[          f,              F,         tslash,         Tslash ]};
    key <AD07> {[          g,              G,        dstroke,        Dstroke ]};
    key <AD08> {[          c,              C,           cent,      copyright ]};
    key <AD09> {[          h,              H,        hstroke,        Hstroke ]};
    key <AD10> {[          l,              L,       sterling                 ]};
    key <AD11> {[ dead_acute, dead_diaeresis, dead_diaeresis, dead_abovering ]};
    key <AD12> {[       plus,       asterisk,     asciitilde,    dead_macron ]};

    key <AC01> {[          a,            A,              ae,         AE ]};
    key <AC02> {[          o,            O,          oslash,     Oslash ]};
    key <AC03> {[          e,            E,        EuroSign             ]};
    key <AC04> {[          u,            U,           aring,      Aring ]};
    key <AC05> {[          i,            I,              oe,         OE ]};
    key <AC06> {[          d,            D,             eth,        ETH ]};
    key <AC07> {[          r,            R,      registered,  trademark ]};
    key <AC08> {[          t,            T,           thorn,      THORN ]};
    key <AC09> {[          n,            N,             eng,        ENG ]};
    key <AC10> {[          s,            S,          ssharp,    section ]};
    key <AC11> {[  braceleft,  bracketleft, dead_circumflex,  braceleft ]};
    key <BKSL> {[ braceright, bracketright,      dead_grave, braceright ]};

    key <LSGT> {[       less,    greater, guillemotleft, guillemotright ]};
    key <AB01> {[      minus, underscore,        hyphen, macron         ]};
    key <AB02> {[          q,          Q,      currency                 ]};
    key <AB03> {[          j,          J                                ]};
    key <AB04> {[          k,          K,           kra                 ]};
    key <AB05> {[          x,          X,       multiply, division      ]};
    key <AB06> {[          b,          B                                ]};
    key <AB07> {[          m,          M,            mu                 ]};
    key <AB08> {[          w,          W                                ]};
    key <AB09> {[          v,          V                                ]};
    key <AB10> {[          z,          Z                                ]};

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      // Common Latin alphabet layout

default  partial
xkb_symbols "basic" {

    key <AE01>	{ [         1,     exclam,  onesuperior,   exclamdown ]	};
    key <AE02>	{ [         2,         at,  twosuperior,    oneeighth ]	};
    key <AE03>	{ [         3, numbersign, threesuperior,    sterling ]	};
    key <AE04>	{ [         4,     dollar,   onequarter,       dollar ]	};
    key <AE05>	{ [         5,    percent,      onehalf, threeeighths ]	};
    key <AE06>	{ [         6, asciicircum, threequarters, fiveeighths ] };
    key <AE07>	{ [         7,  ampersand,    braceleft, seveneighths ]	};
    key <AE08>	{ [         8,   asterisk,  bracketleft,    trademark ]	};
    key <AE09>	{ [         9,  parenleft, bracketright,    plusminus ]	};
    key <AE10>	{ [         0, parenright,   braceright,       degree ]	};
    key <AE11>	{ [     minus, underscore,    backslash, questiondown ]	};
    key <AE12>	{ [     equal,       plus, dead_cedilla,  dead_ogonek ]	};

    key <AD01>	{ [         q,          Q,           at,  Greek_OMEGA ]	};
    key <AD02>	{ [         w,          W,      lstroke,      Lstroke ]	};
    key <AD03>	{ [         e,          E,            e,            E ]	};
    key <AD04>	{ [         r,          R,    paragraph,   registered ]	};
    key <AD05>	{ [         t,          T,       tslash,       Tslash ]	};
    key <AD06>	{ [         y,          Y,    leftarrow,          yen ]	};
    key <AD07>	{ [         u,          U,    downarrow,      uparrow ]	};
    key <AD08>	{ [         i,          I,   rightarrow,     idotless ]	};
    key <AD09>	{ [         o,          O,       oslash,     Ooblique ]	};
    key <AD10>	{ [         p,          P,        thorn,        THORN ]	};
    key <AD11>	{ [bracketleft,  braceleft, dead_diaeresis, dead_abovering ] };
    key <AD12>	{ [bracketright, braceright, dead_tilde,  dead_macron ]	};

    key <AC01>	{ [         a,          A,           ae,           AE ]	};
    key <AC02>	{ [         s,          S,       ssharp,      section ]	};
    key <AC03>	{ [         d,          D,          eth,          ETH ]	};
    key <AC04>	{ [         f,          F,      dstroke,  ordfeminine ]	};
    key <AC05>	{ [         g,          G,          eng,          ENG ]	};
    key <AC06>	{ [         h,          H,      hstroke,      Hstroke ]	};
    key <AC07>	{ [         j,          J,    dead_hook,    dead_horn ] };
    key <AC08>	{ [         k,          K,          kra,    ampersand ]	};
    key <AC09>	{ [         l,          L,      lstroke,      Lstroke ]	};
    key <AC10>	{ [ semicolon,    colon, dead_acute, dead_doubleacute ]	};
    key <AC11>	{ [apostrophe, quotedbl, dead_circumflex,  dead_caron ]	};
    key <TLDE>	{ [     grave, asciitilde,      notsign,      notsign ]	};

    key <BKSL>	{ [ backslash,        bar,   dead_grave,   dead_breve ]	};
    key <AB01>	{ [         z,          Z, guillemotleft,        less ]	};
    key <AB02>	{ [         x,          X, guillemotright,    greater ]	};
    key <AB03>	{ [         c,          C,         cent,    copyright ]	};
    key <AB04>	{ [         v,          V, leftdoublequotemark, leftsinglequotemark ]	};
    key <AB05>	{ [         b,          B, rightdoublequotemark, rightsinglequotemark ] };
    key <AB06>	{ [         n,          N,            n,            N ]	};
    key <AB07>	{ [         m,          M,           mu,    masculine ]	};
    key <AB08>	{ [     comma,       less, horizconnector,   multiply ]	};
    key <AB09>	{ [    period,    greater, periodcentered,   division ]	};
    key <AB10>	{ [     slash,   question, dead_belowdot, dead_abovedot ] };

};

// Northern Europe ( Danish, Finnish, Norwegian, Swedish) common layout

partial
xkb_symbols "type2" {

    include "latin"

    key <AE01>	{ [         1,     exclam,   exclamdown,  onesuperior ]	};
    key <AE02>	{ [         2,   quotedbl,           at,  twosuperior ]	};
    key <AE03>	{ [         3, numbersign,     sterling, threesuperior]	};
    key <AE04>	{ [         4,   currency,       dollar,   onequarter ]	};
    key <AE05>	{ [         5,    percent,      onehalf,         cent ]	};
    key <AE06>	{ [         6,  ampersand,          yen,  fiveeighths ]	};
    key <AE07>	{ [         7,      slash,    braceleft,     division ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft, guillemotleft]	};
    key <AE09>	{ [         9, parenright, bracketright, guillemotright] };
    key <AE10>	{ [         0,      equal,   braceright,       degree ]	};

    key <AD03>	{ [         e,          E,     EuroSign,         cent ]	};
    key <AD04>	{ [         r,          R,   registered,   registered ]	};
    key <AD05>	{ [         t,          T,        thorn,        THORN ]	};
    key <AD09>	{ [         o,          O,           oe,           OE ]	};
    key <AD11>	{ [     aring,  Aring, dead_diaeresis, dead_abovering ]	};
    key <AD12>	{ [dead_diaeresis, dead_circumflex, dead_tilde, dead_caron ] };

    key <AC01>	{ [         a,          A,  ordfeminine,    masculine ]	};

    key <AB03>	{ [         c,          C,    copyright,    copyright ]	};
    key <AB08>	{ [     comma,  semicolon, dead_cedilla,  dead_ogonek ]	};
    key <AB09>	{ [    period,   colon, periodcentered, dead_abovedot ]	};
    key <AB10>	{ [     minus, underscore, dead_belowdot, dead_abovedot ] };
};

// Slavic Latin ( Albanian, Croatian, Polish, Slovene, Yugoslav)
// common layout

partial
xkb_symbols "type3" {

    include "latin"

    key <AD01>	{ [         q,          Q,    backslash,  Greek_OMEGA ]	};
    key <AD02>	{ [         w,          W,          bar,      Lstroke ]	};
    key <AD06>	{ [         z,          Z,    leftarrow,          yen ]	};

    key <AC04>	{ [         f,          F,  bracketleft,  ordfeminine ]	};
    key <AC05>	{ [         g,          G, bracketright,          ENG ]	};
    key <AC08>	{ [         k,          K,      lstroke,    ampersand ]	};

    key <AB01>	{ [         y,          Y, guillemotleft,        less ]	};
    key <AB04>	{ [         v,          V,           at,        grave ]	};
    key <AB05>	{ [         b,          B,    braceleft,   apostrophe ]	};
    key <AB06>	{ [         n,          N,   braceright,   braceright ]	};
    key <AB07>	{ [         m,          M,      section,    masculine ]	};
    key <AB08>	{ [     comma,  semicolon,         less,     multiply ]	};
    key <AB09>	{ [    period,      colon,      greater,     division ]	};
};

// Another common Latin layout
// (German, Estonian, Spanish, Icelandic, Italian, Latin American, Portuguese)

partial
xkb_symbols "type4" {

    include "latin"

    key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	};
    key <AE06>	{ [         6,  ampersand,      notsign,  fiveeighths ]	};
    key <AE07>	{ [         7,      slash,    braceleft, seveneighths ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft,    trademark ]	};
    key <AE09>	{ [         9, parenright, bracketright,    plusminus ]	};
    key <AE10>	{ [         0,      equal,   braceright,       degree ]	};

    key <AD03>	{ [         e,          E,     EuroSign,         cent ]	};

    key <AB08>	{ [   comma,  semicolon, horizconnector,     multiply ]	};
    key <AB09>	{ [  period,      colon, periodcentered,     division ]	};
    key <AB10>	{ [   minus, underscore, dead_belowdot, dead_abovedot ]	};
};

partial
xkb_symbols "nodeadkeys" {

    key <AE12>	{ [     equal,       plus,     cedilla,        ogonek ]	};
    key <AD11>	{ [bracketleft,  braceleft,  diaeresis,        degree ]	};
    key <AD12>	{ [bracketright, braceright, asciitilde,       macron ]	};
    key <AC10>	{ [ semicolon,      colon,       acute,   doubleacute ]	};
    key <AC11>	{ [apostrophe,   quotedbl, asciicircum,         caron ]	};
    key <BKSL>	{ [ backslash,        bar,       grave,         breve ]	};
    key <AB10>	{ [     slash,   question, dead_belowdot,    abovedot ]	};
};

partial
xkb_symbols "type2_nodeadkeys" {

    include "latin(nodeadkeys)"

    key <AD11>	{ [     aring,      Aring,   diaeresis,        degree ]	};
    key <AD12>	{ [ diaeresis, asciicircum, asciitilde,         caron ]	};
    key <AB08>	{ [     comma,  semicolon,     cedilla,        ogonek ]	};
    key <AB09>	{ [    period,   colon, periodcentered,      abovedot ]	};
    key <AB10>	{ [   minus, underscore, dead_belowdot,      abovedot ]	};
};

partial
xkb_symbols "type3_nodeadkeys" {

    include "latin(nodeadkeys)"
};

partial
xkb_symbols "type4_nodeadkeys" {

    include "latin(nodeadkeys)"

    key <AB10>	{ [   minus, underscore, dead_belowdot,      abovedot ]	};
};

// Added 2008.03.05 by Marcin Woliński
// See http://marcinwolinski.pl/keyboard/ for a description.
// Used by pl(intl)
//
// ┌─────┐
// │ 2 4 │   2 = Shift,  4 = Level3 + Shift
// │ 1 3 │   1 = Normal, 3 = Level3
// └─────┘
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │ ~ ~ │ ! ' │ @ " │ # ˝ │ $ ¸ │ % ˇ │ ^ ^ │ & ˘ │ * ̇  │ ( ̣  │ ) ° │ _ ¯ │ + ˛ ┃ ⌫ Back- ┃
// │ ` ` │ 1 ¡ │ 2 © │ 3 • │ 4 § │ 5 € │ 6 ¢ │ 7 − │ 8 × │ 9 ÷ │ 0 ° │ - – │ = — ┃  space  ┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ Q   │ W   │ E   │ R   │ T   │ Y   │ U   │ I   │ O   │ P   │ { « │ } » ┃ Enter ┃
// ┃Tab ↹  ┃ q   │ w   │ e   │ r   │ t   │ y   │ u   │ i   │ o   │ p   │ [ ‹ │ ] › ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ A   │ S   │ D   │ F   │ G   │ H   │ J   │ K   │ L   │ : “ │ " ” │ | ¶ ┃      ┃
// ┃Caps ⇬  ┃ a   │ s   │ d   │ f   │ g   │ h   │ j   │ k   │ l   │ ; ‘ │ ' ’ │ \   ┃      ┃
// ┣━━━━━━━━┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃             │ Z   │ X   │ C   │ V   │ B   │ N   │ M   │ < „ │ > · │ ? ¿ ┃             ┃
// ┃Shift ⇧      │ z   │ x   │ c   │ v   │ b   │ n   │ m   │ , ‚ │ . … │ / ⁄ ┃Shift ⇧      ┃
// ┣━━━━━━━┳━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣                               ⍽ ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣           Space               ⍽ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial
xkb_symbols "intl" {

    key <TLDE>	{ [     grave,  asciitilde, dead_grave,       dead_tilde ]	};
    key <AE01>	{ [         1,      exclam, exclamdown,       dead_acute ]	};
    key <AE02>	{ [         2,          at,  copyright,   dead_diaeresis ]	};
    key <AE03>	{ [         3,  numbersign,      U2022, dead_doubleacute ]	}; // U+2022 is bullet (the name bullet doesn't work)
    key <AE04>	{ [         4,      dollar,    section,     dead_cedilla ]	};
    key <AE05>	{ [         5,     percent,   EuroSign,       dead_caron ]	};
    key <AE06>	{ [         6, asciicircum,       cent,  dead_circumflex ]	};
    key <AE07>	{ [         7,   ampersand,      U2212,       dead_breve ]	}; // U+2212 is MINUS SIGN
    key <AE08>	{ [         8,    asterisk,   multiply,    dead_abovedot ]	};
    key <AE09>	{ [         9,   parenleft,   division,    dead_belowdot ]	};
    key <AE10>	{ [         0,  parenright,     degree,   dead_abovering ]	};
    key <AE11>	{ [     minus,  underscore,     endash,      dead_macron ]	};
    key <AE12>	{ [     equal,        plus,     emdash,      dead_ogonek ]	};

    key <AD01>	{ [         q,          Q ]	};
    key <AD02>	{ [         w,          W ]	};
    key <AD03>	{ [         e,          E ]	};
    key <AD04>	{ [         r,          R ]	};
    key <AD05>	{ [         t,          T ]	};
    key <AD06>	{ [         y,          Y ]	};
    key <AD07>	{ [         u,          U ]	};
    key <AD08>	{ [         i,          I ]	};
    key <AD09>	{ [         o,          O ]	};
    key <AD10>	{ [         p,          P ]	};
    key <AD11>	{ [bracketleft,   braceleft,  U2039, guillemotleft ]    };
    key <AD12>	{ [bracketright, braceright, U203A, guillemotright ]	};

    key <AC01>	{ [         a,          A ]	};
    key <AC02>	{ [         s,          S ]	};
    key <AC03>	{ [         d,          D ]	};
    key <AC04>	{ [         f,          F ]	};
    key <AC05>	{ [         g,          G ]	};
    key <AC06>	{ [         h,          H ]	};
    key <AC07>	{ [         j,          J ]	};
    key <AC08>	{ [         k,          K ]	};
    key <AC09>	{ [         l,          L ]	};
    key <AC10>	{ [ semicolon,      colon,  leftsinglequotemark,  leftdoublequotemark  ]  };
    key <AC11>	{ [apostrophe,   quotedbl, rightsinglequotemark, rightdoublequotemark  ]  };

    key <BKSL>	{ [ backslash,        bar, 	NoSymbol, paragraph ] };
    key <AB01>	{ [         z,          Z ]	};
    key <AB02>	{ [         x,          X ]	};
    key <AB03>	{ [         c,          C ]	};
    key <AB04>	{ [         v,          V ]	};
    key <AB05>	{ [         b,          B ]     };
    key <AB06>	{ [         n,          N ]	};
    key <AB07>	{ [         m,          M ]	};
    key <AB08>	{ [     comma,       less, singlelowquotemark, doublelowquotemark ]	};
    key <AB09>	{ [    period,    greater, ellipsis, periodcentered ]	};
    key <AB10>	{ [     slash,   question, U2044,  questiondown ]     };  // U+2044 is FRACTION SLASH

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // These partial variants assign ISO_Level3_Shift to various XKB keycodes
// so that the third shift level can be reached.

// The default behaviour:
// the right Alt key (AltGr) chooses the third symbol engraved on a key.
default  partial modifier_keys
xkb_symbols "ralt_switch" {
  key <RALT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// Ensure a mapping to a real modifier for LevelThree.
partial modifier_keys
xkb_symbols "modifier_mapping" {
  replace key <LVL3> {
    type[Group1] = "ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  modifier_map Mod5 { <LVL3> };
};

// The right Alt key never chooses the third level.
// This option attempts to undo the effect of a layout's inclusion of
// 'ralt_switch'.  You may want to also select another level3 option
// to map the level3 shift to some other key.
partial modifier_keys
xkb_symbols "ralt_alt" {
  key <RALT> {
    type[Group1]="TWO_LEVEL",
    type[Group2]="TWO_LEVEL",
    type[Group3]="TWO_LEVEL",
    type[Group4]="TWO_LEVEL",
    symbols[Group1] = [ Alt_R, Meta_R ],
    symbols[Group2] = [ Alt_R, Meta_R ],
    symbols[Group3] = [ Alt_R, Meta_R ],
    symbols[Group4] = [ Alt_R, Meta_R ]
  };
  modifier_map Mod1 { <RALT> };
};

// The right Alt key (while pressed) chooses the third shift level,
// and Compose is mapped to its second level.
partial modifier_keys
xkb_symbols "ralt_switch_multikey" {
  key <RALT> {
    type[Group1]="TWO_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift, Multi_key ]
  };
  include "level3(modifier_mapping)"
};

// A special case of the right-Alt switch -- for use with grp:alts_toggle.
hidden partial modifier_keys
xkb_symbols "ralt_switch_for_alts_toggle" {
  virtual_modifiers LAlt, AltGr;
  key <LALT> {
    type[Group1]="PC_RALT_LEVEL2",
    symbols[Group1] = [ Alt_L, ISO_Prev_Group, ISO_Prev_Group ],
    virtualMods= LAlt
  };
  key <RALT> {
    type[Group1]="PC_ALT_LEVEL2",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Next_Group ],
    virtualMods= AltGr
  };
  include "level3(modifier_mapping)"
};

// Either Alt key (while pressed) chooses the third shift level.
// (To be used mostly to imitate Mac OS functionality.)
partial modifier_keys
xkb_symbols "alt_switch" {
  include "level3(lalt_switch)"
  include "level3(ralt_switch)"
};

// The left Alt key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "lalt_switch" {
  key <LALT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The right Ctrl key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "switch" {
  key <RCTL> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The Menu key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "menu_switch" {
  key <MENU> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// Either Win key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "win_switch" {
  include "level3(lwin_switch)"
  include "level3(rwin_switch)"
};

// The left Win key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "lwin_switch" {
  key <LWIN> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The right Win key (while pressed) chooses the third shift level.
// (When using this map, you should set your keyboard as pc101 or pc102
// instead of pc104 or pc105.)
partial modifier_keys
xkb_symbols "rwin_switch" {
  key <RWIN> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The Enter key on the kepypad (while pressed) chooses the third shift level.
// (This is especially useful for Mac laptops which miss the right Alt key.)
partial modifier_keys
xkb_symbols "enter_switch" {
  key <KPEN> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The CapsLock key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "caps_switch" {
  key <CAPS> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The Backslash key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "bksl_switch" {
  key <BKSL> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The Less/Greater key (while pressed) chooses the third shift level.
partial modifier_keys
xkb_symbols "lsgt_switch" {
  key <LSGT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ]
  };
  include "level3(modifier_mapping)"
};

// The CapsLock key (while pressed) chooses the third shift level,
// and latches when pressed together with another third-level chooser.
partial modifier_keys
xkb_symbols "caps_switch_latch" {
  key <CAPS> {
    type[Group1]="THREE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Latch ]
  };
  include "level3(modifier_mapping)"
};

// The Backslash key (while pressed) chooses the third shift level,
// and latches when pressed together with another third-level chooser.
partial modifier_keys
xkb_symbols "bksl_switch_latch" {
  key <BKSL> {
    type[Group1]="THREE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Latch ]
  };
  include "level3(modifier_mapping)"
};

// The Less/Greater key (while pressed) chooses the third shift level,
// and latches when pressed together with another third-level chooser.
partial modifier_keys
xkb_symbols "lsgt_switch_latch" {
  key <LSGT> {
    type[Group1]="THREE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Latch ]
  };
  include "level3(modifier_mapping)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                // These partial variants assign ISO_Level5_Shift to various XKB keycodes
// so that the fifth shift level can be reached.

// The right Ctrl key (while pressed) chooses the fifth shift level.
partial modifier_keys
xkb_symbols "rctrl_switch" {
  key <RCTL> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift ]
  };
  include "level5(modifier_mapping)"
};

// The Less/Greater key (while pressed) chooses the fifth shift level.
partial modifier_keys
xkb_symbols "lsgt_switch" {
  key <LSGT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift ]
  };
  include "level5(modifier_mapping)"
};

// The right Alt key (while pressed) chooses the fifth shift level.
partial modifier_keys
xkb_symbols "ralt_switch" {
  key <RALT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift ]
  };
  include "level5(modifier_mapping)"
};

// Ensure a mapping to a real modifier for LevelFive.
partial modifier_keys
xkb_symbols "modifier_mapping" {
  replace key <MDSW> {
    type[Group1] = "ONE_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift ]
  };
  modifier_map Mod3 { <MDSW> };
};


// This adds the definitions needed to create a level5-lock behaviour, using
// the real modifier NumLock as a lock indicator.
// See also: types/level5 : EIGHT_LEVEL_LEVEL_FIVE_LOCK
// See also: compat/level5(level5_lock)
partial modifier_keys
xkb_symbols "lock" {
  key.type[Group1] = "ONE_LEVEL";
  include "level5(modifier_mapping)"
  replace key <HYPR> {
    vmods = NumLock,
    symbols[Group1] = [ NoSymbol ],
    actions[Group1] = [ SetMods(modifiers=NumLock) ]
  };
  modifier_map Mod2 { <HYPR> };
};

// The following modifier keys are used to switch to the third shift level
// and to set a corresponding lock, implemented as NumLock.

partial modifier_keys
xkb_symbols "lsgt_switch_lock" {
  include "level5(lock)"
  key <LSGT> {
    type[Group1] = "EIGHT_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};

partial modifier_keys
xkb_symbols "lwin_switch_lock" {
  include "level5(lock)"
  key <LWIN> {
    type[Group1] = "EIGHT_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};

partial modifier_keys
xkb_symbols "ralt_switch_lock" {
  include "level5(lock)"
  key <RALT> {
    type[Group1] = "EIGHT_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};

partial modifier_keys
xkb_symbols "rwin_switch_lock" {
  include "level5(lock)"
  key <RWIN> {
    type[Group1] = "EIGHT_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};

partial modifier_keys
xkb_symbols "lsgt_switch_lock_cancel" {
  include "level5(lock)"
  key <LSGT> {
    type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};

partial modifier_keys
xkb_symbols "lwin_switch_lock_cancel" {
  include "level5(lock)"
  key <LWIN> {
    type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};

partial modifier_keys
xkb_symbols "ralt_switch_lock_cancel" {
  include "level5(lock)"
  key <RALT> {
    type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};

partial modifier_keys
xkb_symbols "rwin_switch_lock_cancel" {
  include "level5(lock)"
  key <RWIN> {
    type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift,
                        ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock, ISO_Level5_Lock ]
  };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        // X Keyboard Extension file for Sinhala (Sri Lanka) (2004-04-22)
// Maintainer  : Harshula Jayasuriya <harshula@gmail.com>
// Last Updated: 2011-05-25
// This is a phonetic static mapping for a standard US-English keyboard
// (qwerty)
// http://www.nongnu.org/sinhala/doc/keymaps/sinhala-keyboard_3.html

// Repaya, Rakaransaya and Yansaya aren't inserted with A-r, R and Y,
// respectively. The problem lies with the XKB infrastructure which
// only allows a one-to-one mapping of keycodes to Unicode codepoints.
// Unfortunately, the 3 mentioned glyphs actually consists of 3
// Unicode codepoints each. The result is that the user must
// manually construct the glyph by typing each of the 3 codepoints.
// ALT-, represents the 'JOIN' key, it requires
// two codepoints, hence it also has to be manually constructed.
// Similarly, ALT-/ representing the 'TOUCH' key requires
// two codepoints.

// Repaya = rayanna,AL,ZWJ
// Rakaransaya = AL,ZWJ,rayanna
// Yansaya = AL,ZWJ,yayanna
// JOIN = AL,ZWJ
// TOUCH = ZWJ,AL

// Where,
// AL = Al Lakuna = ALT-a
// ZWJ = Zero Width Joiner = ALT-/
// rayanna = r
// yayanna = y

default  partial alphanumeric_keys
xkb_symbols "sin_phonetic" {

  include "us"
  name[Group1] = "Sinhala (phonetic)";
  key.type[Group1] = "FOUR_LEVEL";

  // q - p
  key <AD01> { [ Sinh_ri, Sinh_rii, Sinh_ru2, Sinh_ruu2 ] };
  key <AD02> { [ Sinh_ae, Sinh_aee, Sinh_ae2, Sinh_aee2 ] };
  key <AD03> { [ Sinh_e, Sinh_ee, Sinh_e2, Sinh_ee2 ] };
  key <AD04> { [ Sinh_ra, Sinh_al, Sinh_ra, NoSymbol ] };
  key <AD05> { [ Sinh_tha, Sinh_thha, Sinh_tta, Sinh_ttha ] };
  key <AD06> { [ Sinh_ya, Sinh_al, NoSymbol, NoSymbol ] };
  key <AD07> { [ Sinh_u, Sinh_uu, Sinh_u2, Sinh_uu2 ] };
  key <AD08> { [ Sinh_i, Sinh_ii, Sinh_i2, Sinh_ii2 ] };
  key <AD09> { [ Sinh_o, Sinh_oo, Sinh_o2, Sinh_oo2 ] };
  key <AD10> { [ Sinh_pa, Sinh_pha, NoSymbol, NoSymbol ] };

  // a - l
  key <AC01> { [ Sinh_a, Sinh_aa, Sinh_al, Sinh_aa2 ] };
  key <AC02> { [ Sinh_sa, Sinh_sha, Sinh_ssha, NoSymbol ] };
  key <AC03> { [ Sinh_dha, Sinh_dhha, Sinh_dda, Sinh_ddha ] };
  key <AC04> { [ Sinh_fa, NoSymbol, Sinh_ai2, Sinh_ai ] };
  key <AC05> { [ Sinh_ga, Sinh_gha, Sinh_nga, NoSymbol ] };
  key <AC06> { [ Sinh_ha, Sinh_h2, Sinh_au2, Sinh_au ] };
  key <AC07> { [ Sinh_ja, Sinh_jha, Sinh_nja, NoSymbol ] };
  key <AC08> { [ Sinh_ka, Sinh_kha, Sinh_lu, Sinh_luu ] };
  key <AC09> { [ Sinh_la, Sinh_lla, Sinh_lu2, Sinh_luu2 ] };

  // z - ?
  key <AB01> { [ Sinh_nya, Sinh_jnya, NoSymbol, NoSymbol ] };
  key <AB02> { [ Sinh_ndha, Sinh_ndda, NoSymbol, NoSymbol ] };
  key <AB03> { [ Sinh_ca, Sinh_cha, NoSymbol, NoSymbol ] };
  key <AB04> { [ Sinh_va, NoSymbol, NoSymbol, NoSymbol ] };
  key <AB05> { [ Sinh_ba, Sinh_bha, NoSymbol, NoSymbol ] };
  key <AB06> { [ Sinh_na, Sinh_nna, Sinh_ng, Sinh_ng2 ] };
  key <AB07> { [ Sinh_ma, Sinh_mba, NoSymbol, NoSymbol ] };
  key <AB08> { [ any, any, Sinh_al, NoSymbol ] };
  key <AB09> { [ any, any, Sinh_kunddaliya, NoSymbol ] };
  key <AB10> { [ any, any, 0x100200d, NoSymbol ] };

  // Space
  include "nbsp(nb2zwnj3s)"

  include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "tam_unicode" {
    include "in(tam_unicode)"
    name[Group1]= "Tamil (Sri Lanka, Unicode)";
};

partial alphanumeric_keys
xkb_symbols "tam_TAB" {
    include "in(tam_TAB)"
    name[Group1]= "Tamil (Sri Lanka, TAB Typewriter)";
};

// SINHALA - US, SUBSTITUTES SOME AND ADDS SOME
// =============================================
//
// This started as an upgrade to the first romanized version of
// Sinhala called PTS Pali created in the 1860s. PTS requires
// dots and bars on letters that are rare in fonts, and impossible
// to type. Its singular purpose was to print Tripitaka, the
// collection of Buddhist discourses.
//
// This version covers the entire newer Sinhala phoneme chart
// (Hodiya) that became standard just before the end of the 19th
// century. All the phonemes map to the SBCS. It is easy and
// faster than English to type. It overcomes the setback of
// Unicode Sinhala that it is not compatible with Pali and
// Sanskrit because it encodes two ligatures as base letters and
// the SLS1134 specification matching shape and morpheme sets
// violating Sanskrit orthography.
//
// Most importantly, this romanized version of Sinhala has a
// companion orthographic font that displays the text in the
// native script and a JavaScript converts it to Unicode Sinhala
// and back dramatically increasing Sinhala seen on the web due
// to its ease of use
//
// Dedication:
// Thomas William Rhys Davids, Ven. Udagama Sumangala
// Rev. Fr. A. M. Gunasekara, Rev. Fr. Theodore G. Perera
// Ven. Mettavihari
//
// Maintainer:
// JC Ahangama - sing@ahangama.com
//
partial alphanumeric_keys modifier_keys
xkb_symbols "us" {
  include "us(basic)"
  name[Group1]= "Sinhala (US keyboard with Sinhala letters)";
//
//                   UNSHIFTED,         SHIFT,           ALT
//                   --------------------------------------------
//
  key <AB01> { [             z,    VoidSymbol,    VoidSymbol ] };
  key <AB02> { [             x,    VoidSymbol,    VoidSymbol ] };
  key <AB03> { [             c,      ccedilla,    VoidSymbol ] };
  key <AB04> { [             v,    VoidSymbol,    VoidSymbol ] };
  key <AB05> { [             b,             B,    VoidSymbol ] };
  key <AB06> { [             n,             N,        ntilde ] };
  key <AB07> { [             m,    VoidSymbol,    VoidSymbol ] };
  key <AB08> { [         comma,          less,           UAB ] };
  key <AB09> { [        period,       greater,           UBB ] };
  key <AB10> { [         slash,      question,         U200C ] };

  key <AC01> { [             a,        aacute,    adiaeresis ] };
  key <AC02> { [             s,    VoidSymbol,    VoidSymbol ] };
  key <AC03> { [             d,             D,    VoidSymbol ] };
  key <AC04> { [         thorn,             f,    VoidSymbol ] };
  key <AC05> { [             g,             G,    VoidSymbol ] };
  key <AC06> { [             h,    VoidSymbol,    VoidSymbol ] };
  key <AC07> { [             j,      ccedilla,    VoidSymbol ] };
  key <AC08> { [             k,    VoidSymbol,    VoidSymbol ] };
  key <AC09> { [             l,             L,   ocircumflex ] };
  key <AC10> { [     semicolon,         colon,    VoidSymbol ] };
  key <AC11> { [    apostrophe,      quotedbl,    VoidSymbol ] };

  key <AD01> { [           eth,           ETH,             q ] };
  key <AD02> { [            ae,         acute,    VoidSymbol ] };
  key <AD03> { [             e,        eacute,    ediaeresis ] };
  key <AD04> { [             r,   ucircumflex,    VoidSymbol ] };
  key <AD05> { [             t,    VoidSymbol,    VoidSymbol ] };
  key <AD06> { [             y,    VoidSymbol,    VoidSymbol ] };
  key <AD07> { [             u,        uacute,    udiaeresis ] };
  key <AD08> { [             i,        iacute,    idiaeresis ] };
  key <AD09> { [             o,        oacute,    odiaeresis ] };
  key <AD10> { [             p,    VoidSymbol,    VoidSymbol ] };
  key <AD11> { [   bracketleft,     braceleft,    VoidSymbol ] };
  key <AD12> { [  bracketright,    braceright,    VoidSymbol ] };

  key <AE01> { [             1,        exclam,   dead_macron ] };
  key <AE02> { [             2,            at, dead_belowdot ] };
  key <AE03> { [             3,    numbersign, dead_abovedot ] };
  key <AE04> { [             4,        dollar,      currency ] };
  key <AE05> { [             5,       percent,           UB0 ] };
  key <AE06> { [             6,   asciicircum,    onequarter ] };
  key <AE07> { [             7,     ampersand,       onehalf ] };
  key <AE08> { [             8,      asterisk, threequarters ] };
  key <AE09> { [             9,     parenleft,    VoidSymbol ] };
  key <AE10> { [             0,    parenright,    VoidSymbol ] };
  key <AE11> { [         minus,    underscore,         U2014 ] };
  key <AE12> { [         equal,          plus,    VoidSymbol ] };

  key <BKSL> { [     backslash,           bar,    VoidSymbol ] };
  key <SPCE> { [         space,  nobreakspace,    VoidSymbol ] };
  key <TLDE> { [         grave,    asciitilde,    VoidSymbol ] };
  include "level3(alt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      // Separate keymaps merged into one file by Nerijus Baliūnas, 2002

// Lithuanian Numeric layout - Lithuanian letters on the numeric row
// based on Lithuanian keyboard map by Ričardas Čepas <rch@richard.eu.org>
// 3rd and 4th levels added by Mantas Kriaučiūnas <mantas@akl.lt>, 2004
// Minor modifications and cleanup by Rimas Kudelis <rq@akl.lt>, 2010
//
// If you want two layouts, use:
// Option "XkbLayout" "lt,lt(us)"
default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    include "latin"
    include "eurosign(e)"
    include "level3(ralt_switch)"

    name[Group1]="Lithuanian";

    key <TLDE> {[               grave,   asciitilde,    acute                ]};
    key <AE01> {[             aogonek,      Aogonek,        1,        exclam ]};
    key <AE02> {[              ccaron,       Ccaron,        2,            at ]};
    key <AE03> {[             eogonek,      Eogonek,        3,    numbersign ]};
    key <AE04> {[           eabovedot,    Eabovedot,        4,        dollar ]};
    key <AE05> {[             iogonek,      Iogonek,        5,       percent ]};
    key <AE06> {[              scaron,       Scaron,        6,   asciicircum ]};
    key <AE07> {[             uogonek,      Uogonek,        7,     ampersand ]};
    key <AE08> {[             umacron,      Umacron,        8,      asterisk ]};
    key <AE09> {[  doublelowquotemark,    parenleft,        9,     parenleft ]};
    key <AE10> {[ leftdoublequotemark,   parenright,        0,    parenright ]};
    key <AE11> {[               minus,   underscore,   endash                ]};
    key <AE12> {[              zcaron,       Zcaron,    equal,          plus ]};

    key <LSGT> {[              endash,     EuroSign                          ]};
};

// Similar to the above, but uses 3rd and 4th levels in the numeric row
// for Lithuanian letters
partial alphanumeric_keys modifier_keys
xkb_symbols "us" {

    include "latin"
    include "eurosign(e)"
    include "level3(ralt_switch)"

    name[Group1]="Lithuanian (US keyboard with Lithuanian letters)";

    key <TLDE> {[    grave,    asciitilde,               acute               ]};
    key <AE01> {[        1,        exclam,             aogonek,      Aogonek ]};
    key <AE02> {[        2,            at,              ccaron,       Ccaron ]};
    key <AE03> {[        3,    numbersign,             eogonek,      Eogonek ]};
    key <AE04> {[        4,        dollar,           eabovedot,    Eabovedot ]};
    key <AE05> {[        5,       percent,             iogonek,      Iogonek ]};
    key <AE06> {[        6,   asciicircum,              scaron,       Scaron ]};
    key <AE07> {[        7,     ampersand,             uogonek,      Uogonek ]};
    key <AE08> {[        8,      asterisk,             umacron,      Umacron ]};
    key <AE09> {[        9,     parenleft,  doublelowquotemark,    parenleft ]};
    key <AE10> {[        0,    parenright, leftdoublequotemark,   parenright ]};
    key <AE11> {[    minus,    underscore,              endash               ]};
    key <AE12> {[    equal,          plus,              zcaron,       Zcaron ]};

    key <LSGT> {[   endash,      EuroSign                                    ]};
};

// Lithuanian keymap LST 1582:2000
// The standard is described at http://ims.mii.lt/klav/
// Extensions:  B01 L3 is "<" , B02 L3 is ">" and B03 L3 is endash to make this
// layout usable with pc101 and pc104 keyboards.
//
// Made by Gediminas Paulauskas <menesis@delfi.lt>
// Minor modifications by Ričardas Čepas and Rimas Kudelis

partial alphanumeric_keys modifier_keys
xkb_symbols "std" {

    include "latin"
    include "eurosign(e)"
    include "nbsp(level3)"
    include "kpdl(comma)"
    include "level3(ralt_switch)"

    name[Group1]="Lithuanian (standard)";

    key <TLDE> {[        grave,  asciitilde,               acute ]};
    key <AE01> {[       exclam,           1,                  at ]};
    key <AE02> {[        minus,           2,          underscore ]};
    key <AE03> {[        slash,           3,          numbersign ]};
    key <AE04> {[    semicolon,           4,              dollar ]};
    key <AE05> {[        colon,           5,             section ]};
    key <AE06> {[        comma,           6,         asciicircum ]};
    key <AE07> {[       period,           7,           ampersand ]};
    key <AE08> {[        equal,           8,            asterisk ]};
    key <AE09> {[    parenleft,           9,         bracketleft ]};
    key <AE10> {[   parenright,           0,        bracketright ]};
    key <AE11> {[     question,        plus,          apostrophe ]};
    key <AE12> {[            x,           X,             percent ]};

    key <AD01> {[      aogonek,     Aogonek                      ]};
    key <AD02> {[       zcaron,      Zcaron                      ]};
    key <AD11> {[      iogonek,     Iogonek,           braceleft ]};
    key <AD12> {[            w,           W,          braceright ]};

    key <AC04> {[       scaron,      Scaron                      ]};
    key <AC10> {[      uogonek,     Uogonek                      ]};
    key <AC11> {[    eabovedot,   Eabovedot,            quotedbl ]};
    key <BKSL> {[            q,           Q,                 bar ]};

    key <LSGT> {[         less,     greater,              endash ]};
    key <AB01> {[            z,           Z,                less ]};
    key <AB02> {[      umacron,     Umacron,             greater ]};
    key <AB03> {[            c,           C,              endash ]};
    key <AB08> {[       ccaron,      Ccaron,  doublelowquotemark ]};
    key <AB09> {[            f,           F, leftdoublequotemark ]};
    key <AB10> {[      eogonek,     Eogonek,           backslash ]};
};

// Lithuanian keymap LST 1205-92
// This standard was made deprecated by LST 1582:2000 above.
// This keyboard is also know as IBM layout.
// We follow the map shown at: http://www.registrucentras.lt/litwin/kbdlta.gif
// and info from Edis Tamošauskas <linas_lietus@yahoo.com>
//
// Made by Piter PUNK <piterpk@terra.com.br>
// Minor modifications and cleanup by Rimas Kudelis, 2010

partial alphanumeric_keys modifier_keys
xkb_symbols "ibm" {

    include "latin"
    include "eurosign(e)"
    include "nbsp(level3)"
    include "level3(ralt_switch)"

    name[Group1]="Lithuanian (IBM LST 1205-92)";

    key <TLDE> {[              grave,          asciitilde,          acute               ]};
    key <AE01> {[             exclam,                   1                               ]};
    key <AE02> {[           quotedbl,                   2,             at               ]};
    key <AE03> {[              slash,                   3,     numbersign               ]};
    key <AE04> {[          semicolon,                   4,         dollar               ]};
    key <AE05> {[              colon,                   5,        percent               ]};
    key <AE06> {[              comma,                   6,    asciicircum               ]};
    key <AE07> {[             period,                   7,      ampersand               ]};
    key <AE08> {[           question,                   8,       asterisk               ]};
    key <AE09> {[          parenleft,                   9                               ]};
    key <AE10> {[         parenright,                   0                               ]};
    key <AE11> {[         underscore,               minus,         endash               ]};
    key <AE12> {[               plus,               equal                               ]};

    key <AD01> {[            aogonek,             Aogonek,              q,            Q ]};
    key <AD02> {[             zcaron,              Zcaron,              w,            W ]};
    key <AD11> {[            iogonek,             Iogonek,    bracketleft,    braceleft ]};
    key <AD12> {[ doublelowquotemark, leftdoublequotemark,   bracketright,   braceright ]};

    key <AC10> {[            uogonek,             Uogonek,      semicolon,        colon ]};
    key <AC11> {[          eabovedot,           Eabovedot,     apostrophe,     quotedbl ]};

    key <LSGT> {[               less,             greater,         endash               ]};
    key <AB02> {[            umacron,             Umacron,              x,            X ]};
    key <AB08> {[             ccaron,              Ccaron,          comma,         less ]};
    key <AB09> {[             scaron,              Scaron,         period,      greater ]};
    key <AB10> {[            eogonek,             Eogonek,          slash,     question ]};
};

// LEKP and LEKPa layouts 1.0
// For more info visit http://lekp.info
// Created by Tautrimas Pajarskas, 2007
// Made by Ernestas Lukoševičius, 2007
// Minor cleanup by Rimas Kudelis, 2010

partial alphanumeric_keys modifier_keys
xkb_symbols "lekp" {

    include "capslock(backspace)"
    include "level3(ralt_switch)"

    name[Group1]="Lithuanian (LEKP)";

    key <TLDE> {[        grave,          asciitilde,         acute ]};
    key <AE01> {[        slash,          numbersign,           bar ]};
    key <AE02> {[    backslash,                  at,       section ]};
    key <AE03> {[       period,           braceleft                ]};
    key <AE04> {[        comma,          braceright                ]};
    key <AE05> {[            f,                   F                ]};
    key <AE06> {[       exclam,              endash                ]};
    key <AE07> {[            w,                   W                ]};
    key <AE08> {[      uogonek,             Uogonek                ]};
    key <AE09> {[      iogonek,             Iogonek                ]};
    key <AE10> {[    parenleft,  doublelowquotemark,    registered ]};
    key <AE11> {[   parenright, leftdoublequotemark,     copyright ]};
    key <AE12> {[        colon,           ampersand,     trademark ]};

    key <AD01> {[            q,                   Q,      EuroSign ]};
    key <AD02> {[            g,                   G,             7 ]};
    key <AD03> {[            r,                   R,             8 ]};
    key <AD04> {[            l,                   L,             9 ]};
    key <AD05> {[            d,                   D,       percent ]};
    key <AD06> {[       ccaron,              Ccaron                ]};
    key <AD07> {[            j,                   J                ]};
    key <AD08> {[            u,                   U,        period ]};
    key <AD09> {[    eabovedot,           Eabovedot,         minus ]};
    key <AD10> {[      eogonek,             Eogonek,         slash ]};
    key <AD11> {[     question,         bracketleft,      division ]};
    key <AD12> {[        equal,        bracketright                ]};

    key <AC01> {[            a,                   A,             0 ]};
    key <AC02> {[            k,                   K,             4 ]};
    key <AC03> {[            s,                   S,             5 ]};
    key <AC04> {[            t,                   T,             6 ]};
    key <AC05> {[            m,                   M,        dollar ]};
    key <AC06> {[            p,                   P                ]};
    key <AC07> {[            n,                   N                ]};
    key <AC08> {[            e,                   E,         comma ]};
    key <AC09> {[            i,                   I,          plus ]};
    key <AC10> {[            o,                   O,      asterisk ]};
    key <AC11> {[            y,                   Y,      multiply ]};
    key <BKSL> {[   apostrophe,          underscore                ]};

    key <LSGT> {[    semicolon,            quotedbl,      sterling ]};
    key <AB01> {[            z,                   Z,   asciicircum ]};
    key <AB02> {[            x,                   X,             1 ]};
    key <AB03> {[            c,                   C,             2 ]};
    key <AB04> {[            v,                   V,             3 ]};
    key <AB05> {[       zcaron,              Zcaron                ]};
    key <AB06> {[       scaron,              Scaron                ]};
    key <AB07> {[            b,                   B,        degree ]};
    key <AB08> {[      umacron,             Umacron,          less ]};
    key <AB09> {[      aogonek,             Aogonek,       greater ]};
    key <AB10> {[            h,                   H                ]};
};

partial alphanumeric_keys modifier_keys
xkb_symbols "lekpa" {

    include "capslock(backspace)"
    include "level3(ralt_switch)"

    name[Group1]="Lithuanian (LEKPa)";

    key <TLDE> {[        grave,          asciitilde,         acute ]};
    key <AE01> {[        slash,            quotedbl,           bar ]};
    key <AE02> {[    backslash,                  at,       section ]};
    key <AE03> {[       period,           braceleft,    numbersign ]};
    key <AE04> {[        comma,          braceright,      sterling ]};
    key <AE05> {[            f,                   F,     ampersand ]};
    key <AE06> {[       exclam,              endash                ]};
    key <AE07> {[            w,                   W                ]};
    key <AE08> {[      uogonek,             Uogonek                ]};
    key <AE09> {[      iogonek,             Iogonek                ]};
    key <AE10> {[    parenleft,  doublelowquotemark,    registered ]};
    key <AE11> {[   parenright, leftdoublequotemark,     copyright ]};
    key <AE12> {[        colon,           semicolon,     trademark ]};

    key <AD01> {[            q,                   Q,      EuroSign ]};
    key <AD02> {[            g,                   G,             7 ]};
    key <AD03> {[            r,                   R,             8 ]};
    key <AD04> {[            l,                   L,             9 ]};
    key <AD05> {[            d,                   D,       percent ]};
    key <AD06> {[       ccaron,              Ccaron                ]};
    key <AD07> {[            j,                   J                ]};
    key <AD08> {[            u,                   U,        period ]};
    key <AD09> {[    eabovedot,           Eabovedot,         minus ]};
    key <AD10> {[      eogonek,             Eogonek,         slash ]};
    key <AD11> {[     question,         bracketleft,      division ]};
    key <AD12> {[        equal,        bracketright                ]};

    key <AC01> {[            a,                   A,             0 ]};
    key <AC02> {[            k,                   K,             4 ]};
    key <AC03> {[            s,                   S,             5 ]};
    key <AC04> {[            t,                   T,             6 ]};
    key <AC05> {[            m,                   M,        dollar ]};
    key <AC06> {[            p,                   P                ]};
    key <AC07> {[            n,                   N                ]};
    key <AC08> {[            e,                   E,         comma ]};
    key <AC09> {[            i,                   I,          plus ]};
    key <AC10> {[            o,                   O,      asterisk ]};
    key <AC11> {[            y,                   Y,      multiply ]};
    key <BKSL> {[   apostrophe,          underscore                ]};

    key <AB01> {[            z,                   Z,   asciicircum ]};
    key <AB02> {[            x,                   X,             1 ]};
    key <AB03> {[            c,                   C,             2 ]};
    key <AB04> {[            v,                   V,             3 ]};
    key <AB05> {[       zcaron,              Zcaron                ]};
    key <AB06> {[       scaron,              Scaron                ]};
    key <AB07> {[            b,                   B,        degree ]};
    key <AB08> {[      umacron,             Umacron,          less ]};
    key <AB09> {[      aogonek,             Aogonek,       greater ]};
    key <AB10> {[            h,                   H                ]};
};

// EXTRAS:

partial alphanumeric_keys modifier_keys
xkb_symbols "us_dvorak" {

    include "us(dvorak)"

    name[Group1]="Lithuanian (US Dvorak with Lithuanian letters)";

    key <AE01>	{ [        1,      exclam,    aogonek,      Aogonek ] };
    key <AE02>	{ [        2,          at,     ccaron,       Ccaron ] };
    key <AE03>	{ [        3,  numbersign,    eogonek,      Eogonek ] };
    key <AE04>	{ [        4,      dollar,  eabovedot,    Eabovedot ] };
    key <AE05>	{ [        5,     percent,    iogonek,      Iogonek ] };
    key <AE06>	{ [        6, asciicircum,     scaron,       Scaron ] };
    key <AE07>	{ [        7,   ampersand,    uogonek,      Uogonek ] };
    key <AE08>	{ [        8,    asterisk,    umacron,      Umacron ] };
    key <AE09>	{ [        9,   parenleft, doublelowquotemark,  parenleft ] };
    key <AE10>	{ [        0,  parenright, leftdoublequotemark,parenright ] };
    key <AD12>	{ [    equal,        plus,     zcaron,       Zcaron ] };

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/lt(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           // Latvian keymap version 1.1
// Copyright (C) Dmitry Golubev <lastguru@mail.ru>, 2003-2004
//
// Reworked to get rid of dead_keys (use of which in this case
// is a dirty hack). It is now not dependent on locale settings
// and GTK_IM_MODULES in Gnome. The map is also providing some of
// ISO9995-3 alternate characters. Note that this version works
// correctly under Gnome 2.6. This is to be put into symbols/
// directory, or somewhere else.
//
// Permission to use, copy, modify, distribute, and sell this software and its
// documentation for any purpose is hereby granted without fee, provided that
// the above copyright notice appear in all copies and that both that
// copyright notice and this permission notice appear in supporting
// documentation, and that the name of the copyright holder(s) not be used in
// advertising or publicity pertaining to distribution of the software without
// specific, written prior permission.  The copyright holder(s) makes no
// representations about the suitability of this software for any purpose.  It
// is provided "as is" without express or implied warranty.
//
// THE COPYRIGHT HOLDER(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL THE COPYRIGHT HOLDER(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.

// Modified by Aldis Berjoza <aldis@bsdroot.lv>, 12 april 2011
// Changes:
//   * Added Latvian Ergonomic, Latvian Adapted and Latvian Modern variants
//      Author of this work is Valdis Vītoliņš
//      http://odo.lv/LatvianKeyboard
//      http://odo.lv/Recipes/LatvianKeyboard#HErgonomiskC481stastatC5ABrasuzlikC5A1anauzLinuxdatora%22
//   * Added guillemotleft, leftdoublequotemark, guillemotright,
//      rightdoublequotemark to Latvian modern layout for AD11 and AD12
//   * Added US-Dvorac compatible Latvian layouts
//   * Added programmer US-Dvorac compatible Latvian layouts
//   * Added US-Colemak compatible Latvian layouts
//   * Reformatted layouts


//============================================================================
// Latvian QWERTY layout
// http://en.wikipedia.org/wiki/QWERTY
//
default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

	name[Group1]= "Latvian";

	key <TLDE> {[ grave,		asciitilde,	acute,			asciitilde		]};
	key <AE01> {[ 1,		exclam,		onesuperior,		exclamdown		]};
	key <AE02> {[ 2,		at,		twosuperior,		oneeighth		]};
	key <AE03> {[ 3,		numbersign,	threesuperior,		sterling		]};
	key <AE04> {[ 4,		dollar,		EuroSign,		cent			]};
	key <AE05> {[ 5,		percent,	onehalf,		threeeighths		]};
	key <AE06> {[ 6,		asciicircum,	threequarters,		fiveeighths		]};
	key <AE07> {[ 7,		ampersand,	braceleft,		seveneighths		]};
	key <AE08> {[ 8,		asterisk,	bracketleft,		trademark		]};
	key <AE09> {[ 9,		parenleft,	bracketright,		plusminus		]};
	key <AE10> {[ 0,		parenright,	braceright,		degree			]};
	key <AE11> {[ minus,		underscore,	backslash,		questiondown		]};
	key <AE12> {[ equal,		plus,		endash,			emdash			]};

	key <AD01> {[ q,		Q,		q,			Q			]};
	key <AD02> {[ w,		W,		w,			W			]};
	key <AD03> {[ e,		E,		emacron,		Emacron			]};
	key <AD04> {[ r,		R,		rcedilla,		Rcedilla		]};
	key <AD05> {[ t,		T,		t,			T			]};
	key <AD06> {[ y,		Y,		y,			Y			]};
	key <AD07> {[ u,		U,		umacron,		Umacron			]};
	key <AD08> {[ i,		I,		imacron,		Imacron			]};
	key <AD09> {[ o,		O,		omacron,		Omacron			]};
	key <AD10> {[ p,		P,		p,			P			]};
	key <AD11> {[ bracketleft,	braceleft,	guillemotleft,		leftdoublequotemark	]};
	key <AD12> {[ bracketright,	braceright,	guillemotright,		rightdoublequotemark	]};

	key <AC01> {[ a,		A,		amacron,		Amacron			]};
	key <AC02> {[ s,		S,		scaron,			Scaron			]};
	key <AC03> {[ d,		D,		d,			D			]};
	key <AC04> {[ f,		F,		f,			F			]};
	key <AC05> {[ g,		G,		gcedilla,		Gcedilla		]};
	key <AC06> {[ h,		H,		h,			H			]};
	key <AC07> {[ j,		J,		j,			J			]};
	key <AC08> {[ k,		K,		kcedilla,		Kcedilla		]};
	key <AC09> {[ l,		L,		lcedilla,		Lcedilla		]};
	key <AC10> {[ semicolon,	colon,		semicolon,		colon			]};
	key <AC11> {[ apostrophe,	quotedbl,	leftdoublequotemark,	doublelowquotemark	]};

	key <AB01> {[ z,		Z,		zcaron,			Zcaron			]};
	key <AB02> {[ x,		X,		x,			X			]};
	key <AB03> {[ c,		C,		ccaron,			Ccaron			]};
	key <AB04> {[ v,		V,		v,			V			]};
	key <AB05> {[ b,		B,		b,			B			]};
	key <AB06> {[ n,		N,		ncedilla,		Ncedilla		]};
	key <AB07> {[ m,		M,		m,			M			]};
	key <AB08> {[ comma,		less,		horizconnector,		multiply		]};
	key <AB09> {[ period,		greater,	periodcentered,		division		]};
	key <AB10> {[ slash,		question,	slash,			abovedot		]};
	key <BKSL> {[ backslash,	bar,		grave,			breve			]};

	key <SPCE> {[ space,		space,		space,			space			]};

	include "level3(ralt_switch)"
};

partial alphanumeric_keys modifier_keys
xkb_symbols "apostrophe" {

	include "lv(basic)"

	name[Group1]= "Latvian (apostrophe variant)";

	key <AC11> {[ISO_Level3_Latch, quotedbl, apostrophe, quotedbl]};
	key <SPCE> {[space, space, apostrophe]};
	modifier_map Mod5 { <AC11> };

};

partial alphanumeric_keys modifier_keys
xkb_symbols "tilde" {

	include "lv(basic)"

	name[Group1]= "Latvian (tilde variant)";

	key <TLDE> {[ISO_Level3_Latch, asciitilde, grave, acute]};
	key <SPCE> {[space, space, asciitilde]};
	modifier_map Mod5 { <TLDE> };

};

partial alphanumeric_keys modifier_keys
xkb_symbols "fkey" {

	include "lv(basic)"

	name[Group1]= "Latvian (F variant)";

	key <AC04> {[ISO_Level3_Latch, ISO_Level3_Latch, f, F]};
	key <SPCE> {[space, space, f, F]};
	modifier_map Mod5 { <AC04> };

};

//============================================================================
// Latvian Adapted keyboard layout
// http://odo.lv/xwiki/bin/download/Main/LatvianKeyboard/Adapted.png
//
// http://odo.lv/LatvianKeyboard
// http://odo.lv/LatvianKeyboard5
//
partial alphanumeric_keys modifier_keys
xkb_symbols "adapted" {

	include "lv(basic)"

	name[Group1]= "Latvian (adapted)";

	key <AE02> {[ 2,		Ccaron,		at,		twosuperior	]};
	key <AE03> {[ 3,		ccaron,		numbersign,	threesuperior	]};
	key <AE04> {[ 4,		Zcaron,		dollar,		EuroSign	]};
	key <AE05> {[ 5,		zcaron,		percent,	onehalf		]};

	key <AD01> {[ scaron,		Scaron,		q,		Q		]};
	key <AD02> {[ emacron,		Emacron,	w,		W		]};
	key <AD03> {[ e,		E,		e,		E		]};

	key <AD06> {[ amacron,		Amacron,	y,		Y		]};
	key <AD07> {[ u,		U,		u,		U		]};
	key <AD08> {[ i,		I,		i,		I		]};
	key <AD11> {[ umacron,		Umacron,	bracketleft,	braceleft	]};
	key <AD12> {[ ncedilla,		Ncedilla,	bracketright,	braceright	]};

	key <AC01> {[ a,		A,		a,		A		]};
	key <AC02> {[ s,		S,		s,		S		]};
	key <AC05> {[ g,		G,		g,		G		]};

	key <AC08> {[ k,		K,		k,		K		]};
	key <AC09> {[ l,		L,		l,		L		]};
	key <AC10> {[ imacron,		Imacron,	semicolon,	colon		]};

	key <AB01> {[ z,		Z,		z,		Z		]};
	key <AB02> {[ kcedilla,		Kcedilla,	x,		X		]};
	key <AB03> {[ c,		C,		c,		C		]};

	key <AB06> {[ n,		N,		n,		N		]};

	key <AB08> {[ comma,		gcedilla,	less,		multiply	]};
	key <AB09> {[ period,		Gcedilla,	greater,	division	]};
	key <AB10> {[ lcedilla,		Lcedilla,	slash,		question	]};
};

//============================================================================
// Latvian Ergonomic (ŪGJRMV) keyboard layout by Valdis Vītoliņš
// http://odo.lv/xwiki/bin/download/Main/LatvianKeyboard/Ergonomic.png
//
// http://odo.lv/LatvianKeyboard
// http://odo.lv/LatvianKeyboard5
//
partial alphanumeric_keys modifier_keys
xkb_symbols "ergonomic" {

	include "lv(apostrophe)"

	name[Group1]= "Latvian (ergonomic, ŪGJRMV)";

	key <AE02> {[ 2,		at,		gcedilla,	Gcedilla	]};

	key <AE11> {[ minus,		underscore,	endash,		emdash		]};
	key <AE12> {[ f,		F,		equal,		plus		]};

	key <AD01> {[ umacron,		Umacron,	q,		Q		]};
	key <AD02> {[ g,		G,		g,		G		]};
	key <AD03> {[ j,		J,		j,		J		]};
	key <AD04> {[ r,		R,		rcedilla,	Rcedilla	]};
	key <AD05> {[ m,		M,		m,		M		]};
	key <AD06> {[ v,		V,		w,		W		]};
	key <AD07> {[ n,		N,		y,		Y		]};
	key <AD08> {[ z,		Z,		z,		Z		]};
	key <AD09> {[ emacron,		Emacron,	emacron,	Emacron		]};
	key <AD10> {[ ccaron,		Ccaron,		ccaron,		Ccaron		]};
	key <AD11> {[ zcaron,		Zcaron,		bracketleft,	braceleft	]};
	key <AD12> {[ h,		H,		bracketright,	braceright	]};

	key <AC01> {[ scaron,		Scaron,		scaron,		Scaron		]};
	key <AC02> {[ u,		U,		u,		U		]};
	key <AC03> {[ s,		S,		s,		S		]};
	key <AC04> {[ i,		I,		i,		I		]};
	key <AC05> {[ l,		L,		l,		L		]};
	key <AC06> {[ d,		D,		d,		D		]};
	key <AC07> {[ a,		A,		a,		A		]};
	key <AC08> {[ t,		T,		t,		T		]};
	key <AC09> {[ e,		E,		e,		E		]};
	key <AC10> {[ c,		C,		c,		C		]};
	key <AC11> {[ ISO_Level3_Latch,	quotedbl,	apostrophe,	quotedbl	]};
	key <AC12> {[ kcedilla,		Kcedilla,	slash,		backslash	]};

	key <LSGT> {[ gcedilla,		Gcedilla,	gcedilla,	Gcedilla	]};
	key <AB01> {[ ncedilla,		Ncedilla,	ncedilla,	Ncedilla	]};
	key <AB02> {[ b,		B,		x,		X		]};
	key <AB03> {[ imacron,		Imacron,	imacron,	Imacron		]};
	key <AB04> {[ k,		K,		k,		K		]};
	key <AB05> {[ p,		P,		p,		P		]};
	key <AB06> {[ o,		O,		omacron,	Omacron		]};
	key <AB07> {[ amacron,		Amacron,	amacron,	Amacron		]};
	key <AB08> {[ comma,		semicolon,	less,		multiply	]};
	key <AB09> {[ period,		colon,		greater,	division	]};
	key <AB10> {[ lcedilla,		Lcedilla,	question,	slash		]};
};

//============================================================================
// Latvian Modern keyboard layout by Valdis Vītoliņš
// http://odo.lv/xwiki/bin/download/Recipes/LatvianKeyboard/Modern.png
//
// http://odo.lv/LatvianKeyboard
// http://odo.lv/LatvianKeyboard5
//
partial alphanumeric_keys modifier_keys
xkb_symbols "modern" {

	name[Group1]= "Latvian (modern)";

	key <TLDE> {[ grave,		asciitilde,	acute,		copyright		]};
	key <AE01> {[ 1,		exclam,		onesuperior,	exclamdown		]};
	key <AE02> {[ 2,		at,		twosuperior,	oneeighth		]};
	key <AE03> {[ 3,		numbersign,	threesuperior,	sterling		]};
	key <AE04> {[ 4,		dollar,		EuroSign,	cent			]};
	key <AE05> {[ 5,		percent,	onehalf,	threeeighths		]};
	key <AE06> {[ 6,		asciicircum,	threequarters,	fiveeighths		]};
	key <AE07> {[ 7,		ampersand,	braceleft,	seveneighths		]};
	key <AE08> {[ 8,		asterisk,	bracketleft,	trademark		]};
	key <AE09> {[ 9,		parenleft,	bracketright,	plusminus		]};
	key <AE10> {[ 0,		parenright,	braceright,	degree			]};
	key <AE11> {[ minus,		underscore,	backslash,	questiondown		]};
	key <AE12> {[ equal,		plus,		endash,		emdash			]};

	key <AD01> {[ emacron,		Emacron,	emacron,	Emacron			]};
	key <AD02> {[ o,		O,		omacron,	Omacron			]};
	key <AD03> {[ amacron,		Amacron,	amacron,	Amacron			]};
	key <AD04> {[ p,		P,		question,	P			]};
	key <AD05> {[ b,		B,		exclam,		B			]};
	key <AD06> {[ j,		J,		emdash,		J			]};
	key <AD07> {[ d,		D,		endash,		D			]};
	key <AD08> {[ imacron,		Imacron,	imacron,	Imacron			]};
	key <AD09> {[ l,		L,		lcedilla,	Lcedilla		]};
	key <AD10> {[ g,		G,		gcedilla,	Gcedilla		]};
	Key <AD11> {[ bracketleft,	braceleft,	guillemotleft,	leftdoublequotemark	]};
	key <AD12> {[ bracketright,	braceright,	guillemotright,	rightdoublequotemark	]};

	key <AC01> {[ e,		E,		e,		E			]};
	key <AC02> {[ u,		U,		umacron,	Umacron			]};
	key <AC03> {[ a,		A,		a,		A			]};
	key <AC04> {[ n,		N,		ncedilla,	Ncedilla		]};
	key <AC05> {[ k,		K,		kcedilla,	Kcedilla		]};
	key <AC06> {[ ISO_Level3_Latch,	quotedbl,	apostrophe,	quotedbl		]};
	key <AC07> {[ s,		S,		scaron,		Scaron			]};
	key <AC08> {[ i,		I,		i,		I			]};
	key <AC09> {[ t,		T,		t,		T			]};
	key <AC10> {[ r,		R,		rcedilla,	Rcedilla		]};
	key <AC11> {[ m,		M,		m,		M			]};
	key <BKSL> {[ slash,		question,	backslash,	bar			]};

	key <LSGT> {[ q,		Q,		q,		Q			]};
	key <AB01> {[ x,		X,		q,		Q			]};
	key <AB02> {[ z,		Z,		zcaron,		Zcaron			]};
	key <AB03> {[ c,		C,		ccaron,		Ccaron			]};
	key <AB04> {[ v,		V,		bar,		V			]};
	key <AB05> {[ w,		W,		backslash,	W			]};
	key <AB06> {[ f,		F,		period,		F			]};
	key <AB07> {[ y,		Y,		slash,		Y			]};
	key <AB08> {[ h,		H,		U263A,		U2639			]};
	key <AB09> {[ comma,		semicolon,	less,		multiply		]};
	key <AB10> {[ period,		colon,		greater,	division		]};
	key <SPCE> {[ space,		space,		apostrophe				]};

	modifier_map Mod5 { <AC06> };

	include "level3(ralt_switch)"
};

// EXTRAS:

//============================================================================
// US Dvorak compatible Latvian layout
// http://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard
//
partial alphanumeric_keys modifier_keys
xkb_symbols "dvorak" {

	name[Group1]= "Latvian (US Dvorak)";

	key <TLDE> {[ asciitilde,	grave,		acute,			asciitilde		]};
	key <AE01> {[ 1,		exclam,		onesuperior,		exclamdown		]};
	key <AE02> {[ 2,		at,		twosuperior,		oneeighth		]};
	key <AE03> {[ 3,		numbersign,	threesuperior,		sterling		]};
	key <AE04> {[ 4,		dollar,		EuroSign,		cent			]};
	key <AE05> {[ 5,		percent,	onehalf,		threeeighths		]};
	key <AE06> {[ 6,		asciicircum,	threequarters,		fiveeighths		]};
	key <AE07> {[ 7,		ampersand,	braceleft,		seveneighths		]};
	key <AE08> {[ 8,		asterisk,	bracketleft,		trademark		]};
	key <AE09> {[ 9,		parenleft,	bracketright,		plusminus		]};
	key <AE10> {[ 0,		parenright,	braceright,		degree			]};
	key <AE11> {[ bracketleft,	braceleft,	leftdoublequotemark,	guillemotleft		]};
	key <AE12> {[ bracketright,	braceright,	rightdoublequotemark,	guillemotright		]};

	key <AD01> {[ apostrophe,	quotedbl,	leftdoublequotemark,	doublelowquotemark	]};
	key <AD02> {[ comma,		less,		guillemotleft,		multiply		]};
	key <AD03> {[ period,		greater,	guillemotright,		division		]};
	key <AD04> {[ p,		P,		p,			P			]};
	key <AD05> {[ y,		Y,		y,			Y			]};
	key <AD06> {[ f,		F,		f,			F			]};
	key <AD07> {[ g,		G,		gcedilla,		Gcedilla		]};
	key <AD08> {[ c,		C,		ccaron,			Ccaron			]};
	key <AD09> {[ r,		R,		rcedilla,		Rcedilla		]};
	key <AD10> {[ l,		L,		lcedilla,		Lcedilla		]};
	key <AD11> {[ slash,		question,	slash,			abovedot		]};
	key <AD12> {[ equal,		plus,		endash,			emdash			]};

	key <AC01> {[ a,		A,		amacron,		Amacron			]};
	key <AC02> {[ o,		O,		omacron,		Omacron			]};
	key <AC03> {[ e,		E,		emacron,		Emacron			]};
	key <AC04> {[ u,		U,		umacron,		Umacron			]};
	key <AC05> {[ i,		I,		imacron,		Imacron			]};
	key <AC06> {[ d,		D,		d,			D			]};
	key <AC07> {[ h,		H,		h,			H			]};
	key <AC08> {[ t,		T,		t,			T			]};
	key <AC09> {[ n,		N,		ncedilla,		Ncedilla		]};
	key <AC10> {[ s,		S,		scaron,			Scaron			]};
	key <AC11> {[ minus,		underscore,	backslash,		questiondown		]};

	key <AB01> {[ semicolon,	colon,		semicolon,		colon			]};
	key <AB02> {[ q,		Q,		q,			Q			]};
	key <AB03> {[ j,		J,		j,			J			]};
	key <AB04> {[ k,		K,		kcedilla,		Kcedilla		]};
	key <AB05> {[ x,		X,		x,			X			]};
	key <AB06> {[ b,		B,		b,			B			]};
	key <AB07> {[ m,		M,		m,			M			]};
	key <AB08> {[ w,		W,		w,			W			]};
	key <AB09> {[ v,		V,		v,			V			]};
	key <AB10> {[ z,		Z,		zcaron,			Zcaron			]};

	key <BKSL> {[ backslash,	bar,		grave,			breve			]};

	key <SPCE> {[ space,		space,		space,			space			]};

	include "level3(ralt_switch)"
};

partial alphanumeric_keys modifier_keys
xkb_symbols "ykeydvorak" {

	include "lv(dvorak)"

	name[Group1]= "Latvian (US Dvorak, Y variant)";

	key <AD05> {[ISO_Level3_Latch, ISO_Level3_Latch, y, Y]};
	key <SPCE> {[space, space, y, Y]};
	modifier_map Mod5 { <AD05> };

};

partial alphanumeric_keys modifier_keys
xkb_symbols "minuskeydvorak" {

	include "lv(dvorak)"

	name[Group1]= "Latvian (US Dvorak, minus variant)";

	key <AC11> {[ISO_Level3_Latch, ISO_Level3_Latch, minus, underscore]};
	key <SPCE> {[space, space, minus, underscore]};
	modifier_map Mod5 { <AR11> };

};

//============================================================================
// US Dvorak programmers layput compatible Latvian layout
// http://www.kaufmann.no/roland/dvorak/
//
partial alphanumeric_keys modifier_keys
xkb_symbols "dvorakprogr" {

	include "lv(dvorak)"

	name[Group1]= "Latvian (programmer US Dvorak)";

	key <TLDE> {[ dollar,		asciitilde,	EuroSign,		cent			]};
	key <AE01> {[ ampersand,	percent,	acute,			asciitilde		]};
	key <AE02> {[ bracketleft,	7,		onesuperior,		twosuperior		]};
	key <AE03> {[ braceleft,	5,		guillemotleft,		leftdoublequotemark	]};
	key <AE04> {[ braceright,	3,		guillemotright,		rightdoublequotemark	]};
	key <AE05> {[ parenleft,	1,		onehalf,		threeeighths		]};
	key <AE06> {[ equal,		9,		threequarters,		fiveeighths		]};
	key <AE07> {[ asterisk,		0,		degree,			copyright		]};
	key <AE08> {[ parenright,	2,		endash,			emdash			]};
	key <AE09> {[ plus,		4,		plusminus,		section			]};
	key <AE10> {[ bracketright,	6,		registered,		trademark		]};
	key <AE11> {[ exclam,		8,		exclam,			exclamdown		]};
	key <AE12> {[ numbersign,	grave,		Greek_alpha,		Greek_beta		]};

	key <AD01> {[ semicolon,	colon,		semicolon,		colon			]};
	key <AD12> {[ at,		asciicircum,	at,			asciicircum		]};

	key <AB01> {[ apostrophe,	quotedbl,	leftdoublequotemark,	doublelowquotemark	]};

	include "level3(ralt_switch)"
};

partial alphanumeric_keys modifier_keys
xkb_symbols "ykeydvorakprogr" {

	include "lv(dvorakprogr)"

	name[Group1]= "Latvian (programmer US Dvorak, Y variant)";

	key <AD05> {[ISO_Level3_Latch, ISO_Level3_Latch, y, Y]};
	key <SPCE> {[space, space, y, Y]};
	modifier_map Mod5 { <AD05> };

};

partial alphanumeric_keys modifier_keys
xkb_symbols "minuskeydvorakprogr" {

	include "lv(dvorakprogr)"

	name[Group1]= "Latvian (programmer US Dvorak, minus variant)";

	key <AC11> {[ISO_Level3_Latch, ISO_Level3_Latch, minus, underscore]};
	key <SPCE> {[space, space, minus, underscore]};
	modifier_map Mod5 { <AC11> };

};

//============================================================================
// Colemak compatible Latvian layout
// http://colemak.com/
//
partial alphanumeric_keys modifier_keys
xkb_symbols "colemak" {

	include "lv(basic)"

	name[Group1]= "Latvian (US Colemak)";

	key <AD03> {[ f,		F,		f,			F			]};
	key <AD04> {[ p,		P,		p,			P			]};
	key <AD05> {[ g,		G,		gcedilla,		Gcedilla		]};
	key <AD06> {[ j,		J,		j,			J			]};
	key <AD07> {[ l,		L,		lcedilla,		Lcedilla		]};
	key <AD08> {[ u,		U,		umacron,		Umacron			]};
	key <AD09> {[ y,		Y,		y,			Y			]};
	key <AD10> {[ semicolon,	colon,		semicolon,		colon			]};

	key <AC02> {[ r,		R,		rcedilla,		Rcedilla		]};
	key <AC03> {[ s,		S,		scaron,			Scaron			]};
	key <AC04> {[ t,		T,		t,			T			]};
	key <AC05> {[ d,		D,		d,			D			]};
	key <AC07> {[ n,		N,		ncedilla,		Ncedilla		]};
	key <AC08> {[ e,		E,		emacron,		Emacron			]};
	key <AC09> {[ i,		I,		imacron,		Imacron			]};
	key <AC10> {[ o,		O,		omacron,		Omacron			]};

	key <AB06> {[ k,		K,		kcedilla,		Kcedilla		]};

	include "level3(ralt_switch)"
};

partial alphanumeric_keys modifier_keys
xkb_symbols "apostrophecolemak" {

	include "lv(colemak)"

	name[Group1]= "Latvian (US Colemak, apostrophe variant)";

	key <AC11> {[ISO_Level3_Latch, quotedbl, apostrophe, quotedbl]};
	key <SPCE> {[space, space, apostrophe]};
	modifier_map Mod5 { <AC11> };

};

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/lv(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       default  partial alphanumeric_keys
xkb_symbols "basic" {

    // Adds the macrons needed for the Maori language to
    // a simple US keyboard layout.

    include "latin"

    name[Group1]="Maori";

    key <AC01>  { [ a,   A,  amacron, Amacron ] };
    key <AD03>  { [ e,   E,  emacron, Emacron ] };
    key <AD08>  { [ i,   I,  imacron, Imacron ] };

    key <AD09>  { [ o,   O,  omacron, Omacron ] };
    key <AD07>  { [ u,   U,  umacron, Umacron ] };

    key <RALT>  { type[Group1]="TWO_LEVEL",
                  [ ISO_Level3_Shift, Multi_key ] };

    modifier_map Mod5   { <RALT> };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "ro"

    name[Group1]="Moldavian";
};


// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
// │   ~ │ !   │ "   │ #   │ ;   │ %   │ :   │ ?   │ *   │ ( ̣  │ )   │ --  │ +   ┃ ⌫ Back  ┃
// │   ` │ 1   │ 2 @ │ 3   │ 4 $ │ 5 € │ 6 ^ │ 7 & │ 8   │ 9   │ 0   │ -   │ =   ┃  space  ┃
// ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
// ┃       ┃ Ţ Q │ Ê W │ E   │ R   │ T   │ Y   │ U   │ İ   │ O   │ P   │ Ö { │ Ü } ┃ Enter ┃
// ┃Tab ↹  ┃ ţ q │ ê w │ e   │ r   │ t   │ y   │ u   │ i   │ o   │ p   │ ö [ │ ü ] ┃   ⏎   ┃
// ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
// ┃        ┃ A   │ S   │ D   │ F   │ G   │ H   │ J   │ K   │ L   │Ş    │I    │ /   ┃      ┃
// ┃Caps ⇬  ┃ a   │ s   │ d   │ f   │ g   │ h   │ j   │ k   │ l   │ş    │ı'   │ \   ┃      ┃
// ┣━━━━━━━━┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
// ┃             │ Z   │ Ç X │ C   │ V   │ B   │ N   │ M   │Ä    │<    │>    ┃             ┃
// ┃Shift ⇧      │ z   │ ç x │ c   │ v   │ b   │ n   │ m   │ä    │,    │.    ┃Shift ⇧      ┃
// ┣━━━━━━━┳━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
// ┃       ┃       ┃       ┃ ␣                               ⍽ ┃       ┃       ┃       ┃
// ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣           Space               ⍽ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛


// A, Ä, B, C, Ç, D, E, Ê, F, G, H, I, İ, J, K, L, M, N, O, Ö, P, R, S, Ş, T, Ţ, U, Ü, V, Y, Z.

partial alphanumeric_keys								
xkb_symbols "gag" {								

    include "us(basic)"

    name[Group1]="Moldavian (Gagauz)";

    key <TLDE> 	{	[	grave,	asciitilde			]	};
    key <AE01> 	{	[	1,	exclam			]	};
    key <AE02> 	{	[	2,	quotedbl,	at	]	};
    key <AE03> 	{	[	3,	numbersign			]	};
    key <AE04> 	{	[	4,	semicolon,	dollar		]	};
    key <AE05> 	{	[	5,	percent,	EuroSign,	cent	]	};
    key <AE06> 	{	[	6,	colon,	asciicircum		]	};
    key <AE07> 	{	[	7,	question,	ampersand		]	};
    key <AE08> 	{	[	8,	asterisk			]	};
    key <AE09> 	{	[	9,	parenleft			]	};
    key <AE10> 	{	[	0,	parenright			]	};
    key <AE11> 	{	[	minus,	underscore			]	};
    key <AE12> 	{	[	equal,	plus			]	};

    key <AD01> 	{	[	tcedilla,	Tcedilla,	q,	Q	]	};
    key <AD02> 	{	[	ecircumflex,	Ecircumflex,	w,	W	]	};
    key <AD03> 	{	[	e,	E			]	};
    key <AD04> 	{	[	r,	R			]	};
    key <AD05> 	{	[	t,	T			]	};
    key <AD06> 	{	[	y,	Y			]	};
    key <AD07> 	{	[	u,	U			]	};
    key <AD08> 	{	[	i,	Iabovedot,	i,	I	]	};
    key <AD09> 	{	[	o,	O			]	};
    key <AD10> 	{	[	p,	P			]	};
    key <AD11> 	{	[	odiaeresis,	Odiaeresis,	bracketleft,	braceleft	]	};
    key <AD12> 	{	[	udiaeresis,	Udiaeresis,	bracketright,	braceright	]	};

    key <AC01> 	{	[	a,	A			]	};
    key <AC02> 	{	[	s,	S			]	};
    key <AC03> 	{	[	d,	D			]	};
    key <AC04> 	{	[	f,	F			]	};
    key <AC05> 	{	[	g,	G			]	};
    key <AC06> 	{	[	h,	H			]	};
    key <AC07> 	{	[	j,	J			]	};
    key <AC08> 	{	[	k,	K			]	};
    key <AC09> 	{	[	l,	L			]	};
    key <AC10> 	{	[	scedilla,	Scedilla			]	};
    key <AC11> 	{	[	idotless,	I,	apostrophe		]	};

    key <AB01> 	{	[	z,	Z			]	};
    key <AB02> 	{	[	ccedilla,	Ccedilla,	x,	X	]	};
    key <AB03> 	{	[	c,	C			]	};
    key <AB04> 	{	[	v,	V			]	};
    key <AB05> 	{	[	b,	B			]	};
    key <AB06> 	{	[	n,	N			]	};
    key <AB07> 	{	[	m,	M			]	};
    key <AB08> 	{	[	adiaeresis,	Adiaeresis			]	};
    key <AB09> 	{	[	comma,	less			]	};
    key <AB10> 	{	[	period,	greater,	slash		]	};

    key <BKSL> 	{	[	backslash,	bar			]	};

    include "level3(ralt_switch)"
};								
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // Arabic AZERTY with modern Latin digits 
default  partial alphanumeric_keys
xkb_symbols "arabic" {
    include "ara(azerty)"

    name[Group1]="Arabic (Morocco)";
};

// French AZERTY keyboard used when typing French
partial alphanumeric_keys
xkb_symbols "french" {
    include "fr(basic)"

    name[Group1]="French (Morocco)";
};

// Clavier unicode tifinaghe de base réalisé par l'IRCAM (Institut Royal de la Culture Amazighe du Maroc) http://www.ircam.ma/
// Support des lettres unicode tifinaghe-IRCAM, néotifinaghes & touarègues.
// Les caractères tifinaghes sont accessibles en SHIFT positions pour le niveau 2, en ALTGR positions pour le niveau 3
// Polices tifinaghes Unicode à télécharger depuis :
// http://www.ircam.ma/documents/policesclavierunicode/hapaxber.ttf (licence non libre, libre téléchargement et distribution uniquement)
// Minihowto ici: http://perso.menara.ma/~kebdani/tamazgha/gnu_amazigh.html

partial alphanumeric_keys
xkb_symbols "tifinagh" {

    name[Group1]="Berber (Morocco, Tifinagh)";

    key <TLDE>	{ [ twosuperior, NoSymbol ]	};
    key <AE01>	{ [ ampersand,          1 ]	};
    key <AE02>	{ [ NoSymbol,          2, asciitilde	]	};
    key <AE03>	{ [  quotedbl,          3, numbersign	]	};
    key <AE04>	{ [apostrophe,          4, braceleft	]	};
    key <AE05>	{ [ parenleft,          5, bracketleft	]	};
    key <AE06>	{ [     minus,          6, bar	]	};
    key <AE07>	{ [         NoSymbol ,  7 ]	};
    key <AE08>	{ [underscore,          8, backslash	]	};
    key <AE09>	{ [NoSymbol,         9, asciicircum	]	};
    key <AE10>	{ [       NoSymbol ,          0, at		]	};
    key <AE11>	{ [parenright,     degree, bracketright	]	};
    key <AE12>	{ [     equal,       plus, braceright	]	};

    key <AD01>	{ [ 0x1002d30 ]	};
    key <AD02>	{ [ 0x1002d63, 0x1002d65 ]	};
    key <AD03>	{ [ 0x1002d3b, NoSymbol,0x10020ac ]	};
    key <AD04>	{ [ 0x1002d54, 0x1002d55 ]	};
    key <AD05>	{ [ 0x1002d5c, 0x1002d5f ]	};
    key <AD06>	{ [ 0x1002d62 ]	};
    key <AD07>	{ [ 0x1002d53 ]	};
    key <AD08>	{ [ 0x1002d49 ]	};
    key <AD09>	{ [ 0x1002d44 ]	};
    key <AD10>	{ [ 0x1002d43 ]	};
    key <AD11>	{ [ 0x1002d6f ]   };
    key <AD12>	{ [    dollar,   sterling,   0x10000a4]	};

    key <AC01>	{ [ 0x1002d47 ]	};
    key <AC02>	{ [ 0x1002d59, 0x1002d5a ]	};
    key <AC03>	{ [ 0x1002d37, 0x1002d39 ]	};
    key <AC04>	{ [ 0x1002d3c ]	};
    key <AC05>	{ [ 0x1002d33, 0x1002d33]	};
    key <AC06>	{ [ 0x1002d40 ]	};
    key <AC07>	{ [ 0x1002d4a ]	};
    key <AC08>	{ [ 0x1002d3d,  0x1002d3d  ]	};
    key <AC09>	{ [ 0x1002d4d ]	};
    key <AC10>	{ [ 0x1002d4e ]	};
    key <AC11>	{ [    NoSymbol ,   percent ]	};
    key <BKSL>	{ [  asterisk,         mu ]	};

    key <AB01>	{ [ 0x1002d61 ]	};
    key <AB02>	{ [ 0x1002d45 ]	};
    key <AB03>	{ [ 0x1002d5b ]	};
    key <AB04>	{ [ 0x1002d56 ]	};
    key <AB05>	{ [ 0x1002d31 ]	};
    key <AB06>	{ [ 0x1002d4f ]	};
    key <AB07>	{ [     comma,   question ] };
    key <AB08>	{ [ semicolon,     period ] };
    key <AB09>	{ [     colon,      slash ] };
    key <AB10>	{ [    exclam,    section ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "tifinagh-phonetic" {
    include "ma(tifinagh)"

    name[Group1]="Berber (Morocco, Tifinagh phonetic)";

    key <LatA>	{ [ 0x1002d30 ]	};
    key <LatZ>	{ [ 0x1002d63, 0x1002d65 ]	};
    key <LatE>	{ [ 0x1002d3b, NoSymbol,0x10020ac ]	};
    key <LatR>	{ [ 0x1002d54, 0x1002d55 ]	};
    key <LatT>	{ [ 0x1002d5c, 0x1002d5f ]	};
    key <LatY>	{ [ 0x1002d62 ]	};
    key <LatU>	{ [ 0x1002d53 ]	};
    key <LatI>	{ [ 0x1002d49 ]	};
    key <LatO>	{ [ 0x1002d44 ]	};
    key <LatP>	{ [ 0x1002d43 ]	};

    key <LatQ>	{ [ 0x1002d47 ]	};
    key <LatS>	{ [ 0x1002d59, 0x1002d5a ]	};
    key <LatD>	{ [ 0x1002d37, 0x1002d39 ]	};
    key <LatF>	{ [ 0x1002d3c ]	};
    key <LatG>	{ [ 0x1002d33 ]	};
    key <LatH>	{ [ 0x1002d40 ]	};
    key <LatJ>	{ [ 0x1002d4a ]	};
    key <LatK>	{ [ 0x1002d3d ]	};
    key <LatL>	{ [ 0x1002d4d ]	};
    key <LatM>	{ [ 0x1002d4e ]	};

    key <LatW>	{ [ 0x1002d61,0x1002d6f ]	};
    key <LatX>	{ [ 0x1002d45 ]	};
    key <LatC>	{ [ 0x1002d5b ]	};
    key <LatV>	{ [ 0x1002d56 ]	};
    key <LatB>	{ [ 0x1002d31 ]	};
    key <LatN>	{ [ 0x1002d4f ]	};

    include "level3(ralt_switch)"
};

// Clavier unicode tifinaghe étendu réalisé par l'IRCAM (Institut Royal de la Culture Amazighe du Maroc) http://www.ircam.ma/
// Support des lettres unicode tifinaghe-IRCAM, néotifinaghes & touarègues.
// Les caractères tifinaghes sont accessibles en SHIFT positions pour le niveau 2, en ALTGR positions pour le niveau 3
// Polices tifinaghes Unicode à télécharger depuis :
// http://www.ircam.ma/documents/policesclavierunicode/hapaxber.ttf (licence non libre, libre téléchargement et distribution uniquement)
// Minihowto ici: http://perso.menara.ma/~kebdani/tamazgha/gnu_amazigh.html

partial alphanumeric_keys
xkb_symbols "tifinagh-extended" {

    name[Group1]="Berber (Morocco, Tifinagh extended)";

    key <TLDE>	{ [ twosuperior,0x100200C ]	};
    key <AE01>	{ [ ampersand,          1 ]	};
    key <AE02>	{ [0x1002d52,          2, asciitilde	]	};
    key <AE03>	{ [  quotedbl,          3, numbersign	]	};
    key <AE04>	{ [apostrophe,          4, braceleft	]	};
    key <AE05>	{ [ parenleft,          5, bracketleft	]	};
    key <AE06>	{ [ minus,          6, bar		]	};
    key <AE07>	{ [ 0x1002d64 ,  7 ]	};
    key <AE08>	{ [underscore,          8, backslash	]	};
    key <AE09>	{ [ 0x1002014,         9, asciicircum	]	};
    key <AE10>	{ [ 0x100200d,          0, at	]	};
    key <AE11>	{ [parenright,   degree, bracketright	]	};
    key <AE12>	{ [     equal,       plus, braceright	]	};

    key <AD01>	{ [ 0x1002d30, 0x1002d36 ]	};
    key <AD02>	{ [ 0x1002d63, 0x1002d65 ]	};
    key <AD03>	{ [ 0x1002d3b, 0x1002d57, 0x10020ac ]	};
    key <AD04>	{ [ 0x1002d54, 0x1002d55 ]	};
    key <AD05>	{ [ 0x1002d5c, 0x1002d5f ]	};
    key <AD06>	{ [ 0x1002d62, 0x1002d42 ]	};
    key <AD07>	{ [ 0x1002d53, 0x1002d4c ]	};
    key <AD08>	{ [ 0x1002d49, 0x1002d58 ]	};
    key <AD09>	{ [ 0x1002d44, 0x1002d5d ]	};
    key <AD10>	{ [ 0x1002d43, 0x1002d5e ]	};
    key <AD11>	{ [ 0x1002d6f, 0x1002d60 ]   };
    key <AD12>	{ [    dollar,   sterling,   0x10000a4]	};

    key <AC01>	{ [ 0x1002d47, 0x1002d48 ]	};
    key <AC02>	{ [ 0x1002d59, 0x1002d5a ]	};
    key <AC03>	{ [ 0x1002d37, 0x1002d39 ]	};
    key <AC04>	{ [ 0x1002d3c, 0x1002d35 ]	};
    key <AC05>	{ [ 0x1002d33, 0x1002d33 ]	};
    key <AC06>	{ [ 0x1002d40, 0x1002d41 ]	};
    key <AC07>	{ [ 0x1002d4a, 0x1002d4b ]	};
    key <AC08>	{ [ 0x1002d3d, 0x1002d3d ]	};
    key <AC09>	{ [ 0x1002d4d, 0x1002d38 ]	};
    key <AC10>	{ [ 0x1002d4e, 0x1002d3a ]	};
    key <AC11>	{ [ 0x1002d51,  percent  ]	};
    key <BKSL>	{ [ asterisk,   mu       ]	};

    key <AB01>	{ [ 0x1002d61, 0x1002d3e ]	};
    key <AB02>	{ [ 0x1002d45, 0x1002d46 ]	};
    key <AB03>	{ [ 0x1002d5b, 0x1002d3f ]	};
    key <AB04>	{ [ 0x1002d56, 0x1002d34 ]	};
    key <AB05>	{ [ 0x1002d31, 0x1002d32 ]	};
    key <AB06>	{ [ 0x1002d4f, 0x1002d50 ]	};
    key <AB07>	{ [     comma,  question ]    };
    key <AB08>	{ [ semicolon,    period ]    };
    key <AB09>	{ [     colon,     slash ]    };
    key <AB10>	{ [    exclam,   section ]    };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "tifinagh-extended-phonetic" {
    include "ma(tifinagh-extended)"

    name[Group1]="Berber (Morocco, Tifinagh extended phonetic)";

    key <LatA>	{ [ 0x1002d30 ]	};
    key <LatZ>	{ [ 0x1002d63, 0x1002d65 ]	};
    key <LatE>	{ [ 0x1002d3b, NoSymbol,0x10020ac ]	};
    key <LatR>	{ [ 0x1002d54, 0x1002d55 ]	};
    key <LatT>	{ [ 0x1002d5c, 0x1002d5f ]	};
    key <LatY>	{ [ 0x1002d62 ]	};
    key <LatU>	{ [ 0x1002d53 ]	};
    key <LatI>	{ [ 0x1002d49 ]	};
    key <LatO>	{ [ 0x1002d44 ]	};
    key <LatP>	{ [ 0x1002d43 ]	};

    key <LatQ>	{ [ 0x1002d47 ]	};
    key <LatS>	{ [ 0x1002d59, 0x1002d5a ]	};
    key <LatD>	{ [ 0x1002d37, 0x1002d39 ]	};
    key <LatF>	{ [ 0x1002d3c ]	};
    key <LatG>	{ [ 0x1002d33 ]	};
    key <LatH>	{ [ 0x1002d40 ]	};
    key <LatJ>	{ [ 0x1002d4a ]	};
    key <LatK>	{ [ 0x1002d3d ]	};
    key <LatL>	{ [ 0x1002d4d ]	};
    key <LatM>	{ [ 0x1002d4e ]	};

    key <LatW>	{ [ 0x1002d61 ]	};
    key <LatX>	{ [ 0x1002d45 ]	};
    key <LatC>	{ [ 0x1002d5b ]	};
    key <LatV>	{ [ 0x1002d56 ]	};
    key <LatB>	{ [ 0x1002d31 ]	};
    key <LatN>	{ [ 0x1002d4f ]	};

    include "level3(ralt_switch)"
};

// Tifinagh keyboard; improved from the IRCAM layout to make all
// tifinagh chars in unicode accessible (in shift positions for most
// touareg letters; in altgr position for spirants.

partial alphanumeric_keys
xkb_symbols "tifinagh-alt" {

    name[Group1]="Berber (Morocco, Tifinagh alternative)";

    key <TLDE>	{ [ twosuperior, asciitilde ]	};
    key <AE01>	{ [ ampersand,          1 ]	};
    key <AE02>	{ [asciitilde,          2, asciitilde	]	};
    key <AE03>	{ [  quotedbl,          3, numbersign	]	};
    key <AE04>	{ [apostrophe,          4, braceleft	]	};
    key <AE05>	{ [ parenleft,          5, bracketleft	]	};
    key <AE06>	{ [     minus,          6, bar		]	};
    key <AE07>	{ [     grave,          7, grave	]	};
    key <AE08>	{ [underscore,          8, backslash	]	};
    key <AE09>	{ [asciicircum,         9, asciicircum	]	};
    key <AE10>	{ [        at,          0, at		]	};
    key <AE11>	{ [parenright,     degree, bracketright	]	};
    key <AE12>	{ [     equal,       plus, braceright	]	};

    key <AD01>	{ [ 0x1002d30 ]	};
    key <AD02>	{ [ 0x1002d63, 0x1002d65, 0x1002d64 ]	};
    key <AD03>	{ [ 0x1002d3b ]	};
    key <AD04>	{ [ 0x1002d54, 0x1002d55 ]	};
    key <AD05>	{ [ 0x1002d5c, 0x1002d5f, 0x1002d5d ]	};
    key <AD06>	{ [ 0x1002d62 ]	};
    key <AD07>	{ [ 0x1002d53 ]	};
    key <AD08>	{ [ 0x1002d49 ]	};
    key <AD09>	{ [ 0x1002d44 ]	};
    key <AD10>	{ [ 0x1002d43, 0x1002d52 ]	};
    key <AD11>	{ [ dead_circumflex ] };
    key <AD12>	{ [    dollar,   sterling ]	};

    key <AC01>	{ [ 0x1002d47, 0x1002d48 ]	};
    key <AC02>	{ [ 0x1002d59, 0x1002d5a ]	};
    key <AC03>	{ [ 0x1002d37, 0x1002d39, 0x1002d38, 0x1002d3a ]	};
    key <AC04>	{ [ 0x1002d3c ]	};
    key <AC05>	{ [ 0x1002d33, 0x1002d36, 0x1002d34, 0x1002d35 ]	};
    key <AC06>	{ [ 0x1002d40, 0x1002d42, 0x1002d41 ]	};
    key <AC07>	{ [ 0x1002d4a, 0x1002d4c, 0x1002d4b ]	};
    key <AC08>	{ [ 0x1002d3d, 0x1002d3e, 0x1002d3f ]	};
    key <AC09>	{ [ 0x1002d4d ]	};
    key <AC10>	{ [ 0x1002d4e ]	};
    key <AC11>	{ [ percent ]	};
    key <BKSL>	{ [  asterisk,         mu ]	};

    key <AB01>	{ [ 0x1002d61, 0x1002d6f, 0x1002d60 ]	};
    key <AB02>	{ [ 0x1002d45, 0x1002d46 ]	};
    key <AB03>	{ [ 0x1002d5b, 0x1002d5e ]	};
    key <AB04>	{ [ 0x1002d56, 0x1002d57, 0x1002d58 ]	};
    key <AB05>	{ [ 0x1002d31, 0x1002d31, 0x1002d32 ]	};
    key <AB06>	{ [ 0x1002d4f, 0x1002d50, 0x1002d51 ]	};
    key <AB07>	{ [     comma,   question ] };
    key <AB08>	{ [ semicolon,     period ] };
    key <AB09>	{ [     colon,      slash ] };
    key <AB10>	{ [    exclam,    section ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "tifinagh-alt-phonetic" {
    include "ma(tifinagh-alt)"

    name[Group1]="Berber (Morocco, Tifinagh alternative phonetic)";

    key <LatA>	{ [ 0x1002d30 ]	};
    key <LatZ>	{ [ 0x1002d63, 0x1002d65, 0x1002d64 ]	};
    key <LatE>	{ [ 0x1002d3b ]	};
    key <LatR>	{ [ 0x1002d54, 0x1002d55 ]	};
    key <LatT>	{ [ 0x1002d5c, 0x1002d5f, 0x1002d5d ]	};
    key <LatY>	{ [ 0x1002d62 ]	};
    key <LatU>	{ [ 0x1002d53 ]	};
    key <LatI>	{ [ 0x1002d49 ]	};
    key <LatO>	{ [ 0x1002d44 ]	};
    key <LatP>	{ [ 0x1002d43, 0x1002d52 ]	};

    key <LatQ>	{ [ 0x1002d47, 0x1002d48 ]	};
    key <LatS>	{ [ 0x1002d59, 0x1002d5a ]	};
    key <LatD>	{ [ 0x1002d37, 0x1002d39, 0x1002d38, 0x1002d3a ]	};
    key <LatF>	{ [ 0x1002d3c ]	};
    key <LatG>	{ [ 0x1002d33, 0x1002d36, 0x1002d34, 0x1002d35 ]	};
    key <LatH>	{ [ 0x1002d40, 0x1002d42, 0x1002d41 ]	};
    key <LatJ>	{ [ 0x1002d4a, 0x1002d4c, 0x1002d4b ]	};
    key <LatK>	{ [ 0x1002d3d, 0x1002d3e, 0x1002d3f ]	};
    key <LatL>	{ [ 0x1002d4d ]	};
    key <LatM>	{ [ 0x1002d4e ]	};

    key <LatW>	{ [ 0x1002d61, 0x1002d6f, 0x1002d60 ]	};
    key <LatX>	{ [ 0x1002d45, 0x1002d46 ]	};
    key <LatC>	{ [ 0x1002d5b, 0x1002d5e ]	};
    key <LatV>	{ [ 0x1002d56, 0x1002d57, 0x1002d58 ]	};
    key <LatB>	{ [ 0x1002d31, 0x1002d31, 0x1002d32 ]	};
    key <LatN>	{ [ 0x1002d4f, 0x1002d50, 0x1002d51 ]	};

    include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    // Montenegro keyboard mapping
//
// Initially, a copy of Serbian variants
//

default  partial alphanumeric_keys
xkb_symbols "basic" {
  include "rs(latin)"
  name[Group1]= "Montenegrin";

  key <AD06> { [ any, any, zacute, Zacute ] }; // z
  key <AC02> { [ any, any, sacute, Sacute ] }; // s
};

partial alphanumeric_keys
xkb_symbols "cyrillic" {
  include "rs(basic)"
  name[Group1]= "Montenegrin (Cyrillic)";
};

partial alphanumeric_keys
xkb_symbols "cyrillicyz" {
  include "rs(yz)"
  name[Group1]= "Montenegrin (Cyrillic, ZE and ZHE swapped)";
};

partial alphanumeric_keys
xkb_symbols "latinunicode" {
  include "rs(latinunicode)"
  name[Group1]= "Montenegrin (Latin Unicode)";

  key <AD06> { [ any, any, zacute, Zacute ] }; // z
  key <AC02> { [ any, any, sacute, Sacute ] }; // s
};

partial alphanumeric_keys
xkb_symbols "latinyz" {
  include "rs(latinyz)"
  name[Group1]= "Montenegrin (Latin qwerty)";

  key <AB02> { [ any, any, zacute, Zacute ] }; // z
  key <AC02> { [ any, any, sacute, Sacute ] }; // s
};

partial alphanumeric_keys
xkb_symbols "latinunicodeyz" {
  include "rs(latinunicodeyz)"
  name[Group1]= "Montenegrin (Latin Unicode qwerty)";

  key <AB02> { [ any, any, zacute, Zacute ] }; // z
  key <AC02> { [ any, any, sacute, Sacute ] }; // s
};

xkb_symbols "cyrillicalternatequotes" {
  include "rs(alternatequotes)"
  name[Group1]= "Montenegrin (Cyrillic with guillemets)";
};

xkb_symbols "latinalternatequotes" {
  include "rs(latinalternatequotes)"
  name[Group1]= "Montenegrin (Latin with guillemets)";

  key <AD06> { [ any, any, zacute,        Zacute         ] }; // z
  key <AC02> { [ any, any, sacute,        Sacute         ] }; // s
  key <LSGT> { [ any, any, guillemotleft, guillemotright ] }; // <
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 // based on keyboard map:
// Author: Damjan Georgievski <penguinista AT mail.net.mk>
// Revision: 1.5

default  partial alphanumeric_keys
xkb_symbols "basic" { 
    name[Group1]= "Macedonian";

    key <AB01> { [     Cyrillic_ze,     Cyrillic_ZE	]	};
    key <AC02> { [     Cyrillic_es,     Cyrillic_ES	]	};
    key <AC01> { [      Cyrillic_a,      Cyrillic_A	]	};
    key <AD01> { [    Cyrillic_lje,    Cyrillic_LJE	]	};
    key <AD02> { [    Cyrillic_nje,    Cyrillic_NJE	]	};
    key <AB03> { [    Cyrillic_tse,    Cyrillic_TSE	]	};
    key <AB02> { [   Cyrillic_dzhe,   Cyrillic_DZHE	]	};
    key <AC03> { [     Cyrillic_de,     Cyrillic_DE	]	};
    key <AD03> { [     Cyrillic_ie,     Cyrillic_IE	]	};
    key <AB04> { [     Cyrillic_ve,     Cyrillic_VE	]	};
    key <AC04> { [     Cyrillic_ef,     Cyrillic_EF	]	};
    key <AD05> { [     Cyrillic_te,     Cyrillic_TE	]	};
    key <AD04> { [     Cyrillic_er,     Cyrillic_ER	]	};
    key <AB06> { [     Cyrillic_en,     Cyrillic_EN	]	};
    key <AB05> { [     Cyrillic_be,     Cyrillic_BE	]	};
    key <AC06> { [     Cyrillic_ha,     Cyrillic_HA	]	};
    key <AC05> { [    Cyrillic_ghe,    Cyrillic_GHE	]	};
    key <AD06> { [   Macedonia_dse,   Macedonia_DSE	]	};
    key <AB07> { [     Cyrillic_em,     Cyrillic_EM	]	};
    key <AC07> { [     Cyrillic_je,     Cyrillic_JE	]	};
    key <AD07> { [      Cyrillic_u,      Cyrillic_U	]	};
    key <AC08> { [     Cyrillic_ka,     Cyrillic_KA	]	};
    key <AD08> { [      Cyrillic_i,      Cyrillic_I	]	};
    key <AD09> { [      Cyrillic_o,      Cyrillic_O	]	};
    key <AC09> { [     Cyrillic_el,     Cyrillic_EL	]	};
    key <AC10> { [    Cyrillic_che,    Cyrillic_CHE	]	};
    key <AD10> { [     Cyrillic_pe,     Cyrillic_PE	]	};
    key <AC11> { [   Macedonia_kje,   Macedonia_KJE	]	};
    key <AD11> { [    Cyrillic_sha,    Cyrillic_SHA	]	};
    key <AD12> { [   Macedonia_gje,   Macedonia_GJE	]	};
    key <BKSL> { [    Cyrillic_zhe,    Cyrillic_ZHE	]	};
    key <AE12> { [           equal,            plus	]	};
    key <AE11> { [           minus,      underscore	]	};
    key <TLDE> { [      dead_grave,      asciitilde	]	};
    key <AE01> { [               1,          exclam	]	};
    key <AE02> { [               2, doublelowquotemark	]	};
    key <AE03> { [               3, leftdoublequotemark	]	};
    key <AE04> { [               4,          dollar	]	};
    key <AE05> { [               5,         percent	]	};
    key <AE06> { [               6,     asciicircum	]	};
    key <AE07> { [               7,       ampersand	]	};
    key <AE08> { [               8,        asterisk	]	};
    key <AE09> { [               9,       parenleft	]	};
    key <AE10> { [               0,      parenright	]	};
    key <AB08> { [           comma,       semicolon	]	};
    key <AB09> { [          period,           colon	]	};
    key <AB10> { [           slash,        question	]	};

    include "kpdl(comma)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {
    include "mk(basic)"
    name[Group1]= "Macedonian (eliminate dead keys)";
    key <TLDE> { [           grave,      asciitilde ]   };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "fr(basic)"

    name[Group1]="Bambara";

    key <AB06>	{ [         n,          N,         U0272,       U019D ]	}; // n N ɲ Ɲ
    key <AC02>	{ [         s,          S,         U0161,       U0160 ]	}; // s S š Š
    key <AC05>	{ [         g,          G,         U0254,       U0186 ]	}; // g G ɔ Ɔ
    key <AC10>	{ [         m,          M,         U014B,       U014A ]	}; // m M ŋ Ŋ
    key <AD02>	{ [         z,          Z,         U017E,       U017d ]	}; // z Z ž Ž
    key <AD03>	{ [         e,          E,         U025B,       U0190 ]	}; // e E ɛ Ɛ

};

partial alphanumeric_keys
xkb_symbols "fr-oss" {

    include "fr(oss)"

    name[Group1]="French (Mali, alternative)";

    // š Š on d replaces ë Ë
    // ɲ Ɲ on j replaces ü Ü
    // ŋ Ŋ on m replaces ö Ö
    // ž Ž on z replaces â Â
    // ɛ Ɛ on r replaces ê Ê
    // ɔ Ɔ on p replaces ô Ô

    key <AC03>	{ [                d,                D,                U0161,                 U0160 ] }; // d D š Š
    key <AC07>	{ [                j,                J,                U0272,                 U019D ] }; // j J ɲ Ɲ
    key <AC10>	{ [                m,                M,                U014B,                 U014A ] }; // m M ŋ Ŋ
    key <AD02>	{ [                z,                Z,                U017E,                 U017d ] }; // z Z ž Ž
    key <AD04>	{ [                r,                R,                U025B,                 U0190 ] }; // r R ɛ Ɛ
    key <AD10>	{ [                p,                P,                U0254,                 U0186 ] }; // p P ɔ Ɔ
};

partial alphanumeric_keys
xkb_symbols "us-mac" {

    include "us(mac)"

    name[Group1]="English (Mali, US Macintosh)";

    // ž Ž on z replaces Ω ¸
    // ɛ Ɛ on a replaces å Å
    // š Š on s replaces ß  
    // ɲ Ɲ on j replaces ∆ ½
    // ŋ Ŋ on k replaces ° 
    // ɔ Ɔ on o replaces ø Ø

    key <AB01> { [	   z,          Z,         U017E,            U017d ] }; // z Z ž Ž
    key <AC01> { [	   a,          A,         U025B,            U0190 ]	}; // a A ɛ Ɛ
    key <AC02> { [	   s,          S,         U0161,            U0160 ] }; // s S š Š
    key <AC07> { [	   j,          J,         U0272,            U019D ] }; // j J ɲ Ɲ
    key <AC08> { [	   k,          K,         U014B,            U014A ] }; // k K ŋ Ŋ
    key <AD09> { [	   o,          O,         U0254,            U0186 ] }; // o O ɔ Ɔ

};

partial alphanumeric_keys
xkb_symbols "us-intl" {

    include "us(intl)"

    name[Group1]="English (Mali, US international)";

    // ž Ž on x replaces
    // š Š on s replaces ß §
    // ɲ Ɲ on h replaces
    // ŋ Ŋ on j replaces
    // ɛ Ɛ on w replaces å Å
    // ɔ Ɔ on o replaces ó Ó

    key <AB02> { [	   x,          X,         U017E,            U017d ] }; // x X ž Ž
    key <AC02> { [	   s,          S,         U0161,            U0160 ] }; // s S š Š
    key <AC06> { [	   h,	       H,         U0272,            U019D ]	}; // h H ɲ Ɲ
    key <AC07> { [	   j,	       J,		  U014B,            U014A ]	}; // j J ŋ Ŋ
    key <AD02> { [	   w,          W,         U025B,            U0190 ] }; // w W ɛ Ɛ
    key <AD09> { [	   o,          O,         U0254,            U0186 ] }; // o O ɔ Ɔ

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  default  partial alphanumeric_keys
xkb_symbols "basic" {
    name[Group1]= "Burmese";

    key <TLDE> { [      U1050,      U100E,        grave,  asciitilde ] };
    key <AE01> { [      U1041,      U100D,            1,      exclam ] };
    key <AE02> { [      U1042,      U1052,            2,          at ] };
    key <AE03> { [      U1043,      U100B,            3,  numbersign ] };
    key <AE04> { [      U1044,      U1053,            4,      dollar ] };
    key <AE05> { [      U1045,      U1054,            5,     percent ] };
    key <AE06> { [      U1046,      U1055,            6, asciicircum ] };
    key <AE07> { [      U1047,      U101B,            7,   ampersand ] };
    key <AE08> { [      U1048,   asterisk,            8,    asterisk ] };
    key <AE09> { [      U1049,  parenleft,            9,   parenleft ] };
    key <AE10> { [      U1040, parenright,            0,  parenright ] };
    key <AE11> { [      minus, underscore,        minus,  underscore ] };
    key <AE12> { [      equal,       plus,        equal,        plus ] };

    key <AD01> { [      U1006,      U1008,            q,           Q ] };
    key <AD02> { [      U1010,      U101D,            w,           W ] };
    key <AD03> { [      U1014,      U1023,            e,           E ] };
    key <AD04> { [      U1019,      U104E,            r,           R ] };
    key <AD05> { [      U1021,      U1024,            t,           T ] };
    key <AD06> { [      U1015,      U104C,            y,           Y ] };
    key <AD07> { [      U1000,      U1025,            u,           U ] };
    key <AD08> { [      U1004,      U104D,            i,           I ] };
    key <AD09> { [      U101E,      U103F,            o,           O ] };
    key <AD10> { [      U1005,      U100F,            p,           P ] };
    key <AD11> { [      U101F,      U1027,  bracketleft,   braceleft ] };
    key <AD12> { [      U1029,      U102A, bracketright,  braceright ] };

    key <AC01> { [      U1031,      U1017,            a,           A ] };
    key <AC02> { [      U103B,      U103E,            s,           S ] };
    key <AC03> { [      U102D,      U102E,            d,           D ] };
    key <AC04> { [      U103A,      U1039,            f,           F ] };
    key <AC05> { [      U102B,      U103D,            g,           G ] };
    key <AC06> { [      U1037,      U1036,            h,           H ] };
    key <AC07> { [      U103C,      U1032,            j,           J ] };
    key <AC08> { [      U102F,      U1012,            k,           K ] };
    key <AC09> { [      U1030,      U1013,            l,           L ] };
    key <AC10> { [      U1038,      U1002,    semicolon,       colon ] };
    key <AC11> { [ apostrophe,    quotedbl                           ] };

    key <AB01> { [      U1016,       U1007,           z,           Z ] };
    key <AB02> { [      U1011,       U100C,           x,           X ] };
    key <AB03> { [      U1001,       U1003,           c,           C ] };
    key <AB04> { [      U101C,       U1020,           v,           V ] };
    key <AB05> { [      U1018,       U101A,           b,           B ] };
    key <AB06> { [      U100A,       U1009,           n,           N ] };
    key <AB07> { [      U102C,       U1026,           m,           M ] };
    key <AB08> { [      comma,        U104A,      comma,        less ] };
    key <AB09> { [     period,        U104B,     period,     greater ] };
    key <AB10> { [      slash,    question                           ] };

    key <BKSL> { [      U104F,       U1051,   backslash,         bar ] };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            // based on:
// Mongolian standard keyboard
// Author Sanlig Badral <badral@chinggis.com>
// 2002/12/7 Version 1.0

default  partial alphanumeric_keys
xkb_symbols "basic" {

  name[Group1]= "Mongolian";

  key <TLDE> { [ equal,       	   plus,  		degree          ] };
  key <AE01> { [ 1,                numerosign,        	multiply        ] };
  key <AE02> { [ 2,                minus,              	division        ] };
  key <AE03> { [ 3,                quotedbl,        	plusminus       ] };
  key <AE04> { [ 4,                U20ae,  		notsign         ] }; // Tugrik sign
  key <AE05> { [ 5,                colon,		NoSymbol       	] };
  key <AE06> { [ 6,                period,              notequal        ] };
  key <AE07> { [ 7,                underscore,          ampersand    	] };
  key <AE08> { [ 8,                comma,            	asterisk        ] };
  key <AE09> { [ 9,                percent,          	bracketleft     ] };
  key <AE10> { [ 0,                question,       	bracketright   	] };
  key <AE11> { [ Cyrillic_ie,      Cyrillic_IE,        	X               ] };
  key <AE12> { [ Cyrillic_shcha,   Cyrillic_SHCHA,   	L       	] };

  key <AD01> { [ Cyrillic_ef,       Cyrillic_EF,       	apostrophe      ] };
  key <AD02> { [ Cyrillic_tse,      Cyrillic_TSE,       grave           ] };
  key <AD03> { [ Cyrillic_u,        Cyrillic_U,        	EuroSign        ] };
  key <AD04> { [ Cyrillic_zhe,      Cyrillic_ZHE,      	registered      ] };
  key <AD05> { [ Cyrillic_e,        Cyrillic_E,        	trademark       ] };
  key <AD06> { [ Cyrillic_en,       Cyrillic_EN,       	yen             ] };
  key <AD07> { [ Cyrillic_ghe,      Cyrillic_GHE,      	doublelowquotemark   ] };
  key <AD08> { [ Cyrillic_sha,      Cyrillic_SHA,      	leftdoublequotemark  ] };
  key <AD09> { [ Cyrillic_u_straight,Cyrillic_U_straight,rightdoublequotemark] };
  key <AD10> { [ Cyrillic_ze,       Cyrillic_ZE,       	NoSymbol        ] };
  key <AD11> { [ Cyrillic_ka,       Cyrillic_KA,      	braceleft       ] };
  key <AD12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN, 	braceright      ] };

  key <AC01> { [ Cyrillic_shorti,   Cyrillic_SHORTI,   	mu              ] };
  key <AC02> { [ Cyrillic_yeru,     Cyrillic_YERU,     	sterling        ] };
  key <AC03> { [ Cyrillic_be,       Cyrillic_BE,       	dollar          ] };
  key <AC04> { [ Cyrillic_o_bar,    Cyrillic_O_bar,     rightdoublequotemark ] };
  key <AC05> { [ Cyrillic_a,        Cyrillic_A,        	Cyrillic_yeru   ] };
  key <AC06> { [ Cyrillic_ha,       Cyrillic_HA,       	Cyrillic_YERU   ] };
  key <AC07> { [ Cyrillic_er,       Cyrillic_ER,       	Cyrillic_e      ] };
  key <AC08> { [ Cyrillic_o,        Cyrillic_O,       	Cyrillic_E      ] };
  key <AC09> { [ Cyrillic_el,       Cyrillic_EL,       	numerosign      ] };
  key <AC10> { [ Cyrillic_de,       Cyrillic_DE,       	section         ] };
  key <AC11> { [ Cyrillic_pe,       Cyrillic_PE,       	ellipsis        ] };
  key <BKSL> { [ exclam,            bar,     		bar             ] };

  key <LSGT> { [ parenleft,         parenright,         NoSymbol        ] };
  key <AB01> { [ Cyrillic_ya,       Cyrillic_YA,       	emdash          ] };
  key <AB02> { [ Cyrillic_che,      Cyrillic_CHE,      	endash          ] };
  key <AB03> { [ Cyrillic_io,       Cyrillic_IO,       	copyright       ] };
  key <AB04> { [ Cyrillic_es,       Cyrillic_ES,       	NoSymbol        ] };
  key <AB05> { [ Cyrillic_em,       Cyrillic_EM,       	NoSymbol        ] };
  key <AB06> { [ Cyrillic_i,        Cyrillic_I,        	less            ] };
  key <AB07> { [ Cyrillic_te,       Cyrillic_TE,       	greater         ] };
  key <AB08> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN, 	guillemotleft   ] };
  key <AB09> { [ Cyrillic_ve,       Cyrillic_VE,       	guillemotright  ] };
  key <AB10> { [ Cyrillic_yu,       Cyrillic_YU,       	backslash       ] };

  key <SPCE> { [ space,             space,             	nobreakspace    ] };

  include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "olpc" {

// Contact: Walter Bender <walter@laptop.org>

  include "mn(basic)"

  key <AE07> { [ 7,                 semicolon,          ampersand       ] };

  key <BKSL> { [ backslash,         bar,     		exclam          ] };

  include "group(olpc)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              // Maltese keyboard map (based on MSA Standard DMS100)
// by Ramon Casha (ramon.casha@linux.org.mt)

default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin"

    name[Group1]="Maltese";

    // Copied from GB layout
    key <AE02> { [         2,   quotedbl,  twosuperior,    oneeighth ] };
    key <AE04> { [         4,     dollar,     EuroSign,   onequarter ] };
    key <AC11> { [apostrophe,         at, dead_circumflex, dead_caron] };
    key <BKSL> { [numbersign, asciitilde,   dead_grave,   dead_breve ] };

    // The following four sets are the four additional letters, with the UK
    // equivalents
    key <TLDE>	{ [ cabovedot,  Cabovedot,        grave,      notsign ]	};
    key <AD11>	{ [ gabovedot,  Gabovedot,  bracketleft,    braceleft ]	};
    key <AD12>	{ [   hstroke,    Hstroke, bracketright,   braceright ]	};
    key <LSGT>	{ [ zabovedot,  Zabovedot,    backslash,          bar ]	};

    // Euro symbol
    key <AE03>	{ [         3,   EuroSign,     sterling               ]	};

    // Long accent
    key <AE06>	{ [         6, asciicircum, dead_circumflex, dead_circumflex ]	};

    // Normal accented vowels
    key <AD03>	{ [         e,          E,       egrave,       Egrave ]	};
    key <AD07>	{ [         u,          U,       ugrave,       Ugrave ]	};
    key <AD08>	{ [         i,          I,       igrave,       Igrave ]	};
    key <AD09>	{ [         o,          O,       ograve,       Ograve ]	};
    key <AC01>	{ [         a,          A,       agrave,       Agrave ]	};

    include "level3(ralt_switch)"
};

// Maltese keyboard map (based on MSA Standard DMS100, annex A)
// by Ramon Casha (ramon.casha@linux.org.mt)

partial alphanumeric_keys
xkb_symbols "us" {

    include "latin"

    // Describes the differences between the mt
    // keyboard and a US-based physical keyboard

    name[Group1]="Maltese (with US layout)";

    // The following four sets are the four additional letters, with the US
    // equivalents
    key <TLDE>	{ [ cabovedot,  Cabovedot,        grave,   asciitilde ]	};
    key <AD11>	{ [ gabovedot,  Gabovedot,  bracketleft,    braceleft ]	};
    key <AD12>	{ [   hstroke,    Hstroke, bracketright,   braceright ]	};
    key <LSGT>	{ [ zabovedot,  Zabovedot,    backslash,          bar ]	};
    key <BKSL>	{ [ zabovedot,  Zabovedot,    backslash,          bar ]	};

    // Euro symbol
    key <AE03>	{ [         3,   EuroSign,     numbersign             ]	};

    // Long accent
    key <AE06>	{ [         6, asciicircum, dead_circumflex, dead_circumflex ]	};

    // Normal accented vowels
    key <AD03>	{ [         e,          E,       egrave,       Egrave ]	};
    key <AD07>	{ [         u,          U,       ugrave,       Ugrave ]	};
    key <AD08>	{ [         i,          I,       igrave,       Igrave ]	};
    key <AD09>	{ [         o,          O,       ograve,       Ograve ]	};
    key <AC01>	{ [         a,          A,       agrave,       Agrave ]	};

    include "level3(ralt_switch)"

};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          // Keymap for Thaana/Dhivehi script (Dhivehi language).

default  partial alphanumeric_keys
xkb_symbols "basic" {

    name[Group1]="Dhivehi";

    key <TLDE> { [           grave,      asciitilde      ]       };
    key <AE01> { [               1,          exclam      ]       };
    key <AE02> { [               2,              at      ]       };
    key <AE03> { [               3,      numbersign      ]       };
    key <AE04> { [               4,          dollar      ]       };
    key <AE05> { [               5,         percent      ]       };
    key <AE06> { [               6,     asciicircum      ]       };
    key <AE07> { [               7,       ampersand      ]       };
    key <AE08> { [               8,        asterisk      ]       };
    key <AE09> { [               9,       parenleft      ]       };
    key <AE10> { [               0,      parenright      ]       };
    key <AE11> { [           minus,      underscore      ]       };
    key <AE12> { [           equal,            plus      ]       };

    key <AD01> { [	0x10007B0,	0x10007A4      ]       };
    key <AD02> { [	0x1000787,	0x10007A2      ]       };
    key <AD03> { [	0x10007AC,     	0x10007AD      ]       };
    key <AD04> { [	0x1000783,     	0x100079C      ]       };
    key <AD05> { [	0x100078C,      0x1000793      ]       };
    key <AD06> { [	0x1000794, 	0x10007A0      ]       };
    key <AD07> { [	0x10007AA,      0x10007AB      ]       };
    key <AD08> { [	0x10007A8,      0x10007A9      ]       };
    key <AD09> { [	0x10007AE,      0x10007AF      ]       };
    key <AD10> { [	0x1000795,    	division       ]       };
    key <AD11> {	[ 	bracketleft,	braceleft      ]	};
    key <AD12> {	[ 	bracketright,	braceright     ]	};

    key <AC01> { [	0x10007A6,       0x10007A7     ]       };
    key <AC02> { [	0x1000790,       0x1000781     ]       };
    key <AC03> { [	0x100078B,       0x1000791     ]       };
    key <AC04> { [	0x100078A,       0x100fdf2     ]       };
    key <AC05> { [	0x100078E,       0x10007A3     ]       };
    key <AC06> { [	0x1000780,	 0x1000799     ]       };
    key <AC07> { [	0x1000796,       0x100079B     ]       };
    key <AC08> { [	0x1000786,       0x100079A     ]       };
    key <AC09> { [	0x100078D,       0x1000785     ]       };
    key <AC10> { [	semicolon,       colon         ]       };
    key <AC11> { [	apostrophe,      quotedbl      ]       };
    key <BKSL> { [ 	backslash,	 bar           ]       };

    key <LSGT> { [        bar,      	brokenbar	]       };
    key <AB01> { [ 	0x1000792,    	0x10007A1       ]       };
    key <AB02> { [	multiply,      	0x1000798	  ]       };
    key <AB03> { [	0x1000797,     	0x100079D	  ]       };
    key <AB04> { [	0x1000788,      0x10007A5	  ]       };
    key <AB05> { [	0x1000784,      0x100079E         ]       };
    key <AB06> { [	0x1000782, 	0x100078F 	  ]       };
    key <AB07> { [	0x1000789,    	0x100079F         ]       };
    key <AB08> { [	Arabic_comma,   less              ]       };
    key <AB09> { [	period,         greater           ]       };
    key <AB10> { [	slash, 		Arabic_question_mark ]       };

    modifier_map Shift  { Shift_L };
    modifier_map Lock   { Caps_Lock };
    modifier_map Control{ Control_L };
    modifier_map Mod3   { Mode_switch };
};

// Any additional keys (if need be added) should appear and function exactly as it does on the US_en keyboard.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                default partial alphanumeric_keys
xkb_symbols "jawi" {
    include "id(jawi)"

    name[Group1]= "Malay (Jawi)";
};

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           //
// Created by Bernardo Innocenti <bernie@codewiz.org>
//
// Additional symbol definitions for the OLPC keyboards
//

alphanumeric_keys modifier_keys
xkb_symbols "olpc" {
    include "pc(pc105)"

    modifier_map Mod1 { KP_Home   }; // KP_Home  is the "square" game key
    modifier_map Mod3 { KP_End    }; // KP_End   is the "tick" game key
    modifier_map Mod4 { KP_Prior  }; // KP_Prior is the "O" game key
    modifier_map Mod5 { KP_Next   }; // KP_Next  is the "X" game key

    key <I220> { [ XF86Search    ] }; // search key (unpopulated on olpcm, harmless)
    key <I221> { [ XF86Meeting   ] }; // fn+search key (unpopulated on olpcm, harmless)
    key <I236> { [ XF86Start     ] }; // gear key (fn+space)
    key <I147> { [ XF86TaskPane  ] }; // frame key (the top-right key) (unpopulated on olpcm, harmless)
    key <I224> { [ XF86Messenger ] }; // overlay key (next to frame key) (unpopulated on olpcm, harmless)
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              // Let Space key provide No-Break Space (NBSP), Narrow No-Break Space (NNBSP),
// Zero-Width Non-Joiner (ZWNJ), and Zero-Width Joiner (ZWJ) for the desired
// levels.


////////////////////////////////////////
// Only Space

partial
xkb_symbols "none" {
  key <SPCE> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1]= [ space ]
  };
};


////////////////////////////////////////
// No-Break Space

partial
xkb_symbols "level2" {
  key <SPCE> {
    type[Group1]="TWO_LEVEL",
    symbols[Group1]= [ space, nobreakspace ]
  };
};


// level3 & level3ns provide no-breaking spaces starting from level3
// This is good for typographers but experience shows many users accidently
// type no-breaking spaces on the CLI (resulting in errors)
// Used by fr(latin9) and lt(std)
partial
xkb_symbols "level3" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, space, nobreakspace ]
  };
};

// level3s kills fourth level
// Used by ca(multix)
partial
xkb_symbols "level3s" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, space, nobreakspace, NoSymbol ]
  };
};

// for this reason pushing no-breaking spaces to level4 is the safe default nowadays
partial
xkb_symbols "level4" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, space, space, nobreakspace ]
  };
};


////////////////////////////////////////
// Narrow No-Break Space

// level3n provides narrow no-breaking space in addition to the normal one
partial
xkb_symbols "level3n" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, space, nobreakspace, 0x100202F ]
  };
};

// level4n provides narrow no-breaking space in addition to the normal one
partial
xkb_symbols "level4n" {
 key <SPCE> {
   type[Group1]="EIGHT_LEVEL",
   symbols[Group1]= [ space, space, space, nobreakspace, space, 0x100202F, NoSymbol, NoSymbol ]
 };
};

// level4nl provides narrow no-breaking space in addition to the normal one
// without forcing the use of level5 for mostly four-level layouts
// Used by fr(oss), be(oss)…
partial
xkb_symbols "level4nl" {
 key <SPCE> {
   type[Group1]="LOCAL_EIGHT_LEVEL",
   symbols[Group1]= [ space, space, space, nobreakspace, space, 0x100202F, NoSymbol, NoSymbol ]
 };
};


////////////////////////////////////////
// Zero-Width Non-Joiner & Zero-Width Joiner
// Author: Behnam Esfahbod <behnam@esfahbod.info>

// ZWNJ and ZWJ are widely used in Persian, Kurdinsh, Pashto, Uzbek and other
// languages that use PersoArabic script.


// ZWNJ on level 2
partial
xkb_symbols "zwnj2" {
  key <SPCE> {
    type[Group1]="TWO_LEVEL",
    symbols[Group1]= [ space, 0x100200c ]
  };
};


// ZWNJ on level 2
// ZWJ on level 3
partial
xkb_symbols "zwnj2zwj3" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, 0x100200c, 0x100200d ]
  };
};


// ZWNJ on level 2
// ZWJ on level 3
// NBSP on level 4
partial
xkb_symbols "zwnj2zwj3nb4" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, 0x100200c, 0x100200d, nobreakspace ]
  };
};

// ZWNJ on level 2
// NBSP on level 3
// Used by ir(ku_ara), af(basic), af(ps), af(uz), af(olpc-fa), af(olpc-ps), af(olpc-uz)
partial
xkb_symbols "zwnj2nb3" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, 0x100200c, nobreakspace ]
  };
};


// ZWNJ on level 2
// NBSP on level 3
partial
xkb_symbols "zwnj2nb3s" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, 0x100200c, nobreakspace, NoSymbol ]
  };
};


// ZWNJ on level 2
// NBSP on level 3
// ZWJ on level 4
partial
xkb_symbols "zwnj2nb3zwj4" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, 0x100200c, nobreakspace, 0x100200d ]
  };
};


// ZWNJ on level 2
// NBSP on level 3
// NNBSP on level 4
// Used by ir(pes)
partial
xkb_symbols "zwnj2nb3nnb4" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, 0x100200c, nobreakspace, 0x100202F ]
  };
};


// ZWNJ on level 3
// ZWJ on level 4
// Used by in(deva), in(olpc)
partial
xkb_symbols "zwnj3zwj4" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, space, 0x100200c, 0x100200d ]
  };
};


// NBSP on level 2
// ZWNJ on level 3
// Used by lk(sin_phonetic)
partial
xkb_symbols "nb2zwnj3s" {
  key <SPCE> {
    type[Group1]="FOUR_LEVEL",
    symbols[Group1]= [ space, nobreakspace, 0x100200c, NoSymbol ]
  };
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "us"

    name[Group1]= "English (Nigeria)";
    key <AE04> { [          4, 0x010020A6,     dollar,       cent ] };
    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "yoruba" {
    include "ng(basic)"

    name[Group1]= "Yoruba";

    key <AD01> { [ 0x01001EB9, 0x01001EB8,          q,          Q ] };
    key <AB02> { [ 0x01001ECD, 0x01001ECC,          x,          X ] };
    key <AB04> { [ 0x01001E63, 0x01001E62,          v,          V ] };
};

partial alphanumeric_keys
xkb_symbols "igbo" {
    include "ng(basic)"

    name[Group1]= "Igbo";

    key <AD01> { [ 0x01001ECB, 0x01001ECA,          q,          Q ] };
    key <AB02> { [ 0x01001E45, 0x01001E44,          x,          X ] };
    key <AC10> { [ 0x01001EE5, 0x01001EE4,   semicolon,	    colon ] };
    key <AD11> { [ 0x01001ECD, 0x01001ECC, bracketleft, braceleft ] };		 
};

partial alphanumeric_keys
xkb_symbols "hausa" {
    include "ng(basic)"

    name[Group1]= "Hausa";

    key <AD01> { [ 0x01000071, 0x01000051,          q,          Q ] };
    key <AD02> { [ udiaeresis, Udiaeresis,          w,          W ] };
    key <AD03> { [          e,          E,   EuroSign,       cent ] };
    key <AD11> { [ 0x010001B4, 0x010001B3,bracketleft,  braceleft ] };
    key <AD12> { [     gcaron,     Gcaron,bracketright, braceright] };
    key <AC03> { [ 0x01000257, 0x0100018A,         d,           D ] };
    key <AC10> { [ 0x01000131, 0x01000130, semicolon,       colon ] };
    key <AC11> { [ 0x010001DD, 0x0100018E,apostrophe,    quotedbl ] };
    key <AB01> { [ 0x01000272, 0x0100019D,         z,           Z ] };
    key <AB07> { [     ntilde,     Ntilde,         m,           M ] };
    key <AB09> { [   ccedilla,   Ccedilla,    period,     greater ] };
    key <AB10> { [   scedilla,   Scedilla,     slash,    question ] };

};

partial alphanumeric_keys
xkb_symbols "olpc" {

   include "ng(basic)"

   // OLPC West Africa keyboard layout
   // See: http://wiki.laptop.org/go/Image:Nigeria-B3.png

   key <TLDE> { [     grave, asciitilde,    exclamdown,       exclamdown ] };
   key <AE01> { [         1,     exclam,      sterling,         sterling ] };
   key <AE02> { [         2,         at,      EuroSign,         EuroSign ] };
   key <AE03> { [         3, numbersign,        dollar,          dollar ] };
   key <AE04> { [         4,  0x10020A6,     0x1000301,        0x1000301 ] }; // Naira, combining acute
   key <AE05> { [         5,    percent,     0x1000300,        0x1000300 ] }; // combining grave
   key <AE06> { [         6,asciicircum,     0x100030A,        0x100030A ] }; // combining ring above
   key <AE07> { [         7,  ampersand,     0x1000302,        0x1000302 ] }; // combining circumflex above
   key <AE08> { [         8,   asterisk,     0x1000324,        0x1000324 ] }; // combining caron above
   key <AE09> { [         9,  parenleft,     0x1000307,        0x1000307 ] }; // combining dot above
   key <AE10> { [         0, parenright,     0x1000308,        0x1000308 ] }; // combining diaeresis above
   key <AE11> { [     minus, underscore,     0x1000304,        0x1000304 ] }; // combining macron above
   key <AE12> { [     equal,       plus,     0x1000303,        0x1000303 ] }; // combining tilde above

   key <AD02> { [         w,          W,     0x1001EB9, 0x1001EB8 ] }; // E with dot below
   key <AD03> { [         e,          E,     0x10001DD, 0x100018E ] }; // reversed E
   key <AD04> { [         r,          R,     0x10001B4, 0x10001B3 ] }; // Y with hook
   key <AD05> { [         t,          T,     0x1000327, 0x1000327 ] }; // combining cedilla
   key <AD06> { [         y,          Y,     0x1000325, 0x1000325 ] }; // combining ring below
   key <AD07> { [         u,          U,     0x100032D, 0x100032D ] }; // combining circumflex below
   key <AD08> { [         i,          I,     0x100032C, 0x100032C ] }; // combining caron below
   key <AD09> { [         o,          O,     0x1000323, 0x1000323 ] }; // combining dot below
   key <AD10> { [         p,          P,     0x1000304, 0x1000304 ] }; // combining diaeresis below
   key <AD11> { [ bracketleft,  braceleft,   0x1000331, 0x1000331 ] }; // combining macron below
   key <AD12> { [bracketright, braceright,   0x1000330, 0x1000330 ] }; // combining tilde below

   key <AC01>  { [         a,          A,   Greek_iota,       Greek_IOTA ] };
   key <AC02>  { [        s,          S,    0x1001E63,        0x1001E62 ] }; // S with dot below
   key <AC03>  { [         d,          D,    0x1000257,        0x100018A ] }; // D with hook
   key <AC04>  { [        f,          F,    0x1001E0D,        0x1001E0C ] }; // D with dot below
   key <AC05>  { [         g,          G,    0x1000272,               0x100019D ] }; // N with left hook
   key <AC06>  { [         h,          H,    0x1001EE5,               0x1001EE4 ] }; // U with dot below
   key <AC07>  { [         j,          J,    0x1001ECB,               0x1001ECA ] }; // I with dot below
   key <AC08>  { [         k,          K,    0x1000199,               0x1000198 ] }; // K with hook
   key <AC09>  { [         l,          L,    0x1001E37,        0x1001E36 ] }; // L with dot below
   key <AC10>  { [ semicolon,      colon,    masculine,      ordfeminine ] };
   key <AC11>  { [ apostrophe,  quotedbl,     currency,         currency ] };
   key <BKSL>  { [ backslash,        bar,      section,          section ] };

   key <AB03>  { [         c,          C,    0x1000254,        0x1000186 ] }; // open O
   key <AB04>  { [         v,          V,    0x100028B,        0x10001B2 ] }; // V with hook
   key <AB05>  { [         b,          B,    0x1000253,               0x1000181 ] }; // B with hook
   key <AB06>  { [         n,          N,          eng,                     ENG ] };
   key <AB07>  { [         m,          M,    0x1001E45,        0x1001E44 ] }; // N with dot above
   key <AB08>  { [     comma,     less, guillemotleft,   guillemotleft ] };
   key <AB09>  { [    period, greater, guillemotright,  guillemotright ] };
   key <AB10>  { [     slash,   question, questiondown,     questiondown ] };

   key <I219>  { [  multiply,   division, ISO_Next_Group, ISO_Prev_Group ] };

   include "level3(ralt_switch)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            // Basic layout based on converted file, from keytable file to xkb/symbols/ file
// with mk_xkb by root@linux.chanae.stben.be Tue Sep 30 00:53:29 MET DST 1997

// Converted from the nl-latin.map of the Linux kbd package by
// Pablo Saratxaga <srtxg@f2219.n293.z2.fidonet.org>

// Official layout by Benno Schulenberg <bensberg@justemail.net>, January 2007,
// based on http://www.xs4all.nl/~koospol/public/Xmodmap-nl-deadkeys.gz


default  partial alphanumeric_keys
xkb_symbols "basic" {

    include "latin"

    name[Group1]="Dutch";

    key <AE02>	{ [         2,   quotedbl,  twosuperior,    oneeighth ]	};
    key <AE06>	{ [         6,  ampersand, threequarters, fiveeighths ]	};
    key <AE07>	{ [         7, underscore,     sterling, seveneighths ]	};
    key <AE08>	{ [         8,  parenleft,    braceleft,  bracketleft ]	};
    key <AE09>	{ [         9, parenright,   braceright, bracketright ]	};
    key <AE10>	{ [         0, apostrophe,       degree,    trademark ]	};
    key <AE11>	{ [     slash,   question,    backslash, questiondown ]	};
    key <AE12>	{ [    degree, dead_tilde, dead_cedilla,  dead_ogonek ]	};

    key <AD03>	{ [         e,          E,     EuroSign,         cent ] };
    key <AD05>	{ [         t,          T,        thorn,        THORN ]	};
    key <AD06>	{ [         y,          Y,   ydiaeresis,          yen ]	};
    key <AD07>	{ [         u,          U,   udiaeresis,   Udiaeresis ]	};
    key <AD08>	{ [         i,          I,   idiaeresis,   Idiaeresis ]	};
    key <AD09>	{ [         o,          O,       ograve,       Ograve ]	};
    key <AD10>	{ [         p,          P,    paragraph,        THORN ]	};
    key <AD11>	{ [dead_diaeresis, dead_circumflex, asciitilde, asciicircum]	};
    key <AD12>	{ [  asterisk,        bar,   dead_tilde,  dead_macron ]	};

    key <AC01>	{ [         a,          A,       aacute,       Aacute ]	};
    key <AC04>	{ [         f,          F,  ordfeminine,  ordfeminine ]	};
    key <AC10>	{ [      plus,  plusminus,   dead_acute, dead_doubleacute ] };
    key <AC11>	{ [dead_acute, dead_grave,   apostrophe,        grave ] };
    key <TLDE>	{ [        at,    section,      notsign,      notsign ]	};

    key <BKSL>	{ [      less,    greater,   dead_grave,   dead_breve ]	};
    key <AB06>	{ [         n,          N,       ntilde,       Ntilde ]	};
    key <AB07>	{ [         m,          M,     Greek_mu,    masculine ]	};
    key <AB08>	{ [     comma,  semicolon,      cedilla, guillemotleft]	};
    key <AB09>	{ [    period,      colon, periodcentered, guillemotright ] };
    key <AB10>	{ [     minus,      equal,       hyphen, dead_abovedot]	};

    key <LSGT>	{ [bracketright, bracketleft,       bar,    brokenbar ]	};

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "std" {

    name[Group1]= "Dutch (standard)";

    key <TLDE>  { [             at,        section,        notsign ] };
    key <AE01>  { [              1,         exclam,    onesuperior ] };
    key <AE02>  { [              2,       quotedbl,    twosuperior ] };
    key <AE03>  { [              3,     numbersign,  threesuperior ] };
    key <AE04>  { [              4,         dollar,     onequarter ] };
    key <AE05>  { [              5,        percent,        onehalf ] };
    key <AE06>  { [              6,      ampersand,  threequarters ] };
    key <AE07>  { [              7,     underscore,       sterling ] };
    key <AE08>  { [              8,      parenleft,      braceleft ] };
    key <AE09>  { [              9,     parenright,     braceright ] };
    key <AE10>  { [              0,     apostrophe                 ] };
    key <AE11>  { [          slash,       question,      backslash ] };
    key <AE12>  { [         degree,     dead_tilde,   dead_cedilla ] };

    key <AD01>  { [              q,              Q                 ] };
    key <AD02>  { [              w,              W                 ] };
    key <AD03>  { [              e,              E,       EuroSign ] };
    key <AD04>  { [              r,              R,      paragraph ] };
    key <AD05>  { [              t,              T                 ] };
    key <AD06>  { [              y,              Y                 ] };
    key <AD07>  { [              u,              U                 ] };
    key <AD08>  { [              i,              I                 ] };
    key <AD09>  { [              o,              O                 ] };
    key <AD10>  { [              p,              P                 ] };
    key <AD11>  { [ dead_diaeresis, dead_circumflex                ] };
    key <AD12>  { [       asterisk,            bar                 ] };
    key <BKSL>  { [           less,        greater                 ] };

    key <AC01>  { [              a,              A                 ] };
    key <AC02>  { [              s,              S,         ssharp ] };
    key <AC03>  { [              d,              D                 ] };
    key <AC04>  { [              f,              F                 ] };
    key <AC05>  { [              g,              G                 ] };
    key <AC06>  { [              h,              H                 ] };
    key <AC07>  { [              j,              J                 ] };
    key <AC08>  { [              k,              K                 ] };
    key <AC09>  { [              l,              L                 ] };
    key <AC10>  { [           plus,      plusminus                 ] };
    key <AC11>  { [     dead_acute,     dead_grave                 ] };

    key <LSGT>  { [   bracketright,    bracketleft,            bar ] };
    key <AB01>  { [              z,              Z,  guillemotleft ] };
    key <AB02>  { [              x,              X, guillemotright ] };
    key <AB03>  { [              c,              C,           cent ] };
    key <AB04>  { [              v,              V                 ] };
    key <AB05>  { [              b,              B                 ] };
    key <AB06>  { [              n,              N                 ] };
    key <AB07>  { [              m,              M,             mu ] };
    key <AB08>  { [          comma,      semicolon                 ] };
    key <AB09>  { [         period,          colon, periodcentered ] };
    key <AB10>  { [          minus,          equal                 ] };

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {

    // For naming consistency

    include "nl(basic)"
};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {

     // For naming consistency

    include "nl(Sundeadkeys)"
    name[Group1]="Dutch (Sun dead keys)";
};

// Copied from macintosh_vndr/nl
partial alphanumeric_keys
xkb_symbols "mac" {

    include "latin"

    name[Group1]= "Dutch (Macintosh)";

    include "level3(ralt_switch)"
};

// EXTRAS:

partial alphanumeric_keys
	xkb_symbols "sun_type6" {
	include "sun_vndr/nl(sun_type6)"
};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             