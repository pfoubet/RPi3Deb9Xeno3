!	change.txt	/*!*
!!	change.txt	/*!!*
#	pattern.txt	/*#*
$	motion.txt	/*$*
$HOME	options.txt	/*$HOME*
$HOME-use	version5.txt	/*$HOME-use*
$MYGVIMRC	gui.txt	/*$MYGVIMRC*
$MYVIMRC	starting.txt	/*$MYVIMRC*
$VIM	starting.txt	/*$VIM*
$VIM-use	version5.txt	/*$VIM-use*
$VIMRUNTIME	starting.txt	/*$VIMRUNTIME*
$VIM_POSIX	vi_diff.txt	/*$VIM_POSIX*
%	motion.txt	/*%*
%:.	cmdline.txt	/*%:.*
%:8	cmdline.txt	/*%:8*
%:S	cmdline.txt	/*%:S*
%:e	cmdline.txt	/*%:e*
%:gs	cmdline.txt	/*%:gs*
%:h	cmdline.txt	/*%:h*
%:p	cmdline.txt	/*%:p*
%:r	cmdline.txt	/*%:r*
%:s	cmdline.txt	/*%:s*
%:t	cmdline.txt	/*%:t*
%:~	cmdline.txt	/*%:~*
&	change.txt	/*&*
'	motion.txt	/*'*
''	motion.txt	/*''*
'(	motion.txt	/*'(*
')	motion.txt	/*')*
'.	motion.txt	/*'.*
'0	motion.txt	/*'0*
'<	motion.txt	/*'<*
'>	motion.txt	/*'>*
'A	motion.txt	/*'A*
'[	motion.txt	/*'[*
']	motion.txt	/*']*
'^	motion.txt	/*'^*
'a	motion.txt	/*'a*
'acd'	options.txt	/*'acd'*
'ai'	options.txt	/*'ai'*
'akm'	options.txt	/*'akm'*
'al'	options.txt	/*'al'*
'aleph'	options.txt	/*'aleph'*
'allowrevins'	options.txt	/*'allowrevins'*
'altkeymap'	options.txt	/*'altkeymap'*
'ambiwidth'	options.txt	/*'ambiwidth'*
'ambw'	options.txt	/*'ambw'*
'anti'	options.txt	/*'anti'*
'antialias'	options.txt	/*'antialias'*
'ap'	vi_diff.txt	/*'ap'*
'ar'	options.txt	/*'ar'*
'arab'	options.txt	/*'arab'*
'arabic'	options.txt	/*'arabic'*
'arabicshape'	options.txt	/*'arabicshape'*
'ari'	options.txt	/*'ari'*
'arshape'	options.txt	/*'arshape'*
'as'	todo.txt	/*'as'*
'autochdir'	options.txt	/*'autochdir'*
'autoindent'	options.txt	/*'autoindent'*
'autoprint'	vi_diff.txt	/*'autoprint'*
'autoread'	options.txt	/*'autoread'*
'autosave'	todo.txt	/*'autosave'*
'autowrite'	options.txt	/*'autowrite'*
'autowriteall'	options.txt	/*'autowriteall'*
'aw'	options.txt	/*'aw'*
'awa'	options.txt	/*'awa'*
'background'	options.txt	/*'background'*
'backspace'	options.txt	/*'backspace'*
'backup'	options.txt	/*'backup'*
'backupcopy'	options.txt	/*'backupcopy'*
'backupdir'	options.txt	/*'backupdir'*
'backupext'	options.txt	/*'backupext'*
'backupskip'	options.txt	/*'backupskip'*
'balloondelay'	options.txt	/*'balloondelay'*
'ballooneval'	options.txt	/*'ballooneval'*
'balloonexpr'	options.txt	/*'balloonexpr'*
'bdir'	options.txt	/*'bdir'*
'bdlay'	options.txt	/*'bdlay'*
'beautify'	vi_diff.txt	/*'beautify'*
'belloff'	options.txt	/*'belloff'*
'beval'	options.txt	/*'beval'*
'bex'	options.txt	/*'bex'*
'bexpr'	options.txt	/*'bexpr'*
'bf'	vi_diff.txt	/*'bf'*
'bg'	options.txt	/*'bg'*
'bh'	options.txt	/*'bh'*
'bin'	options.txt	/*'bin'*
'binary'	options.txt	/*'binary'*
'biosk'	options.txt	/*'biosk'*
'bioskey'	options.txt	/*'bioskey'*
'bk'	options.txt	/*'bk'*
'bkc'	options.txt	/*'bkc'*
'bl'	options.txt	/*'bl'*
'bo'	options.txt	/*'bo'*
'bomb'	options.txt	/*'bomb'*
'breakat'	options.txt	/*'breakat'*
'breakindent'	options.txt	/*'breakindent'*
'breakindentopt'	options.txt	/*'breakindentopt'*
'bri'	options.txt	/*'bri'*
'briopt'	options.txt	/*'briopt'*
'brk'	options.txt	/*'brk'*
'browsedir'	options.txt	/*'browsedir'*
'bs'	options.txt	/*'bs'*
'bsdir'	options.txt	/*'bsdir'*
'bsk'	options.txt	/*'bsk'*
'bt'	options.txt	/*'bt'*
'bufhidden'	options.txt	/*'bufhidden'*
'buflisted'	options.txt	/*'buflisted'*
'buftype'	options.txt	/*'buftype'*
'casemap'	options.txt	/*'casemap'*
'cb'	options.txt	/*'cb'*
'cc'	options.txt	/*'cc'*
'ccv'	options.txt	/*'ccv'*
'cd'	options.txt	/*'cd'*
'cdpath'	options.txt	/*'cdpath'*
'cedit'	options.txt	/*'cedit'*
'cf'	options.txt	/*'cf'*
'cfu'	options.txt	/*'cfu'*
'ch'	options.txt	/*'ch'*
'character'	intro.txt	/*'character'*
'charconvert'	options.txt	/*'charconvert'*
'ci'	options.txt	/*'ci'*
'cin'	options.txt	/*'cin'*
'cindent'	options.txt	/*'cindent'*
'cink'	options.txt	/*'cink'*
'cinkeys'	options.txt	/*'cinkeys'*
'cino'	options.txt	/*'cino'*
'cinoptions'	options.txt	/*'cinoptions'*
'cinw'	options.txt	/*'cinw'*
'cinwords'	options.txt	/*'cinwords'*
'clipboard'	options.txt	/*'clipboard'*
'cm'	options.txt	/*'cm'*
'cmdheight'	options.txt	/*'cmdheight'*
'cmdwinheight'	options.txt	/*'cmdwinheight'*
'cmp'	options.txt	/*'cmp'*
'cms'	options.txt	/*'cms'*
'co'	options.txt	/*'co'*
'cocu'	options.txt	/*'cocu'*
'cole'	options.txt	/*'cole'*
'colorcolumn'	options.txt	/*'colorcolumn'*
'columns'	options.txt	/*'columns'*
'com'	options.txt	/*'com'*
'comments'	options.txt	/*'comments'*
'commentstring'	options.txt	/*'commentstring'*
'compatible'	options.txt	/*'compatible'*
'complete'	options.txt	/*'complete'*
'completefunc'	options.txt	/*'completefunc'*
'completeopt'	options.txt	/*'completeopt'*
'concealcursor'	options.txt	/*'concealcursor'*
'conceallevel'	options.txt	/*'conceallevel'*
'confirm'	options.txt	/*'confirm'*
'consk'	options.txt	/*'consk'*
'conskey'	options.txt	/*'conskey'*
'copyindent'	options.txt	/*'copyindent'*
'cot'	options.txt	/*'cot'*
'cp'	options.txt	/*'cp'*
'cpo'	options.txt	/*'cpo'*
'cpoptions'	options.txt	/*'cpoptions'*
'cpt'	options.txt	/*'cpt'*
'crb'	options.txt	/*'crb'*
'cryptmethod'	options.txt	/*'cryptmethod'*
'cscopepathcomp'	options.txt	/*'cscopepathcomp'*
'cscopeprg'	options.txt	/*'cscopeprg'*
'cscopequickfix'	options.txt	/*'cscopequickfix'*
'cscoperelative'	options.txt	/*'cscoperelative'*
'cscopetag'	options.txt	/*'cscopetag'*
'cscopetagorder'	options.txt	/*'cscopetagorder'*
'cscopeverbose'	options.txt	/*'cscopeverbose'*
'cspc'	options.txt	/*'cspc'*
'csprg'	options.txt	/*'csprg'*
'csqf'	options.txt	/*'csqf'*
'csre'	options.txt	/*'csre'*
'cst'	options.txt	/*'cst'*
'csto'	options.txt	/*'csto'*
'csverb'	options.txt	/*'csverb'*
'cuc'	options.txt	/*'cuc'*
'cul'	options.txt	/*'cul'*
'cursorbind'	options.txt	/*'cursorbind'*
'cursorcolumn'	options.txt	/*'cursorcolumn'*
'cursorline'	options.txt	/*'cursorline'*
'cwh'	options.txt	/*'cwh'*
'debug'	options.txt	/*'debug'*
'deco'	options.txt	/*'deco'*
'def'	options.txt	/*'def'*
'define'	options.txt	/*'define'*
'delcombine'	options.txt	/*'delcombine'*
'dex'	options.txt	/*'dex'*
'dg'	options.txt	/*'dg'*
'dict'	options.txt	/*'dict'*
'dictionary'	options.txt	/*'dictionary'*
'diff'	options.txt	/*'diff'*
'diffexpr'	options.txt	/*'diffexpr'*
'diffopt'	options.txt	/*'diffopt'*
'digraph'	options.txt	/*'digraph'*
'dip'	options.txt	/*'dip'*
'dir'	options.txt	/*'dir'*
'directory'	options.txt	/*'directory'*
'display'	options.txt	/*'display'*
'dy'	options.txt	/*'dy'*
'ea'	options.txt	/*'ea'*
'ead'	options.txt	/*'ead'*
'eadirection'	options.txt	/*'eadirection'*
'eb'	options.txt	/*'eb'*
'ed'	options.txt	/*'ed'*
'edcompatible'	options.txt	/*'edcompatible'*
'ef'	options.txt	/*'ef'*
'efm'	options.txt	/*'efm'*
'ei'	options.txt	/*'ei'*
'ek'	options.txt	/*'ek'*
'emo'	options.txt	/*'emo'*
'emoji'	options.txt	/*'emoji'*
'enc'	options.txt	/*'enc'*
'encoding'	options.txt	/*'encoding'*
'endofline'	options.txt	/*'endofline'*
'eol'	options.txt	/*'eol'*
'ep'	options.txt	/*'ep'*
'equalalways'	options.txt	/*'equalalways'*
'equalprg'	options.txt	/*'equalprg'*
'errorbells'	options.txt	/*'errorbells'*
'errorfile'	options.txt	/*'errorfile'*
'errorformat'	options.txt	/*'errorformat'*
'esckeys'	options.txt	/*'esckeys'*
'et'	options.txt	/*'et'*
'eventignore'	options.txt	/*'eventignore'*
'ex'	options.txt	/*'ex'*
'expandtab'	options.txt	/*'expandtab'*
'exrc'	options.txt	/*'exrc'*
'fcl'	options.txt	/*'fcl'*
'fcs'	options.txt	/*'fcs'*
'fdc'	options.txt	/*'fdc'*
'fde'	options.txt	/*'fde'*
'fdi'	options.txt	/*'fdi'*
'fdl'	options.txt	/*'fdl'*
'fdls'	options.txt	/*'fdls'*
'fdm'	options.txt	/*'fdm'*
'fdn'	options.txt	/*'fdn'*
'fdo'	options.txt	/*'fdo'*
'fdt'	options.txt	/*'fdt'*
'fe'	options.txt	/*'fe'*
'fen'	options.txt	/*'fen'*
'fenc'	options.txt	/*'fenc'*
'fencs'	options.txt	/*'fencs'*
'fex'	options.txt	/*'fex'*
'ff'	options.txt	/*'ff'*
'ffs'	options.txt	/*'ffs'*
'fic'	options.txt	/*'fic'*
'fileencoding'	options.txt	/*'fileencoding'*
'fileencodings'	options.txt	/*'fileencodings'*
'fileformat'	options.txt	/*'fileformat'*
'fileformats'	options.txt	/*'fileformats'*
'fileignorecase'	options.txt	/*'fileignorecase'*
'filetype'	options.txt	/*'filetype'*
'fillchars'	options.txt	/*'fillchars'*
'fixendofline'	options.txt	/*'fixendofline'*
'fixeol'	options.txt	/*'fixeol'*
'fk'	options.txt	/*'fk'*
'fkmap'	options.txt	/*'fkmap'*
'fl'	vi_diff.txt	/*'fl'*
'flash'	vi_diff.txt	/*'flash'*
'flp'	options.txt	/*'flp'*
'fml'	options.txt	/*'fml'*
'fmr'	options.txt	/*'fmr'*
'fo'	options.txt	/*'fo'*
'foldclose'	options.txt	/*'foldclose'*
'foldcolumn'	options.txt	/*'foldcolumn'*
'foldenable'	options.txt	/*'foldenable'*
'foldexpr'	options.txt	/*'foldexpr'*
'foldignore'	options.txt	/*'foldignore'*
'foldlevel'	options.txt	/*'foldlevel'*
'foldlevelstart'	options.txt	/*'foldlevelstart'*
'foldmarker'	options.txt	/*'foldmarker'*
'foldmethod'	options.txt	/*'foldmethod'*
'foldminlines'	options.txt	/*'foldminlines'*
'foldnestmax'	options.txt	/*'foldnestmax'*
'foldopen'	options.txt	/*'foldopen'*
'foldtext'	options.txt	/*'foldtext'*
'formatexpr'	options.txt	/*'formatexpr'*
'formatlistpat'	options.txt	/*'formatlistpat'*
'formatoptions'	options.txt	/*'formatoptions'*
'formatprg'	options.txt	/*'formatprg'*
'fp'	options.txt	/*'fp'*
'fs'	options.txt	/*'fs'*
'fsync'	options.txt	/*'fsync'*
'ft'	options.txt	/*'ft'*
'gcr'	options.txt	/*'gcr'*
'gd'	options.txt	/*'gd'*
'gdefault'	options.txt	/*'gdefault'*
'gfm'	options.txt	/*'gfm'*
'gfn'	options.txt	/*'gfn'*
'gfs'	options.txt	/*'gfs'*
'gfw'	options.txt	/*'gfw'*
'ghr'	options.txt	/*'ghr'*
'go'	options.txt	/*'go'*
'go-A'	options.txt	/*'go-A'*
'go-F'	options.txt	/*'go-F'*
'go-L'	options.txt	/*'go-L'*
'go-M'	options.txt	/*'go-M'*
'go-P'	options.txt	/*'go-P'*
'go-R'	options.txt	/*'go-R'*
'go-T'	options.txt	/*'go-T'*
'go-a'	options.txt	/*'go-a'*
'go-b'	options.txt	/*'go-b'*
'go-c'	options.txt	/*'go-c'*
'go-e'	options.txt	/*'go-e'*
'go-f'	options.txt	/*'go-f'*
'go-g'	options.txt	/*'go-g'*
'go-h'	options.txt	/*'go-h'*
'go-i'	options.txt	/*'go-i'*
'go-l'	options.txt	/*'go-l'*
'go-m'	options.txt	/*'go-m'*
'go-p'	options.txt	/*'go-p'*
'go-r'	options.txt	/*'go-r'*
'go-t'	options.txt	/*'go-t'*
'go-v'	options.txt	/*'go-v'*
'gp'	options.txt	/*'gp'*
'gr'	vi_diff.txt	/*'gr'*
'graphic'	vi_diff.txt	/*'graphic'*
'grepformat'	options.txt	/*'grepformat'*
'grepprg'	options.txt	/*'grepprg'*
'gtl'	options.txt	/*'gtl'*
'gtt'	options.txt	/*'gtt'*
'guicursor'	options.txt	/*'guicursor'*
'guifont'	options.txt	/*'guifont'*
'guifontset'	options.txt	/*'guifontset'*
'guifontwide'	options.txt	/*'guifontwide'*
'guiheadroom'	options.txt	/*'guiheadroom'*
'guioptions'	options.txt	/*'guioptions'*
'guipty'	options.txt	/*'guipty'*
'guitablabel'	options.txt	/*'guitablabel'*
'guitabtooltip'	options.txt	/*'guitabtooltip'*
'hardtabs'	vi_diff.txt	/*'hardtabs'*
'helpfile'	options.txt	/*'helpfile'*
'helpheight'	options.txt	/*'helpheight'*
'helplang'	options.txt	/*'helplang'*
'hf'	options.txt	/*'hf'*
'hh'	options.txt	/*'hh'*
'hi'	options.txt	/*'hi'*
'hid'	options.txt	/*'hid'*
'hidden'	options.txt	/*'hidden'*
'highlight'	options.txt	/*'highlight'*
'history'	options.txt	/*'history'*
'hk'	options.txt	/*'hk'*
'hkmap'	options.txt	/*'hkmap'*
'hkmapp'	options.txt	/*'hkmapp'*
'hkp'	options.txt	/*'hkp'*
'hl'	options.txt	/*'hl'*
'hlg'	options.txt	/*'hlg'*
'hls'	options.txt	/*'hls'*
'hlsearch'	options.txt	/*'hlsearch'*
'ht'	vi_diff.txt	/*'ht'*
'ic'	options.txt	/*'ic'*
'icon'	options.txt	/*'icon'*
'iconstring'	options.txt	/*'iconstring'*
'ignorecase'	options.txt	/*'ignorecase'*
'im'	options.txt	/*'im'*
'imactivatefunc'	options.txt	/*'imactivatefunc'*
'imactivatekey'	options.txt	/*'imactivatekey'*
'imaf'	options.txt	/*'imaf'*
'imak'	options.txt	/*'imak'*
'imc'	options.txt	/*'imc'*
'imcmdline'	options.txt	/*'imcmdline'*
'imd'	options.txt	/*'imd'*
'imdisable'	options.txt	/*'imdisable'*
'imi'	options.txt	/*'imi'*
'iminsert'	options.txt	/*'iminsert'*
'ims'	options.txt	/*'ims'*
'imsearch'	options.txt	/*'imsearch'*
'imsf'	options.txt	/*'imsf'*
'imstatusfunc'	options.txt	/*'imstatusfunc'*
'inc'	options.txt	/*'inc'*
'include'	options.txt	/*'include'*
'includeexpr'	options.txt	/*'includeexpr'*
'incsearch'	options.txt	/*'incsearch'*
'inde'	options.txt	/*'inde'*
'indentexpr'	options.txt	/*'indentexpr'*
'indentkeys'	options.txt	/*'indentkeys'*
'indk'	options.txt	/*'indk'*
'inex'	options.txt	/*'inex'*
'inf'	options.txt	/*'inf'*
'infercase'	options.txt	/*'infercase'*
'insertmode'	options.txt	/*'insertmode'*
'is'	options.txt	/*'is'*
'isf'	options.txt	/*'isf'*
'isfname'	options.txt	/*'isfname'*
'isi'	options.txt	/*'isi'*
'isident'	options.txt	/*'isident'*
'isk'	options.txt	/*'isk'*
'iskeyword'	options.txt	/*'iskeyword'*
'isp'	options.txt	/*'isp'*
'isprint'	options.txt	/*'isprint'*
'joinspaces'	options.txt	/*'joinspaces'*
'js'	options.txt	/*'js'*
'key'	options.txt	/*'key'*
'keymap'	options.txt	/*'keymap'*
'keymodel'	options.txt	/*'keymodel'*
'keywordprg'	options.txt	/*'keywordprg'*
'km'	options.txt	/*'km'*
'kmp'	options.txt	/*'kmp'*
'kp'	options.txt	/*'kp'*
'langmap'	options.txt	/*'langmap'*
'langmenu'	options.txt	/*'langmenu'*
'langnoremap'	options.txt	/*'langnoremap'*
'langremap'	options.txt	/*'langremap'*
'laststatus'	options.txt	/*'laststatus'*
'lazyredraw'	options.txt	/*'lazyredraw'*
'lbr'	options.txt	/*'lbr'*
'lcs'	options.txt	/*'lcs'*
'linebreak'	options.txt	/*'linebreak'*
'lines'	options.txt	/*'lines'*
'linespace'	options.txt	/*'linespace'*
'lisp'	options.txt	/*'lisp'*
'lispwords'	options.txt	/*'lispwords'*
'list'	options.txt	/*'list'*
'listchars'	options.txt	/*'listchars'*
'lm'	options.txt	/*'lm'*
'lmap'	options.txt	/*'lmap'*
'lnr'	options.txt	/*'lnr'*
'loadplugins'	options.txt	/*'loadplugins'*
'lpl'	options.txt	/*'lpl'*
'lrm'	options.txt	/*'lrm'*
'ls'	options.txt	/*'ls'*
'lsp'	options.txt	/*'lsp'*
'luadll'	options.txt	/*'luadll'*
'lw'	options.txt	/*'lw'*
'lz'	options.txt	/*'lz'*
'ma'	options.txt	/*'ma'*
'macatsui'	options.txt	/*'macatsui'*
'magic'	options.txt	/*'magic'*
'makeef'	options.txt	/*'makeef'*
'makeprg'	options.txt	/*'makeprg'*
'mat'	options.txt	/*'mat'*
'matchpairs'	options.txt	/*'matchpairs'*
'matchtime'	options.txt	/*'matchtime'*
'maxcombine'	options.txt	/*'maxcombine'*
'maxfuncdepth'	options.txt	/*'maxfuncdepth'*
'maxmapdepth'	options.txt	/*'maxmapdepth'*
'maxmem'	options.txt	/*'maxmem'*
'maxmempattern'	options.txt	/*'maxmempattern'*
'maxmemtot'	options.txt	/*'maxmemtot'*
'mco'	options.txt	/*'mco'*
'mef'	options.txt	/*'mef'*
'menuitems'	options.txt	/*'menuitems'*
'mesg'	vi_diff.txt	/*'mesg'*
'mfd'	options.txt	/*'mfd'*
'mh'	options.txt	/*'mh'*
'mis'	options.txt	/*'mis'*
'mkspellmem'	options.txt	/*'mkspellmem'*
'ml'	options.txt	/*'ml'*
'mls'	options.txt	/*'mls'*
'mm'	options.txt	/*'mm'*
'mmd'	options.txt	/*'mmd'*
'mmp'	options.txt	/*'mmp'*
'mmt'	options.txt	/*'mmt'*
'mod'	options.txt	/*'mod'*
'modeline'	options.txt	/*'modeline'*
'modelines'	options.txt	/*'modelines'*
'modifiable'	options.txt	/*'modifiable'*
'modified'	options.txt	/*'modified'*
'more'	options.txt	/*'more'*
'mouse'	options.txt	/*'mouse'*
'mousef'	options.txt	/*'mousef'*
'mousefocus'	options.txt	/*'mousefocus'*
'mousehide'	options.txt	/*'mousehide'*
'mousem'	options.txt	/*'mousem'*
'mousemodel'	options.txt	/*'mousemodel'*
'mouses'	options.txt	/*'mouses'*
'mouseshape'	options.txt	/*'mouseshape'*
'mouset'	options.txt	/*'mouset'*
'mousetime'	options.txt	/*'mousetime'*
'mp'	options.txt	/*'mp'*
'mps'	options.txt	/*'mps'*
'msm'	options.txt	/*'msm'*
'mzq'	options.txt	/*'mzq'*
'mzquantum'	options.txt	/*'mzquantum'*
'nf'	options.txt	/*'nf'*
'noacd'	options.txt	/*'noacd'*
'noai'	options.txt	/*'noai'*
'noakm'	options.txt	/*'noakm'*
'noallowrevins'	options.txt	/*'noallowrevins'*
'noaltkeymap'	options.txt	/*'noaltkeymap'*
'noanti'	options.txt	/*'noanti'*
'noantialias'	options.txt	/*'noantialias'*
'noar'	options.txt	/*'noar'*
'noarab'	options.txt	/*'noarab'*
'noarabic'	options.txt	/*'noarabic'*
'noarabicshape'	options.txt	/*'noarabicshape'*
'noari'	options.txt	/*'noari'*
'noarshape'	options.txt	/*'noarshape'*
'noas'	todo.txt	/*'noas'*
'noautochdir'	options.txt	/*'noautochdir'*
'noautoindent'	options.txt	/*'noautoindent'*
'noautoread'	options.txt	/*'noautoread'*
'noautosave'	todo.txt	/*'noautosave'*
'noautowrite'	options.txt	/*'noautowrite'*
'noautowriteall'	options.txt	/*'noautowriteall'*
'noaw'	options.txt	/*'noaw'*
'noawa'	options.txt	/*'noawa'*
'nobackup'	options.txt	/*'nobackup'*
'noballooneval'	options.txt	/*'noballooneval'*
'nobeval'	options.txt	/*'nobeval'*
'nobin'	options.txt	/*'nobin'*
'nobinary'	options.txt	/*'nobinary'*
'nobiosk'	options.txt	/*'nobiosk'*
'nobioskey'	options.txt	/*'nobioskey'*
'nobk'	options.txt	/*'nobk'*
'nobl'	options.txt	/*'nobl'*
'nobomb'	options.txt	/*'nobomb'*
'nobreakindent'	options.txt	/*'nobreakindent'*
'nobri'	options.txt	/*'nobri'*
'nobuflisted'	options.txt	/*'nobuflisted'*
'nocf'	options.txt	/*'nocf'*
'noci'	options.txt	/*'noci'*
'nocin'	options.txt	/*'nocin'*
'nocindent'	options.txt	/*'nocindent'*
'nocompatible'	options.txt	/*'nocompatible'*
'noconfirm'	options.txt	/*'noconfirm'*
'noconsk'	options.txt	/*'noconsk'*
'noconskey'	options.txt	/*'noconskey'*
'nocopyindent'	options.txt	/*'nocopyindent'*
'nocp'	options.txt	/*'nocp'*
'nocrb'	options.txt	/*'nocrb'*
'nocscoperelative'	options.txt	/*'nocscoperelative'*
'nocscopetag'	options.txt	/*'nocscopetag'*
'nocscopeverbose'	options.txt	/*'nocscopeverbose'*
'nocsre'	options.txt	/*'nocsre'*
'nocst'	options.txt	/*'nocst'*
'nocsverb'	options.txt	/*'nocsverb'*
'nocuc'	options.txt	/*'nocuc'*
'nocul'	options.txt	/*'nocul'*
'nocursorbind'	options.txt	/*'nocursorbind'*
'nocursorcolumn'	options.txt	/*'nocursorcolumn'*
'nocursorline'	options.txt	/*'nocursorline'*
'nodeco'	options.txt	/*'nodeco'*
'nodelcombine'	options.txt	/*'nodelcombine'*
'nodg'	options.txt	/*'nodg'*
'nodiff'	options.txt	/*'nodiff'*
'nodigraph'	options.txt	/*'nodigraph'*
'noea'	options.txt	/*'noea'*
'noeb'	options.txt	/*'noeb'*
'noed'	options.txt	/*'noed'*
'noedcompatible'	options.txt	/*'noedcompatible'*
'noek'	options.txt	/*'noek'*
'noemo'	options.txt	/*'noemo'*
'noemoji'	options.txt	/*'noemoji'*
'noendofline'	options.txt	/*'noendofline'*
'noeol'	options.txt	/*'noeol'*
'noequalalways'	options.txt	/*'noequalalways'*
'noerrorbells'	options.txt	/*'noerrorbells'*
'noesckeys'	options.txt	/*'noesckeys'*
'noet'	options.txt	/*'noet'*
'noex'	options.txt	/*'noex'*
'noexpandtab'	options.txt	/*'noexpandtab'*
'noexrc'	options.txt	/*'noexrc'*
'nofen'	options.txt	/*'nofen'*
'nofic'	options.txt	/*'nofic'*
'nofileignorecase'	options.txt	/*'nofileignorecase'*
'nofixendofline'	options.txt	/*'nofixendofline'*
'nofixeol'	options.txt	/*'nofixeol'*
'nofk'	options.txt	/*'nofk'*
'nofkmap'	options.txt	/*'nofkmap'*
'nofoldenable'	options.txt	/*'nofoldenable'*
'nofs'	options.txt	/*'nofs'*
'nofsync'	options.txt	/*'nofsync'*
'nogd'	options.txt	/*'nogd'*
'nogdefault'	options.txt	/*'nogdefault'*
'noguipty'	options.txt	/*'noguipty'*
'nohid'	options.txt	/*'nohid'*
'nohidden'	options.txt	/*'nohidden'*
'nohk'	options.txt	/*'nohk'*
'nohkmap'	options.txt	/*'nohkmap'*
'nohkmapp'	options.txt	/*'nohkmapp'*
'nohkp'	options.txt	/*'nohkp'*
'nohls'	options.txt	/*'nohls'*
'nohlsearch'	options.txt	/*'nohlsearch'*
'noic'	options.txt	/*'noic'*
'noicon'	options.txt	/*'noicon'*
'noignorecase'	options.txt	/*'noignorecase'*
'noim'	options.txt	/*'noim'*
'noimc'	options.txt	/*'noimc'*
'noimcmdline'	options.txt	/*'noimcmdline'*
'noimd'	options.txt	/*'noimd'*
'noimdisable'	options.txt	/*'noimdisable'*
'noincsearch'	options.txt	/*'noincsearch'*
'noinf'	options.txt	/*'noinf'*
'noinfercase'	options.txt	/*'noinfercase'*
'noinsertmode'	options.txt	/*'noinsertmode'*
'nois'	options.txt	/*'nois'*
'nojoinspaces'	options.txt	/*'nojoinspaces'*
'nojs'	options.txt	/*'nojs'*
'nolangnoremap'	options.txt	/*'nolangnoremap'*
'nolangremap'	options.txt	/*'nolangremap'*
'nolazyredraw'	options.txt	/*'nolazyredraw'*
'nolbr'	options.txt	/*'nolbr'*
'nolinebreak'	options.txt	/*'nolinebreak'*
'nolisp'	options.txt	/*'nolisp'*
'nolist'	options.txt	/*'nolist'*
'nolnr'	options.txt	/*'nolnr'*
'noloadplugins'	options.txt	/*'noloadplugins'*
'nolpl'	options.txt	/*'nolpl'*
'nolrm'	options.txt	/*'nolrm'*
'nolz'	options.txt	/*'nolz'*
'noma'	options.txt	/*'noma'*
'nomacatsui'	options.txt	/*'nomacatsui'*
'nomagic'	options.txt	/*'nomagic'*
'nomh'	options.txt	/*'nomh'*
'noml'	options.txt	/*'noml'*
'nomod'	options.txt	/*'nomod'*
'nomodeline'	options.txt	/*'nomodeline'*
'nomodifiable'	options.txt	/*'nomodifiable'*
'nomodified'	options.txt	/*'nomodified'*
'nomore'	options.txt	/*'nomore'*
'nomousef'	options.txt	/*'nomousef'*
'nomousefocus'	options.txt	/*'nomousefocus'*
'nomousehide'	options.txt	/*'nomousehide'*
'nonu'	options.txt	/*'nonu'*
'nonumber'	options.txt	/*'nonumber'*
'noodev'	options.txt	/*'noodev'*
'noopendevice'	options.txt	/*'noopendevice'*
'nopaste'	options.txt	/*'nopaste'*
'nopi'	options.txt	/*'nopi'*
'nopreserveindent'	options.txt	/*'nopreserveindent'*
'nopreviewwindow'	options.txt	/*'nopreviewwindow'*
'noprompt'	options.txt	/*'noprompt'*
'nopvw'	options.txt	/*'nopvw'*
'noreadonly'	options.txt	/*'noreadonly'*
'norelativenumber'	options.txt	/*'norelativenumber'*
'noremap'	options.txt	/*'noremap'*
'norestorescreen'	options.txt	/*'norestorescreen'*
'norevins'	options.txt	/*'norevins'*
'nori'	options.txt	/*'nori'*
'norightleft'	options.txt	/*'norightleft'*
'norl'	options.txt	/*'norl'*
'nornu'	options.txt	/*'nornu'*
'noro'	options.txt	/*'noro'*
'nors'	options.txt	/*'nors'*
'noru'	options.txt	/*'noru'*
'noruler'	options.txt	/*'noruler'*
'nosb'	options.txt	/*'nosb'*
'nosc'	options.txt	/*'nosc'*
'noscb'	options.txt	/*'noscb'*
'noscrollbind'	options.txt	/*'noscrollbind'*
'noscs'	options.txt	/*'noscs'*
'nosecure'	options.txt	/*'nosecure'*
'nosft'	options.txt	/*'nosft'*
'noshellslash'	options.txt	/*'noshellslash'*
'noshelltemp'	options.txt	/*'noshelltemp'*
'noshiftround'	options.txt	/*'noshiftround'*
'noshortname'	options.txt	/*'noshortname'*
'noshowcmd'	options.txt	/*'noshowcmd'*
'noshowfulltag'	options.txt	/*'noshowfulltag'*
'noshowmatch'	options.txt	/*'noshowmatch'*
'noshowmode'	options.txt	/*'noshowmode'*
'nosi'	options.txt	/*'nosi'*
'nosm'	options.txt	/*'nosm'*
'nosmartcase'	options.txt	/*'nosmartcase'*
'nosmartindent'	options.txt	/*'nosmartindent'*
'nosmarttab'	options.txt	/*'nosmarttab'*
'nosmd'	options.txt	/*'nosmd'*
'nosn'	options.txt	/*'nosn'*
'nosol'	options.txt	/*'nosol'*
'nospell'	options.txt	/*'nospell'*
'nosplitbelow'	options.txt	/*'nosplitbelow'*
'nosplitright'	options.txt	/*'nosplitright'*
'nospr'	options.txt	/*'nospr'*
'nosr'	options.txt	/*'nosr'*
'nossl'	options.txt	/*'nossl'*
'nosta'	options.txt	/*'nosta'*
'nostartofline'	options.txt	/*'nostartofline'*
'nostmp'	options.txt	/*'nostmp'*
'noswapfile'	options.txt	/*'noswapfile'*
'noswf'	options.txt	/*'noswf'*
'nota'	options.txt	/*'nota'*
'notagbsearch'	options.txt	/*'notagbsearch'*
'notagrelative'	options.txt	/*'notagrelative'*
'notagstack'	options.txt	/*'notagstack'*
'notbi'	options.txt	/*'notbi'*
'notbidi'	options.txt	/*'notbidi'*
'notbs'	options.txt	/*'notbs'*
'notermbidi'	options.txt	/*'notermbidi'*
'noterse'	options.txt	/*'noterse'*
'notextauto'	options.txt	/*'notextauto'*
'notextmode'	options.txt	/*'notextmode'*
'notf'	options.txt	/*'notf'*
'notgst'	options.txt	/*'notgst'*
'notildeop'	options.txt	/*'notildeop'*
'notimeout'	options.txt	/*'notimeout'*
'notitle'	options.txt	/*'notitle'*
'noto'	options.txt	/*'noto'*
'notop'	options.txt	/*'notop'*
'notr'	options.txt	/*'notr'*
'nottimeout'	options.txt	/*'nottimeout'*
'nottybuiltin'	options.txt	/*'nottybuiltin'*
'nottyfast'	options.txt	/*'nottyfast'*
'notx'	options.txt	/*'notx'*
'noudf'	options.txt	/*'noudf'*
'noundofile'	options.txt	/*'noundofile'*
'novb'	options.txt	/*'novb'*
'novice'	vi_diff.txt	/*'novice'*
'novisualbell'	options.txt	/*'novisualbell'*
'nowa'	options.txt	/*'nowa'*
'nowarn'	options.txt	/*'nowarn'*
'nowb'	options.txt	/*'nowb'*
'noweirdinvert'	options.txt	/*'noweirdinvert'*
'nowfh'	options.txt	/*'nowfh'*
'nowfw'	options.txt	/*'nowfw'*
'nowic'	options.txt	/*'nowic'*
'nowildignorecase'	options.txt	/*'nowildignorecase'*
'nowildmenu'	options.txt	/*'nowildmenu'*
'nowinfixheight'	options.txt	/*'nowinfixheight'*
'nowinfixwidth'	options.txt	/*'nowinfixwidth'*
'nowiv'	options.txt	/*'nowiv'*
'nowmnu'	options.txt	/*'nowmnu'*
'nowrap'	options.txt	/*'nowrap'*
'nowrapscan'	options.txt	/*'nowrapscan'*
'nowrite'	options.txt	/*'nowrite'*
'nowriteany'	options.txt	/*'nowriteany'*
'nowritebackup'	options.txt	/*'nowritebackup'*
'nows'	options.txt	/*'nows'*
'nrformats'	options.txt	/*'nrformats'*
'nu'	options.txt	/*'nu'*
'number'	options.txt	/*'number'*
'numberwidth'	options.txt	/*'numberwidth'*
'nuw'	options.txt	/*'nuw'*
'odev'	options.txt	/*'odev'*
'oft'	options.txt	/*'oft'*
'ofu'	options.txt	/*'ofu'*
'omnifunc'	options.txt	/*'omnifunc'*
'op'	vi_diff.txt	/*'op'*
'open'	vi_diff.txt	/*'open'*
'opendevice'	options.txt	/*'opendevice'*
'operatorfunc'	options.txt	/*'operatorfunc'*
'opfunc'	options.txt	/*'opfunc'*
'optimize'	vi_diff.txt	/*'optimize'*
'option'	intro.txt	/*'option'*
'osfiletype'	options.txt	/*'osfiletype'*
'pa'	options.txt	/*'pa'*
'packpath'	options.txt	/*'packpath'*
'para'	options.txt	/*'para'*
'paragraphs'	options.txt	/*'paragraphs'*
'paste'	options.txt	/*'paste'*
'pastetoggle'	options.txt	/*'pastetoggle'*
'patchexpr'	options.txt	/*'patchexpr'*
'patchmode'	options.txt	/*'patchmode'*
'path'	options.txt	/*'path'*
'pdev'	options.txt	/*'pdev'*
'penc'	options.txt	/*'penc'*
'perldll'	options.txt	/*'perldll'*
'pex'	options.txt	/*'pex'*
'pexpr'	options.txt	/*'pexpr'*
'pfn'	options.txt	/*'pfn'*
'ph'	options.txt	/*'ph'*
'pheader'	options.txt	/*'pheader'*
'pi'	options.txt	/*'pi'*
'pm'	options.txt	/*'pm'*
'pmbcs'	options.txt	/*'pmbcs'*
'pmbfn'	options.txt	/*'pmbfn'*
'popt'	options.txt	/*'popt'*
'pp'	options.txt	/*'pp'*
'preserveindent'	options.txt	/*'preserveindent'*
'previewheight'	options.txt	/*'previewheight'*
'previewwindow'	options.txt	/*'previewwindow'*
'printdevice'	options.txt	/*'printdevice'*
'printencoding'	options.txt	/*'printencoding'*
'printexpr'	options.txt	/*'printexpr'*
'printfont'	options.txt	/*'printfont'*
'printheader'	options.txt	/*'printheader'*
'printmbcharset'	options.txt	/*'printmbcharset'*
'printmbfont'	options.txt	/*'printmbfont'*
'printoptions'	options.txt	/*'printoptions'*
'prompt'	options.txt	/*'prompt'*
'pt'	options.txt	/*'pt'*
'pumheight'	options.txt	/*'pumheight'*
'pvh'	options.txt	/*'pvh'*
'pvw'	options.txt	/*'pvw'*
'pythondll'	options.txt	/*'pythondll'*
'pythonthreedll'	options.txt	/*'pythonthreedll'*
'qe'	options.txt	/*'qe'*
'quote	motion.txt	/*'quote*
'quoteescape'	options.txt	/*'quoteescape'*
'rdt'	options.txt	/*'rdt'*
're'	options.txt	/*'re'*
'readonly'	options.txt	/*'readonly'*
'redraw'	vi_diff.txt	/*'redraw'*
'redrawtime'	options.txt	/*'redrawtime'*
'regexpengine'	options.txt	/*'regexpengine'*
'relativenumber'	options.txt	/*'relativenumber'*
'remap'	options.txt	/*'remap'*
'renderoptions'	options.txt	/*'renderoptions'*
'report'	options.txt	/*'report'*
'restorescreen'	options.txt	/*'restorescreen'*
'revins'	options.txt	/*'revins'*
'ri'	options.txt	/*'ri'*
'rightleft'	options.txt	/*'rightleft'*
'rightleftcmd'	options.txt	/*'rightleftcmd'*
'rl'	options.txt	/*'rl'*
'rlc'	options.txt	/*'rlc'*
'rnu'	options.txt	/*'rnu'*
'ro'	options.txt	/*'ro'*
'rop'	options.txt	/*'rop'*
'rs'	options.txt	/*'rs'*
'rtp'	options.txt	/*'rtp'*
'ru'	options.txt	/*'ru'*
'rubydll'	options.txt	/*'rubydll'*
'ruf'	options.txt	/*'ruf'*
'ruler'	options.txt	/*'ruler'*
'rulerformat'	options.txt	/*'rulerformat'*
'runtimepath'	options.txt	/*'runtimepath'*
'sb'	options.txt	/*'sb'*
'sbo'	options.txt	/*'sbo'*
'sbr'	options.txt	/*'sbr'*
'sc'	options.txt	/*'sc'*
'scb'	options.txt	/*'scb'*
'scl'	options.txt	/*'scl'*
'scr'	options.txt	/*'scr'*
'scroll'	options.txt	/*'scroll'*
'scrollbind'	options.txt	/*'scrollbind'*
'scrolljump'	options.txt	/*'scrolljump'*
'scrolloff'	options.txt	/*'scrolloff'*
'scrollopt'	options.txt	/*'scrollopt'*
'scs'	options.txt	/*'scs'*
'sect'	options.txt	/*'sect'*
'sections'	options.txt	/*'sections'*
'secure'	options.txt	/*'secure'*
'sel'	options.txt	/*'sel'*
'selection'	options.txt	/*'selection'*
'selectmode'	options.txt	/*'selectmode'*
'sessionoptions'	options.txt	/*'sessionoptions'*
'sft'	options.txt	/*'sft'*
'sh'	options.txt	/*'sh'*
'shcf'	options.txt	/*'shcf'*
'shell'	options.txt	/*'shell'*
'shellcmdflag'	options.txt	/*'shellcmdflag'*
'shellpipe'	options.txt	/*'shellpipe'*
'shellquote'	options.txt	/*'shellquote'*
'shellredir'	options.txt	/*'shellredir'*
'shellslash'	options.txt	/*'shellslash'*
'shelltemp'	options.txt	/*'shelltemp'*
'shelltype'	options.txt	/*'shelltype'*
'shellxescape'	options.txt	/*'shellxescape'*
'shellxquote'	options.txt	/*'shellxquote'*
'shiftround'	options.txt	/*'shiftround'*
'shiftwidth'	options.txt	/*'shiftwidth'*
'shm'	options.txt	/*'shm'*
'shortmess'	options.txt	/*'shortmess'*
'shortname'	options.txt	/*'shortname'*
'showbreak'	options.txt	/*'showbreak'*
'showcmd'	options.txt	/*'showcmd'*
'showfulltag'	options.txt	/*'showfulltag'*
'showmatch'	options.txt	/*'showmatch'*
'showmode'	options.txt	/*'showmode'*
'showtabline'	options.txt	/*'showtabline'*
'shq'	options.txt	/*'shq'*
'si'	options.txt	/*'si'*
'sidescroll'	options.txt	/*'sidescroll'*
'sidescrolloff'	options.txt	/*'sidescrolloff'*
'signcolumn'	options.txt	/*'signcolumn'*
'siso'	options.txt	/*'siso'*
'sj'	options.txt	/*'sj'*
'slm'	options.txt	/*'slm'*
'slow'	vi_diff.txt	/*'slow'*
'slowopen'	vi_diff.txt	/*'slowopen'*
'sm'	options.txt	/*'sm'*
'smartcase'	options.txt	/*'smartcase'*
'smartindent'	options.txt	/*'smartindent'*
'smarttab'	options.txt	/*'smarttab'*
'smc'	options.txt	/*'smc'*
'smd'	options.txt	/*'smd'*
'sn'	options.txt	/*'sn'*
'so'	options.txt	/*'so'*
'softtabstop'	options.txt	/*'softtabstop'*
'sol'	options.txt	/*'sol'*
'sourceany'	vi_diff.txt	/*'sourceany'*
'sp'	options.txt	/*'sp'*
'spc'	options.txt	/*'spc'*
'spell'	options.txt	/*'spell'*
'spellcapcheck'	options.txt	/*'spellcapcheck'*
'spellfile'	options.txt	/*'spellfile'*
'spelllang'	options.txt	/*'spelllang'*
'spellsuggest'	options.txt	/*'spellsuggest'*
'spf'	options.txt	/*'spf'*
'spl'	options.txt	/*'spl'*
'splitbelow'	options.txt	/*'splitbelow'*
'splitright'	options.txt	/*'splitright'*
'spr'	options.txt	/*'spr'*
'sps'	options.txt	/*'sps'*
'sr'	options.txt	/*'sr'*
'srr'	options.txt	/*'srr'*
'ss'	options.txt	/*'ss'*
'ssl'	options.txt	/*'ssl'*
'ssop'	options.txt	/*'ssop'*
'st'	options.txt	/*'st'*
'sta'	options.txt	/*'sta'*
'stal'	options.txt	/*'stal'*
'startofline'	options.txt	/*'startofline'*
'statusline'	options.txt	/*'statusline'*
'stl'	options.txt	/*'stl'*
'stmp'	options.txt	/*'stmp'*
'sts'	options.txt	/*'sts'*
'su'	options.txt	/*'su'*
'sua'	options.txt	/*'sua'*
'suffixes'	options.txt	/*'suffixes'*
'suffixesadd'	options.txt	/*'suffixesadd'*
'sw'	options.txt	/*'sw'*
'swapfile'	options.txt	/*'swapfile'*
'swapsync'	options.txt	/*'swapsync'*
'swb'	options.txt	/*'swb'*
'swf'	options.txt	/*'swf'*
'switchbuf'	options.txt	/*'switchbuf'*
'sws'	options.txt	/*'sws'*
'sxe'	options.txt	/*'sxe'*
'sxq'	options.txt	/*'sxq'*
'syn'	options.txt	/*'syn'*
'synmaxcol'	options.txt	/*'synmaxcol'*
'syntax'	options.txt	/*'syntax'*
't_#2'	term.txt	/*'t_#2'*
't_#4'	term.txt	/*'t_#4'*
't_%1'	term.txt	/*'t_%1'*
't_%i'	term.txt	/*'t_%i'*
't_&8'	term.txt	/*'t_&8'*
't_8b'	term.txt	/*'t_8b'*
't_8f'	term.txt	/*'t_8f'*
't_@7'	term.txt	/*'t_@7'*
't_AB'	term.txt	/*'t_AB'*
't_AF'	term.txt	/*'t_AF'*
't_AL'	term.txt	/*'t_AL'*
't_CS'	term.txt	/*'t_CS'*
't_CV'	term.txt	/*'t_CV'*
't_Ce'	term.txt	/*'t_Ce'*
't_Co'	term.txt	/*'t_Co'*
't_Cs'	term.txt	/*'t_Cs'*
't_DL'	term.txt	/*'t_DL'*
't_EI'	term.txt	/*'t_EI'*
't_F1'	term.txt	/*'t_F1'*
't_F2'	term.txt	/*'t_F2'*
't_F3'	term.txt	/*'t_F3'*
't_F4'	term.txt	/*'t_F4'*
't_F5'	term.txt	/*'t_F5'*
't_F6'	term.txt	/*'t_F6'*
't_F7'	term.txt	/*'t_F7'*
't_F8'	term.txt	/*'t_F8'*
't_F9'	term.txt	/*'t_F9'*
't_IE'	term.txt	/*'t_IE'*
't_IS'	term.txt	/*'t_IS'*
't_K1'	term.txt	/*'t_K1'*
't_K3'	term.txt	/*'t_K3'*
't_K4'	term.txt	/*'t_K4'*
't_K5'	term.txt	/*'t_K5'*
't_K6'	term.txt	/*'t_K6'*
't_K7'	term.txt	/*'t_K7'*
't_K8'	term.txt	/*'t_K8'*
't_K9'	term.txt	/*'t_K9'*
't_KA'	term.txt	/*'t_KA'*
't_KB'	term.txt	/*'t_KB'*
't_KC'	term.txt	/*'t_KC'*
't_KD'	term.txt	/*'t_KD'*
't_KE'	term.txt	/*'t_KE'*
't_KF'	term.txt	/*'t_KF'*
't_KG'	term.txt	/*'t_KG'*
't_KH'	term.txt	/*'t_KH'*
't_KI'	term.txt	/*'t_KI'*
't_KJ'	term.txt	/*'t_KJ'*
't_KK'	term.txt	/*'t_KK'*
't_KL'	term.txt	/*'t_KL'*
't_RB'	term.txt	/*'t_RB'*
't_RI'	term.txt	/*'t_RI'*
't_RV'	term.txt	/*'t_RV'*
't_SI'	term.txt	/*'t_SI'*
't_SR'	term.txt	/*'t_SR'*
't_Sb'	term.txt	/*'t_Sb'*
't_Sf'	term.txt	/*'t_Sf'*
't_WP'	term.txt	/*'t_WP'*
't_WS'	term.txt	/*'t_WS'*
't_ZH'	term.txt	/*'t_ZH'*
't_ZR'	term.txt	/*'t_ZR'*
't_al'	term.txt	/*'t_al'*
't_bc'	term.txt	/*'t_bc'*
't_cd'	term.txt	/*'t_cd'*
't_ce'	term.txt	/*'t_ce'*
't_cl'	term.txt	/*'t_cl'*
't_cm'	term.txt	/*'t_cm'*
't_cs'	term.txt	/*'t_cs'*
't_da'	term.txt	/*'t_da'*
't_db'	term.txt	/*'t_db'*
't_dl'	term.txt	/*'t_dl'*
't_fs'	term.txt	/*'t_fs'*
't_k1'	term.txt	/*'t_k1'*
't_k2'	term.txt	/*'t_k2'*
't_k3'	term.txt	/*'t_k3'*
't_k4'	term.txt	/*'t_k4'*
't_k5'	term.txt	/*'t_k5'*
't_k6'	term.txt	/*'t_k6'*
't_k7'	term.txt	/*'t_k7'*
't_k8'	term.txt	/*'t_k8'*
't_k9'	term.txt	/*'t_k9'*
't_k;'	term.txt	/*'t_k;'*
't_kB'	term.txt	/*'t_kB'*
't_kD'	term.txt	/*'t_kD'*
't_kI'	term.txt	/*'t_kI'*
't_kN'	term.txt	/*'t_kN'*
't_kP'	term.txt	/*'t_kP'*
't_kb'	term.txt	/*'t_kb'*
't_kd'	term.txt	/*'t_kd'*
't_ke'	term.txt	/*'t_ke'*
't_kh'	term.txt	/*'t_kh'*
't_kl'	term.txt	/*'t_kl'*
't_kr'	term.txt	/*'t_kr'*
't_ks'	term.txt	/*'t_ks'*
't_ku'	term.txt	/*'t_ku'*
't_le'	term.txt	/*'t_le'*
't_mb'	term.txt	/*'t_mb'*
't_md'	term.txt	/*'t_md'*
't_me'	term.txt	/*'t_me'*
't_mr'	term.txt	/*'t_mr'*
't_ms'	term.txt	/*'t_ms'*
't_nd'	term.txt	/*'t_nd'*
't_op'	term.txt	/*'t_op'*
't_se'	term.txt	/*'t_se'*
't_so'	term.txt	/*'t_so'*
't_sr'	term.txt	/*'t_sr'*
't_star7'	term.txt	/*'t_star7'*
't_te'	term.txt	/*'t_te'*
't_ti'	term.txt	/*'t_ti'*
't_ts'	term.txt	/*'t_ts'*
't_u7'	term.txt	/*'t_u7'*
't_ue'	term.txt	/*'t_ue'*
't_us'	term.txt	/*'t_us'*
't_ut'	term.txt	/*'t_ut'*
't_vb'	term.txt	/*'t_vb'*
't_ve'	term.txt	/*'t_ve'*
't_vi'	term.txt	/*'t_vi'*
't_vs'	term.txt	/*'t_vs'*
't_xn'	term.txt	/*'t_xn'*
't_xs'	term.txt	/*'t_xs'*
'ta'	options.txt	/*'ta'*
'tabline'	options.txt	/*'tabline'*
'tabpagemax'	options.txt	/*'tabpagemax'*
'tabstop'	options.txt	/*'tabstop'*
'tag'	options.txt	/*'tag'*
'tagbsearch'	options.txt	/*'tagbsearch'*
'tagcase'	options.txt	/*'tagcase'*
'taglength'	options.txt	/*'taglength'*
'tagrelative'	options.txt	/*'tagrelative'*
'tags'	options.txt	/*'tags'*
'tagstack'	options.txt	/*'tagstack'*
'tal'	options.txt	/*'tal'*
'tb'	options.txt	/*'tb'*
'tbi'	options.txt	/*'tbi'*
'tbidi'	options.txt	/*'tbidi'*
'tbis'	options.txt	/*'tbis'*
'tbs'	options.txt	/*'tbs'*
'tc'	options.txt	/*'tc'*
'tcldll'	options.txt	/*'tcldll'*
'tenc'	options.txt	/*'tenc'*
'term'	options.txt	/*'term'*
'termbidi'	options.txt	/*'termbidi'*
'termencoding'	options.txt	/*'termencoding'*
'termguicolors'	options.txt	/*'termguicolors'*
'terse'	options.txt	/*'terse'*
'textauto'	options.txt	/*'textauto'*
'textmode'	options.txt	/*'textmode'*
'textwidth'	options.txt	/*'textwidth'*
'tf'	options.txt	/*'tf'*
'tgc'	options.txt	/*'tgc'*
'tgst'	options.txt	/*'tgst'*
'thesaurus'	options.txt	/*'thesaurus'*
'tildeop'	options.txt	/*'tildeop'*
'timeout'	options.txt	/*'timeout'*
'timeoutlen'	options.txt	/*'timeoutlen'*
'title'	options.txt	/*'title'*
'titlelen'	options.txt	/*'titlelen'*
'titleold'	options.txt	/*'titleold'*
'titlestring'	options.txt	/*'titlestring'*
'tl'	options.txt	/*'tl'*
'tm'	options.txt	/*'tm'*
'to'	options.txt	/*'to'*
'toolbar'	options.txt	/*'toolbar'*
'toolbariconsize'	options.txt	/*'toolbariconsize'*
'top'	options.txt	/*'top'*
'tpm'	options.txt	/*'tpm'*
'tr'	options.txt	/*'tr'*
'ts'	options.txt	/*'ts'*
'tsl'	options.txt	/*'tsl'*
'tsr'	options.txt	/*'tsr'*
'ttimeout'	options.txt	/*'ttimeout'*
'ttimeoutlen'	options.txt	/*'ttimeoutlen'*
'ttm'	options.txt	/*'ttm'*
'tty'	options.txt	/*'tty'*
'ttybuiltin'	options.txt	/*'ttybuiltin'*
'ttyfast'	options.txt	/*'ttyfast'*
'ttym'	options.txt	/*'ttym'*
'ttymouse'	options.txt	/*'ttymouse'*
'ttyscroll'	options.txt	/*'ttyscroll'*
'ttytype'	options.txt	/*'ttytype'*
'tw'	options.txt	/*'tw'*
'tx'	options.txt	/*'tx'*
'uc'	options.txt	/*'uc'*
'udf'	options.txt	/*'udf'*
'udir'	options.txt	/*'udir'*
'ul'	options.txt	/*'ul'*
'undodir'	options.txt	/*'undodir'*
'undofile'	options.txt	/*'undofile'*
'undolevels'	options.txt	/*'undolevels'*
'undoreload'	options.txt	/*'undoreload'*
'updatecount'	options.txt	/*'updatecount'*
'updatetime'	options.txt	/*'updatetime'*
'ur'	options.txt	/*'ur'*
'ut'	options.txt	/*'ut'*
'vb'	options.txt	/*'vb'*
'vbs'	options.txt	/*'vbs'*
'vdir'	options.txt	/*'vdir'*
've'	options.txt	/*'ve'*
'verbose'	options.txt	/*'verbose'*
'verbosefile'	options.txt	/*'verbosefile'*
'vfile'	options.txt	/*'vfile'*
'vi'	options.txt	/*'vi'*
'viewdir'	options.txt	/*'viewdir'*
'viewoptions'	options.txt	/*'viewoptions'*
'viminfo'	options.txt	/*'viminfo'*
'virtualedit'	options.txt	/*'virtualedit'*
'visualbell'	options.txt	/*'visualbell'*
'vop'	options.txt	/*'vop'*
'w1200'	vi_diff.txt	/*'w1200'*
'w300'	vi_diff.txt	/*'w300'*
'w9600'	vi_diff.txt	/*'w9600'*
'wa'	options.txt	/*'wa'*
'wak'	options.txt	/*'wak'*
'warn'	options.txt	/*'warn'*
'wb'	options.txt	/*'wb'*
'wc'	options.txt	/*'wc'*
'wcm'	options.txt	/*'wcm'*
'wd'	options.txt	/*'wd'*
'weirdinvert'	options.txt	/*'weirdinvert'*
'wfh'	options.txt	/*'wfh'*
'wfw'	options.txt	/*'wfw'*
'wh'	options.txt	/*'wh'*
'whichwrap'	options.txt	/*'whichwrap'*
'wi'	options.txt	/*'wi'*
'wic'	options.txt	/*'wic'*
'wig'	options.txt	/*'wig'*
'wildchar'	options.txt	/*'wildchar'*
'wildcharm'	options.txt	/*'wildcharm'*
'wildignore'	options.txt	/*'wildignore'*
'wildignorecase'	options.txt	/*'wildignorecase'*
'wildmenu'	options.txt	/*'wildmenu'*
'wildmode'	options.txt	/*'wildmode'*
'wildoptions'	options.txt	/*'wildoptions'*
'wim'	options.txt	/*'wim'*
'winaltkeys'	options.txt	/*'winaltkeys'*
'window'	options.txt	/*'window'*
'winfixheight'	options.txt	/*'winfixheight'*
'winfixwidth'	options.txt	/*'winfixwidth'*
'winheight'	options.txt	/*'winheight'*
'winminheight'	options.txt	/*'winminheight'*
'winminwidth'	options.txt	/*'winminwidth'*
'winwidth'	options.txt	/*'winwidth'*
'wiv'	options.txt	/*'wiv'*
'wiw'	options.txt	/*'wiw'*
'wm'	options.txt	/*'wm'*
'wmh'	options.txt	/*'wmh'*
'wmnu'	options.txt	/*'wmnu'*
'wmw'	options.txt	/*'wmw'*
'wop'	options.txt	/*'wop'*
'wrap'	options.txt	/*'wrap'*
'wrapmargin'	options.txt	/*'wrapmargin'*
'wrapscan'	options.txt	/*'wrapscan'*
'write'	options.txt	/*'write'*
'writeany'	options.txt	/*'writeany'*
'writebackup'	options.txt	/*'writebackup'*
'writedelay'	options.txt	/*'writedelay'*
'ws'	options.txt	/*'ws'*
'ww'	options.txt	/*'ww'*
'{	motion.txt	/*'{*
'}	motion.txt	/*'}*
(	motion.txt	/*(*
)	motion.txt	/*)*
+	motion.txt	/*+*
++bad	editing.txt	/*++bad*
++bin	editing.txt	/*++bin*
++builtin_terms	various.txt	/*++builtin_terms*
++edit	editing.txt	/*++edit*
++enc	editing.txt	/*++enc*
++ff	editing.txt	/*++ff*
++nobin	editing.txt	/*++nobin*
++opt	editing.txt	/*++opt*
+ARP	various.txt	/*+ARP*
+GUI_Athena	various.txt	/*+GUI_Athena*
+GUI_GTK	various.txt	/*+GUI_GTK*
+GUI_Motif	various.txt	/*+GUI_Motif*
+GUI_Photon	various.txt	/*+GUI_Photon*
+GUI_neXtaw	various.txt	/*+GUI_neXtaw*
+X11	various.txt	/*+X11*
+acl	various.txt	/*+acl*
+arabic	various.txt	/*+arabic*
+autocmd	various.txt	/*+autocmd*
+balloon_eval	various.txt	/*+balloon_eval*
+browse	various.txt	/*+browse*
+builtin_terms	various.txt	/*+builtin_terms*
+byte_offset	various.txt	/*+byte_offset*
+channel	various.txt	/*+channel*
+cindent	various.txt	/*+cindent*
+clientserver	various.txt	/*+clientserver*
+clipboard	various.txt	/*+clipboard*
+cmd	editing.txt	/*+cmd*
+cmdline_compl	various.txt	/*+cmdline_compl*
+cmdline_hist	various.txt	/*+cmdline_hist*
+cmdline_info	various.txt	/*+cmdline_info*
+comments	various.txt	/*+comments*
+conceal	various.txt	/*+conceal*
+cryptv	various.txt	/*+cryptv*
+cscope	various.txt	/*+cscope*
+cursorbind	various.txt	/*+cursorbind*
+cursorshape	various.txt	/*+cursorshape*
+debug	various.txt	/*+debug*
+dialog_con	various.txt	/*+dialog_con*
+dialog_con_gui	various.txt	/*+dialog_con_gui*
+dialog_gui	various.txt	/*+dialog_gui*
+diff	various.txt	/*+diff*
+digraphs	various.txt	/*+digraphs*
+directx	various.txt	/*+directx*
+dnd	various.txt	/*+dnd*
+emacs_tags	various.txt	/*+emacs_tags*
+eval	various.txt	/*+eval*
+ex_extra	various.txt	/*+ex_extra*
+extra_search	various.txt	/*+extra_search*
+farsi	various.txt	/*+farsi*
+feature-list	various.txt	/*+feature-list*
+file_in_path	various.txt	/*+file_in_path*
+find_in_path	various.txt	/*+find_in_path*
+float	various.txt	/*+float*
+folding	various.txt	/*+folding*
+footer	various.txt	/*+footer*
+fork	various.txt	/*+fork*
+gettext	various.txt	/*+gettext*
+hangul_input	various.txt	/*+hangul_input*
+iconv	various.txt	/*+iconv*
+iconv/dyn	various.txt	/*+iconv\/dyn*
+insert_expand	various.txt	/*+insert_expand*
+job	various.txt	/*+job*
+jumplist	various.txt	/*+jumplist*
+keymap	various.txt	/*+keymap*
+lambda	various.txt	/*+lambda*
+langmap	various.txt	/*+langmap*
+libcall	various.txt	/*+libcall*
+linebreak	various.txt	/*+linebreak*
+lispindent	various.txt	/*+lispindent*
+listcmds	various.txt	/*+listcmds*
+localmap	various.txt	/*+localmap*
+lua	various.txt	/*+lua*
+lua/dyn	various.txt	/*+lua\/dyn*
+menu	various.txt	/*+menu*
+mksession	various.txt	/*+mksession*
+modify_fname	various.txt	/*+modify_fname*
+mouse	various.txt	/*+mouse*
+mouse_dec	various.txt	/*+mouse_dec*
+mouse_gpm	various.txt	/*+mouse_gpm*
+mouse_jsbterm	various.txt	/*+mouse_jsbterm*
+mouse_netterm	various.txt	/*+mouse_netterm*
+mouse_pterm	various.txt	/*+mouse_pterm*
+mouse_sgr	various.txt	/*+mouse_sgr*
+mouse_sysmouse	various.txt	/*+mouse_sysmouse*
+mouse_urxvt	various.txt	/*+mouse_urxvt*
+mouse_xterm	various.txt	/*+mouse_xterm*
+mouseshape	various.txt	/*+mouseshape*
+multi_byte	various.txt	/*+multi_byte*
+multi_byte_ime	various.txt	/*+multi_byte_ime*
+multi_lang	various.txt	/*+multi_lang*
+mzscheme	various.txt	/*+mzscheme*
+mzscheme/dyn	various.txt	/*+mzscheme\/dyn*
+netbeans_intg	various.txt	/*+netbeans_intg*
+num64	various.txt	/*+num64*
+ole	various.txt	/*+ole*
+packages	various.txt	/*+packages*
+path_extra	various.txt	/*+path_extra*
+perl	various.txt	/*+perl*
+perl/dyn	various.txt	/*+perl\/dyn*
+persistent_undo	various.txt	/*+persistent_undo*
+postscript	various.txt	/*+postscript*
+printer	various.txt	/*+printer*
+profile	various.txt	/*+profile*
+python	various.txt	/*+python*
+python/dyn	various.txt	/*+python\/dyn*
+python3	various.txt	/*+python3*
+python3/dyn	various.txt	/*+python3\/dyn*
+quickfix	various.txt	/*+quickfix*
+reltime	various.txt	/*+reltime*
+rightleft	various.txt	/*+rightleft*
+ruby	various.txt	/*+ruby*
+ruby/dyn	various.txt	/*+ruby\/dyn*
+scrollbind	various.txt	/*+scrollbind*
+signs	various.txt	/*+signs*
+smartindent	various.txt	/*+smartindent*
+startuptime	various.txt	/*+startuptime*
+statusline	various.txt	/*+statusline*
+sun_workshop	various.txt	/*+sun_workshop*
+syntax	various.txt	/*+syntax*
+system()	various.txt	/*+system()*
+tag_any_white	various.txt	/*+tag_any_white*
+tag_binary	various.txt	/*+tag_binary*
+tag_old_static	various.txt	/*+tag_old_static*
+tcl	various.txt	/*+tcl*
+tcl/dyn	various.txt	/*+tcl\/dyn*
+termguicolors	various.txt	/*+termguicolors*
+terminfo	various.txt	/*+terminfo*
+termresponse	various.txt	/*+termresponse*
+textobjects	various.txt	/*+textobjects*
+tgetent	various.txt	/*+tgetent*
+timers	various.txt	/*+timers*
+title	various.txt	/*+title*
+toolbar	various.txt	/*+toolbar*
+user_commands	various.txt	/*+user_commands*
+vertsplit	various.txt	/*+vertsplit*
+viminfo	various.txt	/*+viminfo*
+virtualedit	various.txt	/*+virtualedit*
+visual	various.txt	/*+visual*
+visualextra	various.txt	/*+visualextra*
+vreplace	various.txt	/*+vreplace*
+wildignore	various.txt	/*+wildignore*
+wildmenu	various.txt	/*+wildmenu*
+windows	various.txt	/*+windows*
+writebackup	various.txt	/*+writebackup*
+xfontset	various.txt	/*+xfontset*
+xim	various.txt	/*+xim*
+xpm	various.txt	/*+xpm*
+xpm_w32	various.txt	/*+xpm_w32*
+xsmp	various.txt	/*+xsmp*
+xsmp_interact	various.txt	/*+xsmp_interact*
+xterm_clipboard	various.txt	/*+xterm_clipboard*
+xterm_save	various.txt	/*+xterm_save*
,	motion.txt	/*,*
-	motion.txt	/*-*
-+	starting.txt	/*-+*
-+/	starting.txt	/*-+\/*
-+c	starting.txt	/*-+c*
-+reverse	gui_x11.txt	/*-+reverse*
-+rv	gui_x11.txt	/*-+rv*
--	starting.txt	/*--*
---	starting.txt	/*---*
--cmd	starting.txt	/*--cmd*
--echo-wid	starting.txt	/*--echo-wid*
--help	starting.txt	/*--help*
--literal	starting.txt	/*--literal*
--nofork	starting.txt	/*--nofork*
--noplugin	starting.txt	/*--noplugin*
--not-a-term	starting.txt	/*--not-a-term*
--remote	remote.txt	/*--remote*
--remote-expr	remote.txt	/*--remote-expr*
--remote-send	remote.txt	/*--remote-send*
--remote-silent	remote.txt	/*--remote-silent*
--remote-tab	remote.txt	/*--remote-tab*
--remote-tab-silent	remote.txt	/*--remote-tab-silent*
--remote-tab-wait	remote.txt	/*--remote-tab-wait*
--remote-tab-wait-silent	remote.txt	/*--remote-tab-wait-silent*
--remote-wait	remote.txt	/*--remote-wait*
--remote-wait-silent	remote.txt	/*--remote-wait-silent*
--role	starting.txt	/*--role*
--serverlist	remote.txt	/*--serverlist*
--servername	remote.txt	/*--servername*
--socketid	starting.txt	/*--socketid*
--startuptime	starting.txt	/*--startuptime*
--ttyfail	starting.txt	/*--ttyfail*
--version	starting.txt	/*--version*
--windowid	starting.txt	/*--windowid*
-A	starting.txt	/*-A*
-C	starting.txt	/*-C*
-D	starting.txt	/*-D*
-E	starting.txt	/*-E*
-F	starting.txt	/*-F*
-H	starting.txt	/*-H*
-L	starting.txt	/*-L*
-M	starting.txt	/*-M*
-N	starting.txt	/*-N*
-O	starting.txt	/*-O*
-P	starting.txt	/*-P*
-R	starting.txt	/*-R*
-S	starting.txt	/*-S*
-T	starting.txt	/*-T*
-U	starting.txt	/*-U*
-V	starting.txt	/*-V*
-W	starting.txt	/*-W*
-X	starting.txt	/*-X*
-Z	starting.txt	/*-Z*
-b	starting.txt	/*-b*
-background	gui_x11.txt	/*-background*
-bg	gui_x11.txt	/*-bg*
-boldfont	gui_x11.txt	/*-boldfont*
-borderwidth	gui_x11.txt	/*-borderwidth*
-bw	gui_x11.txt	/*-bw*
-c	starting.txt	/*-c*
-d	starting.txt	/*-d*
-dev	starting.txt	/*-dev*
-display	gui_x11.txt	/*-display*
-e	starting.txt	/*-e*
-f	starting.txt	/*-f*
-fg	gui_x11.txt	/*-fg*
-file	starting.txt	/*-file*
-fn	gui_x11.txt	/*-fn*
-font	gui_x11.txt	/*-font*
-foreground	gui_x11.txt	/*-foreground*
-g	starting.txt	/*-g*
-geom	gui_x11.txt	/*-geom*
-geometry	gui_x11.txt	/*-geometry*
-geometry-example	gui_x11.txt	/*-geometry-example*
-gui	gui_x11.txt	/*-gui*
-h	starting.txt	/*-h*
-i	starting.txt	/*-i*
-iconic	gui_x11.txt	/*-iconic*
-italicfont	gui_x11.txt	/*-italicfont*
-l	starting.txt	/*-l*
-m	starting.txt	/*-m*
-menufont	gui_x11.txt	/*-menufont*
-menufontset	gui_x11.txt	/*-menufontset*
-menuheight	gui_x11.txt	/*-menuheight*
-mf	gui_x11.txt	/*-mf*
-mh	gui_x11.txt	/*-mh*
-n	starting.txt	/*-n*
-nb	starting.txt	/*-nb*
-o	starting.txt	/*-o*
-p	starting.txt	/*-p*
-q	starting.txt	/*-q*
-qf	starting.txt	/*-qf*
-r	starting.txt	/*-r*
-register	if_ole.txt	/*-register*
-reverse	gui_x11.txt	/*-reverse*
-rv	gui_x11.txt	/*-rv*
-s	starting.txt	/*-s*
-s-ex	starting.txt	/*-s-ex*
-scrollbarwidth	gui_x11.txt	/*-scrollbarwidth*
-silent	if_ole.txt	/*-silent*
-sw	gui_x11.txt	/*-sw*
-t	starting.txt	/*-t*
-tag	starting.txt	/*-tag*
-u	starting.txt	/*-u*
-ul	gui_x11.txt	/*-ul*
-unregister	if_ole.txt	/*-unregister*
-v	starting.txt	/*-v*
-vim	starting.txt	/*-vim*
-w	starting.txt	/*-w*
-w_nr	starting.txt	/*-w_nr*
-x	starting.txt	/*-x*
-xrm	gui_x11.txt	/*-xrm*
-y	starting.txt	/*-y*
.	repeat.txt	/*.*
...	eval.txt	/*...*
.Xdefaults	gui_x11.txt	/*.Xdefaults*
.aff	spell.txt	/*.aff*
.dic	spell.txt	/*.dic*
.exrc	starting.txt	/*.exrc*
.gvimrc	gui.txt	/*.gvimrc*
.netrwbook	pi_netrw.txt	/*.netrwbook*
.netrwhist	pi_netrw.txt	/*.netrwhist*
.vimrc	starting.txt	/*.vimrc*
/	pattern.txt	/*\/*
/$	pattern.txt	/*\/$*
/.	pattern.txt	/*\/.*
//	version7.txt	/*\/\/*
//;	pattern.txt	/*\/\/;*
/<CR>	pattern.txt	/*\/<CR>*
/[[.	pattern.txt	/*\/[[.*
/[[=	pattern.txt	/*\/[[=*
/[\n]	pattern.txt	/*\/[\\n]*
/[]	pattern.txt	/*\/[]*
/\	pattern.txt	/*\/\\*
/\$	pattern.txt	/*\/\\$*
/\%#	pattern.txt	/*\/\\%#*
/\%#=	pattern.txt	/*\/\\%#=*
/\%$	pattern.txt	/*\/\\%$*
/\%'m	pattern.txt	/*\/\\%'m*
/\%(	pattern.txt	/*\/\\%(*
/\%(\)	pattern.txt	/*\/\\%(\\)*
/\%<'m	pattern.txt	/*\/\\%<'m*
/\%<c	pattern.txt	/*\/\\%<c*
/\%<l	pattern.txt	/*\/\\%<l*
/\%<v	pattern.txt	/*\/\\%<v*
/\%>'m	pattern.txt	/*\/\\%>'m*
/\%>c	pattern.txt	/*\/\\%>c*
/\%>l	pattern.txt	/*\/\\%>l*
/\%>v	pattern.txt	/*\/\\%>v*
/\%C	pattern.txt	/*\/\\%C*
/\%U	pattern.txt	/*\/\\%U*
/\%V	pattern.txt	/*\/\\%V*
/\%[]	pattern.txt	/*\/\\%[]*
/\%^	pattern.txt	/*\/\\%^*
/\%c	pattern.txt	/*\/\\%c*
/\%d	pattern.txt	/*\/\\%d*
/\%l	pattern.txt	/*\/\\%l*
/\%o	pattern.txt	/*\/\\%o*
/\%u	pattern.txt	/*\/\\%u*
/\%v	pattern.txt	/*\/\\%v*
/\%x	pattern.txt	/*\/\\%x*
/\&	pattern.txt	/*\/\\&*
/\(	pattern.txt	/*\/\\(*
/\(\)	pattern.txt	/*\/\\(\\)*
/\)	pattern.txt	/*\/\\)*
/\+	pattern.txt	/*\/\\+*
/\.	pattern.txt	/*\/\\.*
/\1	pattern.txt	/*\/\\1*
/\2	pattern.txt	/*\/\\2*
/\3	pattern.txt	/*\/\\3*
/\9	pattern.txt	/*\/\\9*
/\<	pattern.txt	/*\/\\<*
/\=	pattern.txt	/*\/\\=*
/\>	pattern.txt	/*\/\\>*
/\?	pattern.txt	/*\/\\?*
/\@!	pattern.txt	/*\/\\@!*
/\@<!	pattern.txt	/*\/\\@<!*
/\@<=	pattern.txt	/*\/\\@<=*
/\@=	pattern.txt	/*\/\\@=*
/\@>	pattern.txt	/*\/\\@>*
/\A	pattern.txt	/*\/\\A*
/\C	pattern.txt	/*\/\\C*
/\D	pattern.txt	/*\/\\D*
/\F	pattern.txt	/*\/\\F*
/\H	pattern.txt	/*\/\\H*
/\I	pattern.txt	/*\/\\I*
/\K	pattern.txt	/*\/\\K*
/\L	pattern.txt	/*\/\\L*
/\M	pattern.txt	/*\/\\M*
/\O	pattern.txt	/*\/\\O*
/\P	pattern.txt	/*\/\\P*
/\S	pattern.txt	/*\/\\S*
/\U	pattern.txt	/*\/\\U*
/\V	pattern.txt	/*\/\\V*
/\W	pattern.txt	/*\/\\W*
/\X	pattern.txt	/*\/\\X*
/\Z	pattern.txt	/*\/\\Z*
/\[]	pattern.txt	/*\/\\[]*
/\\	pattern.txt	/*\/\\\\*
/\]	pattern.txt	/*\/\\]*
/\^	pattern.txt	/*\/\\^*
/\_	pattern.txt	/*\/\\_*
/\_$	pattern.txt	/*\/\\_$*
/\_.	pattern.txt	/*\/\\_.*
/\_A	pattern.txt	/*\/\\_A*
/\_D	pattern.txt	/*\/\\_D*
/\_F	pattern.txt	/*\/\\_F*
/\_H	pattern.txt	/*\/\\_H*
/\_I	pattern.txt	/*\/\\_I*
/\_K	pattern.txt	/*\/\\_K*
/\_L	pattern.txt	/*\/\\_L*
/\_O	pattern.txt	/*\/\\_O*
/\_P	pattern.txt	/*\/\\_P*
/\_S	pattern.txt	/*\/\\_S*
/\_U	pattern.txt	/*\/\\_U*
/\_W	pattern.txt	/*\/\\_W*
/\_X	pattern.txt	/*\/\\_X*
/\_[]	pattern.txt	/*\/\\_[]*
/\_^	pattern.txt	/*\/\\_^*
/\_a	pattern.txt	/*\/\\_a*
/\_d	pattern.txt	/*\/\\_d*
/\_f	pattern.txt	/*\/\\_f*
/\_h	pattern.txt	/*\/\\_h*
/\_i	pattern.txt	/*\/\\_i*
/\_k	pattern.txt	/*\/\\_k*
/\_l	pattern.txt	/*\/\\_l*
/\_o	pattern.txt	/*\/\\_o*
/\_p	pattern.txt	/*\/\\_p*
/\_s	pattern.txt	/*\/\\_s*
/\_u	pattern.txt	/*\/\\_u*
/\_w	pattern.txt	/*\/\\_w*
/\_x	pattern.txt	/*\/\\_x*
/\a	pattern.txt	/*\/\\a*
/\b	pattern.txt	/*\/\\b*
/\bar	pattern.txt	/*\/\\bar*
/\c	pattern.txt	/*\/\\c*
/\d	pattern.txt	/*\/\\d*
/\e	pattern.txt	/*\/\\e*
/\f	pattern.txt	/*\/\\f*
/\h	pattern.txt	/*\/\\h*
/\i	pattern.txt	/*\/\\i*
/\k	pattern.txt	/*\/\\k*
/\l	pattern.txt	/*\/\\l*
/\m	pattern.txt	/*\/\\m*
/\n	pattern.txt	/*\/\\n*
/\o	pattern.txt	/*\/\\o*
/\p	pattern.txt	/*\/\\p*
/\r	pattern.txt	/*\/\\r*
/\s	pattern.txt	/*\/\\s*
/\star	pattern.txt	/*\/\\star*
/\t	pattern.txt	/*\/\\t*
/\u	pattern.txt	/*\/\\u*
/\v	pattern.txt	/*\/\\v*
/\w	pattern.txt	/*\/\\w*
/\x	pattern.txt	/*\/\\x*
/\z(	syntax.txt	/*\/\\z(*
/\z(\)	syntax.txt	/*\/\\z(\\)*
/\z1	syntax.txt	/*\/\\z1*
/\z2	syntax.txt	/*\/\\z2*
/\z3	syntax.txt	/*\/\\z3*
/\z4	syntax.txt	/*\/\\z4*
/\z5	syntax.txt	/*\/\\z5*
/\z6	syntax.txt	/*\/\\z6*
/\z7	syntax.txt	/*\/\\z7*
/\z8	syntax.txt	/*\/\\z8*
/\z9	syntax.txt	/*\/\\z9*
/\ze	pattern.txt	/*\/\\ze*
/\zs	pattern.txt	/*\/\\zs*
/\{	pattern.txt	/*\/\\{*
/\{-	pattern.txt	/*\/\\{-*
/\~	pattern.txt	/*\/\\~*
/^	pattern.txt	/*\/^*
/_CTRL-G	cmdline.txt	/*\/_CTRL-G*
/_CTRL-L	cmdline.txt	/*\/_CTRL-L*
/_CTRL-T	cmdline.txt	/*\/_CTRL-T*
/atom	pattern.txt	/*\/atom*
/bar	pattern.txt	/*\/bar*
/branch	pattern.txt	/*\/branch*
/character-classes	pattern.txt	/*\/character-classes*
/collection	pattern.txt	/*\/collection*
/concat	pattern.txt	/*\/concat*
/dyn	various.txt	/*\/dyn*
/ignorecase	pattern.txt	/*\/ignorecase*
/magic	pattern.txt	/*\/magic*
/multi	pattern.txt	/*\/multi*
/ordinary-atom	pattern.txt	/*\/ordinary-atom*
/pattern	pattern.txt	/*\/pattern*
/piece	pattern.txt	/*\/piece*
/star	pattern.txt	/*\/star*
/zero-width	pattern.txt	/*\/zero-width*
/~	pattern.txt	/*\/~*
0	motion.txt	/*0*
01.1	usr_01.txt	/*01.1*
01.2	usr_01.txt	/*01.2*
01.3	usr_01.txt	/*01.3*
01.4	usr_01.txt	/*01.4*
02.1	usr_02.txt	/*02.1*
02.2	usr_02.txt	/*02.2*
02.3	usr_02.txt	/*02.3*
02.4	usr_02.txt	/*02.4*
02.5	usr_02.txt	/*02.5*
02.6	usr_02.txt	/*02.6*
02.7	usr_02.txt	/*02.7*
02.8	usr_02.txt	/*02.8*
03.1	usr_03.txt	/*03.1*
03.10	usr_03.txt	/*03.10*
03.2	usr_03.txt	/*03.2*
03.3	usr_03.txt	/*03.3*
03.4	usr_03.txt	/*03.4*
03.5	usr_03.txt	/*03.5*
03.6	usr_03.txt	/*03.6*
03.7	usr_03.txt	/*03.7*
03.8	usr_03.txt	/*03.8*
03.9	usr_03.txt	/*03.9*
04.1	usr_04.txt	/*04.1*
04.10	usr_04.txt	/*04.10*
04.2	usr_04.txt	/*04.2*
04.3	usr_04.txt	/*04.3*
04.4	usr_04.txt	/*04.4*
04.5	usr_04.txt	/*04.5*
04.6	usr_04.txt	/*04.6*
04.7	usr_04.txt	/*04.7*
04.8	usr_04.txt	/*04.8*
04.9	usr_04.txt	/*04.9*
05.1	usr_05.txt	/*05.1*
05.2	usr_05.txt	/*05.2*
05.3	usr_05.txt	/*05.3*
05.4	usr_05.txt	/*05.4*
05.5	usr_05.txt	/*05.5*
05.6	usr_05.txt	/*05.6*
05.7	usr_05.txt	/*05.7*
05.8	usr_05.txt	/*05.8*
06.1	usr_06.txt	/*06.1*
06.2	usr_06.txt	/*06.2*
06.3	usr_06.txt	/*06.3*
06.4	usr_06.txt	/*06.4*
06.5	usr_06.txt	/*06.5*
06.6	usr_06.txt	/*06.6*
07.1	usr_07.txt	/*07.1*
07.2	usr_07.txt	/*07.2*
07.3	usr_07.txt	/*07.3*
07.4	usr_07.txt	/*07.4*
07.5	usr_07.txt	/*07.5*
07.6	usr_07.txt	/*07.6*
07.7	usr_07.txt	/*07.7*
08.1	usr_08.txt	/*08.1*
08.2	usr_08.txt	/*08.2*
08.3	usr_08.txt	/*08.3*
08.4	usr_08.txt	/*08.4*
08.5	usr_08.txt	/*08.5*
08.6	usr_08.txt	/*08.6*
08.7	usr_08.txt	/*08.7*
08.8	usr_08.txt	/*08.8*
08.9	usr_08.txt	/*08.9*
09.1	usr_09.txt	/*09.1*
09.2	usr_09.txt	/*09.2*
09.3	usr_09.txt	/*09.3*
09.4	usr_09.txt	/*09.4*
10.1	usr_10.txt	/*10.1*
10.2	usr_10.txt	/*10.2*
10.3	usr_10.txt	/*10.3*
10.4	usr_10.txt	/*10.4*
10.5	usr_10.txt	/*10.5*
10.6	usr_10.txt	/*10.6*
10.7	usr_10.txt	/*10.7*
10.8	usr_10.txt	/*10.8*
10.9	usr_10.txt	/*10.9*
11.1	usr_11.txt	/*11.1*
11.2	usr_11.txt	/*11.2*
11.3	usr_11.txt	/*11.3*
11.4	usr_11.txt	/*11.4*
12.1	usr_12.txt	/*12.1*
12.2	usr_12.txt	/*12.2*
12.3	usr_12.txt	/*12.3*
12.4	usr_12.txt	/*12.4*
12.5	usr_12.txt	/*12.5*
12.6	usr_12.txt	/*12.6*
12.7	usr_12.txt	/*12.7*
12.8	usr_12.txt	/*12.8*
1gD	pattern.txt	/*1gD*
1gd	pattern.txt	/*1gd*
20.1	usr_20.txt	/*20.1*
20.2	usr_20.txt	/*20.2*
20.3	usr_20.txt	/*20.3*
20.4	usr_20.txt	/*20.4*
20.5	usr_20.txt	/*20.5*
21.1	usr_21.txt	/*21.1*
21.2	usr_21.txt	/*21.2*
21.3	usr_21.txt	/*21.3*
21.4	usr_21.txt	/*21.4*
21.5	usr_21.txt	/*21.5*
21.6	usr_21.txt	/*21.6*
22.1	usr_22.txt	/*22.1*
22.2	usr_22.txt	/*22.2*
22.3	usr_22.txt	/*22.3*
22.4	usr_22.txt	/*22.4*
23.1	usr_23.txt	/*23.1*
23.2	usr_23.txt	/*23.2*
23.3	usr_23.txt	/*23.3*
23.4	usr_23.txt	/*23.4*
23.5	usr_23.txt	/*23.5*
24.1	usr_24.txt	/*24.1*
24.10	usr_24.txt	/*24.10*
24.2	usr_24.txt	/*24.2*
24.3	usr_24.txt	/*24.3*
24.4	usr_24.txt	/*24.4*
24.5	usr_24.txt	/*24.5*
24.6	usr_24.txt	/*24.6*
24.7	usr_24.txt	/*24.7*
24.8	usr_24.txt	/*24.8*
24.9	usr_24.txt	/*24.9*
25.1	usr_25.txt	/*25.1*
25.2	usr_25.txt	/*25.2*
25.3	usr_25.txt	/*25.3*
25.4	usr_25.txt	/*25.4*
25.5	usr_25.txt	/*25.5*
26.1	usr_26.txt	/*26.1*
26.2	usr_26.txt	/*26.2*
26.3	usr_26.txt	/*26.3*
26.4	usr_26.txt	/*26.4*
27.1	usr_27.txt	/*27.1*
27.2	usr_27.txt	/*27.2*
27.3	usr_27.txt	/*27.3*
27.4	usr_27.txt	/*27.4*
27.5	usr_27.txt	/*27.5*
27.6	usr_27.txt	/*27.6*
27.7	usr_27.txt	/*27.7*
27.8	usr_27.txt	/*27.8*
27.9	usr_27.txt	/*27.9*
28.1	usr_28.txt	/*28.1*
28.10	usr_28.txt	/*28.10*
28.2	usr_28.txt	/*28.2*
28.3	usr_28.txt	/*28.3*
28.4	usr_28.txt	/*28.4*
28.5	usr_28.txt	/*28.5*
28.6	usr_28.txt	/*28.6*
28.7	usr_28.txt	/*28.7*
28.8	usr_28.txt	/*28.8*
28.9	usr_28.txt	/*28.9*
29.1	usr_29.txt	/*29.1*
29.2	usr_29.txt	/*29.2*
29.3	usr_29.txt	/*29.3*
29.4	usr_29.txt	/*29.4*
29.5	usr_29.txt	/*29.5*
2html.vim	syntax.txt	/*2html.vim*
30.1	usr_30.txt	/*30.1*
30.2	usr_30.txt	/*30.2*
30.3	usr_30.txt	/*30.3*
30.4	usr_30.txt	/*30.4*
30.5	usr_30.txt	/*30.5*
30.6	usr_30.txt	/*30.6*
31.1	usr_31.txt	/*31.1*
31.2	usr_31.txt	/*31.2*
31.3	usr_31.txt	/*31.3*
31.4	usr_31.txt	/*31.4*
31.5	usr_31.txt	/*31.5*
32.1	usr_32.txt	/*32.1*
32.2	usr_32.txt	/*32.2*
32.3	usr_32.txt	/*32.3*
32.4	usr_32.txt	/*32.4*
40.1	usr_40.txt	/*40.1*
40.2	usr_40.txt	/*40.2*
40.3	usr_40.txt	/*40.3*
41.1	usr_41.txt	/*41.1*
41.10	usr_41.txt	/*41.10*
41.11	usr_41.txt	/*41.11*
41.12	usr_41.txt	/*41.12*
41.13	usr_41.txt	/*41.13*
41.14	usr_41.txt	/*41.14*
41.15	usr_41.txt	/*41.15*
41.16	usr_41.txt	/*41.16*
41.2	usr_41.txt	/*41.2*
41.3	usr_41.txt	/*41.3*
41.4	usr_41.txt	/*41.4*
41.5	usr_41.txt	/*41.5*
41.6	usr_41.txt	/*41.6*
41.7	usr_41.txt	/*41.7*
41.8	usr_41.txt	/*41.8*
41.9	usr_41.txt	/*41.9*
42	usr_42.txt	/*42*
42.1	usr_42.txt	/*42.1*
42.2	usr_42.txt	/*42.2*
42.3	usr_42.txt	/*42.3*
42.4	usr_42.txt	/*42.4*
43.1	usr_43.txt	/*43.1*
43.2	usr_43.txt	/*43.2*
44.1	usr_44.txt	/*44.1*
44.10	usr_44.txt	/*44.10*
44.11	usr_44.txt	/*44.11*
44.12	usr_44.txt	/*44.12*
44.2	usr_44.txt	/*44.2*
44.3	usr_44.txt	/*44.3*
44.4	usr_44.txt	/*44.4*
44.5	usr_44.txt	/*44.5*
44.6	usr_44.txt	/*44.6*
44.7	usr_44.txt	/*44.7*
44.8	usr_44.txt	/*44.8*
44.9	usr_44.txt	/*44.9*
45.1	usr_45.txt	/*45.1*
45.2	usr_45.txt	/*45.2*
45.3	usr_45.txt	/*45.3*
45.4	usr_45.txt	/*45.4*
45.5	usr_45.txt	/*45.5*
8g8	various.txt	/*8g8*
90.1	usr_90.txt	/*90.1*
90.2	usr_90.txt	/*90.2*
90.3	usr_90.txt	/*90.3*
90.4	usr_90.txt	/*90.4*
90.5	usr_90.txt	/*90.5*
:	cmdline.txt	/*:*
:!	various.txt	/*:!*
:!!	various.txt	/*:!!*
:!cmd	various.txt	/*:!cmd*
:!start	os_win32.txt	/*:!start*
:#	various.txt	/*:#*
:#!	various.txt	/*:#!*
:$	cmdline.txt	/*:$*
:%	cmdline.txt	/*:%*
:&	change.txt	/*:&*
:&&	change.txt	/*:&&*
:'	cmdline.txt	/*:'*
:,	cmdline.txt	/*:,*
:.	cmdline.txt	/*:.*
:/	cmdline.txt	/*:\/*
:0file	editing.txt	/*:0file*
:2match	pattern.txt	/*:2match*
:3match	pattern.txt	/*:3match*
::.	cmdline.txt	/*::.*
::8	cmdline.txt	/*::8*
::S	cmdline.txt	/*::S*
::e	cmdline.txt	/*::e*
::gs	cmdline.txt	/*::gs*
::h	cmdline.txt	/*::h*
::p	cmdline.txt	/*::p*
::r	cmdline.txt	/*::r*
::s	cmdline.txt	/*::s*
::t	cmdline.txt	/*::t*
::~	cmdline.txt	/*::~*
:;	cmdline.txt	/*:;*
:<	change.txt	/*:<*
:<abuf>	cmdline.txt	/*:<abuf>*
:<afile>	cmdline.txt	/*:<afile>*
:<amatch>	cmdline.txt	/*:<amatch>*
:<cWORD>	cmdline.txt	/*:<cWORD>*
:<cfile>	cmdline.txt	/*:<cfile>*
:<cword>	cmdline.txt	/*:<cword>*
:<sfile>	cmdline.txt	/*:<sfile>*
:=	various.txt	/*:=*
:>	change.txt	/*:>*
:?	cmdline.txt	/*:?*
:@	repeat.txt	/*:@*
:@:	repeat.txt	/*:@:*
:@@	repeat.txt	/*:@@*
:AdaLines	ft_ada.txt	/*:AdaLines*
:AdaRainbow	ft_ada.txt	/*:AdaRainbow*
:AdaSpaces	ft_ada.txt	/*:AdaSpaces*
:AdaTagDir	ft_ada.txt	/*:AdaTagDir*
:AdaTagFile	ft_ada.txt	/*:AdaTagFile*
:AdaTypes	ft_ada.txt	/*:AdaTypes*
:CompilerSet	usr_41.txt	/*:CompilerSet*
:DiffOrig	diff.txt	/*:DiffOrig*
:DoMatchParen	pi_paren.txt	/*:DoMatchParen*
:Explore	pi_netrw.txt	/*:Explore*
:GLVS	pi_getscript.txt	/*:GLVS*
:GetLatestVimScripts_dat	pi_getscript.txt	/*:GetLatestVimScripts_dat*
:GnatFind	ft_ada.txt	/*:GnatFind*
:GnatPretty	ft_ada.txt	/*:GnatPretty*
:GnatTags	ft_ada.txt	/*:GnatTags*
:Hexplore	pi_netrw.txt	/*:Hexplore*
:LP	pi_logipat.txt	/*:LP*
:LPE	pi_logipat.txt	/*:LPE*
:LPF	pi_logipat.txt	/*:LPF*
:Lexplore	pi_netrw.txt	/*:Lexplore*
:LogiPat	pi_logipat.txt	/*:LogiPat*
:Man	filetype.txt	/*:Man*
:MkVimball	pi_vimball.txt	/*:MkVimball*
:N	editing.txt	/*:N*
:NetrwClean	pi_netrw.txt	/*:NetrwClean*
:Nexplore	pi_netrw.txt	/*:Nexplore*
:Next	editing.txt	/*:Next*
:NoMatchParen	pi_paren.txt	/*:NoMatchParen*
:Nr	pi_netrw.txt	/*:Nr*
:Nread	pi_netrw.txt	/*:Nread*
:Ns	pi_netrw.txt	/*:Ns*
:Nsource	pi_netrw.txt	/*:Nsource*
:Ntree	pi_netrw.txt	/*:Ntree*
:Nw	pi_netrw.txt	/*:Nw*
:Nwrite	pi_netrw.txt	/*:Nwrite*
:P	various.txt	/*:P*
:Pexplore	pi_netrw.txt	/*:Pexplore*
:Print	various.txt	/*:Print*
:Rexplore	pi_netrw.txt	/*:Rexplore*
:RmVimball	pi_vimball.txt	/*:RmVimball*
:Sexplore	pi_netrw.txt	/*:Sexplore*
:TOhtml	syntax.txt	/*:TOhtml*
:TarDiff	pi_tar.txt	/*:TarDiff*
:Texplore	pi_netrw.txt	/*:Texplore*
:UseVimball	pi_vimball.txt	/*:UseVimball*
:Vexplore	pi_netrw.txt	/*:Vexplore*
:VimballList	pi_vimball.txt	/*:VimballList*
:Vimuntar	pi_tar.txt	/*:Vimuntar*
:X	editing.txt	/*:X*
:XMLent	insert.txt	/*:XMLent*
:XMLns	insert.txt	/*:XMLns*
:[range]	motion.txt	/*:[range]*
:\bar	cmdline.txt	/*:\\bar*
:_!	cmdline.txt	/*:_!*
:_#	cmdline.txt	/*:_#*
:_##	cmdline.txt	/*:_##*
:_#0	cmdline.txt	/*:_#0*
:_#<	cmdline.txt	/*:_#<*
:_#n	cmdline.txt	/*:_#n*
:_%	cmdline.txt	/*:_%*
:_%:	cmdline.txt	/*:_%:*
:_%<	cmdline.txt	/*:_%<*
:a	insert.txt	/*:a*
:ab	map.txt	/*:ab*
:abbreviate	map.txt	/*:abbreviate*
:abbreviate-<buffer>	map.txt	/*:abbreviate-<buffer>*
:abbreviate-local	map.txt	/*:abbreviate-local*
:abbreviate-verbose	map.txt	/*:abbreviate-verbose*
:abc	map.txt	/*:abc*
:abclear	map.txt	/*:abclear*
:abo	windows.txt	/*:abo*
:aboveleft	windows.txt	/*:aboveleft*
:al	windows.txt	/*:al*
:all	windows.txt	/*:all*
:am	gui.txt	/*:am*
:amenu	gui.txt	/*:amenu*
:an	gui.txt	/*:an*
:anoremenu	gui.txt	/*:anoremenu*
:append	insert.txt	/*:append*
:ar	editing.txt	/*:ar*
:arga	editing.txt	/*:arga*
:argadd	editing.txt	/*:argadd*
:argd	editing.txt	/*:argd*
:argdelete	editing.txt	/*:argdelete*
:argdo	editing.txt	/*:argdo*
:arge	editing.txt	/*:arge*
:argedit	editing.txt	/*:argedit*
:argglobal	editing.txt	/*:argglobal*
:arglocal	editing.txt	/*:arglocal*
:args	editing.txt	/*:args*
:args_f	editing.txt	/*:args_f*
:args_f!	editing.txt	/*:args_f!*
:argu	editing.txt	/*:argu*
:argument	editing.txt	/*:argument*
:as	various.txt	/*:as*
:ascii	various.txt	/*:ascii*
:au	autocmd.txt	/*:au*
:aug	autocmd.txt	/*:aug*
:augroup	autocmd.txt	/*:augroup*
:augroup-delete	autocmd.txt	/*:augroup-delete*
:aun	gui.txt	/*:aun*
:aunmenu	gui.txt	/*:aunmenu*
:autocmd	autocmd.txt	/*:autocmd*
:autocmd-verbose	autocmd.txt	/*:autocmd-verbose*
:b	windows.txt	/*:b*
:bN	windows.txt	/*:bN*
:bNext	windows.txt	/*:bNext*
:ba	windows.txt	/*:ba*
:bad	windows.txt	/*:bad*
:badd	windows.txt	/*:badd*
:ball	windows.txt	/*:ball*
:bar	cmdline.txt	/*:bar*
:bd	windows.txt	/*:bd*
:bdel	windows.txt	/*:bdel*
:bdelete	windows.txt	/*:bdelete*
:be	gui.txt	/*:be*
:behave	gui.txt	/*:behave*
:bel	windows.txt	/*:bel*
:belowright	windows.txt	/*:belowright*
:bf	windows.txt	/*:bf*
:bfirst	windows.txt	/*:bfirst*
:bl	windows.txt	/*:bl*
:blast	windows.txt	/*:blast*
:bm	windows.txt	/*:bm*
:bmodified	windows.txt	/*:bmodified*
:bn	windows.txt	/*:bn*
:bnext	windows.txt	/*:bnext*
:bo	windows.txt	/*:bo*
:botright	windows.txt	/*:botright*
:bp	windows.txt	/*:bp*
:bprevious	windows.txt	/*:bprevious*
:br	windows.txt	/*:br*
:brea	eval.txt	/*:brea*
:break	eval.txt	/*:break*
:breaka	repeat.txt	/*:breaka*
:breakadd	repeat.txt	/*:breakadd*
:breakd	repeat.txt	/*:breakd*
:breakdel	repeat.txt	/*:breakdel*
:breakl	repeat.txt	/*:breakl*
:breaklist	repeat.txt	/*:breaklist*
:brewind	windows.txt	/*:brewind*
:bro	editing.txt	/*:bro*
:browse	editing.txt	/*:browse*
:browse-set	options.txt	/*:browse-set*
:bu	windows.txt	/*:bu*
:buf	windows.txt	/*:buf*
:bufdo	windows.txt	/*:bufdo*
:buffer	windows.txt	/*:buffer*
:buffer-!	windows.txt	/*:buffer-!*
:buffers	windows.txt	/*:buffers*
:bun	windows.txt	/*:bun*
:bunload	windows.txt	/*:bunload*
:bw	windows.txt	/*:bw*
:bwipe	windows.txt	/*:bwipe*
:bwipeout	windows.txt	/*:bwipeout*
:c	change.txt	/*:c*
:cN	quickfix.txt	/*:cN*
:cNext	quickfix.txt	/*:cNext*
:cNf	quickfix.txt	/*:cNf*
:cNfile	quickfix.txt	/*:cNfile*
:ca	map.txt	/*:ca*
:cabbrev	map.txt	/*:cabbrev*
:cabc	map.txt	/*:cabc*
:cabclear	map.txt	/*:cabclear*
:cad	quickfix.txt	/*:cad*
:caddbuffer	quickfix.txt	/*:caddbuffer*
:cadde	quickfix.txt	/*:cadde*
:caddexpr	quickfix.txt	/*:caddexpr*
:caddf	quickfix.txt	/*:caddf*
:caddfile	quickfix.txt	/*:caddfile*
:cal	eval.txt	/*:cal*
:call	eval.txt	/*:call*
:cat	eval.txt	/*:cat*
:catch	eval.txt	/*:catch*
:cb	quickfix.txt	/*:cb*
:cbo	quickfix.txt	/*:cbo*
:cbottom	quickfix.txt	/*:cbottom*
:cbuffer	quickfix.txt	/*:cbuffer*
:cc	quickfix.txt	/*:cc*
:ccl	quickfix.txt	/*:ccl*
:cclose	quickfix.txt	/*:cclose*
:cd	editing.txt	/*:cd*
:cd-	editing.txt	/*:cd-*
:cdo	quickfix.txt	/*:cdo*
:ce	change.txt	/*:ce*
:center	change.txt	/*:center*
:cex	quickfix.txt	/*:cex*
:cexpr	quickfix.txt	/*:cexpr*
:cf	quickfix.txt	/*:cf*
:cfdo	quickfix.txt	/*:cfdo*
:cfile	quickfix.txt	/*:cfile*
:cfir	quickfix.txt	/*:cfir*
:cfirst	quickfix.txt	/*:cfirst*
:cg	quickfix.txt	/*:cg*
:cgetb	quickfix.txt	/*:cgetb*
:cgetbuffer	quickfix.txt	/*:cgetbuffer*
:cgete	quickfix.txt	/*:cgete*
:cgetexpr	quickfix.txt	/*:cgetexpr*
:cgetfile	quickfix.txt	/*:cgetfile*
:ch	change.txt	/*:ch*
:change	change.txt	/*:change*
:changes	motion.txt	/*:changes*
:chd	editing.txt	/*:chd*
:chdir	editing.txt	/*:chdir*
:che	tagsrch.txt	/*:che*
:checkpath	tagsrch.txt	/*:checkpath*
:checkt	editing.txt	/*:checkt*
:checktime	editing.txt	/*:checktime*
:chi	quickfix.txt	/*:chi*
:chistory	quickfix.txt	/*:chistory*
:cl	quickfix.txt	/*:cl*
:cla	quickfix.txt	/*:cla*
:clast	quickfix.txt	/*:clast*
:cle	motion.txt	/*:cle*
:clearjumps	motion.txt	/*:clearjumps*
:clist	quickfix.txt	/*:clist*
:clo	windows.txt	/*:clo*
:close	windows.txt	/*:close*
:cm	map.txt	/*:cm*
:cmap	map.txt	/*:cmap*
:cmap_l	map.txt	/*:cmap_l*
:cmapc	map.txt	/*:cmapc*
:cmapclear	map.txt	/*:cmapclear*
:cme	gui.txt	/*:cme*
:cmenu	gui.txt	/*:cmenu*
:cn	quickfix.txt	/*:cn*
:cnew	quickfix.txt	/*:cnew*
:cnewer	quickfix.txt	/*:cnewer*
:cnext	quickfix.txt	/*:cnext*
:cnf	quickfix.txt	/*:cnf*
:cnfile	quickfix.txt	/*:cnfile*
:cno	map.txt	/*:cno*
:cnorea	map.txt	/*:cnorea*
:cnoreabbrev	map.txt	/*:cnoreabbrev*
:cnoremap	map.txt	/*:cnoremap*
:cnoreme	gui.txt	/*:cnoreme*
:cnoremenu	gui.txt	/*:cnoremenu*
:co	change.txt	/*:co*
:col	quickfix.txt	/*:col*
:colder	quickfix.txt	/*:colder*
:colo	syntax.txt	/*:colo*
:colorscheme	syntax.txt	/*:colorscheme*
:com	map.txt	/*:com*
:comc	map.txt	/*:comc*
:comclear	map.txt	/*:comclear*
:command	map.txt	/*:command*
:command-addr	map.txt	/*:command-addr*
:command-bang	map.txt	/*:command-bang*
:command-bar	map.txt	/*:command-bar*
:command-buffer	map.txt	/*:command-buffer*
:command-complete	map.txt	/*:command-complete*
:command-completion	map.txt	/*:command-completion*
:command-completion-custom	map.txt	/*:command-completion-custom*
:command-completion-customlist	map.txt	/*:command-completion-customlist*
:command-count	map.txt	/*:command-count*
:command-nargs	map.txt	/*:command-nargs*
:command-range	map.txt	/*:command-range*
:command-register	map.txt	/*:command-register*
:command-verbose	map.txt	/*:command-verbose*
:comment	cmdline.txt	/*:comment*
:comp	quickfix.txt	/*:comp*
:compiler	quickfix.txt	/*:compiler*
:con	eval.txt	/*:con*
:conf	editing.txt	/*:conf*
:confirm	editing.txt	/*:confirm*
:continue	eval.txt	/*:continue*
:cope	quickfix.txt	/*:cope*
:copen	quickfix.txt	/*:copen*
:copy	change.txt	/*:copy*
:cp	quickfix.txt	/*:cp*
:cpf	quickfix.txt	/*:cpf*
:cpfile	quickfix.txt	/*:cpfile*
:cprevious	quickfix.txt	/*:cprevious*
:cq	quickfix.txt	/*:cq*
:cquit	quickfix.txt	/*:cquit*
:cr	quickfix.txt	/*:cr*
:crewind	quickfix.txt	/*:crewind*
:cs	if_cscop.txt	/*:cs*
:cscope	if_cscop.txt	/*:cscope*
:cstag	if_cscop.txt	/*:cstag*
:cu	map.txt	/*:cu*
:cuna	map.txt	/*:cuna*
:cunabbrev	map.txt	/*:cunabbrev*
:cunmap	map.txt	/*:cunmap*
:cunme	gui.txt	/*:cunme*
:cunmenu	gui.txt	/*:cunmenu*
:cw	quickfix.txt	/*:cw*
:cwindow	quickfix.txt	/*:cwindow*
:d	change.txt	/*:d*
:de	change.txt	/*:de*
:debug	repeat.txt	/*:debug*
:debug-name	repeat.txt	/*:debug-name*
:debugg	repeat.txt	/*:debugg*
:debuggreedy	repeat.txt	/*:debuggreedy*
:del	change.txt	/*:del*
:delc	map.txt	/*:delc*
:delcommand	map.txt	/*:delcommand*
:delcr	todo.txt	/*:delcr*
:delete	change.txt	/*:delete*
:delf	eval.txt	/*:delf*
:delfunction	eval.txt	/*:delfunction*
:delm	motion.txt	/*:delm*
:delmarks	motion.txt	/*:delmarks*
:di	change.txt	/*:di*
:dif	diff.txt	/*:dif*
:diffg	diff.txt	/*:diffg*
:diffget	diff.txt	/*:diffget*
:diffo	diff.txt	/*:diffo*
:diffoff	diff.txt	/*:diffoff*
:diffp	diff.txt	/*:diffp*
:diffpatch	diff.txt	/*:diffpatch*
:diffpu	diff.txt	/*:diffpu*
:diffput	diff.txt	/*:diffput*
:diffs	diff.txt	/*:diffs*
:diffsplit	diff.txt	/*:diffsplit*
:difft	diff.txt	/*:difft*
:diffthis	diff.txt	/*:diffthis*
:diffupdate	diff.txt	/*:diffupdate*
:dig	digraph.txt	/*:dig*
:digraphs	digraph.txt	/*:digraphs*
:display	change.txt	/*:display*
:dj	tagsrch.txt	/*:dj*
:djump	tagsrch.txt	/*:djump*
:dl	change.txt	/*:dl*
:dli	tagsrch.txt	/*:dli*
:dlist	tagsrch.txt	/*:dlist*
:do	autocmd.txt	/*:do*
:doau	autocmd.txt	/*:doau*
:doautoa	autocmd.txt	/*:doautoa*
:doautoall	autocmd.txt	/*:doautoall*
:doautocmd	autocmd.txt	/*:doautocmd*
:dp	change.txt	/*:dp*
:dr	windows.txt	/*:dr*
:drop	windows.txt	/*:drop*
:ds	tagsrch.txt	/*:ds*
:dsearch	tagsrch.txt	/*:dsearch*
:dsp	tagsrch.txt	/*:dsp*
:dsplit	tagsrch.txt	/*:dsplit*
:e	editing.txt	/*:e*
:ea	undo.txt	/*:ea*
:earlier	undo.txt	/*:earlier*
:ec	eval.txt	/*:ec*
:echo	eval.txt	/*:echo*
:echo-redraw	eval.txt	/*:echo-redraw*
:echoe	eval.txt	/*:echoe*
:echoerr	eval.txt	/*:echoerr*
:echoh	eval.txt	/*:echoh*
:echohl	eval.txt	/*:echohl*
:echom	eval.txt	/*:echom*
:echomsg	eval.txt	/*:echomsg*
:echon	eval.txt	/*:echon*
:edit	editing.txt	/*:edit*
:edit!	editing.txt	/*:edit!*
:edit!_f	editing.txt	/*:edit!_f*
:edit_f	editing.txt	/*:edit_f*
:el	eval.txt	/*:el*
:else	eval.txt	/*:else*
:elsei	eval.txt	/*:elsei*
:elseif	eval.txt	/*:elseif*
:em	gui.txt	/*:em*
:emenu	gui.txt	/*:emenu*
:en	eval.txt	/*:en*
:endf	eval.txt	/*:endf*
:endfo	eval.txt	/*:endfo*
:endfor	eval.txt	/*:endfor*
:endfunction	eval.txt	/*:endfunction*
:endif	eval.txt	/*:endif*
:endt	eval.txt	/*:endt*
:endtry	eval.txt	/*:endtry*
:endw	eval.txt	/*:endw*
:endwhile	eval.txt	/*:endwhile*
:ene	editing.txt	/*:ene*
:ene!	editing.txt	/*:ene!*
:enew	editing.txt	/*:enew*
:enew!	editing.txt	/*:enew!*
:ex	editing.txt	/*:ex*
:exe	eval.txt	/*:exe*
:exe-comment	eval.txt	/*:exe-comment*
:execute	eval.txt	/*:execute*
:exi	editing.txt	/*:exi*
:exit	editing.txt	/*:exit*
:exu	helphelp.txt	/*:exu*
:exusage	helphelp.txt	/*:exusage*
:f	editing.txt	/*:f*
:fi	editing.txt	/*:fi*
:file	editing.txt	/*:file*
:file_f	editing.txt	/*:file_f*
:filename	editing.txt	/*:filename*
:files	windows.txt	/*:files*
:filet	filetype.txt	/*:filet*
:filetype	filetype.txt	/*:filetype*
:filetype-indent-off	filetype.txt	/*:filetype-indent-off*
:filetype-indent-on	filetype.txt	/*:filetype-indent-on*
:filetype-off	filetype.txt	/*:filetype-off*
:filetype-overview	filetype.txt	/*:filetype-overview*
:filetype-plugin-off	filetype.txt	/*:filetype-plugin-off*
:filetype-plugin-on	filetype.txt	/*:filetype-plugin-on*
:filt	various.txt	/*:filt*
:filter	various.txt	/*:filter*
:fin	editing.txt	/*:fin*
:fina	eval.txt	/*:fina*
:finally	eval.txt	/*:finally*
:find	editing.txt	/*:find*
:fini	repeat.txt	/*:fini*
:finish	repeat.txt	/*:finish*
:fir	editing.txt	/*:fir*
:first	editing.txt	/*:first*
:fix	options.txt	/*:fix*
:fixdel	options.txt	/*:fixdel*
:fo	fold.txt	/*:fo*
:fold	fold.txt	/*:fold*
:foldc	fold.txt	/*:foldc*
:foldclose	fold.txt	/*:foldclose*
:foldd	fold.txt	/*:foldd*
:folddoc	fold.txt	/*:folddoc*
:folddoclosed	fold.txt	/*:folddoclosed*
:folddoopen	fold.txt	/*:folddoopen*
:foldo	fold.txt	/*:foldo*
:foldopen	fold.txt	/*:foldopen*
:for	eval.txt	/*:for*
:fu	eval.txt	/*:fu*
:func-abort	eval.txt	/*:func-abort*
:func-closure	eval.txt	/*:func-closure*
:func-dict	eval.txt	/*:func-dict*
:func-range	eval.txt	/*:func-range*
:function	eval.txt	/*:function*
:function-verbose	eval.txt	/*:function-verbose*
:g	repeat.txt	/*:g*
:global	repeat.txt	/*:global*
:go	motion.txt	/*:go*
:goto	motion.txt	/*:goto*
:gr	quickfix.txt	/*:gr*
:grep	quickfix.txt	/*:grep*
:grepa	quickfix.txt	/*:grepa*
:grepadd	quickfix.txt	/*:grepadd*
:gu	gui_x11.txt	/*:gu*
:gui	gui_x11.txt	/*:gui*
:gv	gui_x11.txt	/*:gv*
:gvim	gui_x11.txt	/*:gvim*
:h	helphelp.txt	/*:h*
:ha	print.txt	/*:ha*
:hardcopy	print.txt	/*:hardcopy*
:help	helphelp.txt	/*:help*
:helpc	helphelp.txt	/*:helpc*
:helpclose	helphelp.txt	/*:helpclose*
:helpf	helphelp.txt	/*:helpf*
:helpfind	helphelp.txt	/*:helpfind*
:helpg	helphelp.txt	/*:helpg*
:helpgrep	helphelp.txt	/*:helpgrep*
:helpt	helphelp.txt	/*:helpt*
:helptags	helphelp.txt	/*:helptags*
:hi	syntax.txt	/*:hi*
:hi-default	syntax.txt	/*:hi-default*
:hi-link	syntax.txt	/*:hi-link*
:hi-normal	syntax.txt	/*:hi-normal*
:hi-normal-cterm	syntax.txt	/*:hi-normal-cterm*
:hide	windows.txt	/*:hide*
:highlight	syntax.txt	/*:highlight*
:highlight-default	syntax.txt	/*:highlight-default*
:highlight-link	syntax.txt	/*:highlight-link*
:highlight-normal	syntax.txt	/*:highlight-normal*
:highlight-verbose	syntax.txt	/*:highlight-verbose*
:his	cmdline.txt	/*:his*
:history	cmdline.txt	/*:history*
:history-indexing	cmdline.txt	/*:history-indexing*
:i	insert.txt	/*:i*
:ia	map.txt	/*:ia*
:iabbrev	map.txt	/*:iabbrev*
:iabc	map.txt	/*:iabc*
:iabclear	map.txt	/*:iabclear*
:if	eval.txt	/*:if*
:ij	tagsrch.txt	/*:ij*
:ijump	tagsrch.txt	/*:ijump*
:il	tagsrch.txt	/*:il*
:ilist	tagsrch.txt	/*:ilist*
:im	map.txt	/*:im*
:imap	map.txt	/*:imap*
:imap_l	map.txt	/*:imap_l*
:imapc	map.txt	/*:imapc*
:imapclear	map.txt	/*:imapclear*
:ime	gui.txt	/*:ime*
:imenu	gui.txt	/*:imenu*
:in	insert.txt	/*:in*
:index	index.txt	/*:index*
:ino	map.txt	/*:ino*
:inorea	map.txt	/*:inorea*
:inoreabbrev	map.txt	/*:inoreabbrev*
:inoremap	map.txt	/*:inoremap*
:inoreme	gui.txt	/*:inoreme*
:inoremenu	gui.txt	/*:inoremenu*
:insert	insert.txt	/*:insert*
:intro	starting.txt	/*:intro*
:is	tagsrch.txt	/*:is*
:isearch	tagsrch.txt	/*:isearch*
:isp	tagsrch.txt	/*:isp*
:isplit	tagsrch.txt	/*:isplit*
:iu	map.txt	/*:iu*
:iuna	map.txt	/*:iuna*
:iunabbrev	map.txt	/*:iunabbrev*
:iunmap	map.txt	/*:iunmap*
:iunme	gui.txt	/*:iunme*
:iunmenu	gui.txt	/*:iunmenu*
:j	change.txt	/*:j*
:join	change.txt	/*:join*
:ju	motion.txt	/*:ju*
:jumps	motion.txt	/*:jumps*
:k	motion.txt	/*:k*
:kee	motion.txt	/*:kee*
:keepa	editing.txt	/*:keepa*
:keepalt	editing.txt	/*:keepalt*
:keepj	motion.txt	/*:keepj*
:keepjumps	motion.txt	/*:keepjumps*
:keepmarks	motion.txt	/*:keepmarks*
:keepp	cmdline.txt	/*:keepp*
:keeppatterns	cmdline.txt	/*:keeppatterns*
:l	various.txt	/*:l*
:lN	quickfix.txt	/*:lN*
:lNext	quickfix.txt	/*:lNext*
:lNf	quickfix.txt	/*:lNf*
:lNfile	quickfix.txt	/*:lNfile*
:la	editing.txt	/*:la*
:lad	quickfix.txt	/*:lad*
:laddb	quickfix.txt	/*:laddb*
:laddbuffer	quickfix.txt	/*:laddbuffer*
:laddexpr	quickfix.txt	/*:laddexpr*
:laddf	quickfix.txt	/*:laddf*
:laddfile	quickfix.txt	/*:laddfile*
:lan	mlang.txt	/*:lan*
:lang	mlang.txt	/*:lang*
:language	mlang.txt	/*:language*
:last	editing.txt	/*:last*
:lat	undo.txt	/*:lat*
:later	undo.txt	/*:later*
:lb	quickfix.txt	/*:lb*
:lbo	quickfix.txt	/*:lbo*
:lbottom	quickfix.txt	/*:lbottom*
:lbuffer	quickfix.txt	/*:lbuffer*
:lc	editing.txt	/*:lc*
:lcd	editing.txt	/*:lcd*
:lch	editing.txt	/*:lch*
:lchdir	editing.txt	/*:lchdir*
:lcl	quickfix.txt	/*:lcl*
:lclose	quickfix.txt	/*:lclose*
:lcs	if_cscop.txt	/*:lcs*
:lcscope	if_cscop.txt	/*:lcscope*
:ldo	quickfix.txt	/*:ldo*
:le	change.txt	/*:le*
:left	change.txt	/*:left*
:lefta	windows.txt	/*:lefta*
:leftabove	windows.txt	/*:leftabove*
:let	eval.txt	/*:let*
:let+=	eval.txt	/*:let+=*
:let-$	eval.txt	/*:let-$*
:let-&	eval.txt	/*:let-&*
:let-=	eval.txt	/*:let-=*
:let-@	eval.txt	/*:let-@*
:let-environment	eval.txt	/*:let-environment*
:let-option	eval.txt	/*:let-option*
:let-register	eval.txt	/*:let-register*
:let-unpack	eval.txt	/*:let-unpack*
:let.=	eval.txt	/*:let.=*
:lex	quickfix.txt	/*:lex*
:lexpr	quickfix.txt	/*:lexpr*
:lf	quickfix.txt	/*:lf*
:lfdo	quickfix.txt	/*:lfdo*
:lfile	quickfix.txt	/*:lfile*
:lfir	quickfix.txt	/*:lfir*
:lfirst	quickfix.txt	/*:lfirst*
:lg	quickfix.txt	/*:lg*
:lgetb	quickfix.txt	/*:lgetb*
:lgetbuffer	quickfix.txt	/*:lgetbuffer*
:lgete	quickfix.txt	/*:lgete*
:lgetexpr	quickfix.txt	/*:lgetexpr*
:lgetfile	quickfix.txt	/*:lgetfile*
:lgr	quickfix.txt	/*:lgr*
:lgrep	quickfix.txt	/*:lgrep*
:lgrepa	quickfix.txt	/*:lgrepa*
:lgrepadd	quickfix.txt	/*:lgrepadd*
:lh	helphelp.txt	/*:lh*
:lhelpgrep	helphelp.txt	/*:lhelpgrep*
:lhi	quickfix.txt	/*:lhi*
:lhistory	quickfix.txt	/*:lhistory*
:list	various.txt	/*:list*
:ll	quickfix.txt	/*:ll*
:lla	quickfix.txt	/*:lla*
:llast	quickfix.txt	/*:llast*
:lli	quickfix.txt	/*:lli*
:llist	quickfix.txt	/*:llist*
:lm	map.txt	/*:lm*
:lmak	quickfix.txt	/*:lmak*
:lmake	quickfix.txt	/*:lmake*
:lmap	map.txt	/*:lmap*
:lmap_l	map.txt	/*:lmap_l*
:lmapc	map.txt	/*:lmapc*
:lmapclear	map.txt	/*:lmapclear*
:ln	map.txt	/*:ln*
:lne	quickfix.txt	/*:lne*
:lnew	quickfix.txt	/*:lnew*
:lnewer	quickfix.txt	/*:lnewer*
:lnext	quickfix.txt	/*:lnext*
:lnf	quickfix.txt	/*:lnf*
:lnfile	quickfix.txt	/*:lnfile*
:lnoremap	map.txt	/*:lnoremap*
:lo	starting.txt	/*:lo*
:loadk	mbyte.txt	/*:loadk*
:loadkeymap	mbyte.txt	/*:loadkeymap*
:loadview	starting.txt	/*:loadview*
:loc	motion.txt	/*:loc*
:lockmarks	motion.txt	/*:lockmarks*
:lockv	eval.txt	/*:lockv*
:lockvar	eval.txt	/*:lockvar*
:lol	quickfix.txt	/*:lol*
:lolder	quickfix.txt	/*:lolder*
:lop	quickfix.txt	/*:lop*
:lopen	quickfix.txt	/*:lopen*
:lp	quickfix.txt	/*:lp*
:lpf	quickfix.txt	/*:lpf*
:lpfile	quickfix.txt	/*:lpfile*
:lprevious	quickfix.txt	/*:lprevious*
:lr	quickfix.txt	/*:lr*
:lrewind	quickfix.txt	/*:lrewind*
:ls	windows.txt	/*:ls*
:lt	tagsrch.txt	/*:lt*
:ltag	tagsrch.txt	/*:ltag*
:lu	map.txt	/*:lu*
:lua	if_lua.txt	/*:lua*
:luado	if_lua.txt	/*:luado*
:luafile	if_lua.txt	/*:luafile*
:lunmap	map.txt	/*:lunmap*
:lv	quickfix.txt	/*:lv*
:lvimgrep	quickfix.txt	/*:lvimgrep*
:lvimgrepa	quickfix.txt	/*:lvimgrepa*
:lvimgrepadd	quickfix.txt	/*:lvimgrepadd*
:lw	quickfix.txt	/*:lw*
:lwindow	quickfix.txt	/*:lwindow*
:m	change.txt	/*:m*
:ma	motion.txt	/*:ma*
:mak	quickfix.txt	/*:mak*
:make	quickfix.txt	/*:make*
:make_makeprg	quickfix.txt	/*:make_makeprg*
:map	map.txt	/*:map*
:map!	map.txt	/*:map!*
:map-<buffer>	map.txt	/*:map-<buffer>*
:map-<expr>	map.txt	/*:map-<expr>*
:map-<nowait>	map.txt	/*:map-<nowait>*
:map-<script>	map.txt	/*:map-<script>*
:map-<silent>	map.txt	/*:map-<silent>*
:map-<special>	map.txt	/*:map-<special>*
:map-<unique>	map.txt	/*:map-<unique>*
:map-alt-keys	map.txt	/*:map-alt-keys*
:map-arguments	map.txt	/*:map-arguments*
:map-commands	map.txt	/*:map-commands*
:map-expression	map.txt	/*:map-expression*
:map-local	map.txt	/*:map-local*
:map-modes	map.txt	/*:map-modes*
:map-nowait	map.txt	/*:map-nowait*
:map-operator	map.txt	/*:map-operator*
:map-script	map.txt	/*:map-script*
:map-silent	map.txt	/*:map-silent*
:map-special	map.txt	/*:map-special*
:map-special-chars	map.txt	/*:map-special-chars*
:map-special-keys	map.txt	/*:map-special-keys*
:map-undo	map.txt	/*:map-undo*
:map-verbose	map.txt	/*:map-verbose*
:map_l	map.txt	/*:map_l*
:map_l!	map.txt	/*:map_l!*
:mapc	map.txt	/*:mapc*
:mapc!	map.txt	/*:mapc!*
:mapclear	map.txt	/*:mapclear*
:mapclear!	map.txt	/*:mapclear!*
:mark	motion.txt	/*:mark*
:marks	motion.txt	/*:marks*
:mat	pattern.txt	/*:mat*
:match	pattern.txt	/*:match*
:me	gui.txt	/*:me*
:menu	gui.txt	/*:menu*
:menu-<script>	gui.txt	/*:menu-<script>*
:menu-<silent>	gui.txt	/*:menu-<silent>*
:menu-<special>	gui.txt	/*:menu-<special>*
:menu-disable	gui.txt	/*:menu-disable*
:menu-enable	gui.txt	/*:menu-enable*
:menu-script	gui.txt	/*:menu-script*
:menu-silent	gui.txt	/*:menu-silent*
:menu-special	gui.txt	/*:menu-special*
:menut	mlang.txt	/*:menut*
:menutrans	mlang.txt	/*:menutrans*
:menutranslate	mlang.txt	/*:menutranslate*
:mes	message.txt	/*:mes*
:messages	message.txt	/*:messages*
:mk	starting.txt	/*:mk*
:mkexrc	starting.txt	/*:mkexrc*
:mks	starting.txt	/*:mks*
:mksession	starting.txt	/*:mksession*
:mksp	spell.txt	/*:mksp*
:mkspell	spell.txt	/*:mkspell*
:mkv	starting.txt	/*:mkv*
:mkvie	starting.txt	/*:mkvie*
:mkview	starting.txt	/*:mkview*
:mkvimrc	starting.txt	/*:mkvimrc*
:mo	change.txt	/*:mo*
:mod	term.txt	/*:mod*
:mode	term.txt	/*:mode*
:move	change.txt	/*:move*
:mz	if_mzsch.txt	/*:mz*
:mzf	if_mzsch.txt	/*:mzf*
:mzfile	if_mzsch.txt	/*:mzfile*
:mzscheme	if_mzsch.txt	/*:mzscheme*
:n	editing.txt	/*:n*
:nbclose	netbeans.txt	/*:nbclose*
:nbkey	netbeans.txt	/*:nbkey*
:nbstart	netbeans.txt	/*:nbstart*
:ne	editing.txt	/*:ne*
:new	windows.txt	/*:new*
:next	editing.txt	/*:next*
:next_f	editing.txt	/*:next_f*
:nm	map.txt	/*:nm*
:nmap	map.txt	/*:nmap*
:nmap_l	map.txt	/*:nmap_l*
:nmapc	map.txt	/*:nmapc*
:nmapclear	map.txt	/*:nmapclear*
:nme	gui.txt	/*:nme*
:nmenu	gui.txt	/*:nmenu*
:nn	map.txt	/*:nn*
:nnoremap	map.txt	/*:nnoremap*
:nnoreme	gui.txt	/*:nnoreme*
:nnoremenu	gui.txt	/*:nnoremenu*
:no	map.txt	/*:no*
:no!	map.txt	/*:no!*
:noa	autocmd.txt	/*:noa*
:noautocmd	autocmd.txt	/*:noautocmd*
:noh	pattern.txt	/*:noh*
:nohlsearch	pattern.txt	/*:nohlsearch*
:nor	map.txt	/*:nor*
:nore	map.txt	/*:nore*
:norea	map.txt	/*:norea*
:noreabbrev	map.txt	/*:noreabbrev*
:norem	map.txt	/*:norem*
:noremap	map.txt	/*:noremap*
:noremap!	map.txt	/*:noremap!*
:noreme	gui.txt	/*:noreme*
:noremenu	gui.txt	/*:noremenu*
:norm	various.txt	/*:norm*
:normal	various.txt	/*:normal*
:normal-range	various.txt	/*:normal-range*
:nos	recover.txt	/*:nos*
:noswapfile	recover.txt	/*:noswapfile*
:nu	various.txt	/*:nu*
:number	various.txt	/*:number*
:nun	map.txt	/*:nun*
:nunmap	map.txt	/*:nunmap*
:nunme	gui.txt	/*:nunme*
:nunmenu	gui.txt	/*:nunmenu*
:o	vi_diff.txt	/*:o*
:ol	starting.txt	/*:ol*
:oldfiles	starting.txt	/*:oldfiles*
:om	map.txt	/*:om*
:omap	map.txt	/*:omap*
:omap_l	map.txt	/*:omap_l*
:omapc	map.txt	/*:omapc*
:omapclear	map.txt	/*:omapclear*
:ome	gui.txt	/*:ome*
:omenu	gui.txt	/*:omenu*
:on	windows.txt	/*:on*
:only	windows.txt	/*:only*
:ono	map.txt	/*:ono*
:onoremap	map.txt	/*:onoremap*
:onoreme	gui.txt	/*:onoreme*
:onoremenu	gui.txt	/*:onoremenu*
:op	vi_diff.txt	/*:op*
:open	vi_diff.txt	/*:open*
:opt	options.txt	/*:opt*
:options	options.txt	/*:options*
:ou	map.txt	/*:ou*
:ounmap	map.txt	/*:ounmap*
:ounme	gui.txt	/*:ounme*
:ounmenu	gui.txt	/*:ounmenu*
:ownsyntax	syntax.txt	/*:ownsyntax*
:p	various.txt	/*:p*
:pa	repeat.txt	/*:pa*
:packadd	repeat.txt	/*:packadd*
:packl	repeat.txt	/*:packl*
:packloadall	repeat.txt	/*:packloadall*
:pc	windows.txt	/*:pc*
:pclose	windows.txt	/*:pclose*
:pe	if_perl.txt	/*:pe*
:ped	windows.txt	/*:ped*
:pedit	windows.txt	/*:pedit*
:perl	if_perl.txt	/*:perl*
:perld	if_perl.txt	/*:perld*
:perldo	if_perl.txt	/*:perldo*
:po	tagsrch.txt	/*:po*
:pop	tagsrch.txt	/*:pop*
:popu	gui.txt	/*:popu*
:popup	gui.txt	/*:popup*
:pp	windows.txt	/*:pp*
:ppop	windows.txt	/*:ppop*
:pr	various.txt	/*:pr*
:pre	recover.txt	/*:pre*
:preserve	recover.txt	/*:preserve*
:prev	editing.txt	/*:prev*
:previous	editing.txt	/*:previous*
:print	various.txt	/*:print*
:pro	change.txt	/*:pro*
:prof	repeat.txt	/*:prof*
:profd	repeat.txt	/*:profd*
:profdel	repeat.txt	/*:profdel*
:profile	repeat.txt	/*:profile*
:promptfind	change.txt	/*:promptfind*
:promptr	change.txt	/*:promptr*
:promptrepl	change.txt	/*:promptrepl*
:ps	windows.txt	/*:ps*
:psearch	windows.txt	/*:psearch*
:ptN	tagsrch.txt	/*:ptN*
:ptNext	tagsrch.txt	/*:ptNext*
:pta	windows.txt	/*:pta*
:ptag	windows.txt	/*:ptag*
:ptf	tagsrch.txt	/*:ptf*
:ptfirst	tagsrch.txt	/*:ptfirst*
:ptj	tagsrch.txt	/*:ptj*
:ptjump	tagsrch.txt	/*:ptjump*
:ptl	tagsrch.txt	/*:ptl*
:ptlast	tagsrch.txt	/*:ptlast*
:ptn	tagsrch.txt	/*:ptn*
:ptnext	tagsrch.txt	/*:ptnext*
:ptp	tagsrch.txt	/*:ptp*
:ptprevious	tagsrch.txt	/*:ptprevious*
:ptr	tagsrch.txt	/*:ptr*
:ptrewind	tagsrch.txt	/*:ptrewind*
:pts	tagsrch.txt	/*:pts*
:ptselect	tagsrch.txt	/*:ptselect*
:pu	change.txt	/*:pu*
:put	change.txt	/*:put*
:pw	editing.txt	/*:pw*
:pwd	editing.txt	/*:pwd*
:py	if_pyth.txt	/*:py*
:py3	if_pyth.txt	/*:py3*
:py3do	if_pyth.txt	/*:py3do*
:py3file	if_pyth.txt	/*:py3file*
:pydo	if_pyth.txt	/*:pydo*
:pyf	if_pyth.txt	/*:pyf*
:pyfile	if_pyth.txt	/*:pyfile*
:python	if_pyth.txt	/*:python*
:python3	if_pyth.txt	/*:python3*
:q	editing.txt	/*:q*
:qa	editing.txt	/*:qa*
:qall	editing.txt	/*:qall*
:quit	editing.txt	/*:quit*
:quita	editing.txt	/*:quita*
:quitall	editing.txt	/*:quitall*
:quote	cmdline.txt	/*:quote*
:r	insert.txt	/*:r*
:r!	insert.txt	/*:r!*
:range	cmdline.txt	/*:range*
:range!	change.txt	/*:range!*
:re	insert.txt	/*:re*
:read	insert.txt	/*:read*
:read!	insert.txt	/*:read!*
:rec	recover.txt	/*:rec*
:recover	recover.txt	/*:recover*
:recover-crypt	recover.txt	/*:recover-crypt*
:red	undo.txt	/*:red*
:redi	various.txt	/*:redi*
:redir	various.txt	/*:redir*
:redo	undo.txt	/*:redo*
:redr	various.txt	/*:redr*
:redraw	various.txt	/*:redraw*
:redraws	various.txt	/*:redraws*
:redrawstatus	various.txt	/*:redrawstatus*
:reg	change.txt	/*:reg*
:registers	change.txt	/*:registers*
:res	windows.txt	/*:res*
:resize	windows.txt	/*:resize*
:ret	change.txt	/*:ret*
:retab	change.txt	/*:retab*
:retab!	change.txt	/*:retab!*
:retu	eval.txt	/*:retu*
:return	eval.txt	/*:return*
:rew	editing.txt	/*:rew*
:rewind	editing.txt	/*:rewind*
:ri	change.txt	/*:ri*
:right	change.txt	/*:right*
:rightb	windows.txt	/*:rightb*
:rightbelow	windows.txt	/*:rightbelow*
:ru	repeat.txt	/*:ru*
:rub	if_ruby.txt	/*:rub*
:ruby	if_ruby.txt	/*:ruby*
:rubyd	if_ruby.txt	/*:rubyd*
:rubydo	if_ruby.txt	/*:rubydo*
:rubyf	if_ruby.txt	/*:rubyf*
:rubyfile	if_ruby.txt	/*:rubyfile*
:rundo	undo.txt	/*:rundo*
:runtime	repeat.txt	/*:runtime*
:rv	starting.txt	/*:rv*
:rviminfo	starting.txt	/*:rviminfo*
:s	change.txt	/*:s*
:s%	change.txt	/*:s%*
:sI	change.txt	/*:sI*
:sIc	change.txt	/*:sIc*
:sIe	change.txt	/*:sIe*
:sIg	change.txt	/*:sIg*
:sIl	change.txt	/*:sIl*
:sIn	change.txt	/*:sIn*
:sIp	change.txt	/*:sIp*
:sIr	change.txt	/*:sIr*
:sN	windows.txt	/*:sN*
:sNext	windows.txt	/*:sNext*
:s\=	change.txt	/*:s\\=*
:s_c	change.txt	/*:s_c*
:s_flags	change.txt	/*:s_flags*
:sa	windows.txt	/*:sa*
:sal	windows.txt	/*:sal*
:sall	windows.txt	/*:sall*
:san	eval.txt	/*:san*
:sandbox	eval.txt	/*:sandbox*
:sargument	windows.txt	/*:sargument*
:sav	editing.txt	/*:sav*
:saveas	editing.txt	/*:saveas*
:sb	windows.txt	/*:sb*
:sbN	windows.txt	/*:sbN*
:sbNext	windows.txt	/*:sbNext*
:sba	windows.txt	/*:sba*
:sball	windows.txt	/*:sball*
:sbf	windows.txt	/*:sbf*
:sbfirst	windows.txt	/*:sbfirst*
:sbl	windows.txt	/*:sbl*
:sblast	windows.txt	/*:sblast*
:sbm	windows.txt	/*:sbm*
:sbmodified	windows.txt	/*:sbmodified*
:sbn	windows.txt	/*:sbn*
:sbnext	windows.txt	/*:sbnext*
:sbp	windows.txt	/*:sbp*
:sbprevious	windows.txt	/*:sbprevious*
:sbr	windows.txt	/*:sbr*
:sbrewind	windows.txt	/*:sbrewind*
:sbuffer	windows.txt	/*:sbuffer*
:sc	change.txt	/*:sc*
:scI	change.txt	/*:scI*
:sce	change.txt	/*:sce*
:scg	change.txt	/*:scg*
:sci	change.txt	/*:sci*
:scl	change.txt	/*:scl*
:scp	change.txt	/*:scp*
:scr	repeat.txt	/*:scr*
:scripte	repeat.txt	/*:scripte*
:scriptencoding	repeat.txt	/*:scriptencoding*
:scriptnames	repeat.txt	/*:scriptnames*
:scs	if_cscop.txt	/*:scs*
:scscope	if_cscop.txt	/*:scscope*
:se	options.txt	/*:se*
:search-args	tagsrch.txt	/*:search-args*
:set	options.txt	/*:set*
:set+=	options.txt	/*:set+=*
:set-!	options.txt	/*:set-!*
:set-&	options.txt	/*:set-&*
:set-&vi	options.txt	/*:set-&vi*
:set-&vim	options.txt	/*:set-&vim*
:set-=	options.txt	/*:set-=*
:set-args	options.txt	/*:set-args*
:set-browse	options.txt	/*:set-browse*
:set-default	options.txt	/*:set-default*
:set-inv	options.txt	/*:set-inv*
:set-termcap	options.txt	/*:set-termcap*
:set-verbose	options.txt	/*:set-verbose*
:set^=	options.txt	/*:set^=*
:set_env	options.txt	/*:set_env*
:setf	options.txt	/*:setf*
:setfiletype	options.txt	/*:setfiletype*
:setg	options.txt	/*:setg*
:setglobal	options.txt	/*:setglobal*
:setl	options.txt	/*:setl*
:setlocal	options.txt	/*:setlocal*
:sf	windows.txt	/*:sf*
:sfind	windows.txt	/*:sfind*
:sfir	windows.txt	/*:sfir*
:sfirst	windows.txt	/*:sfirst*
:sg	change.txt	/*:sg*
:sgI	change.txt	/*:sgI*
:sgc	change.txt	/*:sgc*
:sge	change.txt	/*:sge*
:sgi	change.txt	/*:sgi*
:sgl	change.txt	/*:sgl*
:sgn	change.txt	/*:sgn*
:sgp	change.txt	/*:sgp*
:sgr	change.txt	/*:sgr*
:sh	various.txt	/*:sh*
:shell	various.txt	/*:shell*
:si	change.txt	/*:si*
:sic	change.txt	/*:sic*
:sie	change.txt	/*:sie*
:sig	sign.txt	/*:sig*
:sign	sign.txt	/*:sign*
:sign-define	sign.txt	/*:sign-define*
:sign-fname	sign.txt	/*:sign-fname*
:sign-jump	sign.txt	/*:sign-jump*
:sign-list	sign.txt	/*:sign-list*
:sign-place	sign.txt	/*:sign-place*
:sign-place-list	sign.txt	/*:sign-place-list*
:sign-undefine	sign.txt	/*:sign-undefine*
:sign-unplace	sign.txt	/*:sign-unplace*
:sil	various.txt	/*:sil*
:silent	various.txt	/*:silent*
:silent!	various.txt	/*:silent!*
:sim	gui_w32.txt	/*:sim*
:simalt	gui_w32.txt	/*:simalt*
:sin	change.txt	/*:sin*
:sip	change.txt	/*:sip*
:sir	change.txt	/*:sir*
:sl	various.txt	/*:sl*
:sla	windows.txt	/*:sla*
:slast	windows.txt	/*:slast*
:sleep	various.txt	/*:sleep*
:sm	change.txt	/*:sm*
:smagic	change.txt	/*:smagic*
:smap	map.txt	/*:smap*
:smap_l	map.txt	/*:smap_l*
:smapc	map.txt	/*:smapc*
:smapclear	map.txt	/*:smapclear*
:sme	gui.txt	/*:sme*
:smenu	gui.txt	/*:smenu*
:smile	index.txt	/*:smile*
:sn	windows.txt	/*:sn*
:snext	windows.txt	/*:snext*
:sno	change.txt	/*:sno*
:snomagic	change.txt	/*:snomagic*
:snor	map.txt	/*:snor*
:snoremap	map.txt	/*:snoremap*
:snoreme	gui.txt	/*:snoreme*
:snoremenu	gui.txt	/*:snoremenu*
:so	repeat.txt	/*:so*
:sor	change.txt	/*:sor*
:sort	change.txt	/*:sort*
:source	repeat.txt	/*:source*
:source_crnl	repeat.txt	/*:source_crnl*
:sp	windows.txt	/*:sp*
:spe	spell.txt	/*:spe*
:spelld	spell.txt	/*:spelld*
:spelldump	spell.txt	/*:spelldump*
:spellgood	spell.txt	/*:spellgood*
:spelli	spell.txt	/*:spelli*
:spellinfo	spell.txt	/*:spellinfo*
:spellr	spell.txt	/*:spellr*
:spellrepall	spell.txt	/*:spellrepall*
:spellu	spell.txt	/*:spellu*
:spellundo	spell.txt	/*:spellundo*
:spellw	spell.txt	/*:spellw*
:spellwrong	spell.txt	/*:spellwrong*
:split	windows.txt	/*:split*
:split_f	windows.txt	/*:split_f*
:spr	windows.txt	/*:spr*
:sprevious	windows.txt	/*:sprevious*
:sr	change.txt	/*:sr*
:srI	change.txt	/*:srI*
:src	change.txt	/*:src*
:sre	windows.txt	/*:sre*
:srewind	windows.txt	/*:srewind*
:srg	change.txt	/*:srg*
:sri	change.txt	/*:sri*
:srl	change.txt	/*:srl*
:srn	change.txt	/*:srn*
:srp	change.txt	/*:srp*
:st	starting.txt	/*:st*
:sta	windows.txt	/*:sta*
:stag	windows.txt	/*:stag*
:star	repeat.txt	/*:star*
:start	insert.txt	/*:start*
:startgreplace	insert.txt	/*:startgreplace*
:startinsert	insert.txt	/*:startinsert*
:startreplace	insert.txt	/*:startreplace*
:stj	tagsrch.txt	/*:stj*
:stjump	tagsrch.txt	/*:stjump*
:stop	starting.txt	/*:stop*
:stopi	insert.txt	/*:stopi*
:stopinsert	insert.txt	/*:stopinsert*
:sts	tagsrch.txt	/*:sts*
:stselect	tagsrch.txt	/*:stselect*
:su	change.txt	/*:su*
:substitute	change.txt	/*:substitute*
:sun	windows.txt	/*:sun*
:sunhide	windows.txt	/*:sunhide*
:sunm	map.txt	/*:sunm*
:sunmap	map.txt	/*:sunmap*
:sunme	gui.txt	/*:sunme*
:sunmenu	gui.txt	/*:sunmenu*
:sus	starting.txt	/*:sus*
:suspend	starting.txt	/*:suspend*
:sv	windows.txt	/*:sv*
:sview	windows.txt	/*:sview*
:sw	recover.txt	/*:sw*
:swapname	recover.txt	/*:swapname*
:sy	syntax.txt	/*:sy*
:syn	syntax.txt	/*:syn*
:syn-arguments	syntax.txt	/*:syn-arguments*
:syn-case	syntax.txt	/*:syn-case*
:syn-cchar	syntax.txt	/*:syn-cchar*
:syn-clear	syntax.txt	/*:syn-clear*
:syn-cluster	syntax.txt	/*:syn-cluster*
:syn-conceal	syntax.txt	/*:syn-conceal*
:syn-conceal-implicit	syntax.txt	/*:syn-conceal-implicit*
:syn-concealends	syntax.txt	/*:syn-concealends*
:syn-contained	syntax.txt	/*:syn-contained*
:syn-containedin	syntax.txt	/*:syn-containedin*
:syn-contains	syntax.txt	/*:syn-contains*
:syn-context	syntax.txt	/*:syn-context*
:syn-default-override	usr_06.txt	/*:syn-default-override*
:syn-define	syntax.txt	/*:syn-define*
:syn-display	syntax.txt	/*:syn-display*
:syn-enable	syntax.txt	/*:syn-enable*
:syn-end	syntax.txt	/*:syn-end*
:syn-excludenl	syntax.txt	/*:syn-excludenl*
:syn-ext-match	syntax.txt	/*:syn-ext-match*
:syn-extend	syntax.txt	/*:syn-extend*
:syn-file-remarks	syntax.txt	/*:syn-file-remarks*
:syn-files	syntax.txt	/*:syn-files*
:syn-fold	syntax.txt	/*:syn-fold*
:syn-include	syntax.txt	/*:syn-include*
:syn-iskeyword	syntax.txt	/*:syn-iskeyword*
:syn-keepend	syntax.txt	/*:syn-keepend*
:syn-keyword	syntax.txt	/*:syn-keyword*
:syn-lc	syntax.txt	/*:syn-lc*
:syn-leading	syntax.txt	/*:syn-leading*
:syn-list	syntax.txt	/*:syn-list*
:syn-manual	usr_06.txt	/*:syn-manual*
:syn-match	syntax.txt	/*:syn-match*
:syn-matchgroup	syntax.txt	/*:syn-matchgroup*
:syn-multi-line	syntax.txt	/*:syn-multi-line*
:syn-nextgroup	syntax.txt	/*:syn-nextgroup*
:syn-off	usr_06.txt	/*:syn-off*
:syn-on	syntax.txt	/*:syn-on*
:syn-oneline	syntax.txt	/*:syn-oneline*
:syn-pattern	syntax.txt	/*:syn-pattern*
:syn-pattern-offset	syntax.txt	/*:syn-pattern-offset*
:syn-priority	syntax.txt	/*:syn-priority*
:syn-qstart	syntax.txt	/*:syn-qstart*
:syn-region	syntax.txt	/*:syn-region*
:syn-reset	syntax.txt	/*:syn-reset*
:syn-skip	syntax.txt	/*:syn-skip*
:syn-skipempty	syntax.txt	/*:syn-skipempty*
:syn-skipnl	syntax.txt	/*:syn-skipnl*
:syn-skipwhite	syntax.txt	/*:syn-skipwhite*
:syn-spell	syntax.txt	/*:syn-spell*
:syn-start	syntax.txt	/*:syn-start*
:syn-sync	syntax.txt	/*:syn-sync*
:syn-sync-ccomment	syntax.txt	/*:syn-sync-ccomment*
:syn-sync-first	syntax.txt	/*:syn-sync-first*
:syn-sync-fourth	syntax.txt	/*:syn-sync-fourth*
:syn-sync-linebreaks	syntax.txt	/*:syn-sync-linebreaks*
:syn-sync-maxlines	syntax.txt	/*:syn-sync-maxlines*
:syn-sync-minlines	syntax.txt	/*:syn-sync-minlines*
:syn-sync-second	syntax.txt	/*:syn-sync-second*
:syn-sync-third	syntax.txt	/*:syn-sync-third*
:syn-transparent	syntax.txt	/*:syn-transparent*
:sync	scroll.txt	/*:sync*
:syncbind	scroll.txt	/*:syncbind*
:syntax	syntax.txt	/*:syntax*
:syntax-enable	syntax.txt	/*:syntax-enable*
:syntax-on	syntax.txt	/*:syntax-on*
:syntax-reset	syntax.txt	/*:syntax-reset*
:syntime	syntax.txt	/*:syntime*
:t	change.txt	/*:t*
:tN	tagsrch.txt	/*:tN*
:tNext	tagsrch.txt	/*:tNext*
:ta	tagsrch.txt	/*:ta*
:tab	tabpage.txt	/*:tab*
:tabN	tabpage.txt	/*:tabN*
:tabNext	tabpage.txt	/*:tabNext*
:tabc	tabpage.txt	/*:tabc*
:tabclose	tabpage.txt	/*:tabclose*
:tabd	tabpage.txt	/*:tabd*
:tabdo	tabpage.txt	/*:tabdo*
:tabe	tabpage.txt	/*:tabe*
:tabedit	tabpage.txt	/*:tabedit*
:tabf	tabpage.txt	/*:tabf*
:tabfind	tabpage.txt	/*:tabfind*
:tabfir	tabpage.txt	/*:tabfir*
:tabfirst	tabpage.txt	/*:tabfirst*
:tabl	tabpage.txt	/*:tabl*
:tablast	tabpage.txt	/*:tablast*
:tabm	tabpage.txt	/*:tabm*
:tabmove	tabpage.txt	/*:tabmove*
:tabn	tabpage.txt	/*:tabn*
:tabnew	tabpage.txt	/*:tabnew*
:tabnext	tabpage.txt	/*:tabnext*
:tabo	tabpage.txt	/*:tabo*
:tabonly	tabpage.txt	/*:tabonly*
:tabp	tabpage.txt	/*:tabp*
:tabprevious	tabpage.txt	/*:tabprevious*
:tabr	tabpage.txt	/*:tabr*
:tabrewind	tabpage.txt	/*:tabrewind*
:tabs	tabpage.txt	/*:tabs*
:tag	tagsrch.txt	/*:tag*
:tags	tagsrch.txt	/*:tags*
:tc	if_tcl.txt	/*:tc*
:tcl	if_tcl.txt	/*:tcl*
:tcld	if_tcl.txt	/*:tcld*
:tcldo	if_tcl.txt	/*:tcldo*
:tclf	if_tcl.txt	/*:tclf*
:tclfile	if_tcl.txt	/*:tclfile*
:te	gui_w32.txt	/*:te*
:tearoff	gui_w32.txt	/*:tearoff*
:tf	tagsrch.txt	/*:tf*
:tfirst	tagsrch.txt	/*:tfirst*
:th	eval.txt	/*:th*
:throw	eval.txt	/*:throw*
:tj	tagsrch.txt	/*:tj*
:tjump	tagsrch.txt	/*:tjump*
:tl	tagsrch.txt	/*:tl*
:tlast	tagsrch.txt	/*:tlast*
:tm	gui.txt	/*:tm*
:tmenu	gui.txt	/*:tmenu*
:tn	tagsrch.txt	/*:tn*
:tnext	tagsrch.txt	/*:tnext*
:topleft	windows.txt	/*:topleft*
:tp	tagsrch.txt	/*:tp*
:tprevious	tagsrch.txt	/*:tprevious*
:tr	tagsrch.txt	/*:tr*
:trewind	tagsrch.txt	/*:trewind*
:try	eval.txt	/*:try*
:ts	tagsrch.txt	/*:ts*
:tselect	tagsrch.txt	/*:tselect*
:tu	gui.txt	/*:tu*
:tunmenu	gui.txt	/*:tunmenu*
:u	undo.txt	/*:u*
:un	undo.txt	/*:un*
:una	map.txt	/*:una*
:unabbreviate	map.txt	/*:unabbreviate*
:undo	undo.txt	/*:undo*
:undoj	undo.txt	/*:undoj*
:undojoin	undo.txt	/*:undojoin*
:undol	undo.txt	/*:undol*
:undolist	undo.txt	/*:undolist*
:unh	windows.txt	/*:unh*
:unhide	windows.txt	/*:unhide*
:unl	eval.txt	/*:unl*
:unlet	eval.txt	/*:unlet*
:unlo	eval.txt	/*:unlo*
:unlockvar	eval.txt	/*:unlockvar*
:unm	map.txt	/*:unm*
:unm!	map.txt	/*:unm!*
:unmap	map.txt	/*:unmap*
:unmap!	map.txt	/*:unmap!*
:unme	gui.txt	/*:unme*
:unmenu	gui.txt	/*:unmenu*
:unmenu-all	gui.txt	/*:unmenu-all*
:uns	various.txt	/*:uns*
:unsilent	various.txt	/*:unsilent*
:up	editing.txt	/*:up*
:update	editing.txt	/*:update*
:v	repeat.txt	/*:v*
:ve	various.txt	/*:ve*
:verb	various.txt	/*:verb*
:verbose	various.txt	/*:verbose*
:verbose-cmd	various.txt	/*:verbose-cmd*
:version	various.txt	/*:version*
:vert	windows.txt	/*:vert*
:vertical	windows.txt	/*:vertical*
:vertical-resize	windows.txt	/*:vertical-resize*
:vglobal	repeat.txt	/*:vglobal*
:vi	editing.txt	/*:vi*
:vie	editing.txt	/*:vie*
:view	editing.txt	/*:view*
:vim	quickfix.txt	/*:vim*
:vimgrep	quickfix.txt	/*:vimgrep*
:vimgrepa	quickfix.txt	/*:vimgrepa*
:vimgrepadd	quickfix.txt	/*:vimgrepadd*
:visual	editing.txt	/*:visual*
:visual_example	visual.txt	/*:visual_example*
:viu	helphelp.txt	/*:viu*
:viusage	helphelp.txt	/*:viusage*
:vm	map.txt	/*:vm*
:vmap	map.txt	/*:vmap*
:vmap_l	map.txt	/*:vmap_l*
:vmapc	map.txt	/*:vmapc*
:vmapclear	map.txt	/*:vmapclear*
:vme	gui.txt	/*:vme*
:vmenu	gui.txt	/*:vmenu*
:vn	map.txt	/*:vn*
:vne	windows.txt	/*:vne*
:vnew	windows.txt	/*:vnew*
:vnoremap	map.txt	/*:vnoremap*
:vnoreme	gui.txt	/*:vnoreme*
:vnoremenu	gui.txt	/*:vnoremenu*
:vs	windows.txt	/*:vs*
:vsplit	windows.txt	/*:vsplit*
:vu	map.txt	/*:vu*
:vunmap	map.txt	/*:vunmap*
:vunme	gui.txt	/*:vunme*
:vunmenu	gui.txt	/*:vunmenu*
:w	editing.txt	/*:w*
:w!	editing.txt	/*:w!*
:wN	editing.txt	/*:wN*
:wNext	editing.txt	/*:wNext*
:w_a	editing.txt	/*:w_a*
:w_c	editing.txt	/*:w_c*
:w_f	editing.txt	/*:w_f*
:wa	editing.txt	/*:wa*
:wall	editing.txt	/*:wall*
:wh	eval.txt	/*:wh*
:while	eval.txt	/*:while*
:win	gui.txt	/*:win*
:winc	windows.txt	/*:winc*
:wincmd	windows.txt	/*:wincmd*
:windo	windows.txt	/*:windo*
:winp	gui.txt	/*:winp*
:winpos	gui.txt	/*:winpos*
:winsize	gui.txt	/*:winsize*
:wn	editing.txt	/*:wn*
:wnext	editing.txt	/*:wnext*
:wp	editing.txt	/*:wp*
:wprevious	editing.txt	/*:wprevious*
:wq	editing.txt	/*:wq*
:wqa	editing.txt	/*:wqa*
:wqall	editing.txt	/*:wqall*
:write	editing.txt	/*:write*
:write_a	editing.txt	/*:write_a*
:write_c	editing.txt	/*:write_c*
:write_f	editing.txt	/*:write_f*
:ws	workshop.txt	/*:ws*
:wsverb	workshop.txt	/*:wsverb*
:wundo	undo.txt	/*:wundo*
:wv	starting.txt	/*:wv*
:wviminfo	starting.txt	/*:wviminfo*
:x	editing.txt	/*:x*
:xa	editing.txt	/*:xa*
:xall	editing.txt	/*:xall*
:xit	editing.txt	/*:xit*
:xm	map.txt	/*:xm*
:xmap	map.txt	/*:xmap*
:xmap_l	map.txt	/*:xmap_l*
:xmapc	map.txt	/*:xmapc*
:xmapclear	map.txt	/*:xmapclear*
:xme	gui.txt	/*:xme*
:xmenu	gui.txt	/*:xmenu*
:xn	map.txt	/*:xn*
:xnoremap	map.txt	/*:xnoremap*
:xnoreme	gui.txt	/*:xnoreme*
:xnoremenu	gui.txt	/*:xnoremenu*
:xu	map.txt	/*:xu*
:xunmap	map.txt	/*:xunmap*
:xunme	gui.txt	/*:xunme*
:xunmenu	gui.txt	/*:xunmenu*
:y	change.txt	/*:y*
:yank	change.txt	/*:yank*
:z	various.txt	/*:z*
:z#	various.txt	/*:z#*
:~	change.txt	/*:~*
;	motion.txt	/*;*
<	change.txt	/*<*
<2-LeftMouse>	term.txt	/*<2-LeftMouse>*
<3-LeftMouse>	term.txt	/*<3-LeftMouse>*
<4-LeftMouse>	term.txt	/*<4-LeftMouse>*
<<	change.txt	/*<<*
<>	intro.txt	/*<>*
<A-	intro.txt	/*<A-*
<A-LeftMouse>	term.txt	/*<A-LeftMouse>*
<A-RightMouse>	term.txt	/*<A-RightMouse>*
<BS>	motion.txt	/*<BS>*
<Bar>	intro.txt	/*<Bar>*
<Bslash>	intro.txt	/*<Bslash>*
<C-	intro.txt	/*<C-*
<C-Del>	os_dos.txt	/*<C-Del>*
<C-End>	motion.txt	/*<C-End>*
<C-Home>	motion.txt	/*<C-Home>*
<C-Insert>	os_dos.txt	/*<C-Insert>*
<C-Left>	motion.txt	/*<C-Left>*
<C-LeftMouse>	tagsrch.txt	/*<C-LeftMouse>*
<C-PageDown>	tabpage.txt	/*<C-PageDown>*
<C-PageUp>	tabpage.txt	/*<C-PageUp>*
<C-Right>	motion.txt	/*<C-Right>*
<C-RightMouse>	tagsrch.txt	/*<C-RightMouse>*
<C-ScrollWheelDown>	scroll.txt	/*<C-ScrollWheelDown>*
<C-ScrollWheelLeft>	scroll.txt	/*<C-ScrollWheelLeft>*
<C-ScrollWheelRight>	scroll.txt	/*<C-ScrollWheelRight>*
<C-ScrollWheelUp>	scroll.txt	/*<C-ScrollWheelUp>*
<CR>	motion.txt	/*<CR>*
<CSI>	intro.txt	/*<CSI>*
<Char->	map.txt	/*<Char->*
<Char>	map.txt	/*<Char>*
<CursorHold>	autocmd.txt	/*<CursorHold>*
<D-	intro.txt	/*<D-*
<Del>	change.txt	/*<Del>*
<Down>	motion.txt	/*<Down>*
<Drop>	change.txt	/*<Drop>*
<EOL>	intro.txt	/*<EOL>*
<End>	motion.txt	/*<End>*
<Enter>	intro.txt	/*<Enter>*
<Esc>	intro.txt	/*<Esc>*
<F10>	term.txt	/*<F10>*
<F11>	term.txt	/*<F11>*
<F12>	term.txt	/*<F12>*
<F13>	term.txt	/*<F13>*
<F14>	term.txt	/*<F14>*
<F15>	term.txt	/*<F15>*
<F16>	term.txt	/*<F16>*
<F17>	term.txt	/*<F17>*
<F18>	term.txt	/*<F18>*
<F19>	term.txt	/*<F19>*
<F1>	helphelp.txt	/*<F1>*
<F2>	term.txt	/*<F2>*
<F3>	term.txt	/*<F3>*
<F4>	term.txt	/*<F4>*
<F5>	term.txt	/*<F5>*
<F6>	term.txt	/*<F6>*
<F7>	term.txt	/*<F7>*
<F8>	term.txt	/*<F8>*
<F9>	term.txt	/*<F9>*
<Help>	helphelp.txt	/*<Help>*
<Home>	motion.txt	/*<Home>*
<Insert>	insert.txt	/*<Insert>*
<Leader>	map.txt	/*<Leader>*
<Left>	motion.txt	/*<Left>*
<LeftDrag>	term.txt	/*<LeftDrag>*
<LeftMouse>	visual.txt	/*<LeftMouse>*
<LeftRelease>	visual.txt	/*<LeftRelease>*
<LocalLeader>	map.txt	/*<LocalLeader>*
<M-	intro.txt	/*<M-*
<MiddleDrag>	term.txt	/*<MiddleDrag>*
<MiddleMouse>	change.txt	/*<MiddleMouse>*
<MiddleRelease>	term.txt	/*<MiddleRelease>*
<Mouse>	term.txt	/*<Mouse>*
<MouseDown>	scroll.txt	/*<MouseDown>*
<MouseUp>	scroll.txt	/*<MouseUp>*
<NL>	motion.txt	/*<NL>*
<Nop>	map.txt	/*<Nop>*
<Nul>	intro.txt	/*<Nul>*
<PageDown>	scroll.txt	/*<PageDown>*
<PageUp>	scroll.txt	/*<PageUp>*
<Plug>	map.txt	/*<Plug>*
<Return>	intro.txt	/*<Return>*
<Right>	motion.txt	/*<Right>*
<RightDrag>	term.txt	/*<RightDrag>*
<RightMouse>	visual.txt	/*<RightMouse>*
<RightRelease>	term.txt	/*<RightRelease>*
<S-	intro.txt	/*<S-*
<S-Del>	os_dos.txt	/*<S-Del>*
<S-Down>	scroll.txt	/*<S-Down>*
<S-End>	term.txt	/*<S-End>*
<S-F10>	term.txt	/*<S-F10>*
<S-F11>	term.txt	/*<S-F11>*
<S-F12>	term.txt	/*<S-F12>*
<S-F1>	intro.txt	/*<S-F1>*
<S-F2>	term.txt	/*<S-F2>*
<S-F3>	term.txt	/*<S-F3>*
<S-F4>	term.txt	/*<S-F4>*
<S-F5>	term.txt	/*<S-F5>*
<S-F6>	term.txt	/*<S-F6>*
<S-F7>	term.txt	/*<S-F7>*
<S-F8>	term.txt	/*<S-F8>*
<S-F9>	term.txt	/*<S-F9>*
<S-Home>	term.txt	/*<S-Home>*
<S-Insert>	os_dos.txt	/*<S-Insert>*
<S-Left>	motion.txt	/*<S-Left>*
<S-LeftMouse>	term.txt	/*<S-LeftMouse>*
<S-Right>	motion.txt	/*<S-Right>*
<S-RightMouse>	term.txt	/*<S-RightMouse>*
<S-ScrollWheelDown>	scroll.txt	/*<S-ScrollWheelDown>*
<S-ScrollWheelLeft>	scroll.txt	/*<S-ScrollWheelLeft>*
<S-ScrollWheelRight>	scroll.txt	/*<S-ScrollWheelRight>*
<S-ScrollWheelUp>	scroll.txt	/*<S-ScrollWheelUp>*
<S-Tab>	term.txt	/*<S-Tab>*
<S-Up>	scroll.txt	/*<S-Up>*
<S-xF1>	term.txt	/*<S-xF1>*
<S-xF2>	term.txt	/*<S-xF2>*
<S-xF3>	term.txt	/*<S-xF3>*
<S-xF4>	term.txt	/*<S-xF4>*
<SID>	map.txt	/*<SID>*
<SNR>	map.txt	/*<SNR>*
<ScrollWheelDown>	scroll.txt	/*<ScrollWheelDown>*
<ScrollWheelLeft>	scroll.txt	/*<ScrollWheelLeft>*
<ScrollWheelRight>	scroll.txt	/*<ScrollWheelRight>*
<ScrollWheelUp>	scroll.txt	/*<ScrollWheelUp>*
<Space>	motion.txt	/*<Space>*
<Tab>	motion.txt	/*<Tab>*
<Undo>	undo.txt	/*<Undo>*
<Up>	motion.txt	/*<Up>*
<abuf>	cmdline.txt	/*<abuf>*
<afile>	cmdline.txt	/*<afile>*
<amatch>	cmdline.txt	/*<amatch>*
<args>	map.txt	/*<args>*
<bang>	map.txt	/*<bang>*
<buffer=N>	autocmd.txt	/*<buffer=N>*
<buffer=abuf>	autocmd.txt	/*<buffer=abuf>*
<cfile>	cmdline.txt	/*<cfile>*
<character>	intro.txt	/*<character>*
<count>	map.txt	/*<count>*
<f-args>	map.txt	/*<f-args>*
<k0>	term.txt	/*<k0>*
<k1>	term.txt	/*<k1>*
<k2>	term.txt	/*<k2>*
<k3>	term.txt	/*<k3>*
<k4>	term.txt	/*<k4>*
<k5>	term.txt	/*<k5>*
<k6>	term.txt	/*<k6>*
<k7>	term.txt	/*<k7>*
<k8>	term.txt	/*<k8>*
<k9>	term.txt	/*<k9>*
<kDivide>	term.txt	/*<kDivide>*
<kEnd>	motion.txt	/*<kEnd>*
<kEnter>	term.txt	/*<kEnter>*
<kHome>	motion.txt	/*<kHome>*
<kMinus>	term.txt	/*<kMinus>*
<kMultiply>	term.txt	/*<kMultiply>*
<kPageDown>	scroll.txt	/*<kPageDown>*
<kPageUp>	scroll.txt	/*<kPageUp>*
<kPlus>	term.txt	/*<kPlus>*
<kPoint>	term.txt	/*<kPoint>*
<line1>	map.txt	/*<line1>*
<line2>	map.txt	/*<line2>*
<lt>	intro.txt	/*<lt>*
<mods>	map.txt	/*<mods>*
<nomodeline>	autocmd.txt	/*<nomodeline>*
<q-args>	map.txt	/*<q-args>*
<reg>	map.txt	/*<reg>*
<register>	map.txt	/*<register>*
<sfile>	cmdline.txt	/*<sfile>*
<slnum>	cmdline.txt	/*<slnum>*
<xCSI>	intro.txt	/*<xCSI>*
<xDown>	term.txt	/*<xDown>*
<xEnd>	term.txt	/*<xEnd>*
<xEnd>-xterm	term.txt	/*<xEnd>-xterm*
<xF1>	term.txt	/*<xF1>*
<xF1>-xterm	term.txt	/*<xF1>-xterm*
<xF2>	term.txt	/*<xF2>*
<xF2>-xterm	term.txt	/*<xF2>-xterm*
<xF3>	term.txt	/*<xF3>*
<xF3>-xterm	term.txt	/*<xF3>-xterm*
<xF4>	term.txt	/*<xF4>*
<xF4>-xterm	term.txt	/*<xF4>-xterm*
<xHome>	term.txt	/*<xHome>*
<xHome>-xterm	term.txt	/*<xHome>-xterm*
<xLeft>	term.txt	/*<xLeft>*
<xRight>	term.txt	/*<xRight>*
<xUp>	term.txt	/*<xUp>*
=	change.txt	/*=*
==	change.txt	/*==*
>	change.txt	/*>*
>>	change.txt	/*>>*
>backtrace	repeat.txt	/*>backtrace*
>bt	repeat.txt	/*>bt*
>cont	repeat.txt	/*>cont*
>down	repeat.txt	/*>down*
>finish	repeat.txt	/*>finish*
>frame	repeat.txt	/*>frame*
>interrupt	repeat.txt	/*>interrupt*
>next	repeat.txt	/*>next*
>quit	repeat.txt	/*>quit*
>step	repeat.txt	/*>step*
>up	repeat.txt	/*>up*
>where	repeat.txt	/*>where*
?	pattern.txt	/*?*
?<CR>	pattern.txt	/*?<CR>*
@	repeat.txt	/*@*
@/	change.txt	/*@\/*
@:	repeat.txt	/*@:*
@=	change.txt	/*@=*
@@	repeat.txt	/*@@*
@r	eval.txt	/*@r*
A	insert.txt	/*A*
ACL	editing.txt	/*ACL*
ATTENTION	usr_11.txt	/*ATTENTION*
Abbreviations	map.txt	/*Abbreviations*
Aleph	options.txt	/*Aleph*
Amiga	os_amiga.txt	/*Amiga*
Arabic	arabic.txt	/*Arabic*
Atari	os_mint.txt	/*Atari*
Athena	gui_x11.txt	/*Athena*
B	motion.txt	/*B*
BeBox	os_beos.txt	/*BeBox*
BeOS	os_beos.txt	/*BeOS*
Bram	intro.txt	/*Bram*
BufAdd	autocmd.txt	/*BufAdd*
BufCreate	autocmd.txt	/*BufCreate*
BufDelete	autocmd.txt	/*BufDelete*
BufEnter	autocmd.txt	/*BufEnter*
BufFilePost	autocmd.txt	/*BufFilePost*
BufFilePre	autocmd.txt	/*BufFilePre*
BufHidden	autocmd.txt	/*BufHidden*
BufLeave	autocmd.txt	/*BufLeave*
BufNew	autocmd.txt	/*BufNew*
BufNewFile	autocmd.txt	/*BufNewFile*
BufRead	autocmd.txt	/*BufRead*
BufReadCmd	autocmd.txt	/*BufReadCmd*
BufReadPost	autocmd.txt	/*BufReadPost*
BufReadPre	autocmd.txt	/*BufReadPre*
BufUnload	autocmd.txt	/*BufUnload*
BufWinEnter	autocmd.txt	/*BufWinEnter*
BufWinLeave	autocmd.txt	/*BufWinLeave*
BufWipeout	autocmd.txt	/*BufWipeout*
BufWrite	autocmd.txt	/*BufWrite*
BufWriteCmd	autocmd.txt	/*BufWriteCmd*
BufWritePost	autocmd.txt	/*BufWritePost*
BufWritePre	autocmd.txt	/*BufWritePre*
C	change.txt	/*C*
C-editing	tips.txt	/*C-editing*
C-indenting	indent.txt	/*C-indenting*
COMSPEC	starting.txt	/*COMSPEC*
CR-used-for-NL	pattern.txt	/*CR-used-for-NL*
CTRL-6	editing.txt	/*CTRL-6*
CTRL-<PageDown>	tabpage.txt	/*CTRL-<PageDown>*
CTRL-<PageUp>	tabpage.txt	/*CTRL-<PageUp>*
CTRL-A	change.txt	/*CTRL-A*
CTRL-B	scroll.txt	/*CTRL-B*
CTRL-C	pattern.txt	/*CTRL-C*
CTRL-D	scroll.txt	/*CTRL-D*
CTRL-E	scroll.txt	/*CTRL-E*
CTRL-F	scroll.txt	/*CTRL-F*
CTRL-G	editing.txt	/*CTRL-G*
CTRL-H	motion.txt	/*CTRL-H*
CTRL-I	motion.txt	/*CTRL-I*
CTRL-J	motion.txt	/*CTRL-J*
CTRL-L	various.txt	/*CTRL-L*
CTRL-M	motion.txt	/*CTRL-M*
CTRL-N	motion.txt	/*CTRL-N*
CTRL-O	motion.txt	/*CTRL-O*
CTRL-P	motion.txt	/*CTRL-P*
CTRL-Q	gui_w32.txt	/*CTRL-Q*
CTRL-R	undo.txt	/*CTRL-R*
CTRL-T	tagsrch.txt	/*CTRL-T*
CTRL-U	scroll.txt	/*CTRL-U*
CTRL-U-changed	version6.txt	/*CTRL-U-changed*
CTRL-V	visual.txt	/*CTRL-V*
CTRL-V-alternative	gui_w32.txt	/*CTRL-V-alternative*
CTRL-W	index.txt	/*CTRL-W*
CTRL-W_+	windows.txt	/*CTRL-W_+*
CTRL-W_-	windows.txt	/*CTRL-W_-*
CTRL-W_<	windows.txt	/*CTRL-W_<*
CTRL-W_<BS>	windows.txt	/*CTRL-W_<BS>*
CTRL-W_<CR>	quickfix.txt	/*CTRL-W_<CR>*
CTRL-W_<Down>	windows.txt	/*CTRL-W_<Down>*
CTRL-W_<Enter>	quickfix.txt	/*CTRL-W_<Enter>*
CTRL-W_<Left>	windows.txt	/*CTRL-W_<Left>*
CTRL-W_<Right>	windows.txt	/*CTRL-W_<Right>*
CTRL-W_<Up>	windows.txt	/*CTRL-W_<Up>*
CTRL-W_=	windows.txt	/*CTRL-W_=*
CTRL-W_>	windows.txt	/*CTRL-W_>*
CTRL-W_CTRL-B	windows.txt	/*CTRL-W_CTRL-B*
CTRL-W_CTRL-C	windows.txt	/*CTRL-W_CTRL-C*
CTRL-W_CTRL-D	tagsrch.txt	/*CTRL-W_CTRL-D*
CTRL-W_CTRL-F	windows.txt	/*CTRL-W_CTRL-F*
CTRL-W_CTRL-H	windows.txt	/*CTRL-W_CTRL-H*
CTRL-W_CTRL-I	tagsrch.txt	/*CTRL-W_CTRL-I*
CTRL-W_CTRL-J	windows.txt	/*CTRL-W_CTRL-J*
CTRL-W_CTRL-K	windows.txt	/*CTRL-W_CTRL-K*
CTRL-W_CTRL-L	windows.txt	/*CTRL-W_CTRL-L*
CTRL-W_CTRL-N	windows.txt	/*CTRL-W_CTRL-N*
CTRL-W_CTRL-O	windows.txt	/*CTRL-W_CTRL-O*
CTRL-W_CTRL-P	windows.txt	/*CTRL-W_CTRL-P*
CTRL-W_CTRL-Q	windows.txt	/*CTRL-W_CTRL-Q*
CTRL-W_CTRL-R	windows.txt	/*CTRL-W_CTRL-R*
CTRL-W_CTRL-S	windows.txt	/*CTRL-W_CTRL-S*
CTRL-W_CTRL-T	windows.txt	/*CTRL-W_CTRL-T*
CTRL-W_CTRL-V	windows.txt	/*CTRL-W_CTRL-V*
CTRL-W_CTRL-W	windows.txt	/*CTRL-W_CTRL-W*
CTRL-W_CTRL-X	windows.txt	/*CTRL-W_CTRL-X*
CTRL-W_CTRL-Z	windows.txt	/*CTRL-W_CTRL-Z*
CTRL-W_CTRL-]	windows.txt	/*CTRL-W_CTRL-]*
CTRL-W_CTRL-^	windows.txt	/*CTRL-W_CTRL-^*
CTRL-W_CTRL-_	windows.txt	/*CTRL-W_CTRL-_*
CTRL-W_F	windows.txt	/*CTRL-W_F*
CTRL-W_H	windows.txt	/*CTRL-W_H*
CTRL-W_J	windows.txt	/*CTRL-W_J*
CTRL-W_K	windows.txt	/*CTRL-W_K*
CTRL-W_L	windows.txt	/*CTRL-W_L*
CTRL-W_P	windows.txt	/*CTRL-W_P*
CTRL-W_R	windows.txt	/*CTRL-W_R*
CTRL-W_S	windows.txt	/*CTRL-W_S*
CTRL-W_T	windows.txt	/*CTRL-W_T*
CTRL-W_W	windows.txt	/*CTRL-W_W*
CTRL-W_]	windows.txt	/*CTRL-W_]*
CTRL-W_^	windows.txt	/*CTRL-W_^*
CTRL-W__	windows.txt	/*CTRL-W__*
CTRL-W_b	windows.txt	/*CTRL-W_b*
CTRL-W_bar	windows.txt	/*CTRL-W_bar*
CTRL-W_c	windows.txt	/*CTRL-W_c*
CTRL-W_d	tagsrch.txt	/*CTRL-W_d*
CTRL-W_f	windows.txt	/*CTRL-W_f*
CTRL-W_gF	windows.txt	/*CTRL-W_gF*
CTRL-W_g]	windows.txt	/*CTRL-W_g]*
CTRL-W_g_CTRL-]	windows.txt	/*CTRL-W_g_CTRL-]*
CTRL-W_gf	windows.txt	/*CTRL-W_gf*
CTRL-W_g}	windows.txt	/*CTRL-W_g}*
CTRL-W_h	windows.txt	/*CTRL-W_h*
CTRL-W_i	tagsrch.txt	/*CTRL-W_i*
CTRL-W_j	windows.txt	/*CTRL-W_j*
CTRL-W_k	windows.txt	/*CTRL-W_k*
CTRL-W_l	windows.txt	/*CTRL-W_l*
CTRL-W_n	windows.txt	/*CTRL-W_n*
CTRL-W_o	windows.txt	/*CTRL-W_o*
CTRL-W_p	windows.txt	/*CTRL-W_p*
CTRL-W_q	windows.txt	/*CTRL-W_q*
CTRL-W_r	windows.txt	/*CTRL-W_r*
CTRL-W_s	windows.txt	/*CTRL-W_s*
CTRL-W_t	windows.txt	/*CTRL-W_t*
CTRL-W_v	windows.txt	/*CTRL-W_v*
CTRL-W_w	windows.txt	/*CTRL-W_w*
CTRL-W_x	windows.txt	/*CTRL-W_x*
CTRL-W_z	windows.txt	/*CTRL-W_z*
CTRL-W_}	windows.txt	/*CTRL-W_}*
CTRL-X	change.txt	/*CTRL-X*
CTRL-Y	scroll.txt	/*CTRL-Y*
CTRL-Z	starting.txt	/*CTRL-Z*
CTRL-\_CTRL-G	intro.txt	/*CTRL-\\_CTRL-G*
CTRL-\_CTRL-N	intro.txt	/*CTRL-\\_CTRL-N*
CTRL-]	tagsrch.txt	/*CTRL-]*
CTRL-^	editing.txt	/*CTRL-^*
CTRL-{char}	intro.txt	/*CTRL-{char}*
Channel	eval.txt	/*Channel*
Channels	eval.txt	/*Channels*
Chinese	mbyte.txt	/*Chinese*
Cmd-event	autocmd.txt	/*Cmd-event*
CmdUndefined	autocmd.txt	/*CmdUndefined*
Cmdline	cmdline.txt	/*Cmdline*
Cmdline-mode	cmdline.txt	/*Cmdline-mode*
CmdwinEnter	autocmd.txt	/*CmdwinEnter*
CmdwinLeave	autocmd.txt	/*CmdwinLeave*
ColorScheme	autocmd.txt	/*ColorScheme*
Command-line	cmdline.txt	/*Command-line*
Command-line-mode	cmdline.txt	/*Command-line-mode*
CompleteDone	autocmd.txt	/*CompleteDone*
Contents	quickref.txt	/*Contents*
Cscope	if_cscop.txt	/*Cscope*
CursorHold	autocmd.txt	/*CursorHold*
CursorHold-example	windows.txt	/*CursorHold-example*
CursorHoldI	autocmd.txt	/*CursorHoldI*
CursorIM	mbyte.txt	/*CursorIM*
CursorMoved	autocmd.txt	/*CursorMoved*
CursorMovedI	autocmd.txt	/*CursorMovedI*
D	change.txt	/*D*
DOS	os_dos.txt	/*DOS*
DOS-format	editing.txt	/*DOS-format*
DOS-format-write	editing.txt	/*DOS-format-write*
Dictionaries	eval.txt	/*Dictionaries*
Dictionary	eval.txt	/*Dictionary*
Dictionary-function	eval.txt	/*Dictionary-function*
Digraphs	digraph.txt	/*Digraphs*
E	motion.txt	/*E*
E10	message.txt	/*E10*
E100	diff.txt	/*E100*
E101	diff.txt	/*E101*
E102	diff.txt	/*E102*
E103	diff.txt	/*E103*
E104	digraph.txt	/*E104*
E105	mbyte.txt	/*E105*
E107	eval.txt	/*E107*
E108	eval.txt	/*E108*
E109	eval.txt	/*E109*
E11	cmdline.txt	/*E11*
E110	eval.txt	/*E110*
E111	eval.txt	/*E111*
E112	eval.txt	/*E112*
E113	eval.txt	/*E113*
E114	eval.txt	/*E114*
E115	eval.txt	/*E115*
E116	eval.txt	/*E116*
E117	eval.txt	/*E117*
E118	eval.txt	/*E118*
E119	eval.txt	/*E119*
E12	message.txt	/*E12*
E120	eval.txt	/*E120*
E121	eval.txt	/*E121*
E122	eval.txt	/*E122*
E123	eval.txt	/*E123*
E124	eval.txt	/*E124*
E125	eval.txt	/*E125*
E126	eval.txt	/*E126*
E127	eval.txt	/*E127*
E128	eval.txt	/*E128*
E129	eval.txt	/*E129*
E13	message.txt	/*E13*
E130	eval.txt	/*E130*
E131	eval.txt	/*E131*
E132	eval.txt	/*E132*
E133	eval.txt	/*E133*
E134	change.txt	/*E134*
E135	autocmd.txt	/*E135*
E136	starting.txt	/*E136*
E137	starting.txt	/*E137*
E138	starting.txt	/*E138*
E139	message.txt	/*E139*
E14	cmdline.txt	/*E14*
E140	message.txt	/*E140*
E141	message.txt	/*E141*
E142	message.txt	/*E142*
E143	autocmd.txt	/*E143*
E144	various.txt	/*E144*
E145	starting.txt	/*E145*
E146	change.txt	/*E146*
E147	repeat.txt	/*E147*
E148	repeat.txt	/*E148*
E149	helphelp.txt	/*E149*
E15	eval.txt	/*E15*
E150	helphelp.txt	/*E150*
E151	helphelp.txt	/*E151*
E152	helphelp.txt	/*E152*
E153	helphelp.txt	/*E153*
E154	helphelp.txt	/*E154*
E155	sign.txt	/*E155*
E156	sign.txt	/*E156*
E157	sign.txt	/*E157*
E158	sign.txt	/*E158*
E159	sign.txt	/*E159*
E16	cmdline.txt	/*E16*
E160	sign.txt	/*E160*
E161	repeat.txt	/*E161*
E162	message.txt	/*E162*
E163	editing.txt	/*E163*
E164	editing.txt	/*E164*
E165	editing.txt	/*E165*
E166	message.txt	/*E166*
E167	repeat.txt	/*E167*
E168	repeat.txt	/*E168*
E169	message.txt	/*E169*
E17	message.txt	/*E17*
E170	eval.txt	/*E170*
E171	eval.txt	/*E171*
E172	message.txt	/*E172*
E173	message.txt	/*E173*
E174	map.txt	/*E174*
E175	map.txt	/*E175*
E176	map.txt	/*E176*
E177	map.txt	/*E177*
E178	map.txt	/*E178*
E179	map.txt	/*E179*
E18	eval.txt	/*E18*
E180	map.txt	/*E180*
E181	map.txt	/*E181*
E182	map.txt	/*E182*
E183	map.txt	/*E183*
E184	map.txt	/*E184*
E185	syntax.txt	/*E185*
E186	editing.txt	/*E186*
E187	editing.txt	/*E187*
E188	gui.txt	/*E188*
E189	message.txt	/*E189*
E19	message.txt	/*E19*
E190	message.txt	/*E190*
E191	motion.txt	/*E191*
E192	message.txt	/*E192*
E193	eval.txt	/*E193*
E194	message.txt	/*E194*
E195	starting.txt	/*E195*
E196	various.txt	/*E196*
E197	mlang.txt	/*E197*
E198	options.txt	/*E198*
E199	cmdline.txt	/*E199*
E20	motion.txt	/*E20*
E200	autocmd.txt	/*E200*
E201	autocmd.txt	/*E201*
E202	options.txt	/*E202*
E203	autocmd.txt	/*E203*
E204	autocmd.txt	/*E204*
E205	options.txt	/*E205*
E206	options.txt	/*E206*
E207	editing.txt	/*E207*
E208	message.txt	/*E208*
E209	message.txt	/*E209*
E21	options.txt	/*E21*
E210	message.txt	/*E210*
E211	message.txt	/*E211*
E212	message.txt	/*E212*
E213	options.txt	/*E213*
E214	options.txt	/*E214*
E215	autocmd.txt	/*E215*
E216	autocmd.txt	/*E216*
E217	autocmd.txt	/*E217*
E218	autocmd.txt	/*E218*
E219	message.txt	/*E219*
E22	message.txt	/*E22*
E220	message.txt	/*E220*
E222	message.txt	/*E222*
E223	options.txt	/*E223*
E224	map.txt	/*E224*
E225	map.txt	/*E225*
E226	map.txt	/*E226*
E227	map.txt	/*E227*
E228	message.txt	/*E228*
E229	gui.txt	/*E229*
E23	message.txt	/*E23*
E230	starting.txt	/*E230*
E231	options.txt	/*E231*
E232	message.txt	/*E232*
E233	gui.txt	/*E233*
E234	options.txt	/*E234*
E235	options.txt	/*E235*
E236	options.txt	/*E236*
E237	print.txt	/*E237*
E238	print.txt	/*E238*
E239	sign.txt	/*E239*
E24	message.txt	/*E24*
E240	remote.txt	/*E240*
E241	eval.txt	/*E241*
E243	if_ole.txt	/*E243*
E244	options.txt	/*E244*
E245	options.txt	/*E245*
E246	autocmd.txt	/*E246*
E247	remote.txt	/*E247*
E248	remote.txt	/*E248*
E25	message.txt	/*E25*
E250	options.txt	/*E250*
E251	remote.txt	/*E251*
E252	options.txt	/*E252*
E253	mbyte.txt	/*E253*
E254	message.txt	/*E254*
E255	sign.txt	/*E255*
E256	message.txt	/*E256*
E257	if_cscop.txt	/*E257*
E258	remote.txt	/*E258*
E259	if_cscop.txt	/*E259*
E26	rileft.txt	/*E26*
E261	if_cscop.txt	/*E261*
E262	if_cscop.txt	/*E262*
E263	if_pyth.txt	/*E263*
E264	if_pyth.txt	/*E264*
E265	if_ruby.txt	/*E265*
E266	if_ruby.txt	/*E266*
E267	if_ruby.txt	/*E267*
E268	if_ruby.txt	/*E268*
E269	if_ruby.txt	/*E269*
E27	farsi.txt	/*E27*
E270	if_ruby.txt	/*E270*
E271	if_ruby.txt	/*E271*
E272	if_ruby.txt	/*E272*
E273	if_ruby.txt	/*E273*
E277	remote.txt	/*E277*
E28	syntax.txt	/*E28*
E280	if_tcl.txt	/*E280*
E282	starting.txt	/*E282*
E283	motion.txt	/*E283*
E284	mbyte.txt	/*E284*
E285	mbyte.txt	/*E285*
E286	mbyte.txt	/*E286*
E287	mbyte.txt	/*E287*
E288	mbyte.txt	/*E288*
E289	mbyte.txt	/*E289*
E29	change.txt	/*E29*
E293	message.txt	/*E293*
E294	message.txt	/*E294*
E295	message.txt	/*E295*
E296	message.txt	/*E296*
E297	message.txt	/*E297*
E298	message.txt	/*E298*
E299	if_perl.txt	/*E299*
E30	change.txt	/*E30*
E300	message.txt	/*E300*
E301	message.txt	/*E301*
E302	message.txt	/*E302*
E303	message.txt	/*E303*
E304	message.txt	/*E304*
E305	recover.txt	/*E305*
E306	recover.txt	/*E306*
E307	recover.txt	/*E307*
E308	recover.txt	/*E308*
E309	recover.txt	/*E309*
E31	message.txt	/*E31*
E310	recover.txt	/*E310*
E311	recover.txt	/*E311*
E312	recover.txt	/*E312*
E313	recover.txt	/*E313*
E314	recover.txt	/*E314*
E315	message.txt	/*E315*
E316	message.txt	/*E316*
E317	message.txt	/*E317*
E318	message.txt	/*E318*
E319	message.txt	/*E319*
E32	message.txt	/*E32*
E320	message.txt	/*E320*
E321	editing.txt	/*E321*
E322	message.txt	/*E322*
E323	message.txt	/*E323*
E324	print.txt	/*E324*
E325	usr_11.txt	/*E325*
E326	recover.txt	/*E326*
E327	gui.txt	/*E327*
E328	gui.txt	/*E328*
E329	gui.txt	/*E329*
E33	message.txt	/*E33*
E330	gui.txt	/*E330*
E331	gui.txt	/*E331*
E332	gui.txt	/*E332*
E333	gui.txt	/*E333*
E334	gui.txt	/*E334*
E335	gui.txt	/*E335*
E336	gui.txt	/*E336*
E337	gui.txt	/*E337*
E338	editing.txt	/*E338*
E339	message.txt	/*E339*
E34	various.txt	/*E34*
E340	vi_diff.txt	/*E340*
E341	message.txt	/*E341*
E342	message.txt	/*E342*
E343	options.txt	/*E343*
E344	options.txt	/*E344*
E345	options.txt	/*E345*
E346	options.txt	/*E346*
E347	options.txt	/*E347*
E348	pattern.txt	/*E348*
E349	pattern.txt	/*E349*
E35	message.txt	/*E35*
E350	fold.txt	/*E350*
E351	fold.txt	/*E351*
E352	fold.txt	/*E352*
E353	change.txt	/*E353*
E354	change.txt	/*E354*
E355	options.txt	/*E355*
E356	message.txt	/*E356*
E357	options.txt	/*E357*
E358	options.txt	/*E358*
E359	term.txt	/*E359*
E36	windows.txt	/*E36*
E360	various.txt	/*E360*
E363	options.txt	/*E363*
E364	eval.txt	/*E364*
E365	print.txt	/*E365*
E367	autocmd.txt	/*E367*
E368	eval.txt	/*E368*
E369	pattern.txt	/*E369*
E37	message.txt	/*E37*
E370	various.txt	/*E370*
E371	various.txt	/*E371*
E372	quickfix.txt	/*E372*
E373	quickfix.txt	/*E373*
E374	quickfix.txt	/*E374*
E375	quickfix.txt	/*E375*
E376	quickfix.txt	/*E376*
E377	quickfix.txt	/*E377*
E378	quickfix.txt	/*E378*
E379	quickfix.txt	/*E379*
E38	message.txt	/*E38*
E380	quickfix.txt	/*E380*
E381	quickfix.txt	/*E381*
E382	options.txt	/*E382*
E383	pattern.txt	/*E383*
E384	options.txt	/*E384*
E385	options.txt	/*E385*
E386	pattern.txt	/*E386*
E387	tagsrch.txt	/*E387*
E388	tagsrch.txt	/*E388*
E389	tagsrch.txt	/*E389*
E39	digraph.txt	/*E39*
E390	syntax.txt	/*E390*
E391	syntax.txt	/*E391*
E392	syntax.txt	/*E392*
E393	syntax.txt	/*E393*
E394	syntax.txt	/*E394*
E395	syntax.txt	/*E395*
E397	syntax.txt	/*E397*
E398	syntax.txt	/*E398*
E399	syntax.txt	/*E399*
E40	message.txt	/*E40*
E400	syntax.txt	/*E400*
E401	syntax.txt	/*E401*
E402	syntax.txt	/*E402*
E403	syntax.txt	/*E403*
E404	syntax.txt	/*E404*
E405	syntax.txt	/*E405*
E406	syntax.txt	/*E406*
E407	syntax.txt	/*E407*
E408	syntax.txt	/*E408*
E409	syntax.txt	/*E409*
E41	message.txt	/*E41*
E410	syntax.txt	/*E410*
E411	syntax.txt	/*E411*
E412	syntax.txt	/*E412*
E413	syntax.txt	/*E413*
E414	syntax.txt	/*E414*
E415	syntax.txt	/*E415*
E416	syntax.txt	/*E416*
E417	syntax.txt	/*E417*
E418	syntax.txt	/*E418*
E419	syntax.txt	/*E419*
E42	quickfix.txt	/*E42*
E420	syntax.txt	/*E420*
E421	syntax.txt	/*E421*
E422	syntax.txt	/*E422*
E423	syntax.txt	/*E423*
E424	message.txt	/*E424*
E425	tagsrch.txt	/*E425*
E426	tagsrch.txt	/*E426*
E427	tagsrch.txt	/*E427*
E428	tagsrch.txt	/*E428*
E429	tagsrch.txt	/*E429*
E43	message.txt	/*E43*
E430	tagsrch.txt	/*E430*
E431	tagsrch.txt	/*E431*
E432	message.txt	/*E432*
E433	options.txt	/*E433*
E434	tagsrch.txt	/*E434*
E435	tagsrch.txt	/*E435*
E436	term.txt	/*E436*
E437	term.txt	/*E437*
E438	message.txt	/*E438*
E439	message.txt	/*E439*
E44	message.txt	/*E44*
E440	message.txt	/*E440*
E441	windows.txt	/*E441*
E442	windows.txt	/*E442*
E443	windows.txt	/*E443*
E444	windows.txt	/*E444*
E445	windows.txt	/*E445*
E446	editing.txt	/*E446*
E447	editing.txt	/*E447*
E448	various.txt	/*E448*
E449	eval.txt	/*E449*
E45	message.txt	/*E45*
E455	print.txt	/*E455*
E456	print.txt	/*E456*
E457	print.txt	/*E457*
E458	message.txt	/*E458*
E459	message.txt	/*E459*
E46	message.txt	/*E46*
E460	message.txt	/*E460*
E461	eval.txt	/*E461*
E462	editing.txt	/*E462*
E463	netbeans.txt	/*E463*
E464	message.txt	/*E464*
E465	gui.txt	/*E465*
E466	gui.txt	/*E466*
E467	map.txt	/*E467*
E468	map.txt	/*E468*
E469	if_cscop.txt	/*E469*
E47	message.txt	/*E47*
E470	change.txt	/*E470*
E471	message.txt	/*E471*
E472	editing.txt	/*E472*
E473	message.txt	/*E473*
E474	message.txt	/*E474*
E475	message.txt	/*E475*
E476	pattern.txt	/*E476*
E477	message.txt	/*E477*
E478	message.txt	/*E478*
E479	editing.txt	/*E479*
E48	eval.txt	/*E48*
E480	editing.txt	/*E480*
E481	message.txt	/*E481*
E482	message.txt	/*E482*
E483	message.txt	/*E483*
E484	message.txt	/*E484*
E485	message.txt	/*E485*
E486	pattern.txt	/*E486*
E487	options.txt	/*E487*
E488	message.txt	/*E488*
E49	message.txt	/*E49*
E490	fold.txt	/*E490*
E492	message.txt	/*E492*
E493	cmdline.txt	/*E493*
E494	editing.txt	/*E494*
E495	cmdline.txt	/*E495*
E496	cmdline.txt	/*E496*
E497	cmdline.txt	/*E497*
E498	cmdline.txt	/*E498*
E499	cmdline.txt	/*E499*
E50	syntax.txt	/*E50*
E500	cmdline.txt	/*E500*
E501	intro.txt	/*E501*
E502	editing.txt	/*E502*
E503	editing.txt	/*E503*
E504	editing.txt	/*E504*
E505	editing.txt	/*E505*
E506	editing.txt	/*E506*
E507	editing.txt	/*E507*
E508	editing.txt	/*E508*
E509	editing.txt	/*E509*
E51	pattern.txt	/*E51*
E510	editing.txt	/*E510*
E511	netbeans.txt	/*E511*
E512	editing.txt	/*E512*
E513	options.txt	/*E513*
E514	editing.txt	/*E514*
E515	windows.txt	/*E515*
E516	windows.txt	/*E516*
E517	windows.txt	/*E517*
E518	options.txt	/*E518*
E519	options.txt	/*E519*
E52	syntax.txt	/*E52*
E520	options.txt	/*E520*
E521	options.txt	/*E521*
E522	options.txt	/*E522*
E523	options.txt	/*E523*
E524	options.txt	/*E524*
E525	options.txt	/*E525*
E526	options.txt	/*E526*
E527	options.txt	/*E527*
E528	options.txt	/*E528*
E529	options.txt	/*E529*
E53	pattern.txt	/*E53*
E530	options.txt	/*E530*
E531	options.txt	/*E531*
E532	netbeans.txt	/*E532*
E533	options.txt	/*E533*
E534	options.txt	/*E534*
E535	options.txt	/*E535*
E536	options.txt	/*E536*
E537	options.txt	/*E537*
E538	options.txt	/*E538*
E539	options.txt	/*E539*
E54	pattern.txt	/*E54*
E540	options.txt	/*E540*
E541	options.txt	/*E541*
E542	options.txt	/*E542*
E543	options.txt	/*E543*
E544	options.txt	/*E544*
E545	options.txt	/*E545*
E546	options.txt	/*E546*
E547	options.txt	/*E547*
E548	options.txt	/*E548*
E549	options.txt	/*E549*
E55	pattern.txt	/*E55*
E550	options.txt	/*E550*
E551	options.txt	/*E551*
E552	options.txt	/*E552*
E553	quickfix.txt	/*E553*
E554	pattern.txt	/*E554*
E555	tagsrch.txt	/*E555*
E556	tagsrch.txt	/*E556*
E557	term.txt	/*E557*
E558	term.txt	/*E558*
E559	term.txt	/*E559*
E560	if_cscop.txt	/*E560*
E561	if_cscop.txt	/*E561*
E562	if_cscop.txt	/*E562*
E563	if_cscop.txt	/*E563*
E564	if_cscop.txt	/*E564*
E566	if_cscop.txt	/*E566*
E567	if_cscop.txt	/*E567*
E568	if_cscop.txt	/*E568*
E570	message.txt	/*E570*
E571	if_tcl.txt	/*E571*
E572	if_tcl.txt	/*E572*
E573	remote.txt	/*E573*
E574	starting.txt	/*E574*
E575	starting.txt	/*E575*
E576	starting.txt	/*E576*
E577	starting.txt	/*E577*
E579	eval.txt	/*E579*
E580	eval.txt	/*E580*
E581	eval.txt	/*E581*
E582	eval.txt	/*E582*
E583	eval.txt	/*E583*
E584	eval.txt	/*E584*
E585	eval.txt	/*E585*
E586	eval.txt	/*E586*
E587	eval.txt	/*E587*
E588	eval.txt	/*E588*
E589	options.txt	/*E589*
E59	pattern.txt	/*E59*
E590	options.txt	/*E590*
E591	options.txt	/*E591*
E592	options.txt	/*E592*
E593	options.txt	/*E593*
E594	options.txt	/*E594*
E595	options.txt	/*E595*
E596	options.txt	/*E596*
E597	options.txt	/*E597*
E598	options.txt	/*E598*
E599	options.txt	/*E599*
E60	pattern.txt	/*E60*
E600	eval.txt	/*E600*
E601	eval.txt	/*E601*
E602	eval.txt	/*E602*
E603	eval.txt	/*E603*
E604	eval.txt	/*E604*
E605	eval.txt	/*E605*
E606	eval.txt	/*E606*
E607	eval.txt	/*E607*
E608	eval.txt	/*E608*
E609	if_cscop.txt	/*E609*
E61	pattern.txt	/*E61*
E612	sign.txt	/*E612*
E613	print.txt	/*E613*
E614	editing.txt	/*E614*
E615	editing.txt	/*E615*
E616	editing.txt	/*E616*
E617	options.txt	/*E617*
E618	print.txt	/*E618*
E619	print.txt	/*E619*
E62	pattern.txt	/*E62*
E620	print.txt	/*E620*
E621	print.txt	/*E621*
E622	if_cscop.txt	/*E622*
E623	if_cscop.txt	/*E623*
E624	print.txt	/*E624*
E625	if_cscop.txt	/*E625*
E626	if_cscop.txt	/*E626*
E627	netbeans.txt	/*E627*
E628	netbeans.txt	/*E628*
E629	netbeans.txt	/*E629*
E63	pattern.txt	/*E63*
E630	channel.txt	/*E630*
E631	channel.txt	/*E631*
E632	netbeans.txt	/*E632*
E633	netbeans.txt	/*E633*
E634	netbeans.txt	/*E634*
E635	netbeans.txt	/*E635*
E636	netbeans.txt	/*E636*
E637	netbeans.txt	/*E637*
E638	netbeans.txt	/*E638*
E639	netbeans.txt	/*E639*
E64	pattern.txt	/*E64*
E640	netbeans.txt	/*E640*
E641	netbeans.txt	/*E641*
E642	netbeans.txt	/*E642*
E643	netbeans.txt	/*E643*
E644	netbeans.txt	/*E644*
E645	netbeans.txt	/*E645*
E646	netbeans.txt	/*E646*
E647	netbeans.txt	/*E647*
E648	netbeans.txt	/*E648*
E649	netbeans.txt	/*E649*
E65	pattern.txt	/*E65*
E650	netbeans.txt	/*E650*
E651	netbeans.txt	/*E651*
E652	netbeans.txt	/*E652*
E655	eval.txt	/*E655*
E656	netbeans.txt	/*E656*
E657	netbeans.txt	/*E657*
E658	netbeans.txt	/*E658*
E659	if_pyth.txt	/*E659*
E66	syntax.txt	/*E66*
E660	netbeans.txt	/*E660*
E661	helphelp.txt	/*E661*
E662	motion.txt	/*E662*
E663	motion.txt	/*E663*
E664	motion.txt	/*E664*
E665	gui_x11.txt	/*E665*
E666	quickfix.txt	/*E666*
E667	editing.txt	/*E667*
E668	netbeans.txt	/*E668*
E669	syntax.txt	/*E669*
E67	syntax.txt	/*E67*
E670	helphelp.txt	/*E670*
E671	starting.txt	/*E671*
E672	starting.txt	/*E672*
E673	print.txt	/*E673*
E674	print.txt	/*E674*
E675	print.txt	/*E675*
E676	options.txt	/*E676*
E677	eval.txt	/*E677*
E678	pattern.txt	/*E678*
E679	syntax.txt	/*E679*
E68	pattern.txt	/*E68*
E680	autocmd.txt	/*E680*
E681	quickfix.txt	/*E681*
E682	quickfix.txt	/*E682*
E683	quickfix.txt	/*E683*
E684	eval.txt	/*E684*
E685	message.txt	/*E685*
E686	eval.txt	/*E686*
E687	eval.txt	/*E687*
E688	eval.txt	/*E688*
E689	eval.txt	/*E689*
E69	pattern.txt	/*E69*
E690	eval.txt	/*E690*
E691	eval.txt	/*E691*
E692	eval.txt	/*E692*
E694	eval.txt	/*E694*
E695	eval.txt	/*E695*
E696	eval.txt	/*E696*
E697	eval.txt	/*E697*
E698	eval.txt	/*E698*
E699	eval.txt	/*E699*
E70	pattern.txt	/*E70*
E700	eval.txt	/*E700*
E701	eval.txt	/*E701*
E702	eval.txt	/*E702*
E703	eval.txt	/*E703*
E704	eval.txt	/*E704*
E705	eval.txt	/*E705*
E707	eval.txt	/*E707*
E708	eval.txt	/*E708*
E709	eval.txt	/*E709*
E71	pattern.txt	/*E71*
E710	eval.txt	/*E710*
E711	eval.txt	/*E711*
E712	eval.txt	/*E712*
E713	eval.txt	/*E713*
E714	eval.txt	/*E714*
E715	eval.txt	/*E715*
E716	eval.txt	/*E716*
E717	eval.txt	/*E717*
E718	eval.txt	/*E718*
E719	eval.txt	/*E719*
E72	message.txt	/*E72*
E720	eval.txt	/*E720*
E721	eval.txt	/*E721*
E722	eval.txt	/*E722*
E723	eval.txt	/*E723*
E724	eval.txt	/*E724*
E725	eval.txt	/*E725*
E726	eval.txt	/*E726*
E727	eval.txt	/*E727*
E728	eval.txt	/*E728*
E729	eval.txt	/*E729*
E73	tagsrch.txt	/*E73*
E730	eval.txt	/*E730*
E731	eval.txt	/*E731*
E732	eval.txt	/*E732*
E733	eval.txt	/*E733*
E734	eval.txt	/*E734*
E735	eval.txt	/*E735*
E736	eval.txt	/*E736*
E737	eval.txt	/*E737*
E738	eval.txt	/*E738*
E739	eval.txt	/*E739*
E74	message.txt	/*E74*
E740	eval.txt	/*E740*
E741	eval.txt	/*E741*
E742	eval.txt	/*E742*
E743	eval.txt	/*E743*
E744	netbeans.txt	/*E744*
E745	eval.txt	/*E745*
E746	eval.txt	/*E746*
E747	editing.txt	/*E747*
E748	repeat.txt	/*E748*
E749	various.txt	/*E749*
E75	vi_diff.txt	/*E75*
E750	repeat.txt	/*E750*
E751	spell.txt	/*E751*
E752	spell.txt	/*E752*
E753	spell.txt	/*E753*
E754	spell.txt	/*E754*
E755	spell.txt	/*E755*
E756	spell.txt	/*E756*
E757	options.txt	/*E757*
E758	spell.txt	/*E758*
E759	spell.txt	/*E759*
E76	pattern.txt	/*E76*
E760	spell.txt	/*E760*
E761	spell.txt	/*E761*
E762	spell.txt	/*E762*
E763	spell.txt	/*E763*
E764	options.txt	/*E764*
E765	options.txt	/*E765*
E766	eval.txt	/*E766*
E767	eval.txt	/*E767*
E768	message.txt	/*E768*
E769	pattern.txt	/*E769*
E77	message.txt	/*E77*
E770	spell.txt	/*E770*
E771	spell.txt	/*E771*
E772	spell.txt	/*E772*
E773	recover.txt	/*E773*
E774	map.txt	/*E774*
E775	map.txt	/*E775*
E776	quickfix.txt	/*E776*
E777	quickfix.txt	/*E777*
E778	spell.txt	/*E778*
E779	spell.txt	/*E779*
E78	motion.txt	/*E78*
E780	spell.txt	/*E780*
E781	spell.txt	/*E781*
E782	spell.txt	/*E782*
E783	spell.txt	/*E783*
E784	tabpage.txt	/*E784*
E785	eval.txt	/*E785*
E786	eval.txt	/*E786*
E787	diff.txt	/*E787*
E788	autocmd.txt	/*E788*
E789	syntax.txt	/*E789*
E79	message.txt	/*E79*
E790	undo.txt	/*E790*
E791	mbyte.txt	/*E791*
E792	gui.txt	/*E792*
E793	diff.txt	/*E793*
E794	eval.txt	/*E794*
E795	eval.txt	/*E795*
E796	editing.txt	/*E796*
E797	spell.txt	/*E797*
E798	eval.txt	/*E798*
E799	eval.txt	/*E799*
E80	message.txt	/*E80*
E800	arabic.txt	/*E800*
E801	eval.txt	/*E801*
E802	eval.txt	/*E802*
E803	eval.txt	/*E803*
E804	eval.txt	/*E804*
E805	eval.txt	/*E805*
E806	eval.txt	/*E806*
E807	eval.txt	/*E807*
E808	eval.txt	/*E808*
E809	cmdline.txt	/*E809*
E81	map.txt	/*E81*
E810	diff.txt	/*E810*
E811	autocmd.txt	/*E811*
E812	autocmd.txt	/*E812*
E813	editing.txt	/*E813*
E814	editing.txt	/*E814*
E815	if_mzsch.txt	/*E815*
E816	diff.txt	/*E816*
E817	editing.txt	/*E817*
E818	editing.txt	/*E818*
E819	editing.txt	/*E819*
E82	message.txt	/*E82*
E820	editing.txt	/*E820*
E821	options.txt	/*E821*
E822	undo.txt	/*E822*
E823	undo.txt	/*E823*
E824	undo.txt	/*E824*
E825	undo.txt	/*E825*
E826	undo.txt	/*E826*
E827	undo.txt	/*E827*
E828	undo.txt	/*E828*
E829	undo.txt	/*E829*
E83	message.txt	/*E83*
E830	undo.txt	/*E830*
E831	editing.txt	/*E831*
E832	undo.txt	/*E832*
E833	editing.txt	/*E833*
E834	options.txt	/*E834*
E835	options.txt	/*E835*
E836	if_pyth.txt	/*E836*
E837	if_pyth.txt	/*E837*
E838	netbeans.txt	/*E838*
E839	insert.txt	/*E839*
E84	windows.txt	/*E84*
E840	insert.txt	/*E840*
E841	map.txt	/*E841*
E842	cmdline.txt	/*E842*
E843	editing.txt	/*E843*
E844	syntax.txt	/*E844*
E845	spell.txt	/*E845*
E846	options.txt	/*E846*
E847	syntax.txt	/*E847*
E848	syntax.txt	/*E848*
E849	syntax.txt	/*E849*
E85	options.txt	/*E85*
E850	change.txt	/*E850*
E851	gui_x11.txt	/*E851*
E852	gui_x11.txt	/*E852*
E853	eval.txt	/*E853*
E854	options.txt	/*E854*
E855	autocmd.txt	/*E855*
E858	eval.txt	/*E858*
E859	eval.txt	/*E859*
E86	windows.txt	/*E86*
E862	eval.txt	/*E862*
E864	pattern.txt	/*E864*
E865	pattern.txt	/*E865*
E866	pattern.txt	/*E866*
E867	pattern.txt	/*E867*
E868	pattern.txt	/*E868*
E869	pattern.txt	/*E869*
E87	windows.txt	/*E87*
E870	pattern.txt	/*E870*
E871	pattern.txt	/*E871*
E872	pattern.txt	/*E872*
E873	pattern.txt	/*E873*
E874	pattern.txt	/*E874*
E875	pattern.txt	/*E875*
E876	pattern.txt	/*E876*
E877	pattern.txt	/*E877*
E878	pattern.txt	/*E878*
E879	syntax.txt	/*E879*
E88	windows.txt	/*E88*
E880	if_pyth.txt	/*E880*
E881	autocmd.txt	/*E881*
E882	eval.txt	/*E882*
E883	eval.txt	/*E883*
E884	eval.txt	/*E884*
E885	sign.txt	/*E885*
E886	starting.txt	/*E886*
E887	if_pyth.txt	/*E887*
E888	pattern.txt	/*E888*
E89	message.txt	/*E89*
E890	syntax.txt	/*E890*
E891	eval.txt	/*E891*
E892	eval.txt	/*E892*
E893	eval.txt	/*E893*
E894	eval.txt	/*E894*
E895	if_mzsch.txt	/*E895*
E898	channel.txt	/*E898*
E90	message.txt	/*E90*
E901	channel.txt	/*E901*
E902	channel.txt	/*E902*
E903	channel.txt	/*E903*
E904	channel.txt	/*E904*
E905	channel.txt	/*E905*
E906	channel.txt	/*E906*
E907	eval.txt	/*E907*
E908	eval.txt	/*E908*
E909	eval.txt	/*E909*
E91	options.txt	/*E91*
E910	eval.txt	/*E910*
E911	eval.txt	/*E911*
E912	eval.txt	/*E912*
E913	eval.txt	/*E913*
E914	eval.txt	/*E914*
E915	channel.txt	/*E915*
E916	eval.txt	/*E916*
E917	eval.txt	/*E917*
E918	channel.txt	/*E918*
E919	repeat.txt	/*E919*
E92	message.txt	/*E92*
E920	channel.txt	/*E920*
E921	channel.txt	/*E921*
E922	eval.txt	/*E922*
E923	eval.txt	/*E923*
E924	quickfix.txt	/*E924*
E925	quickfix.txt	/*E925*
E926	quickfix.txt	/*E926*
E927	eval.txt	/*E927*
E928	eval.txt	/*E928*
E929	starting.txt	/*E929*
E93	windows.txt	/*E93*
E930	eval.txt	/*E930*
E931	message.txt	/*E931*
E932	eval.txt	/*E932*
E933	eval.txt	/*E933*
E934	sign.txt	/*E934*
E935	eval.txt	/*E935*
E936	autocmd.txt	/*E936*
E94	windows.txt	/*E94*
E95	message.txt	/*E95*
E96	diff.txt	/*E96*
E97	diff.txt	/*E97*
E98	diff.txt	/*E98*
E99	diff.txt	/*E99*
EX	intro.txt	/*EX*
EXINIT	starting.txt	/*EXINIT*
Elvis	intro.txt	/*Elvis*
EncodingChanged	autocmd.txt	/*EncodingChanged*
Eterm	syntax.txt	/*Eterm*
Ex	intro.txt	/*Ex*
Ex-mode	intro.txt	/*Ex-mode*
Exuberant_ctags	tagsrch.txt	/*Exuberant_ctags*
F	motion.txt	/*F*
FALSE	eval.txt	/*FALSE*
FAQ	intro.txt	/*FAQ*
Farsi	farsi.txt	/*Farsi*
FileAppendCmd	autocmd.txt	/*FileAppendCmd*
FileAppendPost	autocmd.txt	/*FileAppendPost*
FileAppendPre	autocmd.txt	/*FileAppendPre*
FileChangedRO	autocmd.txt	/*FileChangedRO*
FileChangedShell	autocmd.txt	/*FileChangedShell*
FileChangedShellPost	autocmd.txt	/*FileChangedShellPost*
FileEncoding	autocmd.txt	/*FileEncoding*
FileReadCmd	autocmd.txt	/*FileReadCmd*
FileReadPost	autocmd.txt	/*FileReadPost*
FileReadPre	autocmd.txt	/*FileReadPre*
FileType	autocmd.txt	/*FileType*
FileWriteCmd	autocmd.txt	/*FileWriteCmd*
FileWritePost	autocmd.txt	/*FileWritePost*
FileWritePre	autocmd.txt	/*FileWritePre*
FilterReadPost	autocmd.txt	/*FilterReadPost*
FilterReadPre	autocmd.txt	/*FilterReadPre*
FilterWritePost	autocmd.txt	/*FilterWritePost*
FilterWritePre	autocmd.txt	/*FilterWritePre*
Float	eval.txt	/*Float*
FocusGained	autocmd.txt	/*FocusGained*
FocusLost	autocmd.txt	/*FocusLost*
Folding	fold.txt	/*Folding*
FuncUndefined	autocmd.txt	/*FuncUndefined*
Funcref	eval.txt	/*Funcref*
G	motion.txt	/*G*
GNOME	gui_x11.txt	/*GNOME*
GTK	gui_x11.txt	/*GTK*
GTK+	gui_x11.txt	/*GTK+*
GTK3	gui_x11.txt	/*GTK3*
GUI	gui.txt	/*GUI*
GUI-X11	gui_x11.txt	/*GUI-X11*
GUIEnter	autocmd.txt	/*GUIEnter*
GUIFailed	autocmd.txt	/*GUIFailed*
GetLatestVimScripts	pi_getscript.txt	/*GetLatestVimScripts*
GetLatestVimScripts-copyright	pi_getscript.txt	/*GetLatestVimScripts-copyright*
GetLatestVimScripts_dat	pi_getscript.txt	/*GetLatestVimScripts_dat*
Gnome	gui_x11.txt	/*Gnome*
H	motion.txt	/*H*
I	insert.txt	/*I*
ICCF	uganda.txt	/*ICCF*
IM-server	mbyte.txt	/*IM-server*
IME	mbyte.txt	/*IME*
Insert	insert.txt	/*Insert*
Insert-mode	insert.txt	/*Insert-mode*
InsertChange	autocmd.txt	/*InsertChange*
InsertCharPre	autocmd.txt	/*InsertCharPre*
InsertEnter	autocmd.txt	/*InsertEnter*
InsertLeave	autocmd.txt	/*InsertLeave*
J	change.txt	/*J*
Japanese	mbyte.txt	/*Japanese*
Job	eval.txt	/*Job*
Jobs	eval.txt	/*Jobs*
K	various.txt	/*K*
KDE	gui_x11.txt	/*KDE*
KVim	gui_x11.txt	/*KVim*
Kibaale	uganda.txt	/*Kibaale*
Korean	mbyte.txt	/*Korean*
L	motion.txt	/*L*
Linux-backspace	options.txt	/*Linux-backspace*
List	eval.txt	/*List*
Lists	eval.txt	/*Lists*
LogiPat()	pi_logipat.txt	/*LogiPat()*
LogiPat-flags	pi_logipat.txt	/*LogiPat-flags*
Lua	if_lua.txt	/*Lua*
M	motion.txt	/*M*
MDI	starting.txt	/*MDI*
MS-DOS	os_msdos.txt	/*MS-DOS*
MS-Windows	os_win32.txt	/*MS-Windows*
MSDOS	os_msdos.txt	/*MSDOS*
MSVisualStudio	if_ole.txt	/*MSVisualStudio*
MVS	os_390.txt	/*MVS*
Mac	os_mac.txt	/*Mac*
Mac-format	editing.txt	/*Mac-format*
Mac-format-write	editing.txt	/*Mac-format-write*
Macintosh	os_mac.txt	/*Macintosh*
Mark	motion.txt	/*Mark*
MenuPopup	autocmd.txt	/*MenuPopup*
MiNT	os_mint.txt	/*MiNT*
Moolenaar	intro.txt	/*Moolenaar*
MorphOS	os_amiga.txt	/*MorphOS*
Motif	gui_x11.txt	/*Motif*
Myspell	spell.txt	/*Myspell*
MzScheme	if_mzsch.txt	/*MzScheme*
N	pattern.txt	/*N*
N%	motion.txt	/*N%*
N:	cmdline.txt	/*N:*
N<Del>	various.txt	/*N<Del>*
NFA	pattern.txt	/*NFA*
NL-used-for-Nul	pattern.txt	/*NL-used-for-Nul*
NetBSD-backspace	options.txt	/*NetBSD-backspace*
NetUserPass()	pi_netrw.txt	/*NetUserPass()*
Normal	intro.txt	/*Normal*
Normal-mode	intro.txt	/*Normal-mode*
Number	eval.txt	/*Number*
Nvi	intro.txt	/*Nvi*
O	insert.txt	/*O*
OS/2	os_os2.txt	/*OS\/2*
OS2	os_os2.txt	/*OS2*
OS390	os_390.txt	/*OS390*
OS390-Motif	os_390.txt	/*OS390-Motif*
OS390-PuTTY	os_390.txt	/*OS390-PuTTY*
OS390-bugs	os_390.txt	/*OS390-bugs*
OS390-has-ebcdic	os_390.txt	/*OS390-has-ebcdic*
OS390-limitations	os_390.txt	/*OS390-limitations*
OS390-open-source	os_390.txt	/*OS390-open-source*
OffTheSpot	mbyte.txt	/*OffTheSpot*
OnTheSpot	mbyte.txt	/*OnTheSpot*
Operator-pending	intro.txt	/*Operator-pending*
Operator-pending-mode	intro.txt	/*Operator-pending-mode*
OptionSet	autocmd.txt	/*OptionSet*
OverTheSpot	mbyte.txt	/*OverTheSpot*
P	change.txt	/*P*
PATHEXT	eval.txt	/*PATHEXT*
PEP8	filetype.txt	/*PEP8*
PHP_BracesAtCodeLevel	indent.txt	/*PHP_BracesAtCodeLevel*
PHP_autoformatcomment	indent.txt	/*PHP_autoformatcomment*
PHP_default_indenting	indent.txt	/*PHP_default_indenting*
PHP_outdentSLComments	indent.txt	/*PHP_outdentSLComments*
PHP_outdentphpescape	indent.txt	/*PHP_outdentphpescape*
PHP_removeCRwhenUnix	indent.txt	/*PHP_removeCRwhenUnix*
PHP_vintage_case_default_indent	indent.txt	/*PHP_vintage_case_default_indent*
Partial	eval.txt	/*Partial*
Pattern	pattern.txt	/*Pattern*
Perl	if_perl.txt	/*Perl*
Posix	intro.txt	/*Posix*
Python	if_pyth.txt	/*Python*
Q	intro.txt	/*Q*
Q-command-changed	version5.txt	/*Q-command-changed*
QNX	os_qnx.txt	/*QNX*
Q_ab	quickref.txt	/*Q_ab*
Q_ac	quickref.txt	/*Q_ac*
Q_ai	quickref.txt	/*Q_ai*
Q_bu	quickref.txt	/*Q_bu*
Q_ce	quickref.txt	/*Q_ce*
Q_ch	quickref.txt	/*Q_ch*
Q_cm	quickref.txt	/*Q_cm*
Q_co	quickref.txt	/*Q_co*
Q_ct	help.txt	/*Q_ct*
Q_de	quickref.txt	/*Q_de*
Q_di	quickref.txt	/*Q_di*
Q_ed	quickref.txt	/*Q_ed*
Q_et	quickref.txt	/*Q_et*
Q_ex	quickref.txt	/*Q_ex*
Q_fl	quickref.txt	/*Q_fl*
Q_fo	quickref.txt	/*Q_fo*
Q_gu	quickref.txt	/*Q_gu*
Q_in	quickref.txt	/*Q_in*
Q_km	quickref.txt	/*Q_km*
Q_lr	quickref.txt	/*Q_lr*
Q_ma	quickref.txt	/*Q_ma*
Q_op	quickref.txt	/*Q_op*
Q_pa	quickref.txt	/*Q_pa*
Q_qf	quickref.txt	/*Q_qf*
Q_ra	quickref.txt	/*Q_ra*
Q_re	quickref.txt	/*Q_re*
Q_sc	quickref.txt	/*Q_sc*
Q_si	quickref.txt	/*Q_si*
Q_ss	quickref.txt	/*Q_ss*
Q_st	quickref.txt	/*Q_st*
Q_sy	quickref.txt	/*Q_sy*
Q_ta	quickref.txt	/*Q_ta*
Q_tm	quickref.txt	/*Q_tm*
Q_to	quickref.txt	/*Q_to*
Q_ud	quickref.txt	/*Q_ud*
Q_ur	quickref.txt	/*Q_ur*
Q_vc	quickref.txt	/*Q_vc*
Q_vi	quickref.txt	/*Q_vi*
Q_vm	quickref.txt	/*Q_vm*
Q_wi	quickref.txt	/*Q_wi*
Q_wq	quickref.txt	/*Q_wq*
QuickFixCmdPost	autocmd.txt	/*QuickFixCmdPost*
QuickFixCmdPost-example	quickfix.txt	/*QuickFixCmdPost-example*
QuickFixCmdPre	autocmd.txt	/*QuickFixCmdPre*
Quickfix	quickfix.txt	/*Quickfix*
QuitPre	autocmd.txt	/*QuitPre*
R	change.txt	/*R*
RISC-OS	os_risc.txt	/*RISC-OS*
RISCOS	os_risc.txt	/*RISCOS*
RemoteReply	autocmd.txt	/*RemoteReply*
Replace	insert.txt	/*Replace*
Replace-mode	insert.txt	/*Replace-mode*
Root	mbyte.txt	/*Root*
Ruby	if_ruby.txt	/*Ruby*
Russian	russian.txt	/*Russian*
S	change.txt	/*S*
SHELL	starting.txt	/*SHELL*
SQLGetType	ft_sql.txt	/*SQLGetType*
SQLSetType	ft_sql.txt	/*SQLSetType*
Select	visual.txt	/*Select*
Select-mode	visual.txt	/*Select-mode*
Select-mode-mapping	visual.txt	/*Select-mode-mapping*
Session	starting.txt	/*Session*
SessionLoad-variable	starting.txt	/*SessionLoad-variable*
SessionLoadPost	autocmd.txt	/*SessionLoadPost*
ShellCmdPost	autocmd.txt	/*ShellCmdPost*
ShellFilterPost	autocmd.txt	/*ShellFilterPost*
SourceCmd	autocmd.txt	/*SourceCmd*
SourcePre	autocmd.txt	/*SourcePre*
Special	eval.txt	/*Special*
SpellFileMissing	autocmd.txt	/*SpellFileMissing*
StdinReadPost	autocmd.txt	/*StdinReadPost*
StdinReadPre	autocmd.txt	/*StdinReadPre*
String	eval.txt	/*String*
SwapExists	autocmd.txt	/*SwapExists*
Syntax	autocmd.txt	/*Syntax*
T	motion.txt	/*T*
TCL	if_tcl.txt	/*TCL*
TERM	starting.txt	/*TERM*
TOhtml-encoding	syntax.txt	/*TOhtml-encoding*
TOhtml-encoding-detect	syntax.txt	/*TOhtml-encoding-detect*
TOhtml-performance	syntax.txt	/*TOhtml-performance*
TOhtml-uncopyable-text	syntax.txt	/*TOhtml-uncopyable-text*
TOhtml-wrap-text	syntax.txt	/*TOhtml-wrap-text*
TRUE	eval.txt	/*TRUE*
TSQL	ft_sql.txt	/*TSQL*
TTpro-telnet	syntax.txt	/*TTpro-telnet*
Tab	intro.txt	/*Tab*
TabClosed	autocmd.txt	/*TabClosed*
TabEnter	autocmd.txt	/*TabEnter*
TabLeave	autocmd.txt	/*TabLeave*
TabNew	autocmd.txt	/*TabNew*
Tcl	if_tcl.txt	/*Tcl*
TermChanged	autocmd.txt	/*TermChanged*
TermResponse	autocmd.txt	/*TermResponse*
TextChanged	autocmd.txt	/*TextChanged*
TextChangedI	autocmd.txt	/*TextChangedI*
Transact-SQL	ft_sql.txt	/*Transact-SQL*
U	undo.txt	/*U*
UTF-8	mbyte.txt	/*UTF-8*
UTF8-xterm	mbyte.txt	/*UTF8-xterm*
Uganda	uganda.txt	/*Uganda*
Unicode	mbyte.txt	/*Unicode*
Unix	os_unix.txt	/*Unix*
Unix-format	editing.txt	/*Unix-format*
Unix-format-write	editing.txt	/*Unix-format-write*
User	autocmd.txt	/*User*
UserGettingBored	autocmd.txt	/*UserGettingBored*
V	visual.txt	/*V*
VIMINIT	starting.txt	/*VIMINIT*
VMS	os_vms.txt	/*VMS*
Vi	intro.txt	/*Vi*
View	starting.txt	/*View*
VimEnter	autocmd.txt	/*VimEnter*
VimLeave	autocmd.txt	/*VimLeave*
VimLeavePre	autocmd.txt	/*VimLeavePre*
VimResized	autocmd.txt	/*VimResized*
Vimball-copyright	pi_vimball.txt	/*Vimball-copyright*
Virtual-Replace-mode	insert.txt	/*Virtual-Replace-mode*
VisVim	if_ole.txt	/*VisVim*
Visual	visual.txt	/*Visual*
Visual-mode	visual.txt	/*Visual-mode*
W	motion.txt	/*W*
W10	message.txt	/*W10*
W11	message.txt	/*W11*
W12	message.txt	/*W12*
W13	message.txt	/*W13*
W14	message.txt	/*W14*
W15	repeat.txt	/*W15*
W16	message.txt	/*W16*
W17	arabic.txt	/*W17*
W18	syntax.txt	/*W18*
W19	autocmd.txt	/*W19*
WORD	motion.txt	/*WORD*
WWW	intro.txt	/*WWW*
Win32	os_win32.txt	/*Win32*
WinEnter	autocmd.txt	/*WinEnter*
WinLeave	autocmd.txt	/*WinLeave*
WinNew	autocmd.txt	/*WinNew*
X	change.txt	/*X*
X11	options.txt	/*X11*
X11-icon	gui_x11.txt	/*X11-icon*
X11_mouse_shapes	gui_x11.txt	/*X11_mouse_shapes*
X1Drag	term.txt	/*X1Drag*
X1Mouse	term.txt	/*X1Mouse*
X1Release	term.txt	/*X1Release*
X2Drag	term.txt	/*X2Drag*
X2Mouse	term.txt	/*X2Mouse*
X2Release	term.txt	/*X2Release*
XIM	mbyte.txt	/*XIM*
XLFD	mbyte.txt	/*XLFD*
Y	change.txt	/*Y*
Y2K	intro.txt	/*Y2K*
ZQ	editing.txt	/*ZQ*
ZZ	editing.txt	/*ZZ*
[	index.txt	/*[*
[#	motion.txt	/*[#*
['	motion.txt	/*['*
[(	motion.txt	/*[(*
[++opt]	editing.txt	/*[++opt]*
[+cmd]	editing.txt	/*[+cmd]*
[..]	pattern.txt	/*[..]*
[/	motion.txt	/*[\/*
[:alnum:]	pattern.txt	/*[:alnum:]*
[:alpha:]	pattern.txt	/*[:alpha:]*
[:backspace:]	pattern.txt	/*[:backspace:]*
[:blank:]	pattern.txt	/*[:blank:]*
[:cntrl:]	pattern.txt	/*[:cntrl:]*
[:digit:]	pattern.txt	/*[:digit:]*
[:escape:]	pattern.txt	/*[:escape:]*
[:graph:]	pattern.txt	/*[:graph:]*
[:lower:]	pattern.txt	/*[:lower:]*
[:print:]	pattern.txt	/*[:print:]*
[:punct:]	pattern.txt	/*[:punct:]*
[:return:]	pattern.txt	/*[:return:]*
[:space:]	pattern.txt	/*[:space:]*
[:tab:]	pattern.txt	/*[:tab:]*
[:upper:]	pattern.txt	/*[:upper:]*
[:xdigit:]	pattern.txt	/*[:xdigit:]*
[<MiddleMouse>	change.txt	/*[<MiddleMouse>*
[==]	pattern.txt	/*[==]*
[D	tagsrch.txt	/*[D*
[I	tagsrch.txt	/*[I*
[M	motion.txt	/*[M*
[P	change.txt	/*[P*
[S	spell.txt	/*[S*
[[	motion.txt	/*[[*
[]	motion.txt	/*[]*
[_CTRL-D	tagsrch.txt	/*[_CTRL-D*
[_CTRL-I	tagsrch.txt	/*[_CTRL-I*
[`	motion.txt	/*[`*
[c	diff.txt	/*[c*
[count]	intro.txt	/*[count]*
[d	tagsrch.txt	/*[d*
[f	editing.txt	/*[f*
[i	tagsrch.txt	/*[i*
[m	motion.txt	/*[m*
[p	change.txt	/*[p*
[pattern]	pattern.txt	/*[pattern]*
[quotex]	intro.txt	/*[quotex]*
[range]	cmdline.txt	/*[range]*
[s	spell.txt	/*[s*
[star	motion.txt	/*[star*
[z	fold.txt	/*[z*
[{	motion.txt	/*[{*
\0	change.txt	/*\\0*
]	index.txt	/*]*
]#	motion.txt	/*]#*
]'	motion.txt	/*]'*
])	motion.txt	/*])*
]/	motion.txt	/*]\/*
]<MiddleMouse>	change.txt	/*]<MiddleMouse>*
]D	tagsrch.txt	/*]D*
]I	tagsrch.txt	/*]I*
]M	motion.txt	/*]M*
]P	change.txt	/*]P*
]S	spell.txt	/*]S*
][	motion.txt	/*][*
]]	motion.txt	/*]]*
]_CTRL-D	tagsrch.txt	/*]_CTRL-D*
]_CTRL-I	tagsrch.txt	/*]_CTRL-I*
]`	motion.txt	/*]`*
]c	diff.txt	/*]c*
]d	tagsrch.txt	/*]d*
]f	editing.txt	/*]f*
]i	tagsrch.txt	/*]i*
]m	motion.txt	/*]m*
]p	change.txt	/*]p*
]s	spell.txt	/*]s*
]star	motion.txt	/*]star*
]z	fold.txt	/*]z*
]}	motion.txt	/*]}*
^	motion.txt	/*^*
_	motion.txt	/*_*
_exrc	starting.txt	/*_exrc*
_gvimrc	gui.txt	/*_gvimrc*
_vimrc	starting.txt	/*_vimrc*
`	motion.txt	/*`*
`(	motion.txt	/*`(*
`)	motion.txt	/*`)*
`-expansion	editing.txt	/*`-expansion*
`.	motion.txt	/*`.*
`0	motion.txt	/*`0*
`<	motion.txt	/*`<*
`=	editing.txt	/*`=*
`>	motion.txt	/*`>*
`A	motion.txt	/*`A*
`[	motion.txt	/*`[*
`]	motion.txt	/*`]*
`^	motion.txt	/*`^*
``	motion.txt	/*``*
`a	motion.txt	/*`a*
`quote	motion.txt	/*`quote*
`{	motion.txt	/*`{*
`}	motion.txt	/*`}*
a	insert.txt	/*a*
a'	motion.txt	/*a'*
a(	motion.txt	/*a(*
a)	motion.txt	/*a)*
a4	print.txt	/*a4*
a:0	eval.txt	/*a:0*
a:000	eval.txt	/*a:000*
a:1	eval.txt	/*a:1*
a:firstline	eval.txt	/*a:firstline*
a:lastline	eval.txt	/*a:lastline*
a:var	eval.txt	/*a:var*
a<	motion.txt	/*a<*
a>	motion.txt	/*a>*
aB	motion.txt	/*aB*
aW	motion.txt	/*aW*
a[	motion.txt	/*a[*
a]	motion.txt	/*a]*
a`	motion.txt	/*a`*
ab	motion.txt	/*ab*
abandon	editing.txt	/*abandon*
abbreviations	map.txt	/*abbreviations*
abel.vim	syntax.txt	/*abel.vim*
abs()	eval.txt	/*abs()*
acos()	eval.txt	/*acos()*
active-buffer	windows.txt	/*active-buffer*
ada#Create_Tags()	ft_ada.txt	/*ada#Create_Tags()*
ada#Jump_Tag()	ft_ada.txt	/*ada#Jump_Tag()*
ada#Listtags()	ft_ada.txt	/*ada#Listtags()*
ada#Switch_Syntax_Option()	ft_ada.txt	/*ada#Switch_Syntax_Option()*
ada#Word()	ft_ada.txt	/*ada#Word()*
ada-compiler	ft_ada.txt	/*ada-compiler*
ada-ctags	ft_ada.txt	/*ada-ctags*
ada-extra-plugins	ft_ada.txt	/*ada-extra-plugins*
ada-reference	ft_ada.txt	/*ada-reference*
ada.vim	ft_ada.txt	/*ada.vim*
add()	eval.txt	/*add()*
add-filetype-plugin	usr_05.txt	/*add-filetype-plugin*
add-global-plugin	usr_05.txt	/*add-global-plugin*
add-local-help	usr_05.txt	/*add-local-help*
add-option-flags	options.txt	/*add-option-flags*
add-package	usr_05.txt	/*add-package*
add-plugin	usr_05.txt	/*add-plugin*
added-5.1	version5.txt	/*added-5.1*
added-5.2	version5.txt	/*added-5.2*
added-5.3	version5.txt	/*added-5.3*
added-5.4	version5.txt	/*added-5.4*
added-5.5	version5.txt	/*added-5.5*
added-5.6	version5.txt	/*added-5.6*
added-5.7	version5.txt	/*added-5.7*
added-5.8	version5.txt	/*added-5.8*
added-6.1	version6.txt	/*added-6.1*
added-6.2	version6.txt	/*added-6.2*
added-6.3	version6.txt	/*added-6.3*
added-6.4	version6.txt	/*added-6.4*
added-7.1	version7.txt	/*added-7.1*
added-7.2	version7.txt	/*added-7.2*
added-7.3	version7.txt	/*added-7.3*
added-7.4	version7.txt	/*added-7.4*
added-BeOS	version5.txt	/*added-BeOS*
added-Mac	version5.txt	/*added-Mac*
added-VMS	version5.txt	/*added-VMS*
added-cmdline-args	version5.txt	/*added-cmdline-args*
added-options	version5.txt	/*added-options*
added-regexp	version5.txt	/*added-regexp*
added-various	version5.txt	/*added-various*
added-win32-GUI	version5.txt	/*added-win32-GUI*
aff-dic-format	spell.txt	/*aff-dic-format*
after-directory	options.txt	/*after-directory*
aleph	options.txt	/*aleph*
alt	intro.txt	/*alt*
alt-input	debugger.txt	/*alt-input*
alternate-file	editing.txt	/*alternate-file*
amiga-window	starting.txt	/*amiga-window*
and()	eval.txt	/*and()*
anonymous-function	eval.txt	/*anonymous-function*
ant.vim	syntax.txt	/*ant.vim*
ap	motion.txt	/*ap*
apache.vim	syntax.txt	/*apache.vim*
append()	eval.txt	/*append()*
aquote	motion.txt	/*aquote*
arabic.txt	arabic.txt	/*arabic.txt*
arabicfonts	arabic.txt	/*arabicfonts*
arabickeymap	arabic.txt	/*arabickeymap*
arg-functions	usr_41.txt	/*arg-functions*
argc()	eval.txt	/*argc()*
argidx()	eval.txt	/*argidx()*
arglist	editing.txt	/*arglist*
arglist-position	editing.txt	/*arglist-position*
arglist-quit	usr_07.txt	/*arglist-quit*
arglistid()	eval.txt	/*arglistid()*
argument-list	editing.txt	/*argument-list*
argv()	eval.txt	/*argv()*
as	motion.txt	/*as*
asin()	eval.txt	/*asin()*
asm.vim	syntax.txt	/*asm.vim*
asm68k	syntax.txt	/*asm68k*
asmh8300.vim	syntax.txt	/*asmh8300.vim*
assert_equal()	eval.txt	/*assert_equal()*
assert_exception()	eval.txt	/*assert_exception()*
assert_fails()	eval.txt	/*assert_fails()*
assert_false()	eval.txt	/*assert_false()*
assert_inrange()	eval.txt	/*assert_inrange()*
assert_match()	eval.txt	/*assert_match()*
assert_notequal()	eval.txt	/*assert_notequal()*
assert_notmatch()	eval.txt	/*assert_notmatch()*
assert_true()	eval.txt	/*assert_true()*
at	motion.txt	/*at*
atan()	eval.txt	/*atan()*
atan2()	eval.txt	/*atan2()*
athena-intellimouse	gui.txt	/*athena-intellimouse*
attr-list	syntax.txt	/*attr-list*
author	intro.txt	/*author*
auto-format	change.txt	/*auto-format*
auto-setting	options.txt	/*auto-setting*
auto-shortname	editing.txt	/*auto-shortname*
autocmd-<>	tips.txt	/*autocmd-<>*
autocmd-buffer-local	autocmd.txt	/*autocmd-buffer-local*
autocmd-buflocal	autocmd.txt	/*autocmd-buflocal*
autocmd-changes	autocmd.txt	/*autocmd-changes*
autocmd-define	autocmd.txt	/*autocmd-define*
autocmd-disable	autocmd.txt	/*autocmd-disable*
autocmd-events	autocmd.txt	/*autocmd-events*
autocmd-events-abc	autocmd.txt	/*autocmd-events-abc*
autocmd-execute	autocmd.txt	/*autocmd-execute*
autocmd-groups	autocmd.txt	/*autocmd-groups*
autocmd-intro	autocmd.txt	/*autocmd-intro*
autocmd-list	autocmd.txt	/*autocmd-list*
autocmd-nested	autocmd.txt	/*autocmd-nested*
autocmd-osfiletypes	filetype.txt	/*autocmd-osfiletypes*
autocmd-patterns	autocmd.txt	/*autocmd-patterns*
autocmd-remove	autocmd.txt	/*autocmd-remove*
autocmd-searchpat	autocmd.txt	/*autocmd-searchpat*
autocmd-use	autocmd.txt	/*autocmd-use*
autocmd.txt	autocmd.txt	/*autocmd.txt*
autocmds-kept	version5.txt	/*autocmds-kept*
autocommand	autocmd.txt	/*autocommand*
autocommand-events	autocmd.txt	/*autocommand-events*
autocommand-pattern	autocmd.txt	/*autocommand-pattern*
autoformat	change.txt	/*autoformat*
autoload	eval.txt	/*autoload*
autoload-functions	eval.txt	/*autoload-functions*
avoid-hit-enter	version5.txt	/*avoid-hit-enter*
aw	motion.txt	/*aw*
a{	motion.txt	/*a{*
a}	motion.txt	/*a}*
b	motion.txt	/*b*
b:	eval.txt	/*b:*
b:changedtick	eval.txt	/*b:changedtick*
b:changelog_name	filetype.txt	/*b:changelog_name*
b:clojure_syntax_keywords	syntax.txt	/*b:clojure_syntax_keywords*
b:clojure_syntax_without_core_keywords	syntax.txt	/*b:clojure_syntax_without_core_keywords*
b:current_syntax-variable	syntax.txt	/*b:current_syntax-variable*
b:netrw_lastfile	pi_netrw.txt	/*b:netrw_lastfile*
b:tex_stylish	syntax.txt	/*b:tex_stylish*
b:var	eval.txt	/*b:var*
b:yaml_schema	syntax.txt	/*b:yaml_schema*
baan-folding	syntax.txt	/*baan-folding*
baan-syntax	syntax.txt	/*baan-syntax*
baan.vim	syntax.txt	/*baan.vim*
backslash	intro.txt	/*backslash*
backspace	intro.txt	/*backspace*
backspace-delete	version4.txt	/*backspace-delete*
backtick-expansion	editing.txt	/*backtick-expansion*
backup	editing.txt	/*backup*
backup-changed	version4.txt	/*backup-changed*
backup-extension	version4.txt	/*backup-extension*
backup-table	editing.txt	/*backup-table*
balloon-eval	debugger.txt	/*balloon-eval*
bar	motion.txt	/*bar*
bars	help.txt	/*bars*
base_font_name_list	mbyte.txt	/*base_font_name_list*
basic.vim	syntax.txt	/*basic.vim*
beep	options.txt	/*beep*
beos-colors	os_beos.txt	/*beos-colors*
beos-compiling	os_beos.txt	/*beos-compiling*
beos-dragndrop	os_beos.txt	/*beos-dragndrop*
beos-fonts	os_beos.txt	/*beos-fonts*
beos-general	os_beos.txt	/*beos-general*
beos-gui	os_beos.txt	/*beos-gui*
beos-launch	os_beos.txt	/*beos-launch*
beos-meta	os_beos.txt	/*beos-meta*
beos-mouse	os_beos.txt	/*beos-mouse*
beos-perl	os_beos.txt	/*beos-perl*
beos-timeout	os_beos.txt	/*beos-timeout*
beos-unicode	os_beos.txt	/*beos-unicode*
beos-utf8	os_beos.txt	/*beos-utf8*
beos-vimdir	os_beos.txt	/*beos-vimdir*
better-python-interface	version7.txt	/*better-python-interface*
beval_bufnr-variable	eval.txt	/*beval_bufnr-variable*
beval_col-variable	eval.txt	/*beval_col-variable*
beval_lnum-variable	eval.txt	/*beval_lnum-variable*
beval_text-variable	eval.txt	/*beval_text-variable*
beval_winid-variable	eval.txt	/*beval_winid-variable*
beval_winnr-variable	eval.txt	/*beval_winnr-variable*
binary-number	eval.txt	/*binary-number*
bitwise-function	usr_41.txt	/*bitwise-function*
blockwise-examples	visual.txt	/*blockwise-examples*
blockwise-operators	visual.txt	/*blockwise-operators*
blockwise-register	change.txt	/*blockwise-register*
blockwise-visual	visual.txt	/*blockwise-visual*
blowfish	options.txt	/*blowfish*
blowfish2	options.txt	/*blowfish2*
bold	syntax.txt	/*bold*
bom-bytes	mbyte.txt	/*bom-bytes*
book	intro.txt	/*book*
bookmark	usr_03.txt	/*bookmark*
boolean	options.txt	/*boolean*
break-finally	eval.txt	/*break-finally*
browse()	eval.txt	/*browse()*
browsedir()	eval.txt	/*browsedir()*
browsefilter	editing.txt	/*browsefilter*
bufexists()	eval.txt	/*bufexists()*
buffer-functions	usr_41.txt	/*buffer-functions*
buffer-hidden	windows.txt	/*buffer-hidden*
buffer-list	windows.txt	/*buffer-list*
buffer-variable	eval.txt	/*buffer-variable*
buffer-write	editing.txt	/*buffer-write*
buffer_exists()	eval.txt	/*buffer_exists()*
buffer_name()	eval.txt	/*buffer_name()*
buffer_number()	eval.txt	/*buffer_number()*
buffers	windows.txt	/*buffers*
buffers-menu	gui.txt	/*buffers-menu*
buflisted()	eval.txt	/*buflisted()*
bufloaded()	eval.txt	/*bufloaded()*
bufname()	eval.txt	/*bufname()*
bufnr()	eval.txt	/*bufnr()*
bufwinid()	eval.txt	/*bufwinid()*
bufwinnr()	eval.txt	/*bufwinnr()*
bug-fixes-5	version5.txt	/*bug-fixes-5*
bug-fixes-6	version6.txt	/*bug-fixes-6*
bug-fixes-7	version7.txt	/*bug-fixes-7*
bug-fixes-8	version8.txt	/*bug-fixes-8*
bug-reports	intro.txt	/*bug-reports*
bugreport.vim	intro.txt	/*bugreport.vim*
bugs	intro.txt	/*bugs*
builtin-terms	term.txt	/*builtin-terms*
builtin-tools	gui.txt	/*builtin-tools*
builtin_terms	term.txt	/*builtin_terms*
byte-count	editing.txt	/*byte-count*
byte2line()	eval.txt	/*byte2line()*
byteidx()	eval.txt	/*byteidx()*
byteidxcomp()	eval.txt	/*byteidxcomp()*
bzip2	pi_gzip.txt	/*bzip2*
c	change.txt	/*c*
c.vim	syntax.txt	/*c.vim*
cW	change.txt	/*cW*
c_#	cmdline.txt	/*c_#*
c_##	cmdline.txt	/*c_##*
c_#<	cmdline.txt	/*c_#<*
c_#n	cmdline.txt	/*c_#n*
c_%	cmdline.txt	/*c_%*
c_<BS>	cmdline.txt	/*c_<BS>*
c_<C-Left>	cmdline.txt	/*c_<C-Left>*
c_<C-R>	cmdline.txt	/*c_<C-R>*
c_<C-R>_<C-A>	cmdline.txt	/*c_<C-R>_<C-A>*
c_<C-R>_<C-F>	cmdline.txt	/*c_<C-R>_<C-F>*
c_<C-R>_<C-O>	cmdline.txt	/*c_<C-R>_<C-O>*
c_<C-R>_<C-P>	cmdline.txt	/*c_<C-R>_<C-P>*
c_<C-R>_<C-R>	cmdline.txt	/*c_<C-R>_<C-R>*
c_<C-R>_<C-W>	cmdline.txt	/*c_<C-R>_<C-W>*
c_<C-Right>	cmdline.txt	/*c_<C-Right>*
c_<CR>	cmdline.txt	/*c_<CR>*
c_<Del>	cmdline.txt	/*c_<Del>*
c_<Down>	cmdline.txt	/*c_<Down>*
c_<End>	cmdline.txt	/*c_<End>*
c_<Esc>	cmdline.txt	/*c_<Esc>*
c_<Home>	cmdline.txt	/*c_<Home>*
c_<Insert>	cmdline.txt	/*c_<Insert>*
c_<Left>	cmdline.txt	/*c_<Left>*
c_<LeftMouse>	cmdline.txt	/*c_<LeftMouse>*
c_<MiddleMouse>	cmdline.txt	/*c_<MiddleMouse>*
c_<NL>	cmdline.txt	/*c_<NL>*
c_<PageDown>	cmdline.txt	/*c_<PageDown>*
c_<PageUp>	cmdline.txt	/*c_<PageUp>*
c_<Right>	cmdline.txt	/*c_<Right>*
c_<S-Down>	cmdline.txt	/*c_<S-Down>*
c_<S-Left>	cmdline.txt	/*c_<S-Left>*
c_<S-Right>	cmdline.txt	/*c_<S-Right>*
c_<S-Tab>	cmdline.txt	/*c_<S-Tab>*
c_<S-Up>	cmdline.txt	/*c_<S-Up>*
c_<Tab>	cmdline.txt	/*c_<Tab>*
c_<Up>	cmdline.txt	/*c_<Up>*
c_BS	cmdline.txt	/*c_BS*
c_CR	cmdline.txt	/*c_CR*
c_CTRL-A	cmdline.txt	/*c_CTRL-A*
c_CTRL-B	cmdline.txt	/*c_CTRL-B*
c_CTRL-C	cmdline.txt	/*c_CTRL-C*
c_CTRL-D	cmdline.txt	/*c_CTRL-D*
c_CTRL-E	cmdline.txt	/*c_CTRL-E*
c_CTRL-F	cmdline.txt	/*c_CTRL-F*
c_CTRL-G	cmdline.txt	/*c_CTRL-G*
c_CTRL-H	cmdline.txt	/*c_CTRL-H*
c_CTRL-I	cmdline.txt	/*c_CTRL-I*
c_CTRL-J	cmdline.txt	/*c_CTRL-J*
c_CTRL-K	cmdline.txt	/*c_CTRL-K*
c_CTRL-L	cmdline.txt	/*c_CTRL-L*
c_CTRL-M	cmdline.txt	/*c_CTRL-M*
c_CTRL-N	cmdline.txt	/*c_CTRL-N*
c_CTRL-P	cmdline.txt	/*c_CTRL-P*
c_CTRL-Q	cmdline.txt	/*c_CTRL-Q*
c_CTRL-R	cmdline.txt	/*c_CTRL-R*
c_CTRL-R_=	cmdline.txt	/*c_CTRL-R_=*
c_CTRL-R_CTRL-A	cmdline.txt	/*c_CTRL-R_CTRL-A*
c_CTRL-R_CTRL-F	cmdline.txt	/*c_CTRL-R_CTRL-F*
c_CTRL-R_CTRL-O	cmdline.txt	/*c_CTRL-R_CTRL-O*
c_CTRL-R_CTRL-P	cmdline.txt	/*c_CTRL-R_CTRL-P*
c_CTRL-R_CTRL-R	cmdline.txt	/*c_CTRL-R_CTRL-R*
c_CTRL-R_CTRL-W	cmdline.txt	/*c_CTRL-R_CTRL-W*
c_CTRL-T	cmdline.txt	/*c_CTRL-T*
c_CTRL-U	cmdline.txt	/*c_CTRL-U*
c_CTRL-V	cmdline.txt	/*c_CTRL-V*
c_CTRL-W	cmdline.txt	/*c_CTRL-W*
c_CTRL-Y	cmdline.txt	/*c_CTRL-Y*
c_CTRL-[	cmdline.txt	/*c_CTRL-[*
c_CTRL-\_CTRL-G	intro.txt	/*c_CTRL-\\_CTRL-G*
c_CTRL-\_CTRL-N	intro.txt	/*c_CTRL-\\_CTRL-N*
c_CTRL-\_e	cmdline.txt	/*c_CTRL-\\_e*
c_CTRL-]	cmdline.txt	/*c_CTRL-]*
c_CTRL-^	cmdline.txt	/*c_CTRL-^*
c_CTRL-_	cmdline.txt	/*c_CTRL-_*
c_Del	cmdline.txt	/*c_Del*
c_Down	cmdline.txt	/*c_Down*
c_End	cmdline.txt	/*c_End*
c_Esc	cmdline.txt	/*c_Esc*
c_Home	cmdline.txt	/*c_Home*
c_Insert	cmdline.txt	/*c_Insert*
c_Left	cmdline.txt	/*c_Left*
c_Right	cmdline.txt	/*c_Right*
c_Up	cmdline.txt	/*c_Up*
c_ansi_constants	syntax.txt	/*c_ansi_constants*
c_ansi_typedefs	syntax.txt	/*c_ansi_typedefs*
c_comment_strings	syntax.txt	/*c_comment_strings*
c_curly_error	syntax.txt	/*c_curly_error*
c_digraph	cmdline.txt	/*c_digraph*
c_gnu	syntax.txt	/*c_gnu*
c_no_ansi	syntax.txt	/*c_no_ansi*
c_no_bracket_error	syntax.txt	/*c_no_bracket_error*
c_no_bsd	syntax.txt	/*c_no_bsd*
c_no_c11	syntax.txt	/*c_no_c11*
c_no_c99	syntax.txt	/*c_no_c99*
c_no_cformat	syntax.txt	/*c_no_cformat*
c_no_curly_error	syntax.txt	/*c_no_curly_error*
c_no_if0	syntax.txt	/*c_no_if0*
c_no_tab_space_error	syntax.txt	/*c_no_tab_space_error*
c_no_trail_space_error	syntax.txt	/*c_no_trail_space_error*
c_no_utf	syntax.txt	/*c_no_utf*
c_space_errors	syntax.txt	/*c_space_errors*
c_syntax_for_h	syntax.txt	/*c_syntax_for_h*
c_wildchar	cmdline.txt	/*c_wildchar*
call()	eval.txt	/*call()*
carriage-return	intro.txt	/*carriage-return*
case	change.txt	/*case*
catch-all	eval.txt	/*catch-all*
catch-errors	eval.txt	/*catch-errors*
catch-interrupt	eval.txt	/*catch-interrupt*
catch-order	eval.txt	/*catch-order*
catch-text	eval.txt	/*catch-text*
cc	change.txt	/*cc*
ceil()	eval.txt	/*ceil()*
ch.vim	syntax.txt	/*ch.vim*
ch_canread()	eval.txt	/*ch_canread()*
ch_close()	eval.txt	/*ch_close()*
ch_close_in()	eval.txt	/*ch_close_in()*
ch_evalexpr()	eval.txt	/*ch_evalexpr()*
ch_evalraw()	eval.txt	/*ch_evalraw()*
ch_getbufnr()	eval.txt	/*ch_getbufnr()*
ch_getjob()	eval.txt	/*ch_getjob()*
ch_info()	eval.txt	/*ch_info()*
ch_log()	eval.txt	/*ch_log()*
ch_logfile()	eval.txt	/*ch_logfile()*
ch_open()	eval.txt	/*ch_open()*
ch_read()	eval.txt	/*ch_read()*
ch_readraw()	eval.txt	/*ch_readraw()*
ch_sendexpr()	eval.txt	/*ch_sendexpr()*
ch_sendraw()	eval.txt	/*ch_sendraw()*
ch_setoptions()	eval.txt	/*ch_setoptions()*
ch_status()	eval.txt	/*ch_status()*
change-list-jumps	motion.txt	/*change-list-jumps*
change-name	tips.txt	/*change-name*
change-tabs	change.txt	/*change-tabs*
change.txt	change.txt	/*change.txt*
changed-5.1	version5.txt	/*changed-5.1*
changed-5.2	version5.txt	/*changed-5.2*
changed-5.3	version5.txt	/*changed-5.3*
changed-5.4	version5.txt	/*changed-5.4*
changed-5.5	version5.txt	/*changed-5.5*
changed-5.6	version5.txt	/*changed-5.6*
changed-5.7	version5.txt	/*changed-5.7*
changed-5.8	version5.txt	/*changed-5.8*
changed-6.1	version6.txt	/*changed-6.1*
changed-6.2	version6.txt	/*changed-6.2*
changed-6.3	version6.txt	/*changed-6.3*
changed-6.4	version6.txt	/*changed-6.4*
changed-7.1	version7.txt	/*changed-7.1*
changed-7.2	version7.txt	/*changed-7.2*
changed-7.3	version7.txt	/*changed-7.3*
changed-7.4	version7.txt	/*changed-7.4*
changelist	motion.txt	/*changelist*
changelog.vim	syntax.txt	/*changelog.vim*
changenr()	eval.txt	/*changenr()*
changetick	eval.txt	/*changetick*
changing	change.txt	/*changing*
channel	channel.txt	/*channel*
channel-callback	channel.txt	/*channel-callback*
channel-close	channel.txt	/*channel-close*
channel-close-in	channel.txt	/*channel-close-in*
channel-commands	channel.txt	/*channel-commands*
channel-demo	channel.txt	/*channel-demo*
channel-drop	channel.txt	/*channel-drop*
channel-functions	usr_41.txt	/*channel-functions*
channel-mode	channel.txt	/*channel-mode*
channel-more	channel.txt	/*channel-more*
channel-open	channel.txt	/*channel-open*
channel-open-options	channel.txt	/*channel-open-options*
channel-raw	channel.txt	/*channel-raw*
channel-timeout	channel.txt	/*channel-timeout*
channel-use	channel.txt	/*channel-use*
channel.txt	channel.txt	/*channel.txt*
char-variable	eval.txt	/*char-variable*
char2nr()	eval.txt	/*char2nr()*
characterwise	motion.txt	/*characterwise*
characterwise-register	change.txt	/*characterwise-register*
characterwise-visual	visual.txt	/*characterwise-visual*
charconvert_from-variable	eval.txt	/*charconvert_from-variable*
charconvert_to-variable	eval.txt	/*charconvert_to-variable*
charity	uganda.txt	/*charity*
charset	mbyte.txt	/*charset*
charset-conversion	mbyte.txt	/*charset-conversion*
chill.vim	syntax.txt	/*chill.vim*
chmod	eval.txt	/*chmod*
cindent()	eval.txt	/*cindent()*
cinkeys-format	indent.txt	/*cinkeys-format*
cino-#	indent.txt	/*cino-#*
cino-(	indent.txt	/*cino-(*
cino-)	indent.txt	/*cino-)*
cino-+	indent.txt	/*cino-+*
cino-/	indent.txt	/*cino-\/*
cino-:	indent.txt	/*cino-:*
cino-=	indent.txt	/*cino-=*
cino->	indent.txt	/*cino->*
cino-C	indent.txt	/*cino-C*
cino-J	indent.txt	/*cino-J*
cino-L	indent.txt	/*cino-L*
cino-M	indent.txt	/*cino-M*
cino-N	indent.txt	/*cino-N*
cino-U	indent.txt	/*cino-U*
cino-W	indent.txt	/*cino-W*
cino-^	indent.txt	/*cino-^*
cino-b	indent.txt	/*cino-b*
cino-c	indent.txt	/*cino-c*
cino-e	indent.txt	/*cino-e*
cino-f	indent.txt	/*cino-f*
cino-g	indent.txt	/*cino-g*
cino-h	indent.txt	/*cino-h*
cino-i	indent.txt	/*cino-i*
cino-j	indent.txt	/*cino-j*
cino-k	indent.txt	/*cino-k*
cino-l	indent.txt	/*cino-l*
cino-m	indent.txt	/*cino-m*
cino-n	indent.txt	/*cino-n*
cino-p	indent.txt	/*cino-p*
cino-star	indent.txt	/*cino-star*
cino-t	indent.txt	/*cino-t*
cino-u	indent.txt	/*cino-u*
cino-w	indent.txt	/*cino-w*
cino-{	indent.txt	/*cino-{*
cino-}	indent.txt	/*cino-}*
cinoptions-values	indent.txt	/*cinoptions-values*
clear-undo	undo.txt	/*clear-undo*
clearmatches()	eval.txt	/*clearmatches()*
client-server	remote.txt	/*client-server*
clientserver	remote.txt	/*clientserver*
clipboard	gui.txt	/*clipboard*
clipboard-autoselect	options.txt	/*clipboard-autoselect*
clipboard-autoselectml	options.txt	/*clipboard-autoselectml*
clipboard-autoselectplus	options.txt	/*clipboard-autoselectplus*
clipboard-exclude	options.txt	/*clipboard-exclude*
clipboard-html	options.txt	/*clipboard-html*
clipboard-unnamed	options.txt	/*clipboard-unnamed*
clipboard-unnamedplus	options.txt	/*clipboard-unnamedplus*
clojure-indent	indent.txt	/*clojure-indent*
close_cb	channel.txt	/*close_cb*
closure	eval.txt	/*closure*
cmdarg-variable	eval.txt	/*cmdarg-variable*
cmdbang-variable	eval.txt	/*cmdbang-variable*
cmdline-arguments	vi_diff.txt	/*cmdline-arguments*
cmdline-changed	version5.txt	/*cmdline-changed*
cmdline-completion	cmdline.txt	/*cmdline-completion*
cmdline-editing	cmdline.txt	/*cmdline-editing*
cmdline-history	cmdline.txt	/*cmdline-history*
cmdline-lines	cmdline.txt	/*cmdline-lines*
cmdline-ranges	cmdline.txt	/*cmdline-ranges*
cmdline-special	cmdline.txt	/*cmdline-special*
cmdline-too-long	cmdline.txt	/*cmdline-too-long*
cmdline-window	cmdline.txt	/*cmdline-window*
cmdline.txt	cmdline.txt	/*cmdline.txt*
cmdwin	cmdline.txt	/*cmdwin*
cmdwin-char	cmdline.txt	/*cmdwin-char*
cobol.vim	syntax.txt	/*cobol.vim*
codeset	mbyte.txt	/*codeset*
coding-style	develop.txt	/*coding-style*
col()	eval.txt	/*col()*
coldfusion.vim	syntax.txt	/*coldfusion.vim*
collapse	tips.txt	/*collapse*
color-xterm	syntax.txt	/*color-xterm*
coloring	syntax.txt	/*coloring*
colortest.vim	syntax.txt	/*colortest.vim*
command-line-functions	usr_41.txt	/*command-line-functions*
command-line-window	cmdline.txt	/*command-line-window*
command-mode	intro.txt	/*command-mode*
compatible-default	starting.txt	/*compatible-default*
compile-changes-5	version5.txt	/*compile-changes-5*
compile-changes-6	version6.txt	/*compile-changes-6*
compile-changes-7	version7.txt	/*compile-changes-7*
compile-changes-8	version8.txt	/*compile-changes-8*
compiler-compaqada	ft_ada.txt	/*compiler-compaqada*
compiler-decada	ft_ada.txt	/*compiler-decada*
compiler-gcc	quickfix.txt	/*compiler-gcc*
compiler-gnat	ft_ada.txt	/*compiler-gnat*
compiler-hpada	ft_ada.txt	/*compiler-hpada*
compiler-manx	quickfix.txt	/*compiler-manx*
compiler-perl	quickfix.txt	/*compiler-perl*
compiler-pyunit	quickfix.txt	/*compiler-pyunit*
compiler-select	quickfix.txt	/*compiler-select*
compiler-tex	quickfix.txt	/*compiler-tex*
compiler-vaxada	ft_ada.txt	/*compiler-vaxada*
compl-current	insert.txt	/*compl-current*
compl-define	insert.txt	/*compl-define*
compl-dictionary	insert.txt	/*compl-dictionary*
compl-filename	insert.txt	/*compl-filename*
compl-function	insert.txt	/*compl-function*
compl-generic	insert.txt	/*compl-generic*
compl-keyword	insert.txt	/*compl-keyword*
compl-omni	insert.txt	/*compl-omni*
compl-omni-filetypes	insert.txt	/*compl-omni-filetypes*
compl-spelling	insert.txt	/*compl-spelling*
compl-tag	insert.txt	/*compl-tag*
compl-vim	insert.txt	/*compl-vim*
compl-whole-line	insert.txt	/*compl-whole-line*
complete()	eval.txt	/*complete()*
complete-functions	insert.txt	/*complete-functions*
complete-items	insert.txt	/*complete-items*
complete_CTRL-E	insert.txt	/*complete_CTRL-E*
complete_CTRL-Y	insert.txt	/*complete_CTRL-Y*
complete_add()	eval.txt	/*complete_add()*
complete_check()	eval.txt	/*complete_check()*
completed_item-variable	eval.txt	/*completed_item-variable*
completion-functions	usr_41.txt	/*completion-functions*
complex-change	change.txt	/*complex-change*
complex-repeat	repeat.txt	/*complex-repeat*
compress	pi_gzip.txt	/*compress*
conceal	syntax.txt	/*conceal*
confirm()	eval.txt	/*confirm()*
connection-refused	message.txt	/*connection-refused*
console-menus	gui.txt	/*console-menus*
control	intro.txt	/*control*
conversion-server	mbyte.txt	/*conversion-server*
convert-to-HTML	syntax.txt	/*convert-to-HTML*
convert-to-XHTML	syntax.txt	/*convert-to-XHTML*
convert-to-XML	syntax.txt	/*convert-to-XML*
copy()	eval.txt	/*copy()*
copy-diffs	diff.txt	/*copy-diffs*
copy-move	change.txt	/*copy-move*
copying	uganda.txt	/*copying*
copyright	uganda.txt	/*copyright*
cos()	eval.txt	/*cos()*
cosh()	eval.txt	/*cosh()*
count	intro.txt	/*count*
count()	eval.txt	/*count()*
count-bytes	tips.txt	/*count-bytes*
count-items	tips.txt	/*count-items*
count-variable	eval.txt	/*count-variable*
count1-variable	eval.txt	/*count1-variable*
cp-default	version5.txt	/*cp-default*
cpo	options.txt	/*cpo*
cpo-!	options.txt	/*cpo-!*
cpo-#	options.txt	/*cpo-#*
cpo-$	options.txt	/*cpo-$*
cpo-%	options.txt	/*cpo-%*
cpo-&	options.txt	/*cpo-&*
cpo-+	options.txt	/*cpo-+*
cpo--	options.txt	/*cpo--*
cpo-.	options.txt	/*cpo-.*
cpo-/	options.txt	/*cpo-\/*
cpo-;	options.txt	/*cpo-;*
cpo-<	options.txt	/*cpo-<*
cpo->	options.txt	/*cpo->*
cpo-A	options.txt	/*cpo-A*
cpo-B	options.txt	/*cpo-B*
cpo-C	options.txt	/*cpo-C*
cpo-D	options.txt	/*cpo-D*
cpo-E	options.txt	/*cpo-E*
cpo-F	options.txt	/*cpo-F*
cpo-H	options.txt	/*cpo-H*
cpo-I	options.txt	/*cpo-I*
cpo-J	options.txt	/*cpo-J*
cpo-K	options.txt	/*cpo-K*
cpo-L	options.txt	/*cpo-L*
cpo-M	options.txt	/*cpo-M*
cpo-O	options.txt	/*cpo-O*
cpo-P	options.txt	/*cpo-P*
cpo-R	options.txt	/*cpo-R*
cpo-S	options.txt	/*cpo-S*
cpo-W	options.txt	/*cpo-W*
cpo-X	options.txt	/*cpo-X*
cpo-Z	options.txt	/*cpo-Z*
cpo-\	options.txt	/*cpo-\\*
cpo-a	options.txt	/*cpo-a*
cpo-b	options.txt	/*cpo-b*
cpo-bar	options.txt	/*cpo-bar*
cpo-c	options.txt	/*cpo-c*
cpo-d	options.txt	/*cpo-d*
cpo-e	options.txt	/*cpo-e*
cpo-f	options.txt	/*cpo-f*
cpo-g	options.txt	/*cpo-g*
cpo-i	options.txt	/*cpo-i*
cpo-j	options.txt	/*cpo-j*
cpo-k	options.txt	/*cpo-k*
cpo-l	options.txt	/*cpo-l*
cpo-m	options.txt	/*cpo-m*
cpo-n	options.txt	/*cpo-n*
cpo-o	options.txt	/*cpo-o*
cpo-p	options.txt	/*cpo-p*
cpo-q	options.txt	/*cpo-q*
cpo-r	options.txt	/*cpo-r*
cpo-s	options.txt	/*cpo-s*
cpo-star	options.txt	/*cpo-star*
cpo-t	options.txt	/*cpo-t*
cpo-u	options.txt	/*cpo-u*
cpo-v	options.txt	/*cpo-v*
cpo-w	options.txt	/*cpo-w*
cpo-x	options.txt	/*cpo-x*
cpo-y	options.txt	/*cpo-y*
cpo-{	options.txt	/*cpo-{*
cpp.vim	syntax.txt	/*cpp.vim*
crash-recovery	recover.txt	/*crash-recovery*
creating-menus	gui.txt	/*creating-menus*
credits	intro.txt	/*credits*
crontab	options.txt	/*crontab*
cs-find	if_cscop.txt	/*cs-find*
cs7-problem	term.txt	/*cs7-problem*
cscope	if_cscop.txt	/*cscope*
cscope-commands	if_cscop.txt	/*cscope-commands*
cscope-find	if_cscop.txt	/*cscope-find*
cscope-howtouse	if_cscop.txt	/*cscope-howtouse*
cscope-info	if_cscop.txt	/*cscope-info*
cscope-intro	if_cscop.txt	/*cscope-intro*
cscope-limitations	if_cscop.txt	/*cscope-limitations*
cscope-options	if_cscop.txt	/*cscope-options*
cscope-suggestions	if_cscop.txt	/*cscope-suggestions*
cscope-win32	if_cscop.txt	/*cscope-win32*
cscope_connection()	eval.txt	/*cscope_connection()*
cscopepathcomp	if_cscop.txt	/*cscopepathcomp*
cscopeprg	if_cscop.txt	/*cscopeprg*
cscopequickfix	if_cscop.txt	/*cscopequickfix*
cscoperelative	if_cscop.txt	/*cscoperelative*
cscopetag	if_cscop.txt	/*cscopetag*
cscopetagorder	if_cscop.txt	/*cscopetagorder*
cscopeverbose	if_cscop.txt	/*cscopeverbose*
csh.vim	syntax.txt	/*csh.vim*
cspc	if_cscop.txt	/*cspc*
csprg	if_cscop.txt	/*csprg*
csqf	if_cscop.txt	/*csqf*
csre	if_cscop.txt	/*csre*
cst	if_cscop.txt	/*cst*
csto	if_cscop.txt	/*csto*
csverb	if_cscop.txt	/*csverb*
ctags	tagsrch.txt	/*ctags*
ctags-gone	version6.txt	/*ctags-gone*
cterm-colors	syntax.txt	/*cterm-colors*
ctrl	intro.txt	/*ctrl*
ctype-variable	eval.txt	/*ctype-variable*
curly-braces-function-names	eval.txt	/*curly-braces-function-names*
curly-braces-names	eval.txt	/*curly-braces-names*
curpos-visual	version6.txt	/*curpos-visual*
current-directory	editing.txt	/*current-directory*
current-file	editing.txt	/*current-file*
current_compiler	quickfix.txt	/*current_compiler*
cursor()	eval.txt	/*cursor()*
cursor-blinking	options.txt	/*cursor-blinking*
cursor-down	intro.txt	/*cursor-down*
cursor-functions	usr_41.txt	/*cursor-functions*
cursor-left	intro.txt	/*cursor-left*
cursor-motions	motion.txt	/*cursor-motions*
cursor-position	pattern.txt	/*cursor-position*
cursor-right	intro.txt	/*cursor-right*
cursor-up	intro.txt	/*cursor-up*
cursor_down	intro.txt	/*cursor_down*
cursor_left	intro.txt	/*cursor_left*
cursor_right	intro.txt	/*cursor_right*
cursor_up	intro.txt	/*cursor_up*
cw	change.txt	/*cw*
cweb.vim	syntax.txt	/*cweb.vim*
cynlib.vim	syntax.txt	/*cynlib.vim*
d	change.txt	/*d*
daB	motion.txt	/*daB*
daW	motion.txt	/*daW*
dab	motion.txt	/*dab*
dap	motion.txt	/*dap*
das	motion.txt	/*das*
date-functions	usr_41.txt	/*date-functions*
dav	pi_netrw.txt	/*dav*
davs	pi_netrw.txt	/*davs*
daw	motion.txt	/*daw*
dd	change.txt	/*dd*
debug-gcc	debug.txt	/*debug-gcc*
debug-highlight	debugger.txt	/*debug-highlight*
debug-leaks	debug.txt	/*debug-leaks*
debug-minidump	debug.txt	/*debug-minidump*
debug-mode	repeat.txt	/*debug-mode*
debug-scripts	repeat.txt	/*debug-scripts*
debug-signs	debugger.txt	/*debug-signs*
debug-vim	debug.txt	/*debug-vim*
debug-vs2005	debug.txt	/*debug-vs2005*
debug-win32	debug.txt	/*debug-win32*
debug-windbg	debug.txt	/*debug-windbg*
debug.txt	debug.txt	/*debug.txt*
debugger-compilation	debugger.txt	/*debugger-compilation*
debugger-features	debugger.txt	/*debugger-features*
debugger-integration	debugger.txt	/*debugger-integration*
debugger-support	debugger.txt	/*debugger-support*
debugger.txt	debugger.txt	/*debugger.txt*
dec-mouse	options.txt	/*dec-mouse*
decada_members	ft_ada.txt	/*decada_members*
deepcopy()	eval.txt	/*deepcopy()*
defaults.vim	starting.txt	/*defaults.vim*
definition-search	tagsrch.txt	/*definition-search*
definitions	intro.txt	/*definitions*
delete()	eval.txt	/*delete()*
delete-insert	change.txt	/*delete-insert*
delete-menus	gui.txt	/*delete-menus*
deleting	change.txt	/*deleting*
demoserver.py	channel.txt	/*demoserver.py*
design-assumptions	develop.txt	/*design-assumptions*
design-compatible	develop.txt	/*design-compatible*
design-decisions	develop.txt	/*design-decisions*
design-documented	develop.txt	/*design-documented*
design-flexible	develop.txt	/*design-flexible*
design-goals	develop.txt	/*design-goals*
design-improved	develop.txt	/*design-improved*
design-maintain	develop.txt	/*design-maintain*
design-multi-platform	develop.txt	/*design-multi-platform*
design-not	develop.txt	/*design-not*
design-speed-size	develop.txt	/*design-speed-size*
desktop.vim	syntax.txt	/*desktop.vim*
develop-spell	develop.txt	/*develop-spell*
develop-spell-suggestions	develop.txt	/*develop-spell-suggestions*
develop.txt	develop.txt	/*develop.txt*
development	develop.txt	/*development*
dgn	motion.txt	/*dgn*
dh	change.txt	/*dh*
diB	motion.txt	/*diB*
diW	motion.txt	/*diW*
dialog	gui_w32.txt	/*dialog*
dialogs-added	version5.txt	/*dialogs-added*
dib	motion.txt	/*dib*
dict	eval.txt	/*dict*
dict-functions	usr_41.txt	/*dict-functions*
dict-identity	eval.txt	/*dict-identity*
dict-modification	eval.txt	/*dict-modification*
did_filetype()	eval.txt	/*did_filetype()*
diff	diff.txt	/*diff*
diff-diffexpr	diff.txt	/*diff-diffexpr*
diff-mode	diff.txt	/*diff-mode*
diff-options	diff.txt	/*diff-options*
diff-original-file	diff.txt	/*diff-original-file*
diff-patchexpr	diff.txt	/*diff-patchexpr*
diff-slow	diff.txt	/*diff-slow*
diff.txt	diff.txt	/*diff.txt*
diff.vim	syntax.txt	/*diff.vim*
diff_filler()	eval.txt	/*diff_filler()*
diff_hlID()	eval.txt	/*diff_hlID()*
diff_translations	diff.txt	/*diff_translations*
digraph	digraph.txt	/*digraph*
digraph-arg	change.txt	/*digraph-arg*
digraph-encoding	digraph.txt	/*digraph-encoding*
digraph-table	digraph.txt	/*digraph-table*
digraph-table-mbyte	digraph.txt	/*digraph-table-mbyte*
digraph.txt	digraph.txt	/*digraph.txt*
digraphs	digraph.txt	/*digraphs*
digraphs-changed	version6.txt	/*digraphs-changed*
digraphs-default	digraph.txt	/*digraphs-default*
digraphs-define	digraph.txt	/*digraphs-define*
digraphs-use	digraph.txt	/*digraphs-use*
dip	motion.txt	/*dip*
dircolors.vim	syntax.txt	/*dircolors.vim*
dis	motion.txt	/*dis*
disable-menus	gui.txt	/*disable-menus*
discard	editing.txt	/*discard*
distribute-script	usr_41.txt	/*distribute-script*
distribution	intro.txt	/*distribution*
diw	motion.txt	/*diw*
dl	change.txt	/*dl*
do	diff.txt	/*do*
doc-file-list	help.txt	/*doc-file-list*
docbk.vim	syntax.txt	/*docbk.vim*
docbksgml.vim	syntax.txt	/*docbksgml.vim*
docbkxml.vim	syntax.txt	/*docbkxml.vim*
docbook	syntax.txt	/*docbook*
documentation-6	version6.txt	/*documentation-6*
donate	uganda.txt	/*donate*
dos	os_dos.txt	/*dos*
dos-:cd	os_dos.txt	/*dos-:cd*
dos-CTRL-Break	os_dos.txt	/*dos-CTRL-Break*
dos-backslash	os_dos.txt	/*dos-backslash*
dos-colors	os_dos.txt	/*dos-colors*
dos-file-formats	os_dos.txt	/*dos-file-formats*
dos-locations	os_dos.txt	/*dos-locations*
dos-shell	os_dos.txt	/*dos-shell*
dos-standard-mappings	os_dos.txt	/*dos-standard-mappings*
dos-temp-files	os_dos.txt	/*dos-temp-files*
dosbatch.vim	syntax.txt	/*dosbatch.vim*
double-click	term.txt	/*double-click*
download	intro.txt	/*download*
doxygen-syntax	syntax.txt	/*doxygen-syntax*
doxygen.vim	syntax.txt	/*doxygen.vim*
dp	diff.txt	/*dp*
drag-n-drop	gui.txt	/*drag-n-drop*
drag-n-drop-win32	gui_w32.txt	/*drag-n-drop-win32*
drag-status-line	term.txt	/*drag-status-line*
dtd.vim	syntax.txt	/*dtd.vim*
dtd2vim	insert.txt	/*dtd2vim*
dying-variable	eval.txt	/*dying-variable*
e	motion.txt	/*e*
easy	starting.txt	/*easy*
edit-a-file	editing.txt	/*edit-a-file*
edit-binary	editing.txt	/*edit-binary*
edit-dialogs	editing.txt	/*edit-dialogs*
edit-files	editing.txt	/*edit-files*
edit-intro	editing.txt	/*edit-intro*
edit-no-break	usr_25.txt	/*edit-no-break*
edit-paragraph-join	usr_25.txt	/*edit-paragraph-join*
editing.txt	editing.txt	/*editing.txt*
efm-%>	quickfix.txt	/*efm-%>*
efm-entries	quickfix.txt	/*efm-entries*
efm-ignore	quickfix.txt	/*efm-ignore*
eiffel.vim	syntax.txt	/*eiffel.vim*
emacs-keys	tips.txt	/*emacs-keys*
emacs-tags	tagsrch.txt	/*emacs-tags*
emacs_tags	tagsrch.txt	/*emacs_tags*
empty()	eval.txt	/*empty()*
encoding-names	mbyte.txt	/*encoding-names*
encoding-table	mbyte.txt	/*encoding-table*
encoding-values	mbyte.txt	/*encoding-values*
encryption	editing.txt	/*encryption*
end	intro.txt	/*end*
end-of-file	pattern.txt	/*end-of-file*
enlightened-terminal	syntax.txt	/*enlightened-terminal*
erlang.vim	syntax.txt	/*erlang.vim*
err_buf	channel.txt	/*err_buf*
err_cb	channel.txt	/*err_cb*
err_mode	channel.txt	/*err_mode*
err_modifiable	channel.txt	/*err_modifiable*
err_msg	channel.txt	/*err_msg*
err_name	channel.txt	/*err_name*
err_timeout	channel.txt	/*err_timeout*
errmsg-variable	eval.txt	/*errmsg-variable*
error-file-format	quickfix.txt	/*error-file-format*
error-messages	message.txt	/*error-messages*
errorformat	quickfix.txt	/*errorformat*
errorformat-Jikes	quickfix.txt	/*errorformat-Jikes*
errorformat-LaTeX	quickfix.txt	/*errorformat-LaTeX*
errorformat-Perl	quickfix.txt	/*errorformat-Perl*
errorformat-ant	quickfix.txt	/*errorformat-ant*
errorformat-changed	version4.txt	/*errorformat-changed*
errorformat-jade	quickfix.txt	/*errorformat-jade*
errorformat-javac	quickfix.txt	/*errorformat-javac*
errorformat-multi-line	quickfix.txt	/*errorformat-multi-line*
errorformat-separate-filename	quickfix.txt	/*errorformat-separate-filename*
errorformats	quickfix.txt	/*errorformats*
errors	message.txt	/*errors*
errors-variable	eval.txt	/*errors-variable*
escape	intro.txt	/*escape*
escape()	eval.txt	/*escape()*
escape-bar	version4.txt	/*escape-bar*
euphoria3.vim	syntax.txt	/*euphoria3.vim*
euphoria4.vim	syntax.txt	/*euphoria4.vim*
eval	eval.txt	/*eval*
eval()	eval.txt	/*eval()*
eval-examples	eval.txt	/*eval-examples*
eval-sandbox	eval.txt	/*eval-sandbox*
eval.txt	eval.txt	/*eval.txt*
eventhandler()	eval.txt	/*eventhandler()*
eview	starting.txt	/*eview*
evim	starting.txt	/*evim*
evim-keys	starting.txt	/*evim-keys*
evim.vim	starting.txt	/*evim.vim*
ex	starting.txt	/*ex*
ex-cmd-index	index.txt	/*ex-cmd-index*
ex-edit-index	index.txt	/*ex-edit-index*
ex-flags	cmdline.txt	/*ex-flags*
ex:	options.txt	/*ex:*
except-autocmd	eval.txt	/*except-autocmd*
except-autocmd-Cmd	eval.txt	/*except-autocmd-Cmd*
except-autocmd-Post	eval.txt	/*except-autocmd-Post*
except-autocmd-Pre	eval.txt	/*except-autocmd-Pre*
except-autocmd-ill	eval.txt	/*except-autocmd-ill*
except-compat	eval.txt	/*except-compat*
except-examine	eval.txt	/*except-examine*
except-from-finally	eval.txt	/*except-from-finally*
except-hier-param	eval.txt	/*except-hier-param*
except-several-errors	eval.txt	/*except-several-errors*
except-single-line	eval.txt	/*except-single-line*
except-syntax-err	eval.txt	/*except-syntax-err*
except-syntax-error	eval.txt	/*except-syntax-error*
exception-handling	eval.txt	/*exception-handling*
exception-variable	eval.txt	/*exception-variable*
exclusive	motion.txt	/*exclusive*
exclusive-linewise	motion.txt	/*exclusive-linewise*
executable()	eval.txt	/*executable()*
execute()	eval.txt	/*execute()*
execute-menus	gui.txt	/*execute-menus*
exepath()	eval.txt	/*exepath()*
exim	starting.txt	/*exim*
exists()	eval.txt	/*exists()*
exiting	starting.txt	/*exiting*
exp()	eval.txt	/*exp()*
expand()	eval.txt	/*expand()*
expand-env	options.txt	/*expand-env*
expand-environment-var	options.txt	/*expand-environment-var*
expr	eval.txt	/*expr*
expr-!	eval.txt	/*expr-!*
expr-!=	eval.txt	/*expr-!=*
expr-!=#	eval.txt	/*expr-!=#*
expr-!=?	eval.txt	/*expr-!=?*
expr-!~	eval.txt	/*expr-!~*
expr-!~#	eval.txt	/*expr-!~#*
expr-!~?	eval.txt	/*expr-!~?*
expr-%	eval.txt	/*expr-%*
expr-&&	eval.txt	/*expr-&&*
expr-'	eval.txt	/*expr-'*
expr-+	eval.txt	/*expr-+*
expr--	eval.txt	/*expr--*
expr-.	eval.txt	/*expr-.*
expr-/	eval.txt	/*expr-\/*
expr-<	eval.txt	/*expr-<*
expr-<#	eval.txt	/*expr-<#*
expr-<=	eval.txt	/*expr-<=*
expr-<=#	eval.txt	/*expr-<=#*
expr-<=?	eval.txt	/*expr-<=?*
expr-<?	eval.txt	/*expr-<?*
expr-==	eval.txt	/*expr-==*
expr-==#	eval.txt	/*expr-==#*
expr-==?	eval.txt	/*expr-==?*
expr-=~	eval.txt	/*expr-=~*
expr-=~#	eval.txt	/*expr-=~#*
expr-=~?	eval.txt	/*expr-=~?*
expr->	eval.txt	/*expr->*
expr->#	eval.txt	/*expr->#*
expr->=	eval.txt	/*expr->=*
expr->=#	eval.txt	/*expr->=#*
expr->=?	eval.txt	/*expr->=?*
expr->?	eval.txt	/*expr->?*
expr-[:]	eval.txt	/*expr-[:]*
expr-[]	eval.txt	/*expr-[]*
expr-barbar	eval.txt	/*expr-barbar*
expr-entry	eval.txt	/*expr-entry*
expr-env	eval.txt	/*expr-env*
expr-env-expand	eval.txt	/*expr-env-expand*
expr-function	eval.txt	/*expr-function*
expr-is	eval.txt	/*expr-is*
expr-is#	eval.txt	/*expr-is#*
expr-is?	eval.txt	/*expr-is?*
expr-isnot	eval.txt	/*expr-isnot*
expr-isnot#	eval.txt	/*expr-isnot#*
expr-isnot?	eval.txt	/*expr-isnot?*
expr-lambda	eval.txt	/*expr-lambda*
expr-nesting	eval.txt	/*expr-nesting*
expr-number	eval.txt	/*expr-number*
expr-option	eval.txt	/*expr-option*
expr-quote	eval.txt	/*expr-quote*
expr-register	eval.txt	/*expr-register*
expr-star	eval.txt	/*expr-star*
expr-string	eval.txt	/*expr-string*
expr-unary-+	eval.txt	/*expr-unary-+*
expr-unary--	eval.txt	/*expr-unary--*
expr-variable	eval.txt	/*expr-variable*
expr1	eval.txt	/*expr1*
expr2	eval.txt	/*expr2*
expr3	eval.txt	/*expr3*
expr4	eval.txt	/*expr4*
expr5	eval.txt	/*expr5*
expr6	eval.txt	/*expr6*
expr7	eval.txt	/*expr7*
expr8	eval.txt	/*expr8*
expr9	eval.txt	/*expr9*
expression	eval.txt	/*expression*
expression-commands	eval.txt	/*expression-commands*
expression-syntax	eval.txt	/*expression-syntax*
exrc	starting.txt	/*exrc*
extend()	eval.txt	/*extend()*
extension-removal	cmdline.txt	/*extension-removal*
extensions-improvements	todo.txt	/*extensions-improvements*
f	motion.txt	/*f*
false-variable	eval.txt	/*false-variable*
faq	intro.txt	/*faq*
farsi	farsi.txt	/*farsi*
farsi-fonts	farsi.txt	/*farsi-fonts*
farsi.txt	farsi.txt	/*farsi.txt*
fasm.vim	syntax.txt	/*fasm.vim*
fcs_choice-variable	eval.txt	/*fcs_choice-variable*
fcs_reason-variable	eval.txt	/*fcs_reason-variable*
feature-list	eval.txt	/*feature-list*
feedkeys()	eval.txt	/*feedkeys()*
fetch	pi_netrw.txt	/*fetch*
file-browser-5.2	version5.txt	/*file-browser-5.2*
file-formats	editing.txt	/*file-formats*
file-functions	usr_41.txt	/*file-functions*
file-pattern	autocmd.txt	/*file-pattern*
file-read	insert.txt	/*file-read*
file-searching	editing.txt	/*file-searching*
file-type	filetype.txt	/*file-type*
file-types	filetype.txt	/*file-types*
file_readable()	eval.txt	/*file_readable()*
fileencoding-changed	version6.txt	/*fileencoding-changed*
filename-backslash	cmdline.txt	/*filename-backslash*
filename-modifiers	cmdline.txt	/*filename-modifiers*
filereadable()	eval.txt	/*filereadable()*
filetype	filetype.txt	/*filetype*
filetype-detect	filetype.txt	/*filetype-detect*
filetype-ignore	filetype.txt	/*filetype-ignore*
filetype-overrule	filetype.txt	/*filetype-overrule*
filetype-plugin	usr_43.txt	/*filetype-plugin*
filetype-plugins	filetype.txt	/*filetype-plugins*
filetype.txt	filetype.txt	/*filetype.txt*
filetypedetect-changed	version6.txt	/*filetypedetect-changed*
filetypes	filetype.txt	/*filetypes*
filewritable()	eval.txt	/*filewritable()*
filter	change.txt	/*filter*
filter()	eval.txt	/*filter()*
find-manpage	usr_12.txt	/*find-manpage*
find-replace	usr_10.txt	/*find-replace*
finddir()	eval.txt	/*finddir()*
findfile()	eval.txt	/*findfile()*
fixed-5.1	version5.txt	/*fixed-5.1*
fixed-5.2	version5.txt	/*fixed-5.2*
fixed-5.3	version5.txt	/*fixed-5.3*
fixed-5.4	version5.txt	/*fixed-5.4*
fixed-5.5	version5.txt	/*fixed-5.5*
fixed-5.6	version5.txt	/*fixed-5.6*
fixed-5.7	version5.txt	/*fixed-5.7*
fixed-5.8	version5.txt	/*fixed-5.8*
fixed-6.1	version6.txt	/*fixed-6.1*
fixed-6.2	version6.txt	/*fixed-6.2*
fixed-6.3	version6.txt	/*fixed-6.3*
fixed-6.4	version6.txt	/*fixed-6.4*
fixed-7.1	version7.txt	/*fixed-7.1*
fixed-7.2	version7.txt	/*fixed-7.2*
fixed-7.3	version7.txt	/*fixed-7.3*
fixed-7.4	version7.txt	/*fixed-7.4*
flexwiki.vim	syntax.txt	/*flexwiki.vim*
float-e	eval.txt	/*float-e*
float-functions	usr_41.txt	/*float-functions*
float-pi	eval.txt	/*float-pi*
float2nr()	eval.txt	/*float2nr()*
floating-point-format	eval.txt	/*floating-point-format*
floating-point-precision	eval.txt	/*floating-point-precision*
floor()	eval.txt	/*floor()*
fmod()	eval.txt	/*fmod()*
fname_diff-variable	eval.txt	/*fname_diff-variable*
fname_in-variable	eval.txt	/*fname_in-variable*
fname_new-variable	eval.txt	/*fname_new-variable*
fname_out-variable	eval.txt	/*fname_out-variable*
fnameescape()	eval.txt	/*fnameescape()*
fnamemodify()	eval.txt	/*fnamemodify()*
fo-table	change.txt	/*fo-table*
fold-behavior	fold.txt	/*fold-behavior*
fold-colors	fold.txt	/*fold-colors*
fold-commands	fold.txt	/*fold-commands*
fold-create-marker	fold.txt	/*fold-create-marker*
fold-delete-marker	fold.txt	/*fold-delete-marker*
fold-diff	fold.txt	/*fold-diff*
fold-expr	fold.txt	/*fold-expr*
fold-foldcolumn	fold.txt	/*fold-foldcolumn*
fold-foldlevel	fold.txt	/*fold-foldlevel*
fold-foldtext	fold.txt	/*fold-foldtext*
fold-indent	fold.txt	/*fold-indent*
fold-manual	fold.txt	/*fold-manual*
fold-marker	fold.txt	/*fold-marker*
fold-methods	fold.txt	/*fold-methods*
fold-options	fold.txt	/*fold-options*
fold-syntax	fold.txt	/*fold-syntax*
fold.txt	fold.txt	/*fold.txt*
foldclosed()	eval.txt	/*foldclosed()*
foldclosedend()	eval.txt	/*foldclosedend()*
folddashes-variable	eval.txt	/*folddashes-variable*
foldend-variable	eval.txt	/*foldend-variable*
folding	fold.txt	/*folding*
folding-functions	usr_41.txt	/*folding-functions*
foldlevel()	eval.txt	/*foldlevel()*
foldlevel-variable	eval.txt	/*foldlevel-variable*
folds	fold.txt	/*folds*
foldstart-variable	eval.txt	/*foldstart-variable*
foldtext()	eval.txt	/*foldtext()*
foldtextresult()	eval.txt	/*foldtextresult()*
font-sizes	gui_x11.txt	/*font-sizes*
fontset	mbyte.txt	/*fontset*
foreground()	eval.txt	/*foreground()*
fork	os_unix.txt	/*fork*
form.vim	syntax.txt	/*form.vim*
format-bullet-list	tips.txt	/*format-bullet-list*
format-comments	change.txt	/*format-comments*
formatting	change.txt	/*formatting*
formfeed	intro.txt	/*formfeed*
fortran.vim	syntax.txt	/*fortran.vim*
friendship	intro.txt	/*friendship*
frombook	usr_01.txt	/*frombook*
ft-abel-syntax	syntax.txt	/*ft-abel-syntax*
ft-ada-commands	ft_ada.txt	/*ft-ada-commands*
ft-ada-constants	ft_ada.txt	/*ft-ada-constants*
ft-ada-functions	ft_ada.txt	/*ft-ada-functions*
ft-ada-indent	ft_ada.txt	/*ft-ada-indent*
ft-ada-omni	ft_ada.txt	/*ft-ada-omni*
ft-ada-options	ft_ada.txt	/*ft-ada-options*
ft-ada-plugin	ft_ada.txt	/*ft-ada-plugin*
ft-ada-syntax	ft_ada.txt	/*ft-ada-syntax*
ft-ada-variables	ft_ada.txt	/*ft-ada-variables*
ft-ant-syntax	syntax.txt	/*ft-ant-syntax*
ft-apache-syntax	syntax.txt	/*ft-apache-syntax*
ft-asm-syntax	syntax.txt	/*ft-asm-syntax*
ft-asm68k-syntax	syntax.txt	/*ft-asm68k-syntax*
ft-asmh8300-syntax	syntax.txt	/*ft-asmh8300-syntax*
ft-aspperl-syntax	syntax.txt	/*ft-aspperl-syntax*
ft-aspvbs-syntax	syntax.txt	/*ft-aspvbs-syntax*
ft-bash-syntax	syntax.txt	/*ft-bash-syntax*
ft-basic-syntax	syntax.txt	/*ft-basic-syntax*
ft-c-omni	insert.txt	/*ft-c-omni*
ft-c-syntax	syntax.txt	/*ft-c-syntax*
ft-ch-syntax	syntax.txt	/*ft-ch-syntax*
ft-changelog-plugin	filetype.txt	/*ft-changelog-plugin*
ft-changelog-syntax	syntax.txt	/*ft-changelog-syntax*
ft-chill-syntax	syntax.txt	/*ft-chill-syntax*
ft-clojure-indent	indent.txt	/*ft-clojure-indent*
ft-clojure-syntax	syntax.txt	/*ft-clojure-syntax*
ft-cobol-syntax	syntax.txt	/*ft-cobol-syntax*
ft-coldfusion-syntax	syntax.txt	/*ft-coldfusion-syntax*
ft-cpp-syntax	syntax.txt	/*ft-cpp-syntax*
ft-csh-syntax	syntax.txt	/*ft-csh-syntax*
ft-css-omni	insert.txt	/*ft-css-omni*
ft-cweb-syntax	syntax.txt	/*ft-cweb-syntax*
ft-cynlib-syntax	syntax.txt	/*ft-cynlib-syntax*
ft-dash-syntax	syntax.txt	/*ft-dash-syntax*
ft-desktop-syntax	syntax.txt	/*ft-desktop-syntax*
ft-dircolors-syntax	syntax.txt	/*ft-dircolors-syntax*
ft-docbk-syntax	syntax.txt	/*ft-docbk-syntax*
ft-docbksgml-syntax	syntax.txt	/*ft-docbksgml-syntax*
ft-docbkxml-syntax	syntax.txt	/*ft-docbkxml-syntax*
ft-dosbatch-syntax	syntax.txt	/*ft-dosbatch-syntax*
ft-dtd-syntax	syntax.txt	/*ft-dtd-syntax*
ft-eiffel-syntax	syntax.txt	/*ft-eiffel-syntax*
ft-erlang-syntax	syntax.txt	/*ft-erlang-syntax*
ft-euphoria-syntax	syntax.txt	/*ft-euphoria-syntax*
ft-flexwiki-syntax	syntax.txt	/*ft-flexwiki-syntax*
ft-form-syntax	syntax.txt	/*ft-form-syntax*
ft-fortran-indent	indent.txt	/*ft-fortran-indent*
ft-fortran-plugin	filetype.txt	/*ft-fortran-plugin*
ft-fortran-syntax	syntax.txt	/*ft-fortran-syntax*
ft-fvwm-syntax	syntax.txt	/*ft-fvwm-syntax*
ft-gitcommit-plugin	filetype.txt	/*ft-gitcommit-plugin*
ft-groff-syntax	syntax.txt	/*ft-groff-syntax*
ft-gsp-syntax	syntax.txt	/*ft-gsp-syntax*
ft-haskell-syntax	syntax.txt	/*ft-haskell-syntax*
ft-html-indent	indent.txt	/*ft-html-indent*
ft-html-omni	insert.txt	/*ft-html-omni*
ft-html-syntax	syntax.txt	/*ft-html-syntax*
ft-htmlos-syntax	syntax.txt	/*ft-htmlos-syntax*
ft-ia64-syntax	syntax.txt	/*ft-ia64-syntax*
ft-inform-syntax	syntax.txt	/*ft-inform-syntax*
ft-java-syntax	syntax.txt	/*ft-java-syntax*
ft-javascript-omni	insert.txt	/*ft-javascript-omni*
ft-ksh-syntax	syntax.txt	/*ft-ksh-syntax*
ft-lace-syntax	syntax.txt	/*ft-lace-syntax*
ft-lex-syntax	syntax.txt	/*ft-lex-syntax*
ft-lifelines-syntax	syntax.txt	/*ft-lifelines-syntax*
ft-lisp-syntax	syntax.txt	/*ft-lisp-syntax*
ft-lite-syntax	syntax.txt	/*ft-lite-syntax*
ft-lpc-syntax	syntax.txt	/*ft-lpc-syntax*
ft-lua-syntax	syntax.txt	/*ft-lua-syntax*
ft-mail-plugin	filetype.txt	/*ft-mail-plugin*
ft-mail.vim	syntax.txt	/*ft-mail.vim*
ft-make-syntax	syntax.txt	/*ft-make-syntax*
ft-man-plugin	filetype.txt	/*ft-man-plugin*
ft-maple-syntax	syntax.txt	/*ft-maple-syntax*
ft-masm-syntax	syntax.txt	/*ft-masm-syntax*
ft-mathematica-syntax	syntax.txt	/*ft-mathematica-syntax*
ft-mma-syntax	syntax.txt	/*ft-mma-syntax*
ft-moo-syntax	syntax.txt	/*ft-moo-syntax*
ft-msql-syntax	syntax.txt	/*ft-msql-syntax*
ft-nasm-syntax	syntax.txt	/*ft-nasm-syntax*
ft-ncf-syntax	syntax.txt	/*ft-ncf-syntax*
ft-nroff-syntax	syntax.txt	/*ft-nroff-syntax*
ft-ocaml-syntax	syntax.txt	/*ft-ocaml-syntax*
ft-papp-syntax	syntax.txt	/*ft-papp-syntax*
ft-pascal-syntax	syntax.txt	/*ft-pascal-syntax*
ft-pdf-plugin	filetype.txt	/*ft-pdf-plugin*
ft-perl-syntax	syntax.txt	/*ft-perl-syntax*
ft-php-indent	indent.txt	/*ft-php-indent*
ft-php-omni	insert.txt	/*ft-php-omni*
ft-php-syntax	syntax.txt	/*ft-php-syntax*
ft-php3-syntax	syntax.txt	/*ft-php3-syntax*
ft-phtml-syntax	syntax.txt	/*ft-phtml-syntax*
ft-plaintex-syntax	syntax.txt	/*ft-plaintex-syntax*
ft-posix-synax	syntax.txt	/*ft-posix-synax*
ft-postscr-syntax	syntax.txt	/*ft-postscr-syntax*
ft-ppwiz-syntax	syntax.txt	/*ft-ppwiz-syntax*
ft-printcap-syntax	syntax.txt	/*ft-printcap-syntax*
ft-progress-syntax	syntax.txt	/*ft-progress-syntax*
ft-ptcap-syntax	syntax.txt	/*ft-ptcap-syntax*
ft-python-indent	indent.txt	/*ft-python-indent*
ft-python-plugin	filetype.txt	/*ft-python-plugin*
ft-python-syntax	syntax.txt	/*ft-python-syntax*
ft-quake-syntax	syntax.txt	/*ft-quake-syntax*
ft-r-indent	indent.txt	/*ft-r-indent*
ft-readline-syntax	syntax.txt	/*ft-readline-syntax*
ft-rexx-syntax	syntax.txt	/*ft-rexx-syntax*
ft-rst-syntax	syntax.txt	/*ft-rst-syntax*
ft-ruby-omni	insert.txt	/*ft-ruby-omni*
ft-ruby-syntax	syntax.txt	/*ft-ruby-syntax*
ft-scheme-syntax	syntax.txt	/*ft-scheme-syntax*
ft-sdl-syntax	syntax.txt	/*ft-sdl-syntax*
ft-sed-syntax	syntax.txt	/*ft-sed-syntax*
ft-sgml-syntax	syntax.txt	/*ft-sgml-syntax*
ft-sh-indent	indent.txt	/*ft-sh-indent*
ft-sh-syntax	syntax.txt	/*ft-sh-syntax*
ft-spec-plugin	filetype.txt	/*ft-spec-plugin*
ft-spup-syntax	syntax.txt	/*ft-spup-syntax*
ft-sql	filetype.txt	/*ft-sql*
ft-sql-omni	insert.txt	/*ft-sql-omni*
ft-sql-syntax	syntax.txt	/*ft-sql-syntax*
ft-sqlanywhere-syntax	syntax.txt	/*ft-sqlanywhere-syntax*
ft-sqlinformix-syntax	syntax.txt	/*ft-sqlinformix-syntax*
ft-syntax-omni	insert.txt	/*ft-syntax-omni*
ft-tcsh-syntax	syntax.txt	/*ft-tcsh-syntax*
ft-termcap-syntax	syntax.txt	/*ft-termcap-syntax*
ft-tex-plugin	filetype.txt	/*ft-tex-plugin*
ft-tex-syntax	syntax.txt	/*ft-tex-syntax*
ft-tf-syntax	syntax.txt	/*ft-tf-syntax*
ft-vb-syntax	syntax.txt	/*ft-vb-syntax*
ft-verilog-indent	indent.txt	/*ft-verilog-indent*
ft-vhdl-indent	indent.txt	/*ft-vhdl-indent*
ft-vim-indent	indent.txt	/*ft-vim-indent*
ft-vim-syntax	syntax.txt	/*ft-vim-syntax*
ft-xf86conf-syntax	syntax.txt	/*ft-xf86conf-syntax*
ft-xhtml-omni	insert.txt	/*ft-xhtml-omni*
ft-xml-omni	insert.txt	/*ft-xml-omni*
ft-xml-syntax	syntax.txt	/*ft-xml-syntax*
ft-xpm-syntax	syntax.txt	/*ft-xpm-syntax*
ft-yaml-syntax	syntax.txt	/*ft-yaml-syntax*
ft-zsh-syntax	syntax.txt	/*ft-zsh-syntax*
ft_ada.txt	ft_ada.txt	/*ft_ada.txt*
ft_sql.txt	ft_sql.txt	/*ft_sql.txt*
ftdetect	filetype.txt	/*ftdetect*
ftp	pi_netrw.txt	/*ftp*
ftplugin	usr_41.txt	/*ftplugin*
ftplugin-docs	filetype.txt	/*ftplugin-docs*
ftplugin-name	usr_05.txt	/*ftplugin-name*
ftplugin-overrule	filetype.txt	/*ftplugin-overrule*
ftplugin-special	usr_41.txt	/*ftplugin-special*
ftplugins	usr_05.txt	/*ftplugins*
funcref()	eval.txt	/*funcref()*
function()	eval.txt	/*function()*
function-argument	eval.txt	/*function-argument*
function-key	intro.txt	/*function-key*
function-list	usr_41.txt	/*function-list*
function-range-example	eval.txt	/*function-range-example*
function-search-undo	eval.txt	/*function-search-undo*
function_key	intro.txt	/*function_key*
functions	eval.txt	/*functions*
fvwm.vim	syntax.txt	/*fvwm.vim*
fvwm2rc	syntax.txt	/*fvwm2rc*
fvwmrc	syntax.txt	/*fvwmrc*
g	index.txt	/*g*
g#	pattern.txt	/*g#*
g$	motion.txt	/*g$*
g&	change.txt	/*g&*
g'	motion.txt	/*g'*
g'a	motion.txt	/*g'a*
g+	undo.txt	/*g+*
g,	motion.txt	/*g,*
g-	undo.txt	/*g-*
g0	motion.txt	/*g0*
g8	various.txt	/*g8*
g:	eval.txt	/*g:*
g:NetrwTopLvlMenu	pi_netrw.txt	/*g:NetrwTopLvlMenu*
g:Netrw_UserMaps	pi_netrw.txt	/*g:Netrw_UserMaps*
g:Netrw_corehandler	pi_netrw.txt	/*g:Netrw_corehandler*
g:Netrw_funcref	pi_netrw.txt	/*g:Netrw_funcref*
g:actual_curbuf	options.txt	/*g:actual_curbuf*
g:ada#Comment	ft_ada.txt	/*g:ada#Comment*
g:ada#Ctags_Kinds	ft_ada.txt	/*g:ada#Ctags_Kinds*
g:ada#DotWordRegex	ft_ada.txt	/*g:ada#DotWordRegex*
g:ada#Keywords	ft_ada.txt	/*g:ada#Keywords*
g:ada#WordRegex	ft_ada.txt	/*g:ada#WordRegex*
g:ada_abbrev	ft_ada.txt	/*g:ada_abbrev*
g:ada_all_tab_usage	ft_ada.txt	/*g:ada_all_tab_usage*
g:ada_begin_preproc	ft_ada.txt	/*g:ada_begin_preproc*
g:ada_default_compiler	ft_ada.txt	/*g:ada_default_compiler*
g:ada_extended_completion	ft_ada.txt	/*g:ada_extended_completion*
g:ada_extended_tagging	ft_ada.txt	/*g:ada_extended_tagging*
g:ada_folding	ft_ada.txt	/*g:ada_folding*
g:ada_gnat_extensions	ft_ada.txt	/*g:ada_gnat_extensions*
g:ada_line_errors	ft_ada.txt	/*g:ada_line_errors*
g:ada_no_tab_space_error	ft_ada.txt	/*g:ada_no_tab_space_error*
g:ada_no_trail_space_error	ft_ada.txt	/*g:ada_no_trail_space_error*
g:ada_omni_with_keywords	ft_ada.txt	/*g:ada_omni_with_keywords*
g:ada_rainbow_color	ft_ada.txt	/*g:ada_rainbow_color*
g:ada_space_errors	ft_ada.txt	/*g:ada_space_errors*
g:ada_standard_types	ft_ada.txt	/*g:ada_standard_types*
g:ada_with_gnat_project_files	ft_ada.txt	/*g:ada_with_gnat_project_files*
g:ada_withuse_ordinary	ft_ada.txt	/*g:ada_withuse_ordinary*
g:clojure_align_multiline_strings	indent.txt	/*g:clojure_align_multiline_strings*
g:clojure_align_subforms	indent.txt	/*g:clojure_align_subforms*
g:clojure_fold	syntax.txt	/*g:clojure_fold*
g:clojure_fuzzy_indent	indent.txt	/*g:clojure_fuzzy_indent*
g:clojure_fuzzy_indent_blacklist	indent.txt	/*g:clojure_fuzzy_indent_blacklist*
g:clojure_fuzzy_indent_patterns	indent.txt	/*g:clojure_fuzzy_indent_patterns*
g:clojure_maxlines	indent.txt	/*g:clojure_maxlines*
g:clojure_special_indent_words	indent.txt	/*g:clojure_special_indent_words*
g:clojure_syntax_keywords	syntax.txt	/*g:clojure_syntax_keywords*
g:colors_name	options.txt	/*g:colors_name*
g:decada	ft_ada.txt	/*g:decada*
g:decada.Error_Format	ft_ada.txt	/*g:decada.Error_Format*
g:decada.Make()	ft_ada.txt	/*g:decada.Make()*
g:decada.Make_Command	ft_ada.txt	/*g:decada.Make_Command*
g:decada.Unit_Name()	ft_ada.txt	/*g:decada.Unit_Name()*
g:filetype_csh	syntax.txt	/*g:filetype_csh*
g:filetype_r	syntax.txt	/*g:filetype_r*
g:gnat	ft_ada.txt	/*g:gnat*
g:gnat.Error_Format	ft_ada.txt	/*g:gnat.Error_Format*
g:gnat.Find()	ft_ada.txt	/*g:gnat.Find()*
g:gnat.Find_Program	ft_ada.txt	/*g:gnat.Find_Program*
g:gnat.Make()	ft_ada.txt	/*g:gnat.Make()*
g:gnat.Make_Command	ft_ada.txt	/*g:gnat.Make_Command*
g:gnat.Pretty()	ft_ada.txt	/*g:gnat.Pretty()*
g:gnat.Pretty_Program	ft_ada.txt	/*g:gnat.Pretty_Program*
g:gnat.Project_File	ft_ada.txt	/*g:gnat.Project_File*
g:gnat.Set_Project_File()	ft_ada.txt	/*g:gnat.Set_Project_File()*
g:gnat.Tags()	ft_ada.txt	/*g:gnat.Tags()*
g:gnat.Tags_Command	ft_ada.txt	/*g:gnat.Tags_Command*
g:html_charset_override	syntax.txt	/*g:html_charset_override*
g:html_diff_one_file	syntax.txt	/*g:html_diff_one_file*
g:html_dynamic_folds	syntax.txt	/*g:html_dynamic_folds*
g:html_encoding_override	syntax.txt	/*g:html_encoding_override*
g:html_end_line	syntax.txt	/*g:html_end_line*
g:html_expand_tabs	syntax.txt	/*g:html_expand_tabs*
g:html_font	syntax.txt	/*g:html_font*
g:html_hover_unfold	syntax.txt	/*g:html_hover_unfold*
g:html_id_expr	syntax.txt	/*g:html_id_expr*
g:html_ignore_conceal	syntax.txt	/*g:html_ignore_conceal*
g:html_ignore_folding	syntax.txt	/*g:html_ignore_folding*
g:html_line_ids	syntax.txt	/*g:html_line_ids*
g:html_no_foldcolumn	syntax.txt	/*g:html_no_foldcolumn*
g:html_no_invalid	syntax.txt	/*g:html_no_invalid*
g:html_no_pre	syntax.txt	/*g:html_no_pre*
g:html_no_progress	syntax.txt	/*g:html_no_progress*
g:html_number_lines	syntax.txt	/*g:html_number_lines*
g:html_pre_wrap	syntax.txt	/*g:html_pre_wrap*
g:html_prevent_copy	syntax.txt	/*g:html_prevent_copy*
g:html_start_line	syntax.txt	/*g:html_start_line*
g:html_use_css	syntax.txt	/*g:html_use_css*
g:html_use_encoding	syntax.txt	/*g:html_use_encoding*
g:html_use_xhtml	syntax.txt	/*g:html_use_xhtml*
g:html_whole_filler	syntax.txt	/*g:html_whole_filler*
g:netrw_altfile	pi_netrw.txt	/*g:netrw_altfile*
g:netrw_alto	pi_netrw.txt	/*g:netrw_alto*
g:netrw_altv	pi_netrw.txt	/*g:netrw_altv*
g:netrw_banner	pi_netrw.txt	/*g:netrw_banner*
g:netrw_bannerbackslash	pi_netrw.txt	/*g:netrw_bannerbackslash*
g:netrw_browse_split	pi_netrw.txt	/*g:netrw_browse_split*
g:netrw_browsex_viewer	pi_netrw.txt	/*g:netrw_browsex_viewer*
g:netrw_bufsettings	pi_netrw.txt	/*g:netrw_bufsettings*
g:netrw_chgperm	pi_netrw.txt	/*g:netrw_chgperm*
g:netrw_chgwin	pi_netrw.txt	/*g:netrw_chgwin*
g:netrw_compress	pi_netrw.txt	/*g:netrw_compress*
g:netrw_ctags	pi_netrw.txt	/*g:netrw_ctags*
g:netrw_cursor	pi_netrw.txt	/*g:netrw_cursor*
g:netrw_cygwin	pi_netrw.txt	/*g:netrw_cygwin*
g:netrw_dav_cmd	pi_netrw.txt	/*g:netrw_dav_cmd*
g:netrw_decompress	pi_netrw.txt	/*g:netrw_decompress*
g:netrw_dirhistmax	pi_netrw.txt	/*g:netrw_dirhistmax*
g:netrw_dynamic_maxfilenamelen	pi_netrw.txt	/*g:netrw_dynamic_maxfilenamelen*
g:netrw_errorlvl	pi_netrw.txt	/*g:netrw_errorlvl*
g:netrw_fastbrowse	pi_netrw.txt	/*g:netrw_fastbrowse*
g:netrw_fetch_cmd	pi_netrw.txt	/*g:netrw_fetch_cmd*
g:netrw_ffkeep	pi_netrw.txt	/*g:netrw_ffkeep*
g:netrw_file_cmd	pi_netrw.txt	/*g:netrw_file_cmd*
g:netrw_fname_escape	pi_netrw.txt	/*g:netrw_fname_escape*
g:netrw_ftp	pi_netrw.txt	/*g:netrw_ftp*
g:netrw_ftp_browse_reject	pi_netrw.txt	/*g:netrw_ftp_browse_reject*
g:netrw_ftp_cmd	pi_netrw.txt	/*g:netrw_ftp_cmd*
g:netrw_ftp_list_cmd	pi_netrw.txt	/*g:netrw_ftp_list_cmd*
g:netrw_ftp_options	pi_netrw.txt	/*g:netrw_ftp_options*
g:netrw_ftp_sizelist_cmd	pi_netrw.txt	/*g:netrw_ftp_sizelist_cmd*
g:netrw_ftp_timelist_cmd	pi_netrw.txt	/*g:netrw_ftp_timelist_cmd*
g:netrw_ftpextracmd	pi_netrw.txt	/*g:netrw_ftpextracmd*
g:netrw_ftpmode	pi_netrw.txt	/*g:netrw_ftpmode*
g:netrw_glob_escape	pi_netrw.txt	/*g:netrw_glob_escape*
g:netrw_gx	pi_netrw.txt	/*g:netrw_gx*
g:netrw_hide	pi_netrw.txt	/*g:netrw_hide*
g:netrw_home	pi_netrw.txt	/*g:netrw_home*
g:netrw_http_cmd	pi_netrw.txt	/*g:netrw_http_cmd*
g:netrw_http_put_cmd	pi_netrw.txt	/*g:netrw_http_put_cmd*
g:netrw_http_xcmd	pi_netrw.txt	/*g:netrw_http_xcmd*
g:netrw_ignorenetrc	pi_netrw.txt	/*g:netrw_ignorenetrc*
g:netrw_keepdir	pi_netrw.txt	/*g:netrw_keepdir*
g:netrw_keepj	pi_netrw.txt	/*g:netrw_keepj*
g:netrw_list_cmd	pi_netrw.txt	/*g:netrw_list_cmd*
g:netrw_list_cmd_options	pi_netrw.txt	/*g:netrw_list_cmd_options*
g:netrw_list_hide	pi_netrw.txt	/*g:netrw_list_hide*
g:netrw_liststyle	pi_netrw.txt	/*g:netrw_liststyle*
g:netrw_localcopycmd	pi_netrw.txt	/*g:netrw_localcopycmd*
g:netrw_localcopydircmd	pi_netrw.txt	/*g:netrw_localcopydircmd*
g:netrw_localmkdir	pi_netrw.txt	/*g:netrw_localmkdir*
g:netrw_localmovecmd	pi_netrw.txt	/*g:netrw_localmovecmd*
g:netrw_localrmdir	pi_netrw.txt	/*g:netrw_localrmdir*
g:netrw_maxfilenamelen	pi_netrw.txt	/*g:netrw_maxfilenamelen*
g:netrw_menu	pi_netrw.txt	/*g:netrw_menu*
g:netrw_mkdir_cmd	pi_netrw.txt	/*g:netrw_mkdir_cmd*
g:netrw_mousemaps	pi_netrw.txt	/*g:netrw_mousemaps*
g:netrw_nobeval	pi_netrw.txt	/*g:netrw_nobeval*
g:netrw_nogx	pi_netrw.txt	/*g:netrw_nogx*
g:netrw_preview	pi_netrw.txt	/*g:netrw_preview*
g:netrw_rcp_cmd	pi_netrw.txt	/*g:netrw_rcp_cmd*
g:netrw_remote_mkdir	pi_netrw.txt	/*g:netrw_remote_mkdir*
g:netrw_retmap	pi_netrw.txt	/*g:netrw_retmap*
g:netrw_rm_cmd	pi_netrw.txt	/*g:netrw_rm_cmd*
g:netrw_rmdir_cmd	pi_netrw.txt	/*g:netrw_rmdir_cmd*
g:netrw_rmf_cmd	pi_netrw.txt	/*g:netrw_rmf_cmd*
g:netrw_rsync_cmd	pi_netrw.txt	/*g:netrw_rsync_cmd*
g:netrw_scp_cmd	pi_netrw.txt	/*g:netrw_scp_cmd*
g:netrw_scpport	pi_netrw.txt	/*g:netrw_scpport*
g:netrw_sepchr	pi_netrw.txt	/*g:netrw_sepchr*
g:netrw_servername	pi_netrw.txt	/*g:netrw_servername*
g:netrw_sftp_cmd	pi_netrw.txt	/*g:netrw_sftp_cmd*
g:netrw_silent	pi_netrw.txt	/*g:netrw_silent*
g:netrw_sizestyle	pi_netrw.txt	/*g:netrw_sizestyle*
g:netrw_sort_by	pi_netrw.txt	/*g:netrw_sort_by*
g:netrw_sort_direction	pi_netrw.txt	/*g:netrw_sort_direction*
g:netrw_sort_options	pi_netrw.txt	/*g:netrw_sort_options*
g:netrw_sort_sequence	pi_netrw.txt	/*g:netrw_sort_sequence*
g:netrw_special_syntax	pi_netrw.txt	/*g:netrw_special_syntax*
g:netrw_ssh_browse_reject	pi_netrw.txt	/*g:netrw_ssh_browse_reject*
g:netrw_ssh_cmd	pi_netrw.txt	/*g:netrw_ssh_cmd*
g:netrw_sshport	pi_netrw.txt	/*g:netrw_sshport*
g:netrw_suppress_gx_mesg	pi_netrw.txt	/*g:netrw_suppress_gx_mesg*
g:netrw_timefmt	pi_netrw.txt	/*g:netrw_timefmt*
g:netrw_tmpfile_escape	pi_netrw.txt	/*g:netrw_tmpfile_escape*
g:netrw_uid	pi_netrw.txt	/*g:netrw_uid*
g:netrw_use_errorwindow	pi_netrw.txt	/*g:netrw_use_errorwindow*
g:netrw_use_noswf	pi_netrw.txt	/*g:netrw_use_noswf*
g:netrw_use_nt_rcp	pi_netrw.txt	/*g:netrw_use_nt_rcp*
g:netrw_usetab	pi_netrw.txt	/*g:netrw_usetab*
g:netrw_win95ftp	pi_netrw.txt	/*g:netrw_win95ftp*
g:netrw_winsize	pi_netrw.txt	/*g:netrw_winsize*
g:netrw_wiw	pi_netrw.txt	/*g:netrw_wiw*
g:netrw_xstrlen	pi_netrw.txt	/*g:netrw_xstrlen*
g:syntax_on	syntax.txt	/*g:syntax_on*
g:tar_browseoptions	pi_tar.txt	/*g:tar_browseoptions*
g:tar_cmd	pi_tar.txt	/*g:tar_cmd*
g:tar_copycmd	pi_tar.txt	/*g:tar_copycmd*
g:tar_extractcmd	pi_tar.txt	/*g:tar_extractcmd*
g:tar_nomax	pi_tar.txt	/*g:tar_nomax*
g:tar_readoptions	pi_tar.txt	/*g:tar_readoptions*
g:tar_secure	pi_tar.txt	/*g:tar_secure*
g:tar_writeoptions	pi_tar.txt	/*g:tar_writeoptions*
g:tex_comment_nospell	syntax.txt	/*g:tex_comment_nospell*
g:tex_conceal	syntax.txt	/*g:tex_conceal*
g:tex_fast	syntax.txt	/*g:tex_fast*
g:tex_flavor	filetype.txt	/*g:tex_flavor*
g:tex_fold_enabled	syntax.txt	/*g:tex_fold_enabled*
g:tex_isk	syntax.txt	/*g:tex_isk*
g:tex_no_error	syntax.txt	/*g:tex_no_error*
g:tex_nospell	syntax.txt	/*g:tex_nospell*
g:tex_stylish	syntax.txt	/*g:tex_stylish*
g:tex_subscripts	syntax.txt	/*g:tex_subscripts*
g:tex_superscripts	syntax.txt	/*g:tex_superscripts*
g:tex_verbspell	syntax.txt	/*g:tex_verbspell*
g:var	eval.txt	/*g:var*
g:vimball_home	pi_vimball.txt	/*g:vimball_home*
g:vimball_mkdir	pi_vimball.txt	/*g:vimball_mkdir*
g:vimsyn_embed	syntax.txt	/*g:vimsyn_embed*
g:vimsyn_folding	syntax.txt	/*g:vimsyn_folding*
g:vimsyn_maxlines	syntax.txt	/*g:vimsyn_maxlines*
g:vimsyn_minlines	syntax.txt	/*g:vimsyn_minlines*
g:vimsyn_noerror	syntax.txt	/*g:vimsyn_noerror*
g:yaml_schema	syntax.txt	/*g:yaml_schema*
g:zipPlugin_ext	pi_zip.txt	/*g:zipPlugin_ext*
g:zip_extractcmd	pi_zip.txt	/*g:zip_extractcmd*
g:zip_nomax	pi_zip.txt	/*g:zip_nomax*
g:zip_shq	pi_zip.txt	/*g:zip_shq*
g:zip_unzipcmd	pi_zip.txt	/*g:zip_unzipcmd*
g:zip_zipcmd	pi_zip.txt	/*g:zip_zipcmd*
g;	motion.txt	/*g;*
g<	message.txt	/*g<*
g<Down>	motion.txt	/*g<Down>*
g<End>	motion.txt	/*g<End>*
g<Home>	motion.txt	/*g<Home>*
g<LeftMouse>	tagsrch.txt	/*g<LeftMouse>*
g<RightMouse>	tagsrch.txt	/*g<RightMouse>*
g<Up>	motion.txt	/*g<Up>*
g?	change.txt	/*g?*
g??	change.txt	/*g??*
g?g?	change.txt	/*g?g?*
g@	map.txt	/*g@*
gD	pattern.txt	/*gD*
gE	motion.txt	/*gE*
gF	editing.txt	/*gF*
gH	visual.txt	/*gH*
gI	insert.txt	/*gI*
gJ	change.txt	/*gJ*
gN	visual.txt	/*gN*
gP	change.txt	/*gP*
gQ	intro.txt	/*gQ*
gR	change.txt	/*gR*
gT	tabpage.txt	/*gT*
gU	change.txt	/*gU*
gUU	change.txt	/*gUU*
gUgU	change.txt	/*gUgU*
gV	visual.txt	/*gV*
g]	tagsrch.txt	/*g]*
g^	motion.txt	/*g^*
g_	motion.txt	/*g_*
g_CTRL-A	various.txt	/*g_CTRL-A*
g_CTRL-G	editing.txt	/*g_CTRL-G*
g_CTRL-H	visual.txt	/*g_CTRL-H*
g_CTRL-]	tagsrch.txt	/*g_CTRL-]*
g`	motion.txt	/*g`*
g`a	motion.txt	/*g`a*
ga	various.txt	/*ga*
garbagecollect()	eval.txt	/*garbagecollect()*
gd	pattern.txt	/*gd*
gdb	debug.txt	/*gdb*
ge	motion.txt	/*ge*
get()	eval.txt	/*get()*
get-ms-debuggers	debug.txt	/*get-ms-debuggers*
getbufinfo()	eval.txt	/*getbufinfo()*
getbufline()	eval.txt	/*getbufline()*
getbufvar()	eval.txt	/*getbufvar()*
getchar()	eval.txt	/*getchar()*
getcharmod()	eval.txt	/*getcharmod()*
getcharsearch()	eval.txt	/*getcharsearch()*
getcmdline()	eval.txt	/*getcmdline()*
getcmdpos()	eval.txt	/*getcmdpos()*
getcmdtype()	eval.txt	/*getcmdtype()*
getcmdwintype()	eval.txt	/*getcmdwintype()*
getcompletion()	eval.txt	/*getcompletion()*
getcurpos()	eval.txt	/*getcurpos()*
getcwd()	eval.txt	/*getcwd()*
getfontname()	eval.txt	/*getfontname()*
getfperm()	eval.txt	/*getfperm()*
getfsize()	eval.txt	/*getfsize()*
getftime()	eval.txt	/*getftime()*
getftype()	eval.txt	/*getftype()*
getlatestvimscripts-install	pi_getscript.txt	/*getlatestvimscripts-install*
getline()	eval.txt	/*getline()*
getloclist()	eval.txt	/*getloclist()*
getmatches()	eval.txt	/*getmatches()*
getpid()	eval.txt	/*getpid()*
getpos()	eval.txt	/*getpos()*
getqflist()	eval.txt	/*getqflist()*
getreg()	eval.txt	/*getreg()*
getregtype()	eval.txt	/*getregtype()*
getscript	pi_getscript.txt	/*getscript*
getscript-autoinstall	pi_getscript.txt	/*getscript-autoinstall*
getscript-data	pi_getscript.txt	/*getscript-data*
getscript-history	pi_getscript.txt	/*getscript-history*
getscript-plugins	pi_getscript.txt	/*getscript-plugins*
getscript-start	pi_getscript.txt	/*getscript-start*
gettabinfo()	eval.txt	/*gettabinfo()*
gettabvar()	eval.txt	/*gettabvar()*
gettabwinvar()	eval.txt	/*gettabwinvar()*
getwininfo()	eval.txt	/*getwininfo()*
getwinposx()	eval.txt	/*getwinposx()*
getwinposy()	eval.txt	/*getwinposy()*
getwinvar()	eval.txt	/*getwinvar()*
gex	starting.txt	/*gex*
gf	editing.txt	/*gf*
gg	motion.txt	/*gg*
gh	visual.txt	/*gh*
gi	insert.txt	/*gi*
gj	motion.txt	/*gj*
gk	motion.txt	/*gk*
glob()	eval.txt	/*glob()*
glob2regpat()	eval.txt	/*glob2regpat()*
global-ime	mbyte.txt	/*global-ime*
global-local	options.txt	/*global-local*
global-variable	eval.txt	/*global-variable*
global_markfilelist	pi_netrw.txt	/*global_markfilelist*
globpath()	eval.txt	/*globpath()*
glvs	pi_getscript.txt	/*glvs*
glvs-alg	pi_getscript.txt	/*glvs-alg*
glvs-algorithm	pi_getscript.txt	/*glvs-algorithm*
glvs-autoinstall	pi_getscript.txt	/*glvs-autoinstall*
glvs-contents	pi_getscript.txt	/*glvs-contents*
glvs-copyright	pi_getscript.txt	/*glvs-copyright*
glvs-data	pi_getscript.txt	/*glvs-data*
glvs-dist-install	pi_getscript.txt	/*glvs-dist-install*
glvs-hist	pi_getscript.txt	/*glvs-hist*
glvs-install	pi_getscript.txt	/*glvs-install*
glvs-options	pi_getscript.txt	/*glvs-options*
glvs-plugins	pi_getscript.txt	/*glvs-plugins*
glvs-usage	pi_getscript.txt	/*glvs-usage*
gm	motion.txt	/*gm*
gn	visual.txt	/*gn*
gnat#Insert_Tags_Header()	ft_ada.txt	/*gnat#Insert_Tags_Header()*
gnat#New()	ft_ada.txt	/*gnat#New()*
gnat-xref	ft_ada.txt	/*gnat-xref*
gnat_members	ft_ada.txt	/*gnat_members*
gnome-session	gui_x11.txt	/*gnome-session*
go	motion.txt	/*go*
gp	change.txt	/*gp*
gpm-mouse	term.txt	/*gpm-mouse*
gq	change.txt	/*gq*
gqap	change.txt	/*gqap*
gqgq	change.txt	/*gqgq*
gqq	change.txt	/*gqq*
gr	change.txt	/*gr*
graphic-option-gone	version4.txt	/*graphic-option-gone*
greek	options.txt	/*greek*
grep	quickfix.txt	/*grep*
groff.vim	syntax.txt	/*groff.vim*
gross-national-happiness	intro.txt	/*gross-national-happiness*
group-name	syntax.txt	/*group-name*
gs	various.txt	/*gs*
gsp.vim	syntax.txt	/*gsp.vim*
gstar	pattern.txt	/*gstar*
gt	tabpage.txt	/*gt*
gtk-tooltip-colors	gui_x11.txt	/*gtk-tooltip-colors*
gu	change.txt	/*gu*
gugu	change.txt	/*gugu*
gui	gui.txt	/*gui*
gui-IME	gui.txt	/*gui-IME*
gui-clipboard	gui_w32.txt	/*gui-clipboard*
gui-colors	syntax.txt	/*gui-colors*
gui-extras	gui.txt	/*gui-extras*
gui-footer	debugger.txt	/*gui-footer*
gui-fork	gui_x11.txt	/*gui-fork*
gui-functions	usr_41.txt	/*gui-functions*
gui-gnome	gui_x11.txt	/*gui-gnome*
gui-gnome-session	gui_x11.txt	/*gui-gnome-session*
gui-gtk	gui_x11.txt	/*gui-gtk*
gui-gtk-socketid	gui_x11.txt	/*gui-gtk-socketid*
gui-horiz-scroll	gui.txt	/*gui-horiz-scroll*
gui-init	gui.txt	/*gui-init*
gui-kde	gui_x11.txt	/*gui-kde*
gui-mouse	gui.txt	/*gui-mouse*
gui-mouse-focus	gui.txt	/*gui-mouse-focus*
gui-mouse-mapping	gui.txt	/*gui-mouse-mapping*
gui-mouse-modeless	gui.txt	/*gui-mouse-modeless*
gui-mouse-move	gui.txt	/*gui-mouse-move*
gui-mouse-select	gui.txt	/*gui-mouse-select*
gui-mouse-status	gui.txt	/*gui-mouse-status*
gui-mouse-various	gui.txt	/*gui-mouse-various*
gui-pty	gui_x11.txt	/*gui-pty*
gui-pty-erase	gui_x11.txt	/*gui-pty-erase*
gui-resources	gui_x11.txt	/*gui-resources*
gui-scrollbars	gui.txt	/*gui-scrollbars*
gui-selections	gui.txt	/*gui-selections*
gui-shell	gui.txt	/*gui-shell*
gui-shell-win32	gui_w32.txt	/*gui-shell-win32*
gui-start	gui.txt	/*gui-start*
gui-toolbar	gui.txt	/*gui-toolbar*
gui-vert-scroll	gui.txt	/*gui-vert-scroll*
gui-w32	gui_w32.txt	/*gui-w32*
gui-w32-cmdargs	gui_w32.txt	/*gui-w32-cmdargs*
gui-w32-dialogs	gui_w32.txt	/*gui-w32-dialogs*
gui-w32-printing	gui_w32.txt	/*gui-w32-printing*
gui-w32-start	gui_w32.txt	/*gui-w32-start*
gui-w32-various	gui_w32.txt	/*gui-w32-various*
gui-w32-windowid	gui_w32.txt	/*gui-w32-windowid*
gui-w32s	os_win32.txt	/*gui-w32s*
gui-win32-maximized	gui_w32.txt	/*gui-win32-maximized*
gui-x11	gui_x11.txt	/*gui-x11*
gui-x11-athena	gui_x11.txt	/*gui-x11-athena*
gui-x11-compiling	gui_x11.txt	/*gui-x11-compiling*
gui-x11-gtk	gui_x11.txt	/*gui-x11-gtk*
gui-x11-kde	gui_x11.txt	/*gui-x11-kde*
gui-x11-misc	gui_x11.txt	/*gui-x11-misc*
gui-x11-motif	gui_x11.txt	/*gui-x11-motif*
gui-x11-neXtaw	gui_x11.txt	/*gui-x11-neXtaw*
gui-x11-printing	gui_x11.txt	/*gui-x11-printing*
gui-x11-start	gui_x11.txt	/*gui-x11-start*
gui-x11-various	gui_x11.txt	/*gui-x11-various*
gui.txt	gui.txt	/*gui.txt*
gui_w32.txt	gui_w32.txt	/*gui_w32.txt*
gui_x11.txt	gui_x11.txt	/*gui_x11.txt*
guifontwide_gtk2	options.txt	/*guifontwide_gtk2*
guifontwide_win_mbyte	options.txt	/*guifontwide_win_mbyte*
guioptions_a	options.txt	/*guioptions_a*
guu	change.txt	/*guu*
gv	visual.txt	/*gv*
gview	starting.txt	/*gview*
gvim	starting.txt	/*gvim*
gvimdiff	diff.txt	/*gvimdiff*
gvimrc	gui.txt	/*gvimrc*
gw	change.txt	/*gw*
gwgw	change.txt	/*gwgw*
gww	change.txt	/*gww*
gzip	pi_gzip.txt	/*gzip*
gzip-autocmd	pi_gzip.txt	/*gzip-autocmd*
gzip-example	autocmd.txt	/*gzip-example*
gzip-helpfile	tips.txt	/*gzip-helpfile*
g~	change.txt	/*g~*
g~g~	change.txt	/*g~g~*
g~~	change.txt	/*g~~*
h	motion.txt	/*h*
hangul	hangulin.txt	/*hangul*
hangulin.txt	hangulin.txt	/*hangulin.txt*
has()	eval.txt	/*has()*
has-patch	eval.txt	/*has-patch*
has-python	if_pyth.txt	/*has-python*
has_key()	eval.txt	/*has_key()*
haskell.vim	syntax.txt	/*haskell.vim*
haslocaldir()	eval.txt	/*haslocaldir()*
hasmapto()	eval.txt	/*hasmapto()*
hebrew	hebrew.txt	/*hebrew*
hebrew.txt	hebrew.txt	/*hebrew.txt*
help	helphelp.txt	/*help*
help-context	help.txt	/*help-context*
help-summary	usr_02.txt	/*help-summary*
help-tags	tags	1
help-translated	helphelp.txt	/*help-translated*
help-writing	helphelp.txt	/*help-writing*
help-xterm-window	helphelp.txt	/*help-xterm-window*
help.txt	help.txt	/*help.txt*
helpfile_name.txt	helphelp.txt	/*helpfile_name.txt*
helphelp	helphelp.txt	/*helphelp*
helphelp.txt	helphelp.txt	/*helphelp.txt*
hex-editing	tips.txt	/*hex-editing*
hex-number	eval.txt	/*hex-number*
hidden-buffer	windows.txt	/*hidden-buffer*
hidden-changed	version5.txt	/*hidden-changed*
hidden-menus	gui.txt	/*hidden-menus*
hidden-options	options.txt	/*hidden-options*
hidden-quit	windows.txt	/*hidden-quit*
highlight-args	syntax.txt	/*highlight-args*
highlight-changed	version4.txt	/*highlight-changed*
highlight-cterm	syntax.txt	/*highlight-cterm*
highlight-ctermbg	syntax.txt	/*highlight-ctermbg*
highlight-ctermfg	syntax.txt	/*highlight-ctermfg*
highlight-default	syntax.txt	/*highlight-default*
highlight-font	syntax.txt	/*highlight-font*
highlight-groups	syntax.txt	/*highlight-groups*
highlight-gui	syntax.txt	/*highlight-gui*
highlight-guibg	syntax.txt	/*highlight-guibg*
highlight-guifg	syntax.txt	/*highlight-guifg*
highlight-guisp	syntax.txt	/*highlight-guisp*
highlight-start	syntax.txt	/*highlight-start*
highlight-stop	syntax.txt	/*highlight-stop*
highlight-term	syntax.txt	/*highlight-term*
highlightID()	eval.txt	/*highlightID()*
highlight_exists()	eval.txt	/*highlight_exists()*
highlighting-functions	usr_41.txt	/*highlighting-functions*
hist-names	eval.txt	/*hist-names*
histadd()	eval.txt	/*histadd()*
histdel()	eval.txt	/*histdel()*
histget()	eval.txt	/*histget()*
histnr()	eval.txt	/*histnr()*
history	cmdline.txt	/*history*
history-functions	usr_41.txt	/*history-functions*
hit-enter	message.txt	/*hit-enter*
hit-enter-prompt	message.txt	/*hit-enter-prompt*
hit-return	message.txt	/*hit-return*
hitest.vim	syntax.txt	/*hitest.vim*
hjkl	usr_02.txt	/*hjkl*
hl-ColorColumn	syntax.txt	/*hl-ColorColumn*
hl-Conceal	syntax.txt	/*hl-Conceal*
hl-Cursor	syntax.txt	/*hl-Cursor*
hl-CursorColumn	syntax.txt	/*hl-CursorColumn*
hl-CursorIM	syntax.txt	/*hl-CursorIM*
hl-CursorLine	syntax.txt	/*hl-CursorLine*
hl-CursorLineNr	syntax.txt	/*hl-CursorLineNr*
hl-DiffAdd	syntax.txt	/*hl-DiffAdd*
hl-DiffChange	syntax.txt	/*hl-DiffChange*
hl-DiffDelete	syntax.txt	/*hl-DiffDelete*
hl-DiffText	syntax.txt	/*hl-DiffText*
hl-Directory	syntax.txt	/*hl-Directory*
hl-EndOfBuffer	syntax.txt	/*hl-EndOfBuffer*
hl-ErrorMsg	syntax.txt	/*hl-ErrorMsg*
hl-FoldColumn	syntax.txt	/*hl-FoldColumn*
hl-Folded	syntax.txt	/*hl-Folded*
hl-Ignore	syntax.txt	/*hl-Ignore*
hl-IncSearch	syntax.txt	/*hl-IncSearch*
hl-LineNr	syntax.txt	/*hl-LineNr*
hl-MatchParen	syntax.txt	/*hl-MatchParen*
hl-Menu	syntax.txt	/*hl-Menu*
hl-ModeMsg	syntax.txt	/*hl-ModeMsg*
hl-MoreMsg	syntax.txt	/*hl-MoreMsg*
hl-NonText	syntax.txt	/*hl-NonText*
hl-Normal	syntax.txt	/*hl-Normal*
hl-Pmenu	syntax.txt	/*hl-Pmenu*
hl-PmenuSbar	syntax.txt	/*hl-PmenuSbar*
hl-PmenuSel	syntax.txt	/*hl-PmenuSel*
hl-PmenuThumb	syntax.txt	/*hl-PmenuThumb*
hl-Question	syntax.txt	/*hl-Question*
hl-Scrollbar	syntax.txt	/*hl-Scrollbar*
hl-Search	syntax.txt	/*hl-Search*
hl-SignColumn	syntax.txt	/*hl-SignColumn*
hl-SpecialKey	syntax.txt	/*hl-SpecialKey*
hl-SpellBad	syntax.txt	/*hl-SpellBad*
hl-SpellCap	syntax.txt	/*hl-SpellCap*
hl-SpellLocal	syntax.txt	/*hl-SpellLocal*
hl-SpellRare	syntax.txt	/*hl-SpellRare*
hl-StatusLine	syntax.txt	/*hl-StatusLine*
hl-StatusLineNC	syntax.txt	/*hl-StatusLineNC*
hl-TabLine	syntax.txt	/*hl-TabLine*
hl-TabLineFill	syntax.txt	/*hl-TabLineFill*
hl-TabLineSel	syntax.txt	/*hl-TabLineSel*
hl-Title	syntax.txt	/*hl-Title*
hl-Tooltip	syntax.txt	/*hl-Tooltip*
hl-User1	syntax.txt	/*hl-User1*
hl-User1..9	syntax.txt	/*hl-User1..9*
hl-User9	syntax.txt	/*hl-User9*
hl-VertSplit	syntax.txt	/*hl-VertSplit*
hl-Visual	syntax.txt	/*hl-Visual*
hl-VisualNOS	syntax.txt	/*hl-VisualNOS*
hl-WarningMsg	syntax.txt	/*hl-WarningMsg*
hl-WildMenu	syntax.txt	/*hl-WildMenu*
hlID()	eval.txt	/*hlID()*
hlexists()	eval.txt	/*hlexists()*
hlsearch-variable	eval.txt	/*hlsearch-variable*
holy-grail	index.txt	/*holy-grail*
home	intro.txt	/*home*
home-replace	editing.txt	/*home-replace*
hostname()	eval.txt	/*hostname()*
how-do-i	howto.txt	/*how-do-i*
how-to	howto.txt	/*how-to*
howdoi	howto.txt	/*howdoi*
howto	howto.txt	/*howto*
howto.txt	howto.txt	/*howto.txt*
hpterm	term.txt	/*hpterm*
hpterm-color	syntax.txt	/*hpterm-color*
html-flavor	insert.txt	/*html-flavor*
html-indent	indent.txt	/*html-indent*
html-indenting	indent.txt	/*html-indenting*
html.vim	syntax.txt	/*html.vim*
htmlos.vim	syntax.txt	/*htmlos.vim*
http	pi_netrw.txt	/*http*
i	insert.txt	/*i*
i'	motion.txt	/*i'*
i(	motion.txt	/*i(*
i)	motion.txt	/*i)*
i<	motion.txt	/*i<*
i>	motion.txt	/*i>*
iB	motion.txt	/*iB*
iBus	gui.txt	/*iBus*
iW	motion.txt	/*iW*
i[	motion.txt	/*i[*
i]	motion.txt	/*i]*
i_0_CTRL-D	insert.txt	/*i_0_CTRL-D*
i_<BS>	insert.txt	/*i_<BS>*
i_<C-End>	insert.txt	/*i_<C-End>*
i_<C-Home>	insert.txt	/*i_<C-Home>*
i_<C-Left>	insert.txt	/*i_<C-Left>*
i_<C-PageDown>	tabpage.txt	/*i_<C-PageDown>*
i_<C-PageUp>	tabpage.txt	/*i_<C-PageUp>*
i_<C-Right>	insert.txt	/*i_<C-Right>*
i_<CR>	insert.txt	/*i_<CR>*
i_<Del>	insert.txt	/*i_<Del>*
i_<Down>	insert.txt	/*i_<Down>*
i_<End>	insert.txt	/*i_<End>*
i_<Esc>	insert.txt	/*i_<Esc>*
i_<F1>	helphelp.txt	/*i_<F1>*
i_<Help>	helphelp.txt	/*i_<Help>*
i_<Home>	insert.txt	/*i_<Home>*
i_<Insert>	insert.txt	/*i_<Insert>*
i_<Left>	insert.txt	/*i_<Left>*
i_<LeftMouse>	insert.txt	/*i_<LeftMouse>*
i_<NL>	insert.txt	/*i_<NL>*
i_<PageDown>	insert.txt	/*i_<PageDown>*
i_<PageUp>	insert.txt	/*i_<PageUp>*
i_<Right>	insert.txt	/*i_<Right>*
i_<S-Down>	insert.txt	/*i_<S-Down>*
i_<S-Left>	insert.txt	/*i_<S-Left>*
i_<S-Right>	insert.txt	/*i_<S-Right>*
i_<S-ScrollWheelDown>	insert.txt	/*i_<S-ScrollWheelDown>*
i_<S-ScrollWheelLeft>	insert.txt	/*i_<S-ScrollWheelLeft>*
i_<S-ScrollWheelRight>	insert.txt	/*i_<S-ScrollWheelRight>*
i_<S-ScrollWheelUp>	insert.txt	/*i_<S-ScrollWheelUp>*
i_<S-Up>	insert.txt	/*i_<S-Up>*
i_<ScrollWheelDown>	insert.txt	/*i_<ScrollWheelDown>*
i_<ScrollWheelLeft>	insert.txt	/*i_<ScrollWheelLeft>*
i_<ScrollWheelRight>	insert.txt	/*i_<ScrollWheelRight>*
i_<ScrollWheelUp>	insert.txt	/*i_<ScrollWheelUp>*
i_<Tab>	insert.txt	/*i_<Tab>*
i_<Up>	insert.txt	/*i_<Up>*
i_BS	insert.txt	/*i_BS*
i_CTRL-<PageDown>	tabpage.txt	/*i_CTRL-<PageDown>*
i_CTRL-<PageUp>	tabpage.txt	/*i_CTRL-<PageUp>*
i_CTRL-@	insert.txt	/*i_CTRL-@*
i_CTRL-A	insert.txt	/*i_CTRL-A*
i_CTRL-B-gone	version5.txt	/*i_CTRL-B-gone*
i_CTRL-C	insert.txt	/*i_CTRL-C*
i_CTRL-D	insert.txt	/*i_CTRL-D*
i_CTRL-E	insert.txt	/*i_CTRL-E*
i_CTRL-F	indent.txt	/*i_CTRL-F*
i_CTRL-G_<Down>	insert.txt	/*i_CTRL-G_<Down>*
i_CTRL-G_<Up>	insert.txt	/*i_CTRL-G_<Up>*
i_CTRL-G_CTRL-J	insert.txt	/*i_CTRL-G_CTRL-J*
i_CTRL-G_CTRL-K	insert.txt	/*i_CTRL-G_CTRL-K*
i_CTRL-G_U	insert.txt	/*i_CTRL-G_U*
i_CTRL-G_j	insert.txt	/*i_CTRL-G_j*
i_CTRL-G_k	insert.txt	/*i_CTRL-G_k*
i_CTRL-G_u	insert.txt	/*i_CTRL-G_u*
i_CTRL-H	insert.txt	/*i_CTRL-H*
i_CTRL-I	insert.txt	/*i_CTRL-I*
i_CTRL-J	insert.txt	/*i_CTRL-J*
i_CTRL-K	insert.txt	/*i_CTRL-K*
i_CTRL-L	insert.txt	/*i_CTRL-L*
i_CTRL-M	insert.txt	/*i_CTRL-M*
i_CTRL-N	insert.txt	/*i_CTRL-N*
i_CTRL-O	insert.txt	/*i_CTRL-O*
i_CTRL-P	insert.txt	/*i_CTRL-P*
i_CTRL-Q	insert.txt	/*i_CTRL-Q*
i_CTRL-R	insert.txt	/*i_CTRL-R*
i_CTRL-R_=	insert.txt	/*i_CTRL-R_=*
i_CTRL-R_CTRL-O	insert.txt	/*i_CTRL-R_CTRL-O*
i_CTRL-R_CTRL-P	insert.txt	/*i_CTRL-R_CTRL-P*
i_CTRL-R_CTRL-R	insert.txt	/*i_CTRL-R_CTRL-R*
i_CTRL-T	insert.txt	/*i_CTRL-T*
i_CTRL-U	insert.txt	/*i_CTRL-U*
i_CTRL-V	insert.txt	/*i_CTRL-V*
i_CTRL-V_digit	insert.txt	/*i_CTRL-V_digit*
i_CTRL-W	insert.txt	/*i_CTRL-W*
i_CTRL-X	insert.txt	/*i_CTRL-X*
i_CTRL-X_CTRL-D	insert.txt	/*i_CTRL-X_CTRL-D*
i_CTRL-X_CTRL-E	insert.txt	/*i_CTRL-X_CTRL-E*
i_CTRL-X_CTRL-F	insert.txt	/*i_CTRL-X_CTRL-F*
i_CTRL-X_CTRL-I	insert.txt	/*i_CTRL-X_CTRL-I*
i_CTRL-X_CTRL-K	insert.txt	/*i_CTRL-X_CTRL-K*
i_CTRL-X_CTRL-L	insert.txt	/*i_CTRL-X_CTRL-L*
i_CTRL-X_CTRL-N	insert.txt	/*i_CTRL-X_CTRL-N*
i_CTRL-X_CTRL-O	insert.txt	/*i_CTRL-X_CTRL-O*
i_CTRL-X_CTRL-P	insert.txt	/*i_CTRL-X_CTRL-P*
i_CTRL-X_CTRL-S	insert.txt	/*i_CTRL-X_CTRL-S*
i_CTRL-X_CTRL-T	insert.txt	/*i_CTRL-X_CTRL-T*
i_CTRL-X_CTRL-U	insert.txt	/*i_CTRL-X_CTRL-U*
i_CTRL-X_CTRL-V	insert.txt	/*i_CTRL-X_CTRL-V*
i_CTRL-X_CTRL-Y	insert.txt	/*i_CTRL-X_CTRL-Y*
i_CTRL-X_CTRL-]	insert.txt	/*i_CTRL-X_CTRL-]*
i_CTRL-X_index	index.txt	/*i_CTRL-X_index*
i_CTRL-X_s	insert.txt	/*i_CTRL-X_s*
i_CTRL-Y	insert.txt	/*i_CTRL-Y*
i_CTRL-Z	options.txt	/*i_CTRL-Z*
i_CTRL-[	insert.txt	/*i_CTRL-[*
i_CTRL-\_CTRL-G	intro.txt	/*i_CTRL-\\_CTRL-G*
i_CTRL-\_CTRL-N	intro.txt	/*i_CTRL-\\_CTRL-N*
i_CTRL-\_CTRL-O	insert.txt	/*i_CTRL-\\_CTRL-O*
i_CTRL-]	insert.txt	/*i_CTRL-]*
i_CTRL-^	insert.txt	/*i_CTRL-^*
i_CTRL-_	insert.txt	/*i_CTRL-_*
i_DEL	insert.txt	/*i_DEL*
i_Tab	insert.txt	/*i_Tab*
i_^_CTRL-D	insert.txt	/*i_^_CTRL-D*
i_backspacing	insert.txt	/*i_backspacing*
i_digraph	digraph.txt	/*i_digraph*
i_esc	intro.txt	/*i_esc*
i`	motion.txt	/*i`*
ia64.vim	syntax.txt	/*ia64.vim*
ib	motion.txt	/*ib*
iccf	uganda.txt	/*iccf*
iccf-donations	uganda.txt	/*iccf-donations*
icon-changed	version4.txt	/*icon-changed*
iconise	starting.txt	/*iconise*
iconize	starting.txt	/*iconize*
iconv()	eval.txt	/*iconv()*
iconv-dynamic	mbyte.txt	/*iconv-dynamic*
ident-search	tips.txt	/*ident-search*
idl-syntax	syntax.txt	/*idl-syntax*
idl.vim	syntax.txt	/*idl.vim*
if_cscop.txt	if_cscop.txt	/*if_cscop.txt*
if_lua.txt	if_lua.txt	/*if_lua.txt*
if_mzsch.txt	if_mzsch.txt	/*if_mzsch.txt*
if_ole.txt	if_ole.txt	/*if_ole.txt*
if_perl.txt	if_perl.txt	/*if_perl.txt*
if_pyth.txt	if_pyth.txt	/*if_pyth.txt*
if_ruby.txt	if_ruby.txt	/*if_ruby.txt*
if_sniff.txt	if_sniff.txt	/*if_sniff.txt*
if_tcl.txt	if_tcl.txt	/*if_tcl.txt*
ignore-errors	eval.txt	/*ignore-errors*
improved-autocmds-5.4	version5.txt	/*improved-autocmds-5.4*
improved-quickfix	version5.txt	/*improved-quickfix*
improved-sessions	version5.txt	/*improved-sessions*
improved-viminfo	version5.txt	/*improved-viminfo*
improvements-5	version5.txt	/*improvements-5*
improvements-6	version6.txt	/*improvements-6*
improvements-7	version7.txt	/*improvements-7*
improvements-8	version8.txt	/*improvements-8*
in_bot	channel.txt	/*in_bot*
in_buf	channel.txt	/*in_buf*
in_io-buffer	channel.txt	/*in_io-buffer*
in_mode	channel.txt	/*in_mode*
in_name	channel.txt	/*in_name*
in_top	channel.txt	/*in_top*
inactive-buffer	windows.txt	/*inactive-buffer*
include-search	tagsrch.txt	/*include-search*
inclusive	motion.txt	/*inclusive*
incomp-small-6	version6.txt	/*incomp-small-6*
incompatible-5	version5.txt	/*incompatible-5*
incompatible-6	version6.txt	/*incompatible-6*
incompatible-7	version7.txt	/*incompatible-7*
incompatible-8	version8.txt	/*incompatible-8*
indent()	eval.txt	/*indent()*
indent-expression	indent.txt	/*indent-expression*
indent.txt	indent.txt	/*indent.txt*
indentkeys-format	indent.txt	/*indentkeys-format*
index	index.txt	/*index*
index()	eval.txt	/*index()*
index.txt	index.txt	/*index.txt*
info-message	starting.txt	/*info-message*
inform.vim	syntax.txt	/*inform.vim*
informix	ft_sql.txt	/*informix*
initialization	starting.txt	/*initialization*
input()	eval.txt	/*input()*
inputdialog()	eval.txt	/*inputdialog()*
inputlist()	eval.txt	/*inputlist()*
inputrestore()	eval.txt	/*inputrestore()*
inputsave()	eval.txt	/*inputsave()*
inputsecret()	eval.txt	/*inputsecret()*
ins-completion	insert.txt	/*ins-completion*
ins-completion-menu	insert.txt	/*ins-completion-menu*
ins-expandtab	insert.txt	/*ins-expandtab*
ins-reverse	rileft.txt	/*ins-reverse*
ins-smarttab	insert.txt	/*ins-smarttab*
ins-softtabstop	insert.txt	/*ins-softtabstop*
ins-special-keys	insert.txt	/*ins-special-keys*
ins-special-special	insert.txt	/*ins-special-special*
ins-textwidth	insert.txt	/*ins-textwidth*
insert	insert.txt	/*insert*
insert()	eval.txt	/*insert()*
insert-index	index.txt	/*insert-index*
insert.txt	insert.txt	/*insert.txt*
insert_expand	insert.txt	/*insert_expand*
inserting	insert.txt	/*inserting*
inserting-ex	insert.txt	/*inserting-ex*
inserting-file	insert.txt	/*inserting-file*
insertmode-variable	eval.txt	/*insertmode-variable*
install	usr_90.txt	/*install*
install-home	usr_90.txt	/*install-home*
install-registry	gui_w32.txt	/*install-registry*
intel-itanium	syntax.txt	/*intel-itanium*
intellimouse-wheel-problems	gui_w32.txt	/*intellimouse-wheel-problems*
interactive-functions	usr_41.txt	/*interactive-functions*
interfaces-5.2	version5.txt	/*interfaces-5.2*
internal-variables	eval.txt	/*internal-variables*
internal-wordlist	spell.txt	/*internal-wordlist*
internet	intro.txt	/*internet*
intro	intro.txt	/*intro*
intro.txt	intro.txt	/*intro.txt*
inverse	syntax.txt	/*inverse*
invert()	eval.txt	/*invert()*
ip	motion.txt	/*ip*
iquote	motion.txt	/*iquote*
is	motion.txt	/*is*
isdirectory()	eval.txt	/*isdirectory()*
islocked()	eval.txt	/*islocked()*
isnan()	eval.txt	/*isnan()*
it	motion.txt	/*it*
italic	syntax.txt	/*italic*
items()	eval.txt	/*items()*
iw	motion.txt	/*iw*
i{	motion.txt	/*i{*
i}	motion.txt	/*i}*
j	motion.txt	/*j*
java-cinoptions	indent.txt	/*java-cinoptions*
java-indenting	indent.txt	/*java-indenting*
java.vim	syntax.txt	/*java.vim*
javascript-cinoptions	indent.txt	/*javascript-cinoptions*
javascript-indenting	indent.txt	/*javascript-indenting*
job	channel.txt	/*job*
job-callback	channel.txt	/*job-callback*
job-channel-overview	channel.txt	/*job-channel-overview*
job-close_cb	channel.txt	/*job-close_cb*
job-control	channel.txt	/*job-control*
job-drop	channel.txt	/*job-drop*
job-err_cb	channel.txt	/*job-err_cb*
job-err_io	channel.txt	/*job-err_io*
job-exit_cb	channel.txt	/*job-exit_cb*
job-functions	usr_41.txt	/*job-functions*
job-in_io	channel.txt	/*job-in_io*
job-options	channel.txt	/*job-options*
job-out_cb	channel.txt	/*job-out_cb*
job-out_io	channel.txt	/*job-out_io*
job-start	channel.txt	/*job-start*
job-start-if-needed	channel.txt	/*job-start-if-needed*
job-start-nochannel	channel.txt	/*job-start-nochannel*
job-stoponexit	channel.txt	/*job-stoponexit*
job-term	channel.txt	/*job-term*
job-timeout	channel.txt	/*job-timeout*
job_getchannel()	eval.txt	/*job_getchannel()*
job_info()	eval.txt	/*job_info()*
job_setoptions()	eval.txt	/*job_setoptions()*
job_start()	eval.txt	/*job_start()*
job_status()	eval.txt	/*job_status()*
job_stop()	eval.txt	/*job_stop()*
join()	eval.txt	/*join()*
js_decode()	eval.txt	/*js_decode()*
js_encode()	eval.txt	/*js_encode()*
jsbterm-mouse	options.txt	/*jsbterm-mouse*
json_decode()	eval.txt	/*json_decode()*
json_encode()	eval.txt	/*json_encode()*
jtags	tagsrch.txt	/*jtags*
jump-motions	motion.txt	/*jump-motions*
jumplist	motion.txt	/*jumplist*
jumpto-diffs	diff.txt	/*jumpto-diffs*
k	motion.txt	/*k*
kcc	uganda.txt	/*kcc*
kde	gui_x11.txt	/*kde*
key-codes	intro.txt	/*key-codes*
key-codes-changed	version4.txt	/*key-codes-changed*
key-mapping	map.txt	/*key-mapping*
key-notation	intro.txt	/*key-notation*
key-variable	eval.txt	/*key-variable*
keycodes	intro.txt	/*keycodes*
keymap-accents	mbyte.txt	/*keymap-accents*
keymap-file-format	mbyte.txt	/*keymap-file-format*
keymap-hebrew	mbyte.txt	/*keymap-hebrew*
keypad-0	intro.txt	/*keypad-0*
keypad-9	intro.txt	/*keypad-9*
keypad-comma	term.txt	/*keypad-comma*
keypad-divide	intro.txt	/*keypad-divide*
keypad-end	intro.txt	/*keypad-end*
keypad-enter	intro.txt	/*keypad-enter*
keypad-home	intro.txt	/*keypad-home*
keypad-minus	intro.txt	/*keypad-minus*
keypad-multiply	intro.txt	/*keypad-multiply*
keypad-page-down	intro.txt	/*keypad-page-down*
keypad-page-up	intro.txt	/*keypad-page-up*
keypad-plus	intro.txt	/*keypad-plus*
keypad-point	intro.txt	/*keypad-point*
keys()	eval.txt	/*keys()*
known-bugs	todo.txt	/*known-bugs*
l	motion.txt	/*l*
l:	eval.txt	/*l:*
l:var	eval.txt	/*l:var*
lCursor	mbyte.txt	/*lCursor*
lace.vim	syntax.txt	/*lace.vim*
lambda	eval.txt	/*lambda*
lang-variable	eval.txt	/*lang-variable*
language-mapping	map.txt	/*language-mapping*
last-pattern	pattern.txt	/*last-pattern*
last-position-jump	eval.txt	/*last-position-jump*
last_buffer_nr()	eval.txt	/*last_buffer_nr()*
latex-syntax	syntax.txt	/*latex-syntax*
lc_time-variable	eval.txt	/*lc_time-variable*
lcs-conceal	options.txt	/*lcs-conceal*
lcs-eol	options.txt	/*lcs-eol*
lcs-extends	options.txt	/*lcs-extends*
lcs-nbsp	options.txt	/*lcs-nbsp*
lcs-precedes	options.txt	/*lcs-precedes*
lcs-space	options.txt	/*lcs-space*
lcs-tab	options.txt	/*lcs-tab*
lcs-trail	options.txt	/*lcs-trail*
left-right-motions	motion.txt	/*left-right-motions*
len()	eval.txt	/*len()*
less	various.txt	/*less*
letter	print.txt	/*letter*
lex.vim	syntax.txt	/*lex.vim*
lhaskell.vim	syntax.txt	/*lhaskell.vim*
libcall()	eval.txt	/*libcall()*
libcallnr()	eval.txt	/*libcallnr()*
license	uganda.txt	/*license*
lid	quickfix.txt	/*lid*
lifelines.vim	syntax.txt	/*lifelines.vim*
limits	vi_diff.txt	/*limits*
line()	eval.txt	/*line()*
line-continuation	repeat.txt	/*line-continuation*
line2byte()	eval.txt	/*line2byte()*
linefeed	intro.txt	/*linefeed*
linewise	motion.txt	/*linewise*
linewise-register	change.txt	/*linewise-register*
linewise-visual	visual.txt	/*linewise-visual*
lisp.vim	syntax.txt	/*lisp.vim*
lispindent()	eval.txt	/*lispindent()*
list	eval.txt	/*list*
list-functions	usr_41.txt	/*list-functions*
list-identity	eval.txt	/*list-identity*
list-index	eval.txt	/*list-index*
list-modification	eval.txt	/*list-modification*
list-repeat	windows.txt	/*list-repeat*
lite.vim	syntax.txt	/*lite.vim*
literal-string	eval.txt	/*literal-string*
lnum-variable	eval.txt	/*lnum-variable*
load-plugins	starting.txt	/*load-plugins*
load-vim-script	repeat.txt	/*load-vim-script*
local-additions	help.txt	/*local-additions*
local-function	eval.txt	/*local-function*
local-options	options.txt	/*local-options*
local-variable	eval.txt	/*local-variable*
local-variables	eval.txt	/*local-variables*
local_markfilelist	pi_netrw.txt	/*local_markfilelist*
locale	mbyte.txt	/*locale*
locale-name	mbyte.txt	/*locale-name*
localtime()	eval.txt	/*localtime()*
location-list	quickfix.txt	/*location-list*
location-list-window	quickfix.txt	/*location-list-window*
log()	eval.txt	/*log()*
log10()	eval.txt	/*log10()*
logiPat	pi_logipat.txt	/*logiPat*
logiPat-arg	pi_logipat.txt	/*logiPat-arg*
logiPat-caveat	pi_logipat.txt	/*logiPat-caveat*
logiPat-contents	pi_logipat.txt	/*logiPat-contents*
logiPat-copyright	pi_logipat.txt	/*logiPat-copyright*
logiPat-examples	pi_logipat.txt	/*logiPat-examples*
logiPat-history	pi_logipat.txt	/*logiPat-history*
logiPat-input	pi_logipat.txt	/*logiPat-input*
logiPat-man	pi_logipat.txt	/*logiPat-man*
logiPat-manual	pi_logipat.txt	/*logiPat-manual*
logiPat-operators	pi_logipat.txt	/*logiPat-operators*
logiPat-pattern	pi_logipat.txt	/*logiPat-pattern*
long-lines	version5.txt	/*long-lines*
love	intro.txt	/*love*
lowercase	change.txt	/*lowercase*
lpc.vim	syntax.txt	/*lpc.vim*
lua	if_lua.txt	/*lua*
lua-buffer	if_lua.txt	/*lua-buffer*
lua-commands	if_lua.txt	/*lua-commands*
lua-dict	if_lua.txt	/*lua-dict*
lua-dynamic	if_lua.txt	/*lua-dynamic*
lua-eval	if_lua.txt	/*lua-eval*
lua-funcref	if_lua.txt	/*lua-funcref*
lua-list	if_lua.txt	/*lua-list*
lua-luaeval	if_lua.txt	/*lua-luaeval*
lua-vim	if_lua.txt	/*lua-vim*
lua-window	if_lua.txt	/*lua-window*
lua.vim	syntax.txt	/*lua.vim*
luaeval()	eval.txt	/*luaeval()*
m	motion.txt	/*m*
m'	motion.txt	/*m'*
m<	motion.txt	/*m<*
m>	motion.txt	/*m>*
m[	motion.txt	/*m[*
m]	motion.txt	/*m]*
m`	motion.txt	/*m`*
mac	os_mac.txt	/*mac*
mac-bug	os_mac.txt	/*mac-bug*
mac-compile	os_mac.txt	/*mac-compile*
mac-faq	os_mac.txt	/*mac-faq*
mac-filename	os_mac.txt	/*mac-filename*
mac-lack	os_mac.txt	/*mac-lack*
mac-vimfile	os_mac.txt	/*mac-vimfile*
macintosh	os_mac.txt	/*macintosh*
macro	map.txt	/*macro*
mail-list	intro.txt	/*mail-list*
mail.vim	syntax.txt	/*mail.vim*
maillist	intro.txt	/*maillist*
maillist-archive	intro.txt	/*maillist-archive*
make.vim	syntax.txt	/*make.vim*
man.vim	filetype.txt	/*man.vim*
manpager.vim	filetype.txt	/*manpager.vim*
manual-copyright	usr_01.txt	/*manual-copyright*
map()	eval.txt	/*map()*
map-<SID>	map.txt	/*map-<SID>*
map-CTRL-C	map.txt	/*map-CTRL-C*
map-ambiguous	map.txt	/*map-ambiguous*
map-backslash	map.txt	/*map-backslash*
map-backtick	tips.txt	/*map-backtick*
map-bar	map.txt	/*map-bar*
map-comments	map.txt	/*map-comments*
map-empty-rhs	map.txt	/*map-empty-rhs*
map-error	map.txt	/*map-error*
map-examples	map.txt	/*map-examples*
map-keys-fails	map.txt	/*map-keys-fails*
map-listing	map.txt	/*map-listing*
map-modes	map.txt	/*map-modes*
map-multibyte	map.txt	/*map-multibyte*
map-overview	map.txt	/*map-overview*
map-precedence	map.txt	/*map-precedence*
map-return	map.txt	/*map-return*
map-self-destroy	tips.txt	/*map-self-destroy*
map-space_in_lhs	map.txt	/*map-space_in_lhs*
map-space_in_rhs	map.txt	/*map-space_in_rhs*
map-typing	map.txt	/*map-typing*
map-which-keys	map.txt	/*map-which-keys*
map.txt	map.txt	/*map.txt*
map_CTRL-C	map.txt	/*map_CTRL-C*
map_backslash	map.txt	/*map_backslash*
map_bar	map.txt	/*map_bar*
map_empty_rhs	map.txt	/*map_empty_rhs*
map_return	map.txt	/*map_return*
map_space_in_lhs	map.txt	/*map_space_in_lhs*
map_space_in_rhs	map.txt	/*map_space_in_rhs*
maparg()	eval.txt	/*maparg()*
mapcheck()	eval.txt	/*mapcheck()*
maple.vim	syntax.txt	/*maple.vim*
mapleader	map.txt	/*mapleader*
maplocalleader	map.txt	/*maplocalleader*
mapmode-c	map.txt	/*mapmode-c*
mapmode-i	map.txt	/*mapmode-i*
mapmode-ic	map.txt	/*mapmode-ic*
mapmode-l	map.txt	/*mapmode-l*
mapmode-n	map.txt	/*mapmode-n*
mapmode-nvo	map.txt	/*mapmode-nvo*
mapmode-o	map.txt	/*mapmode-o*
mapmode-s	map.txt	/*mapmode-s*
mapmode-v	map.txt	/*mapmode-v*
mapmode-x	map.txt	/*mapmode-x*
mapping	map.txt	/*mapping*
mapping-functions	usr_41.txt	/*mapping-functions*
mark	motion.txt	/*mark*
mark-functions	usr_41.txt	/*mark-functions*
mark-motions	motion.txt	/*mark-motions*
markfilelist	pi_netrw.txt	/*markfilelist*
masm.vim	syntax.txt	/*masm.vim*
match()	eval.txt	/*match()*
match-highlight	pattern.txt	/*match-highlight*
match-parens	tips.txt	/*match-parens*
matchadd()	eval.txt	/*matchadd()*
matchaddpos()	eval.txt	/*matchaddpos()*
matcharg()	eval.txt	/*matcharg()*
matchdelete()	eval.txt	/*matchdelete()*
matchend()	eval.txt	/*matchend()*
matchit-install	usr_05.txt	/*matchit-install*
matchlist()	eval.txt	/*matchlist()*
matchparen	pi_paren.txt	/*matchparen*
matchstr()	eval.txt	/*matchstr()*
matchstrpos()	eval.txt	/*matchstrpos()*
max()	eval.txt	/*max()*
mbyte-IME	mbyte.txt	/*mbyte-IME*
mbyte-XIM	mbyte.txt	/*mbyte-XIM*
mbyte-combining	mbyte.txt	/*mbyte-combining*
mbyte-composing	mbyte.txt	/*mbyte-composing*
mbyte-conversion	mbyte.txt	/*mbyte-conversion*
mbyte-encoding	mbyte.txt	/*mbyte-encoding*
mbyte-first	mbyte.txt	/*mbyte-first*
mbyte-fonts-MSwin	mbyte.txt	/*mbyte-fonts-MSwin*
mbyte-fonts-X11	mbyte.txt	/*mbyte-fonts-X11*
mbyte-keymap	mbyte.txt	/*mbyte-keymap*
mbyte-locale	mbyte.txt	/*mbyte-locale*
mbyte-options	mbyte.txt	/*mbyte-options*
mbyte-terminal	mbyte.txt	/*mbyte-terminal*
mbyte-utf8	mbyte.txt	/*mbyte-utf8*
mbyte.txt	mbyte.txt	/*mbyte.txt*
menu-changes-5.4	version5.txt	/*menu-changes-5.4*
menu-examples	gui.txt	/*menu-examples*
menu-priority	gui.txt	/*menu-priority*
menu-separator	gui.txt	/*menu-separator*
menu.vim	gui.txt	/*menu.vim*
menus	gui.txt	/*menus*
merge	diff.txt	/*merge*
message-history	message.txt	/*message-history*
message.txt	message.txt	/*message.txt*
messages	message.txt	/*messages*
meta	intro.txt	/*meta*
min()	eval.txt	/*min()*
missing-options	vi_diff.txt	/*missing-options*
mkdir()	eval.txt	/*mkdir()*
mlang.txt	mlang.txt	/*mlang.txt*
mma.vim	syntax.txt	/*mma.vim*
mode()	eval.txt	/*mode()*
mode-Ex	intro.txt	/*mode-Ex*
mode-cmdline	cmdline.txt	/*mode-cmdline*
mode-ins-repl	insert.txt	/*mode-ins-repl*
mode-replace	insert.txt	/*mode-replace*
mode-switching	intro.txt	/*mode-switching*
modeless-and-clipboard	version6.txt	/*modeless-and-clipboard*
modeless-selection	gui.txt	/*modeless-selection*
modeline	options.txt	/*modeline*
modeline-local	options.txt	/*modeline-local*
modeline-version	options.txt	/*modeline-version*
moo.vim	syntax.txt	/*moo.vim*
more-compatible	version5.txt	/*more-compatible*
more-prompt	message.txt	/*more-prompt*
more-variables	eval.txt	/*more-variables*
motion.txt	motion.txt	/*motion.txt*
mouse-mode-table	term.txt	/*mouse-mode-table*
mouse-overview	term.txt	/*mouse-overview*
mouse-swap-buttons	term.txt	/*mouse-swap-buttons*
mouse-using	term.txt	/*mouse-using*
mouse_col-variable	eval.txt	/*mouse_col-variable*
mouse_lnum-variable	eval.txt	/*mouse_lnum-variable*
mouse_win-variable	eval.txt	/*mouse_win-variable*
mouse_winid-variable	eval.txt	/*mouse_winid-variable*
movement	intro.txt	/*movement*
ms-dos	os_msdos.txt	/*ms-dos*
msdos	os_msdos.txt	/*msdos*
msql.vim	syntax.txt	/*msql.vim*
mswin.vim	gui_w32.txt	/*mswin.vim*
multi-byte	mbyte.txt	/*multi-byte*
multi-lang	mlang.txt	/*multi-lang*
multi-repeat	repeat.txt	/*multi-repeat*
multibyte	mbyte.txt	/*multibyte*
multibyte-ime	mbyte.txt	/*multibyte-ime*
multibyte-input	mbyte.txt	/*multibyte-input*
multilang	mlang.txt	/*multilang*
multilang-menus	mlang.txt	/*multilang-menus*
multilang-messages	mlang.txt	/*multilang-messages*
multilang-scripts	mlang.txt	/*multilang-scripts*
myfiletypefile	syntax.txt	/*myfiletypefile*
myscriptsfile	syntax.txt	/*myscriptsfile*
mysql	ft_sql.txt	/*mysql*
mysyntaxfile	syntax.txt	/*mysyntaxfile*
mysyntaxfile-add	syntax.txt	/*mysyntaxfile-add*
mysyntaxfile-replace	syntax.txt	/*mysyntaxfile-replace*
mzeval()	eval.txt	/*mzeval()*
mzscheme	if_mzsch.txt	/*mzscheme*
mzscheme-buffer	if_mzsch.txt	/*mzscheme-buffer*
mzscheme-commands	if_mzsch.txt	/*mzscheme-commands*
mzscheme-dynamic	if_mzsch.txt	/*mzscheme-dynamic*
mzscheme-examples	if_mzsch.txt	/*mzscheme-examples*
mzscheme-funcref	if_mzsch.txt	/*mzscheme-funcref*
mzscheme-mzeval	if_mzsch.txt	/*mzscheme-mzeval*
mzscheme-sandbox	if_mzsch.txt	/*mzscheme-sandbox*
mzscheme-setup	if_mzsch.txt	/*mzscheme-setup*
mzscheme-threads	if_mzsch.txt	/*mzscheme-threads*
mzscheme-vim	if_mzsch.txt	/*mzscheme-vim*
mzscheme-vimext	if_mzsch.txt	/*mzscheme-vimext*
mzscheme-window	if_mzsch.txt	/*mzscheme-window*
n	pattern.txt	/*n*
nasm.vim	syntax.txt	/*nasm.vim*
navigation	motion.txt	/*navigation*
nb-commands	netbeans.txt	/*nb-commands*
nb-events	netbeans.txt	/*nb-events*
nb-functions	netbeans.txt	/*nb-functions*
nb-messages	netbeans.txt	/*nb-messages*
nb-protocol_errors	netbeans.txt	/*nb-protocol_errors*
nb-special	netbeans.txt	/*nb-special*
nb-terms	netbeans.txt	/*nb-terms*
ncf.vim	syntax.txt	/*ncf.vim*
netbeans	netbeans.txt	/*netbeans*
netbeans-commands	netbeans.txt	/*netbeans-commands*
netbeans-configure	netbeans.txt	/*netbeans-configure*
netbeans-debugging	netbeans.txt	/*netbeans-debugging*
netbeans-download	netbeans.txt	/*netbeans-download*
netbeans-integration	netbeans.txt	/*netbeans-integration*
netbeans-intro	netbeans.txt	/*netbeans-intro*
netbeans-keybindings	netbeans.txt	/*netbeans-keybindings*
netbeans-messages	netbeans.txt	/*netbeans-messages*
netbeans-parameters	netbeans.txt	/*netbeans-parameters*
netbeans-preparation	netbeans.txt	/*netbeans-preparation*
netbeans-problems	netbeans.txt	/*netbeans-problems*
netbeans-protocol	netbeans.txt	/*netbeans-protocol*
netbeans-run	netbeans.txt	/*netbeans-run*
netbeans-setup	netbeans.txt	/*netbeans-setup*
netbeans-support	netbeans.txt	/*netbeans-support*
netbeans.txt	netbeans.txt	/*netbeans.txt*
netreadfixup	pi_netrw.txt	/*netreadfixup*
netrw	pi_netrw.txt	/*netrw*
netrw-%	pi_netrw.txt	/*netrw-%*
netrw--	pi_netrw.txt	/*netrw--*
netrw-:Explore	pi_netrw.txt	/*netrw-:Explore*
netrw-:Hexplore	pi_netrw.txt	/*netrw-:Hexplore*
netrw-:Lexplore	pi_netrw.txt	/*netrw-:Lexplore*
netrw-:MF	pi_netrw.txt	/*netrw-:MF*
netrw-:MT	pi_netrw.txt	/*netrw-:MT*
netrw-:NetrwC	pi_netrw.txt	/*netrw-:NetrwC*
netrw-:NetrwMB	pi_netrw.txt	/*netrw-:NetrwMB*
netrw-:Rexplore	pi_netrw.txt	/*netrw-:Rexplore*
netrw-:Sexplore	pi_netrw.txt	/*netrw-:Sexplore*
netrw-:Texplore	pi_netrw.txt	/*netrw-:Texplore*
netrw-:Vexplore	pi_netrw.txt	/*netrw-:Vexplore*
netrw-C	pi_netrw.txt	/*netrw-C*
netrw-D	pi_netrw.txt	/*netrw-D*
netrw-I	pi_netrw.txt	/*netrw-I*
netrw-O	pi_netrw.txt	/*netrw-O*
netrw-P	pi_netrw.txt	/*netrw-P*
netrw-P18	pi_netrw.txt	/*netrw-P18*
netrw-P19	pi_netrw.txt	/*netrw-P19*
netrw-P20	pi_netrw.txt	/*netrw-P20*
netrw-P21	pi_netrw.txt	/*netrw-P21*
netrw-P22	pi_netrw.txt	/*netrw-P22*
netrw-R	pi_netrw.txt	/*netrw-R*
netrw-S	pi_netrw.txt	/*netrw-S*
netrw-Tb	pi_netrw.txt	/*netrw-Tb*
netrw-Th	pi_netrw.txt	/*netrw-Th*
netrw-U	pi_netrw.txt	/*netrw-U*
netrw-X	pi_netrw.txt	/*netrw-X*
netrw-a	pi_netrw.txt	/*netrw-a*
netrw-activate	pi_netrw.txt	/*netrw-activate*
netrw-bookmark	pi_netrw.txt	/*netrw-bookmark*
netrw-bookmarks	pi_netrw.txt	/*netrw-bookmarks*
netrw-browse	pi_netrw.txt	/*netrw-browse*
netrw-browse-cmds	pi_netrw.txt	/*netrw-browse-cmds*
netrw-browse-maps	pi_netrw.txt	/*netrw-browse-maps*
netrw-browser	pi_netrw.txt	/*netrw-browser*
netrw-browser-options	pi_netrw.txt	/*netrw-browser-options*
netrw-browser-settings	pi_netrw.txt	/*netrw-browser-settings*
netrw-browser-var	pi_netrw.txt	/*netrw-browser-var*
netrw-browsing	pi_netrw.txt	/*netrw-browsing*
netrw-c	pi_netrw.txt	/*netrw-c*
netrw-c-tab	pi_netrw.txt	/*netrw-c-tab*
netrw-cadaver	pi_netrw.txt	/*netrw-cadaver*
netrw-chgup	pi_netrw.txt	/*netrw-chgup*
netrw-clean	pi_netrw.txt	/*netrw-clean*
netrw-contents	pi_netrw.txt	/*netrw-contents*
netrw-copyright	pi_netrw.txt	/*netrw-copyright*
netrw-cr	pi_netrw.txt	/*netrw-cr*
netrw-createfile	pi_netrw.txt	/*netrw-createfile*
netrw-credits	pi_netrw.txt	/*netrw-credits*
netrw-ctrl-h	pi_netrw.txt	/*netrw-ctrl-h*
netrw-ctrl-l	pi_netrw.txt	/*netrw-ctrl-l*
netrw-ctrl-r	pi_netrw.txt	/*netrw-ctrl-r*
netrw-ctrl_l	pi_netrw.txt	/*netrw-ctrl_l*
netrw-curdir	pi_netrw.txt	/*netrw-curdir*
netrw-d	pi_netrw.txt	/*netrw-d*
netrw-debug	pi_netrw.txt	/*netrw-debug*
netrw-del	pi_netrw.txt	/*netrw-del*
netrw-delete	pi_netrw.txt	/*netrw-delete*
netrw-dir	pi_netrw.txt	/*netrw-dir*
netrw-dirlist	pi_netrw.txt	/*netrw-dirlist*
netrw-downdir	pi_netrw.txt	/*netrw-downdir*
netrw-edithide	pi_netrw.txt	/*netrw-edithide*
netrw-editwindow	pi_netrw.txt	/*netrw-editwindow*
netrw-enter	pi_netrw.txt	/*netrw-enter*
netrw-ex	pi_netrw.txt	/*netrw-ex*
netrw-explore	pi_netrw.txt	/*netrw-explore*
netrw-explore-cmds	pi_netrw.txt	/*netrw-explore-cmds*
netrw-externapp	pi_netrw.txt	/*netrw-externapp*
netrw-file	pi_netrw.txt	/*netrw-file*
netrw-filigree	pi_netrw.txt	/*netrw-filigree*
netrw-fixup	pi_netrw.txt	/*netrw-fixup*
netrw-ftp	pi_netrw.txt	/*netrw-ftp*
netrw-ftype	pi_netrw.txt	/*netrw-ftype*
netrw-gb	pi_netrw.txt	/*netrw-gb*
netrw-gd	pi_netrw.txt	/*netrw-gd*
netrw-getftype	pi_netrw.txt	/*netrw-getftype*
netrw-gf	pi_netrw.txt	/*netrw-gf*
netrw-gh	pi_netrw.txt	/*netrw-gh*
netrw-gitignore	pi_netrw.txt	/*netrw-gitignore*
netrw-gn	pi_netrw.txt	/*netrw-gn*
netrw-gp	pi_netrw.txt	/*netrw-gp*
netrw-grep	pi_netrw.txt	/*netrw-grep*
netrw-gx	pi_netrw.txt	/*netrw-gx*
netrw-handler	pi_netrw.txt	/*netrw-handler*
netrw-help	pi_netrw.txt	/*netrw-help*
netrw-hexplore	pi_netrw.txt	/*netrw-hexplore*
netrw-hide	pi_netrw.txt	/*netrw-hide*
netrw-hiding	pi_netrw.txt	/*netrw-hiding*
netrw-history	pi_netrw.txt	/*netrw-history*
netrw-horiz	pi_netrw.txt	/*netrw-horiz*
netrw-i	pi_netrw.txt	/*netrw-i*
netrw-incompatible	pi_netrw.txt	/*netrw-incompatible*
netrw-internal-variables	pi_netrw.txt	/*netrw-internal-variables*
netrw-intro-browse	pi_netrw.txt	/*netrw-intro-browse*
netrw-leftmouse	pi_netrw.txt	/*netrw-leftmouse*
netrw-lexplore	pi_netrw.txt	/*netrw-lexplore*
netrw-list	pi_netrw.txt	/*netrw-list*
netrw-listbookmark	pi_netrw.txt	/*netrw-listbookmark*
netrw-listhack	pi_netrw.txt	/*netrw-listhack*
netrw-login	pi_netrw.txt	/*netrw-login*
netrw-mA	pi_netrw.txt	/*netrw-mA*
netrw-mB	pi_netrw.txt	/*netrw-mB*
netrw-mF	pi_netrw.txt	/*netrw-mF*
netrw-mT	pi_netrw.txt	/*netrw-mT*
netrw-mX	pi_netrw.txt	/*netrw-mX*
netrw-ma	pi_netrw.txt	/*netrw-ma*
netrw-mb	pi_netrw.txt	/*netrw-mb*
netrw-mc	pi_netrw.txt	/*netrw-mc*
netrw-md	pi_netrw.txt	/*netrw-md*
netrw-me	pi_netrw.txt	/*netrw-me*
netrw-mf	pi_netrw.txt	/*netrw-mf*
netrw-mg	pi_netrw.txt	/*netrw-mg*
netrw-mh	pi_netrw.txt	/*netrw-mh*
netrw-middlemouse	pi_netrw.txt	/*netrw-middlemouse*
netrw-ml_get	pi_netrw.txt	/*netrw-ml_get*
netrw-mm	pi_netrw.txt	/*netrw-mm*
netrw-mouse	pi_netrw.txt	/*netrw-mouse*
netrw-move	pi_netrw.txt	/*netrw-move*
netrw-mp	pi_netrw.txt	/*netrw-mp*
netrw-mr	pi_netrw.txt	/*netrw-mr*
netrw-ms	pi_netrw.txt	/*netrw-ms*
netrw-mt	pi_netrw.txt	/*netrw-mt*
netrw-mu	pi_netrw.txt	/*netrw-mu*
netrw-mv	pi_netrw.txt	/*netrw-mv*
netrw-mx	pi_netrw.txt	/*netrw-mx*
netrw-mz	pi_netrw.txt	/*netrw-mz*
netrw-netrc	pi_netrw.txt	/*netrw-netrc*
netrw-newfile	pi_netrw.txt	/*netrw-newfile*
netrw-nexplore	pi_netrw.txt	/*netrw-nexplore*
netrw-noload	pi_netrw.txt	/*netrw-noload*
netrw-nread	pi_netrw.txt	/*netrw-nread*
netrw-ntree	pi_netrw.txt	/*netrw-ntree*
netrw-nwrite	pi_netrw.txt	/*netrw-nwrite*
netrw-o	pi_netrw.txt	/*netrw-o*
netrw-obtain	pi_netrw.txt	/*netrw-obtain*
netrw-options	pi_netrw.txt	/*netrw-options*
netrw-p	pi_netrw.txt	/*netrw-p*
netrw-p1	pi_netrw.txt	/*netrw-p1*
netrw-p10	pi_netrw.txt	/*netrw-p10*
netrw-p11	pi_netrw.txt	/*netrw-p11*
netrw-p12	pi_netrw.txt	/*netrw-p12*
netrw-p13	pi_netrw.txt	/*netrw-p13*
netrw-p14	pi_netrw.txt	/*netrw-p14*
netrw-p15	pi_netrw.txt	/*netrw-p15*
netrw-p16	pi_netrw.txt	/*netrw-p16*
netrw-p17	pi_netrw.txt	/*netrw-p17*
netrw-p2	pi_netrw.txt	/*netrw-p2*
netrw-p3	pi_netrw.txt	/*netrw-p3*
netrw-p4	pi_netrw.txt	/*netrw-p4*
netrw-p5	pi_netrw.txt	/*netrw-p5*
netrw-p6	pi_netrw.txt	/*netrw-p6*
netrw-p7	pi_netrw.txt	/*netrw-p7*
netrw-p8	pi_netrw.txt	/*netrw-p8*
netrw-p9	pi_netrw.txt	/*netrw-p9*
netrw-passwd	pi_netrw.txt	/*netrw-passwd*
netrw-password	pi_netrw.txt	/*netrw-password*
netrw-path	pi_netrw.txt	/*netrw-path*
netrw-pexplore	pi_netrw.txt	/*netrw-pexplore*
netrw-preview	pi_netrw.txt	/*netrw-preview*
netrw-problems	pi_netrw.txt	/*netrw-problems*
netrw-protocol	pi_netrw.txt	/*netrw-protocol*
netrw-prvwin	pi_netrw.txt	/*netrw-prvwin*
netrw-pscp	pi_netrw.txt	/*netrw-pscp*
netrw-psftp	pi_netrw.txt	/*netrw-psftp*
netrw-putty	pi_netrw.txt	/*netrw-putty*
netrw-qF	pi_netrw.txt	/*netrw-qF*
netrw-qL	pi_netrw.txt	/*netrw-qL*
netrw-qb	pi_netrw.txt	/*netrw-qb*
netrw-qf	pi_netrw.txt	/*netrw-qf*
netrw-quickcom	pi_netrw.txt	/*netrw-quickcom*
netrw-quickcoms	pi_netrw.txt	/*netrw-quickcoms*
netrw-quickhelp	pi_netrw.txt	/*netrw-quickhelp*
netrw-quickmap	pi_netrw.txt	/*netrw-quickmap*
netrw-quickmaps	pi_netrw.txt	/*netrw-quickmaps*
netrw-r	pi_netrw.txt	/*netrw-r*
netrw-read	pi_netrw.txt	/*netrw-read*
netrw-ref	pi_netrw.txt	/*netrw-ref*
netrw-refresh	pi_netrw.txt	/*netrw-refresh*
netrw-rename	pi_netrw.txt	/*netrw-rename*
netrw-reverse	pi_netrw.txt	/*netrw-reverse*
netrw-rexplore	pi_netrw.txt	/*netrw-rexplore*
netrw-rightmouse	pi_netrw.txt	/*netrw-rightmouse*
netrw-s	pi_netrw.txt	/*netrw-s*
netrw-s-cr	pi_netrw.txt	/*netrw-s-cr*
netrw-settings	pi_netrw.txt	/*netrw-settings*
netrw-settings-window	pi_netrw.txt	/*netrw-settings-window*
netrw-sexplore	pi_netrw.txt	/*netrw-sexplore*
netrw-sort	pi_netrw.txt	/*netrw-sort*
netrw-sort-sequence	pi_netrw.txt	/*netrw-sort-sequence*
netrw-sortsequence	pi_netrw.txt	/*netrw-sortsequence*
netrw-source	pi_netrw.txt	/*netrw-source*
netrw-ssh-hack	pi_netrw.txt	/*netrw-ssh-hack*
netrw-star	pi_netrw.txt	/*netrw-star*
netrw-starpat	pi_netrw.txt	/*netrw-starpat*
netrw-starstar	pi_netrw.txt	/*netrw-starstar*
netrw-starstarpat	pi_netrw.txt	/*netrw-starstarpat*
netrw-start	pi_netrw.txt	/*netrw-start*
netrw-t	pi_netrw.txt	/*netrw-t*
netrw-texplore	pi_netrw.txt	/*netrw-texplore*
netrw-todo	pi_netrw.txt	/*netrw-todo*
netrw-trailingslash	pi_netrw.txt	/*netrw-trailingslash*
netrw-transparent	pi_netrw.txt	/*netrw-transparent*
netrw-u	pi_netrw.txt	/*netrw-u*
netrw-updir	pi_netrw.txt	/*netrw-updir*
netrw-urls	pi_netrw.txt	/*netrw-urls*
netrw-usermaps	pi_netrw.txt	/*netrw-usermaps*
netrw-userpass	pi_netrw.txt	/*netrw-userpass*
netrw-v	pi_netrw.txt	/*netrw-v*
netrw-var	pi_netrw.txt	/*netrw-var*
netrw-variables	pi_netrw.txt	/*netrw-variables*
netrw-vexplore	pi_netrw.txt	/*netrw-vexplore*
netrw-windows-netrc	pi_netrw.txt	/*netrw-windows-netrc*
netrw-windows-s	pi_netrw.txt	/*netrw-windows-s*
netrw-write	pi_netrw.txt	/*netrw-write*
netrw-x	pi_netrw.txt	/*netrw-x*
netrw-xfer	pi_netrw.txt	/*netrw-xfer*
netrw.vim	pi_netrw.txt	/*netrw.vim*
netrw_filehandler	pi_netrw.txt	/*netrw_filehandler*
netterm-mouse	options.txt	/*netterm-mouse*
network	pi_netrw.txt	/*network*
new-5	version5.txt	/*new-5*
new-6	version6.txt	/*new-6*
new-7	version7.txt	/*new-7*
new-8	version8.txt	/*new-8*
new-GTK-GUI	version5.txt	/*new-GTK-GUI*
new-MzScheme	version7.txt	/*new-MzScheme*
new-Select-mode	version5.txt	/*new-Select-mode*
new-View	version6.txt	/*new-View*
new-argument-list	version6.txt	/*new-argument-list*
new-buftype	version6.txt	/*new-buftype*
new-cmdwin	version6.txt	/*new-cmdwin*
new-color-schemes	version6.txt	/*new-color-schemes*
new-commands	version5.txt	/*new-commands*
new-commands-5.4	version5.txt	/*new-commands-5.4*
new-conceal	version7.txt	/*new-conceal*
new-debug-itf	version6.txt	/*new-debug-itf*
new-debug-mode	version6.txt	/*new-debug-mode*
new-debug-support	version7.txt	/*new-debug-support*
new-define-operator	version7.txt	/*new-define-operator*
new-diff-mode	version6.txt	/*new-diff-mode*
new-encryption	version5.txt	/*new-encryption*
new-evim	version6.txt	/*new-evim*
new-ex-commands-5.2	version5.txt	/*new-ex-commands-5.2*
new-file-browser	version6.txt	/*new-file-browser*
new-file-writing	version6.txt	/*new-file-writing*
new-filetype	filetype.txt	/*new-filetype*
new-filetype-5.4	version5.txt	/*new-filetype-5.4*
new-filetype-plugins	version6.txt	/*new-filetype-plugins*
new-filetype-scripts	filetype.txt	/*new-filetype-scripts*
new-folding	version6.txt	/*new-folding*
new-functions-5.2	version5.txt	/*new-functions-5.2*
new-global-values	version6.txt	/*new-global-values*
new-highlighting	version5.txt	/*new-highlighting*
new-indent-flex	version6.txt	/*new-indent-flex*
new-items-6	version6.txt	/*new-items-6*
new-items-7	version7.txt	/*new-items-7*
new-items-8	version8.txt	/*new-items-8*
new-line-continuation	version5.txt	/*new-line-continuation*
new-location-list	version7.txt	/*new-location-list*
new-lua	version7.txt	/*new-lua*
new-manpage-trans	version7.txt	/*new-manpage-trans*
new-map-expression	version7.txt	/*new-map-expression*
new-map-select	version7.txt	/*new-map-select*
new-more-encryption	version7.txt	/*new-more-encryption*
new-more-highlighting	version7.txt	/*new-more-highlighting*
new-more-unicode	version7.txt	/*new-more-unicode*
new-multi-byte	version5.txt	/*new-multi-byte*
new-multi-lang	version6.txt	/*new-multi-lang*
new-netrw-explore	version7.txt	/*new-netrw-explore*
new-network-files	version6.txt	/*new-network-files*
new-omni-completion	version7.txt	/*new-omni-completion*
new-onemore	version7.txt	/*new-onemore*
new-operator-mod	version6.txt	/*new-operator-mod*
new-options-5.2	version5.txt	/*new-options-5.2*
new-options-5.4	version5.txt	/*new-options-5.4*
new-perl-python	version5.txt	/*new-perl-python*
new-persistent-undo	version7.txt	/*new-persistent-undo*
new-plugins	version6.txt	/*new-plugins*
new-posix	version7.txt	/*new-posix*
new-print-multi-byte	version7.txt	/*new-print-multi-byte*
new-printing	version6.txt	/*new-printing*
new-python3	version7.txt	/*new-python3*
new-regexp-engine	version7.txt	/*new-regexp-engine*
new-runtime-dir	version5.txt	/*new-runtime-dir*
new-script	version5.txt	/*new-script*
new-script-5.4	version5.txt	/*new-script-5.4*
new-scroll-back	version7.txt	/*new-scroll-back*
new-search-path	version6.txt	/*new-search-path*
new-searchpat	version6.txt	/*new-searchpat*
new-session-files	version5.txt	/*new-session-files*
new-spell	version7.txt	/*new-spell*
new-style-testing	eval.txt	/*new-style-testing*
new-tab-pages	version7.txt	/*new-tab-pages*
new-undo-branches	version7.txt	/*new-undo-branches*
new-unlisted-buffers	version6.txt	/*new-unlisted-buffers*
new-user-defined	version5.txt	/*new-user-defined*
new-user-manual	version6.txt	/*new-user-manual*
new-utf-8	version6.txt	/*new-utf-8*
new-vertsplit	version6.txt	/*new-vertsplit*
new-vim-script	version7.txt	/*new-vim-script*
new-vim-script-8	version8.txt	/*new-vim-script-8*
new-vim-server	version6.txt	/*new-vim-server*
new-vimgrep	version7.txt	/*new-vimgrep*
new-virtedit	version6.txt	/*new-virtedit*
news	intro.txt	/*news*
nextnonblank()	eval.txt	/*nextnonblank()*
nice	todo.txt	/*nice*
no-eval-feature	eval.txt	/*no-eval-feature*
no-type-checking	eval.txt	/*no-type-checking*
no_buffers_menu	gui.txt	/*no_buffers_menu*
non-greedy	pattern.txt	/*non-greedy*
non-zero-arg	eval.txt	/*non-zero-arg*
none-variable	eval.txt	/*none-variable*
normal-index	index.txt	/*normal-index*
not-compatible	usr_01.txt	/*not-compatible*
not-edited	editing.txt	/*not-edited*
notation	intro.txt	/*notation*
notepad	gui_w32.txt	/*notepad*
nr2char()	eval.txt	/*nr2char()*
nroff.vim	syntax.txt	/*nroff.vim*
null-variable	eval.txt	/*null-variable*
number_relativenumber	options.txt	/*number_relativenumber*
numbered-function	eval.txt	/*numbered-function*
o	insert.txt	/*o*
o_CTRL-V	motion.txt	/*o_CTRL-V*
o_V	motion.txt	/*o_V*
o_v	motion.txt	/*o_v*
object-motions	motion.txt	/*object-motions*
object-select	motion.txt	/*object-select*
objects	index.txt	/*objects*
obtaining-exted	netbeans.txt	/*obtaining-exted*
ocaml.vim	syntax.txt	/*ocaml.vim*
octal	eval.txt	/*octal*
octal-nrformats	options.txt	/*octal-nrformats*
octal-number	eval.txt	/*octal-number*
old-style-testing	eval.txt	/*old-style-testing*
oldfiles-variable	eval.txt	/*oldfiles-variable*
ole-activation	if_ole.txt	/*ole-activation*
ole-eval	if_ole.txt	/*ole-eval*
ole-gethwnd	if_ole.txt	/*ole-gethwnd*
ole-interface	if_ole.txt	/*ole-interface*
ole-methods	if_ole.txt	/*ole-methods*
ole-normal	if_ole.txt	/*ole-normal*
ole-registration	if_ole.txt	/*ole-registration*
ole-sendkeys	if_ole.txt	/*ole-sendkeys*
ole-setforeground	if_ole.txt	/*ole-setforeground*
omap-info	map.txt	/*omap-info*
omni-sql-completion	ft_sql.txt	/*omni-sql-completion*
online-help	helphelp.txt	/*online-help*
opening-window	windows.txt	/*opening-window*
operator	motion.txt	/*operator*
operator-variable	eval.txt	/*operator-variable*
option-backslash	options.txt	/*option-backslash*
option-list	quickref.txt	/*option-list*
option-summary	options.txt	/*option-summary*
option-window	options.txt	/*option-window*
options	options.txt	/*options*
options-changed	version5.txt	/*options-changed*
options.txt	options.txt	/*options.txt*
optwin	options.txt	/*optwin*
or()	eval.txt	/*or()*
oracle	ft_sql.txt	/*oracle*
os2	os_os2.txt	/*os2*
os390	os_390.txt	/*os390*
os_390.txt	os_390.txt	/*os_390.txt*
os_amiga.txt	os_amiga.txt	/*os_amiga.txt*
os_beos.txt	os_beos.txt	/*os_beos.txt*
os_dos.txt	os_dos.txt	/*os_dos.txt*
os_mac.txt	os_mac.txt	/*os_mac.txt*
os_mint.txt	os_mint.txt	/*os_mint.txt*
os_msdos.txt	os_msdos.txt	/*os_msdos.txt*
os_os2.txt	os_os2.txt	/*os_os2.txt*
os_qnx.txt	os_qnx.txt	/*os_qnx.txt*
os_risc.txt	os_risc.txt	/*os_risc.txt*
os_unix.txt	os_unix.txt	/*os_unix.txt*
os_vms.txt	os_vms.txt	/*os_vms.txt*
os_win32.txt	os_win32.txt	/*os_win32.txt*
other-features	vi_diff.txt	/*other-features*
out_buf	channel.txt	/*out_buf*
out_cb	channel.txt	/*out_cb*
out_io-buffer	channel.txt	/*out_io-buffer*
out_mode	channel.txt	/*out_mode*
out_modifiable	channel.txt	/*out_modifiable*
out_msg	channel.txt	/*out_msg*
out_name	channel.txt	/*out_name*
out_timeout	channel.txt	/*out_timeout*
p	change.txt	/*p*
pack-add	repeat.txt	/*pack-add*
package-create	repeat.txt	/*package-create*
packages	repeat.txt	/*packages*
packload-two-steps	repeat.txt	/*packload-two-steps*
page-down	intro.txt	/*page-down*
page-up	intro.txt	/*page-up*
page_down	intro.txt	/*page_down*
page_up	intro.txt	/*page_up*
pager	message.txt	/*pager*
papp.vim	syntax.txt	/*papp.vim*
paragraph	motion.txt	/*paragraph*
pascal.vim	syntax.txt	/*pascal.vim*
patches-8	version8.txt	/*patches-8*
pathshorten()	eval.txt	/*pathshorten()*
pattern	pattern.txt	/*pattern*
pattern-atoms	pattern.txt	/*pattern-atoms*
pattern-multi-byte	pattern.txt	/*pattern-multi-byte*
pattern-multi-items	pattern.txt	/*pattern-multi-items*
pattern-overview	pattern.txt	/*pattern-overview*
pattern-searches	pattern.txt	/*pattern-searches*
pattern.txt	pattern.txt	/*pattern.txt*
patterns-composing	pattern.txt	/*patterns-composing*
pdev-option	print.txt	/*pdev-option*
peace	intro.txt	/*peace*
penc-option	print.txt	/*penc-option*
perl	if_perl.txt	/*perl*
perl-Append	if_perl.txt	/*perl-Append*
perl-Buffer	if_perl.txt	/*perl-Buffer*
perl-Buffers	if_perl.txt	/*perl-Buffers*
perl-Count	if_perl.txt	/*perl-Count*
perl-Delete	if_perl.txt	/*perl-Delete*
perl-DoCommand	if_perl.txt	/*perl-DoCommand*
perl-Eval	if_perl.txt	/*perl-Eval*
perl-Get	if_perl.txt	/*perl-Get*
perl-GetCursor	if_perl.txt	/*perl-GetCursor*
perl-Msg	if_perl.txt	/*perl-Msg*
perl-Name	if_perl.txt	/*perl-Name*
perl-Number	if_perl.txt	/*perl-Number*
perl-Set	if_perl.txt	/*perl-Set*
perl-SetHeight	if_perl.txt	/*perl-SetHeight*
perl-SetOption	if_perl.txt	/*perl-SetOption*
perl-Windows	if_perl.txt	/*perl-Windows*
perl-compiling	if_perl.txt	/*perl-compiling*
perl-dynamic	if_perl.txt	/*perl-dynamic*
perl-editing	if_perl.txt	/*perl-editing*
perl-overview	if_perl.txt	/*perl-overview*
perl-patterns	pattern.txt	/*perl-patterns*
perl-using	if_perl.txt	/*perl-using*
perl.vim	syntax.txt	/*perl.vim*
perleval()	eval.txt	/*perleval()*
persistent-undo	undo.txt	/*persistent-undo*
pexpr-option	print.txt	/*pexpr-option*
pfn-option	print.txt	/*pfn-option*
pheader-option	print.txt	/*pheader-option*
photon-fonts	os_qnx.txt	/*photon-fonts*
photon-gui	os_qnx.txt	/*photon-gui*
php-comment	indent.txt	/*php-comment*
php-indent	indent.txt	/*php-indent*
php-indenting	indent.txt	/*php-indenting*
php.vim	syntax.txt	/*php.vim*
php3.vim	syntax.txt	/*php3.vim*
phtml.vim	syntax.txt	/*phtml.vim*
pi_getscript.txt	pi_getscript.txt	/*pi_getscript.txt*
pi_gzip.txt	pi_gzip.txt	/*pi_gzip.txt*
pi_logipat.txt	pi_logipat.txt	/*pi_logipat.txt*
pi_netrw.txt	pi_netrw.txt	/*pi_netrw.txt*
pi_paren.txt	pi_paren.txt	/*pi_paren.txt*
pi_spec.txt	pi_spec.txt	/*pi_spec.txt*
pi_tar.txt	pi_tar.txt	/*pi_tar.txt*
pi_vimball.txt	pi_vimball.txt	/*pi_vimball.txt*
pi_zip.txt	pi_zip.txt	/*pi_zip.txt*
pkzip	options.txt	/*pkzip*
plaintex.vim	syntax.txt	/*plaintex.vim*
plsql	ft_sql.txt	/*plsql*
plugin	usr_05.txt	/*plugin*
plugin-details	filetype.txt	/*plugin-details*
plugin-filetype	usr_41.txt	/*plugin-filetype*
plugin-special	usr_41.txt	/*plugin-special*
pmbcs-option	print.txt	/*pmbcs-option*
pmbfn-option	print.txt	/*pmbfn-option*
popt-option	print.txt	/*popt-option*
popup-menu	gui.txt	/*popup-menu*
popup-menu-added	version5.txt	/*popup-menu-added*
popupmenu-completion	insert.txt	/*popupmenu-completion*
popupmenu-keys	insert.txt	/*popupmenu-keys*
ports-5.2	version5.txt	/*ports-5.2*
ports-6	version6.txt	/*ports-6*
posix	vi_diff.txt	/*posix*
posix-compliance	vi_diff.txt	/*posix-compliance*
posix-screen-size	vi_diff.txt	/*posix-screen-size*
postgresql	ft_sql.txt	/*postgresql*
postscr.vim	syntax.txt	/*postscr.vim*
postscript-cjk-printing	print.txt	/*postscript-cjk-printing*
postscript-print-encoding	print.txt	/*postscript-print-encoding*
postscript-print-trouble	print.txt	/*postscript-print-trouble*
postscript-print-util	print.txt	/*postscript-print-util*
postscript-printing	print.txt	/*postscript-printing*
pow()	eval.txt	/*pow()*
ppwiz.vim	syntax.txt	/*ppwiz.vim*
press-enter	message.txt	/*press-enter*
press-return	message.txt	/*press-return*
prevcount-variable	eval.txt	/*prevcount-variable*
preview-window	windows.txt	/*preview-window*
prevnonblank()	eval.txt	/*prevnonblank()*
print-intro	print.txt	/*print-intro*
print-options	print.txt	/*print-options*
print.txt	print.txt	/*print.txt*
printf()	eval.txt	/*printf()*
printf-%	eval.txt	/*printf-%*
printf-B	eval.txt	/*printf-B*
printf-E	eval.txt	/*printf-E*
printf-G	eval.txt	/*printf-G*
printf-S	eval.txt	/*printf-S*
printf-X	eval.txt	/*printf-X*
printf-b	eval.txt	/*printf-b*
printf-c	eval.txt	/*printf-c*
printf-d	eval.txt	/*printf-d*
printf-e	eval.txt	/*printf-e*
printf-f	eval.txt	/*printf-f*
printf-g	eval.txt	/*printf-g*
printf-o	eval.txt	/*printf-o*
printf-s	eval.txt	/*printf-s*
printf-x	eval.txt	/*printf-x*
printing	print.txt	/*printing*
printing-formfeed	print.txt	/*printing-formfeed*
profile	repeat.txt	/*profile*
profiling	repeat.txt	/*profiling*
profiling-variable	eval.txt	/*profiling-variable*
progname-variable	eval.txt	/*progname-variable*
progpath-variable	eval.txt	/*progpath-variable*
progress.vim	syntax.txt	/*progress.vim*
pronounce	intro.txt	/*pronounce*
psql	ft_sql.txt	/*psql*
ptcap.vim	syntax.txt	/*ptcap.vim*
pterm-mouse	options.txt	/*pterm-mouse*
pumvisible()	eval.txt	/*pumvisible()*
put	change.txt	/*put*
put-Visual-mode	change.txt	/*put-Visual-mode*
py3eval()	eval.txt	/*py3eval()*
pyeval()	eval.txt	/*pyeval()*
python	if_pyth.txt	/*python*
python-.locked	if_pyth.txt	/*python-.locked*
python-2-and-3	if_pyth.txt	/*python-2-and-3*
python-Dictionary	if_pyth.txt	/*python-Dictionary*
python-Function	if_pyth.txt	/*python-Function*
python-List	if_pyth.txt	/*python-List*
python-VIM_SPECIAL_PATH	if_pyth.txt	/*python-VIM_SPECIAL_PATH*
python-_get_paths	if_pyth.txt	/*python-_get_paths*
python-bindeval	if_pyth.txt	/*python-bindeval*
python-bindeval-objects	if_pyth.txt	/*python-bindeval-objects*
python-buffer	if_pyth.txt	/*python-buffer*
python-buffers	if_pyth.txt	/*python-buffers*
python-chdir	if_pyth.txt	/*python-chdir*
python-command	if_pyth.txt	/*python-command*
python-commands	if_pyth.txt	/*python-commands*
python-current	if_pyth.txt	/*python-current*
python-dynamic	if_pyth.txt	/*python-dynamic*
python-error	if_pyth.txt	/*python-error*
python-eval	if_pyth.txt	/*python-eval*
python-examples	if_pyth.txt	/*python-examples*
python-fchdir	if_pyth.txt	/*python-fchdir*
python-find_module	if_pyth.txt	/*python-find_module*
python-foreach_rtp	if_pyth.txt	/*python-foreach_rtp*
python-input	if_pyth.txt	/*python-input*
python-options	if_pyth.txt	/*python-options*
python-output	if_pyth.txt	/*python-output*
python-path_hook	if_pyth.txt	/*python-path_hook*
python-pyeval	if_pyth.txt	/*python-pyeval*
python-range	if_pyth.txt	/*python-range*
python-special-path	if_pyth.txt	/*python-special-path*
python-strwidth	if_pyth.txt	/*python-strwidth*
python-tabpage	if_pyth.txt	/*python-tabpage*
python-tabpages	if_pyth.txt	/*python-tabpages*
python-vars	if_pyth.txt	/*python-vars*
python-vim	if_pyth.txt	/*python-vim*
python-vvars	if_pyth.txt	/*python-vvars*
python-window	if_pyth.txt	/*python-window*
python-windows	if_pyth.txt	/*python-windows*
python.vim	syntax.txt	/*python.vim*
python2-directory	if_pyth.txt	/*python2-directory*
python3	if_pyth.txt	/*python3*
python3-directory	if_pyth.txt	/*python3-directory*
pythonx-directory	if_pyth.txt	/*pythonx-directory*
q	repeat.txt	/*q*
q/	cmdline.txt	/*q\/*
q:	cmdline.txt	/*q:*
q?	cmdline.txt	/*q?*
qnx	os_qnx.txt	/*qnx*
qnx-compiling	os_qnx.txt	/*qnx-compiling*
qnx-general	os_qnx.txt	/*qnx-general*
qnx-terminal	os_qnx.txt	/*qnx-terminal*
quake.vim	syntax.txt	/*quake.vim*
quickfix	quickfix.txt	/*quickfix*
quickfix-6	version6.txt	/*quickfix-6*
quickfix-directory-stack	quickfix.txt	/*quickfix-directory-stack*
quickfix-error-lists	quickfix.txt	/*quickfix-error-lists*
quickfix-functions	usr_41.txt	/*quickfix-functions*
quickfix-gcc	quickfix.txt	/*quickfix-gcc*
quickfix-manx	quickfix.txt	/*quickfix-manx*
quickfix-perl	quickfix.txt	/*quickfix-perl*
quickfix-valid	quickfix.txt	/*quickfix-valid*
quickfix-window	quickfix.txt	/*quickfix-window*
quickfix.txt	quickfix.txt	/*quickfix.txt*
quickref	quickref.txt	/*quickref*
quickref.txt	quickref.txt	/*quickref.txt*
quote	change.txt	/*quote*
quote#	change.txt	/*quote#*
quote%	change.txt	/*quote%*
quote+	gui_x11.txt	/*quote+*
quote-	change.txt	/*quote-*
quote.	change.txt	/*quote.*
quote/	change.txt	/*quote\/*
quote0	change.txt	/*quote0*
quote1	change.txt	/*quote1*
quote2	change.txt	/*quote2*
quote3	change.txt	/*quote3*
quote4	change.txt	/*quote4*
quote9	change.txt	/*quote9*
quote:	change.txt	/*quote:*
quote=	change.txt	/*quote=*
quote_	change.txt	/*quote_*
quote_#	change.txt	/*quote_#*
quote_%	change.txt	/*quote_%*
quote_-	change.txt	/*quote_-*
quote_.	change.txt	/*quote_.*
quote_/	change.txt	/*quote_\/*
quote_:	change.txt	/*quote_:*
quote_=	change.txt	/*quote_=*
quote_alpha	change.txt	/*quote_alpha*
quote_number	change.txt	/*quote_number*
quote_quote	change.txt	/*quote_quote*
quote_~	change.txt	/*quote_~*
quotea	change.txt	/*quotea*
quotecommandquote	intro.txt	/*quotecommandquote*
quoteplus	gui_x11.txt	/*quoteplus*
quotequote	change.txt	/*quotequote*
quotes	quotes.txt	/*quotes*
quotes.txt	quotes.txt	/*quotes.txt*
quotestar	gui.txt	/*quotestar*
quote~	change.txt	/*quote~*
r	change.txt	/*r*
range()	eval.txt	/*range()*
raw-terminal-mode	term.txt	/*raw-terminal-mode*
rcp	pi_netrw.txt	/*rcp*
read-in-close-cb	channel.txt	/*read-in-close-cb*
read-messages	insert.txt	/*read-messages*
read-only-share	editing.txt	/*read-only-share*
read-stdin	version5.txt	/*read-stdin*
readfile()	eval.txt	/*readfile()*
readline.vim	syntax.txt	/*readline.vim*
recording	repeat.txt	/*recording*
recover.txt	recover.txt	/*recover.txt*
recovery	recover.txt	/*recovery*
recursive_mapping	map.txt	/*recursive_mapping*
redo	undo.txt	/*redo*
redo-register	undo.txt	/*redo-register*
ref	intro.txt	/*ref*
reference	intro.txt	/*reference*
reference_toc	help.txt	/*reference_toc*
regexp	pattern.txt	/*regexp*
regexp-changes-5.4	version5.txt	/*regexp-changes-5.4*
register	sponsor.txt	/*register*
register-faq	sponsor.txt	/*register-faq*
register-variable	eval.txt	/*register-variable*
registers	change.txt	/*registers*
regular-expression	pattern.txt	/*regular-expression*
reload	editing.txt	/*reload*
reltime()	eval.txt	/*reltime()*
reltimefloat()	eval.txt	/*reltimefloat()*
reltimestr()	eval.txt	/*reltimestr()*
remote.txt	remote.txt	/*remote.txt*
remote_expr()	eval.txt	/*remote_expr()*
remote_foreground()	eval.txt	/*remote_foreground()*
remote_peek()	eval.txt	/*remote_peek()*
remote_read()	eval.txt	/*remote_read()*
remote_send()	eval.txt	/*remote_send()*
remove()	eval.txt	/*remove()*
remove-filetype	filetype.txt	/*remove-filetype*
remove-option-flags	options.txt	/*remove-option-flags*
rename()	eval.txt	/*rename()*
rename-files	tips.txt	/*rename-files*
repeat()	eval.txt	/*repeat()*
repeat.txt	repeat.txt	/*repeat.txt*
repeating	repeat.txt	/*repeating*
replacing	change.txt	/*replacing*
replacing-ex	insert.txt	/*replacing-ex*
reselect-Visual	visual.txt	/*reselect-Visual*
resolve()	eval.txt	/*resolve()*
restore-cursor	usr_05.txt	/*restore-cursor*
restore-position	tips.txt	/*restore-position*
restricted-mode	starting.txt	/*restricted-mode*
retab-example	change.txt	/*retab-example*
rethrow	eval.txt	/*rethrow*
reverse()	eval.txt	/*reverse()*
rexx.vim	syntax.txt	/*rexx.vim*
rgb.txt	gui_w32.txt	/*rgb.txt*
rgview	starting.txt	/*rgview*
rgvim	starting.txt	/*rgvim*
right-justify	change.txt	/*right-justify*
rileft	rileft.txt	/*rileft*
rileft.txt	rileft.txt	/*rileft.txt*
riscos	os_risc.txt	/*riscos*
rot13	change.txt	/*rot13*
round()	eval.txt	/*round()*
rst.vim	syntax.txt	/*rst.vim*
rsync	pi_netrw.txt	/*rsync*
ruby	if_ruby.txt	/*ruby*
ruby-buffer	if_ruby.txt	/*ruby-buffer*
ruby-command	if_ruby.txt	/*ruby-command*
ruby-commands	if_ruby.txt	/*ruby-commands*
ruby-dynamic	if_ruby.txt	/*ruby-dynamic*
ruby-evaluate	if_ruby.txt	/*ruby-evaluate*
ruby-globals	if_ruby.txt	/*ruby-globals*
ruby-message	if_ruby.txt	/*ruby-message*
ruby-set_option	if_ruby.txt	/*ruby-set_option*
ruby-vim	if_ruby.txt	/*ruby-vim*
ruby-window	if_ruby.txt	/*ruby-window*
ruby.vim	syntax.txt	/*ruby.vim*
ruby_fold	syntax.txt	/*ruby_fold*
ruby_foldable_groups	syntax.txt	/*ruby_foldable_groups*
ruby_minlines	syntax.txt	/*ruby_minlines*
ruby_no_expensive	syntax.txt	/*ruby_no_expensive*
ruby_operators	syntax.txt	/*ruby_operators*
ruby_space_errors	syntax.txt	/*ruby_space_errors*
ruby_spellcheck_strings	syntax.txt	/*ruby_spellcheck_strings*
russian	russian.txt	/*russian*
russian-intro	russian.txt	/*russian-intro*
russian-issues	russian.txt	/*russian-issues*
russian-keymap	russian.txt	/*russian-keymap*
russian-l18n	russian.txt	/*russian-l18n*
russian.txt	russian.txt	/*russian.txt*
rview	starting.txt	/*rview*
rvim	starting.txt	/*rvim*
rxvt	syntax.txt	/*rxvt*
s	change.txt	/*s*
s/\&	change.txt	/*s\/\\&*
s/\0	change.txt	/*s\/\\0*
s/\1	change.txt	/*s\/\\1*
s/\2	change.txt	/*s\/\\2*
s/\3	change.txt	/*s\/\\3*
s/\9	change.txt	/*s\/\\9*
s/\<CR>	change.txt	/*s\/\\<CR>*
s/\=	change.txt	/*s\/\\=*
s/\E	change.txt	/*s\/\\E*
s/\L	change.txt	/*s\/\\L*
s/\U	change.txt	/*s\/\\U*
s/\\	change.txt	/*s\/\\\\*
s/\b	change.txt	/*s\/\\b*
s/\e	change.txt	/*s\/\\e*
s/\l	change.txt	/*s\/\\l*
s/\n	change.txt	/*s\/\\n*
s/\r	change.txt	/*s\/\\r*
s/\t	change.txt	/*s\/\\t*
s/\u	change.txt	/*s\/\\u*
s/\~	change.txt	/*s\/\\~*
s:netrw_passwd	pi_netrw.txt	/*s:netrw_passwd*
s:var	eval.txt	/*s:var*
s<CR>	change.txt	/*s<CR>*
sandbox	eval.txt	/*sandbox*
sandbox-option	eval.txt	/*sandbox-option*
save-file	editing.txt	/*save-file*
save-settings	starting.txt	/*save-settings*
scheme.vim	syntax.txt	/*scheme.vim*
scp	pi_netrw.txt	/*scp*
screenattr()	eval.txt	/*screenattr()*
screenchar()	eval.txt	/*screenchar()*
screencol()	eval.txt	/*screencol()*
screenrow()	eval.txt	/*screenrow()*
script	usr_41.txt	/*script*
script-here	if_perl.txt	/*script-here*
script-local	map.txt	/*script-local*
script-variable	eval.txt	/*script-variable*
scriptnames-dictionary	eval.txt	/*scriptnames-dictionary*
scriptout-changed	version4.txt	/*scriptout-changed*
scroll-binding	scroll.txt	/*scroll-binding*
scroll-cursor	scroll.txt	/*scroll-cursor*
scroll-down	scroll.txt	/*scroll-down*
scroll-horizontal	scroll.txt	/*scroll-horizontal*
scroll-insert	tips.txt	/*scroll-insert*
scroll-mouse-wheel	scroll.txt	/*scroll-mouse-wheel*
scroll-region	term.txt	/*scroll-region*
scroll-smooth	tips.txt	/*scroll-smooth*
scroll-up	scroll.txt	/*scroll-up*
scroll.txt	scroll.txt	/*scroll.txt*
scrollbind-quickadj	scroll.txt	/*scrollbind-quickadj*
scrollbind-relative	scroll.txt	/*scrollbind-relative*
scrolling	scroll.txt	/*scrolling*
scrollstart-variable	eval.txt	/*scrollstart-variable*
sdl.vim	syntax.txt	/*sdl.vim*
search()	eval.txt	/*search()*
search()-sub-match	eval.txt	/*search()-sub-match*
search-commands	pattern.txt	/*search-commands*
search-offset	pattern.txt	/*search-offset*
search-pattern	pattern.txt	/*search-pattern*
search-range	pattern.txt	/*search-range*
search-replace	change.txt	/*search-replace*
searchdecl()	eval.txt	/*searchdecl()*
searchforward-variable	eval.txt	/*searchforward-variable*
searchpair()	eval.txt	/*searchpair()*
searchpairpos()	eval.txt	/*searchpairpos()*
searchpos()	eval.txt	/*searchpos()*
section	motion.txt	/*section*
sed.vim	syntax.txt	/*sed.vim*
self	eval.txt	/*self*
send-money	sponsor.txt	/*send-money*
send-to-menu	gui_w32.txt	/*send-to-menu*
sendto	gui_w32.txt	/*sendto*
sentence	motion.txt	/*sentence*
server-functions	usr_41.txt	/*server-functions*
server2client()	eval.txt	/*server2client()*
serverlist()	eval.txt	/*serverlist()*
servername-variable	eval.txt	/*servername-variable*
session-file	starting.txt	/*session-file*
set-option	options.txt	/*set-option*
set-spc-auto	spell.txt	/*set-spc-auto*
setbufvar()	eval.txt	/*setbufvar()*
setcharsearch()	eval.txt	/*setcharsearch()*
setcmdpos()	eval.txt	/*setcmdpos()*
setfperm()	eval.txt	/*setfperm()*
setline()	eval.txt	/*setline()*
setloclist()	eval.txt	/*setloclist()*
setmatches()	eval.txt	/*setmatches()*
setpos()	eval.txt	/*setpos()*
setqflist()	eval.txt	/*setqflist()*
setreg()	eval.txt	/*setreg()*
settabvar()	eval.txt	/*settabvar()*
settabwinvar()	eval.txt	/*settabwinvar()*
setting-guifont	gui.txt	/*setting-guifont*
setting-guitablabel	tabpage.txt	/*setting-guitablabel*
setting-tabline	tabpage.txt	/*setting-tabline*
setuid	change.txt	/*setuid*
setwinvar()	eval.txt	/*setwinvar()*
sftp	pi_netrw.txt	/*sftp*
sgml.vim	syntax.txt	/*sgml.vim*
sgr-mouse	options.txt	/*sgr-mouse*
sh-awk	syntax.txt	/*sh-awk*
sh-embed	syntax.txt	/*sh-embed*
sh.vim	syntax.txt	/*sh.vim*
sha256()	eval.txt	/*sha256()*
shell-window	tips.txt	/*shell-window*
shell_error-variable	eval.txt	/*shell_error-variable*
shellescape()	eval.txt	/*shellescape()*
shift	intro.txt	/*shift*
shift-left-right	change.txt	/*shift-left-right*
shiftwidth()	eval.txt	/*shiftwidth()*
short-name-changed	version4.txt	/*short-name-changed*
showing-menus	gui.txt	/*showing-menus*
sign-commands	sign.txt	/*sign-commands*
sign-intro	sign.txt	/*sign-intro*
sign-support	sign.txt	/*sign-support*
sign.txt	sign.txt	/*sign.txt*
signs	sign.txt	/*signs*
simple-change	change.txt	/*simple-change*
simplify()	eval.txt	/*simplify()*
simulated-command	vi_diff.txt	/*simulated-command*
sin()	eval.txt	/*sin()*
single-repeat	repeat.txt	/*single-repeat*
sinh()	eval.txt	/*sinh()*
skeleton	autocmd.txt	/*skeleton*
skip_defaults_vim	starting.txt	/*skip_defaults_vim*
slice	eval.txt	/*slice*
slow-fast-terminal	term.txt	/*slow-fast-terminal*
slow-start	starting.txt	/*slow-start*
slow-terminal	term.txt	/*slow-terminal*
socket-interface	channel.txt	/*socket-interface*
sort()	eval.txt	/*sort()*
sorting	change.txt	/*sorting*
soundfold()	eval.txt	/*soundfold()*
space	intro.txt	/*space*
spec-customizing	pi_spec.txt	/*spec-customizing*
spec-how-to-use-it	pi_spec.txt	/*spec-how-to-use-it*
spec-setting-a-map	pi_spec.txt	/*spec-setting-a-map*
spec_chglog_format	pi_spec.txt	/*spec_chglog_format*
spec_chglog_prepend	pi_spec.txt	/*spec_chglog_prepend*
spec_chglog_release_info	pi_spec.txt	/*spec_chglog_release_info*
special-buffers	windows.txt	/*special-buffers*
speed-up	tips.txt	/*speed-up*
spell	spell.txt	/*spell*
spell-ACCENT	spell.txt	/*spell-ACCENT*
spell-AUTHOR	spell.txt	/*spell-AUTHOR*
spell-BAD	spell.txt	/*spell-BAD*
spell-BREAK	spell.txt	/*spell-BREAK*
spell-CHECKCOMPOUNDCASE	spell.txt	/*spell-CHECKCOMPOUNDCASE*
spell-CHECKCOMPOUNDDUP	spell.txt	/*spell-CHECKCOMPOUNDDUP*
spell-CHECKCOMPOUNDPATTERN	spell.txt	/*spell-CHECKCOMPOUNDPATTERN*
spell-CHECKCOMPOUNDREP	spell.txt	/*spell-CHECKCOMPOUNDREP*
spell-CHECKCOMPOUNDTRIPLE	spell.txt	/*spell-CHECKCOMPOUNDTRIPLE*
spell-CIRCUMFIX	spell.txt	/*spell-CIRCUMFIX*
spell-COMMON	spell.txt	/*spell-COMMON*
spell-COMPLEXPREFIXES	spell.txt	/*spell-COMPLEXPREFIXES*
spell-COMPOUND	spell.txt	/*spell-COMPOUND*
spell-COMPOUNDBEGIN	spell.txt	/*spell-COMPOUNDBEGIN*
spell-COMPOUNDEND	spell.txt	/*spell-COMPOUNDEND*
spell-COMPOUNDFIRST	spell.txt	/*spell-COMPOUNDFIRST*
spell-COMPOUNDFLAG	spell.txt	/*spell-COMPOUNDFLAG*
spell-COMPOUNDFORBIDFLAG	spell.txt	/*spell-COMPOUNDFORBIDFLAG*
spell-COMPOUNDMIDDLE	spell.txt	/*spell-COMPOUNDMIDDLE*
spell-COMPOUNDMIN	spell.txt	/*spell-COMPOUNDMIN*
spell-COMPOUNDPERMITFLAG	spell.txt	/*spell-COMPOUNDPERMITFLAG*
spell-COMPOUNDROOT	spell.txt	/*spell-COMPOUNDROOT*
spell-COMPOUNDRULE	spell.txt	/*spell-COMPOUNDRULE*
spell-COMPOUNDRULES	spell.txt	/*spell-COMPOUNDRULES*
spell-COMPOUNDSYLLABLE	spell.txt	/*spell-COMPOUNDSYLLABLE*
spell-COMPOUNDSYLMAX	spell.txt	/*spell-COMPOUNDSYLMAX*
spell-COMPOUNDWORDMAX	spell.txt	/*spell-COMPOUNDWORDMAX*
spell-COPYRIGHT	spell.txt	/*spell-COPYRIGHT*
spell-EMAIL	spell.txt	/*spell-EMAIL*
spell-FLAG	spell.txt	/*spell-FLAG*
spell-FOL	spell.txt	/*spell-FOL*
spell-FORBIDDENWORD	spell.txt	/*spell-FORBIDDENWORD*
spell-HOME	spell.txt	/*spell-HOME*
spell-IGNOREEXTRA	spell.txt	/*spell-IGNOREEXTRA*
spell-KEEPCASE	spell.txt	/*spell-KEEPCASE*
spell-KEY	spell.txt	/*spell-KEY*
spell-LANG	spell.txt	/*spell-LANG*
spell-LEMMA_PRESENT	spell.txt	/*spell-LEMMA_PRESENT*
spell-LOW	spell.txt	/*spell-LOW*
spell-MAP	spell.txt	/*spell-MAP*
spell-MAXNGRAMSUGS	spell.txt	/*spell-MAXNGRAMSUGS*
spell-NAME	spell.txt	/*spell-NAME*
spell-NEEDAFFIX	spell.txt	/*spell-NEEDAFFIX*
spell-NEEDCOMPOUND	spell.txt	/*spell-NEEDCOMPOUND*
spell-NOBREAK	spell.txt	/*spell-NOBREAK*
spell-NOCOMPOUNDSUGS	spell.txt	/*spell-NOCOMPOUNDSUGS*
spell-NOSPLITSUGS	spell.txt	/*spell-NOSPLITSUGS*
spell-NOSUGFILE	spell.txt	/*spell-NOSUGFILE*
spell-NOSUGGEST	spell.txt	/*spell-NOSUGGEST*
spell-ONLYINCOMPOUND	spell.txt	/*spell-ONLYINCOMPOUND*
spell-PFX	spell.txt	/*spell-PFX*
spell-PFXPOSTPONE	spell.txt	/*spell-PFXPOSTPONE*
spell-PSEUDOROOT	spell.txt	/*spell-PSEUDOROOT*
spell-RARE	spell.txt	/*spell-RARE*
spell-REP	spell.txt	/*spell-REP*
spell-SAL	spell.txt	/*spell-SAL*
spell-SET	spell.txt	/*spell-SET*
spell-SFX	spell.txt	/*spell-SFX*
spell-SLASH	spell.txt	/*spell-SLASH*
spell-SOFOFROM	spell.txt	/*spell-SOFOFROM*
spell-SOFOTO	spell.txt	/*spell-SOFOTO*
spell-SUGSWITHDOTS	spell.txt	/*spell-SUGSWITHDOTS*
spell-SYLLABLE	spell.txt	/*spell-SYLLABLE*
spell-SYLLABLENUM	spell.txt	/*spell-SYLLABLENUM*
spell-SpellFileMissing	spell.txt	/*spell-SpellFileMissing*
spell-TRY	spell.txt	/*spell-TRY*
spell-UPP	spell.txt	/*spell-UPP*
spell-VERSION	spell.txt	/*spell-VERSION*
spell-WORDCHARS	spell.txt	/*spell-WORDCHARS*
spell-aff-format	spell.txt	/*spell-aff-format*
spell-affix-chars	spell.txt	/*spell-affix-chars*
spell-affix-comment	spell.txt	/*spell-affix-comment*
spell-affix-flags	spell.txt	/*spell-affix-flags*
spell-affix-mbyte	spell.txt	/*spell-affix-mbyte*
spell-affix-not-supported	spell.txt	/*spell-affix-not-supported*
spell-affix-vim	spell.txt	/*spell-affix-vim*
spell-cjk	spell.txt	/*spell-cjk*
spell-compound	spell.txt	/*spell-compound*
spell-dic-format	spell.txt	/*spell-dic-format*
spell-double-scoring	spell.txt	/*spell-double-scoring*
spell-file-format	spell.txt	/*spell-file-format*
spell-functions	usr_41.txt	/*spell-functions*
spell-german	spell.txt	/*spell-german*
spell-load	spell.txt	/*spell-load*
spell-midword	spell.txt	/*spell-midword*
spell-mkspell	spell.txt	/*spell-mkspell*
spell-quickstart	spell.txt	/*spell-quickstart*
spell-remarks	spell.txt	/*spell-remarks*
spell-russian	spell.txt	/*spell-russian*
spell-sug-file	spell.txt	/*spell-sug-file*
spell-syntax	spell.txt	/*spell-syntax*
spell-wordlist-format	spell.txt	/*spell-wordlist-format*
spell-yiddish	spell.txt	/*spell-yiddish*
spell.txt	spell.txt	/*spell.txt*
spellbadword()	eval.txt	/*spellbadword()*
spellfile-cleanup	spell.txt	/*spellfile-cleanup*
spellfile.vim	spell.txt	/*spellfile.vim*
spellsuggest()	eval.txt	/*spellsuggest()*
split()	eval.txt	/*split()*
splitfind	windows.txt	/*splitfind*
splitview	windows.txt	/*splitview*
sponsor	sponsor.txt	/*sponsor*
sponsor-faq	sponsor.txt	/*sponsor-faq*
sponsor.txt	sponsor.txt	/*sponsor.txt*
spoon	os_unix.txt	/*spoon*
spup.vim	syntax.txt	/*spup.vim*
sql-adding-dialects	ft_sql.txt	/*sql-adding-dialects*
sql-completion	ft_sql.txt	/*sql-completion*
sql-completion-columns	ft_sql.txt	/*sql-completion-columns*
sql-completion-customization	ft_sql.txt	/*sql-completion-customization*
sql-completion-dynamic	ft_sql.txt	/*sql-completion-dynamic*
sql-completion-filetypes	ft_sql.txt	/*sql-completion-filetypes*
sql-completion-maps	ft_sql.txt	/*sql-completion-maps*
sql-completion-procedures	ft_sql.txt	/*sql-completion-procedures*
sql-completion-static	ft_sql.txt	/*sql-completion-static*
sql-completion-tables	ft_sql.txt	/*sql-completion-tables*
sql-completion-tutorial	ft_sql.txt	/*sql-completion-tutorial*
sql-completion-views	ft_sql.txt	/*sql-completion-views*
sql-dialects	ft_sql.txt	/*sql-dialects*
sql-macros	ft_sql.txt	/*sql-macros*
sql-matchit	ft_sql.txt	/*sql-matchit*
sql-navigation	ft_sql.txt	/*sql-navigation*
sql-object-motions	ft_sql.txt	/*sql-object-motions*
sql-predefined-objects	ft_sql.txt	/*sql-predefined-objects*
sql-type-default	ft_sql.txt	/*sql-type-default*
sql-types	ft_sql.txt	/*sql-types*
sql.vim	syntax.txt	/*sql.vim*
sqlanywhere	ft_sql.txt	/*sqlanywhere*
sqlanywhere.vim	syntax.txt	/*sqlanywhere.vim*
sqlgettype	ft_sql.txt	/*sqlgettype*
sqlinformix.vim	syntax.txt	/*sqlinformix.vim*
sqlj	ft_sql.txt	/*sqlj*
sqlserver	ft_sql.txt	/*sqlserver*
sqlsettype	ft_sql.txt	/*sqlsettype*
sqrt()	eval.txt	/*sqrt()*
sscanf	eval.txt	/*sscanf*
standard-plugin	usr_05.txt	/*standard-plugin*
standard-plugin-list	help.txt	/*standard-plugin-list*
standout	syntax.txt	/*standout*
star	pattern.txt	/*star*
starstar	editing.txt	/*starstar*
starstar-wildcard	editing.txt	/*starstar-wildcard*
start-of-file	pattern.txt	/*start-of-file*
starting	starting.txt	/*starting*
starting-amiga	starting.txt	/*starting-amiga*
starting.txt	starting.txt	/*starting.txt*
startup	starting.txt	/*startup*
startup-options	starting.txt	/*startup-options*
startup-terminal	term.txt	/*startup-terminal*
static-tag	tagsrch.txt	/*static-tag*
status-line	windows.txt	/*status-line*
statusmsg-variable	eval.txt	/*statusmsg-variable*
str2float()	eval.txt	/*str2float()*
str2nr()	eval.txt	/*str2nr()*
strcasestr()	eval.txt	/*strcasestr()*
strcharpart()	eval.txt	/*strcharpart()*
strchars()	eval.txt	/*strchars()*
strchr()	eval.txt	/*strchr()*
strcspn()	eval.txt	/*strcspn()*
strdisplaywidth()	eval.txt	/*strdisplaywidth()*
strftime()	eval.txt	/*strftime()*
strgetchar()	eval.txt	/*strgetchar()*
stridx()	eval.txt	/*stridx()*
string	eval.txt	/*string*
string()	eval.txt	/*string()*
string-functions	usr_41.txt	/*string-functions*
string-match	eval.txt	/*string-match*
strlen()	eval.txt	/*strlen()*
strpart()	eval.txt	/*strpart()*
strpbrk()	eval.txt	/*strpbrk()*
strrchr()	eval.txt	/*strrchr()*
strridx()	eval.txt	/*strridx()*
strspn()	eval.txt	/*strspn()*
strstr()	eval.txt	/*strstr()*
strtrans()	eval.txt	/*strtrans()*
strwidth()	eval.txt	/*strwidth()*
style-changes	develop.txt	/*style-changes*
style-compiler	develop.txt	/*style-compiler*
style-examples	develop.txt	/*style-examples*
style-functions	develop.txt	/*style-functions*
style-names	develop.txt	/*style-names*
style-spaces	develop.txt	/*style-spaces*
style-various	develop.txt	/*style-various*
sub-menu-priority	gui.txt	/*sub-menu-priority*
sub-replace-\=	change.txt	/*sub-replace-\\=*
sub-replace-expression	change.txt	/*sub-replace-expression*
sub-replace-special	change.txt	/*sub-replace-special*
sublist	eval.txt	/*sublist*
submatch()	eval.txt	/*submatch()*
subscribe-maillist	intro.txt	/*subscribe-maillist*
subscript	eval.txt	/*subscript*
substitute()	eval.txt	/*substitute()*
substitute-CR	version6.txt	/*substitute-CR*
suffixes	cmdline.txt	/*suffixes*
suspend	starting.txt	/*suspend*
swap-exists-choices	usr_11.txt	/*swap-exists-choices*
swap-file	recover.txt	/*swap-file*
swapchoice-variable	eval.txt	/*swapchoice-variable*
swapcommand-variable	eval.txt	/*swapcommand-variable*
swapfile-changed	version4.txt	/*swapfile-changed*
swapname-variable	eval.txt	/*swapname-variable*
sybase	ft_sql.txt	/*sybase*
syn-sync-grouphere	syntax.txt	/*syn-sync-grouphere*
syn-sync-groupthere	syntax.txt	/*syn-sync-groupthere*
syn-sync-linecont	syntax.txt	/*syn-sync-linecont*
synID()	eval.txt	/*synID()*
synIDattr()	eval.txt	/*synIDattr()*
synIDtrans()	eval.txt	/*synIDtrans()*
syncbind	scroll.txt	/*syncbind*
syncolor	syntax.txt	/*syncolor*
synconcealed()	eval.txt	/*synconcealed()*
synload-1	syntax.txt	/*synload-1*
synload-2	syntax.txt	/*synload-2*
synload-3	syntax.txt	/*synload-3*
synload-4	syntax.txt	/*synload-4*
synload-5	syntax.txt	/*synload-5*
synload-6	syntax.txt	/*synload-6*
synstack()	eval.txt	/*synstack()*
syntax	syntax.txt	/*syntax*
syntax-functions	usr_41.txt	/*syntax-functions*
syntax-highlighting	syntax.txt	/*syntax-highlighting*
syntax-loading	syntax.txt	/*syntax-loading*
syntax-printing	usr_06.txt	/*syntax-printing*
syntax.txt	syntax.txt	/*syntax.txt*
syntax_cmd	syntax.txt	/*syntax_cmd*
sys-file-list	help.txt	/*sys-file-list*
sysmouse	term.txt	/*sysmouse*
system()	eval.txt	/*system()*
system-functions	usr_41.txt	/*system-functions*
system-vimrc	starting.txt	/*system-vimrc*
systemlist()	eval.txt	/*systemlist()*
s~	change.txt	/*s~*
t	motion.txt	/*t*
t:	eval.txt	/*t:*
t:var	eval.txt	/*t:var*
t_#2	term.txt	/*t_#2*
t_#4	term.txt	/*t_#4*
t_%1	term.txt	/*t_%1*
t_%i	term.txt	/*t_%i*
t_&8	term.txt	/*t_&8*
t_8b	term.txt	/*t_8b*
t_8f	term.txt	/*t_8f*
t_@7	term.txt	/*t_@7*
t_AB	term.txt	/*t_AB*
t_AF	term.txt	/*t_AF*
t_AL	term.txt	/*t_AL*
t_CS	term.txt	/*t_CS*
t_CV	term.txt	/*t_CV*
t_Ce	term.txt	/*t_Ce*
t_Co	term.txt	/*t_Co*
t_Cs	term.txt	/*t_Cs*
t_DL	term.txt	/*t_DL*
t_EI	term.txt	/*t_EI*
t_F1	term.txt	/*t_F1*
t_F2	term.txt	/*t_F2*
t_F3	term.txt	/*t_F3*
t_F4	term.txt	/*t_F4*
t_F5	term.txt	/*t_F5*
t_F6	term.txt	/*t_F6*
t_F7	term.txt	/*t_F7*
t_F8	term.txt	/*t_F8*
t_F9	term.txt	/*t_F9*
t_IE	term.txt	/*t_IE*
t_IS	term.txt	/*t_IS*
t_K1	term.txt	/*t_K1*
t_K3	term.txt	/*t_K3*
t_K4	term.txt	/*t_K4*
t_K5	term.txt	/*t_K5*
t_K6	term.txt	/*t_K6*
t_K7	term.txt	/*t_K7*
t_K8	term.txt	/*t_K8*
t_K9	term.txt	/*t_K9*
t_KA	term.txt	/*t_KA*
t_KB	term.txt	/*t_KB*
t_KC	term.txt	/*t_KC*
t_KD	term.txt	/*t_KD*
t_KE	term.txt	/*t_KE*
t_KF	term.txt	/*t_KF*
t_KG	term.txt	/*t_KG*
t_KH	term.txt	/*t_KH*
t_KI	term.txt	/*t_KI*
t_KJ	term.txt	/*t_KJ*
t_KK	term.txt	/*t_KK*
t_KL	term.txt	/*t_KL*
t_RB	term.txt	/*t_RB*
t_RI	term.txt	/*t_RI*
t_RV	term.txt	/*t_RV*
t_SI	term.txt	/*t_SI*
t_SR	term.txt	/*t_SR*
t_Sb	term.txt	/*t_Sb*
t_Sf	term.txt	/*t_Sf*
t_WP	term.txt	/*t_WP*
t_WS	term.txt	/*t_WS*
t_ZH	term.txt	/*t_ZH*
t_ZR	term.txt	/*t_ZR*
t_al	term.txt	/*t_al*
t_bc	term.txt	/*t_bc*
t_bool-variable	eval.txt	/*t_bool-variable*
t_cd	term.txt	/*t_cd*
t_cdl	version4.txt	/*t_cdl*
t_ce	term.txt	/*t_ce*
t_channel-variable	eval.txt	/*t_channel-variable*
t_ci	version4.txt	/*t_ci*
t_cil	version4.txt	/*t_cil*
t_cl	term.txt	/*t_cl*
t_cm	term.txt	/*t_cm*
t_cri	version4.txt	/*t_cri*
t_cs	term.txt	/*t_cs*
t_csc	version4.txt	/*t_csc*
t_cv	version4.txt	/*t_cv*
t_cvv	version4.txt	/*t_cvv*
t_da	term.txt	/*t_da*
t_db	term.txt	/*t_db*
t_dict-variable	eval.txt	/*t_dict-variable*
t_dl	term.txt	/*t_dl*
t_ed	version4.txt	/*t_ed*
t_el	version4.txt	/*t_el*
t_f1	version4.txt	/*t_f1*
t_f10	version4.txt	/*t_f10*
t_f2	version4.txt	/*t_f2*
t_f3	version4.txt	/*t_f3*
t_f4	version4.txt	/*t_f4*
t_f5	version4.txt	/*t_f5*
t_f6	version4.txt	/*t_f6*
t_f7	version4.txt	/*t_f7*
t_f8	version4.txt	/*t_f8*
t_f9	version4.txt	/*t_f9*
t_float-variable	eval.txt	/*t_float-variable*
t_fs	term.txt	/*t_fs*
t_func-variable	eval.txt	/*t_func-variable*
t_help	version4.txt	/*t_help*
t_il	version4.txt	/*t_il*
t_job-variable	eval.txt	/*t_job-variable*
t_k1	term.txt	/*t_k1*
t_k2	term.txt	/*t_k2*
t_k3	term.txt	/*t_k3*
t_k4	term.txt	/*t_k4*
t_k5	term.txt	/*t_k5*
t_k6	term.txt	/*t_k6*
t_k7	term.txt	/*t_k7*
t_k8	term.txt	/*t_k8*
t_k9	term.txt	/*t_k9*
t_k;	term.txt	/*t_k;*
t_kB	term.txt	/*t_kB*
t_kD	term.txt	/*t_kD*
t_kI	term.txt	/*t_kI*
t_kN	term.txt	/*t_kN*
t_kP	term.txt	/*t_kP*
t_kb	term.txt	/*t_kb*
t_kd	term.txt	/*t_kd*
t_ke	term.txt	/*t_ke*
t_kh	term.txt	/*t_kh*
t_kl	term.txt	/*t_kl*
t_kr	term.txt	/*t_kr*
t_ks	term.txt	/*t_ks*
t_ku	term.txt	/*t_ku*
t_le	term.txt	/*t_le*
t_list-variable	eval.txt	/*t_list-variable*
t_mb	term.txt	/*t_mb*
t_md	term.txt	/*t_md*
t_me	term.txt	/*t_me*
t_mr	term.txt	/*t_mr*
t_ms	term.txt	/*t_ms*
t_nd	term.txt	/*t_nd*
t_none-variable	eval.txt	/*t_none-variable*
t_number-variable	eval.txt	/*t_number-variable*
t_op	term.txt	/*t_op*
t_se	term.txt	/*t_se*
t_sf1	version4.txt	/*t_sf1*
t_sf10	version4.txt	/*t_sf10*
t_sf2	version4.txt	/*t_sf2*
t_sf3	version4.txt	/*t_sf3*
t_sf4	version4.txt	/*t_sf4*
t_sf5	version4.txt	/*t_sf5*
t_sf6	version4.txt	/*t_sf6*
t_sf7	version4.txt	/*t_sf7*
t_sf8	version4.txt	/*t_sf8*
t_sf9	version4.txt	/*t_sf9*
t_skd	version4.txt	/*t_skd*
t_skl	version4.txt	/*t_skl*
t_skr	version4.txt	/*t_skr*
t_sku	version4.txt	/*t_sku*
t_so	term.txt	/*t_so*
t_sr	term.txt	/*t_sr*
t_star7	term.txt	/*t_star7*
t_string-variable	eval.txt	/*t_string-variable*
t_tb	version4.txt	/*t_tb*
t_te	term.txt	/*t_te*
t_ti	term.txt	/*t_ti*
t_tp	version4.txt	/*t_tp*
t_ts	term.txt	/*t_ts*
t_ts_old	version4.txt	/*t_ts_old*
t_u7	term.txt	/*t_u7*
t_ue	term.txt	/*t_ue*
t_undo	version4.txt	/*t_undo*
t_us	term.txt	/*t_us*
t_ut	term.txt	/*t_ut*
t_vb	term.txt	/*t_vb*
t_ve	term.txt	/*t_ve*
t_vi	term.txt	/*t_vi*
t_vs	term.txt	/*t_vs*
t_xn	term.txt	/*t_xn*
t_xs	term.txt	/*t_xs*
tab	intro.txt	/*tab*
tab-page	tabpage.txt	/*tab-page*
tab-page-commands	tabpage.txt	/*tab-page-commands*
tab-page-intro	tabpage.txt	/*tab-page-intro*
tab-page-other	tabpage.txt	/*tab-page-other*
tabline-menu	tabpage.txt	/*tabline-menu*
tabnew-autocmd	tabpage.txt	/*tabnew-autocmd*
tabpage	tabpage.txt	/*tabpage*
tabpage-variable	eval.txt	/*tabpage-variable*
tabpage.txt	tabpage.txt	/*tabpage.txt*
tabpagebuflist()	eval.txt	/*tabpagebuflist()*
tabpagenr()	eval.txt	/*tabpagenr()*
tabpagewinnr()	eval.txt	/*tabpagewinnr()*
tag	tagsrch.txt	/*tag*
tag-!	tagsrch.txt	/*tag-!*
tag-any-white	tagsrch.txt	/*tag-any-white*
tag-binary-search	tagsrch.txt	/*tag-binary-search*
tag-blocks	motion.txt	/*tag-blocks*
tag-commands	tagsrch.txt	/*tag-commands*
tag-details	tagsrch.txt	/*tag-details*
tag-highlight	syntax.txt	/*tag-highlight*
tag-matchlist	tagsrch.txt	/*tag-matchlist*
tag-old-static	tagsrch.txt	/*tag-old-static*
tag-overloaded	version5.txt	/*tag-overloaded*
tag-preview	tagsrch.txt	/*tag-preview*
tag-priority	tagsrch.txt	/*tag-priority*
tag-regexp	tagsrch.txt	/*tag-regexp*
tag-search	tagsrch.txt	/*tag-search*
tag-security	tagsrch.txt	/*tag-security*
tag-skip-file	tagsrch.txt	/*tag-skip-file*
tag-stack	tagsrch.txt	/*tag-stack*
tagfiles()	eval.txt	/*tagfiles()*
taglist()	eval.txt	/*taglist()*
tags	tagsrch.txt	/*tags*
tags-and-searches	tagsrch.txt	/*tags-and-searches*
tags-file-changed	version5.txt	/*tags-file-changed*
tags-file-format	tagsrch.txt	/*tags-file-format*
tags-option	tagsrch.txt	/*tags-option*
tagsrch.txt	tagsrch.txt	/*tagsrch.txt*
tagstack	tagsrch.txt	/*tagstack*
tan()	eval.txt	/*tan()*
tanh()	eval.txt	/*tanh()*
tar	pi_tar.txt	/*tar*
tar-contents	pi_tar.txt	/*tar-contents*
tar-copyright	pi_tar.txt	/*tar-copyright*
tar-history	pi_tar.txt	/*tar-history*
tar-manual	pi_tar.txt	/*tar-manual*
tar-options	pi_tar.txt	/*tar-options*
tar-usage	pi_tar.txt	/*tar-usage*
tcl	if_tcl.txt	/*tcl*
tcl-beep	if_tcl.txt	/*tcl-beep*
tcl-buffer	if_tcl.txt	/*tcl-buffer*
tcl-buffer-append	if_tcl.txt	/*tcl-buffer-append*
tcl-buffer-cmds	if_tcl.txt	/*tcl-buffer-cmds*
tcl-buffer-command	if_tcl.txt	/*tcl-buffer-command*
tcl-buffer-count	if_tcl.txt	/*tcl-buffer-count*
tcl-buffer-delcmd	if_tcl.txt	/*tcl-buffer-delcmd*
tcl-buffer-delete	if_tcl.txt	/*tcl-buffer-delete*
tcl-buffer-expr	if_tcl.txt	/*tcl-buffer-expr*
tcl-buffer-get	if_tcl.txt	/*tcl-buffer-get*
tcl-buffer-insert	if_tcl.txt	/*tcl-buffer-insert*
tcl-buffer-last	if_tcl.txt	/*tcl-buffer-last*
tcl-buffer-mark	if_tcl.txt	/*tcl-buffer-mark*
tcl-buffer-option	if_tcl.txt	/*tcl-buffer-option*
tcl-buffer-set	if_tcl.txt	/*tcl-buffer-set*
tcl-buffer-windows	if_tcl.txt	/*tcl-buffer-windows*
tcl-bugs	if_tcl.txt	/*tcl-bugs*
tcl-command	if_tcl.txt	/*tcl-command*
tcl-commands	if_tcl.txt	/*tcl-commands*
tcl-dynamic	if_tcl.txt	/*tcl-dynamic*
tcl-ex-commands	if_tcl.txt	/*tcl-ex-commands*
tcl-examples	if_tcl.txt	/*tcl-examples*
tcl-expr	if_tcl.txt	/*tcl-expr*
tcl-linenumbers	if_tcl.txt	/*tcl-linenumbers*
tcl-misc	if_tcl.txt	/*tcl-misc*
tcl-option	if_tcl.txt	/*tcl-option*
tcl-output	if_tcl.txt	/*tcl-output*
tcl-var-current	if_tcl.txt	/*tcl-var-current*
tcl-var-lbase	if_tcl.txt	/*tcl-var-lbase*
tcl-var-line	if_tcl.txt	/*tcl-var-line*
tcl-var-lnum	if_tcl.txt	/*tcl-var-lnum*
tcl-var-range	if_tcl.txt	/*tcl-var-range*
tcl-variables	if_tcl.txt	/*tcl-variables*
tcl-window	if_tcl.txt	/*tcl-window*
tcl-window-buffer	if_tcl.txt	/*tcl-window-buffer*
tcl-window-cmds	if_tcl.txt	/*tcl-window-cmds*
tcl-window-command	if_tcl.txt	/*tcl-window-command*
tcl-window-cursor	if_tcl.txt	/*tcl-window-cursor*
tcl-window-delcmd	if_tcl.txt	/*tcl-window-delcmd*
tcl-window-expr	if_tcl.txt	/*tcl-window-expr*
tcl-window-height	if_tcl.txt	/*tcl-window-height*
tcl-window-option	if_tcl.txt	/*tcl-window-option*
tcsh-style	cmdline.txt	/*tcsh-style*
tcsh.vim	syntax.txt	/*tcsh.vim*
tear-off-menus	gui.txt	/*tear-off-menus*
telnet-CTRL-]	tagsrch.txt	/*telnet-CTRL-]*
temp-file-name	eval.txt	/*temp-file-name*
tempfile	change.txt	/*tempfile*
template	autocmd.txt	/*template*
tempname()	eval.txt	/*tempname()*
term-dependent-settings	term.txt	/*term-dependent-settings*
term-list	syntax.txt	/*term-list*
term.txt	term.txt	/*term.txt*
termcap	term.txt	/*termcap*
termcap-changed	version4.txt	/*termcap-changed*
termcap-colors	term.txt	/*termcap-colors*
termcap-cursor-color	term.txt	/*termcap-cursor-color*
termcap-cursor-shape	term.txt	/*termcap-cursor-shape*
termcap-options	term.txt	/*termcap-options*
termcap-title	term.txt	/*termcap-title*
terminal-colors	os_unix.txt	/*terminal-colors*
terminal-info	term.txt	/*terminal-info*
terminal-options	term.txt	/*terminal-options*
terminfo	term.txt	/*terminfo*
termresponse-variable	eval.txt	/*termresponse-variable*
test-functions	usr_41.txt	/*test-functions*
test_alloc_fail()	eval.txt	/*test_alloc_fail()*
test_autochdir()	eval.txt	/*test_autochdir()*
test_disable_char_avail()	eval.txt	/*test_disable_char_avail()*
test_garbagecollect_now()	eval.txt	/*test_garbagecollect_now()*
test_null_channel()	eval.txt	/*test_null_channel()*
test_null_dict()	eval.txt	/*test_null_dict()*
test_null_job()	eval.txt	/*test_null_job()*
test_null_list()	eval.txt	/*test_null_list()*
test_null_partial()	eval.txt	/*test_null_partial()*
test_null_string()	eval.txt	/*test_null_string()*
test_settime()	eval.txt	/*test_settime()*
testing	eval.txt	/*testing*
testing-variable	eval.txt	/*testing-variable*
tex-cchar	syntax.txt	/*tex-cchar*
tex-cole	syntax.txt	/*tex-cole*
tex-conceal	syntax.txt	/*tex-conceal*
tex-error	syntax.txt	/*tex-error*
tex-folding	syntax.txt	/*tex-folding*
tex-math	syntax.txt	/*tex-math*
tex-morecommands	syntax.txt	/*tex-morecommands*
tex-nospell	syntax.txt	/*tex-nospell*
tex-package	syntax.txt	/*tex-package*
tex-runon	syntax.txt	/*tex-runon*
tex-slow	syntax.txt	/*tex-slow*
tex-stopzone	syntax.txt	/*tex-stopzone*
tex-style	syntax.txt	/*tex-style*
tex-supersub	syntax.txt	/*tex-supersub*
tex-sync	syntax.txt	/*tex-sync*
tex-verb	syntax.txt	/*tex-verb*
tex.vim	syntax.txt	/*tex.vim*
text-functions	usr_41.txt	/*text-functions*
text-objects	motion.txt	/*text-objects*
text-objects-changed	version5.txt	/*text-objects-changed*
textlock	eval.txt	/*textlock*
tf.vim	syntax.txt	/*tf.vim*
this_session-variable	eval.txt	/*this_session-variable*
throw-catch	eval.txt	/*throw-catch*
throw-expression	eval.txt	/*throw-expression*
throw-from-catch	eval.txt	/*throw-from-catch*
throw-variables	eval.txt	/*throw-variables*
throwpoint-variable	eval.txt	/*throwpoint-variable*
time-functions	usr_41.txt	/*time-functions*
timer	eval.txt	/*timer*
timer-functions	usr_41.txt	/*timer-functions*
timer_info()	eval.txt	/*timer_info()*
timer_pause()	eval.txt	/*timer_pause()*
timer_start()	eval.txt	/*timer_start()*
timer_stop()	eval.txt	/*timer_stop()*
timer_stopall()	eval.txt	/*timer_stopall()*
timers	eval.txt	/*timers*
timestamp	editing.txt	/*timestamp*
timestamps	editing.txt	/*timestamps*
tips	tips.txt	/*tips*
tips.txt	tips.txt	/*tips.txt*
todo	todo.txt	/*todo*
todo.txt	todo.txt	/*todo.txt*
toggle	options.txt	/*toggle*
toggle-revins	version4.txt	/*toggle-revins*
tolower()	eval.txt	/*tolower()*
toolbar-icon	gui.txt	/*toolbar-icon*
toupper()	eval.txt	/*toupper()*
tr()	eval.txt	/*tr()*
trojan-horse	starting.txt	/*trojan-horse*
true-variable	eval.txt	/*true-variable*
trunc()	eval.txt	/*trunc()*
try-conditionals	eval.txt	/*try-conditionals*
try-echoerr	eval.txt	/*try-echoerr*
try-finally	eval.txt	/*try-finally*
try-nested	eval.txt	/*try-nested*
try-nesting	eval.txt	/*try-nesting*
tutor	usr_01.txt	/*tutor*
twice	if_cscop.txt	/*twice*
two-engines	pattern.txt	/*two-engines*
type()	eval.txt	/*type()*
type-mistakes	tips.txt	/*type-mistakes*
typecorr-settings	usr_41.txt	/*typecorr-settings*
typecorr.txt	usr_41.txt	/*typecorr.txt*
u	undo.txt	/*u*
uganda	uganda.txt	/*uganda*
uganda.txt	uganda.txt	/*uganda.txt*
undercurl	syntax.txt	/*undercurl*
underline	syntax.txt	/*underline*
undo	undo.txt	/*undo*
undo-blocks	undo.txt	/*undo-blocks*
undo-branches	undo.txt	/*undo-branches*
undo-commands	undo.txt	/*undo-commands*
undo-persistence	undo.txt	/*undo-persistence*
undo-redo	undo.txt	/*undo-redo*
undo-remarks	undo.txt	/*undo-remarks*
undo-tree	undo.txt	/*undo-tree*
undo-two-ways	undo.txt	/*undo-two-ways*
undo.txt	undo.txt	/*undo.txt*
undo_ftplugin	usr_41.txt	/*undo_ftplugin*
undo_indent	usr_41.txt	/*undo_indent*
undofile()	eval.txt	/*undofile()*
undotree()	eval.txt	/*undotree()*
unicode	mbyte.txt	/*unicode*
uniq()	eval.txt	/*uniq()*
unix	os_unix.txt	/*unix*
unlisted-buffer	windows.txt	/*unlisted-buffer*
up-down-motions	motion.txt	/*up-down-motions*
uppercase	change.txt	/*uppercase*
urxvt-mouse	options.txt	/*urxvt-mouse*
use-cpo-save	usr_41.txt	/*use-cpo-save*
use-visual-cmds	version4.txt	/*use-visual-cmds*
useful-mappings	tips.txt	/*useful-mappings*
usenet	intro.txt	/*usenet*
user-cmd-ambiguous	map.txt	/*user-cmd-ambiguous*
user-commands	map.txt	/*user-commands*
user-functions	eval.txt	/*user-functions*
user-manual	usr_toc.txt	/*user-manual*
using-<Plug>	usr_41.txt	/*using-<Plug>*
using-menus	gui.txt	/*using-menus*
using-scripts	repeat.txt	/*using-scripts*
using-xxd	tips.txt	/*using-xxd*
using_CTRL-V	map.txt	/*using_CTRL-V*
usr_01.txt	usr_01.txt	/*usr_01.txt*
usr_02.txt	usr_02.txt	/*usr_02.txt*
usr_03.txt	usr_03.txt	/*usr_03.txt*
usr_04.txt	usr_04.txt	/*usr_04.txt*
usr_05.txt	usr_05.txt	/*usr_05.txt*
usr_06.txt	usr_06.txt	/*usr_06.txt*
usr_07.txt	usr_07.txt	/*usr_07.txt*
usr_08.txt	usr_08.txt	/*usr_08.txt*
usr_09.txt	usr_09.txt	/*usr_09.txt*
usr_10.txt	usr_10.txt	/*usr_10.txt*
usr_11.txt	usr_11.txt	/*usr_11.txt*
usr_12.txt	usr_12.txt	/*usr_12.txt*
usr_20.txt	usr_20.txt	/*usr_20.txt*
usr_21.txt	usr_21.txt	/*usr_21.txt*
usr_22.txt	usr_22.txt	/*usr_22.txt*
usr_23.txt	usr_23.txt	/*usr_23.txt*
usr_24.txt	usr_24.txt	/*usr_24.txt*
usr_25.txt	usr_25.txt	/*usr_25.txt*
usr_26.txt	usr_26.txt	/*usr_26.txt*
usr_27.txt	usr_27.txt	/*usr_27.txt*
usr_28.txt	usr_28.txt	/*usr_28.txt*
usr_29.txt	usr_29.txt	/*usr_29.txt*
usr_30.txt	usr_30.txt	/*usr_30.txt*
usr_31.txt	usr_31.txt	/*usr_31.txt*
usr_32.txt	usr_32.txt	/*usr_32.txt*
usr_40.txt	usr_40.txt	/*usr_40.txt*
usr_41.txt	usr_41.txt	/*usr_41.txt*
usr_42.txt	usr_42.txt	/*usr_42.txt*
usr_43.txt	usr_43.txt	/*usr_43.txt*
usr_44.txt	usr_44.txt	/*usr_44.txt*
usr_45.txt	usr_45.txt	/*usr_45.txt*
usr_90.txt	usr_90.txt	/*usr_90.txt*
usr_toc.txt	usr_toc.txt	/*usr_toc.txt*
utf-8	mbyte.txt	/*utf-8*
utf-8-char-arg	mbyte.txt	/*utf-8-char-arg*
utf-8-in-xwindows	mbyte.txt	/*utf-8-in-xwindows*
utf-8-typing	mbyte.txt	/*utf-8-typing*
utf8	mbyte.txt	/*utf8*
v	visual.txt	/*v*
v:	eval.txt	/*v:*
v:beval_bufnr	eval.txt	/*v:beval_bufnr*
v:beval_col	eval.txt	/*v:beval_col*
v:beval_lnum	eval.txt	/*v:beval_lnum*
v:beval_text	eval.txt	/*v:beval_text*
v:beval_winid	eval.txt	/*v:beval_winid*
v:beval_winnr	eval.txt	/*v:beval_winnr*
v:char	eval.txt	/*v:char*
v:charconvert_from	eval.txt	/*v:charconvert_from*
v:charconvert_to	eval.txt	/*v:charconvert_to*
v:cmdarg	eval.txt	/*v:cmdarg*
v:cmdbang	eval.txt	/*v:cmdbang*
v:completed_item	eval.txt	/*v:completed_item*
v:count	eval.txt	/*v:count*
v:count1	eval.txt	/*v:count1*
v:ctype	eval.txt	/*v:ctype*
v:dying	eval.txt	/*v:dying*
v:errmsg	eval.txt	/*v:errmsg*
v:errors	eval.txt	/*v:errors*
v:exception	eval.txt	/*v:exception*
v:false	eval.txt	/*v:false*
v:fcs_choice	eval.txt	/*v:fcs_choice*
v:fcs_reason	eval.txt	/*v:fcs_reason*
v:fname_diff	eval.txt	/*v:fname_diff*
v:fname_in	eval.txt	/*v:fname_in*
v:fname_new	eval.txt	/*v:fname_new*
v:fname_out	eval.txt	/*v:fname_out*
v:folddashes	eval.txt	/*v:folddashes*
v:foldend	eval.txt	/*v:foldend*
v:foldlevel	eval.txt	/*v:foldlevel*
v:foldstart	eval.txt	/*v:foldstart*
v:hlsearch	eval.txt	/*v:hlsearch*
v:insertmode	eval.txt	/*v:insertmode*
v:key	eval.txt	/*v:key*
v:lang	eval.txt	/*v:lang*
v:lc_time	eval.txt	/*v:lc_time*
v:lnum	eval.txt	/*v:lnum*
v:mouse_col	eval.txt	/*v:mouse_col*
v:mouse_lnum	eval.txt	/*v:mouse_lnum*
v:mouse_win	eval.txt	/*v:mouse_win*
v:mouse_winid	eval.txt	/*v:mouse_winid*
v:none	eval.txt	/*v:none*
v:null	eval.txt	/*v:null*
v:oldfiles	eval.txt	/*v:oldfiles*
v:operator	eval.txt	/*v:operator*
v:option_new	eval.txt	/*v:option_new*
v:option_old	eval.txt	/*v:option_old*
v:option_type	eval.txt	/*v:option_type*
v:prevcount	eval.txt	/*v:prevcount*
v:profiling	eval.txt	/*v:profiling*
v:progname	eval.txt	/*v:progname*
v:progpath	eval.txt	/*v:progpath*
v:register	eval.txt	/*v:register*
v:scrollstart	eval.txt	/*v:scrollstart*
v:searchforward	eval.txt	/*v:searchforward*
v:servername	eval.txt	/*v:servername*
v:shell_error	eval.txt	/*v:shell_error*
v:statusmsg	eval.txt	/*v:statusmsg*
v:swapchoice	eval.txt	/*v:swapchoice*
v:swapcommand	eval.txt	/*v:swapcommand*
v:swapname	eval.txt	/*v:swapname*
v:t_TYPE	eval.txt	/*v:t_TYPE*
v:t_bool	eval.txt	/*v:t_bool*
v:t_channel	eval.txt	/*v:t_channel*
v:t_dict	eval.txt	/*v:t_dict*
v:t_float	eval.txt	/*v:t_float*
v:t_func	eval.txt	/*v:t_func*
v:t_job	eval.txt	/*v:t_job*
v:t_list	eval.txt	/*v:t_list*
v:t_none	eval.txt	/*v:t_none*
v:t_number	eval.txt	/*v:t_number*
v:t_string	eval.txt	/*v:t_string*
v:termresponse	eval.txt	/*v:termresponse*
v:testing	eval.txt	/*v:testing*
v:this_session	eval.txt	/*v:this_session*
v:throwpoint	eval.txt	/*v:throwpoint*
v:true	eval.txt	/*v:true*
v:val	eval.txt	/*v:val*
v:var	eval.txt	/*v:var*
v:version	eval.txt	/*v:version*
v:vim_did_enter	eval.txt	/*v:vim_did_enter*
v:warningmsg	eval.txt	/*v:warningmsg*
v:windowid	eval.txt	/*v:windowid*
v_!	change.txt	/*v_!*
v_$	visual.txt	/*v_$*
v_:	cmdline.txt	/*v_:*
v_<	change.txt	/*v_<*
v_<BS>	change.txt	/*v_<BS>*
v_<Del>	change.txt	/*v_<Del>*
v_<Esc>	visual.txt	/*v_<Esc>*
v_=	change.txt	/*v_=*
v_>	change.txt	/*v_>*
v_C	change.txt	/*v_C*
v_CTRL-A	change.txt	/*v_CTRL-A*
v_CTRL-C	visual.txt	/*v_CTRL-C*
v_CTRL-G	visual.txt	/*v_CTRL-G*
v_CTRL-H	change.txt	/*v_CTRL-H*
v_CTRL-O	visual.txt	/*v_CTRL-O*
v_CTRL-V	visual.txt	/*v_CTRL-V*
v_CTRL-X	change.txt	/*v_CTRL-X*
v_CTRL-Z	starting.txt	/*v_CTRL-Z*
v_CTRL-\_CTRL-G	intro.txt	/*v_CTRL-\\_CTRL-G*
v_CTRL-\_CTRL-N	intro.txt	/*v_CTRL-\\_CTRL-N*
v_CTRL-]	tagsrch.txt	/*v_CTRL-]*
v_D	change.txt	/*v_D*
v_J	change.txt	/*v_J*
v_K	various.txt	/*v_K*
v_O	visual.txt	/*v_O*
v_P	change.txt	/*v_P*
v_R	change.txt	/*v_R*
v_S	change.txt	/*v_S*
v_U	change.txt	/*v_U*
v_V	visual.txt	/*v_V*
v_X	change.txt	/*v_X*
v_Y	change.txt	/*v_Y*
v_a	motion.txt	/*v_a*
v_a'	motion.txt	/*v_a'*
v_a(	motion.txt	/*v_a(*
v_a)	motion.txt	/*v_a)*
v_a<	motion.txt	/*v_a<*
v_a>	motion.txt	/*v_a>*
v_aB	motion.txt	/*v_aB*
v_aW	motion.txt	/*v_aW*
v_a[	motion.txt	/*v_a[*
v_a]	motion.txt	/*v_a]*
v_a`	motion.txt	/*v_a`*
v_ab	motion.txt	/*v_ab*
v_ap	motion.txt	/*v_ap*
v_aquote	motion.txt	/*v_aquote*
v_as	motion.txt	/*v_as*
v_at	motion.txt	/*v_at*
v_aw	motion.txt	/*v_aw*
v_a{	motion.txt	/*v_a{*
v_a}	motion.txt	/*v_a}*
v_b_<	visual.txt	/*v_b_<*
v_b_<_example	visual.txt	/*v_b_<_example*
v_b_>	visual.txt	/*v_b_>*
v_b_>_example	visual.txt	/*v_b_>_example*
v_b_A	visual.txt	/*v_b_A*
v_b_A_example	visual.txt	/*v_b_A_example*
v_b_C	visual.txt	/*v_b_C*
v_b_D	change.txt	/*v_b_D*
v_b_I	visual.txt	/*v_b_I*
v_b_I_example	visual.txt	/*v_b_I_example*
v_b_c	visual.txt	/*v_b_c*
v_b_r	visual.txt	/*v_b_r*
v_b_r_example	visual.txt	/*v_b_r_example*
v_c	change.txt	/*v_c*
v_d	change.txt	/*v_d*
v_g?	change.txt	/*v_g?*
v_gF	editing.txt	/*v_gF*
v_gJ	change.txt	/*v_gJ*
v_gN	visual.txt	/*v_gN*
v_gV	visual.txt	/*v_gV*
v_g]	tagsrch.txt	/*v_g]*
v_g_CTRL-A	change.txt	/*v_g_CTRL-A*
v_g_CTRL-G	editing.txt	/*v_g_CTRL-G*
v_g_CTRL-X	change.txt	/*v_g_CTRL-X*
v_g_CTRL-]	tagsrch.txt	/*v_g_CTRL-]*
v_gf	editing.txt	/*v_gf*
v_gn	visual.txt	/*v_gn*
v_gq	change.txt	/*v_gq*
v_gv	visual.txt	/*v_gv*
v_gw	change.txt	/*v_gw*
v_i	motion.txt	/*v_i*
v_i'	motion.txt	/*v_i'*
v_i(	motion.txt	/*v_i(*
v_i)	motion.txt	/*v_i)*
v_i<	motion.txt	/*v_i<*
v_i>	motion.txt	/*v_i>*
v_iB	motion.txt	/*v_iB*
v_iW	motion.txt	/*v_iW*
v_i[	motion.txt	/*v_i[*
v_i]	motion.txt	/*v_i]*
v_i`	motion.txt	/*v_i`*
v_ib	motion.txt	/*v_ib*
v_ip	motion.txt	/*v_ip*
v_iquote	motion.txt	/*v_iquote*
v_is	motion.txt	/*v_is*
v_it	motion.txt	/*v_it*
v_iw	motion.txt	/*v_iw*
v_i{	motion.txt	/*v_i{*
v_i}	motion.txt	/*v_i}*
v_o	visual.txt	/*v_o*
v_p	change.txt	/*v_p*
v_r	change.txt	/*v_r*
v_s	change.txt	/*v_s*
v_u	change.txt	/*v_u*
v_v	visual.txt	/*v_v*
v_x	change.txt	/*v_x*
v_y	change.txt	/*v_y*
v_~	change.txt	/*v_~*
vab	motion.txt	/*vab*
val-variable	eval.txt	/*val-variable*
valgrind	debug.txt	/*valgrind*
values()	eval.txt	/*values()*
var-functions	usr_41.txt	/*var-functions*
variables	eval.txt	/*variables*
various	various.txt	/*various*
various-cmds	various.txt	/*various-cmds*
various-functions	usr_41.txt	/*various-functions*
various-motions	motion.txt	/*various-motions*
various.txt	various.txt	/*various.txt*
vb.vim	syntax.txt	/*vb.vim*
vba	pi_vimball.txt	/*vba*
verbose	starting.txt	/*verbose*
version-5.1	version5.txt	/*version-5.1*
version-5.2	version5.txt	/*version-5.2*
version-5.3	version5.txt	/*version-5.3*
version-5.4	version5.txt	/*version-5.4*
version-5.5	version5.txt	/*version-5.5*
version-5.6	version5.txt	/*version-5.6*
version-5.7	version5.txt	/*version-5.7*
version-5.8	version5.txt	/*version-5.8*
version-6.1	version6.txt	/*version-6.1*
version-6.2	version6.txt	/*version-6.2*
version-6.3	version6.txt	/*version-6.3*
version-6.4	version6.txt	/*version-6.4*
version-7.0	version7.txt	/*version-7.0*
version-7.1	version7.txt	/*version-7.1*
version-7.2	version7.txt	/*version-7.2*
version-7.3	version7.txt	/*version-7.3*
version-7.4	version7.txt	/*version-7.4*
version-8.0	version8.txt	/*version-8.0*
version-variable	eval.txt	/*version-variable*
version4.txt	version4.txt	/*version4.txt*
version5.txt	version5.txt	/*version5.txt*
version6.txt	version6.txt	/*version6.txt*
version7.0	version7.txt	/*version7.0*
version7.1	version7.txt	/*version7.1*
version7.2	version7.txt	/*version7.2*
version7.3	version7.txt	/*version7.3*
version7.4	version7.txt	/*version7.4*
version7.txt	version7.txt	/*version7.txt*
version8.0	version8.txt	/*version8.0*
version8.txt	version8.txt	/*version8.txt*
vi	intro.txt	/*vi*
vi-differences	vi_diff.txt	/*vi-differences*
vi:	options.txt	/*vi:*
vi_diff.txt	vi_diff.txt	/*vi_diff.txt*
vib	motion.txt	/*vib*
view	starting.txt	/*view*
view-diffs	diff.txt	/*view-diffs*
view-file	starting.txt	/*view-file*
views-sessions	starting.txt	/*views-sessions*
vim-7.4	version7.txt	/*vim-7.4*
vim-8	version8.txt	/*vim-8*
vim-additions	vi_diff.txt	/*vim-additions*
vim-announce	intro.txt	/*vim-announce*
vim-arguments	starting.txt	/*vim-arguments*
vim-default-editor	gui_w32.txt	/*vim-default-editor*
vim-dev	intro.txt	/*vim-dev*
vim-mac	intro.txt	/*vim-mac*
vim-modes	intro.txt	/*vim-modes*
vim-modes-intro	intro.txt	/*vim-modes-intro*
vim-script-intro	usr_41.txt	/*vim-script-intro*
vim-use	intro.txt	/*vim-use*
vim-variable	eval.txt	/*vim-variable*
vim.vim	syntax.txt	/*vim.vim*
vim7	version7.txt	/*vim7*
vim8	version8.txt	/*vim8*
vim:	options.txt	/*vim:*
vim_announce	intro.txt	/*vim_announce*
vim_dev	intro.txt	/*vim_dev*
vim_did_enter-variable	eval.txt	/*vim_did_enter-variable*
vim_mac	intro.txt	/*vim_mac*
vim_starting	eval.txt	/*vim_starting*
vim_use	intro.txt	/*vim_use*
vimball	pi_vimball.txt	/*vimball*
vimball-contents	pi_vimball.txt	/*vimball-contents*
vimball-extract	pi_vimball.txt	/*vimball-extract*
vimball-history	pi_vimball.txt	/*vimball-history*
vimball-intro	pi_vimball.txt	/*vimball-intro*
vimball-manual	pi_vimball.txt	/*vimball-manual*
vimball-windows	pi_vimball.txt	/*vimball-windows*
vimdev	intro.txt	/*vimdev*
vimdiff	diff.txt	/*vimdiff*
vimfiles	options.txt	/*vimfiles*
viminfo	starting.txt	/*viminfo*
viminfo-!	options.txt	/*viminfo-!*
viminfo-%	options.txt	/*viminfo-%*
viminfo-'	options.txt	/*viminfo-'*
viminfo-/	options.txt	/*viminfo-\/*
viminfo-:	options.txt	/*viminfo-:*
viminfo-<	options.txt	/*viminfo-<*
viminfo-@	options.txt	/*viminfo-@*
viminfo-c	options.txt	/*viminfo-c*
viminfo-encoding	starting.txt	/*viminfo-encoding*
viminfo-errors	starting.txt	/*viminfo-errors*
viminfo-f	options.txt	/*viminfo-f*
viminfo-file	starting.txt	/*viminfo-file*
viminfo-file-marks	starting.txt	/*viminfo-file-marks*
viminfo-file-name	starting.txt	/*viminfo-file-name*
viminfo-h	options.txt	/*viminfo-h*
viminfo-n	options.txt	/*viminfo-n*
viminfo-quote	options.txt	/*viminfo-quote*
viminfo-r	options.txt	/*viminfo-r*
viminfo-read	starting.txt	/*viminfo-read*
viminfo-read-write	starting.txt	/*viminfo-read-write*
viminfo-s	options.txt	/*viminfo-s*
viminfo-timestamp	starting.txt	/*viminfo-timestamp*
viminfo-write	starting.txt	/*viminfo-write*
vimrc	starting.txt	/*vimrc*
vimrc-filetype	usr_05.txt	/*vimrc-filetype*
vimrc-intro	usr_05.txt	/*vimrc-intro*
vimrc-option-example	starting.txt	/*vimrc-option-example*
vimrc_example.vim	usr_05.txt	/*vimrc_example.vim*
vimtutor	usr_01.txt	/*vimtutor*
virtcol()	eval.txt	/*virtcol()*
visual-block	visual.txt	/*visual-block*
visual-change	visual.txt	/*visual-change*
visual-examples	visual.txt	/*visual-examples*
visual-index	index.txt	/*visual-index*
visual-mode	visual.txt	/*visual-mode*
visual-operators	visual.txt	/*visual-operators*
visual-repeat	visual.txt	/*visual-repeat*
visual-search	visual.txt	/*visual-search*
visual-start	visual.txt	/*visual-start*
visual-use	visual.txt	/*visual-use*
visual.txt	visual.txt	/*visual.txt*
visualmode()	eval.txt	/*visualmode()*
vms	os_vms.txt	/*vms*
vms-authors	os_vms.txt	/*vms-authors*
vms-changes	os_vms.txt	/*vms-changes*
vms-compiling	os_vms.txt	/*vms-compiling*
vms-deploy	os_vms.txt	/*vms-deploy*
vms-download	os_vms.txt	/*vms-download*
vms-gui	os_vms.txt	/*vms-gui*
vms-notes	os_vms.txt	/*vms-notes*
vms-problems	os_vms.txt	/*vms-problems*
vms-started	os_vms.txt	/*vms-started*
vms-usage	os_vms.txt	/*vms-usage*
vote-for-features	sponsor.txt	/*vote-for-features*
votes-counted	sponsor.txt	/*votes-counted*
votes-for-changes	todo.txt	/*votes-for-changes*
vreplace-mode	insert.txt	/*vreplace-mode*
vt100-cursor-keys	term.txt	/*vt100-cursor-keys*
vt100-function-keys	term.txt	/*vt100-function-keys*
w	motion.txt	/*w*
w32-clientserver	remote.txt	/*w32-clientserver*
w32-xpm-support	gui_w32.txt	/*w32-xpm-support*
w:	eval.txt	/*w:*
w:current_syntax	syntax.txt	/*w:current_syntax*
w:quickfix_title	quickfix.txt	/*w:quickfix_title*
w:var	eval.txt	/*w:var*
waittime	channel.txt	/*waittime*
warningmsg-variable	eval.txt	/*warningmsg-variable*
white-space	pattern.txt	/*white-space*
whitespace	pattern.txt	/*whitespace*
wildcard	editing.txt	/*wildcard*
wildcards	editing.txt	/*wildcards*
wildmenumode()	eval.txt	/*wildmenumode()*
win32	os_win32.txt	/*win32*
win32-!start	gui_w32.txt	/*win32-!start*
win32-PATH	os_win32.txt	/*win32-PATH*
win32-colors	gui_w32.txt	/*win32-colors*
win32-compiling	os_win32.txt	/*win32-compiling*
win32-curdir	os_win32.txt	/*win32-curdir*
win32-faq	os_win32.txt	/*win32-faq*
win32-gettext	mlang.txt	/*win32-gettext*
win32-gui	gui_w32.txt	/*win32-gui*
win32-hidden-menus	gui.txt	/*win32-hidden-menus*
win32-mouse	os_win32.txt	/*win32-mouse*
win32-open-with-menu	gui_w32.txt	/*win32-open-with-menu*
win32-popup-menu	gui_w32.txt	/*win32-popup-menu*
win32-problems	os_win32.txt	/*win32-problems*
win32-quotes	os_win32.txt	/*win32-quotes*
win32-restore	os_win32.txt	/*win32-restore*
win32-startup	os_win32.txt	/*win32-startup*
win32-term	os_win32.txt	/*win32-term*
win32-vimrun	gui_w32.txt	/*win32-vimrun*
win32-win3.1	os_win32.txt	/*win32-win3.1*
win32-win95	os_win32.txt	/*win32-win95*
win32s	os_win32.txt	/*win32s*
win_findbuf()	eval.txt	/*win_findbuf()*
win_getid()	eval.txt	/*win_getid()*
win_gotoid()	eval.txt	/*win_gotoid()*
win_id2tabwin()	eval.txt	/*win_id2tabwin()*
win_id2win()	eval.txt	/*win_id2win()*
winbufnr()	eval.txt	/*winbufnr()*
wincol()	eval.txt	/*wincol()*
window	windows.txt	/*window*
window-ID	windows.txt	/*window-ID*
window-contents	intro.txt	/*window-contents*
window-exit	editing.txt	/*window-exit*
window-functions	usr_41.txt	/*window-functions*
window-move-cursor	windows.txt	/*window-move-cursor*
window-moving	windows.txt	/*window-moving*
window-resize	windows.txt	/*window-resize*
window-size	term.txt	/*window-size*
window-size-functions	usr_41.txt	/*window-size-functions*
window-tag	windows.txt	/*window-tag*
window-variable	eval.txt	/*window-variable*
windowid	windows.txt	/*windowid*
windowid-variable	eval.txt	/*windowid-variable*
windows	windows.txt	/*windows*
windows-3.1	os_win32.txt	/*windows-3.1*
windows-icon	os_win32.txt	/*windows-icon*
windows-intro	windows.txt	/*windows-intro*
windows-starting	windows.txt	/*windows-starting*
windows.txt	windows.txt	/*windows.txt*
windows95	os_win32.txt	/*windows95*
windows98	os_win32.txt	/*windows98*
windowsme	os_win32.txt	/*windowsme*
winheight()	eval.txt	/*winheight()*
winid	windows.txt	/*winid*
winline()	eval.txt	/*winline()*
winnr()	eval.txt	/*winnr()*
winrestcmd()	eval.txt	/*winrestcmd()*
winrestview()	eval.txt	/*winrestview()*
winsaveview()	eval.txt	/*winsaveview()*
winwidth()	eval.txt	/*winwidth()*
word	motion.txt	/*word*
word-count	editing.txt	/*word-count*
word-motions	motion.txt	/*word-motions*
wordcount()	eval.txt	/*wordcount()*
workbench	starting.txt	/*workbench*
workshop	workshop.txt	/*workshop*
workshop-commands	workshop.txt	/*workshop-commands*
workshop-compiling	workshop.txt	/*workshop-compiling*
workshop-configure	workshop.txt	/*workshop-configure*
workshop-intro	workshop.txt	/*workshop-intro*
workshop-support	workshop.txt	/*workshop-support*
workshop-xpm	workshop.txt	/*workshop-xpm*
workshop.txt	workshop.txt	/*workshop.txt*
wrap-off	intro.txt	/*wrap-off*
write-compiler-plugin	usr_41.txt	/*write-compiler-plugin*
write-device	editing.txt	/*write-device*
write-fail	editing.txt	/*write-fail*
write-filetype-plugin	usr_41.txt	/*write-filetype-plugin*
write-library-script	usr_41.txt	/*write-library-script*
write-local-help	usr_41.txt	/*write-local-help*
write-permissions	editing.txt	/*write-permissions*
write-plugin	usr_41.txt	/*write-plugin*
write-plugin-quickload	usr_41.txt	/*write-plugin-quickload*
write-quit	editing.txt	/*write-quit*
write-readonly	editing.txt	/*write-readonly*
writefile()	eval.txt	/*writefile()*
writing	editing.txt	/*writing*
www	intro.txt	/*www*
x	change.txt	/*x*
x-input-method	mbyte.txt	/*x-input-method*
x-resources	version5.txt	/*x-resources*
x11-clientserver	remote.txt	/*x11-clientserver*
x11-cut-buffer	gui_x11.txt	/*x11-cut-buffer*
x11-selection	gui_x11.txt	/*x11-selection*
xf86conf.vim	syntax.txt	/*xf86conf.vim*
xfontset	mbyte.txt	/*xfontset*
xfree-xterm	syntax.txt	/*xfree-xterm*
xim	mbyte.txt	/*xim*
xim-input-style	mbyte.txt	/*xim-input-style*
xiterm	syntax.txt	/*xiterm*
xml-folding	syntax.txt	/*xml-folding*
xml-omni-datafile	insert.txt	/*xml-omni-datafile*
xml.vim	syntax.txt	/*xml.vim*
xor()	eval.txt	/*xor()*
xpm.vim	syntax.txt	/*xpm.vim*
xterm-8-bit	term.txt	/*xterm-8-bit*
xterm-8bit	term.txt	/*xterm-8bit*
xterm-blink	syntax.txt	/*xterm-blink*
xterm-blinking-cursor	syntax.txt	/*xterm-blinking-cursor*
xterm-clipboard	term.txt	/*xterm-clipboard*
xterm-codes	term.txt	/*xterm-codes*
xterm-color	syntax.txt	/*xterm-color*
xterm-command-server	term.txt	/*xterm-command-server*
xterm-copy-paste	term.txt	/*xterm-copy-paste*
xterm-cursor-keys	term.txt	/*xterm-cursor-keys*
xterm-end-home-keys	term.txt	/*xterm-end-home-keys*
xterm-function-keys	term.txt	/*xterm-function-keys*
xterm-modifier-keys	term.txt	/*xterm-modifier-keys*
xterm-mouse	options.txt	/*xterm-mouse*
xterm-mouse-wheel	scroll.txt	/*xterm-mouse-wheel*
xterm-resize	term.txt	/*xterm-resize*
xterm-save-screen	tips.txt	/*xterm-save-screen*
xterm-screens	tips.txt	/*xterm-screens*
xterm-scroll-region	term.txt	/*xterm-scroll-region*
xterm-shifted-keys	term.txt	/*xterm-shifted-keys*
xterm-true-color	term.txt	/*xterm-true-color*
y	change.txt	/*y*
yaml.vim	syntax.txt	/*yaml.vim*
yank	change.txt	/*yank*
ye-option-gone	version4.txt	/*ye-option-gone*
year-2000	intro.txt	/*year-2000*
your-runtime-dir	usr_43.txt	/*your-runtime-dir*
yy	change.txt	/*yy*
z	index.txt	/*z*
z+	scroll.txt	/*z+*
z-	scroll.txt	/*z-*
z.	scroll.txt	/*z.*
z/OS	os_390.txt	/*z\/OS*
z<CR>	scroll.txt	/*z<CR>*
z<Left>	scroll.txt	/*z<Left>*
z<Right>	scroll.txt	/*z<Right>*
z=	spell.txt	/*z=*
zA	fold.txt	/*zA*
zC	fold.txt	/*zC*
zD	fold.txt	/*zD*
zE	fold.txt	/*zE*
zF	fold.txt	/*zF*
zG	spell.txt	/*zG*
zH	scroll.txt	/*zH*
zL	scroll.txt	/*zL*
zM	fold.txt	/*zM*
zN	fold.txt	/*zN*
zN<CR>	scroll.txt	/*zN<CR>*
zO	fold.txt	/*zO*
zOS	os_390.txt	/*zOS*
zOS-Bugs	os_390.txt	/*zOS-Bugs*
zOS-Motif	os_390.txt	/*zOS-Motif*
zOS-PuTTY	os_390.txt	/*zOS-PuTTY*
zOS-has-ebcdic	os_390.txt	/*zOS-has-ebcdic*
zOS-limitations	os_390.txt	/*zOS-limitations*
zOS-open-source	os_390.txt	/*zOS-open-source*
zR	fold.txt	/*zR*
zW	spell.txt	/*zW*
zX	fold.txt	/*zX*
z^	scroll.txt	/*z^*
za	fold.txt	/*za*
zb	scroll.txt	/*zb*
zc	fold.txt	/*zc*
zd	fold.txt	/*zd*
ze	scroll.txt	/*ze*
zf	fold.txt	/*zf*
zg	spell.txt	/*zg*
zh	scroll.txt	/*zh*
zi	fold.txt	/*zi*
zip	pi_zip.txt	/*zip*
zip-contents	pi_zip.txt	/*zip-contents*
zip-copyright	pi_zip.txt	/*zip-copyright*
zip-extension	pi_zip.txt	/*zip-extension*
zip-history	pi_zip.txt	/*zip-history*
zip-manual	pi_zip.txt	/*zip-manual*
zip-usage	pi_zip.txt	/*zip-usage*
zip-x	pi_zip.txt	/*zip-x*
zj	fold.txt	/*zj*
zk	fold.txt	/*zk*
zl	scroll.txt	/*zl*
zm	fold.txt	/*zm*
zn	fold.txt	/*zn*
zo	fold.txt	/*zo*
zr	fold.txt	/*zr*
zs	scroll.txt	/*zs*
zsh.vim	syntax.txt	/*zsh.vim*
zt	scroll.txt	/*zt*
zuG	spell.txt	/*zuG*
zuW	spell.txt	/*zuW*
zug	spell.txt	/*zug*
zuw	spell.txt	/*zuw*
zv	fold.txt	/*zv*
zw	spell.txt	/*zw*
zx	fold.txt	/*zx*
zz	scroll.txt	/*zz*
{	motion.txt	/*{*
{Visual}	intro.txt	/*{Visual}*
{address}	cmdline.txt	/*{address}*
{arglist}	editing.txt	/*{arglist}*
{char1-char2}	intro.txt	/*{char1-char2}*
{event}	autocmd.txt	/*{event}*
{file}	editing.txt	/*{file}*
{group-name}	syntax.txt	/*{group-name}*
{lhs}	map.txt	/*{lhs}*
{motion}	intro.txt	/*{motion}*
{move-around}	visual.txt	/*{move-around}*
{offset}	pattern.txt	/*{offset}*
{pat}	autocmd.txt	/*{pat}*
{rhs}	map.txt	/*{rhs}*
{subject}	helphelp.txt	/*{subject}*
{}	intro.txt	/*{}*
}	motion.txt	/*}*
~	change.txt	/*~*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /* user.h: FR-V core file format stuff
 *
 * Copyright (C) 2003 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */
#ifndef _ASM_USER_H
#define _ASM_USER_H

#include <asm/page.h>
#include <asm/registers.h>

/* Core file format: The core file is written in such a way that gdb
 * can understand it and provide useful information to the user (under
 * linux we use the 'trad-core' bfd).  There are quite a number of
 * obstacles to being able to view the contents of the floating point
 * registers, and until these are solved you will not be able to view
 * the contents of them.  Actually, you can read in the core file and
 * look at the contents of the user struct to find out what the
 * floating point registers contain.
 *
 * The actual file contents are as follows:
 * UPAGE:
 *   1 page consisting of a user struct that tells gdb what is present
 *   in the file.  Directly after this is a copy of the task_struct,
 *   which is currently not used by gdb, but it may come in useful at
 *   some point.  All of the registers are stored as part of the
 *   upage.  The upage should always be only one page.
 *
 * DATA:
 *   The data area is stored.  We use current->end_text to
 *   current->brk to pick up all of the user variables, plus any
 *   memory that may have been malloced.  No attempt is made to
 *   determine if a page is demand-zero or if a page is totally
 *   unused, we just cover the entire range.  All of the addresses are
 *   rounded in such a way that an integral number of pages is
 *   written.
 *
 * STACK:
 *   We need the stack information in order to get a meaningful
 *   backtrace.  We need to write the data from (esp) to
 *   current->start_stack, so we round each of these off in order to
 *   be able to write an integer number of pages.  The minimum core
 *   file size is 3 pages, or 12288 bytes.
 */

/* When the kernel dumps core, it starts by dumping the user struct -
 * this will be used by gdb to figure out where the data and stack segments
 *  are within the file, and what virtual addresses to use.
 */
struct user {
	/* We start with the registers, to mimic the way that "memory" is returned
	 * from the ptrace(3,...) function.  */
	struct user_context	regs;

	/* The rest of this junk is to help gdb figure out what goes where */
	unsigned long		u_tsize;	/* Text segment size (pages). */
	unsigned long		u_dsize;	/* Data segment size (pages). */
	unsigned long		u_ssize;	/* Stack segment size (pages). */
	unsigned long		start_code;     /* Starting virtual address of text. */
	unsigned long		start_stack;	/* Starting virtual address of stack area.
						 * This is actually the bottom of the stack,
						 * the top of the stack is always found in the
						 * esp register.  */
	long int		signal;		/* Signal that caused the core dump. */

	unsigned long		magic;		/* To uniquely identify a core file */
	char			u_comm[32];	/* User command that was responsible */
};

#define NBPG			PAGE_SIZE
#define UPAGES			1
#define HOST_TEXT_START_ADDR	(u.start_code)
#define HOST_STACK_END_ADDR	(u.start_stack + u.u_ssize * NBPG)

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #ifndef __ASM_PERCPU_H
#define __ASM_PERCPU_H

#include <asm-generic/percpu.h>

#endif	/* __ASM_PERCPU_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /* mem-layout.h: memory layout
 *
 * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */

#ifndef _ASM_MEM_LAYOUT_H
#define _ASM_MEM_LAYOUT_H

#ifndef __ASSEMBLY__
#define __UL(X)	((unsigned long) (X))
#else
#define __UL(X)	(X)
#endif

/*
 * PAGE_SHIFT determines the page size
 */
#define PAGE_SHIFT			14

#ifndef __ASSEMBLY__
#define PAGE_SIZE			(1UL << PAGE_SHIFT)
#else
#define PAGE_SIZE			(1 << PAGE_SHIFT)
#endif

#define PAGE_MASK			(~(PAGE_SIZE-1))

/*
 * the slab must be aligned such that load- and store-double instructions don't
 * fault if used
 */
#define	ARCH_DMA_MINALIGN		L1_CACHE_BYTES
#define	ARCH_SLAB_MINALIGN		L1_CACHE_BYTES

/*****************************************************************************/
/*
 * virtual memory layout from kernel's point of view
 */
#define PAGE_OFFSET			((unsigned long) &__page_offset)

#ifdef CONFIG_MMU

/* see Documentation/frv/mmu-layout.txt */
#define KERNEL_LOWMEM_START		__UL(0xc0000000)
#define KERNEL_LOWMEM_END		__UL(0xd0000000)
#define VMALLOC_START			__UL(0xd0000000)
#define VMALLOC_END			__UL(0xd8000000)
#define PKMAP_BASE			__UL(0xd8000000)
#define PKMAP_END			__UL(0xdc000000)
#define KMAP_ATOMIC_SECONDARY_FRAME	__UL(0xdc000000)
#define KMAP_ATOMIC_PRIMARY_FRAME	__UL(0xdd000000)

#endif

#define KERNEL_IO_START			__UL(0xe0000000)


/*****************************************************************************/
/*
 * memory layout from userspace's point of view
 */
#define BRK_BASE			__UL(2 * 1024 * 1024 + PAGE_SIZE)
#define STACK_TOP			__UL(2 * 1024 * 1024)
#define STACK_TOP_MAX			__UL(0xc0000000)

/* userspace process size */
#ifdef CONFIG_MMU
#define TASK_SIZE			(PAGE_OFFSET)
#else
#define TASK_SIZE			__UL(0xFFFFFFFFUL)
#endif

/* base of area at which unspecified mmaps will start */
#ifdef CONFIG_BINFMT_ELF_FDPIC
#define TASK_UNMAPPED_BASE		__UL(16 * 1024 * 1024)
#else
#define TASK_UNMAPPED_BASE		__UL(TASK_SIZE / 3)
#endif

#endif /* _ASM_MEM_LAYOUT_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #include <generated/asm-offsets.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef _ASM_UNISTD_H_
#define _ASM_UNISTD_H_

#include <uapi/asm/unistd.h>


#define NR_syscalls 338

/* #define __ARCH_WANT_OLD_READDIR */
#define __ARCH_WANT_OLD_STAT
#define __ARCH_WANT_STAT64
#define __ARCH_WANT_SYS_ALARM
/* #define __ARCH_WANT_SYS_GETHOSTNAME */
#define __ARCH_WANT_SYS_IPC
#define __ARCH_WANT_SYS_PAUSE
/* #define __ARCH_WANT_SYS_SIGNAL */
#define __ARCH_WANT_SYS_TIME
#define __ARCH_WANT_SYS_UTIME
#define __ARCH_WANT_SYS_WAITPID
#define __ARCH_WANT_SYS_SOCKETCALL
#define __ARCH_WANT_SYS_FADVISE64
#define __ARCH_WANT_SYS_GETPGRP
#define __ARCH_WANT_SYS_LLSEEK
#define __ARCH_WANT_SYS_NICE
/* #define __ARCH_WANT_SYS_OLD_GETRLIMIT */
#define __ARCH_WANT_SYS_OLDUMOUNT
/* #define __ARCH_WANT_SYS_SIGPENDING */
#define __ARCH_WANT_SYS_SIGPROCMASK
#define __ARCH_WANT_SYS_FORK
#define __ARCH_WANT_SYS_VFORK
#define __ARCH_WANT_SYS_CLONE

#endif /* _ASM_UNISTD_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /* cache.h: FRV cache definitions
 *
 * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */

#ifndef __ASM_CACHE_H
#define __ASM_CACHE_H


/* bytes per L1 cache line */
#define L1_CACHE_SHIFT		(CONFIG_FRV_L1_CACHE_SHIFT)
#define L1_CACHE_BYTES		(1 << L1_CACHE_SHIFT)

#define __cacheline_aligned	__attribute__((aligned(L1_CACHE_BYTES)))
#define ____cacheline_aligned	__attribute__((aligned(L1_CACHE_BYTES)))

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /* mb86943a.h: MB86943 SPARClite <-> PCI bridge registers
 *
 * Copyright (C) 2003 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */

#ifndef _ASM_MB86943A_H
#define _ASM_MB86943A_H

#include <asm/mb-regs.h>

#define __reg_MB86943_sl_ctl		*(volatile uint32_t *) (__region_CS1 + 0x00)

#define MB86943_SL_CTL_BUS_WIDTH_64	0x00000001
#define MB86943_SL_CTL_AS_HOST		0x00000002
#define MB86943_SL_CTL_DRCT_MASTER_SWAP	0x00000004
#define MB86943_SL_CTL_DRCT_SLAVE_SWAP	0x00000008
#define MB86943_SL_CTL_PCI_CONFIG_SWAP	0x00000010
#define MB86943_SL_CTL_ECS0_ENABLE	0x00000020
#define MB86943_SL_CTL_ECS1_ENABLE	0x00000040
#define MB86943_SL_CTL_ECS2_ENABLE	0x00000080

#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))
#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))
#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))

#define __reg_MB86943_sl_pci_io_range	*(volatile uint32_t *) (__region_CS1 + 0x50)
#define __reg_MB86943_sl_pci_io_base	*(volatile uint32_t *) (__region_CS1 + 0x58)
#define __reg_MB86943_sl_pci_mem_range	*(volatile uint32_t *) (__region_CS1 + 0x60)
#define __reg_MB86943_sl_pci_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x68)
#define __reg_MB86943_pci_sl_io_base	*(volatile uint32_t *) (__region_CS1 + 0x70)
#define __reg_MB86943_pci_sl_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x78)

#define __reg_MB86943_pci_arbiter	*(volatile uint32_t *) (__region_CS2 + 0x01300014)
#define MB86943_PCIARB_EN		0x00000001

#endif /* _ASM_MB86943A_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /* processor.h: FRV processor definitions
 *
 * Copyright (C) 2003 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */

#ifndef _ASM_PROCESSOR_H
#define _ASM_PROCESSOR_H

#include <asm/mem-layout.h>

#ifndef __ASSEMBLY__
/*
 * Default implementation of macro that returns current
 * instruction pointer ("program counter").
 */
#define current_text_addr() ({ __label__ _l; _l: &&_l;})

#include <linux/compiler.h>
#include <linux/linkage.h>
#include <asm/sections.h>
#include <asm/segment.h>
#include <asm/fpu.h>
#include <asm/registers.h>
#include <asm/ptrace.h>
#include <asm/current.h>
#include <asm/cache.h>

/* Forward declaration, a strange C thing */
struct task_struct;

/*
 * Bus types
 */
#define EISA_bus 0

struct thread_struct {
	struct pt_regs		*frame;		/* [GR28] exception frame ptr for this thread */
	struct task_struct	*curr;		/* [GR29] current pointer for this thread */
	unsigned long		sp;		/* [GR1 ] kernel stack pointer */
	unsigned long		fp;		/* [GR2 ] kernel frame pointer */
	unsigned long		lr;		/* link register */
	unsigned long		pc;		/* program counter */
	unsigned long		gr[12];		/* [GR16-GR27] */
	unsigned long		sched_lr;	/* LR from schedule() */

	union {
		struct pt_regs		*frame0;	/* top (user) stack frame */
		struct user_context	*user;		/* userspace context */
	};
} __attribute__((aligned(8)));

extern struct pt_regs *__kernel_frame0_ptr;
extern struct task_struct *__kernel_current_task;

#endif

#ifndef __ASSEMBLY__
#define INIT_THREAD_FRAME0 \
	((struct pt_regs *) \
	(sizeof(init_stack) + (unsigned long) init_stack - sizeof(struct user_context)))

#define INIT_THREAD {				\
	NULL,					\
	(struct task_struct *) init_stack,	\
	0, 0, 0, 0,				\
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },	\
	0,					\
	{ INIT_THREAD_FRAME0 },			\
}

/*
 * do necessary setup to start up a newly executed thread.
 */
#define start_thread(_regs, _pc, _usp)			\
do {							\
	_regs->pc	= (_pc);			\
	_regs->psr	&= ~PSR_S;			\
	_regs->sp	= (_usp);			\
} while(0)

/* Free all resources held by a thread. */
static inline void release_thread(struct task_struct *dead_task)
{
}

extern asmlinkage void save_user_regs(struct user_context *target);
extern asmlinkage void *restore_user_regs(const struct user_context *target, ...);

#define copy_segments(tsk, mm)		do { } while (0)
#define release_segments(mm)		do { } while (0)
#define forget_segments()		do { } while (0)

/*
 * Return saved PC of a blocked thread.
 */
extern unsigned long thread_saved_pc(struct task_struct *tsk);

unsigned long get_wchan(struct task_struct *p);

#define	KSTK_EIP(tsk)	((tsk)->thread.frame0->pc)
#define	KSTK_ESP(tsk)	((tsk)->thread.frame0->sp)

#define cpu_relax() barrier()
#define cpu_relax_lowlatency() cpu_relax()

/* data cache prefetch */
#define ARCH_HAS_PREFETCH
static inline void prefetch(const void *x)
{
	asm volatile("dcpl %0,gr0,#0" : : "r"(x));
}

#endif /* __ASSEMBLY__ */
#endif /* _ASM_PROCESSOR_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef _ASM_MATH_EMU_H
#define _ASM_MATH_EMU_H

#include <asm/setup.h>
#include <linux/linkage.h>

/* Status Register bits */

/* accrued exception bits */
#define FPSR_AEXC_INEX	3
#define FPSR_AEXC_DZ	4
#define FPSR_AEXC_UNFL	5
#define FPSR_AEXC_OVFL	6
#define FPSR_AEXC_IOP	7

/* exception status bits */
#define FPSR_EXC_INEX1	8
#define FPSR_EXC_INEX2	9
#define FPSR_EXC_DZ	10
#define FPSR_EXC_UNFL	11
#define FPSR_EXC_OVFL	12
#define FPSR_EXC_OPERR	13
#define FPSR_EXC_SNAN	14
#define FPSR_EXC_BSUN	15

/* quotient byte, assumes big-endian, of course */
#define FPSR_QUOTIENT(fpsr) (*((signed char *) &(fpsr) + 1))

/* condition code bits */
#define FPSR_CC_NAN	24
#define FPSR_CC_INF	25
#define FPSR_CC_Z	26
#define FPSR_CC_NEG	27


/* Control register bits */

/* rounding mode */
#define	FPCR_ROUND_RN	0		/* round to nearest/even */
#define FPCR_ROUND_RZ	1		/* round to zero */
#define FPCR_ROUND_RM	2		/* minus infinity */
#define FPCR_ROUND_RP	3		/* plus infinity */

/* rounding precision */
#define FPCR_PRECISION_X	0	/* long double */
#define FPCR_PRECISION_S	1	/* double */
#define FPCR_PRECISION_D	2	/* float */


/* Flags to select the debugging output */
#define PDECODE		0
#define PEXECUTE	1
#define PCONV		2
#define PNORM		3
#define PREGISTER	4
#define PINSTR		5
#define PUNIMPL		6
#define PMOVEM		7

#define PMDECODE	(1<<PDECODE)
#define PMEXECUTE	(1<<PEXECUTE)
#define PMCONV		(1<<PCONV)
#define PMNORM		(1<<PNORM)
#define PMREGISTER	(1<<PREGISTER)
#define PMINSTR		(1<<PINSTR)
#define PMUNIMPL	(1<<PUNIMPL)
#define PMMOVEM		(1<<PMOVEM)

#ifndef __ASSEMBLY__

#include <linux/kernel.h>
#include <linux/sched.h>

union fp_mant64 {
	unsigned long long m64;
	unsigned long m32[2];
};

union fp_mant128 {
	unsigned long long m64[2];
	unsigned long m32[4];
};

/* internal representation of extended fp numbers */
struct fp_ext {
	unsigned char lowmant;
	unsigned char sign;
	unsigned short exp;
	union fp_mant64 mant;
};

/* C representation of FPU registers */
/* NOTE: if you change this, you have to change the assembler offsets
   below and the size in <asm/fpu.h>, too */
struct fp_data {
	struct fp_ext fpreg[8];
	unsigned int fpcr;
	unsigned int fpsr;
	unsigned int fpiar;
	unsigned short prec;
	unsigned short rnd;
	struct fp_ext temp[2];
};

#if FPU_EMU_DEBUG
extern unsigned int fp_debugprint;

#define dprint(bit, fmt, args...) ({			\
	if (fp_debugprint & (1 << (bit)))		\
		printk(fmt, ## args);			\
})
#else
#define dprint(bit, fmt, args...)
#endif

#define uprint(str) ({					\
	static int __count = 3;				\
							\
	if (__count > 0) {				\
		printk("You just hit an unimplemented "	\
		       "fpu instruction (%s)\n", str);	\
		printk("Please report this to ....\n");	\
		__count--;				\
	}						\
})

#define FPDATA		((struct fp_data *)current->thread.fp)

#else	/* __ASSEMBLY__ */

#define FPDATA		%a2

/* offsets from the base register to the floating point data in the task struct */
#define FPD_FPREG	(TASK_THREAD+THREAD_FPREG+0)
#define FPD_FPCR	(TASK_THREAD+THREAD_FPREG+96)
#define FPD_FPSR	(TASK_THREAD+THREAD_FPREG+100)
#define FPD_FPIAR	(TASK_THREAD+THREAD_FPREG+104)
#define FPD_PREC	(TASK_THREAD+THREAD_FPREG+108)
#define FPD_RND		(TASK_THREAD+THREAD_FPREG+110)
#define FPD_TEMPFP1	(TASK_THREAD+THREAD_FPREG+112)
#define FPD_TEMPFP2	(TASK_THREAD+THREAD_FPREG+124)
#define FPD_SIZEOF	(TASK_THREAD+THREAD_FPREG+136)

/* offsets on the stack to access saved registers,
 * these are only used during instruction decoding
 * where we always know how deep we're on the stack.
 */
#define FPS_DO		(PT_D0)
#define FPS_D1		(PT_D1)
#define FPS_D2		(PT_D2)
#define FPS_A0		(PT_A0)
#define FPS_A1		(PT_A1)
#define FPS_A2		(PT_A2)
#define FPS_SR		(PT_SR)
#define FPS_PC		(PT_PC)
#define FPS_EA		(PT_PC+6)
#define FPS_PC2		(PT_PC+10)

.macro	fp_get_fp_reg
	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
	lea	(%a0,%d0.w*8),%a0
.endm

/* Macros used to get/put the current program counter.
 * 020/030 use a different stack frame then 040/060, for the
 * 040/060 the return pc points already to the next location,
 * so this only needs to be modified for jump instructions.
 */
.macro	fp_get_pc dest
	move.l	(FPS_PC+4,%sp),\dest
.endm

.macro	fp_put_pc src,jump=0
	move.l	\src,(FPS_PC+4,%sp)
.endm

.macro	fp_get_instr_data	f,s,dest,label
	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
	addq.l	#\s,%sp@(FPS_PC+4)
.endm

.macro	fp_get_instr_word	dest,label,addr
	fp_get_instr_data	w,2,\dest,\label,\addr
.endm

.macro	fp_get_instr_long	dest,label,addr
	fp_get_instr_data	l,4,\dest,\label,\addr
.endm

/* These macros are used to read from/write to user space
 * on error we jump to the fixup section, load the fault
 * address into %a0 and jump to the exit.
 * (derived from <asm/uaccess.h>)
 */
.macro	getuser	size,src,dest,label,addr
|	printf	,"[\size<%08x]",1,\addr
.Lu1\@:	moves\size	\src,\dest

	.section .fixup,"ax"
	.even
.Lu2\@:	move.l	\addr,%a0
	jra	\label
	.previous

	.section __ex_table,"a"
	.align	4
	.long	.Lu1\@,.Lu2\@
	.previous
.endm

.macro	putuser	size,src,dest,label,addr
|	printf	,"[\size>%08x]",1,\addr
.Lu1\@:	moves\size	\src,\dest
.Lu2\@:

	.section .fixup,"ax"
	.even
.Lu3\@:	move.l	\addr,%a0
	jra	\label
	.previous

	.section __ex_table,"a"
	.align	4
	.long	.Lu1\@,.Lu3\@
	.long	.Lu2\@,.Lu3\@
	.previous
.endm


.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
	.if	\nr
	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
	move.l	\arg1,-(%sp)
	.endif
.endm

.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
#ifdef FPU_EMU_DEBUG
	.data
.Lpdata\@:
	.string	"\string"
	.previous

	movem.l	%d0/%d1/%a0/%a1,-(%sp)
	.if	\bit+1
#if 0
	moveq	#\bit,%d0
	andw	#7,%d0
	btst	%d0,fp_debugprint+((31-\bit)/8)
#else
	btst	#\bit,fp_debugprint+((31-\bit)/8)
#endif
	jeq	.Lpskip\@
	.endif
	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
	pea	.Lpdata\@
	jsr	printk
	lea	((\nr+1)*4,%sp),%sp
.Lpskip\@:
	movem.l	(%sp)+,%d0/%d1/%a0/%a1
#endif
.endm

.macro	printx	bit,fp
#ifdef FPU_EMU_DEBUG
	movem.l	%d0/%a0,-(%sp)
	lea	\fp,%a0
#if 0
	moveq	#'+',%d0
	tst.w	(%a0)
	jeq	.Lx1\@
	moveq	#'-',%d0
.Lx1\@:	printf	\bit," %c",1,%d0
	move.l	(4,%a0),%d0
	bclr	#31,%d0
	jne	.Lx2\@
	printf	\bit,"0."
	jra	.Lx3\@
.Lx2\@:	printf	\bit,"1."
.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
	move.w	(2,%a0),%d0
	ext.l	%d0
	printf	\bit,"E%04x",1,%d0
#else
	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
#endif
	movem.l	(%sp)+,%d0/%a0
#endif
.endm

.macro	debug	instr,args
#ifdef FPU_EMU_DEBUG
	\instr	\args
#endif
.endm


#endif	/* __ASSEMBLY__ */

#endif	/* _ASM_FRV_MATH_EMU_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * Arch specific extensions to struct device
 *
 * This file is released under the GPLv2
 */
#include <asm-generic/device.h>

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * serial.h
 *
 * Copyright (C) 2003 Develer S.r.l. (http://www.develer.com/)
 * Author: Bernardo Innocenti <bernie@codewiz.org>
 *
 * Based on linux/include/asm-i386/serial.h
 */
#include <asm/serial-regs.h>

/*
 * the base baud is derived from the clock speed and so is variable
 */
#define BASE_BAUD 0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #ifndef __FRV_AUXVEC_H
#define __FRV_AUXVEC_H

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #ifndef __ASM_IOCTLS_H__
#define __ASM_IOCTLS_H__

#define TIOCTTYGSTRUCT	0x5426  /* For debugging only */
#define FIOQSIZE	0x545E

#include <asm-generic/ioctls.h>

#endif /* __ASM_IOCTLS_H__ */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #ifndef _ASM_SIGINFO_H
#define _ASM_SIGINFO_H

#include <linux/types.h>
#include <asm-generic/siginfo.h>

#define FPE_MDAOVF	(__SI_FAULT|9)	/* media overflow */
#undef NSIGFPE
#define NSIGFPE		9

#endif

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #ifndef _ASM_SOCKET_H
#define _ASM_SOCKET_H

#include <asm/sockios.h>

/* For setsockopt(2) */
#define SOL_SOCKET	1

#define SO_DEBUG	1
#define SO_REUSEADDR	2
#define SO_TYPE		3
#define SO_ERROR	4
#define SO_DONTROUTE	5
#define SO_BROADCAST	6
#define SO_SNDBUF	7
#define SO_RCVBUF	8
#define SO_SNDBUFFORCE	32
#define SO_RCVBUFFORCE	33
#define SO_KEEPALIVE	9
#define SO_OOBINLINE	10
#define SO_NO_CHECK	11
#define SO_PRIORITY	12
#define SO_LINGER	13
#define SO_BSDCOMPAT	14
#define SO_REUSEPORT	15
#define SO_PASSCRED	16
#define SO_PEERCRED	17
#define SO_RCVLOWAT	18
#define SO_SNDLOWAT	19
#define SO_RCVTIMEO	20
#define SO_SNDTIMEO	21

/* Security levels - as per NRL IPv6 - don't actually do anything */
#define SO_SECURITY_AUTHENTICATION		22
#define SO_SECURITY_ENCRYPTION_TRANSPORT	23
#define SO_SECURITY_ENCRYPTION_NETWORK		24

#define SO_BINDTODEVICE	25

/* Socket filtering */
#define SO_ATTACH_FILTER        26
#define SO_DETACH_FILTER        27
#define SO_GET_FILTER		SO_ATTACH_FILTER

#define SO_PEERNAME             28
#define SO_TIMESTAMP		29
#define SCM_TIMESTAMP		SO_TIMESTAMP

#define SO_ACCEPTCONN		30

#define SO_PEERSEC		31
#define SO_PASSSEC		34
#define SO_TIMESTAMPNS		35
#define SCM_TIMESTAMPNS		SO_TIMESTAMPNS

#define SO_MARK			36

#define SO_TIMESTAMPING		37
#define SCM_TIMESTAMPING	SO_TIMESTAMPING

#define SO_PROTOCOL		38
#define SO_DOMAIN		39

#define SO_RXQ_OVFL             40

#define SO_WIFI_STATUS		41
#define SCM_WIFI_STATUS		SO_WIFI_STATUS
#define SO_PEEK_OFF		42

/* Instruct lower device to use last 4-bytes of skb data as FCS */
#define SO_NOFCS		43

#define SO_LOCK_FILTER		44

#define SO_SELECT_ERR_QUEUE	45

#define SO_BUSY_POLL		46

#define SO_MAX_PACING_RATE	47

#define SO_BPF_EXTENSIONS	48

#define SO_INCOMING_CPU		49

#define SO_ATTACH_BPF		50
#define SO_DETACH_BPF		SO_DETACH_FILTER

#define SO_ATTACH_REUSEPORT_CBPF	51
#define SO_ATTACH_REUSEPORT_EBPF	52

#define SO_CNX_ADVICE		53

#endif /* _ASM_SOCKET_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         #ifndef _UAPI_ASM_TERMIOS_H
#define _UAPI_ASM_TERMIOS_H

#include <asm/termbits.h>
#include <asm/ioctls.h>

struct winsize {
	unsigned short ws_row;
	unsigned short ws_col;
	unsigned short ws_xpixel;
	unsigned short ws_ypixel;
};

#define NCC 8
struct termio {
	unsigned short c_iflag;		/* input mode flags */
	unsigned short c_oflag;		/* output mode flags */
	unsigned short c_cflag;		/* control mode flags */
	unsigned short c_lflag;		/* local mode flags */
	unsigned char c_line;		/* line discipline */
	unsigned char c_cc[NCC];	/* control characters */
};


/* modem lines */
#define TIOCM_LE	0x001
#define TIOCM_DTR	0x002
#define TIOCM_RTS	0x004
#define TIOCM_ST	0x008
#define TIOCM_SR	0x010
#define TIOCM_CTS	0x020
#define TIOCM_CAR	0x040
#define TIOCM_RNG	0x080
#define TIOCM_DSR	0x100
#define TIOCM_CD	TIOCM_CAR
#define TIOCM_RI	TIOCM_RNG
#define TIOCM_OUT1	0x2000
#define TIOCM_OUT2	0x4000
#define TIOCM_LOOP	0x8000

#define TIOCM_MODEM_BITS       TIOCM_OUT2      /* IRDA support */

/* ioctl (fd, TIOCSERGETLSR, &result) where result may be as below */


#endif /* _UAPI_ASM_TERMIOS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #ifndef _ASM_BYTEORDER_H
#define _ASM_BYTEORDER_H

#include <linux/byteorder/big_endian.h>

#endif /* _ASM_BYTEORDER_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *usr_41.txt*	For Vim version 8.0.  Last change: 2016 Nov 29

		     VIM USER MANUAL - by Bram Moolenaar

			      Write a Vim script


The Vim script language is used for the startup vimrc file, syntax files, and
many other things.  This chapter explains the items that can be used in a Vim
script.  There are a lot of them, thus this is a long chapter.

|41.1|	Introduction
|41.2|	Variables
|41.3|	Expressions
|41.4|	Conditionals
|41.5|	Executing an expression
|41.6|	Using functions
|41.7|	Defining a function
|41.8|	Lists and Dictionaries
|41.9|	Exceptions
|41.10|	Various remarks
|41.11|	Writing a plugin
|41.12|	Writing a filetype plugin
|41.13|	Writing a compiler plugin
|41.14|	Writing a plugin that loads quickly
|41.15|	Writing library scripts
|41.16|	Distributing Vim scripts

     Next chapter: |usr_42.txt|  Add new menus
 Previous chapter: |usr_40.txt|  Make new commands
Table of contents: |usr_toc.txt|

==============================================================================
*41.1*	Introduction				*vim-script-intro* *script*

Your first experience with Vim scripts is the vimrc file.  Vim reads it when
it starts up and executes the commands.  You can set options to values you
prefer.  And you can use any colon command in it (commands that start with a
":"; these are sometimes referred to as Ex commands or command-line commands).
   Syntax files are also Vim scripts.  As are files that set options for a
specific file type.  A complicated macro can be defined by a separate Vim
script file.  You can think of other uses yourself.

Let's start with a simple example: >

	:let i = 1
	:while i < 5
	:  echo "count is" i
	:  let i += 1
	:endwhile
<
	Note:
	The ":" characters are not really needed here.  You only need to use
	them when you type a command.  In a Vim script file they can be left
	out.  We will use them here anyway to make clear these are colon
	commands and make them stand out from Normal mode commands.
	Note:
	You can try out the examples by yanking the lines from the text here
	and executing them with :@"

The output of the example code is:

	count is 1 ~
	count is 2 ~
	count is 3 ~
	count is 4 ~

In the first line the ":let" command assigns a value to a variable.  The
generic form is: >

	:let {variable} = {expression}

In this case the variable name is "i" and the expression is a simple value,
the number one.
   The ":while" command starts a loop.  The generic form is: >

	:while {condition}
	:  {statements}
	:endwhile

The statements until the matching ":endwhile" are executed for as long as the
condition is true.  The condition used here is the expression "i < 5".  This
is true when the variable i is smaller than five.
	Note:
	If you happen to write a while loop that keeps on running, you can
	interrupt it by pressing CTRL-C (CTRL-Break on MS-Windows).

The ":echo" command prints its arguments.  In this case the string "count is"
and the value of the variable i.  Since i is one, this will print:

	count is 1 ~

Then there is the ":let i += 1" command.  This does the same thing as
":let i = i + 1".  This adds one to the variable i and assigns the new value
to the same variable.

The example was given to explain the commands, but would you really want to
make such a loop it can be written much more compact: >

	:for i in range(1, 4)
	:  echo "count is" i
	:endfor

We won't explain how |:for| and |range()| work until later.  Follow the links
if you are impatient.


THREE KINDS OF NUMBERS

Numbers can be decimal, hexadecimal or octal.  A hexadecimal number starts
with "0x" or "0X".  For example "0x1f" is decimal 31.  An octal number starts
with a zero.  "017" is decimal 15.  Careful: don't put a zero before a decimal
number, it will be interpreted as an octal number!
   The ":echo" command always prints decimal numbers.  Example: >

	:echo 0x7f 036
<	127 30 ~

A number is made negative with a minus sign.  This also works for hexadecimal
and octal numbers.   A minus sign is also used for subtraction.  Compare this
with the previous example: >

	:echo 0x7f -036
<	97 ~

White space in an expression is ignored.  However, it's recommended to use it
for separating items, to make the expression easier to read.  For example, to
avoid the confusion with a negative number above, put a space between the
minus sign and the following number: >

	:echo 0x7f - 036

==============================================================================
*41.2*	Variables

A variable name consists of ASCII letters, digits and the underscore.  It
cannot start with a digit.  Valid variable names are:

	counter
	_aap3
	very_long_variable_name_with_underscores
	FuncLength
	LENGTH

Invalid names are "foo+bar" and "6var".
   These variables are global.  To see a list of currently defined variables
use this command: >

	:let

You can use global variables everywhere.  This also means that when the
variable "count" is used in one script file, it might also be used in another
file.  This leads to confusion at least, and real problems at worst.  To avoid
this, you can use a variable local to a script file by prepending "s:".  For
example, one script contains this code: >

	:let s:count = 1
	:while s:count < 5
	:  source other.vim
	:  let s:count += 1
	:endwhile

Since "s:count" is local to this script, you can be sure that sourcing the
"other.vim" script will not change this variable.  If "other.vim" also uses an
"s:count" variable, it will be a different copy, local to that script.  More
about script-local variables here: |script-variable|.

There are more kinds of variables, see |internal-variables|.  The most often
used ones are:

	b:name		variable local to a buffer
	w:name		variable local to a window
	g:name		global variable (also in a function)
	v:name		variable predefined by Vim


DELETING VARIABLES

Variables take up memory and show up in the output of the ":let" command.  To
delete a variable use the ":unlet" command.  Example: >

	:unlet s:count

This deletes the script-local variable "s:count" to free up the memory it
uses.  If you are not sure if the variable exists, and don't want an error
message when it doesn't, append !: >

	:unlet! s:count

When a script finishes, the local variables used there will not be
automatically freed.  The next time the script executes, it can still use the
old value.  Example: >

	:if !exists("s:call_count")
	:  let s:call_count = 0
	:endif
	:let s:call_count = s:call_count + 1
	:echo "called" s:call_count "times"

The "exists()" function checks if a variable has already been defined.  Its
argument is the name of the variable you want to check.  Not the variable
itself!  If you would do this: >

	:if !exists(s:call_count)

Then the value of s:call_count will be used as the name of the variable that
exists() checks.  That's not what you want.
   The exclamation mark ! negates a value.  When the value was true, it
becomes false.  When it was false, it becomes true.  You can read it as "not".
Thus "if !exists()" can be read as "if not exists()".
   What Vim calls true is anything that is not zero.  Zero is false.
	Note:
	Vim automatically converts a string to a number when it is looking for
	a number.  When using a string that doesn't start with a digit the
	resulting number is zero.  Thus look out for this: >
		:if "true"
<	The "true" will be interpreted as a zero, thus as false!


STRING VARIABLES AND CONSTANTS

So far only numbers were used for the variable value.  Strings can be used as
well.  Numbers and strings are the basic types of variables that Vim supports.
The type is dynamic, it is set each time when assigning a value to the
variable with ":let".  More about types in |41.8|.
   To assign a string value to a variable, you need to use a string constant.
There are two types of these.  First the string in double quotes: >

	:let name = "peter"
	:echo name
<	peter ~

If you want to include a double quote inside the string, put a backslash in
front of it: >

	:let name = "\"peter\""
	:echo name
<	"peter" ~

To avoid the need for a backslash, you can use a string in single quotes: >

	:let name = '"peter"'
	:echo name
<	"peter" ~

Inside a single-quote string all the characters are as they are.  Only the
single quote itself is special: you need to use two to get one.  A backslash
is taken literally, thus you can't use it to change the meaning of the
character after it.
   In double-quote strings it is possible to use special characters.  Here are
a few useful ones:

	\t		<Tab>
	\n		<NL>, line break
	\r		<CR>, <Enter>
	\e		<Esc>
	\b		<BS>, backspace
	\"		"
	\\		\, backslash
	\<Esc>		<Esc>
	\<C-W>		CTRL-W

The last two are just examples.  The  "\<name>" form can be used to include
the special key "name".
   See |expr-quote| for the full list of special items in a string.

==============================================================================
*41.3*	Expressions

Vim has a rich, yet simple way to handle expressions.  You can read the
definition here: |expression-syntax|.  Here we will show the most common
items.
   The numbers, strings and variables mentioned above are expressions by
themselves.  Thus everywhere an expression is expected, you can use a number,
string or variable.  Other basic items in an expression are:

	$NAME		environment variable
	&name		option
	@r		register

Examples: >

	:echo "The value of 'tabstop' is" &ts
	:echo "Your home directory is" $HOME
	:if @a > 5

The &name form can be used to save an option value, set it to a new value,
do something and restore the old value.  Example: >

	:let save_ic = &ic
	:set noic
	:/The Start/,$delete
	:let &ic = save_ic

This makes sure the "The Start" pattern is used with the 'ignorecase' option
off.  Still, it keeps the value that the user had set.  (Another way to do
this would be to add "\C" to the pattern, see |/\C|.)


MATHEMATICS

It becomes more interesting if we combine these basic items.  Let's start with
mathematics on numbers:

	a + b		add
	a - b		subtract
	a * b		multiply
	a / b		divide
	a % b		modulo

The usual precedence is used.  Example: >

	:echo 10 + 5 * 2
<	20 ~

Grouping is done with parentheses.  No surprises here.  Example: >

	:echo (10 + 5) * 2
<	30 ~

Strings can be concatenated with ".".  Example: >

	:echo "foo" . "bar"
<	foobar ~

When the ":echo" command gets multiple arguments, it separates them with a
space.  In the example the argument is a single expression, thus no space is
inserted.

Borrowed from the C language is the conditional expression:

	a ? b : c

If "a" evaluates to true "b" is used, otherwise "c" is used.  Example: >

	:let i = 4
	:echo i > 5 ? "i is big" : "i is small"
<	i is small ~

The three parts of the constructs are always evaluated first, thus you could
see it work as:

	(a) ? (b) : (c)

==============================================================================
*41.4*	Conditionals

The ":if" commands executes the following statements, until the matching
":endif", only when a condition is met.  The generic form is:

	:if {condition}
	   {statements}
	:endif

Only when the expression {condition} evaluates to true (non-zero) will the
{statements} be executed.  These must still be valid commands.  If they
contain garbage, Vim won't be able to find the ":endif".
   You can also use ":else".  The generic form for this is:

	:if {condition}
	   {statements}
	:else
	   {statements}
	:endif

The second {statements} is only executed if the first one isn't.
   Finally, there is ":elseif":

	:if {condition}
	   {statements}
	:elseif {condition}
	   {statements}
	:endif

This works just like using ":else" and then "if", but without the need for an
extra ":endif".
   A useful example for your vimrc file is checking the 'term' option and
doing something depending upon its value: >

	:if &term == "xterm"
	:  " Do stuff for xterm
	:elseif &term == "vt100"
	:  " Do stuff for a vt100 terminal
	:else
	:  " Do something for other terminals
	:endif


LOGIC OPERATIONS

We already used some of them in the examples.  These are the most often used
ones:

	a == b		equal to
	a != b		not equal to
	a >  b		greater than
	a >= b		greater than or equal to
	a <  b		less than
	a <= b		less than or equal to

The result is one if the condition is met and zero otherwise.  An example: >

	:if v:version >= 700
	:  echo "congratulations"
	:else
	:  echo "you are using an old version, upgrade!"
	:endif

Here "v:version" is a variable defined by Vim, which has the value of the Vim
version.  600 is for version 6.0.  Version 6.1 has the value 601.  This is
very useful to write a script that works with multiple versions of Vim.
|v:version|

The logic operators work both for numbers and strings.  When comparing two
strings, the mathematical difference is used.  This compares byte values,
which may not be right for some languages.
   When comparing a string with a number, the string is first converted to a
number.  This is a bit tricky, because when a string doesn't look like a
number, the number zero is used.  Example: >

	:if 0 == "one"
	:  echo "yes"
	:endif

This will echo "yes", because "one" doesn't look like a number, thus it is
converted to the number zero.

For strings there are two more items:

	a =~ b		matches with
	a !~ b		does not match with

The left item "a" is used as a string.  The right item "b" is used as a
pattern, like what's used for searching.  Example: >

	:if str =~ " "
	:  echo "str contains a space"
	:endif
	:if str !~ '\.$'
	:  echo "str does not end in a full stop"
	:endif

Notice the use of a single-quote string for the pattern.  This is useful,
because backslashes would need to be doubled in a double-quote string and
patterns tend to contain many backslashes.

The 'ignorecase' option is used when comparing strings.  When you don't want
that, append "#" to match case and "?" to ignore case.  Thus "==?" compares
two strings to be equal while ignoring case.  And "!~#" checks if a pattern
doesn't match, also checking the case of letters.  For the full table see
|expr-==|.


MORE LOOPING

The ":while" command was already mentioned.  Two more statements can be used
in between the ":while" and the ":endwhile":

	:continue		Jump back to the start of the while loop; the
				loop continues.
	:break			Jump forward to the ":endwhile"; the loop is
				discontinued.

Example: >

	:while counter < 40
	:  call do_something()
	:  if skip_flag
	:    continue
	:  endif
	:  if finished_flag
	:    break
	:  endif
	:  sleep 50m
	:endwhile

The ":sleep" command makes Vim take a nap.  The "50m" specifies fifty
milliseconds.  Another example is ":sleep 4", which sleeps for four seconds.

Even more looping can be done with the ":for" command, see below in |41.8|.

==============================================================================
*41.5*	Executing an expression

So far the commands in the script were executed by Vim directly.  The
":execute" command allows executing the result of an expression.  This is a
very powerful way to build commands and execute them.
   An example is to jump to a tag, which is contained in a variable: >

	:execute "tag " . tag_name

The "." is used to concatenate the string "tag " with the value of variable
"tag_name".  Suppose "tag_name" has the value "get_cmd", then the command that
will be executed is: >

	:tag get_cmd

The ":execute" command can only execute colon commands.  The ":normal" command
executes Normal mode commands.  However, its argument is not an expression but
the literal command characters.  Example: >

	:normal gg=G

This jumps to the first line and formats all lines with the "=" operator.
   To make ":normal" work with an expression, combine ":execute" with it.
Example: >

	:execute "normal " . normal_commands

The variable "normal_commands" must contain the Normal mode commands.
   Make sure that the argument for ":normal" is a complete command.  Otherwise
Vim will run into the end of the argument and abort the command.  For example,
if you start Insert mode, you must leave Insert mode as well.  This works: >

	:execute "normal Inew text \<Esc>"

This inserts "new text " in the current line.  Notice the use of the special
key "\<Esc>".  This avoids having to enter a real <Esc> character in your
script.

If you don't want to execute a string but evaluate it to get its expression
value, you can use the eval() function: >

	:let optname = "path"
	:let optval = eval('&' . optname)

A "&" character is prepended to "path", thus the argument to eval() is
"&path".  The result will then be the value of the 'path' option.
   The same thing can be done with: >
	:exe 'let optval = &' . optname

==============================================================================
*41.6*	Using functions

Vim defines many functions and provides a large amount of functionality that
way.  A few examples will be given in this section.  You can find the whole
list here: |functions|.

A function is called with the ":call" command.  The parameters are passed in
between parentheses separated by commas.  Example: >

	:call search("Date: ", "W")

This calls the search() function, with arguments "Date: " and "W".  The
search() function uses its first argument as a search pattern and the second
one as flags.  The "W" flag means the search doesn't wrap around the end of
the file.

A function can be called in an expression.  Example: >

	:let line = getline(".")
	:let repl = substitute(line, '\a', "*", "g")
	:call setline(".", repl)

The getline() function obtains a line from the current buffer.  Its argument
is a specification of the line number.  In this case "." is used, which means
the line where the cursor is.
   The substitute() function does something similar to the ":substitute"
command.  The first argument is the string on which to perform the
substitution.  The second argument is the pattern, the third the replacement
string.  Finally, the last arguments are the flags.
   The setline() function sets the line, specified by the first argument, to a
new string, the second argument.  In this example the line under the cursor is
replaced with the result of the substitute().  Thus the effect of the three
statements is equal to: >

	:substitute/\a/*/g

Using the functions becomes more interesting when you do more work before and
after the substitute() call.


FUNCTIONS						*function-list*

There are many functions.  We will mention them here, grouped by what they are
used for.  You can find an alphabetical list here: |functions|.  Use CTRL-] on
the function name to jump to detailed help on it.

String manipulation:					*string-functions*
	nr2char()		get a character by its ASCII value
	char2nr()		get ASCII value of a character
	str2nr()		convert a string to a Number
	str2float()		convert a string to a Float
	printf()		format a string according to % items
	escape()		escape characters in a string with a '\'
	shellescape()		escape a string for use with a shell command
	fnameescape()		escape a file name for use with a Vim command
	tr()			translate characters from one set to another
	strtrans()		translate a string to make it printable
	tolower()		turn a string to lowercase
	toupper()		turn a string to uppercase
	match()			position where a pattern matches in a string
	matchend()		position where a pattern match ends in a string
	matchstr()		match of a pattern in a string
	matchstrpos()		match and positions of a pattern in a string
	matchlist()		like matchstr() and also return submatches
	stridx()		first index of a short string in a long string
	strridx()		last index of a short string in a long string
	strlen()		length of a string in bytes
	strchars()		length of a string in characters
	strwidth()		size of string when displayed
	strdisplaywidth()	size of string when displayed, deals with tabs
	substitute()		substitute a pattern match with a string
	submatch()		get a specific match in ":s" and substitute()
	strpart()		get part of a string using byte index
	strcharpart()		get part of a string using char index
	strgetchar()		get character from a string using char index
	expand()		expand special keywords
	iconv()			convert text from one encoding to another
	byteidx()		byte index of a character in a string
	byteidxcomp()		like byteidx() but count composing characters
	repeat()		repeat a string multiple times
	eval()			evaluate a string expression
	execute()		execute an Ex command and get the output

List manipulation:					*list-functions*
	get()			get an item without error for wrong index
	len()			number of items in a List
	empty()			check if List is empty
	insert()		insert an item somewhere in a List
	add()			append an item to a List
	extend()		append a List to a List
	remove()		remove one or more items from a List
	copy()			make a shallow copy of a List
	deepcopy()		make a full copy of a List
	filter()		remove selected items from a List
	map()			change each List item
	sort()			sort a List
	reverse()		reverse the order of a List
	uniq()			remove copies of repeated adjacent items
	split()			split a String into a List
	join()			join List items into a String
	range()			return a List with a sequence of numbers
	string()		String representation of a List
	call()			call a function with List as arguments
	index()			index of a value in a List
	max()			maximum value in a List
	min()			minimum value in a List
	count()			count number of times a value appears in a List
	repeat()		repeat a List multiple times

Dictionary manipulation:				*dict-functions*
	get()			get an entry without an error for a wrong key
	len()			number of entries in a Dictionary
	has_key()		check whether a key appears in a Dictionary
	empty()			check if Dictionary is empty
	remove()		remove an entry from a Dictionary
	extend()		add entries from one Dictionary to another
	filter()		remove selected entries from a Dictionary
	map()			change each Dictionary entry
	keys()			get List of Dictionary keys
	values()		get List of Dictionary values
	items()			get List of Dictionary key-value pairs
	copy()			make a shallow copy of a Dictionary
	deepcopy()		make a full copy of a Dictionary
	string()		String representation of a Dictionary
	max()			maximum value in a Dictionary
	min()			minimum value in a Dictionary
	count()			count number of times a value appears

Floating point computation:				*float-functions*
	float2nr()		convert Float to Number
	abs()			absolute value (also works for Number)
	round()			round off
	ceil()			round up
	floor()			round down
	trunc()			remove value after decimal point
	fmod()			remainder of division
	exp()			exponential
	log()			natural logarithm (logarithm to base e)
	log10()			logarithm to base 10
	pow()			value of x to the exponent y
	sqrt()			square root
	sin()			sine
	cos()			cosine
	tan()			tangent
	asin()			arc sine
	acos()			arc cosine
	atan()			arc tangent
	atan2()			arc tangent
	sinh()			hyperbolic sine
	cosh()			hyperbolic cosine
	tanh()			hyperbolic tangent
	isnan()			check for not a number

Other computation:					*bitwise-function*
	and()			bitwise AND
	invert()		bitwise invert
	or()			bitwise OR
	xor()			bitwise XOR
	sha256()		SHA-256 hash

Variables:						*var-functions*
	type()			type of a variable
	islocked()		check if a variable is locked
	function()		get a Funcref for a function name
	getbufvar()		get a variable value from a specific buffer
	setbufvar()		set a variable in a specific buffer
	getwinvar()		get a variable from specific window
	gettabvar()		get a variable from specific tab page
	gettabwinvar()		get a variable from specific window & tab page
	setwinvar()		set a variable in a specific window
	settabvar()		set a variable in a specific tab page
	settabwinvar()		set a variable in a specific window & tab page
	garbagecollect()	possibly free memory

Cursor and mark position:		*cursor-functions* *mark-functions*
	col()			column number of the cursor or a mark
	virtcol()		screen column of the cursor or a mark
	line()			line number of the cursor or mark
	wincol()		window column number of the cursor
	winline()		window line number of the cursor
	cursor()		position the cursor at a line/column
	screencol()		get screen column of the cursor
	screenrow()		get screen row of the cursor
	getcurpos()		get position of the cursor
	getpos()		get position of cursor, mark, etc.
	setpos()		set position of cursor, mark, etc.
	byte2line()		get line number at a specific byte count
	line2byte()		byte count at a specific line
	diff_filler()		get the number of filler lines above a line
	screenattr()		get attribute at a screen line/row
	screenchar()		get character code at a screen line/row

Working with text in the current buffer:		*text-functions*
	getline()		get a line or list of lines from the buffer
	setline()		replace a line in the buffer
	append()		append line or list of lines in the buffer
	indent()		indent of a specific line
	cindent()		indent according to C indenting
	lispindent()		indent according to Lisp indenting
	nextnonblank()		find next non-blank line
	prevnonblank()		find previous non-blank line
	search()		find a match for a pattern
	searchpos()		find a match for a pattern
	searchpair()		find the other end of a start/skip/end
	searchpairpos()		find the other end of a start/skip/end
	searchdecl()		search for the declaration of a name
	getcharsearch()		return character search information
	setcharsearch()		set character search information

					*system-functions* *file-functions*
System functions and manipulation of files:
	glob()			expand wildcards
	globpath()		expand wildcards in a number of directories
	glob2regpat()		convert a glob pattern into a search pattern
	findfile()		find a file in a list of directories
	finddir()		find a directory in a list of directories
	resolve()		find out where a shortcut points to
	fnamemodify()		modify a file name
	pathshorten()		shorten directory names in a path
	simplify()		simplify a path without changing its meaning
	executable()		check if an executable program exists
	exepath()		full path of an executable program
	filereadable()		check if a file can be read
	filewritable()		check if a file can be written to
	getfperm()		get the permissions of a file
	setfperm()		set the permissions of a file
	getftype()		get the kind of a file
	isdirectory()		check if a directory exists
	getfsize()		get the size of a file
	getcwd()		get the current working directory
	haslocaldir()		check if current window used |:lcd|
	tempname()		get the name of a temporary file
	mkdir()			create a new directory
	delete()		delete a file
	rename()		rename a file
	system()		get the result of a shell command as a string
	systemlist()		get the result of a shell command as a list
	hostname()		name of the system
	readfile()		read a file into a List of lines
	writefile()		write a List of lines into a file

Date and Time:				*date-functions* *time-functions*
	getftime()		get last modification time of a file
	localtime()		get current time in seconds
	strftime()		convert time to a string
	reltime()		get the current or elapsed time accurately
	reltimestr()		convert reltime() result to a string
	reltimefloat()		convert reltime() result to a Float

			*buffer-functions* *window-functions* *arg-functions*
Buffers, windows and the argument list:
	argc()			number of entries in the argument list
	argidx()		current position in the argument list
	arglistid()		get id of the argument list
	argv()			get one entry from the argument list
	bufexists()		check if a buffer exists
	buflisted()		check if a buffer exists and is listed
	bufloaded()		check if a buffer exists and is loaded
	bufname()		get the name of a specific buffer
	bufnr()			get the buffer number of a specific buffer
	tabpagebuflist()	return List of buffers in a tab page
	tabpagenr()		get the number of a tab page
	tabpagewinnr()		like winnr() for a specified tab page
	winnr()			get the window number for the current window
	bufwinid()		get the window ID of a specific buffer
	bufwinnr()		get the window number of a specific buffer
	winbufnr()		get the buffer number of a specific window
	getbufline()		get a list of lines from the specified buffer
	win_findbuf()		find windows containing a buffer
	win_getid()		get window ID of a window
	win_gotoid()		go to window with ID
	win_id2tabwin()		get tab and window nr from window ID
	win_id2win()		get window nr from window ID
	getbufinfo()		get a list with buffer information
	gettabinfo()		get a list with tab page information
	getwininfo()		get a list with window information

Command line:					*command-line-functions*
	getcmdline()		get the current command line
	getcmdpos()		get position of the cursor in the command line
	setcmdpos()		set position of the cursor in the command line
	getcmdtype()		return the current command-line type
	getcmdwintype()		return the current command-line window type
	getcompletion()		list of command-line completion matches

Quickfix and location lists:			*quickfix-functions*
	getqflist()		list of quickfix errors
	setqflist()		modify a quickfix list
	getloclist()		list of location list items
	setloclist()		modify a location list

Insert mode completion:				*completion-functions*
	complete()		set found matches
	complete_add()		add to found matches
	complete_check()	check if completion should be aborted
	pumvisible()		check if the popup menu is displayed

Folding:					*folding-functions*
	foldclosed()		check for a closed fold at a specific line
	foldclosedend()		like foldclosed() but return the last line
	foldlevel()		check for the fold level at a specific line
	foldtext()		generate the line displayed for a closed fold
	foldtextresult()	get the text displayed for a closed fold

Syntax and highlighting:	  *syntax-functions* *highlighting-functions*
	clearmatches()		clear all matches defined by |matchadd()| and
				the |:match| commands
	getmatches()		get all matches defined by |matchadd()| and
				the |:match| commands
	hlexists()		check if a highlight group exists
	hlID()			get ID of a highlight group
	synID()			get syntax ID at a specific position
	synIDattr()		get a specific attribute of a syntax ID
	synIDtrans()		get translated syntax ID
	synstack()		get list of syntax IDs at a specific position
	synconcealed()		get info about concealing
	diff_hlID()		get highlight ID for diff mode at a position
	matchadd()		define a pattern to highlight (a "match")
	matchaddpos()		define a list of positions to highlight
	matcharg()		get info about |:match| arguments
	matchdelete()		delete a match defined by |matchadd()| or a
				|:match| command
	setmatches()		restore a list of matches saved by
				|getmatches()|

Spelling:					*spell-functions*
	spellbadword()		locate badly spelled word at or after cursor
	spellsuggest()		return suggested spelling corrections
	soundfold()		return the sound-a-like equivalent of a word

History:					*history-functions*
	histadd()		add an item to a history
	histdel()		delete an item from a history
	histget()		get an item from a history
	histnr()		get highest index of a history list

Interactive:					*interactive-functions*
	browse()		put up a file requester
	browsedir()		put up a directory requester
	confirm()		let the user make a choice
	getchar()		get a character from the user
	getcharmod()		get modifiers for the last typed character
	feedkeys()		put characters in the typeahead queue
	input()			get a line from the user
	inputlist()		let the user pick an entry from a list
	inputsecret()		get a line from the user without showing it
	inputdialog()		get a line from the user in a dialog
	inputsave()		save and clear typeahead
	inputrestore()		restore typeahead

GUI:						*gui-functions*
	getfontname()		get name of current font being used
	getwinposx()		X position of the GUI Vim window
	getwinposy()		Y position of the GUI Vim window

Vim server:					*server-functions*
	serverlist()		return the list of server names
	remote_send()		send command characters to a Vim server
	remote_expr()		evaluate an expression in a Vim server
	server2client()		send a reply to a client of a Vim server
	remote_peek()		check if there is a reply from a Vim server
	remote_read()		read a reply from a Vim server
	foreground()		move the Vim window to the foreground
	remote_foreground()	move the Vim server window to the foreground

Window size and position:			*window-size-functions*
	winheight()		get height of a specific window
	winwidth()		get width of a specific window
	winrestcmd()		return command to restore window sizes
	winsaveview()		get view of current window
	winrestview()		restore saved view of current window

Mappings:				    *mapping-functions*
	hasmapto()		check if a mapping exists
	mapcheck()		check if a matching mapping exists
	maparg()		get rhs of a mapping
	wildmenumode()		check if the wildmode is active

Testing:				    *test-functions*
	assert_equal()		assert that two expressions values are equal
	assert_notequal()	assert that two expressions values are not equal
	assert_inrange()	assert that an expression is inside a range
	assert_match()		assert that a pattern matches the value
	assert_notmatch()	assert that a pattern does not match the value
	assert_false()		assert that an expression is false
	assert_true()		assert that an expression is true
	assert_exception()	assert that a command throws an exception
	assert_fails()		assert that a function call fails
	test_alloc_fail()	make memory allocation fail
	test_autochdir()	enable 'autochdir' during startup
	test_disable_char_avail()	test without typeahead
	test_garbagecollect_now()	free memory right now
	test_null_channel()	return a null Channel
	test_null_dict()	return a null Dict
	test_null_job()		return a null Job
	test_null_list()	return a null List
	test_null_partial()	return a null Partial function
	test_null_string()	return a null String

Inter-process communication:		    *channel-functions*
	ch_canread()		check if there is something to read
	ch_open()		open a channel
	ch_close()		close a channel
	ch_close_in()		close the in part of a channel
	ch_read()		read a message from a channel
	ch_readraw()		read a raw message from a channel
	ch_sendexpr()		send a JSON message over a channel
	ch_sendraw()		send a raw message over a channel
	ch_evalexpr()		evaluates an expression over channel
	ch_evalraw()		evaluates a raw string over channel
	ch_status()		get status of a channel
	ch_getbufnr()		get the buffer number of a channel
	ch_getjob()		get the job associated with a channel
	ch_info()		get channel information
	ch_log()		write a message in the channel log file
	ch_logfile()		set the channel log file
	ch_setoptions()		set the options for a channel
	json_encode()		encode an expression to a JSON string
	json_decode()		decode a JSON string to Vim types
	js_encode()		encode an expression to a JSON string
	js_decode()		decode a JSON string to Vim types

Jobs:		    			        *job-functions*
	job_start()		start a job
	job_stop()		stop a job
	job_status()		get the status of a job
	job_getchannel()	get the channel used by a job
	job_info()		get information about a job
	job_setoptions()	set options for a job

Timers:						*timer-functions*
	timer_start()		create a timer
	timer_pause()		pause or unpause a timer
	timer_stop()		stop a timer
	timer_stopall()		stop all timers
	timer_info()		get information about timers

Various:					*various-functions*
	mode()			get current editing mode
	visualmode()		last visual mode used
	exists()		check if a variable, function, etc. exists
	has()			check if a feature is supported in Vim
	changenr()		return number of most recent change
	cscope_connection()	check if a cscope connection exists
	did_filetype()		check if a FileType autocommand was used
	eventhandler()		check if invoked by an event handler
	getpid()		get process ID of Vim

	libcall()		call a function in an external library
	libcallnr()		idem, returning a number

	undofile()		get the name of the undo file
	undotree()		return the state of the undo tree

	getreg()		get contents of a register
	getregtype()		get type of a register
	setreg()		set contents and type of a register

	shiftwidth()		effective value of 'shiftwidth'

	wordcount()		get byte/word/char count of buffer

	taglist()		get list of matching tags
	tagfiles()		get a list of tags files

	luaeval()		evaluate Lua expression
	mzeval()		evaluate |MzScheme| expression
	perleval()		evaluate Perl expression (|+perl|)
	py3eval()		evaluate Python expression (|+python3|)
	pyeval()		evaluate Python expression (|+python|)

==============================================================================
*41.7*	Defining a function

Vim enables you to define your own functions.  The basic function declaration
begins as follows: >

	:function {name}({var1}, {var2}, ...)
	:  {body}
	:endfunction
<
	Note:
	Function names must begin with a capital letter.

Let's define a short function to return the smaller of two numbers.  It starts
with this line: >

	:function Min(num1, num2)

This tells Vim that the function is named "Min" and it takes two arguments:
"num1" and "num2".
   The first thing you need to do is to check to see which number is smaller:
   >
	:  if a:num1 < a:num2

The special prefix "a:" tells Vim that the variable is a function argument.
Let's assign the variable "smaller" the value of the smallest number: >

	:  if a:num1 < a:num2
	:    let smaller = a:num1
	:  else
	:    let smaller = a:num2
	:  endif

The variable "smaller" is a local variable.  Variables used inside a function
are local unless prefixed by something like "g:", "a:", or "s:".

	Note:
	To access a global variable from inside a function you must prepend
	"g:" to it.  Thus "g:today" inside a function is used for the global
	variable "today", and "today" is another variable, local to the
	function.

You now use the ":return" statement to return the smallest number to the user.
Finally, you end the function: >

	:  return smaller
	:endfunction

The complete function definition is as follows: >

	:function Min(num1, num2)
	:  if a:num1 < a:num2
	:    let smaller = a:num1
	:  else
	:    let smaller = a:num2
	:  endif
	:  return smaller
	:endfunction

For people who like short functions, this does the same thing: >

	:function Min(num1, num2)
	:  if a:num1 < a:num2
	:    return a:num1
	:  endif
	:  return a:num2
	:endfunction

A user defined function is called in exactly the same way as a built-in
function.  Only the name is different.  The Min function can be used like
this: >

	:echo Min(5, 8)

Only now will the function be executed and the lines be interpreted by Vim.
If there are mistakes, like using an undefined variable or function, you will
now get an error message.  When defining the function these errors are not
detected.

When a function reaches ":endfunction" or ":return" is used without an
argument, the function returns zero.

To redefine a function that already exists, use the ! for the ":function"
command: >

	:function!  Min(num1, num2, num3)


USING A RANGE

The ":call" command can be given a line range.  This can have one of two
meanings.  When a function has been defined with the "range" keyword, it will
take care of the line range itself.
  The function will be passed the variables "a:firstline" and "a:lastline".
These will have the line numbers from the range the function was called with.
Example: >

	:function Count_words() range
	:  let lnum = a:firstline
	:  let n = 0
	:  while lnum <= a:lastline
	:    let n = n + len(split(getline(lnum)))
	:    let lnum = lnum + 1
	:  endwhile
	:  echo "found " . n . " words"
	:endfunction

You can call this function with: >

	:10,30call Count_words()

It will be executed once and echo the number of words.
   The other way to use a line range is by defining a function without the
"range" keyword.  The function will be called once for every line in the
range, with the cursor in that line.  Example: >

	:function  Number()
	:  echo "line " . line(".") . " contains: " . getline(".")
	:endfunction

If you call this function with: >

	:10,15call Number()

The function will be called six times.


VARIABLE NUMBER OF ARGUMENTS

Vim enables you to define functions that have a variable number of arguments.
The following command, for instance, defines a function that must have 1
argument (start) and can have up to 20 additional arguments: >

	:function Show(start, ...)

The variable "a:1" contains the first optional argument, "a:2" the second, and
so on.  The variable "a:0" contains the number of extra arguments.
   For example: >

	:function Show(start, ...)
	:  echohl Title
	:  echo "start is " . a:start
	:  echohl None
	:  let index = 1
	:  while index <= a:0
	:    echo "  Arg " . index . " is " . a:{index}
	:    let index = index + 1
	:  endwhile
	:  echo ""
	:endfunction

This uses the ":echohl" command to specify the highlighting used for the
following ":echo" command.  ":echohl None" stops it again.  The ":echon"
command works like ":echo", but doesn't output a line break.

You can also use the a:000 variable, it is a List of all the "..." arguments.
See |a:000|.


LISTING FUNCTIONS

The ":function" command lists the names and arguments of all user-defined
functions: >

	:function
<	function Show(start, ...) ~
	function GetVimIndent() ~
	function SetSyn(name) ~

To see what a function does, use its name as an argument for ":function": >

	:function SetSyn
<	1     if &syntax == '' ~
	2       let &syntax = a:name ~
	3     endif ~
	   endfunction ~


DEBUGGING

The line number is useful for when you get an error message or when debugging.
See |debug-scripts| about debugging mode.
   You can also set the 'verbose' option to 12 or higher to see all function
calls.  Set it to 15 or higher to see every executed line.


DELETING A FUNCTION

To delete the Show() function: >

	:delfunction Show

You get an error when the function doesn't exist.


FUNCTION REFERENCES

Sometimes it can be useful to have a variable point to one function or
another.  You can do it with the function() function.  It turns the name of a
function into a reference: >

	:let result = 0		" or 1
	:function! Right()
	:  return 'Right!'
	:endfunc
	:function! Wrong()
	:  return 'Wrong!'
	:endfunc
	:
	:if result == 1
	:  let Afunc = function('Right')
	:else
	:  let Afunc = function('Wrong')
	:endif
	:echo call(Afunc, [])
<	Wrong! ~

Note that the name of a variable that holds a function reference must start
with a capital.  Otherwise it could be confused with the name of a builtin
function.
   The way to invoke a function that a variable refers to is with the call()
function.  Its first argument is the function reference, the second argument
is a List with arguments.

Function references are most useful in combination with a Dictionary, as is
explained in the next section.

==============================================================================
*41.8*	Lists and Dictionaries

So far we have used the basic types String and Number.  Vim also supports two
composite types: List and Dictionary.

A List is an ordered sequence of things.  The things can be any kind of value,
thus you can make a List of numbers, a List of Lists and even a List of mixed
items.  To create a List with three strings: >

	:let alist = ['aap', 'mies', 'noot']

The List items are enclosed in square brackets and separated by commas.  To
create an empty List: >

	:let alist = []

You can add items to a List with the add() function: >

	:let alist = []
	:call add(alist, 'foo')
	:call add(alist, 'bar')
	:echo alist
<	['foo', 'bar'] ~

List concatenation is done with +: >

	:echo alist + ['foo', 'bar']
<	['foo', 'bar', 'foo', 'bar'] ~

Or, if you want to extend a List directly: >

	:let alist = ['one']
	:call extend(alist, ['two', 'three'])
	:echo alist
<	['one', 'two', 'three'] ~

Notice that using add() will have a different effect: >

	:let alist = ['one']
	:call add(alist, ['two', 'three'])
	:echo alist
<	['one', ['two', 'three']] ~

The second argument of add() is added as a single item.


FOR LOOP

One of the nice things you can do with a List is iterate over it: >

	:let alist = ['one', 'two', 'three']
	:for n in alist
	:  echo n
	:endfor
<	one ~
	two ~
	three ~

This will loop over each element in List "alist", assigning the value to
variable "n".  The generic form of a for loop is: >

	:for {varname} in {listexpression}
	:  {commands}
	:endfor

To loop a certain number of times you need a List of a specific length.  The
range() function creates one for you: >

	:for a in range(3)
	:  echo a
	:endfor
<	0 ~
	1 ~
	2 ~

Notice that the first item of the List that range() produces is zero, thus the
last item is one less than the length of the list.
   You can also specify the maximum value, the stride and even go backwards: >

	:for a in range(8, 4, -2)
	:  echo a
	:endfor
<	8 ~
	6 ~
	4 ~

A more useful example, looping over lines in the buffer: >

	:for line in getline(1, 20)
	:  if line =~ "Date: "
	:    echo matchstr(line, 'Date: \zs.*')
	:  endif
	:endfor

This looks into lines 1 to 20 (inclusive) and echoes any date found in there.


DICTIONARIES

A Dictionary stores key-value pairs.  You can quickly lookup a value if you
know the key.  A Dictionary is created with curly braces: >

	:let uk2nl = {'one': 'een', 'two': 'twee', 'three': 'drie'}

Now you can lookup words by putting the key in square brackets: >

	:echo uk2nl['two']
<	twee ~

The generic form for defining a Dictionary is: >

	{<key> : <value>, ...}

An empty Dictionary is one without any keys: >

	{}

The possibilities with Dictionaries are numerous.  There are various functions
for them as well.  For example, you can obtain a list of the keys and loop
over them: >

	:for key in keys(uk2nl)
	:  echo key
	:endfor
<	three ~
	one ~
	two ~

You will notice the keys are not ordered.  You can sort the list to get a
specific order: >

	:for key in sort(keys(uk2nl))
	:  echo key
	:endfor
<	one ~
	three ~
	two ~

But you can never get back the order in which items are defined.  For that you
need to use a List, it stores items in an ordered sequence.


DICTIONARY FUNCTIONS

The items in a Dictionary can normally be obtained with an index in square
brackets: >

	:echo uk2nl['one']
<	een ~

A method that does the same, but without so many punctuation characters: >

	:echo uk2nl.one
<	een ~

This only works for a key that is made of ASCII letters, digits and the
underscore.  You can also assign a new value this way: >

	:let uk2nl.four = 'vier'
	:echo uk2nl
<	{'three': 'drie', 'four': 'vier', 'one': 'een', 'two': 'twee'} ~

And now for something special: you can directly define a function and store a
reference to it in the dictionary: >

	:function uk2nl.translate(line) dict
	:  return join(map(split(a:line), 'get(self, v:val, "???")'))
	:endfunction

Let's first try it out: >

	:echo uk2nl.translate('three two five one')
<	drie twee ??? een ~

The first special thing you notice is the "dict" at the end of the ":function"
line.  This marks the function as being used from a Dictionary.  The "self"
local variable will then refer to that Dictionary.
   Now let's break up the complicated return command: >

	split(a:line)

The split() function takes a string, chops it into whitespace separated words
and returns a list with these words.  Thus in the example it returns: >

	:echo split('three two five one')
<	['three', 'two', 'five', 'one'] ~

This list is the first argument to the map() function.  This will go through
the list, evaluating its second argument with "v:val" set to the value of each
item.  This is a shortcut to using a for loop.  This command: >

	:let alist = map(split(a:line), 'get(self, v:val, "???")')

Is equivalent to: >

	:let alist = split(a:line)
	:for idx in range(len(alist))
	:  let alist[idx] = get(self, alist[idx], "???")
	:endfor

The get() function checks if a key is present in a Dictionary.  If it is, then
the value is retrieved.  If it isn't, then the default value is returned, in
the example it's '???'.  This is a convenient way to handle situations where a
key may not be present and you don't want an error message.

The join() function does the opposite of split(): it joins together a list of
words, putting a space in between.
  This combination of split(), map() and join() is a nice way to filter a line
of words in a very compact way.


OBJECT ORIENTED PROGRAMMING

Now that you can put both values and functions in a Dictionary, you can
actually use a Dictionary like an object.
   Above we used a Dictionary for translating Dutch to English.  We might want
to do the same for other languages.  Let's first make an object (aka
Dictionary) that has the translate function, but no words to translate: >

	:let transdict = {}
	:function transdict.translate(line) dict
	:  return join(map(split(a:line), 'get(self.words, v:val, "???")'))
	:endfunction

It's slightly different from the function above, using 'self.words' to lookup
word translations.  But we don't have a self.words.  Thus you could call this
an abstract class.

Now we can instantiate a Dutch translation object: >

	:let uk2nl = copy(transdict)
	:let uk2nl.words = {'one': 'een', 'two': 'twee', 'three': 'drie'}
	:echo uk2nl.translate('three one')
<	drie een ~

And a German translator: >

	:let uk2de = copy(transdict)
	:let uk2de.words = {'one': 'eins', 'two': 'zwei', 'three': 'drei'}
	:echo uk2de.translate('three one')
<	drei eins ~

You see that the copy() function is used to make a copy of the "transdict"
Dictionary and then the copy is changed to add the words.  The original
remains the same, of course.

Now you can go one step further, and use your preferred translator: >

	:if $LANG =~ "de"
	:  let trans = uk2de
	:else
	:  let trans = uk2nl
	:endif
	:echo trans.translate('one two three')
<	een twee drie ~

Here "trans" refers to one of the two objects (Dictionaries).  No copy is
made.  More about List and Dictionary identity can be found at |list-identity|
and |dict-identity|.

Now you might use a language that isn't supported.  You can overrule the
translate() function to do nothing: >

	:let uk2uk = copy(transdict)
	:function! uk2uk.translate(line)
	:  return a:line
	:endfunction
	:echo uk2uk.translate('three one wladiwostok')
<	three one wladiwostok ~

Notice that a ! was used to overwrite the existing function reference.  Now
use "uk2uk" when no recognized language is found: >

	:if $LANG =~ "de"
	:  let trans = uk2de
	:elseif $LANG =~ "nl"
	:  let trans = uk2nl
	:else
	:  let trans = uk2uk
	:endif
	:echo trans.translate('one two three')
<	one two three ~

For further reading see |Lists| and |Dictionaries|.

==============================================================================
*41.9*	Exceptions

Let's start with an example: >

	:try
	:   read ~/templates/pascal.tmpl
	:catch /E484:/
	:   echo "Sorry, the Pascal template file cannot be found."
	:endtry

The ":read" command will fail if the file does not exist.  Instead of
generating an error message, this code catches the error and gives the user a
nice message.

For the commands in between ":try" and ":endtry" errors are turned into
exceptions.  An exception is a string.  In the case of an error the string
contains the error message.  And every error message has a number.  In this
case, the error we catch contains "E484:".  This number is guaranteed to stay
the same (the text may change, e.g., it may be translated).

When the ":read" command causes another error, the pattern "E484:" will not
match in it.  Thus this exception will not be caught and result in the usual
error message.

You might be tempted to do this: >

	:try
	:   read ~/templates/pascal.tmpl
	:catch
	:   echo "Sorry, the Pascal template file cannot be found."
	:endtry

This means all errors are caught.  But then you will not see errors that are
useful, such as "E21: Cannot make changes, 'modifiable' is off".

Another useful mechanism is the ":finally" command: >

	:let tmp = tempname()
	:try
	:   exe ".,$write " . tmp
	:   exe "!filter " . tmp
	:   .,$delete
	:   exe "$read " . tmp
	:finally
	:   call delete(tmp)
	:endtry

This filters the lines from the cursor until the end of the file through the
"filter" command, which takes a file name argument.  No matter if the
filtering works, something goes wrong in between ":try" and ":finally" or the
user cancels the filtering by pressing CTRL-C, the "call delete(tmp)" is
always executed.  This makes sure you don't leave the temporary file behind.

More information about exception handling can be found in the reference
manual: |exception-handling|.

==============================================================================
*41.10*	Various remarks

Here is a summary of items that apply to Vim scripts.  They are also mentioned
elsewhere, but form a nice checklist.

The end-of-line character depends on the system.  For Unix a single <NL>
character is used.  For MS-DOS, Windows, OS/2 and the like, <CR><LF> is used.
This is important when using mappings that end in a <CR>.  See |:source_crnl|.


WHITE SPACE

Blank lines are allowed and ignored.

Leading whitespace characters (blanks and TABs) are always ignored.  The
whitespaces between parameters (e.g. between the 'set' and the 'cpoptions' in
the example below) are reduced to one blank character and plays the role of a
separator, the whitespaces after the last (visible) character may or may not
be ignored depending on the situation, see below.

For a ":set" command involving the "=" (equal) sign, such as in: >

	:set cpoptions    =aABceFst

the whitespace immediately before the "=" sign is ignored.  But there can be
no whitespace after the "=" sign!

To include a whitespace character in the value of an option, it must be
escaped by a "\" (backslash)  as in the following example: >

	:set tags=my\ nice\ file

The same example written as: >

	:set tags=my nice file

will issue an error, because it is interpreted as: >

	:set tags=my
	:set nice
	:set file


COMMENTS

The character " (the double quote mark) starts a comment.  Everything after
and including this character until the end-of-line is considered a comment and
is ignored, except for commands that don't consider comments, as shown in
examples below.  A comment can start on any character position on the line.

There is a little "catch" with comments for some commands.  Examples: >

	:abbrev dev development		" shorthand
	:map <F3> o#include		" insert include
	:execute cmd			" do it
	:!ls *.c			" list C files

The abbreviation 'dev' will be expanded to 'development     " shorthand'.  The
mapping of <F3> will actually be the whole line after the 'o# ....' including
the '" insert include'.  The "execute" command will give an error.  The "!"
command will send everything after it to the shell, causing an error for an
unmatched '"' character.
   There can be no comment after ":map", ":abbreviate", ":execute" and "!"
commands (there are a few more commands with this restriction).  For the
":map", ":abbreviate" and ":execute" commands there is a trick: >

	:abbrev dev development|" shorthand
	:map <F3> o#include|" insert include
	:execute cmd			|" do it

With the '|' character the command is separated from the next one.  And that
next command is only a comment.  For the last command you need to do two
things: |:execute| and use '|': >
	:exe '!ls *.c'			|" list C files

Notice that there is no white space before the '|' in the abbreviation and
mapping.  For these commands, any character until the end-of-line or '|' is
included.  As a consequence of this behavior, you don't always see that
trailing whitespace is included: >

	:map <F4> o#include  

To spot these problems, you can set the 'list' option when editing vimrc
files.

For Unix there is one special way to comment a line, that allows making a Vim
script executable: >
	#!/usr/bin/env vim -S
	echo "this is a Vim script"
	quit

The "#" command by itself lists a line with the line number.  Adding an
exclamation mark changes it into doing nothing, so that you can add the shell
command to execute the rest of the file. |:#!| |-S|


PITFALLS

Even bigger problem arises in the following example: >

	:map ,ab o#include
	:unmap ,ab 

Here the unmap command will not work, because it tries to unmap ",ab ".  This
does not exist as a mapped sequence.  An error will be issued, which is very
hard to identify, because the ending whitespace character in ":unmap ,ab " is
not visible.

And this is the same as what happens when one uses a comment after an 'unmap'
command: >

	:unmap ,ab     " comment

Here the comment part will be ignored.  However, Vim will try to unmap
',ab     ', which does not exist.  Rewrite it as: >

	:unmap ,ab|    " comment


RESTORING THE VIEW

Sometimes you want to make a change and go back to where the cursor was.
Restoring the relative position would also be nice, so that the same line
appears at the top of the window.
   This example yanks the current line, puts it above the first line in the
file and then restores the view: >

	map ,p ma"aYHmbgg"aP`bzt`a

What this does: >
	ma"aYHmbgg"aP`bzt`a
<	ma			set mark a at cursor position
	  "aY			yank current line into register a
	     Hmb		go to top line in window and set mark b there
		gg		go to first line in file
		  "aP		put the yanked line above it
		     `b		go back to top line in display
		       zt	position the text in the window as before
			 `a	go back to saved cursor position


PACKAGING

To avoid your function names to interfere with functions that you get from
others, use this scheme:
- Prepend a unique string before each function name.  I often use an
  abbreviation.  For example, "OW_" is used for the option window functions.
- Put the definition of your functions together in a file.  Set a global
  variable to indicate that the functions have been loaded.  When sourcing the
  file again, first unload the functions.
Example: >

	" This is the XXX package

	if exists("XXX_loaded")
	  delfun XXX_one
	  delfun XXX_two
	endif

	function XXX_one(a)
		... body of function ...
	endfun

	function XXX_two(b)
		... body of function ...
	endfun

	let XXX_loaded = 1

==============================================================================
*41.11*	Writing a plugin				*write-plugin*

You can write a Vim script in such a way that many people can use it.  This is
called a plugin.  Vim users can drop your script in their plugin directory and
use its features right away |add-plugin|.

There are actually two types of plugins:

  global plugins: For all types of files.
filetype plugins: Only for files of a specific type.

In this section the first type is explained.  Most items are also relevant for
writing filetype plugins.  The specifics for filetype plugins are in the next
section |write-filetype-plugin|.


NAME

First of all you must choose a name for your plugin.  The features provided
by the plugin should be clear from its name.  And it should be unlikely that
someone else writes a plugin with the same name but which does something
different.  And please limit the name to 8 characters, to avoid problems on
old Windows systems.

A script that corrects typing mistakes could be called "typecorr.vim".  We
will use it here as an example.

For the plugin to work for everybody, it should follow a few guidelines.  This
will be explained step-by-step.  The complete example plugin is at the end.


BODY

Let's start with the body of the plugin, the lines that do the actual work: >

 14	iabbrev teh the
 15	iabbrev otehr other
 16	iabbrev wnat want
 17	iabbrev synchronisation
 18		\ synchronization
 19	let s:count = 4

The actual list should be much longer, of course.

The line numbers have only been added to explain a few things, don't put them
in your plugin file!


HEADER

You will probably add new corrections to the plugin and soon have several
versions lying around.  And when distributing this file, people will want to
know who wrote this wonderful plugin and where they can send remarks.
Therefore, put a header at the top of your plugin: >

  1	" Vim global plugin for correcting typing mistakes
  2	" Last Change:	2000 Oct 15
  3	" Maintainer:	Bram Moolenaar <Bram@vim.org>

About copyright and licensing: Since plugins are very useful and it's hardly
worth restricting their distribution, please consider making your plugin
either public domain or use the Vim |license|.  A short note about this near
the top of the plugin should be sufficient.  Example: >

  4	" License:	This file is placed in the public domain.


LINE CONTINUATION, AVOIDING SIDE EFFECTS		*use-cpo-save*

In line 18 above, the line-continuation mechanism is used |line-continuation|.
Users with 'compatible' set will run into trouble here, they will get an error
message.  We can't just reset 'compatible', because that has a lot of side
effects.  To avoid this, we will set the 'cpoptions' option to its Vim default
value and restore it later.  That will allow the use of line-continuation and
make the script work for most people.  It is done like this: >

 11	let s:save_cpo = &cpo
 12	set cpo&vim
 ..
 42	let &cpo = s:save_cpo
 43	unlet s:save_cpo

We first store the old value of 'cpoptions' in the s:save_cpo variable.  At
the end of the plugin this value is restored.

Notice that a script-local variable is used |s:var|.  A global variable could
already be in use for something else.  Always use script-local variables for
things that are only used in the script.


NOT LOADING

It's possible that a user doesn't always want to load this plugin.  Or the
system administrator has dropped it in the system-wide plugin directory, but a
user has his own plugin he wants to use.  Then the user must have a chance to
disable loading this specific plugin.  This will make it possible: >

  6	if exists("g:loaded_typecorr")
  7	  finish
  8	endif
  9	let g:loaded_typecorr = 1

This also avoids that when the script is loaded twice it would cause error
messages for redefining functions and cause trouble for autocommands that are
added twice.

The name is recommended to start with "loaded_" and then the file name of the
plugin, literally.  The "g:" is prepended just to avoid mistakes when using
the variable in a function (without "g:" it would be a variable local to the
function).

Using "finish" stops Vim from reading the rest of the file, it's much quicker
than using if-endif around the whole file.


MAPPING

Now let's make the plugin more interesting: We will add a mapping that adds a
correction for the word under the cursor.  We could just pick a key sequence
for this mapping, but the user might already use it for something else.  To
allow the user to define which keys a mapping in a plugin uses, the <Leader>
item can be used: >

 22	  map <unique> <Leader>a  <Plug>TypecorrAdd

The "<Plug>TypecorrAdd" thing will do the work, more about that further on.

The user can set the "mapleader" variable to the key sequence that he wants
this mapping to start with.  Thus if the user has done: >

	let mapleader = "_"

the mapping will define "_a".  If the user didn't do this, the default value
will be used, which is a backslash.  Then a map for "\a" will be defined.

Note that <unique> is used, this will cause an error message if the mapping
already happened to exist. |:map-<unique>|

But what if the user wants to define his own key sequence?  We can allow that
with this mechanism: >

 21	if !hasmapto('<Plug>TypecorrAdd')
 22	  map <unique> <Leader>a  <Plug>TypecorrAdd
 23	endif

This checks if a mapping to "<Plug>TypecorrAdd" already exists, and only
defines the mapping from "<Leader>a" if it doesn't.  The user then has a
chance of putting this in his vimrc file: >

	map ,c  <Plug>TypecorrAdd

Then the mapped key sequence will be ",c" instead of "_a" or "\a".


PIECES

If a script gets longer, you often want to break up the work in pieces.  You
can use functions or mappings for this.  But you don't want these functions
and mappings to interfere with the ones from other scripts.  For example, you
could define a function Add(), but another script could try to define the same
function.  To avoid this, we define the function local to the script by
prepending it with "s:".

We will define a function that adds a new typing correction: >

 30	function s:Add(from, correct)
 31	  let to = input("type the correction for " . a:from . ": ")
 32	  exe ":iabbrev " . a:from . " " . to
 ..
 36	endfunction

Now we can call the function s:Add() from within this script.  If another
script also defines s:Add(), it will be local to that script and can only
be called from the script it was defined in.  There can also be a global Add()
function (without the "s:"), which is again another function.

<SID> can be used with mappings.  It generates a script ID, which identifies
the current script.  In our typing correction plugin we use it like this: >

 24	noremap <unique> <script> <Plug>TypecorrAdd  <SID>Add
 ..
 28	noremap <SID>Add  :call <SID>Add(expand("<cword>"), 1)<CR>

Thus when a user types "\a", this sequence is invoked: >

	\a  ->  <Plug>TypecorrAdd  ->  <SID>Add  ->  :call <SID>Add()

If another script would also map <SID>Add, it would get another script ID and
thus define another mapping.

Note that instead of s:Add() we use <SID>Add() here.  That is because the
mapping is typed by the user, thus outside of the script.  The <SID> is
translated to the script ID, so that Vim knows in which script to look for
the Add() function.

This is a bit complicated, but it's required for the plugin to work together
with other plugins.  The basic rule is that you use <SID>Add() in mappings and
s:Add() in other places (the script itself, autocommands, user commands).

We can also add a menu entry to do the same as the mapping: >

 26	noremenu <script> Plugin.Add\ Correction      <SID>Add

The "Plugin" menu is recommended for adding menu items for plugins.  In this
case only one item is used.  When adding more items, creating a submenu is
recommended.  For example, "Plugin.CVS" could be used for a plugin that offers
CVS operations "Plugin.CVS.checkin", "Plugin.CVS.checkout", etc.

Note that in line 28 ":noremap" is used to avoid that any other mappings cause
trouble.  Someone may have remapped ":call", for example.  In line 24 we also
use ":noremap", but we do want "<SID>Add" to be remapped.  This is why
"<script>" is used here.  This only allows mappings which are local to the
script. |:map-<script>|  The same is done in line 26 for ":noremenu".
|:menu-<script>|


<SID> AND <Plug>					*using-<Plug>*

Both <SID> and <Plug> are used to avoid that mappings of typed keys interfere
with mappings that are only to be used from other mappings.  Note the
difference between using <SID> and <Plug>:

<Plug>	is visible outside of the script.  It is used for mappings which the
	user might want to map a key sequence to.  <Plug> is a special code
	that a typed key will never produce.
	To make it very unlikely that other plugins use the same sequence of
	characters, use this structure: <Plug> scriptname mapname
	In our example the scriptname is "Typecorr" and the mapname is "Add".
	This results in "<Plug>TypecorrAdd".  Only the first character of
	scriptname and mapname is uppercase, so that we can see where mapname
	starts.

<SID>	is the script ID, a unique identifier for a script.
	Internally Vim translates <SID> to "<SNR>123_", where "123" can be any
	number.  Thus a function "<SID>Add()" will have a name "<SNR>11_Add()"
	in one script, and "<SNR>22_Add()" in another.  You can see this if
	you use the ":function" command to get a list of functions.  The
	translation of <SID> in mappings is exactly the same, that's how you
	can call a script-local function from a mapping.


USER COMMAND

Now let's add a user command to add a correction: >

 38	if !exists(":Correct")
 39	  command -nargs=1  Correct  :call s:Add(<q-args>, 0)
 40	endif

The user command is defined only if no command with the same name already
exists.  Otherwise we would get an error here.  Overriding the existing user
command with ":command!" is not a good idea, this would probably make the user
wonder why the command he defined himself doesn't work.  |:command|


SCRIPT VARIABLES

When a variable starts with "s:" it is a script variable.  It can only be used
inside a script.  Outside the script it's not visible.  This avoids trouble
with using the same variable name in different scripts.  The variables will be
kept as long as Vim is running.  And the same variables are used when sourcing
the same script again. |s:var|

The fun is that these variables can also be used in functions, autocommands
and user commands that are defined in the script.  In our example we can add
a few lines to count the number of corrections: >

 19	let s:count = 4
 ..
 30	function s:Add(from, correct)
 ..
 34	  let s:count = s:count + 1
 35	  echo s:count . " corrections now"
 36	endfunction

First s:count is initialized to 4 in the script itself.  When later the
s:Add() function is called, it increments s:count.  It doesn't matter from
where the function was called, since it has been defined in the script, it
will use the local variables from this script.


THE RESULT

Here is the resulting complete example: >

  1	" Vim global plugin for correcting typing mistakes
  2	" Last Change:	2000 Oct 15
  3	" Maintainer:	Bram Moolenaar <Bram@vim.org>
  4	" License:	This file is placed in the public domain.
  5
  6	if exists("g:loaded_typecorr")
  7	  finish
  8	endif
  9	let g:loaded_typecorr = 1
 10
 11	let s:save_cpo = &cpo
 12	set cpo&vim
 13
 14	iabbrev teh the
 15	iabbrev otehr other
 16	iabbrev wnat want
 17	iabbrev synchronisation
 18		\ synchronization
 19	let s:count = 4
 20
 21	if !hasmapto('<Plug>TypecorrAdd')
 22	  map <unique> <Leader>a  <Plug>TypecorrAdd
 23	endif
 24	noremap <unique> <script> <Plug>TypecorrAdd  <SID>Add
 25
 26	noremenu <script> Plugin.Add\ Correction      <SID>Add
 27
 28	noremap <SID>Add  :call <SID>Add(expand("<cword>"), 1)<CR>
 29
 30	function s:Add(from, correct)
 31	  let to = input("type the correction for " . a:from . ": ")
 32	  exe ":iabbrev " . a:from . " " . to
 33	  if a:correct | exe "normal viws\<C-R>\" \b\e" | endif
 34	  let s:count = s:count + 1
 35	  echo s:count . " corrections now"
 36	endfunction
 37
 38	if !exists(":Correct")
 39	  command -nargs=1  Correct  :call s:Add(<q-args>, 0)
 40	endif
 41
 42	let &cpo = s:save_cpo
 43	unlet s:save_cpo

Line 33 wasn't explained yet.  It applies the new correction to the word under
the cursor.  The |:normal| command is used to use the new abbreviation.  Note
that mappings and abbreviations are expanded here, even though the function
was called from a mapping defined with ":noremap".

Using "unix" for the 'fileformat' option is recommended.  The Vim scripts will
then work everywhere.  Scripts with 'fileformat' set to "dos" do not work on
Unix.  Also see |:source_crnl|.  To be sure it is set right, do this before
writing the file: >

	:set fileformat=unix


DOCUMENTATION						*write-local-help*

It's a good idea to also write some documentation for your plugin.  Especially
when its behavior can be changed by the user.  See |add-local-help| for how
they are installed.

Here is a simple example for a plugin help file, called "typecorr.txt": >

  1	*typecorr.txt*	Plugin for correcting typing mistakes
  2
  3	If you make typing mistakes, this plugin will have them corrected
  4	automatically.
  5
  6	There are currently only a few corrections.  Add your own if you like.
  7
  8	Mappings:
  9	<Leader>a   or   <Plug>TypecorrAdd
 10		Add a correction for the word under the cursor.
 11
 12	Commands:
 13	:Correct {word}
 14		Add a correction for {word}.
 15
 16							*typecorr-settings*
 17	This plugin doesn't have any settings.

The first line is actually the only one for which the format matters.  It will
be extracted from the help file to be put in the "LOCAL ADDITIONS:" section of
help.txt |local-additions|.  The first "*" must be in the first column of the
first line.  After adding your help file do ":help" and check that the entries
line up nicely.

You can add more tags inside ** in your help file.  But be careful not to use
existing help tags.  You would probably use the name of your plugin in most of
them, like "typecorr-settings" in the example.

Using references to other parts of the help in || is recommended.  This makes
it easy for the user to find associated help.


FILETYPE DETECTION					*plugin-filetype*

If your filetype is not already detected by Vim, you should create a filetype
detection snippet in a separate file.  It is usually in the form of an
autocommand that sets the filetype when the file name matches a pattern.
Example: >

	au BufNewFile,BufRead *.foo			set filetype=foofoo

Write this single-line file as "ftdetect/foofoo.vim" in the first directory
that appears in 'runtimepath'.  For Unix that would be
"~/.vim/ftdetect/foofoo.vim".  The convention is to use the name of the
filetype for the script name.

You can make more complicated checks if you like, for example to inspect the
contents of the file to recognize the language.  Also see |new-filetype|.


SUMMARY							*plugin-special*

Summary of special things to use in a plugin:

s:name			Variables local to the script.

<SID>			Script-ID, used for mappings and functions local to
			the script.

hasmapto()		Function to test if the user already defined a mapping
			for functionality the script offers.

<Leader>		Value of "mapleader", which the user defines as the
			keys that plugin mappings start with.

:map <unique>		Give a warning if a mapping already exists.

:noremap <script>	Use only mappings local to the script, not global
			mappings.

exists(":Cmd")		Check if a user command already exists.

==============================================================================
*41.12*	Writing a filetype plugin	*write-filetype-plugin* *ftplugin*

A filetype plugin is like a global plugin, except that it sets options and
defines mappings for the current buffer only.  See |add-filetype-plugin| for
how this type of plugin is used.

First read the section on global plugins above |41.11|.  All that is said there
also applies to filetype plugins.  There are a few extras, which are explained
here.  The essential thing is that a filetype plugin should only have an
effect on the current buffer.


DISABLING

If you are writing a filetype plugin to be used by many people, they need a
chance to disable loading it.  Put this at the top of the plugin: >

	" Only do this when not done yet for this buffer
	if exists("b:did_ftplugin")
	  finish
	endif
	let b:did_ftplugin = 1

This also needs to be used to avoid that the same plugin is executed twice for
the same buffer (happens when using an ":edit" command without arguments).

Now users can disable loading the default plugin completely by making a
filetype plugin with only this line: >

	let b:did_ftplugin = 1

This does require that the filetype plugin directory comes before $VIMRUNTIME
in 'runtimepath'!

If you do want to use the default plugin, but overrule one of the settings,
you can write the different setting in a script: >

	setlocal textwidth=70

Now write this in the "after" directory, so that it gets sourced after the
distributed "vim.vim" ftplugin |after-directory|.  For Unix this would be
"~/.vim/after/ftplugin/vim.vim".  Note that the default plugin will have set
"b:did_ftplugin", but it is ignored here.


OPTIONS

To make sure the filetype plugin only affects the current buffer use the >

	:setlocal

command to set options.  And only set options which are local to a buffer (see
the help for the option to check that).  When using |:setlocal| for global
options or options local to a window, the value will change for many buffers,
and that is not what a filetype plugin should do.

When an option has a value that is a list of flags or items, consider using
"+=" and "-=" to keep the existing value.  Be aware that the user may have
changed an option value already.  First resetting to the default value and
then changing it is often a good idea.  Example: >

	:setlocal formatoptions& formatoptions+=ro


MAPPINGS

To make sure mappings will only work in the current buffer use the >

	:map <buffer>

command.  This needs to be combined with the two-step mapping explained above.
An example of how to define functionality in a filetype plugin: >

	if !hasmapto('<Plug>JavaImport')
	  map <buffer> <unique> <LocalLeader>i <Plug>JavaImport
	endif
	noremap <buffer> <unique> <Plug>JavaImport oimport ""<Left><Esc>

|hasmapto()| is used to check if the user has already defined a map to
<Plug>JavaImport.  If not, then the filetype plugin defines the default
mapping.  This starts with |<LocalLeader>|, which allows the user to select
the key(s) he wants filetype plugin mappings to start with.  The default is a
backslash.
"<unique>" is used to give an error message if the mapping already exists or
overlaps with an existing mapping.
|:noremap| is used to avoid that any other mappings that the user has defined
interferes.  You might want to use ":noremap <script>" to allow remapping
mappings defined in this script that start with <SID>.

The user must have a chance to disable the mappings in a filetype plugin,
without disabling everything.  Here is an example of how this is done for a
plugin for the mail filetype: >

	" Add mappings, unless the user didn't want this.
	if !exists("no_plugin_maps") && !exists("no_mail_maps")
	  " Quote text by inserting "> "
	  if !hasmapto('<Plug>MailQuote')
	    vmap <buffer> <LocalLeader>q <Plug>MailQuote
	    nmap <buffer> <LocalLeader>q <Plug>MailQuote
	  endif
	  vnoremap <buffer> <Plug>MailQuote :s/^/> /<CR>
	  nnoremap <buffer> <Plug>MailQuote :.,$s/^/> /<CR>
	endif

Two global variables are used:
no_plugin_maps		disables mappings for all filetype plugins
no_mail_maps		disables mappings for a specific filetype


USER COMMANDS

To add a user command for a specific file type, so that it can only be used in
one buffer, use the "-buffer" argument to |:command|.  Example: >

	:command -buffer  Make  make %:r.s


VARIABLES

A filetype plugin will be sourced for each buffer of the type it's for.  Local
script variables |s:var| will be shared between all invocations.  Use local
buffer variables |b:var| if you want a variable specifically for one buffer.


FUNCTIONS

When defining a function, this only needs to be done once.  But the filetype
plugin will be sourced every time a file with this filetype will be opened.
This construct makes sure the function is only defined once: >

	:if !exists("*s:Func")
	:  function s:Func(arg)
	:    ...
	:  endfunction
	:endif
<

UNDO						*undo_indent* *undo_ftplugin*

When the user does ":setfiletype xyz" the effect of the previous filetype
should be undone.  Set the b:undo_ftplugin variable to the commands that will
undo the settings in your filetype plugin.  Example: >

	let b:undo_ftplugin = "setlocal fo< com< tw< commentstring<"
		\ . "| unlet b:match_ignorecase b:match_words b:match_skip"

Using ":setlocal" with "<" after the option name resets the option to its
global value.  That is mostly the best way to reset the option value.

This does require removing the "C" flag from 'cpoptions' to allow line
continuation, as mentioned above |use-cpo-save|.

For undoing the effect of an indent script, the b:undo_indent variable should
be set accordingly.


FILE NAME

The filetype must be included in the file name |ftplugin-name|.  Use one of
these three forms:

	.../ftplugin/stuff.vim
	.../ftplugin/stuff_foo.vim
	.../ftplugin/stuff/bar.vim

"stuff" is the filetype, "foo" and "bar" are arbitrary names.


SUMMARY							*ftplugin-special*

Summary of special things to use in a filetype plugin:

<LocalLeader>		Value of "maplocalleader", which the user defines as
			the keys that filetype plugin mappings start with.

:map <buffer>		Define a mapping local to the buffer.

:noremap <script>	Only remap mappings defined in this script that start
			with <SID>.

:setlocal		Set an option for the current buffer only.

:command -buffer	Define a user command local to the buffer.

exists("*s:Func")	Check if a function was already defined.

Also see |plugin-special|, the special things used for all plugins.

==============================================================================
*41.13*	Writing a compiler plugin		*write-compiler-plugin*

A compiler plugin sets options for use with a specific compiler.  The user can
load it with the |:compiler| command.  The main use is to set the
'errorformat' and 'makeprg' options.

Easiest is to have a look at examples.  This command will edit all the default
compiler plugins: >

	:next $VIMRUNTIME/compiler/*.vim

Use |:next| to go to the next plugin file.

There are two special items about these files.  First is a mechanism to allow
a user to overrule or add to the default file.  The default files start with: >

	:if exists("current_compiler")
	:  finish
	:endif
	:let current_compiler = "mine"

When you write a compiler file and put it in your personal runtime directory
(e.g., ~/.vim/compiler for Unix), you set the "current_compiler" variable to
make the default file skip the settings.
							*:CompilerSet*
The second mechanism is to use ":set" for ":compiler!" and ":setlocal" for
":compiler".  Vim defines the ":CompilerSet" user command for this.  However,
older Vim versions don't, thus your plugin should define it then.  This is an
example: >

  if exists(":CompilerSet") != 2
    command -nargs=* CompilerSet setlocal <args>
  endif
  CompilerSet errorformat&		" use the default 'errorformat'
  CompilerSet makeprg=nmake

When you write a compiler plugin for the Vim distribution or for a system-wide
runtime directory, use the mechanism mentioned above.  When
"current_compiler" was already set by a user plugin nothing will be done.

When you write a compiler plugin to overrule settings from a default plugin,
don't check "current_compiler".  This plugin is supposed to be loaded
last, thus it should be in a directory at the end of 'runtimepath'.  For Unix
that could be ~/.vim/after/compiler.

==============================================================================
*41.14*	Writing a plugin that loads quickly	*write-plugin-quickload*

A plugin may grow and become quite long.  The startup delay may become
noticeable, while you hardly ever use the plugin.  Then it's time for a
quickload plugin.

The basic idea is that the plugin is loaded twice.  The first time user
commands and mappings are defined that offer the functionality.  The second
time the functions that implement the functionality are defined.

It may sound surprising that quickload means loading a script twice.  What we
mean is that it loads quickly the first time, postponing the bulk of the
script to the second time, which only happens when you actually use it.  When
you always use the functionality it actually gets slower!

Note that since Vim 7 there is an alternative: use the |autoload|
functionality |41.15|.

The following example shows how it's done: >

	" Vim global plugin for demonstrating quick loading
	" Last Change:	2005 Feb 25
	" Maintainer:	Bram Moolenaar <Bram@vim.org>
	" License:	This file is placed in the public domain.

	if !exists("s:did_load")
		command -nargs=* BNRead  call BufNetRead(<f-args>)
		map <F19> :call BufNetWrite('something')<CR>

		let s:did_load = 1
		exe 'au FuncUndefined BufNet* source ' . expand('<sfile>')
		finish
	endif

	function BufNetRead(...)
		echo 'BufNetRead(' . string(a:000) . ')'
		" read functionality here
	endfunction

	function BufNetWrite(...)
		echo 'BufNetWrite(' . string(a:000) . ')'
		" write functionality here
	endfunction

When the script is first loaded "s:did_load" is not set.  The commands between
the "if" and "endif" will be executed.  This ends in a |:finish| command, thus
the rest of the script is not executed.

The second time the script is loaded "s:did_load" exists and the commands
after the "endif" are executed.  This defines the (possible long)
BufNetRead() and BufNetWrite() functions.

If you drop this script in your plugin directory Vim will execute it on
startup.  This is the sequence of events that happens:

1. The "BNRead" command is defined and the <F19> key is mapped when the script
   is sourced at startup.  A |FuncUndefined| autocommand is defined.  The
   ":finish" command causes the script to terminate early.

2. The user types the BNRead command or presses the <F19> key.  The
   BufNetRead() or BufNetWrite() function will be called.

3. Vim can't find the function and triggers the |FuncUndefined| autocommand
   event.  Since the pattern "BufNet*" matches the invoked function, the
   command "source fname" will be executed.  "fname" will be equal to the name
   of the script, no matter where it is located, because it comes from
   expanding "<sfile>" (see |expand()|).

4. The script is sourced again, the "s:did_load" variable exists and the
   functions are defined.

Notice that the functions that are loaded afterwards match the pattern in the
|FuncUndefined| autocommand.  You must make sure that no other plugin defines
functions that match this pattern.

==============================================================================
*41.15*	Writing library scripts			*write-library-script*

Some functionality will be required in several places.  When this becomes more
than a few lines you will want to put it in one script and use it from many
scripts.  We will call that one script a library script.

Manually loading a library script is possible, so long as you avoid loading it
when it's already done.  You can do this with the |exists()| function.
Example: >

	if !exists('*MyLibFunction')
	   runtime library/mylibscript.vim
	endif
	call MyLibFunction(arg)

Here you need to know that MyLibFunction() is defined in a script
"library/mylibscript.vim" in one of the directories in 'runtimepath'.

To make this a bit simpler Vim offers the autoload mechanism.  Then the
example looks like this: >

	call mylib#myfunction(arg)

That's a lot simpler, isn't it?  Vim will recognize the function name and when
it's not defined search for the script "autoload/mylib.vim" in 'runtimepath'.
That script must define the "mylib#myfunction()" function.

You can put many other functions in the mylib.vim script, you are free to
organize your functions in library scripts.  But you must use function names
where the part before the '#' matches the script name.  Otherwise Vim would
not know what script to load.

If you get really enthusiastic and write lots of library scripts, you may
want to use subdirectories.  Example: >

	call netlib#ftp#read('somefile')

For Unix the library script used for this could be:

	~/.vim/autoload/netlib/ftp.vim

Where the function is defined like this: >

	function netlib#ftp#read(fname)
		"  Read the file fname through ftp
	endfunction

Notice that the name the function is defined with is exactly the same as the
name used for calling the function.  And the part before the last '#'
exactly matches the subdirectory and script name.

You can use the same mechanism for variables: >

	let weekdays = dutch#weekdays

This will load the script "autoload/dutch.vim", which should contain something
like: >

	let dutch#weekdays = ['zondag', 'maandag', 'dinsdag', 'woensdag',
		\ 'donderdag', 'vrijdag', 'zaterdag']

Further reading: |autoload|.

==============================================================================
*41.16*	Distributing Vim scripts			*distribute-script*

Vim users will look for scripts on the Vim website: http://www.vim.org.
If you made something that is useful for others, share it!

Vim scripts can be used on any system.  There might not be a tar or gzip
command.  If you want to pack files together and/or compress them the "zip"
utility is recommended.

For utmost portability use Vim itself to pack scripts together.  This can be
done with the Vimball utility.  See |vimball|.

It's good if you add a line to allow automatic updating.  See |glvs-plugins|.

==============================================================================

Next chapter: |usr_42.txt|  Add new menus

Copyright: see |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     #ifndef _ASM_RESOURCE_H
#define _ASM_RESOURCE_H

#include <asm-generic/resource.h>

#endif /* _ASM_RESOURCE_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #ifndef _ASM_SOCKIOS__
#define _ASM_SOCKIOS__

/* Socket-level I/O control calls. */
#define FIOSETOWN 	0x8901
#define SIOCSPGRP	0x8902
#define FIOGETOWN	0x8903
#define SIOCGPGRP	0x8904
#define SIOCATMARK	0x8905
#define SIOCGSTAMP	0x8906		/* Get stamp (timeval) */
#define SIOCGSTAMPNS	0x8907		/* Get stamp (timespec) */

#endif /* _ASM_SOCKIOS__ */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef _ASM_ERRNO_H
#define _ASM_ERRNO_H

#include <asm-generic/errno.h>

#endif /* _ASM_ERRNO_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /* sigcontext.h: FRV signal context
 *
 * Copyright (C) 2003 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */
#ifndef _ASM_SIGCONTEXT_H
#define _ASM_SIGCONTEXT_H

#include <asm/registers.h>

/*
 * Signal context structure - contains all info to do with the state
 * before the signal handler was invoked.  Note: only add new entries
 * to the end of the structure.
 */
struct sigcontext {
	struct user_context	sc_context;
	unsigned long		sc_oldmask; 	/* old sigmask */
} __attribute__((aligned(8)));

#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef _ASM_POLL_H
#define _ASM_POLL_H

#define POLLWRNORM	POLLOUT
#define POLLWRBAND	256

#include <asm-generic/poll.h>

#undef POLLREMOVE

#endif

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #include <asm-generic/bitsperlong.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #ifndef _ASM_SEMBUF_H
#define _ASM_SEMBUF_H

/*
 * The semid64_ds structure for FR-V architecture.
 * Note extra padding because this structure is passed back and forth
 * between kernel and user space.
 *
 * Pad space is left for:
 * - 64-bit time_t to solve y2038 problem
 * - 2 miscellaneous 32-bit values
 */

struct semid64_ds {
	struct ipc64_perm	sem_perm;	/* permissions .. see ipc.h */
	__kernel_time_t		sem_otime;	/* last semop time */
	unsigned long		__unused1;
	__kernel_time_t		sem_ctime;	/* last change time */
	unsigned long		__unused2;
	unsigned long		sem_nsems;	/* no. of semaphores in array */
	unsigned long		__unused3;
	unsigned long		__unused4;
};

#endif /* _ASM_SEMBUF_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       #ifndef _ASM_MSGBUF_H
#define _ASM_MSGBUF_H

/*
 * The msqid64_ds structure for FR-V architecture.
 * Note extra padding because this structure is passed back and forth
 * between kernel and user space.
 *
 * Pad space is left for:
 * - 64-bit time_t to solve y2038 problem
 * - 2 miscellaneous 32-bit values
 */

struct msqid64_ds {
	struct ipc64_perm	msg_perm;
	__kernel_time_t		msg_stime;	/* last msgsnd time */
	unsigned long		__unused1;
	__kernel_time_t		msg_rtime;	/* last msgrcv time */
	unsigned long		__unused2;
	__kernel_time_t		msg_ctime;	/* last change time */
	unsigned long		__unused3;
	unsigned long		msg_cbytes;	/* current number of bytes on queue */
	unsigned long		msg_qnum;	/* number of messages in queue */
	unsigned long		msg_qbytes;	/* max number of bytes on queue */
	__kernel_pid_t		msg_lspid;	/* pid of last msgsnd */
	__kernel_pid_t		msg_lrpid;	/* last receive pid */
	unsigned long		__unused4;
	unsigned long		__unused5;
};

#endif /* _ASM_MSGBUF_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #ifndef _ASM_SWAB_H
#define _ASM_SWAB_H

#include <linux/types.h>

#if defined(__GNUC__) && !defined(__STRICT_ANSI__) || defined(__KERNEL__)
#  define __SWAB_64_THRU_32__
#endif

#endif /* _ASM_SWAB_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /* types.h: FRV types
 *
 * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */
#include <asm-generic/int-ll64.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       *todo.txt*      For Vim version 8.0.  Last change: 2017 Jan 09


		  VIM REFERENCE MANUAL	  by Bram Moolenaar


			      TODO list for Vim		*todo*

This is a veeeery long list of known bugs, current work and desired
improvements.  To make it a little bit accessible, the items are grouped by
subject.  In the first column of the line a classification is used to be able
to look for "the next thing to do":

Priority classification:
9   next point release
8   next release
7   as soon as possible
6   soon
5   should be included
4   nice to have
3   consider including
2   maybe not
1   probably not
-   unclassified

						    *votes-for-changes*
See |develop.txt| for development plans.  You can vote for which items should
be worked on, but only if you sponsor Vim development.  See |sponsor|.

Issues can also be entered online: https://github.com/vim/vim/issues
Only use this for bug reports, not for questions!  Those belong on the
maillist.  Updates will be forwarded to the |vim_dev| maillist.  Issues
entered there will not be repeated below, unless there is extra information.

							*known-bugs*
-------------------- Known bugs and current work -----------------------

+channel:
- Try out background make plugin: 
  https://github.com/AndrewVos/vim-make-background
- Problem with stderr on Windows? (Vincent Rischmann, 2016 Aug 31, #1026)
- Add 'cwd' argument to start_job(): directory to change to in the child.
    check for valid directory before forking.
  Part of patch for environment, Yasuhiro Matsumoto, #1160
- When out_cb executes :sleep, the close_cb may be invoked. (Daniel Hahler,
  2016 Dec 11, #1320)
- Implement |job-term| ?
- Channel test fails with Motif.  Sometimes kills the X11 server.
- When a message in the queue but there is no callback, drop it after a while?
  Add timestamp to queued messages and callbacks with ID, remove after a
  minute.  Option to set the droptime.
- Add an option to drop text of very long lines?  Default to 1 Mbyte.
- Add remark about undo sync, is there a way to force it?
- When starting a job, have an option to open the server socket, so we know
  the port, and pass it to the command with --socket-fd {nr}. (Olaf Dabrunz,
  Feb 9)  How to do this on MS-Windows?
- For connection to server, a "keep open" flag would be useful.  Retry
  connecting in the main loop with zero timeout.
- job_start(): run job in a newly opened terminal.
    With xterm could use -S{pty}.

Regexp problems:
- Since 7.4.704 the old regex engine fails to match [[:print:]] in 0xf6.
  (Manuel Ortega, 2016 Apr 24)
  Test fails on Mac.  Avoid using isalpha(), isalnum(), etc?  Depends on
  LC_CTYPE
- The old engine does not find a match for "/\%#=1\(\)\{80}", the new engine
  matches everywhere.
- Using win_linetabsize() can still be slow. Cache the result, store col and
  vcol. Reset them when moving to another line.
- Very slow with a long line and Ruby highlighting. (John Whitley, 2014 Dec 4)
- Bug with pattern: '\vblock (\d+)\.\n.*\d+%(\1)@<!\.$'
  (Lech Lorens, 2014 Feb 3)
- Issue 164: freeze on regexp search.
- Ignorecase not handled properly for multi-byte characters. (Axel Bender,
  2013 Dec 11)
- Using \@> and \?. (Brett Stahlman, 2013 Dec 21) Remark from Marcin
  Szamotulski; Remark from Brett 2014 Jan 6 and 7.
- NFA regexp doesn't handle \%<v correctly. (Ingo Karkat, 2014 May 12)
- Does not work with NFA regexp engine:
  \%u, \%x, \%o, \%d followed by a composing character
- Search for \%d0\+ may fail with E363. (Christian Brabandt, 2016 Oct 4)
- \%'[ does not work.  '%'] does work.  (Masaaki Nakamura, 2016 Apr 4)
- Bug relating to back references. (Ingo Karkat, 2014 Jul 24)
- New RE does not give an error for empty group: "\(\)\{2}" (Dominique Pelle,
  2015 Feb 7)
- Using back reference before the capturing group sometimes works with the old
  engine, can we do this with the new engine?  E.g. with
  "/\%(<\1>\)\@<=.*\%(<\/\(\w\+\)>\)\@=" matching text inside HTML tags.
  This problem is probably the same: "\%(^\1.*$\n\)\@<=\(\d\+\).*$".
  (guotuofeng, 2015 Jun 22)
- Strange matching with "\(Hello\n\)\@<=A". (Anas Syed, 2015 Feb 12)
- Problem with \v(A)@<=b+\1c. (Issue 334)
- Diff highlighting can be very slow. (Issue 309)
- Using %> for a virtual column has a check based on 'tabsize'.  Better would
  be to cache the result of win_linetabsize(col), storing both col and vcol,
  and use them to decide whether win_linetabsize() needs to be called.  Reset
  col and vcol when moving to another line.
- this doesn't work: "syntax match ErrorMsg /.\%9l\%>20c\&\%<28c/".  Leaving
  out the \& works.  Seems any column check after \& fails.
- The pattern "\1" with the old engine gives E65, with the new engine it
  matches the empty string. (Dominique Pelle, 2015 Oct 2, Nov 24)
  had_endbrace[] is set but not initialized or used.
- Difference between two engines: ".*\zs\/\@>\/" on text "///"
  (Chris Paul, 2016 Nov 13)  New engine not greedy enough?

'] mark invalid after undoing insert "hello".

Make html indent file use javascript indent, now that it's not just cindent.
#1220

Concatenation with null string causes an error: 'a'[1:0] .. 'b'
Might as well handle it like an empty string.

When using symbolic links, a package path will not be inserted at the right
position in 'runtimepath'. (Dugan Chen, 2016 Nov 18)

json_encode(): should convert to utf-8. (Nikolai Pavlov, 2016 Jan 23)
What if there is an invalid character?

Include rust files. (Klabnik, #1356)

More float tests.  (Dominique, #1364)

Patch to avoid ubsan warning for integer overflow. (Dominique, 2016 Dec 26)

Bug: Json with same key should not give internal error. (Lcd, 2016 Oct 26)
Make dict_add give a duplicate key error.

Patch to make str2nr and str2float work with signed values.
(Lemonbody, 2016 Dec 18, #1332)

Should json_encode()/json_decode() restrict recursiveness?
Or avoid recursiveness.

Patch to fix UBSan error.  Is this actually needed?
(Yegappan, 2016 Dec 18)

Allow using json with empty key?  Dict already has it.

Json string with trailing \u should be an error. (Lcd)

Patch to reset ex_exitvalue after catch. (Christian Brabandt, 2016 Oct 23)

Patch to deal with changed configure events in GTK 3. (Jan Alexander Steffens,
2016 Oct 23 #1193)
Remarks from nuko8, 2016 Nov 2.

Multi-byte bug: dv} splits char. (Urtica Dioica, 2017 Jan 9)

Patch to change order of compiler flags. (Yousong Zhou, 2016 Sep 19, #1100)

Patch to add command line completion for :cexpr commands. (Yegappan
Lakshmanan, 2016 Dec 13)

Patch for :pyx, run python commands depending on the supported version.
(Marc Weber, update from Ken Takata, 2016 Sep 19, 2017 Jan 6)

Patch to avoid warnings for overflow. (Mike Williams, 2016 Dec 16)
Update Dec 19.

Wrong diff highlighting with three files. (2016 Oct 20, #1186)
Also get E749 on exit.
Another example in #1309

Patch to fix vim_iswordp() works differently on chars <256 that are two bytes.
Ozaki Kiichi, 2016 Dec 11.

When deleting a mark or register, leave a tombstone, so that it's also deleted
when writing viminfo (and the delete was the most recent action). #1339

Relevant neovim patch:
https://github.com/neovim/neovim/pull/5717
test case: 
https://github.com/neovim/neovim/pull/5717#issuecomment-264845481
Others:
https://github.com/neovim/neovim/issues/5713#issuecomment-265136186
https://github.com/neovim/neovim/pull/5737#issuecomment-266055165

Patch for better explanation of 'compatible' side effects.
https://github.com/vim/vim/pull/1161/files

Patch to add 'makeencoding', useful when the system encoding differs from
Vim's 'encoding' setting. (Ken Takata, 2017 Jan 6)

Patch to adjust marks when adding a new line to the end of buffer in diff
mode. (James McCoy, 2016 Dec 14, #1329)

Suggestion to improve pt-br spell checking. (Marcelo D Montu, 2016 Dec 15,
#1330)

Error in test_startup_utf8 on Solaris. (Danek Duvall, 2016 Aug 17)

Rule to use "^" for statusline does not work if a space is defined with
highlighting for both stl and stlnc.  Patch by Ken Hamada (itchyny, 2016 Dec 11)

8   "stl" and "stlnc" in 'fillchars' don't work for multi-byte characters.
    Patch by Christian Wellenbrock, 2013 Jul 5.

Screen updated delayed when using CTRL-O u in Insert mode.
(Barlik, #1191)  Perhaps because status message?

Patch to add buffer name argument to taglist().
Ordering of tags in result of taglist call. (Duncan McDougall, #1194)

Patch to fix that empty first tab is not in session.
(Hirohito Higashi, 2016 Nov 25, #1282)

Patch for restoring wide characters in the console buffer.
(Ken Takata, 2016 Jun 7)

Patch to fix escaping of job arguments. (Yasuhiro Matsumoto, 2016 Oct 5)
Update Oct 14: https://gist.github.com/mattn/d47e7d3bfe5ade4be86062b565a4bfca

Once .exe with updated installer is available: Add remark to download page
about /S and /D options (Ken Takata, 2016 Apr 13)
Or point to nightly builds: https://github.com/vim/vim-win32-installer/releases

Problem passing non-UTF-8 strings to Python 3. (Björn Linse, 2016 Sep 11,
#1053)  With patch, does it work?

Patch to make finding duplicate tags much faster, using a hashtab. (James
McCoy, 2016 Sept 14, #1046)  Should work now.  Updated Nov 12.
>
Use ADDR_OTHER instead of ADDR_LINES for many more commands.
Add tests for using number larger than number of lines in buffer.

Patch to make v:shell_error writable. (Christian Brabandt, 2016 Sep 27)
Useful to restore it.  Is there another solution?

"ci[" does not look for next [ like ci" does look for next ".
(J.F. 2017 Jan 7)

On MS-Windows with 'clipboard' set to "unnamed" this doesn't work to double
lines: :g/^/normal yyp   On Unix it works OK.  (Bryce Orgill, 2016 Nov 5)

Patch for wrong cursor position on wrapped line, involving breakindent.
(Ozaki Kiichi, 2016 Nov 25)

Patch for 'cursorlinenr' option. (Ozaki Kiichi, 2016 Nov 30)

When adding an item to a new quickfix list make ":cnext" jump to that item.
Make a difference being at the first item and not having used :cnext at all.
(Afanasiy Fet, 2017 Jan 3)

Invalid behavior with NULL list. (Nikolai Pavlov, #768)
E.g. deepcopy(test_null_list())

Patch to make it possible to extend a list with itself.
(Nikolai Pavlov, 2016 Sep 23)

Patch to add Zstandard compressed file support. (Nick Terrell, 2016 Oct 24)

Patch to add trim() function. (Bukn, 2016 Nov 25, #1280)

Patch to add MODIFIED_BY to MSVC build file. (Chen Lei, 2016 Nov 24, #1275)

On Windows buffer completion sees backslash as escape char instead of path
separator. (Toffanim, 2016 Nov 24, #1274)

min() and max() spawn lots of error messages if sorted list/dictionary
contains invalid data (Nikolay Pavlov, 2016 Sep 4, #1039)

Should :vmap in matchit.vim be :xmap?  (Tony Mechelynck)

Problem with whitespace in errorformat. (Gerd Wachsmuth, 2016 May 15, #807)

Undo problem: "g-" doesn't go back, gets stuck. (Björn Linse, 2016 Jul 18)

Add "unicode true" to NSIS installer.  Doesn't work with Windows 95, which we
no longer support.

sort() is not stable when using numeric/float sort (Nikolay Pavlov, 2016 Sep
4#1038)

Patch to add "cmdline" completion to getcompletion(). (Shougo, Oct 1, #1140)

Feature request: Complete members of a dictionary. (Luc Hermitte, 2017 Jan 4,
#1350)

Patch for systemlist(), add empty item. (thinca, Sep 30, #1135)
Add an argument to choose binary or non-binary (like readfile()), when omitted
use the current behavior.
Include the test.

When 'keywordprg' starts with ":" the argument is still escaped as a shell
command argument. (Romain Lafourcade, 2016 Oct 16, #1175)

Patch to support CamelCase for spell checking: See a lower-to-upper case
change as a word boundary. (btucker-MPCData, 2016 Nov 6, #1235)

Idea from Sven: record sequence of keys.  Useful to show others what they are
doing (look over the shoulder), and also to see what happened.
Probably list of keystrokes, with some annotations for mode changes.
Could store in logfile to be able to analyise it with an external command.
E.g. to see when's the last time a plugin command was used.

execute() cannot be used with command completeion. (Daniel Hahler, 2016 Oct 1,
#1141)

cmap using execute() has side effects. (Killthemule, 2016 Aug 17, #983)

Patch to order results from taglist(). (Duncan McDougall, 2016 Oct 25)

patch for 'spellcamelcase' option: spellcheck each CamelCased word.
(Ben Tucker, 2016 Dec 2)

When using ":diffput" through a mapping, undo in the target buffer isn't
synced.  (Ryan Carney, 2016 Sep 14)

Syntax highlighting for messages with RFC3339 timestamp (#946)
Did maintainer reply?

Patch to avoid problem with special characters in file name.
(Shougo, 2016 Sept 19, #1099)  Not finished?

ml_get errors when reloading file. (Chris Desjardins, 2016 Apr 19)
Also with latest version.

Cannot delete a file with square brackets with delete(). (#696)

Patch to add ":syn foldlevel" to use fold level further down the line.
(Brad King, 2016 Oct 19)

Completion for input() does not expand environment variables. (chdiza, 2016
Jul 25, #948)

Patch to fix wrong encoding of error message on Cygwin/MSYS terminal.
(Ken Takata, 2016 Oct 4)

Patch to introduce 'cmdencoding'. (Ken Takata, Aug 18?)
Better help Aug 19.
Problem: applies to too many commands, such as :cbuffer.
Updated patch with three options, 2016 Sep 8.
    Win32: When running ":make" and 'encoding' differs from the system locale,
    the output should be converted.  Esp. when 'encoding' is "utf-8". (Yongwei
    Wu) Should we use 'termencoding' for this?

Patch to add 'systemencoding', convert between 'encoding' and this for file
names, shell commands and the like.  (Kikuchan, 2010 Oct 14)
Assume the system converts between the actual encoding of the filesystem to
the system encoding (usually utf-8).

'hlsearch' interferes with a Conceal match. (Rom Grk, 2016 Aug 9)

Patch to add context information to quickfix/location list. (Yegappan
Lakshmanan, 2016 Aug 25, #1012)

MS-Windows: use WS_HIDE instead of SW_SHOWMINNOACTIVE in os_win32.c?
Otherwise task flickers in taskbar.

Bogus characters inserted when triggering indent while changing test.
(Vitor Antunes, 2016 Nov 22, #1269)

Should make ":@r" handle line continuation. (Cesar Romani, 2016 Jun 26)
Also for ":@.".

Repeating 'opfunc' in a function only works once. (Tarmean, 2016 Jul 15, #925)

Have a way to get the call stack, in a function and from an exception.
#1125

Patch to add 'pythonhome' and 'pythonthreehome' options. (Kazuki Sakamoto,
2016 Nov 21, #1266)

Second problem in #966: ins_compl_add_tv() uses get_dict_string() multiple
times, overwrites the one buffer. (Nikolay Pavlov, 2016 Aug 5)

This does not work: :set cscopequickfix=a-
(Linewi, 2015 Jul 12, #914)

Possibly wrong value for seq_cur. (Florent Fayolle, 2016 May 15, #806)

Patch to add separate highlighting for quickfix current line.
(anishsane, 2016 Sep 16, #1080)

Filetype plugin for awk. (Doug Kearns, 2016 Sep 5)

Patch to improve map documentation. Issue #799.

Patch for syntax folding optimization. (Shougo, 2016 Sep 6, #1045)

Patch for drag&drop reordering of GUI tab pages reordering.
(Ken Takata, 2013 Nov 22, second one, also by Masamichi Abe)
Now on Git: https://gist.github.com/nocd5/165286495c782b815b94
Update 2016 Aug 10.

We can use '. to go to the last change in the current buffer, but how about
the last change in any buffer?  Can we use ', (, is next to .)?

Ramel Eshed: system() is much slower than job_start(), why? (Aug 26)

When generating the Unicode tables with runtime/tools/unicode.vim the
emoji_width table has only one entry.

It's possible to add ",," to 'wildignore', an empty entry.  Causes problems.
Reject the value? #710.

Patch to fix increment/decrement not working properly when 'virtualedit' is
set. (Hirohito Higashi, 2016 Aug 1, #923)

Patch to support strikethrough next to bold and italic. (Christian Brabandt,
2013 Jul 30)  Update from Ken Takata, 2013 Oct 12.
Update mentioned by Christian, 2016 Apr 25.
Update from Ken Takata, 2016 Jul 17.

When doing "vi buf.md" a BufNew autocommand for *.md is not triggered.
Because of using the initial buffer? (Dun Peal, 2016 May 12)

Patch to add the :bvimgrep command.  (Christian Brabandt, 2014 Nov 12)
Updated 2016 Jun 10, #858

Add redrawtabline command. (Naruhiko Nishino, 2016 Jun 11)

Neovim patch for utfc_ptr2char_len() https://github.com/neovim/neovim/pull/4574
No test, needs some work to include.

Patch to improve indenting for C++ constructor with initializer list.
(Hirohito Higashi, 2016 Mar 31)

Add stronger encryption.  Could use libsodium (NaCl).
https://github.com/jedisct1/libsodium/
Possibly include the needed code so that it can be build everywhere.

Patch to add setbufline(). (email from Yasuhiro Matsumoto, patch by Ozaki
Kiichi, 2016 Feb 28)
Update Mar 8: https://gist.github.com/mattn/23c1f50999084992ca98
Update Mar 13: https://gist.github.com/mattn/23c1f50999084992ca98

Need to try out instructions in INSSTALLpc.txt about how to install all
interfaces and how to build Vim with them.
Appveyor build with self-installing executable, includes getting most
interfaces: https://github.com/k-takata/vim/tree/chrisbra-appveyor-build
result: https://ci.appveyor.com/project/k-takata/vim/history

Duplication of completion suggestions for ":!hom".  Issue 539.
Patch by Christian, 2016 Jan 29
>
Problem that a previous silent ":throw" causes a following try/catch not to
work. (ZyX, 2013 Sep 28) With examples: (Malcolm Rowe, 2015 Dec 24)

Problem using ":try" inside ":execute". (ZyX, 2013 Sep 15)

Patch to make tests pass with EBCDIC. (Owen Leibman, 2016 Apr 10)

Add ":read :command", to insert the output of an Ex command?
Can already do it with ":$put =execute('command')".

When repeating the 'confirm' dialog one needs to press Enter. (ds26gte, 2016
Apr 17)  #762

exists(":tearoff") does not tell you if the command is implemented. (Tony
Mechelynck)  Perhaps use exists("::tearoff") to check?

Use vim.vim syntax highlighting for help file examples, but without ":" in
'iskeyword' for syntax.

Patch to make "%:h:h" return "." instead of the full path.
(Coot, 2016 Jan 24, #592)

Remove SPACE_IN_FILENAME ? What could possibly go wrong?

When command names are very long :command output is difficult to read.  Use a
maximum for the column width?  (#871)
Patcy by varmanishant, 2016 Jun 18, #876

Patch to change GUI behavior: instead of changing the window size change the
lines/columns when menu/toolbar/etc. is added/removed. (Ychin, 2016 Mar 20,
#703)

Installation of .desktop files does not work everywhere.
It's now fixed, but the target directory probably isn't right.
Add configure check?
Should use /usr/local/share/applications or /usr/share/applications.
Or use $XDG_DATA_DIRS.
Also need to run update-desktop-database (Kuriyama Kazunobu, 2015 Nov 4)

Patch to have text objects defined by arbitrary single characters. (Daniel
Thau, 2013 Nov 20, 2014 Jan 29, 2014 Jan 31)
Added tests (James McCoy, 2016 Aug 3).  Still needs more work.

Feature request: add the "al" text object, to manipulate a screen line.
Especially useful when using 'linebreak'

Access to uninitialized memory in match_backref() regexp_nda.c:4882
(Dominique Pelle, 2015 Nov 6)

":cd C:\Windows\System32\drivers\etc*" does not work, even though the
directory exists. (Sergio Gallelli, 2013 Dec 29)

In debug mode one can inspect variables, but not the function parameters
(starting with a:). (Luc Hermitte, 2017 Jan 4, #1352)

7   Add a watchpoint in the debug mode: An expression that breaks execution
    when evaluating to non-zero.  Add the "watchadd expr" command, stop when
    the value of the expression changes.  ":watchdel" deletes an item,
    ":watchlist" lists the items. (Charles Campbell)
Patch by Christian Brabandt, 2016 Jun 10, #859

If ":bd" also closes a Tab page then the " mark is not set.  (Harm te Hennepe,
2016 Apr 25, #780)

Patch to avoid redrawing tabline when the popup menu is visible.
(Christian Brabandt, 2016 Jan 28)

Patch to add {skip} argument to search(). (Christian Brabandt, 2016 Feb 24)
Update 2016 Jun 10, #861

Patch to be able to use hex numbers with :digraph. (Lcd, 2015 Sep 6)
Update Sep 7.  Update by Christian Brabandt, 2015 Sep 8, 2016 Feb 1.

Patch to show search statistics. (Christian Brabandt, 2016 Jul 22)

When the CursorMovedI event triggers, and CTRL-X was typed, a script cannot
restore the mode properly. (Andrew Stewart, 2016 Apr 20)
Do not trigger the event?

Using ":windo" to set options in all windows has the side effect that it
changes the window layout and the current window.  Make a variant that saves
and restores.  Use in the matchparen plugin.
Perhaps we can use ":windo <restore> {cmd}"?
Patch to add <restore> to :windo, :bufdo, etc. (Christian Brabandt, 2015 Jan
6, 2nd message)
Alternative: ":keeppos" command modifier: ":keeppos windo {cmd}".

Patch to fix that executable() may fail on very long filename in MS-Windows.
(Ken Takata, 2016 Feb 1)

Patch to fix display of listchars on the cursorline. (Nayuri Aohime, 2013)
Update suggested by Yasuhiro Matsumoto, 2014 Nov 25:
https://gist.github.com/presuku/d3d6b230b9b6dcfc0477

Patch to make the behavior of "w" more straightforward, but not Vi compatible.
With a 'cpo' flag.  (Christian Brabandt, 2016 Feb 8)

Patch to add optionproperties(). (Anton Lindqvist, 2016 Mar 27, update Apr 13)

Patch to add TagNotFound autocommand. (Anton Lindqvist, 2016 Feb 3)

Patch to add Error autocommand. (Anton Lindqvist, 2016 Feb 17)
Only remembers one error.

Illegal memory access, requires ASAN to see. (Dominique Pelle, 2015 Jul 28)

Gvim: when both Tab and CTRL-I are mapped, use CTRL-I not for Tab.

Unexpected delay when using CTRL-O u.  It's not timeoutlen.
(Gary Johnson, 2015 Aug 28)

Instead of separately uploading patches to the ftp site, we can get them from
github with a URL like this:
   https://github.com/vim/vim/compare/v7.4.920%5E...v7.4.920.diff
Diff for version.c contains more context, can't skip a patch.

When t_Co is changed from termresponse, the OptionSet autocmmand event isn't
triggered.  Use the code from the end of set_num_option() in
set_color_count().

Python: ":py raw_input('prompt')" doesn't work. (Manu Hack)

Comparing nested structures with "==" uses a different comparator than when
comparing individual items.
Also, "'' == 0" evaluates to true, which isn't nice.
Add "===" to have a strict comparison (type and value match).
Add "==*" (?) to have a value match, but no automatic conversion, and v:true
equals 1 and 1.0, v:false equals 0 and 0.0.?

Using uninitialized memory. (Dominique Pelle, 2015 Nov 4)

MS-Windows: When editing a file with a leading space, writing it uses the
wrong name. (Aram, 2014 Nov 7)  Vim 7.4.

Can't recognize the $ProgramFiles(x86) environment variable.  Recognize it
specifically?  First try with the parens, then without.

Patch to add :mapgroup, put mappings in a group like augroup.
(Yasuhiro Matsumoto, 2016 Feb 19)

Value returned by virtcol() changes depending on how lines wrap.  This is
inconsistent with the documentation.

Can we cache the syntax attributes, so that updates for 'relativenumber' and
'cursorline'/'cursorcolumn' are a lot faster?

C highlighting: modern C allows: /* comment */ #ifdef
and also line continuation after #include.
I can't recommend it though.

Build with Python on Mac does not always use the right library.
(Kazunobu Kuriyama, 2015 Mar 28)

Patch to add arguments to argc() and argv(). (Yegappan Lakshmanan, 2016 Jan
24)  Also need a way to get the global arg list?  Update later on Jan 24
Update Mar 5. Update Apr 7.  Update Jun 5.

To support Thai (and other languages) word boundaries, include the ICU
library:  http://userguide.icu-project.org/boundaryanalysis

When complete() first argument is before where insert started and 'backspace'
is Vi compatible, the completion fails. (Hirohito Higashi, 2015 Feb 19)

Patch to use two highlight groups for relative numbers. (Shaun Brady, 2016 Jan
30)

MS-Windows: Crash opening very long file name starting with "\\".
(Christian Brock, 2012 Jun 29)

Using an external diff is inefficient.  Not all systems have a good diff
program available (esp. MS-Windows).  Would be nice to have in internal diff
implementation.  Can then also use this for displaying changes within a line.
Olaf Dabrunz is working on this.

The OptionSet autocommand event is not always triggered. (Rick Howe, 2015 Sep
24): :diffthis, :diffoff.

":set all&" still does not handle all side effects.  Centralize handling side
effects for when set by the user, on init and when reset to default.

":tag" does not jump to the right entry of a :tselect. (James Speros, 2015 Oct
9)

The argument for "-S" is not taken literally, the ":so" command expands
wildcards.  Add a ":nowild" command modifier?  (ZyX, 2015 March 4)

Proposal to make options.txt easier to read. (Arnaud Decara, 2015 Aug 5)
Update Aug 14.

When using --remote-tab on MS-Windows 'encoding' hasn't been initialized yet,
the file name ends up encoded wrong. (Raul Coronado, 2015 Dec 21)

Patch for problem with restoring screen on Windows. (Nobuhiro Takasaki, 2015
Sep 10)

Example in editing.txt uses $HOME with the expectation that it ends in a
slash.  For me it does, but perhaps not for everybody.  Add a function that
inserts a slash when needed?  pathconcat(dir, path) (Thilo Six, 2015 Aug 12)

ml_updatechunk() is slow when retrying for another encoding. (John Little,
2014 Sep 11)

Patch to fix checking global option value when not using it.
(Arnaud Decara, 2015 Jul 23)

When 'showbreak' is set repeating a Visual operation counts the size of the
'showbreak' text as part of the operation. (Axel Bender, 2015 Jul 20)

Patch for multi-byte characters in langmap and applying a mapping on them.
(Christian Brabandt, 2015 Jun 12, update July 25)
Is this the right solution?  Need to cleanup langmap behavior:
- in vgetorpeek() apply langmap to the typeahead buffer and put the result in
  a copy-buffer, only when langmap is appropriate for the current mode. Then
  check for mapping and let gotchars() work on the copy-buffer.
- Remove LANGMAP_ADJUST() in other parts of the code.  Make sure the mode is
  covered by the above change.
So that replaying the register doesn't use keymap/langmap and still does the
same thing.  Remarks on issue 543 (Roland Puntaier).
Also see #737: langmap not applied to replaying recording.

Patch to add grepfile(). (Scott Prager, 2015 May 26)
Work in progress.

Would be useful to have a treemap() or deepmap() function.  Like map() but
when an item is a list or dict would recurse into it.

Patch for global-local options consistency. (Arnaud Decara, 2015 Jul 22)
Is this right?

Patch to make getregtype() return the right size for non-linux systems.
(Yasuhiro Matsumoto, 2014 Jul 8)
Breaks test_eval.  Inefficient, can we only compute y_width when needed?

Patch to use different terminal mode settings for system(). (Hayaki Saito)
Does this work for everybody?

Patch for man.vim. (SungHyun Nam, 2015 May 20)
Doesn't work completely (Dominique Orban)

Patch to add a "literal" argument to bufnr().  (Olaf Dabrunz, 2015 Aug 4)

Cannot execute the shell when it's in a directory with a space.
Issue #459.

When a session file is created and there are "nofile" buffers, these are not
filled.  Need to trigger BufReadCmd autocommands.  Also handle deleting the
initial empty buffer better. (ZyX, 2015 March 8)

Extended file attributes lost on write (backupcopy=no).  Issue 306.

Patch to add :lockjumps. (Carlo Baldassi, 2015 May 25)
OK to not block marks?

Mixup of highlighting when there is a match and SpellBad. (ZyX, 2015 Jan 1)

Patch on Issue 72: 'autochdir' causes problems for :vimgrep.

When two SIGWINCH arrive very quickly, the second one may be lost.
(Josh Triplett, 2015 Sep 17)

Make comments in the test Makefile silent. (Kartik Agaram, 2014 Sep 24)

Result of systemlist() does not show whether text ended in line break.
(Bjorn Linse, 2014 Nov 27)

When in 'comments' "n:x" follows after three-part comment directly it repeats
any one-character from the previous line. (Kartik Agaram, 2014 Sep 19)

Syntax highlighting slow (hangs) in SASS file. (Niek Bosch, 2013 Aug 21)

Adding "~" to 'cdpath' doesn't work for completion?  (Davido, 2013 Aug 19)

Should be easy to highlight all matches with 'incsearch'.  Idea by Itchyny,
2015 Feb 6.

Wrong scrolling when using incsearch.  Patch by Christian Brabandt, 2014 Dec 4.
Is this a good solution?

Patch: Let rare word highlighting overrule good word highlighting.
(Jakson A. Aquino, 2010 Jul 30, again 2011 Jul 2)

Patch to add digits argument to round(). (Yasuhiro Matsumoto, 2015 Apr 26)

Can assign to s:type when a function s:type has been defined.
Also the other way around: define a function while a variable with that name
was already defined.
(Yasuhiro Matsumoto, 2014 Nov 3)

Patch for ordered dict. (Ozaki Kiichi, 2015 May 7)

Patch to make closed folds line up. (Charles Campbell, 2014 Sep 12)
Remark from Roland Eggner: does it cause crashes? (2014 Dec 12)
Updated patch by Roland Eggner, Dec 16
Updated patch from Charles, 2016 Jul 2

Patch to open folds for 'incsearch'. (Christian Brabandt, 2015 Jan 6)

Patch for building a 32bit Vim with 64bit MingW compiler.
(Michael Soyka, 2014 Oct 15)

Delete old code in os_msdos.c, mch_FullName().

Patch: On MS-Windows shellescape() may have to triple double quotes.
(Ingo Karkat, 2015 Jan 16)

Patch for variable tabstops.  On github (Christian Brabandt, 2014 May 15)
Update 2016 Jun 10, # 857

Redo only remembers the last change.  Could use "{count}g." to redo an older
change.  How does the user know which change?  At least have a way to list
them: ":repeats".

Patch for glob(), adding slash to normal files. (Ingo Karkat, 2014 Dec 22)

When entering and leaving the preview window autocommands are triggered, but
these may not work well.  Perhaps set a flag to indicate that the preview
window is involved? (John Otter, 2015 Oct 27)

Using "." to repeat an Ex command puts that command in history.  Probably
should not happen.  If the command is the result of a mapping it's not put in
history either. (Jacob Niehus, 2014 Nov 2)
Patch from Jacob, Nov 2.

"hi link" does not respect groups with GUI settings only. (Mark Lodato, 2014
Jun 8)

Bug: Autocompleting ":tag/pat" replaces "/pat" with a match but does not
insert a space. (Micha Mos, 2014 Nov 7)

Patch to add argument to :cquit. (Thinca, 2014 Oct 12)

No error for missing endwhile. (ZyX, 2014 Mar 20)

Patch to make extend() fail early when it might fail at some point.
(Olaf Dabrunz, 2015 May 2)  Makes extend() slower, do we still want it?
Perhaps only the checks that can be done without looping over the dict or
arguments.

Problem with transparent and matchgroup.  Issue #475

Patch to add :arglocal and :arglists. (Marcin Szamotulski, 2014 Aug 6)

Spell files use a latin single quote. Unicode also has another single quote:
0x2019.  (Ron Aaron, 2014 Apr 4)
New OpenOffice spell files support this with ICONV.  But they are not
compatible with Vim spell files.  The old files can no longer be downloaded.

xterm should be able to pass focus changes to Vim, so that Vim can check for
buffers that changed.  Perhaps in misc.c, function selectwindow().
Xterm 224 supports it!
Patch to make FocusGained and FocusLost work in modern terminals. (Hayaki
Saito, 2013 Apr 24) Update 2016 Aug 12.
Also see issue #609.
We could add the enable/disable sequences to t_ti/t_te or t_ks/t_ke.

Idea: For a window in the middle (has window above and below it), use
right-mouse-drag on the status line to move a window up/down without changing
its height?  It's like dragging the status bar above it at the same time.

Can we make ":unlet $VAR" use unsetenv() to delete the env var?
What for systems that don't have unsetenv()?  (Issue #1116)

Patch to add a :domodeline command. (Christian Brabandt, 2014 Oct 21)

This does not give an error: (Andre Sihera, 2014 Mar 21)
    vim -u NONE 1 2 3 -c 'bufdo if 1 | echo 1'
This neither: (ZyX)
    vim -u NONE 1 2 3 -c 'bufdo while 1 | echo 1'

'viewdir' default on MS-Windows is not a good choice, it's a system directory.
Change 'viewdir' to "$HOME/vimfiles/view" and use 'viewdiralt' to also read
from?

Problem with upwards search on Windows (works OK on Linux). (Brett Stahlman,
2014 Jun 8)

Include a plugin manager with Vim? Neobundle seems to be the best currently.
Also Vundle: https://github.com/gmarik/vundle
Long message about this from ZyX, 2014 Mar 23.  And following replies.
Also see http://vim-wiki.mawercer.de/wiki/topic/vim%20plugin%20managment.html
User view:
- Support multiple sources, basically any http:// URL. Or a central place that
  will work for everybody (github?  redirects from vim.org?).
  Be able to look into the files before deciding to install.
- Be able to try out a plugin and remove it again with (almost) no traces.
- Each plugin needs a "manifest" file that has the version, dependencies
  (including Vim version and features), conflicts, list of files, etc.
  Updater uses that to decide what/how to update.
  Dependencies can use a URL for specific versions, or short name for scripts
  on vim.org.
- Once a plugin is installed it remembers where it came from, updater checks
  there.  Can manually update when really needed.
- Must be possible to install for one user.  Also system wide?
- Can edit plugin config with Vim. Can temporarily disable a plugin.
- Run the update manually, find latest version and install.
- Be able to download without special tools, must work for 95% of users.
Implementation:
- Avoid the 'runtimepath' getting long.  Need some other way to keep each
  plugin separate.
- When installing or updating, first figure out what needs to be done. This
  may involve recursively fetching manifest files for dependencies.  Then show
  the user what's going to change and ask for OK.
- Scripts on Vim.org must be able to consist of several files.  Is zip format
  sufficient?  Upload the manifest?  Or refer to a site that has the manifest?
- Best is to fetch individual files or use a Vimball. Reduces dependency on
  tools that might be missing and allows inspection of the files before
  installing.
Out of scope:
- Overview of plugins, ratings, comments, etc.  That's another world.
- Development work on plugins (although diff with distributed version would be
  useful).

Setting the spell file in a session only reads the local additions, not the
normal spell file. (Enno Nagel, 2014 Mar 29)

When typing the first character of a command, e.g. "f", then using a menu, the
menu item doesn't work.  Clear typeahead when using a menu?

Editing an ascii file as ucs-2 or ucs-4 causes display errors.
(ZyX, 2014 Mar 30)

":Next 1 some-arg" does not complain about trailing argument.  Also for
various other commands.  (ZyX, 2014 Mar 30)

Patch to skip sort if no line matches the expression.
(Christian Brabandt, 2014 Jun 25)

VMS: Select() doesn't work properly, typing ESC may hang Vim.  Use sys$qiow
instead. (Samuel Ferencik, 2013 Sep 28)

Patch for XDG base directory support. (Jean François Bignolles, 2014 Mar 4)
Remark on the docs.  Should not be a compile time feature.  But then what?

Completion of ":e" is ":earlier", should be ":edit".  Complete to the matching
command instead of doing this alphabetically. (Mikel Jorgensen)

Patch to define macros for hardcoded values. (Elias Diem, 2013 Dec 14)

Several syntax file match "^\s*" which may get underlined if that's in the
highlight group.  Add a "\zs" after it?

The undo file name can get too long. (Issue 346)
For the path use a hash instead of dir%dir%dir%name  hash%name.

Patch to add ":undorecover", get as much text out of the undo file as
possible. (Christian Brabandt, 2014 Mar 12, update Aug 22)

Include Haiku port? (Adrien Destugues, Siarzhuk Zharski, 2013 Oct 24)
It can replace the BeOS code, which is likely not used anymore.

Updated spec ftplugin. (Matěj Cepl, 2013 Oct 16)

Patch to right-align signs. (James Kolb (email james), 2013 Sep 23)

Patch to handle integer overflow. (Aaron Burrow, 2013 Dec 12)

Patch to add "ntab" item in 'listchars' to repeat first character. (Nathaniel
Braun, pragm, 2013 Oct 13)  A better solution 2014 Mar 5.

Undo message is not always properly displayed.  Patch by Ken Takata, 2013 oct
3.  Doesn't work properly according to Yukihiro Nakadaira.

/[b-a] gives error E16, should probably be E769.

7   Windows XP: When using "ClearType" for text smoothing, a column of yellow
    pixels remains when typing spaces in front of a "D" ('guifont' set to
    "lucida_console:h8").
Patch by Thomas Tuegel, also for GTK, 2013 Nov 24

:help gives example for z?, but it does not work.  m? and t? do work.

Patch to add funcref to Lua.  (Luis Carvalho, 2013 Sep 4)
With tests: Sep 5.

Discussion about canonicalization of Hebrew. (Ron Aaron, 2011 April 10)

Checking runtime scripts: Thilo Six, 2012 Jun 6.

When evaluating expression in backticks, autoload doesn't work.
(Andy Wokula, 2013 Dec 14)

Using <nr>ifoobar<esc> can slow down Vim.  Patch by Christian Brabandt, 2013
Dec 13.

Patch from Christian Brabandt to preserve upper case marks when wiping out a
buffer. (2013 Dec 9)

GTK: problem with 'L' in 'guioptions' changing the window width.
(Aaron Cornelius, 2012 Feb 6)

Patch to add option that tells whether small deletes go into the numbered
registers. (Aryeh Leib Taurog, 2013 Nov 18)

Javascript file where indent gets stuck on: GalaxyMaster, 2012 May 3.

The BufUnload event is triggered when re-using the empty buffer.
(Pokey Rule, 2013 Jul 22)
Patch by Marcin Szamotulski, 2013 Jul 22.

The CompleteDone autocommand needs some info passed to it:
- The word that was selected (empty if abandoned complete)
- Type of completion: tag, omnifunc, user func.

Patch to allow more types in remote_expr(). (Lech Lorens, 2014 Jan 5)
Doesn't work for string in list.  Other way to pass all types of variables
reliably?

Using ":call foo#d.f()" doesn't autoload the "foo.vim" file.
That is, calling a dictionary function on an autoloaded dict.
Works OK for echo, just not for  ":call" and ":call call()". (Ted, 2011 Mar
17)
Patch by Christian Brabandt, 2013 Mar 23.
Not 100% sure this is the right solution.

Patch to add {lhs} to :mapclear: clear all maps starting with {lhs}.
(Christian Brabandt, 2013 Dec 9)

Exception caused by argument of return is not caught by try/catch.
(David Barnett, 2013 Nov 19)

Patch to fix that 'cedit' is recognized after :normal. (Christian Brabandt,
2013 Mar 19, later message)

Patch to view coverage of the tests. (Nazri Ramliy, 2013 Feb 15)

Patch to invert characters differently in GTK. (Yukihiro Nakadaira, 2013 May
5)

Patch to add "Q" and "A" responses to interactive :substitute. They are
carried over when using :global. (Christian Brabandt, 2013 Jun 19)

Bug with 'cursorline' in diff mode.  Line being scrolled into view gets
highlighted as the cursor line.  (Alessandro Ivaldi, 2013 Jun 4)

Two highlighting bugs. (ZyX, 2013 Aug 18)

Patch to add the bufferlist() function. (Yegappan Lakshmanan, 2013 May 5)
May 17: with winlist() and tabpagelist().
May 19: with local variables.
May 28: with options

Patch to support 'u' in interactive substitute. (Christian Brabandt, 2012 Sep
28)  With tests: Oct 9.

Patch from Christian Brabandt to make the "buffer" argument for ":sign place"
optional. (2013 Jul 12)

Dialog is too big on Linux too. (David Fishburn, 2013 Sep 2)

Improve the installer for MS-Windows.  There are a few alternatives:
- Add silent install option. (Shane Lee, #751)
- Installer from Cream (Steve Hall).
- Modern UI 2.0 for the Nsis installer. (Guopeng Wen)
    https://github.com/gpwen/vim-installer-mui2
-  make it possible to do a silent install, see
    http://nsis.sourceforge.net/Docs/Chapter4.html#4.12
    Version from Guopeng Wen does this.
- MSI installer: https://github.com/petrkle/vim-msi/
- The one on Issue 279.
Problem: they all work slightly different (e.g. don't install vimrun.exe).
How to test that it works well for all Vim users?

Patch to make fold updates much faster. (Christian Brabandt, 2012 Dec)

-   Add regex for 'paragraphs' and 'sections': 'parare' and 'sectre'.  Combine
    the two into a regex for searching. (Ned Konz)
Patch by Christian Brabandt, 2013 Apr 20, unfinished.

Bug: findfile("any", "file:///tmp;") does not work.

In the ATTENTION message about an existing swap file, mention the name of the
process that is running.  It might actually be some other program, e.g. after
a reboot.

patch to add "combine" flag to  syntax commands. (so8res, 2012 Dec 6)

Syntax update problem in one buffer opened in two windows, bottom window is
not correctly updated. (Paul Harris, 2012 Feb 27)

Patch to add getsid(). (Tyru, 2011 Oct 2)  Do we want this?  Update Oct 4.
Or use expand('<sid>')?

Patch to make confirm() display colors. (Christian Brabandt, 2012 Nov 9)

Patch to add functions for signs. (Christian Brabandt, 2013 Jan 27)

Patch to remove flicker from popup menu. (Yasuhiro Matsumoto, 2013 Aug 15)

Problem with refresh:always in completion. (Tyler Wade, 2013 Mar 17)

b:undo_ftplugin cannot call a script-local function. (Boris Danilov, 2013 Jan
7)

Win32: The Python interface only works with one version of Python, selected at
compile time.  Can this be made to work with version 2.1 and 2.2 dynamically?

Python: Be able to define a Python function that can be called directly from
Vim script.  Requires converting the arguments and return value, like with
vim.bindeval().

Patch for :tabcloseleft, after closing a tab go to left tab. (William Bowers,
2012 Aug 4)

Patch to improve equivalence classes in regexp patterns.
(Christian Brabandt, 2013 Jan 16, update Jan 17)

Patch with suggestions for starting.txt. (Tony Mechelynck, 2012 Oct 24)
But use Gnome instead of GTK?

Should be possible to enable/disable matchparen per window or buffer.
Add a check for b:no_match_paren in Highlight_matching_Pair() (Marcin
Szamotulski, 2012 Nov 8)

Session file creation: 'autochdir' causes trouble.  Keep it off until after
loading all files.

MS-Windows resizing problems:
- Windows window on screen positioning: Patch by Yukihiro Nakadaira, 2012 Jun
  20.  Uses getWindowRect() instead of GetWindowPlacement()
- Win32: When the taskbar is at the top of the screen creating the tabbar
  causes the window to move unnecessarily. (William E. Skeith III, 2012 Jan
  12) Patch: 2012 Jan 13  Needs more work (2012 Feb 2)

'iminsert' global value set when using ":setlocal iminsert"? (Wu, 2012 Jun 23)

Patch to append regexp to tag commands to make it possible to select one out
of many matches. (Cody Cutler, 2013 Mar 28)

Patch to add tagfunc().  Cleaned up by Christian Brabandt, 2013 Jun 22.

The input map for CTRL-O in mswin.vim causes problems after CTRL-X CTRL-O.
Suggestion for another map. (Philip Mat, 2012 Jun 18)
But use "gi" instead of "a".  Or use CTRL-\ CTRL-O.

Patch to support user name completion on MS-Windows. (Yasuhiro Matsumoto, 2012
Aug 16)

When there are no command line arguments ":next" and ":argu" give E163, which
is confusing.  Should say "the argument list is empty".

xterm supports escape sequences to mark a paste operation.  Need to be
enabled. (Bruno Sutic, 2014 Jul 11)  How to know the terminal supports this?

URXVT:
- will get stuck if byte sequence does not contain the expected semicolon.
- Use urxvt mouse support also in xterm.  Explanations:
  http://www.midnight-commander.org/ticket/2662

Patch to have the fold and sign column and at the last line of the buffer.
(Marco Hinz, 2014 Sep 25)
Alternate suggestion: let all columns continue, also the number column.

Patch to add tests for if_xcmdsrv.c., Jul 8, need some more work. (Brian Burns)
New tests Jul 13.   Update Jul 17.  Discussion Jul 18.

When running Vim in silent ex mode, an existing swapfile causes Vim to wait
for a user action without a prompt. (Maarten Billemont, 2012 Feb 3)
Do give the prompt? Quit with an error?

Patch to list user digraphs. (Christian Brabandt, 2012 Apr 14)

Patch to add digraph() function. (Christian Brabandt, 2013 Aug 22, update Aug
24)

Patch for input method status. (Hirohito Higashi, 2012 Apr 18)

Update Vim app icon (for Gnome). (Jakub Steiner, 2013 Dec 6)

Patch to use .png icons for the toolbar on MS-Windows. (Martin Gieseking, 2013
Apr 18)

Patch for has('unnamedplus') docs. (Tony Mechelynck, 2011 Sep 27)
And one for gui_x11.txt.

":cd" doesn't work when current directory path contains "**".
finddir() has the same problem.  (Yukihiro Nakadaira, 2012 Jan 10)
Requires a rewrite of the file_file_in_path code.

Should use has("browsefilter") in ftplugins.  Requires patch 7.3.593.

Update for vim2html.pl. (Tyru, 2013 Feb 22)

Patch to sort functions starting with '<' after others.  Omit dict functions,
they can't be called. (Yasuhiro Matsumoto, 2011 Oct 11)

Patch to pass list to or(), and() and xor(). (Yasuhiro Matsumoto, 2012 Feb 8)

Patch to improve "it" and "at" text object matching. (Christian Brabandt, 2011
Nov 20)

Patch to improve GUI find/replace dialog. (Christian Brabandt, 2012 May 26)
Update Jun 2.

`] moves to character after insert, instead of the last inserted character.
(Yukihiro Nakadaira, 2011 Dec 9)

Plugin for Modeleasy. (Massimiliano Tripoli, 2011 Nov 29)

BufWinLeave triggers too late when quitting last window in a tab page. (Lech
Lorens, 2012 Feb 21)

Patch for 'transparency' option. (Sergiu Dotenco, 2011 Sep 17)
Only for MS-Windows.  No documentation.  Do we want this?

Patch to support cursor shape in Cygwin console. (Ben bgold, 2011 Dec 27)

On MS-Windows a temp dir with a & init causes system() to fail. (Ben Fritz,
2012 Jun 19)

'cursorline' is displayed too short when there are concealed characters and
'list' is set.  (Dennis Preiser)
Patch 7.3.116 was the wrong solution.
Christian Brabandt has another incomplete patch. (2011 Jul 13)

With concealed text mouse click doesn't put the cursor in the right position.
(Herb Sitz)  Fix by Christian Brabandt, 2011 Jun 16.  Doesn't work properly,
need to make the change in where RET_WIN_BUF_CHARTABSIZE() is called.

Syntax region with 'concealends' and a 'cchar' value, 'conceallevel' set to 2,
only one of the two ends gets the cchar displayed. (Brett Stahlman, 2010 Aug
21, Ben Fritz, 2010 Sep 14)

The :syntax cchar value can only be a single character.  It would be useful to
support combining characters. (Charles Campbell)

'cursorline' works on a text line only.  Add 'cursorscreenline' for
highlighting the screen line. (Christian Brabandt, 2012 Mar 31)

Win32: Patch to use task dialogs when available. (Sergiu Dotenco, 2011 Sep 17)
New feature, requires testing.  Made some remarks.

Win32: Patch for alpha-blended icons and toolbar height. (Sergiu Dotenco, 2011
Sep 17)  Asked for feedback from others.

Win32: Cannot cd into a directory that starts with a space. (Andy Wokula, 2012
Jan 19)

Need to escape $HOME on Windows for fnameescape()?  (ZyX, 2011 Jul 21,
discussion 2013 Jul 4) Can't simply use a backslash, \$HOME has a different
meaning already.  Would be possible to use $$HOME where $HOME is to be used.

"2" in 'formatoptions' not working in comments. (Christian Corneliussen, 2011
Oct 26)

Bug in repeating Visual "u". (Lawrence Kesteloot, 2010 Dec 20)

With "unamedplus" in 'clipboard' pasting in Visual mode causes error for empty
register. (Michael Seiwald, 2011 Jun 28)  I can't reproduce it.

Windows keys not set properly on Windows 7?  (cncyber, 2010 Aug 26)

When using a Vim server, a # in the path causes an error message.
(Jeff Lanzarotta, 2011 Feb 17)

Setting $HOME on MS-Windows is not very well documented.  Suggestion by Ben
Fritz (2011 Oct 27).

When there is a ">" in a line that "gq" wraps to the start of the next line,
then the following line will pick it up as a leader.  Should get the leader
from the first line, not a wrapped line. (Matt Ackeret, 2012 Feb 27)

Using ":break" or something else that stops executing commands inside a
":finally" does not rethrow a previously uncaught exception. (ZyX, 2010 Oct
15)

Vim using lots of memory when joining lines. (John Little, 2010 Dec 3)

BT regexp engine: After trying a \@> match and failing, submatches are not
cleared.  See test64.

Changes to manpage plugin. (Elias Toivanen, 2011 Jul 25)

Patch to make "z=" work when 'spell' is off.  Does this have nasty side
effects?  (Christian Brabandt, 2012 Aug 5, Update 2013 Aug 12)
Would also need to do this for spellbadword() and spellsuggest().

On 64 bit MS-Windows "long" is only 32 bits, but we sometimes need to store a
64 bits value.  Change all number options to use nropt_T and define it to the
right type.

string() can't parse back "inf" and "nan".  Fix documentation or fix code?
(ZyX, 2010 Aug 23)

Make 'formatprg' global-local. (Sung Pae)

When doing "redir => s:foo" in a script and then "redir END" somewhere else
(e.g. in a function) it can't find s:foo.
When a script contains "redir => s:foo" but doesn't end redirection, a
following "redir" command gives an error for not being able to access s:foo.
(ZyX, 2011 Mar 27)

When setqflist() uses a filename that triggers a BufReadCmd autocommand Vim
doesn't jump to the correct line with :cfirst. (ZyX,  2011 Sep 18)

Behavior of i" and a" text objects isn't logical. (Ben Fritz, 2013 Nov 19)

7   Make "ga" show the digraph for a character, if it exists.
Patch from Christian Brabandt, 2011 Aug 19.

maparg() does not show the <script> flag.  When temporarily changing a
mapping, how to restore the script ID?

Bug in try/catch: return with invalid compare throws error that isn't caught.
(ZyX, 2011 Jan 26)

When setting a local option value from the global value, add a script ID that
indicates this, so that ":verbose set" can give a hint.  Check with options in
the help file.

After patch 7.3.097 still get E15. (Yukihiro Nakadaira, 2011 Jan 18)
Also for another example (ZyX, 2011 Jan 24)

Build problem with small features on Mac OS X 10.6. (Rainer, 2011 Jan 24)

"0g@$" puts '] on last byte of multi-byte. (ZyX, 2011 Jan 22)

Patch to add TextDeletePost and TextYankPost events. (Philippe Vaucher, 2011
May 24)  Update May 26.

Patch for :tabrecently. (Hirokazu Yoshida, 2012 Jan 30)

Problem with "syn sync grouphere". (Gustavo Niemeyer, 2011 Jan 27)

Loading autoload script even when usage is inside "if 0". (Christian Brabandt,
2010 Dec 18)

With a filler line in diff mode, it isn't displayed in the column with line
number, but it is in the sign column.  Doesn't look right. (ZyX 2011 Jun 5)
Patch by Christian Brabandt, 2011 Jun 5.  Introduces new problems.

Add jump() function. (Marcin Szamotulski, 2013 Aug 29)
Is this needed?  CTRL-O and CTRL-I do the same, just more difficult to use.

8   Add a command to jump to the next character highlighted with "Error".
Patch by Christian Brabandt, uses ]e [e ]t and [t. 2011 Aug 9.

Add event for when the text scrolls.  A bit like CursorMoved.  Also a similar
one for insert mode.  Use the event in matchparen to update the highlight if
the match scrolls into view.

7   Use "++--", "+++--" for different levels instead of "+---" "+----".
Patch by Christian Brabandt, 2011 Jul 27.
Update by Ben Fritz, with fix for TOhtml. (2011 Jul 30)

9   Add %F to 'errorformat': file name without spaces.  Useful on Unix to
    avoid matching something up to a time 11:22:33.
Patch by Christian Brabandt, 2011 Jul 27.

Patch to add up to 99 match groups. (Christian Brabandt, 2010 Dec 22)
Also add named groups: \%{name}(re)  and \%{name}g

In the sandbox it's not allowed to do many things, but it's possible to change
or set variables.  Add a way to prevent variables from being changed in the
sandbox?  E.g.: ":protect g:restore_settings".

GTK: drawing a double-width combining character over single-width characters
doesn't look right. (Dominique Pelle, 2010 Aug 8)

GTK: tear-off menu does not work. (Kurt Sonnenmoser, 2010 Oct 25)

Win32: tear-off menu does not work when menu language is German. (Markus
Bossler, 2011 Mar 2)  Fixed by 7.3.095?

Version of netbeans.c for use with MacVim. (Kazuki Sakamoto, 2010 Nov 18)

7.3.014 changed how backslash at end of line works, but still get a NUL when
there is one backslash. (Ray Frush, 2010 Nov 18)  What does the original ex
do?

Searching mixed with Visual mode doesn't redraw properly. (James Vega, 2010 Nov
22)

New esperanto spell file can't be processed. (Dominique Pelle, 2011 Jan 30)
- move compflags to separate growarray?
- instead of a regexp use a hashtable.  Expand '?', '*', '+'.  What would be
  the maximum repeat for * and +?

"L'Italie" noted as a spell error at start of the sentence. (Dominique Pelle,
2011 Feb 27)

Editing a file with a ^M with 'ff' set to "mac", opening a help file, then the
^M is displayed as ^J sometimes.  Getting 'ff' value from wrong window/buffer?

'colorcolumn' has higher priority than hlsearch.  Should probably be the other
way around. (Nazri Ramliy, 2013 Feb 19)

When Vim is put in the background (SIGTSTP) and then gets a SIGHUP it doesn't
exit.  It exists as soon as back in the foreground. (Stephen Liang, 2011 Jan
9)  Caused by vim_handle_signal(SIGNAL_BLOCK); in ui.c.

g` not working correctly when using :edit.  It works OK when editing a file on
the command line. (Ingo Karkat, 2011 Jan 25)

Since patch 7.2.46 Yankring plugin has become very slow, eventually make Vim
crash? (Raiwil, 2010 Nov 17)

Patch to add FoldedLineNr highlighting: different highlighting for the line
number of a closed fold. (eXerigumo Clanjor, 2013 Jul 15)

Regexp engine performance:
- Profiling:
	./vim -u NONE -s ~/vim/test/ruby.vim
	./vim -u NONE -s ~/vim/test/loop.vim
	./vim -u NONE -s ~/vim/test/alsa.vim
	./vim -s ~/vim/test/todo.vim
	./vim -s ~/vim/test/xml.vim
    Dominique Pelle:  xmlSyncDT is particularly slow (Jun 7)
- More test files from the src/pkg/regexp/testdata directory in the Go repo.
- Performance tests:
  - Using asciidoc syntax. (Marek Schimara, 2013 Jun 6)
  - ~/vim/text/FeiqCfg.xml (file from Netjune)
  - ~/vim/text/edl.svg  (also XML)
  - glts has five tests. (May 25)
  - ~/vim/test/slowsearch
  - ~/vim/test/rgb.vim
  - search for  a.*e*exn  in the vim executable.  Go to last line to use
    'hlsearch'.
  - Slow combination of folding and PHP syntax highlighting.  Script to
    reproduce it.  Caused by "syntax sync fromstart" in combination with patch
    7.2.274.  (Christian Brabandt, 2010 May 27) Generally, folding with
    'foldmethod' set to "syntax" is slow.  Do profiling to find out why.

Problem producing tags file when hebrew.frx is present.  It has a BOM.
Results in E670. (Tony Mechelynck, 2010 May 2)

'beval' option should be global-local.

Ruby: ":ruby print $buffer.number" returns zero.

setpos() does not restore cursor position after :normal. (Tyru, 2010 Aug 11)

7   The 'directory' option supports changing path separators to "%" to make
    file names unique, also support this for 'backupdir'. (Mikolaj Machowski)
    Patch by Christian Brabandt, 2010 Oct 21.

With "tw=55 fo+=a" typing space before ) doesn't work well. (Scott Mcdermott,
2010 Oct 24)

Patch to add random number generator. (Hong Xu, 2010 Nov 8, update Nov 10)
Alternative from Christian Brabandt. (2010 Sep 19)
New one from Yasuhiro Matsumoto, #1277.

Messages in message.txt are highlighted as examples.

When using cp850 the NBSP (0xff) is not drawn correctly. (Brett Stahlman, 2010
Oct 22)  'isprint' is set to "@,161-255".

":echo "\x85" =~# '[\u0085]'" returns 1 instead of 0. (ZyX, 2010 Oct 3)

'cindent' not correct when 'list' is set. (Zdravi Korusef, 2010 Apr 15)

C-indenting: A matching { in a comment is ignored, but intermediate { are not
checked to be in a comment.  Implement FM_SKIPCOMM flag of findmatchlimit().
Issue 46.

Mac with X11: clipboard doesn't work properly. (Raf, 2010 Aug 16)

Using CompilerSet doesn't record where an option was set from.  E.g., in the
gcc compiler plugin. (Gary Johnson, 2010 Dec 13)

":helpgrep" does not put the cursor in the correct column when preceded by
accented character. (Tony Mechelynck, 2010 Apr 15)

Don't call check_restricted() for histadd(), setbufvar(), settabvar(),
setwinvar().

Patch for GVimExt to show an icon. (Dominik Riebeling, 2010 Nov 7)

When 'lines' is 25 and 'scrolloff' is 12, "j" scrolls zero or two lines
instead of one. (Constantin Pan, 2010 Sep 10)

Gui menu edit/paste in block mode insert only inserts in one line (Bjorn
Winckler, 2011 May 11)
Requires a map mode for Insert mode started from blockwise Visual mode.

Writing nested List and Dict in viminfo gives error message and can't be read
back. (Yukihiro Nakadaira, 2010 Nov 13)

Problem with cursor in the wrong column. (SungHyun Nam, 2010 Mar 11)
Additional info by Dominique Pelle. (also on 2010 Apr 10)

CreateFile and CreateFileW are used without sharing, filewritable() fails when
the file was already open (e.g. script is being sourced).  Add FILE_SHARE_READ|
FILE_SHARE_WRITE in mch_access()? (Phillippe Vaucher, 2010 Nov 2)

Is ~/bin (literally) in $PATH supposed to work?  (Paul, 2010 March 29)
Looks like only bash can do it. (Yakov Lerner)

Cscope "cs add" stopped working somewhat before 7.2.438. (Gary Johnson, 2010
Jun 29)  Caused by 7.2.433?

I often see pasted text (from Firefox, to Vim in xterm) appear twice.
Also, Vim in xterm sometimes loses copy/paste ability (probably after running
an external command).

Jumplist doesn't work properly in Insert mode? (Jean Johner, 2010 Mar 20)

Problem with transparent cmdline.  Also: Terminal title is wrong with
non-ASCII character. (Lily White, 2010 Mar 7)

iconv() doesn't fail on an illegal character, as documented. (Yongwei Wu, 2009
Nov 15, example Nov 26)  Add argument to specify whether iconv() should fail
or replace with a character and continue?

Add local time at start of --startuptime output.
Requires configure check for localtime().
Use format year-month-day hr:min:sec.

Patch to add "combine" to :syntax, combines highlight attributes. (Nate
Soares, 2012 Dec 3)

Patch to make ":hi link" also take arguments. (Nate Soares, 2012 Dec 4)

Shell not recognized properly if it ends in "csh -f". (James Vega, 2009 Nov 3)
Find tail?  Might have a / in argument.  Find space?  Might have space in
path.

Test 51 fails when language set to German. (Marco, 2011 Jan 9)
Dominique can't reproduce it.

'ambiwidth' should be global-local.

":function f(x) keepjumps" creates a function where every command is executed
like it has ":keepjumps" before it.

Coverity: Check if there are new reported defects:
https://scan.coverity.com/projects/241

Patch to support :undo absolute jump to file save number. (Christian Brabandt,
2010 Nov 5)

Patch to use 'foldnestmax' also for "marker" foldmethod. (Arnaud Lacombe, 2011
Jan 7)

Bug with 'incsearch' going to wrong line. (Wolfram Kresse, 2009 Aug 17)
Only with "vim -u NONE".

Problem with editing file in binary mode. (Ingo Krabbe, 2009 Oct 8)

With 'wildmode' set to "longest:full,full" and pressing Tab once the first
entry in wildmenu is highlighted, that shouldn't happen. (Yuki Watanabe, 2011
Feb 12)

Display error when 'tabline' that includes a file name with double-width
characters. (2010 Aug 14, bootleq)

Problem with stop directory in findfile(). (Adam Simpkins, 2009 Aug 26)

Using ']' as the end of a range in a pattern requires double escaping:
     /[@-\\]]  (Andy Wokula, 2011 Jun 28)

Syntax priority problem. (Charles Campbell, 2011 Sep 15)

When completion inserts the first match, it may trigger the line to be folded.
Disable updating folds while completion is active? (Peter Odding, 2010 Jun 9)

When a:base in 'completefunc' starts with a number it's passed as a number,
not a string. (Sean Ma)  Need to add flag to call_func_retlist() to force a
string value.

Invalid read error in Farsi mode. (Dominique Pelle, 2009 Aug 2)

For running gvim on a USB stick: avoid the OLE registration.  Use a command
line argument -noregister.

When using an expression in 'statusline' leading white space sometimes goes
missing (but not always). (ZyX, 2010 Nov 1)

When a mapping exists both for insert mode and lang-insert mode, the last one
doesn't work. (Tyru, 2010 May 6)  Or is this intended?

Still a problem with ":make" in the wrong directory.  Caused by ":bufdo".
(Ajit Thakkar, 2009 Jul 1) More information Jul 9, Jul 15.
Caused by "doautoall syntaxset BufEnter *" in syntax/nosyntax.vim ?
There also is a BufLeave/BufEnter aucmd to save/restore view.
Does the patch to save/restore globaldir work?

":bufdo normal gg" while 'hidden' is set leaves buffers without syntax
highlighting.  Don't disable Syntax autocommands then?  Or add a flag/modifier
to avoid changing 'eventignore'?

Patch for displaying 0x200c and 0x200d. (Ali Gholami Rudi, 2009 May 6)
Probably needs a bit of work.

Patch to add farsi handling to arabic.c (Ali Gholami Rudi, 2009 May 2)
Added test, updates, June 23.
Updated for 7.4: http://litcave.rudi.ir/farsi_vim.diff
With modification for Tatweel character: https://dpaste.de/VmFw
Remark from Ameretat Reith (2014 Oct 13)

List of encoding aliases. (Takao Fujiwara, 2009 Jul 18)
Are they all OK?  Update Jul 22.

Win32: Improved Makefile for MSVC. (Leonardo Valeri Manera, 2010 Aug 18)

Win32: Expanding 'path' runs into a maximum size limit. (bgold12, 2009 Nov 15)

Win32: Patch for enabling quick edit mode in console. (Craig Barkhouse, 2010
Sep 1)

Win32: Patch for using .png files for icons. (Charles Peacech, 2012 Feb 5)

Putting a Visual block while 'visualedit' is "all" does not leave the cursor
on the first character. (John Beckett, 2010 Aug 7)

Setting 'tags' to "tagsdir/*" does not find "tagsdir/tags". (Steven K. Wong,
2009 Jul 18)

Patch to add "focusonly" to 'scrollopt', so that scrollbind also applies in
window that doesn't have focus. (Jonathon Mah, 2009 Jan 12)
Needs more work.

Problem with <script> mappings (Andy Wokula, 2009 Mar 8)

When starting Vim with "gvim -f -u non_existent_file > foo.txt" there are a
few control characters in the output. (Dale Wiles, 2009 May 28)

'cmdwinheight' is only used in last window when 'winheight' is a large value.
(Tony Mechelynck, 2009 Apr 15)

Status line containing winnr() isn't updated when splitting the window (Clark
J.  Wang, 2009 Mar 31)

When $VIMRUNTIME is set in .vimrc, need to reload lang files.  Already done
for GTK, how about others? (Ron Aaron, 2010 Apr 10)

Patch for GTK buttons X1Mouse and X2Mouse. (Christian J. Robinson, 2010 Aug 9)

Motif: Build on Ubuntu can't enter any text in dialog text fields.

":tab split fname" doesn't set the alternate file in the original window,
because win_valid() always returns FALSE.  Below win_new_tabpage() in
ex_docmd.c.

Space before comma in function definition not allowed: "function x(a , b)"
Give a more appropriate error message.  Add a remark to the docs.

string_convert() should be able to convert between utf-8 and utf-16le.  Used
for GTK clipboard.  Avoid requirement for iconv.

Now that colnr_T is int instead of unsigned, more type casts can be removed.

'delcombine' does not work for the command line. (Tony Mechelynck, 2009 Jul
20)

Don't load macmap.vim on startup, turn it into a plugin. (Ron Aaron,
2009 Apr 7)  Reminder Apr 14.

Add "no_hlsearch" to winsaveview().

Cursorline highlighting combines with Search ('hlsearch') but not with
SpellBad. (Jim Karsten, 2009 Mar 18)

When 'foldmethod' is "indent", adding an empty line below a fold and then
indented text, creates a new fold instead of joining it with the previous one.
(Evan Laforge, 2009 Oct 17)

Bug: When reloading a buffer changed outside of Vim, BufRead autocommands
are applied to the wrong buffer/window. (Ben Fritz, 2009 Apr 2, May 11)
Ignore window options when not in the right window?
Perhaps we need to use a hidden window for applying autocommands to a buffer
that doesn't have a window.

When using "ab foo bar" and mapping <Tab> to <Esc>, pressing <Tab> after foo
doesn't trigger the abbreviation like <Esc> would. (Ramana Kumar, 2009 Sep 6)

getbufvar() to get a window-local option value for a buffer that's not
displayed in a window should return the value that's stored for that buffer.

":he ctrl_u" can be auto-corrected to ":he ctrl-u".

There should be a way after an abbreviation has expanded to go back to what
was typed.  CTRL-G h ?  Would also undo last word or line break inserted
perhaps.  And undo CTRL-W.  CTRL-G l would redo.

Diff mode out of sync. (Gary Johnson, 2010 Aug 4)

Win32 GUI: last message from startup doesn't show up when there is an echoerr
command. (Cyril Slobin, 2009 Mar 13)

Win32: completion of file name ":e c:\!test" results in ":e c:\\!test", which
does not work. (Nieko Maatjes, 2009 Jan 8, Ingo Karkat, 2009 Jan 22)

opening/closing window causes other window with 'winfixheight' to change
height.  Also happens when there is another window in the frame, if it's not
very high. (Yegappan Lakshmanan, 2010 Jul 22, Michael Peeters, 2010 Jul 22)

Directory wrong in session file, caused by ":lcd" in BufEnter autocommand.
(Felix Kater, 2009 Mar 3)

Session file generates error upon loading, cause by --remote-silent-tab.
(7tommm (ytommm) 2010 Nov 24)

Using ~ works OK on 'a' with composing char, but not on 0x0418  with composing
char 0x0301. (Tony Mechelynck, 2009 Mar 4)

Searching for composing char works, but not when inside []. (ZyX, Benjamin R.
Haskell, 2010 Aug 24)

This does not work yet: "a\(%C\)" (get composing characters into a submatch).

A function on a dictionary is not profiled. (ZyX, 2010 Dec 25)

Inconsistent: starting with $LANG set to es_ES.utf-8 gives Spanish
messages, even though locale is not supported.  But ":lang messages
es_ES.utf-8" gives an error and doesn't switch messages. (Dominique Pelle,
2009 Jan 26)

When $HOME contains special characters, such as a comma, escape them when used
in an option. (Michael Hordijk, 2009 May 5)
Turn "esc" argument of expand_env_esc() into string of chars to be escaped.

Should make 'ignorecase' global-local, so that it makes sense setting it from
a modeline.

Add cscope target to Makefile. (Tony Mechelynck, 2009 Jun 18, replies by
Sergey Khorev)

Consider making YankRing or something else that keeps a list of yanked text
part of standard Vim.  The "1 to "9 registers are not sufficient.

After doing "su" $HOME can be the old user's home, thus ~root/file is not
correct.  Don't use it in the swap file.

Completion for ":buf" doesn't work properly on Win32 when 'shellslash' is off.
(Henrik Ohman, 2009, Jan 29)

shellescape() depends on 'shellslash' for quoting.  That doesn't work when
'shellslash' is set but using cmd.exe. (Ben Fritz)
Use a different option or let it depend on whether 'shell' looks like a
unix-like shell?

Bug: in Ex mode (after "Q") backslash before line break, when yanked into a
register and executed, results in <Nul>: instead of line break.
(Konrad Schwarz, 2010 Apr 16)

Have a look at patch for utf-8 line breaking. (Yongwei Wu, 2008 Mar 1, Mar 23)
Now at: http://vimgadgets.sourceforge.net/liblinebreak/

Greek sigma character should be lower cased depending on the context.  Can we
make this work?  (Dominique Pelle, 2009 Sep 24)

When changing 'encoding' convert all the swap file names, so that we can
still delete them.  Also convert all buffer file names?

"gqip" in Insert mode has an off-by-one error, causing it to reflow text.
(Raul Coronado, 2009 Nov 2)

Update src/testdir/main.aap.

Something wrong with session that has "cd" commands and "badd", in such a way
that Vim doesn't find the edited file in the buffer list, causing the
ATTENTION message?  (Tony Mechelynck, 2008 Dec 1)
Also: swap files are in ~/tmp/  One has relative file name ".mozilla/...".

Add v:motion_force. (Kana Natsuno, 2008 Dec 6)
Maybe call it v:motiontype.

MS-Windows: editing the first, empty buffer, 'ffs' set to "unix,dos", ":enew"
doesn't set 'ff' to "unix".  (Ben Fritz, 2008 Dec 5) Reusing the old buffer
probably causes this.

'scrollbind' is not respected when deleting lines or undo. (Milan Vancura,
2009 Jan 16)

Document that default font in Athena can be set with resources:
   XtDefaultFont: "9x15"
   XtDefaultFontSet: "9x15"
(Richard Sherman, 2009 Apr 12)

Having "Syntax" in 'eventignore' for :bufdo may cause problems, e.g. for
":bufdo e" when buffers are open in windows.  ex_listdo(eap) could set the
option only for when jumping to another buffer, not when the command argument
is executed.

":pedit %" with a BufReadPre autocommand causes the cursor to move to the
first line. (Ingo Karkat, 2008 Jul 1)  Ian Kelling is working on this.
Similar problem with ":e". (Marc Montu, 2014 Apr 22)

Wildmenu not deleted: "gvim -u NONE", ":set nocp wildmenu cmdheight=3
laststatus=2", CTRL-D CTRL-H CTRL-H CTRL-H. (A.Politz, 2008 April 1)
Works OK with Vim in an xterm.

Cursor line moves in other window when using CTRL-W J that doesn't change
anything.  (Dasn, 2009 Apr 7)

On Unix "glob('does not exist~')" returns the string.  Without the "~" it
doesn't. (John Little, 2008 Nov 9)
Shell expansion returns unexpanded string?
Don't use shell when "~" is not at the start?

When using ":e ++enc=foo file" and the file is already loaded with
'fileencoding' set to "bar", then do_ecmd() uses that buffer, even though the
fileencoding differs.  Reload the buffer in this situation?  Need to check for
the buffer to be unmodified.
Unfinished patch by Ian Kelling, 2008 Jul 11.  Followup Jul 14, need to have
another look at it.

c.vim: XXX in a comment is colored yellow, but not when it's after "#if 0".
(Ilya Dogolazky, 2009 Aug 7)

You can type ":w ++bad=x fname", but the ++bad argument is ignored.  Give an
error message?  Or is this easy to implement?  (Nathan Stratton Treadway, 2008
Aug 20)  This is in ucs2bytes(), search for 0xBF.  Using the ++bad argument is
at the other match for 0xBF.

When adding "-complete=file" to a user command this also changes how the
argument is processed for <f-args>. (Ivan Tishchenko, 2008 Aug 19)

Win32: associating a type with Vim doesn't take care of space after a
backslash? (Robert Vibrant, 2008 Jun 5)

When 'rightleft' is set, cursorcolumn isn't highlighted after the end of a
line.  It's also wrong in folds. (Dominique Pelle, 2010 Aug 21)

Using an insert mode expression mapping, cursor is not in the expected
position. (ZyX, 2010 Aug 29)

After using <Tab> for command line completion after ":ta blah" and getting E33
(no tags file), further editing the command to e.g., ":echo 'blah'", the
command is not executed.  Fix by Ian Kelling?

":help s/~" jumps to *s/\~*, while ":help s/\~" doesn't find anything. (Tim
Chase)  Fix by Ian Kelling, 2008 Jul 14.

When mapping : to ; and ; to :, @; doesn't work like @: and @: doesn't work
either.  Matt Wozniski:  nv_at() calls do_execreg() which uses
put_in_typebuf().  Char mapped twice?

Despite adding save_subexpr() this still doesn't work properly:
Regexp: matchlist('12a4aaa', '^\(.\{-}\)\(\%5c\@<=a\+\)\(.\+\)\?')
Returns ['12a4', 'aaa', '4aaa'], should be ['12a4', 'aaa', '']
Backreference not cleared when retrying after \@<= fails?
(Brett Stahlman, 2008 March 8)

Problem with remote_send(). (Charles Campbell, 2008 Aug 12)

ftplugin for help file should set 'isk' to help file value.

Win32: remote editing fails when the current directory name contains "[".
(Ivan Tishchenko, Liu Yubao)  Suggested patch by Chris Lubinski: Avoid
escaping characters where the backslash is not removed later.  Asked Chris for
an alternate solution, also for src/ex_getln.c.
This also fails when the file or directory name contains "%". (Thoml, 2008
July 7)
Using --remote-silent while the current directory has a # in the name does not
work, the # needs to be escaped. (Tramblay Bruno, 2012 Sep 15)

When using remote-silent the -R flag is not passed on. (Axel Bender, 2012 May
31)

Win32: A --remote command that has a directory name starting with a ( doesn't
work, the backslash is removed, assuming that it escapes the (. (Valery
Kondakoff, 2009 May 13)

Win32: Using "gvim --remote-tab-silent elŝuti.txt" doesn't work, the
multi-byte character isn't passed and edits elsuti.txt.
(Raúl Núñez de Arenas Coronado, 2015 Dec 18)

Problem with 'langmap' being used on the rhs of a mapping. (Nikolai Weibull,
2008 May 14)
Possibly related problem: Alexey Muranov, 2015 Apr 2

Problem with CTRL-F. (Charles Campbell, 2008 March 21)
Only happens with "gvim -geometry "160x26+4+27" -u NONE -U NONE prop.c".
'lines' is 54. (2008 March 27)

Problem with pointer wrapping around in getvcol(). (Wolfgang Kroworsch, 2008
Oct 19)  Check for "col" being "MAXCOL" separately?

Unexpectedly inserting a double quote. (Anton Woellert, 2008 Mar 23)
Works OK when 'cmdheight' is 2.

8   Use a mechanism similar to omni completion to figure out the kind of tab
    for CTRL-] and jump to the appropriate matching tag (if there are
    several).
    Alternative: be able to define a function that takes the tag name and uses
    taglist() to find the right location.  With indication of using CTRL-] so
    that the context can be taken into account. (Robert Webb)
Patch by Christian Brabandt, 2013 May 31.

The utf class table is missing some entries:
	0x2212, minus sign 
	0x2217, star
	0x2500, bar
	0x26ab, circle

Visual line mode doesn't highlight properly when 'showbreak' is used and the
line doesn't fit. (Dasn, 2008 May 1)

GUI: In Normal mode can't yank the modeless selection.  Make "gy" do this?
Works like CTRL-Y in Command line mode.

Mac: Move Carbon todo items to os_mac.txt.  Note that this version is frozen,
try the Cocoa version.

Mac: After a ":vsplit" the left scrollbar doesn't appear until 'columns' is
changed or the window is resized.

GTK: when setting 'columns' in a startup script and doing ":vertical diffsplit"
the window isn't redrawn properly, see two vertical bars.

Mac: Patch for configure: remove arch from ruby link args. (Knezevic, 2008
Mar 5)  Alternative: Kazuki Sakamoto, Mar 7.

Mac: trouble compiling with Motif, requires --disable-darwin. (Raf, 2008 Aug
1)  Reply by Ben Schmidt.

C't: On utf-8 system, editing file with umlaut through Gnome results in URL
with %nn%nn, which is taken as two characters instead of one.
Try to reproduce at work.

Patch for default choice in file changed dialog. (Bjorn Winckler, 2008 Oct 19)
Is there a way to list all the files first?

When 'smartcase' is set and using CTRL-L to add to the search pattern it may
result in no matches.  Convert chars to lower case? (Erik Wognsen, 2009 Apr
16)

Fail to edit file after failed register access.  Error flag remains set?
(Lech Lorens, 2010 Aug 30)

Patch for redo register. (Ben Schmidt, 2007 Oct 19)
Await response to question to make the register writable.

Problem with 'ts' set to 9 and 'showbreak' to ">>>". (Matthew Winn, 2007 Oct
1)

In the swapfile dialog, add a H(elp) option that gives more info about what
each choice does.  Similar to  ":help swap-exists-choices"

try/catch not working for argument of return. (Matt Wozniski, 2008 Sep 15)

try/catch not working when inside a for loop. (ZyX, 2011 Jan 25)

":tab help" always opens a new tab, while ":help" re-uses an existing window.
Would be more consistent when an existing tab is re-used. (Tony Mechelynck)

Add ":nofold".  Range will apply without expanding to closed fold.

Using Aap to build Vim: add remarks about how to set personal preferences.
Example on http://www.calmar.ws/tmp/aap.html

Syntax highlighting wrong for transparent region. (Doug Kearns, 2007 Feb 26)
Bug in using a transparent syntax region. (Hanlen in vim-dev maillist, 2007
Jul 31)

C syntax: {} inside () causes following {} to be highlighted as error.
(Michalis Giannakidis, 2006 Jun 1)

When 'diffopt' has "context:0" a single deleted line causes two folds to merge
and mess up syncing. (Austin Jennings, 2008 Jan 31)

Gnome improvements: Edward Catmur, 2007 Jan 7
    Also use Save/Discard for other GUIs

New PHP syntax file, use it? (Peter Hodge)

":echoe" in catch block stops processing, while this doesn't happen outside of
a catch block. (ZyX, 2011 Jun 2)

'foldcolumn' in modeline applied to wrong window when using a session. (Teemu
Likonen, March 19)

Test 54 uses shell commands, that doesn't work on non-Unix systems.  Use some
other way to test buffer-local autocommands.

The documentation mentions the priority for ":2match" and ":3match", but it
appears the last one wins. (John Beckett, 2008 Jul 22)  Caused by adding
matchadd()?  Suggested patch by John, 2008 Jul 24.

When 'encoding' is utf-8 the command line is redrawn as a whole on every
character typed. (Tyler Spivey, 2008 Sep 3)  Only redraw cmdline for
'arabicshape' when there is a character on the command line for which
(ARABIC_CHAR(u8c)) is TRUE.

Cheng Fang made javacomplete. (2007 Aug 11)
Asked about latest version: 0.77.1 is on www.vim.org.

More AmigaOS4 patches. (Peter Bengtsson, Nov 9)

Amiga patches with vbcc. (Adrien Destugues, 2010 Aug 30)
http://pulkomandy.ath.cx/drop/vim73_vbcc_amiga.diff

Insert mode completion: When editing the text and pressing CTRL-N again goes
back to originally completed text, edited text is gone. (Peng Yu, 2008 Jul 24)
Suggestion by Ben Schmidt, 2008 Aug 6.

Problem with compound words?  (Bert, 2008 May 6)
No warning for when flags are defined after they are used in an affix.

Screen redrawing when continuously updating the buffer and resizing the
terminal. (Yakov Lerner, 2006 Sept 7)

Add option settings to help ftplugin. (David Eggum, 2006 Dec 18)

Autoconf problem: when checking for iconv library we may add -L/usr/local/lib,
but when compiling further tests -liconv is added without the -L argument,
that may fail (e.g., sizeof(int)). (Blaine, 2007 Aug 21)

When opening quickfix window, disable spell checking?

Problem with ".add" files when using two languages and restarting Vim. (Raul
Coronado, 2008 Oct 30)

Popup menu redraw: Instead of first redrawing the text and then drawing the
popup menu over it, first draw the new popup menu, remember its position and
size and then redraw the text, skipping the characters under the popup menu.
This should avoid flicker.  Other solution by A.Politz, 2007 Aug 22.

When a register contains illegal bytes, writing viminfo in utf-8 and reading
it back doesn't result in utf-8. (Devin Bayer)

Command line completion: Scanning for tags doesn't check for typed key now and
then?  Hangs for about 5 seconds.  Appears to be caused by finding include
files with "foo/**" in 'path'.  (Kalisiak, 2006 July 15)
Additional info: When using the |wildcards| ** globing, vim hangs
indefinitely on lots of directories. The |file-searching| globing, like in
":set path=/**" does not hang as often as with globing with |wildcards|, like
in ":1find /**/file".  This is for files that unix "find" can find very
quickly. Merging the 2 kinds of globing might make this an easier fix. (Ian
Kelling, 2008 July 4)

When the file name has parenthesis, e.g., "foo (bar).txt", ":!ls '%'" has the
parenthesis escaped but not the space.  That's inconsistent.  Either escape
neither or both.  No escaping might be best, because it doesn't depend on
particularities of the shell. (Zvi Har'El, 2007 Nov 10) (Teemu Likonen, 2008
Jun 3)
However, for backwards compatibility escaping might be necessary.  Check if
the user put quotes around the expanded item?

A throw in a function causes missing an endif below the call. (Spiros
Bousbouras, 2011 May 16)

Error E324 can be given when a cron script has wiped out our temp directory.
Give a clear error message about this (and tell them not to wipe out /tmp).

Color for cUserLabel should differ from case label, so that a mistake in a
switch list is noticed:
    switch (i)
    {
    case 1:
    foobar:
    }

Look at http://www.gtk-server.org/ .  It has a Vim script implementation.

Netbeans problem.  Use "nc -l 127.0.0.1 55555" for the server, then run gvim
with "gvim -nb:localhost:55555:foo".  From nc do: '1:editFile!0 "foo"'.  Then
go to Insert mode and add a few lines.  Then backspacing every other time
moves the cursor instead of deleting. (Chris Kaiser, 2007 Sep 25)

Windows installer should install 32-bit version of right-click handler also on
64-bit systems. (Brian Cunningham, 2011 Dec 28)

Windows installer could add a "open in new tab of existing Vim" menu entry.
Gvimext: patch to add "Edit with single Vim &tabbed" menu entry.
Just have two choices, always using one Vim and selecting between using an
argument list or opening each file in a separate tab.
(Erik Falor, 2008 May 21, 2008 Jun 26)

Windows installer: licence text should not use indent, causes bad word wrap.
(Benjamin Fritz, 2010 Aug 16)

Dos uninstal may delete vim.bat from the wrong directory (e.g., when someone
makes his own wrapper).  Add a magic string with the version number to the
.bat file and check for it in the uninstaller.  E.g.
          # uninstall key: vim7.3*

Changes for Win32 makefile. (Mike Williams, 2007 Jan 22, Alexei Alexandrov,
2007 Feb 8)

Win32: Can't complete shell command names.  Why is setting xp_context in
set_one_cmd_context() inside #ifndef BACKSLASH_IN_FILENAME?

Win32: Patch for cscope external command. (Mike Williams, 2007 Aug 7)

Win32: XPM support only works with path without spaces.  Patch by Mathias
Michaelis, 2006 Jun 9.  Another patch for more path names, 2006 May 31.
New version: http://members.tcnet.ch/michaelis/vim/patches.zip (also for other
patches by Mathias, see mail Feb 22)

Win32: compiling with normal features and OLE fails.  Patch by Mathias
Michaelis, 2006 Jun 4.

Win32: after "[I" showing matches, scroll wheel messes up screen. (Tsakiridis,
2007 Feb 18)
Patch by Alex Dobrynin, 2007 Jun 3.  Also fixes other scroll wheel problems.

Win32: using CTRL-S in Insert mode doesn't remove the "+" from the tab pages
label.  (Tsakiridis, 2007 Feb 18)  Patch from Ian Kelling, 2008 Aug 6.

Win32: using "gvim --remote-tab-silent fname" sometimes gives an empty screen
with the more prompt.  Caused by setting the guitablabel?  (Thomas Michael
Engelke, 2007 Dec 20 - 2008 Jan 17)

Win32: patch for fullscreen mode. (Liushaolin, 2008 April 17)

Win32: When 'shell' is bash shellescape() doesn't always do the right thing.
Depends on 'shellslash', 'shellquote' and 'shellxquote', but shellescape()
only takes 'shellslash' into account.

Menu item that does "xxd -r" doesn't work when 'fileencoding' is utf-16.
Check for this and use iconv?  (Edward L. Fox, 2007 Sep 12)
Does the conversion in the other direction work when 'fileencodings' is set
properly?

Cursor displayed in the wrong position when using 'numberwidth'. (James Vega,
2007 Jun 21)

When $VAR contains a backslash expand('$VAR') removes it. (Teemu Likonen, 2008
Jun 18)

If the variable "g:x#y#z" exists completion after ":echo g:x#" doesn't work.

Feature request: Command to go to previous tab, like what CTRL-W p does for
windows. (Adam George)

F1 - F4 in an xterm produce a different escape sequence when used with a
modifier key.  Need to catch three different sequences.  Use K_ZF1, like
K_ZHOME? (Dickey, 2007 Dec 2)

In debug mode, using CTRL-R = to evaluate a function causes stepping through
the function. (Hari Krishna Dara, 2006 Jun 28)

C++ indenting wrong with "=". (James Kanze, 2007 Jan 26)

":lockvar" should use copyID to avoid endless loop.

When using --remote-silent and the file name matches 'wildignore' get an E479
error.  without --remote-silent it works fine. (Ben Fritz, 2008 Jun 20)

Gvim: dialog for closing Vim should check if Vim is busy writing a file.  Then
use a different dialog: "busy saving, really quit? yes / no".

Check other interfaces for changing curbuf in a wrong way.  Patch like for
if_ruby.c.

":helpgrep" should use the directory from 'helpfile'.

The need_fileinfo flag is messy.  Instead make the message right away and put
it in keep_msg?

Editing a file remotely that matches 'wildignore' results in a "no match"
error.  Should only happen when there are wildcards, not when giving the file
name literally, and esp. if there is only one name.

Test 61 fails sometimes.  This is a timing problem: "sleep 2" sometimes takes
longer than 2 seconds.

Using ":au CursorMoved * cmd" invokes mch_FullName(), which can be slow.
Can this be avoided? (Thomas Waba, 2008 Aug 24)
Also for ":w" without a file name.
The buffer has the full path in ffname, should pass this to the autocommand.

"vim -C" often has 'nocompatible', because it's set in some startup script.
Set 'compatible' after startup is done?  Patch by James Vega, 2008 Feb 7.

VMS: while editing a file found in complex, Vim will save file into the first
directory of the path and not to the original location of the file.
(Zoltan Arpadffy)

VMS: VFC files are in some cases truncated during reading (Zoltan Arpadffy)

input() completion should not insert a backslash to escape a space in a file
name?

Ruby completion is insecure.  Can this be fixed?

When 'backupskip' is set from $TEMP special characters need to be escaped.
(patch by Grembowietz, 2007 Feb 26, not quite right)
Another problem is that file_pat_to_reg_pat() doesn't recognize "\\", so "\\(" 
will be seen as a path separator plus "\(".

gvim d:\path\path\(FILE).xml should not remove the \ before the (.
This also fails with --remote.

When doing ":quit" the Netbeans "killed" event isn't sent.  (Xavier de Gaye,
2008 Nov 10)  call netbeans_file_closed() at the end of buf_freeall(), or in
all places where buf_freeall() is called?

aucmd_prepbuf() should also use a window in another tab page.

When unloading a buffer in a BufHidden autocommand the hidden flag is reset?
(Bob Hiestand, 2008 Aug 26, Aug 27)

Substituting an area with a line break with almost the same area does change
the Visual area.  Can this be fixed? (James Vega, 2006 Sept 15)

GUI: When combining fg en bg make sure they are not equal.

Spell checking: Add a way to specify punctuation characters.  Add the
superscript numbers by default: 0x2070, 0xb9, 0xb2, 0xb3, 0x2074 - 0x2079.

Spell checking in popup menu: If the only problem is the case of the first
character, don't offer "ignore" and "add to word list".

Use different pt_br dictionary for spell checking. (Jackson A. Aquino, 2006
Jun 5)

Use different romanian dictionary for spell checking. (Andrei Popescu, Nov
2008)  Use http://downloads.sourceforge.net/rospell/ro_RO.3.2.zip
Or the hunspell-ro.3.2.tar.gz file, it also has a iso-8859-2 list.

In a C file with spell checking, in "% integer" "nteger" is seen as an error,
but "]s" doesn't find it.  "nteger" by itself is found. (Ralf Wildenhues, 2008
Jul 22)

There should be something about spell checking in the user manual.

Spell menu: When using the Popup menu to select a replacement word,
":spellrepeat" doesn't work.  SpellReplace() uses setline().  Can it use "z="
somehow?  Or use a new function.

Mac: Using gvim: netrw window disappears. (Nick Lo, 2006 Jun 21)

Add an option to specify the character to use when a double-width character is
moved to the next line.  Default '>', set to a space to blank it out.  Check
that char is single width when it's set (compare with 'listchars').

The generated vim.bat can avoid the loop for NT. (Carl Zmola, 2006 Sep 3)

When showing a diff between a non-existent file and an existing one, with the
cursor in the empty buffer, the other buffer only shows the last line.  Change
the "insert" into a change from one line to many? (Yakov Lerner, 2008 May 27)

These two abbreviations don't give the same result:
	let asdfasdf = "xyz\<Left>"
	cabbr XXX <C-R>=asdfasdf<CR>
	cabbr YYY xyz<Left>

Michael Dietrich: maximized gvim sometimes displays output of external command
partly. (2006 Dec 7)

In FileChangedShell command it's no longer allowed to switch to another
buffer.  But the changed buffer may differ from the current buffer, how to
reload it then?

For Aap: include a config.arg.example file with hints how to use config.arg.

Command line completion when 'cmdheight' is maximum and 'wildmenu' is set,
only one buffer line displayed, causes display errors.

Completing with 'wildmenu' and using <Up> and <Down> to move through directory
tree stops unexpectedly when using ":cd " and entering a directory that
doesn't contain other directories.

Default for 'background' is wrong when using xterm with 256 colors.
Table with estimates from Matteo Cavalleri, 2014 Jan 10.

Setting 'background' resets the Normal background color:
   highlight Normal ctermbg=DarkGray
   set background=dark
This is undesired, 'background' is supposed to tell Vim what the background
color is, not reset it.

Linux distributions:
- Suggest compiling xterm with --enable-tcap-query, so that nr of colors is
  known to Vim.  88 colors instead of 16 works better.  See ":help
  xfree-xterm".
- Suggest including bare "vi" and "vim" with X11, syntax, etc.

Completion menu: For a wrapping line, completing a long file name, only the
start of the path is shown in the menu.  Should move the menu to the right to
show more text of the completions.  Shorten the items that don't fit in the
middle?

Accessing file#var in a function should not need the g: prepended.

When exiting detects a modified buffer, instead of opening the buffer in the
current tab, use an existing tab, if possible.  Like finding a window where
the buffer is displayed. (Antonios Tsakiridis)

When ":cn" moves to an error in the same line the message isn't shortened.
Only skip shortening for ":cc"?

Write "making vim work better" for the docs (mostly pointers): *nice*
    - sourcing $VIMRUNTIME/vimrc_example.vim
    - setting 'mouse' to "a"
    - getting colors in xterm
    - compiling Vim with X11, GUI, etc.

Problem with ":call" and dictionary function. Hari Krishna Dara, Charles
Campbell 2006 Jul 06.

Syntax HL error caused by "containedin". (Peter Hodge, 2006 Oct 6)

A custom completion function in a ":command" cannot be a Funcref. (Andy
Wokula, 2007 Aug 25)

Problem with using :redir in user command completion function? (Hari Krishna
Dara, 2006 June 21)

Another resizing problem when setting 'columns' and 'lines' to a very large
number. (Tony Mechelynck, 2007 Feb 6)

After starting Vim, using '0 to jump somewhere in a file, ":sp" doesn't center
the cursor line.  It works OK after some other commands.

Win32: Is it possible to have both postscript and Win32 printing?

Problem with 'cdpath' on MS-Windows when a directory is equal to $HOME. (2006
Jul 26, Gary Johnson)

Using UTF-8 character with ":command" does not work properly. (Matt Wozniski,
2008 Sep 29)

In the Netbeans interface add a "vimeval" function, so that the other side can
check the result of has("patch13").

Cursor line at bottom of window instead of halfway after saving view and
restoring.  Only with 'nowrap'. (Robert Webb, 2008 Aug 25)

Netrw has trouble executing autocommands only for a directory.  Add <isdir>
and <notisdir> to autocommand patterns?  Also <isfile>?

Add command modifier that skips wildcard expansion, so that you don't need to
put backslashes before special chars, only for white space.

Syntax HL: open two windows on the same C code, delete a ")" in one window,
resulting in highlighted "{" in that window, not in the other.

In mswin.vim: Instead of mapping <C-V> for Insert mode in a complicated way,
can it be done like ":imap <C-V> <MiddleMouse>" without negative side effects?

GTK: when the Tab pages bar appears or disappears while the window is
maximized the window is no longer maximized.  Patch that has some idea but
doesn't work from Geoffrey Antos, 2008 May 5.
Also: the window may no longer fit on the screen, thus the command line is not
visible.

When right after "vim file", "M" then CTRL-W v the windows are scrolled
differently and unexpectedly.  Caused by patch 7.2.398?

The magic clipboard format "VimClipboard2" appears in several places.  Should
be only one.

Win32, NTFS: When editing a specific infostream directly and 'backupcopy' is
"auto" should detect this situation and work like 'backupcopy' is "yes".  File
name is something like "c:\path\foo.txt:bar", includes a colon.  (Alex
Jakushev, 2008 Feb 1)

Small problem displaying diff filler line when opening windows with a script.
(David Luyer, 2007 Mar 1 ~/Mail/oldmail/mool/in.15872 )

Is it allowed that 'backupext' is empty?  Problems when backup is in same dir
as original file?  If it's OK don't compare with 'patchmode'. (Thierry Closen)

Patch for supporting count before CR in quickfix window. (AOYAMA Shotaro, 2007
Jan 1)

Patch for adding ":lscscope". (Navdeep Parhar, 2007 Apr 26; update 2008 Apr
23)

":mkview" isn't called with the right buffer argument.  Happens when using
tabs and the autocommand "autocmd BufWinLeave * mkview".  (James Vega, 2007
Jun 18)

When completing from another file that uses a different encoding completion
text has the wrong encoding.  E.g., when 'encoding' is utf-8 and file is
latin1.  Example from Gombault Damien, 2007 Mar 24.

Syntax HL: When using "nextgroup" and the group has an empty match, there is
no search at that position for another match. (Lukas Mai, 2008 April 11)

In gvim the backspace key produces a backspace character, but on Linux the
VERASE key is Delete.  Set VERASE to Backspace? (patch by Stephane Chazelas,
2007 Oct 16)

TermResponse autocommand isn't always triggered when using vimdiff. (Aron
Griffis, 2007 Sep 19)

Create a gvimtutor.1 file and change Makefiles to install it.

When 'encoding' is utf-8 typing text at the end of the line causes previously
typed characters to be redrawn.  Caused by patch 7.1.329. (Tyler Spivey, 2008
Sep 3, 11)

When Vim in an xterm owns the selection and the user does ":shell" Vim doesn't
respond to selection requests.  Invoking XtDisownSelection() before executing
the shell doesn't help.  Would require forking and doing a message loop, like
what happens for the GUI.

X11: Putting more than about 262040 characters of text on the clipboard and
pasting it in another Vim doesn't work.  (Dominique Pelle, 2008 Aug 21-23)
clip_x11_request_selection_cb() is called with zero value and length.
Also: Get an error message from free() in the process that owns the selection.
Seems to happen when the selection is requested the second time, but before
clip_x11_convert_selection_cb() is invoked, thus in X library code.

":vimgrep" does not recognize a recursive symlink.  Is it possible to detect
this, at least for Unix (using device/inode)?

When switching between windows the cursor is often put in the middle.
Remember the relative position and restore that, just like lnum and col are
restored. (Luc St-Louis)

Patch to support horizontal scroll wheel in GTK. Untested. (Bjorn Winckler,
2010 Jun 30)

Add an option for a minimal text length before inserting a line break for
'textwidth'.  Avoids very short lines when a very long word follows.
(Kartik Agaram)


Better plugin support (not plugin manager, see elsewhere for that):
- Avoid use of feedkeys, add eval functions where needed:
  - manipulating the Visual selection?
- Add createmark(): add a mark like mM, but return a unique ID.  Need some way
  to clean them up again...  Use a name + the script ID.
  Add createmark( , 'c') to track inserts/deletes before the column.
- Plugins need to make a lot of effort, lots of mappings, to know what
  happened before pressing the key that triggers a plugin action.  How about
  keeping the last N pressed keys, so that they do not need to be mapped?
- equivalent of netbeans_beval_cb().  With an autocommand?
- Add something to enable debugging when a remote message is received.


More patches:
-   Another patch for Javascript indenting. (Hari Kumar, 2010 Jul 11)
    Needs a few tests.
-   Add 'cscopeignorecase' option. (Liang Wenzhi, 2006 Sept 3)
-   Load intl.dll too, not only libintl.dll. (Mike Williams, 2006 May 9, docs
    patch May 10)
-   Extra argument to strtrans() to translate special keys to their name (Eric
    Arnold, 2006 May 22)
-   'threglookexp' option: only match with first word in thesaurus file.
    (Jakson A. Aquino, 2006 Jun 14)
-   Mac: indicate whether a buffer was modified. (Nicolas Weber, 2006 Jun 30)
-   Allow negative 'nrwidth' for left aligning. (Nathan Laredo, 2006 Aug 16)
-   ml_append_string(): efficiently append to an existing line. (Brad
    Beveridge, 2006 Aug 26)  Use in some situations, e.g., when pasting a
    character at a time?
-   recognize hex numbers better. (Mark Manning, 2006 Sep 13)
-   Add <AbbrExpand> key, to expand an abbreviation in a mapping. (Kana
    Natsuno, 2008 Jul 17)
-   Add 'wspara' option, also accept blank lines like empty lines for "{" and
    "}". (Mark Lundquist, 2008 Jul 18)
-   Patch to add CTRL-T to delete part of a path on cmdline. (Adek, 2008 Jul
    21)
-   Instead of creating a copy of the tutor in all the shell scripts, do it in
    vimtutor.vim. (Jan Minar, 2008 Jul 20)
-   When fsync() fails there is no hint about what went wrong.  Patch by Ben
    Schmidt, 2008 Jul 22.
-   testdir/Make_dos_sh.mak for running tests with MingW. (Bill Mccarthy, 2008
    Sep 13)
-   Replace ccomplete.vim by cppcomplete.vim from www.vim.org?  script 1520 by
    Vissale Neang.  (Martin Stubenschrott) Asked Vissale to make the scripts
    more friendly for the Vim distribution.
    New version received 2008 Jan 6.
    No maintenance in two years...
-   Patch to open dropped files in new tabs. (Michael Trim, 2010 Aug 3)

Awaiting updated patches:
9   Mac unicode patch (Da Woon Jung, Eckehard Berns):
    8   Add patch from Muraoka Taro (Mar 16) to support input method on Mac?
	New patch 2004 Jun 16
    - selecting proportional font breaks display
    - UTF-8 text causes display problems.  Font replacement causes this.
    - Command-key mappings do not work. (Alan Schmitt)
    - With 'nopaste' pasting is wrong, with 'paste' Command-V doesn't work.
      (Alan Schmitt)
    - remove 'macatsui' option when this has been fixed.
    - when 'macatsui' is off should we always convert to "macroman" and ignore
      'termencoding'?
9   HTML indenting can be slow.  Caused by using searchpair().  Can search()
    be used instead?  A.Politz is looking into a solution.
8   Win32: Add minidump generation. (George Reilly, 2006 Apr 24)
7   Completion of network shares, patch by Yasuhiro Matsumoto.
    Update 2004 Sep 6.
    How does this work?  Missing comments.
8   Add a few more command names to the menus.  Patch from Jiri Brezina
    (28 feb 2002).  Will mess the translations...
7   ATTENTION dialog choices are more logical when "Delete it" appears
    before "Quit".  Patch by Robert Webb, 2004 May 3.
-   Include flipcase patch: ~/vim/patches/wall.flipcase2 ?  Make it work
    for multi-byte characters.
-   Win32: add options to print dialog.  Patch from Vipin Aravind.
-   Patch to add highlighting for whitespace. (Tom Schumm, 2003 Jul 5)
    use the patch that keeps using HLF_8 if HLF_WS has not
    been given values.
    Add section in help files for these highlight groups?
8   "fg" and "bg" don't work in an xterm.  Get default colors from xterm
    with an ESC sequence.
    xterm can send colors for many things.  E.g. for the cursor:
	<Esc>]12;?<Bel>
    Can use this to get the background color and restore the colors on exit.
7   Add "DefaultFG" and "DefaultBG" for the colors of the menu. (Marcin
    Dalecki has a patch for Motif and Carbon)
-   Add possibility to highlight specific columns (for Fortran).  Or put a
    line in between columns (e.g., for 'textwidth').
    Patch to add 'hlcolumn' from Vit Stradal, 2004 May 20.
8   Add functions:
    gettext()		Translate a message.  (Patch from Yasuhiro Matsumoto)
			Update 2004 Sep 10
			Another patch from Edward L. Fox (2005 Nov 24)
			Search in 'runtimepath'?
			More docs needed about how to use this.
			How to get the messages into the .po files?
    confirm()		add "flags" argument, with 'v' for vertical
			    layout and 'c' for console dialog. (Haegg)
			    Flemming Madsen has a patch for the 'c' flag
			    (2003 May 13)
    raisewin()		raise gvim window (see HierAssist patch for
			    Tcl implementation ~/vim/HierAssist/ )
    taglist()		add argument to specify maximum number of matches.
			useful for interactive things or completion.
    col('^')            column of first non-white character.
			Can use "len(substitute(getline('.'), '\S.*', '', ''))
			+ 1", but that's ugly.
7   Add patch from Benoit Cerrina to integrate Vim and Perl functions
    better.  Now also works for Ruby (2001 Nov 10)
-   Patch from Herculano de Lima Einloft Neto for better formatting of the
    quickfix window (2004 dec 2)
7   When 'rightleft' is set, the search pattern should be displayed right
    to left as well?  See patch of Dec 26. (Nadim Shaikli)
8   Option to lock all used memory so that it doesn't get swapped to disk
    (uncrypted).  Patch by Jason Holt, 2003 May 23.  Uses mlock.
7   Add ! register, for shell commands. (patch from Grenie)
8   In the gzip plugin, also recognize *.gz.orig, *.gz.bak, etc.  Like it's
    done for filetype detection.  Patch from Walter Briscoe, 2003 Jul 1.
7   Add a "-@ filelist" argument: read file names from a file. (David
    Kotchan has a patch for it)
7   Add ":justify" command.  Patch from Vit Stradal 2002 Nov 25.
-   findmatch() should be adjusted for Lisp.  See remark at
    get_lisp_indent().  Esp. \( and \) should be skipped. (Dorai Sitaram,
    incomplete patch Mar 18)
-   For GUI Find/Replace dialog support using a regexp.  Patch for Motif
    and GTK by degreneir (nov 10 and nov 18).
-   Patch for "paranoid mode" by Kevin Collins, March 7.  Needs much more work.


Vi incompatibility:
-   Try new POSIX tests, made after my comments. (Geoff Clare, 2005 April 7)
    Version 1.5 is in ~/src/posix/1.5. (Lynne Canal)
8   With undo/redo only marks in the changed lines should be changed.  Other
    marks should be kept.  Vi keeps each mark at the same text, even when it
    is deleted or restored. (Webb)
    Also: A mark is lost after: make change, undo, redo and undo.
    Example: "{d''" then "u" then "d''": deletes an extra line, because the ''
    position is one line down. (Veselinovic)
8   When stdin is not a tty, and Vim reads commands from it, an error should
    make Vim exit.
7   Unix Vim (not gvim): Typing CTRL-C in Ex mode should finish the line
    (currently you can continue typing, but it's truncated later anyway).
    Requires a way to make CTRL-C interrupt select() when in cooked input.
8   When loading a file in the .exrc, Vi loads the argument anyway.  Vim skips
    loading the argument if there is a file already.  When no file argument
    given, Vi starts with an empty buffer, Vim keeps the loaded file. (Bearded)
6   In Insert mode, when using <BS> or <Del>, don't wipe out the text, but
    only move back the cursor.	Behaves like '$' in 'cpoptions'.  Use a flag
    in 'cpoptions' to switch this on/off.
8   When editing a file which is a symbolic link, and then opening another
    symbolic link on the same file, Vim uses the name of the first one.
    Adjust the file name in the buffer to the last one used?  Use several file
    names in one buffer???
    Also: When first editing file "test", which is symlink to "test2", and
    then editing "test2", you end up editing buffer "test" again.  It's not
    logical that the name that was first used sticks with the buffer.
7   The ":undo" command works differently in Ex mode.  Edit a file, make some
    changes, "Q", "undo" and _all_ changes are undone, like the ":visual"
    command was one command.
    On the other hand, an ":undo" command in an Ex script only undoes the last
    change (e.g., use two :append commands, then :undo).
7   The ":map" command output overwrites the command.  Perhaps it should keep
    the ":map" when it's used without arguments?
7   CTRL-L is not the end of a section?  It is for Posix!  Make it an option.
7   Implement 'prompt' option.	Init to off when stdin is not a tty.
7   Add a way to send an email for a crashed edit session.  Create a file when
    making changes (containing name of the swap file), delete it when writing
    the file.  Supply a program that can check for crashed sessions (either
    all, for a system startup, or for one user, for in a .login file).
7   Vi doesn't do autoindenting when input is not from a tty (in Ex mode).
7   "z3<CR>" should still use the whole window, but only redisplay 3 lines.
7   ":tag xx" should move the cursor to the first non-blank.  Or should it go
    to the match with the tag?	Option?
7   Implement 'autoprint'/'ap' option.
7   Add flag in 'cpoptions' that makes <BS> after a count work like <Del>
    (Sayre).
7   Add flag in 'cpoptions' that makes operator (yank, filter) not move the
    cursor, at least when cancelled. (default Vi compatible).
7   This Vi-trick doesn't work: "Q" to go to Ex mode, then "g/pattern/visual".
    In Vi you can edit in visual mode, and when doing "Q" you jump to the next
    match.  Nvi can do it too.
7   Support '\' for line continuation in Ex mode for these commands: (Luebking)
	g/./a\		    g/pattern1/ s/pattern2/rep1\\
	line 1\		    line 2\\
	line 2\		    line 3\\
	.		    line4/
6   ":e /tmp/$tty" doesn't work.  ":e $uid" does.  Is $tty not set because of
    the way the shell is started?
6   Vi compatibility (optional): make "ia<CR><ESC>10." do the same strange
    thing.  (only repeat insert for the first line).


GTK+ GUI known bugs:
9   Crash with X command server over ssh. (Ciaran McCreesh, 2006 Feb 6)
8   GTK 2: Combining UTF-8 characters not displayed properly in menus (Mikolaj
    Machowski)  They are displayed as separate characters.  Problem in
    creating a label?
8   GTK 2: Combining UTF-8 characters are sometimes not drawn properly.
    Depends on the font size, "monospace 13" has the problem.  Vim seems to do
    everything right, must be a GTK bug.  Is there a way to work around it?
9   Can't paste a Visual selection from GTK-gvim to vim in xterm or Motif gvim
    when it is longer than 4000 characters.  Works OK from gvim to gvim and
    vim to vim.  Pasting through xterm (using the shift key) also works.
    It starts working after GTK gvim loses the selection and gains it again.
-   Gnome2: When moving the toolbar out of the dock, so that it becomes
    floating, it can no longer be moved.  Therefore making it float has been
    blocked for now.


Win32 GUI known bugs:
-   Win32: tearoff menu window should have a scrollbar when it's taller than
    the screen.
8   The -P argument doesn't work very well with many MDI applications.
    The last argument of CreateWindowEx() should be used, see MSDN docs.
    Tutorial: http://win32assembly.online.fr/tut32.html
8   In eval.c, io.h is included when MSWIN32 is defined.  Shouldn't this be
    WIN32?  Or can including io.h be moved to vim.h? (Dan Sharp)
6   Win32 GUI: With "-u NONE -U NONE" and doing "CTRL-W v" "CTRL-W o", the ":"
    of ":only" is highlighted like the cursor.  (Lipelis)
8   When 'encoding' is "utf-8", should use 'guifont' for both normal and wide
    characters to make Asian languages work.  Win32 fonts contain both
    type of characters.
7   When font smoothing is enabled, redrawing can become very slow.  The reason
    appears to be drawing with a transparent background.  Would it be possible
    to use an opaque background in most places?
7   The cursor color indicating IME mode doesn't work properly. (Shizhu Pan,
    2004 May 9)
8   Win32: When clicking on the gvim title bar, which gives it focus, produces
    a file-changed dialog, after clicking on a button in that dialog the gvim
    window follows the mouse.  The button-up event is lost.  Only with
    MS-Windows 98?
    Try this: ":set sw ts", get enter-prompt, then change the file in a
    console, go back to Vim and click "reload" in the dialog for the changed
    file: Window moves with the cursor!
    Put focus event in input buffer and let generic Vim code handle it?
8   Win32 GUI: With maximized window, ":set go-=r" doesn't use the space that
    comes available. (Poucet)  It works OK on Win 98 but doesn't work on Win
    NT 4.0.  Leaves a grey area where the scrollbar was.  ":set go+=r" also
    doesn't work properly.
8   When Vim is minimized and when maximizing it a file-changed dialog pops
    up, Vim isn't maximized.  It should be done before the dialog, so that it
    appears in the right position. (Webb)
9   When selecting at the more-prompt or hit-enter-prompt, the right mouse
    button doesn't give popup menu.
    At the hit-enter prompt CTRL-Y doesn't work to copy the modeless
    selection.
    On the command line, don't get a popup menu for the right mouse button.
    Let the middle button paste selected text (not the clipboard but the
    non-Visual selection)?  Otherwise CTRL-Y has to be used to copy the text.
8   When 'grepprg' doesn't execute, the error only flashes by, the
    user can hardly see what is wrong. (Moore)
    Could use vimrun with an "-nowait" argument to only wait when an error
    occurs, but "command.com" doesn't return an error code.
8   When the 'shell' cannot be executed, should give an appropriate error msg.
    Esp. for a filter command, currently it only complains the file could not
    be read.
7   Add an option to add one pixel column to the character width?  Lucida
    Console italic is wider than the normal font ("d" overlaps with next char).
    Opposite of 'linespace': 'columnspace'.
7   At the hit-enter prompt scrolling now no longer works.  Need to use the
    keyboard to get around this.  Pretend <CR> was hit when the user tries to
    scroll?
7   Scrollbar width doesn't change when selecting other windows appearance.
    Also background color of Toolbar and rectangle below vert. scrollbar.
6   Drawing text transparently doesn't seem to work (when drawing part cursor).
8   CTRL key doesn't always work in combination with ALT key.  It does work
    for function keys, not for alphabetic characters.  Perhaps this is because
    CTRL-ALT is used by Windows as AltGr?
8   CTRL-- doesn't work for AZERTY, because it's CTRL-[ for QWERTY.  How do we
    know which keyboard is being used?
7   When scrolling, and a background color is dithered, the dither pattern
    doesn't always join correctly between the scrolled area and the new drawn
    area (Koloseike).
8   When gui_init_font() is called with "*", p_guifont is freed while it might
    still be used somewhere.  This is too tricky, do the font selection first,
    then set the new font by name (requires putting all logfont parameters in
    the font name).


Athena and Motif:
6   New Motif toolbar button from Marcin Dalecki:
    - When the mouse pointer is over an Agide button the red becomes black.
      Something with the way colors are specified in the .xpm file.
    - The pixmap is two pixels smaller than it should be.  The gap is filled
      with grey instead of the current toolbar background color.
9   Can configure be changed to disable netbeans if the Xpm library is
    required and it's missing?
8   When using the resource "Vim*borderwidth 2" the widgets are positioned
    wrong.
9   XIM is disabled by default for SGI/IRIX.  Fix XIM so that 'imdisable' can
    be off by default.
9   XIM doesn't work properly for Athena/Motif. (Yasuhiro Matsumoto)  For now,
    keep XIM active at all times when the input method has the preediting
    flag.
8   X11: A menu that contains an umlaut is truncated at that character.
    Happens when the locale is "C", which uses ASCII instead of IS0-8859-1.
    Is there a way to use latin1 by default?  Gnome_init() seems to do this.
8   Perhaps use fontsets for everything?
6   When starting in English and switching the language to Japanese, setting
    the locale with ":lang", 'guifontset' and "hi menu font=", deleting all
    menus and setting them again, the menus don't use the new font.  Most of
    the tooltips work though...
7   Motif: when using a file selection dialog, the specified file name is not
    always used (when specifying a filter or another directory).
8   When 'encoding' is different from the current locale (e.g., utf-8) the
    menu strings don't work.  Requires conversion from 'encoding' to the
    current locale.  Workaround: set 'langmenu'.


Athena GUI:
9   The first event for any button in the menu or toolbar appears to get lost.
    The second click on a menu does work.
9   When dragging the scrollbar thumb very fast, focus is only obtained in
    the scrollbar itself.  And the thumb is no longer updated when moving
    through files.
7   The file selector is not resizable.  With a big font it is difficult to
    read long file names. (Schroeder)
4   Re-write the widget attachments and code so that we will not have to go
    through and calculate the absolute position of every widget every time the
    window is refreshed/changes size.  This will help the "flashing-widgets"
    problem during a refresh.
5   When starting gvim with all the default colors and then typing
    ":hi Menu guibg=cyan", the menus change color but the background of the
    pullright pixmap doesn't change colors.
    If you type ":hi Menu guibg=cyan font=anyfont", then the pixmap changes
    colors as it should.
    Allocating a new pixmap and setting the resource doesn't change the
    pullright pixmap's colors.  Why?  Possible Athena bug?


Motif GUI:
-   gui_mch_browsedir() is missing, browsedir() doesn't work nicely.
7   Use XmStringCreateLocalized() instead of XmStringCreateSimple()?
    David Harrison says it's OK (it exists in Motif 1.2).
8   Lesstif: When deleting a menu that's torn off, the torn off menu becomes
    very small instead of disappearing.  When closing it, Vim crashes.
    (Phillipps)


GUI:
9   On Solaris, creating the popup menu causes the right mouse button no
    longer to work for extending the selection. (Halevy)
9   When running an external program, it can't always be killed with CTRL-C.
    e.g., on Solaris 5.5, when using "K" (Keech).  Other 'guipty' problems on
    Solaris 2.6. (Marley)
9   On Solaris: Using a "-geometry" argument, bigger than the window where Vim
    is started from, causes empty lines below the cmdline. (raf)
8   X11 GUI: When menu is disabled by excluding 'm' from 'guioptions', ALT key
    should not be used to trigger a menu (like the Win32 version).
8   When setting 'langmenu', it should be effective immediately.  Store both
    the English and the translated text in the menu structure.  Re-generate
    the translation when 'langmenu' has changed.
8   Basic flaw in the GUI code: NextScreen is updated before calling
    gui_write(), but the GUI code relies on NextScreen to represent the state
    of where it is processing the output.
    Need better separation of Vim core and GUI code.
8   When fontset support is enabled, setting 'guifont' to a single font
    doesn't work.
8   Menu priority for sub-menus for: Amiga.
8   When translating menus ignore the part after the Tab, the shortcut.  So
    that the same menu item with a different shortcut (e.g., for the Mac) are
    still translated.
8   Add menu separators for Amiga.
8   Add way to specify the file filter for the browse dialog.  At least for
    browse().
8   Add dialog for search/replace to other GUIs?  Tk has something for this,
    use that code?  Or use console dialog.
8   When selecting a font with the font dialog and the font is invalid, the
    error message disappears too quick.
7   More features in the find/replace dialog:
    - regexp on/off
    - search in selection/buffer/all buffers/directory
       when all buffers/directory is used:
	- filter for file name
       when directory is used:
	- subdirectory on/off
	- top directory browser
8   gui_check_colors() is not called at the right moment.  Do it much later,
    to avoid problems.
8   gui_update_cursor() is called for a cursor shape change, even when there
    are mappings to be processed.  Only do something when going to wait for
    input.  Or maybe every 100 ms?
8   X11: When the window size is reduced to fit on screen, there are blank
    lines below the text and bottom scrollbar.  "gvim -geometry 80x78+0+0".
    When the "+0+0" is omitted it works.
8   When starting an external command, and 'guipty' set, BS and DEL are mixed
    up.  Set erase character somehow?
8   A dead circumflex followed by a space should give the '^' character
    (Rommel).  Look how xterm does this.
    Also: Bednar has some code for dead key handling.
    Also: Nedit 5.0.2 with USE_XMIM does it right. (Gaya)
8   The compose key doesn't work properly (Cepas).  Both for Win32 and X11.
7   The cursor in an inactive window should be hollow.  Currently it's not
    visible.
7   GUI on Solaris 2.5.1, using /usr/dt/..: When gvim starts, cursor is
    hollow, after window lowered/raised it's OK. (Godfrey)
7   When starting GUI with ":gui", and window is made smaller because it
    doesn't fit on the screen, there is an extra redraw.
8   When setting font with .Xdefaults, there is an extra empty line at the
    bottom, which disappears when using ":set guifont=<Tab>". (Chadzelek)
8   When font shape changes, but not the size, doing ":set font=" does not
    redraw the screen with the new font.  Also for Win32.
    When the size changes, on Solaris 2.5 there isn't a redraw for the
    remaining part of the window (Phillipps).
-   Flashes really badly in certain cases when running remotely from a Sun.
4   Re-write the code so that the highlighting isn't changed multiple times
    when doing a ":hi clear".  The color changes happen three or more times
    currently.  This is very obvious on a 66Mhz 486.


Win32 console:
8   Should $USERPROFILE be preferred above $HOMEDRIVE/$HOMEPATH?  No, but it's
    a good fallback, thus use:
	    $HOME
	    $HOMEDRIVE$HOMEPATH
	    SHGetSpecialFolderPath(NULL, lpzsPath, CSIDL_APPDATA, FALSE);
	    $USERPROFILE
	    SHGetSpecialFolderPath(NULL, lpzsPath, CSIDL_COMMON_APPDATA, FALSE);
	    $ALLUSERSPROFILE
	    $SYSTEMDRIVE\
	    C:\
8   Win32 console: <M-Up> and <M-Down> don't work. (Geddes)  We don't have
    special keys for these.  Should use modifier + key.
8   Win32 console: caps-lock makes non-alpha keys work like with shift.
    Should work like in the GUI version.
8   Environment variables in DOS are not case sensitive.  Make a define for
    STRCMP_ENV(), and use it when comparing environment var names.
8   Setting 'shellslash' has no immediate effect.  Change all file names when
    it is set/reset?  Or only use it when actually executing a shell command?
8   When editing a file on a Samba server, case might matter.  ":e file"
    followed by ":e FILE" will edit "file" again, even though "FILE" might be
    another one.  Set last used name in buflist_new()?  Fix do_ecmd(), etc.
8   When a buffer is editing a file like "ftp://mach/file", which is not going
    to be used like a normal file name, don't change the slashes to
    backslashes. (Ronald Hoellwarth)


Win32 console:
9   When editing a file by its short file name, it should be expanded into its
    long file name, to avoid problems like these: (Mccollister)
     1) Create a file called ".bashrc" using some other editor.
     2) Drag that file onto a shortcut or the actual executable.
     3) Note that the file name is something like BASHRC~1
     4) Go to File->Save As menu item and type ".bashrc" as the file name.
     5) Press "Yes" to indicate that I want to overwrite the file.
     6) Note that the message "File exists (add ! to override)" is displayed
	and the file is not saved.
    Use FindFirstFile() to expand a file name and directory in the path to its
    long name.
8   Also implement 'conskey' option for the Win32 console version?  Look at
    how Xvi does console I/O under Windows NT.
7   Re-install the use of $TERM and support the use of different terminals,
    besides the console.
8   Use of <altgr> modifier doesn't work?  5.3 was OK. (Garcia-Suarez/Guckes)
9   Mapping <C-S-Tab> doesn't work correctly.  How to see the difference with
    <C-S-i>?
9   tmpnam() uses file in root of file system: "\asdf".  That doesn't work on
    a Netware network drive.  Use same function as for Win32 GUI?
8   In os_win32.h, HAVE_STRICMP and HAVE_STRNICMP are defined only if __GNUC__
    is not defined.  Shouldn't that be the other way around?


Amiga:
8   In mch_inchar() should use convert_input_safe() to handle incomplete byte
    sequences.
9   In mch_expandpath() a "*" is to be expanded, but "\*" isn't.  Remove
    backslashes in result.
8   Executing a shell, only one option for 'shell' is separated.  Should do
    all options, using white space separation.


Macintosh:
-   GUI: gui_mch_browsedir() is missing.
7   Loading the Perl library only works on OS/X 10.2 or 10.3, never on both.
    Load the Perl library dynamically see Python sources file dynload_mac
    (Jack)
    dynamic linking: http://developer.apple.com/technotes/tn2002/tn2064.html
8   inputdialog() doesn't resize when giving more text lines. (David Fishburn,
    2006 Sept 28)
8   Define vim_mkdir() for Macintosh.
8   Define mch_writable() for Macintosh.
9   When DiskLock is running, using a swap file causes a crash.  Appears to be
    a problem with writing a file that starts with a dot. (Giacalone)
9   In mac_expandpath() check that handling of backslashes is done properly.


"Small" problems:
-   Can't disable terminal flow control, to enable the use of CTRL-S and
    CTRL-Q.  Add an option for it?
-   When using e_secure in do_one_cmd() mention the command being executed,
    otherwise it's not clear where it comes from.
-   When the quickfix window is open and executing ":echo 'hello'" using the
    Command-line window, the text is immediately removed by the redrawing.
    (Michael Henry, 2008 Nov 1)
    Generic solution: When redrawing while there is a message on the
    cmdline, don't erase the display but draw over the existing text.
    Other solution, redraw after closing the cmdline window, before executing
    the command.
9   For Turkish vim_tolower() and vim_toupper() also need to use utf_
    functions for characters below 0x80. (Sertacyildiz)
9   When the last edited file is a help file, using '0 in a new Vim doesn't
    edit the file as a help file.  'filetype' is OK, but 'iskeyword' isn't,
    file isn't readonly, etc.
8   When an ":edit" is inside a try command and the ATTENTION prompt is used,
    the :catch commands are always executed, also when the file is edited
    normally.  Should reset did_emsg and undo side effects.  Also make sure
    the ATTENTION message shows up.  Servatius Brandt works on this.
7   Vimtutor leaves escape sequence in terminal. This is the xterm response to
    requesting the version number.  (Yasuhiro Matsumoto)
8   When redirecting and using ":silent" the current column for displaying and
    redirection can be different.  Use a separate variable to hold the column
    for redirection.
7   The messages for "vim --help" and "vim --version" don't use
    'termencoding'.
-   Could the hit-enter prompt be avoided when a message only overlaps the
    'showcmd' area?  Clear that area when the next cmd is typed.
8   When 'scrollbind' is set, a window won't scroll horizontally if the cursor
    line is too short.  Add a word in 'scrollopt' to allow moving the cursor
    to longer line that is visible.  A similar thing is done for the GUI when
    using the horizontal scrollbar.
7   VisVim can only open one file.  Hard to solve: each opened file is passed
    with a separate invocation, would need to use timestamps to know the
    invocations belong together.
8   When giving a ":bwipeout" command a file-changed dialog may popup for this
    buffer, which is pointless.  (Mike Williams)
8   On MS-Windows ":make" doesn't show output while it is working.  Use the
    tee.exe from  http://unxutils.sourceforge.net/ ?  About 16 Kbyte in the
    UnxUtils.zip archive.
    Is it better than what we have in src/tee?
8   When doing Insert mode completion a mapping cannot recursively call
    edit(), because the completion information is global.  Put everything in
    an allocated structure?
8   Command line completion: buffers "foo.txt" and "../b/foo.txt", completing
    ":buf foo<Tab>" doesn't find the second one. (George V. Reilly)
7   mb_off2cells() doesn't work correctly on the tail byte of a double-byte
    character. (Yasuhiro Matsumoto)  It should return 1 when used on a tail
    byte, like for utf-8.  Store second byte of double-byte in ScreenLines2[]
    (like for DBCS_JPNU) and put a zero in the second byte (like for UTF-8).
7   Inside a function with "perl <<EOF" a line with "$i++" is recognized as an
    ":insert" command, causing the following "endfunction" not to be found.
    Add skipping this perl construction inside function definitions.
7   When 'ttimeoutlen' is 10 and 'timeoutlen' is 1000, there is a keycode
    "<Esc>a" and a mapping <Esc>x", when typing "<Esc>a" with half a second
    delay should not be interpreted as a keycode. (Hans Ginzel)
7   ":botright 1 new" twice causes all window heights to be changed.  Make the
    bottom window only bigger as much as needed.
7   The Cygwin and MingW makefiles define "PC", but it's not used anywhere.
    Remove? (Dan Sharp)
9   User commands use the context of the script they were defined in.  This
    causes a "s:var" argument to unexpectedly use a variable in the defining
    script, not the calling script.  Add an argument to ":command":
    "-keepcontext".  Do replace <SID>, so that a function in the defining
    script can be called.
8   The Japanese message translations for MS-Windows are called ja.sjis.po,
    but they use encoding cp932.  Rename the file and check that it still
    works.
8   A very long message in confirm() can't be quit.  Make this possible with
    CTRL-C.
8   "gf" always excludes trailing punctuation characters.  file_name_in_line()
    is currently fixed to use ".,:;!".  Add an option to make this
    configurable?
8   'hkmap' should probably be global-local.
8   Using ":s" in a function changes the previous replacement string.  Save
    "old_sub" in save_search_patterns()?
8   Should allow multi-byte characters for the delimiter: ":s+a+b+" where "+"
    is a multi-byte character.
8   When appending to a file and 'patchmode' isn't empty, a backup file is
    always written, even when the original file already exists.
9   When getting focus while writing a large file, could warn for this file
    being changed outside of Vim.  Avoid checking this while the file is being
    written.
7   The message in bt_dontwrite_msg() could be clearer.
8   The script ID that is stored with an option and displayed with ":verbose
    set" isn't reset when the option is set internally.  For example when
    'foldlevel' is set from 'foldlevelstart'.
8   Also store the line number with the script ID and use it for ":verbose",
    so that "set nocompatible" is found when it changes other option values.
    When an option is set indirectly mention the command?  E.g. when
    ":diffsplit" sets 'foldmethod'.
8   In the fileformat dialog, "Cancel" isn't translated.  Add a global
    variable for this. (Eduardo Fernandez)
9   When editing a file with 'readonly' set, there is no check for an existing
    swap file.  Then using ":write" (without making any changes) doesn't give
    a warning either.  Should check for an existing swap file without creating
    one. Unfinished patch by Ian Kelling, 2008 July 14.
7   When 'showbreak' is set, the amount of space a Tab occupies changes.
    Should work like 'showbreak' is inserted without changing the Tabs.
7   When 'mousefocus' is set and switching to another window with a typed
    command, the mouse pointer may be moved to a part of the window that's
    covered by another window and we lose focus.  Only move in the y
    direction, not horizontally?
8   ":hardcopy":
    - Using the cterm_color[] table is wrong when t_colors is > 16.
    - Need to handle unprintable characters.
    - Win32: On a B&W printer syntax highlighting isn't visible.  Perform
      dithering to make grey text?
    - Add a flag in 'printoptions' to add an empty page to make the total
      number even.  "addempty"? (Mike Williams)
    - Respect 'linebreak'.  Perhaps also 'showbreak'?
    - Should interpret CTRL-L as a page break.
    - Grey line numbers are not always readable.  Add field in 'printoptions'.
      Default to black when no syntax highlighting.
    - Be able to print a window in diff mode.
    - Be able to specify a colorscheme to use for printing.  And a separate
      one for B&W printing (if that can be detected).
8   When 'virtualedit' is "block,insert" and encoding is "utf-8", selecting a
    block of one double-wide character, then "d" deletes only half of it.
8   When 'virtualedit' is set, should "I" in blockwise visual mode also insert
    in lines that don't extend into the block?
8   With 'virtualedit' set, in Insert mode just after the end of line, CTRL-O
    yh does not yank the last character of the line. (Pavel Papushev)
    Doing "hl" first appears to make it work.
8   With 'virtualedit' set it's possible to move into the blank area from
    'linebreak'.
8   With 'virtualedit' set and 'selection' "exclusive", a Visual selection
    that ends in or after a tab, "d" doesn't delete (part of) the tab.
    (Helmut Stiegler)
9   When jumping to a tag, the search pattern is put in the history.  When
    'magic' is on, the pattern may not work.  Translate the pattern depending
    on p_magic when putting it in the history?  Alternative: Store value of
    'magic' in history.  (Margo)
9   optwin.vim: Restoring a mapping for <Space> or <CR> is not correct for
    ":noremap".  Add "mapcmd({string}, {mode})?  Use code from ":mkexrc".
9   incsearch is incorrect for "/that/<Return>/this/;//" (last search pattern
    isn't updated).
9   term_console is used before it is set (msdos, Amiga).
9   Get out-of-memory for ":g/^/,$s//@/" on 1000 lines, this is not handled
    correctly.  Get many error messages while redrawing the screen, which
    cause another redraw, etc.
8   [<C-I> doesn't work when '*' is in 'iskeyword'.  find_pattern_in_path()
    must escape special characters in the pattern.
8   Vim can overwrite a read-only file with ":w!".  ":w" can't overwrite an
    existing file, "w!" can, but perhaps not a read-only file?  Then use
    ":w!!" for that.
    Or ask for permission to overwrite it (if file can be made writable) and
    restore file to readonly afterwards.
    Overwriting a file for which a swap file exists is similar issue.
7   When compiled with "xterm_clipboard", startup can be slower and might get
    error message for invalid $DISPLAY.  Try connecting to the X server in the
    background (forked), so that Vim starts up quicker?  Connect as soon as
    the clipboard is to be used (Visual select mode starts, paste from
    clipboard)
7   X11: Some people prefer to use CLIPBOARD instead of PRIMARY for the normal
    selection.  Add an "xclipboard" argument to the 'clipboard' option? (Mark
    Waggoner)
8   For xterm need to open a connection to the X server to get the window
    title, which can be slow.  Can also get the title with "<Esc>[21t", no
    need to use X11 calls.  This returns "<Esc>]l{title}<Esc>\".
6   When the xterm reports the number of colors, a redraw occurs.  This is
    annoying on a slow connection.  Wait for the xterm to report the number of
    colors before drawing the screen.  With a timeout.
8   When the builtin xterm termcap contains codes that are not wanted, need a
    way to avoid using the builtin termcap.
8   Xterm sends ^[[H for <Home> and ^[[F for <End> in some mode.  Also
    recognize these keys?  Mostly useful for xterm simulators, like gnometerm.
    See http://dickey.his.com/xterm/xterm.faq.html#xterm_pc_style.
8   For xterm also recognize keypad up/down/left/right and insert.
8   '[ and '] should be set to start/end of line when using a linewise operator
    (e.g., ":w").
8   CTRL-A can't handle big "long" numbers, they become negative.  Check for
    "-" character, if not present, use unsigned long.
8   Add suspending with CTRL-Z at the "more" prompt, and when executing a long
    script in do_cmdline().
8   When using 'hidden', many swap files will be open.  When Vim runs into the
    maximum number of open files, error messages will appear.  Detect that
    this problem is present, and close any hidden files that don't have
    changes.
8   With 'viminfo' set such that the ".viminfo" file is written on a FAT
    filesystem, an illegal file name may be created: ".vim".
8   For each buffer that is opened, the viminfo file is opened and read to
    check for file marks.  This can be slow.
7   In xterm, recognize both vt100 and vt220 cursor keys.  Change
    add_termcode() to not remove an existing entry for a name, when it's
    needed.
    Need a generic solution to recognize different codes for the same key.
8   Core dump within signal function: gdb doesn't show stack backtrace!  Option
    to skip catch_signals()?
9   Repeating a "cw" with "." doesn't work if the text was pasted from the
    clipboard. (Thomas Jones)  It's because the menu/toolbar item exits Insert
    mode and uses "gP".  How to fix this without breaking inserting a block of
    text?
8   In Replace mode pasting from the clipboard (using menu or toolbar) inserts
    all the text.  Add ":rmenu"?
8   Pasting with the mouse in Replace mode inserts the text, instead of
    overwriting, when it is more than one line.  Same for using <C-R>.
9   CTRL-E and CTRL-Y don't work in small window when 'so' is 4 and lines are
    wrapping (Acevedo/in.226).  E.g., when using CTRL-E, window height 7,
    window might actually scroll down when last line of buffer is displayed.
    --> Remember if the previous command was "cursor follows screen" or
    "screen follow cursor" and use this in cursupdate().
7   tilde_replace() can only handle "~/", should also do "~user/".
    Get the list of home directories (from /etc/passwd?  Use getpwent()) and
    use some clever algorithm to match a path with that.  Find common strings
    in the list?
8   When dragging status line with mouse, sometimes a jump when first clicking
    on the status line (caused by 'winheight').  Select window on button up,
    instead of on button down.
8   Dragging the status line doesn't scroll but redraw.
9   Evaluating 'statusline' in build_stl_str_hl() does not properly check for
    reaching the end of the available buffer.
    Patch to dynamically allocate the buffer for % items. (Eric Arnold, 2006
    May 14)
8   When performing incremental search, should abort searching as soon as a
    character is typed.
8   When the value of $MAKE contains a path, configure can't handle this.
    It's an autoconf bug.  Remove the path from $MAKE to work around it.
8   How to set VIMRC_FILE to \"something\" for configure?  Why does this not
    work: CFLAGS='-DVIMRC_FILE=\"/mydir/myfile\"' ./configure
8   The temporary file is sometimes not writable.  Check for this, and use an
    alternate name when it isn't.  Or add the 'temptemplate' option: template
    for the temp file name ":set temptemplate=/usr/tmp/?????.tmp".
    Also: Win32 version uses Windows temp directory, which might not work for
    cygwin bash.
7   Get error "*, \+ or \( operand could be empty" for pattern "\(.\)\1\{3}".
    Remember flags for backreferences.
7   When switching to Daylight Saving Time, Vim complains that a file has been
    changed since last read.  Can we use a function that uses GMT?
7   When completing an environment variable after a '$', check for file names
    that contain a '$' after all have been found.
8   When "cm" termcap entry is missing, starting gvim shouldn't complain about
    it. (Lohner)  Try out with "vt100" entry, cm replaced with cX.
7   When an include file starts with "../", the check for already visiting
    this file doesn't work.  Need to simplify the file name.
7   The names and comments for the arguments of do_browse() are confusing.
    "dflt" isn't the default file name when "initdir" is not NULL and
    "initdir" is the default path to be used.
7   When 'scrolloff' is exactly half the window height, "j" causes a scroll of
    two lines at a time.  "k" doesn't do this. (Cory T. Echols)
8   When write_viminfo() is used while there are many orphaned viminfo
    tempfiles writing the viminfo file fails.  Give a clear error message so
    that the user knows he has to delete the files.
7   It's possible to redefine a script-local function with ":func
    <SNR>123_Test()". (Krishna)  Disallow this.


I can't reproduce these (if you can, let me know how!):
9   NT 4.0 on NTFS file system: Editing ".bashrc" (drag and drop), file
    disappears.  Editing ".xyz" is OK.  Also, drag&drop only works for three
    files. (McCollister)


Problems that will (probably) not be solved:
-   GTK: when using the popup menu with spelling suggestions and releasing the
    right mouse button before the menu appears selecting an item with the
    right mouse button has no effect.  GTK does not produce an event for this.
-   GTK 2: Cannot use the file selector.  When using it many things become
    slow.  This is caused by some code in GTK that writes
    ~/.recently-used.xbel every time an event is handled.  It assumes the main
    loop is never quit, which is a wrong assumption.  Also, it overwrites the
    file with different file permissions, which is a privacy issue.  This
    needs to be fixed in GTK.  A solution in Vim would be really complicated.
    (2008 Jul 31)  This appears to be fixed in Vim 7.3.
-   xterm title: The following scenario may occur (esp. when running the Vim
    test script): Vim 1 sets the title to "file1", then restores the title to
    "xterm" with an ESC sequence when exiting.  Vim 2 obtains the old title
    with an X library call, this may result in "file1", because the window
    manager hasn't processed the "xterm" title yet.  Can apparently only be
    worked around with a delay.
-   In a terminal with 'mouse' set such that the mouse is active when entering
    a command line, after executing a shell command that scrolls up the
    display and then pressing ":": Selecting text with the mouse works like
    the display wasn't scrolled.  Vim doesn't know how much the external
    command scrolled up the display.  Use Shift to select text.
-   X windows: When $DISPLAY points to a X server where there is no access
    permission, trying to connect to the X server causes an error message.
    XtOpenDisplay() prints this directly, there is no way to avoid it.
-   X windows: Setting 'guifontset' to an illegal value sometimes crashes Vim.
    This is caused by a fault in a X library function, can't be solved in Vim.
-   Win32 tcl: has("tcl") hangs when the tcl84.dll is from cygwin.
-   Motif: When adding a menu item "Find this &Symbol", the "s" in "this" will
    be underlined, instead of in "Symbol".  Motif doesn't let us specify which
    character gets the highlighting.
-   Moving the cursor removes color in color-xterm.  This is a color-xterm
    problem!  color-xterm ver. 6.1 beta 3 and later work properly.
-   In zsh, "gvim&" changes the terminal settings.  This is a zsh problem.
    (Jennings)
-   Problem with HPterm under X: old contents of window is lost (Cosentino).
-   Amiga: When using quickfix with the Manx compiler we only get the first 25
    errors.  How do we get the rest?
-   Amiga: The ":cq" command does not always abort the Manx compiler.  Why?
-   Linux: A file with protection r--rw-rw- is seen readonly for others.  The
    access() function in GNU libc is probably wrong.
-   When doing a CTRL-Z and typing a command for the shell, while Vim is busy
    (e.g. writing a file), the command for the shell is sometimes eaten by Vim,
    because the terminal mode is changed from RAW to CBREAK.
-   An old version of GNU tgoto can't handle the terminfo code for "AF".  The
    "%p1" is interpreted as "%p" and "1", causing color not to be working.
    Fix: Change the "%p1" in the "AF" and "AB" terminfo entries to "%p".
    (Benzinger).
-   When running an external command from the GUI, typeahead is going to that
    program, not to Vim.  It looks like the shell eats the characters, Vim
    can't get back what the external command didn't use.
-   Win32 GUI: Error code from external command not returned in shell_error.
    It appears that cmd.exe and command.com don't return an error code.
-   Win32 GUI: The Toolbar is a bit too high when the flat style is being
    used.  We don't have control over the height of the Toolbar.
-   Win32: All files created on the day of switching from winter to summer
    time cause "changed since editing started" messages.  It goes away when
    the file is written again the next day, or the timezone is adjusted.
    DJGPP version is OK. (Zaimi)  Looks like a problem with the Win32 library.
    Rebooting doesn't help.  Time stamps look OK in directory. (Penn)
    Is this on FAT (stores wall clock time) or NTFS (stores UTS)?
-   Win32, MS-Windows XP: $HOME uses the wrong drive when the user profiles
    are not on the boot disk.  This is caused by a wrong value of $HOMEDRIVE.
    This is a bug in XP, see MSKB article 818134.
-   Win32, MS-Windows: expanding plugin/**/*.vim also picks up
    dir/ctags.vim,v.  This is because the short file name is something like
    "ctags~1.vim" and that matches the pattern.
-   SunOS 5.5.1 with Motif: The file open dialog does not have a horizontal
    scroll bar for the "files" selection.  This is a problem in the Motif
    libraries, get a patch from Sun.
-   Solaris 2.6 with GTK and Perl: gvim crashes when started.  Problem with X
    input method called from GDK code.  Without Perl it doesn't crash.
-   VMS: Vimdiff doesn't work with the VMS diff, because the output looks
    different.  This makes test 47 fail.  Install a Unix-compatible diff.
-   Win32 GUI: mouse wheel always scrolls rightmost window.  The events arrive
    in Vim as if the rightmost scrollbar was used.
-   GTK with Gnome: Produces an error message when starting up:
	Gdk-WARNING **: locale not supported by C library
    This is caused by the gnome library gnome_init() setting $LC_CTYPE to
    "en_US".  Not all systems support this locale name, thus causing the
    error.  Hopefully a newer version of GTK/Gnome fixes this problem.
-   GTK 2: With this mapping the hit-enter prompt is _sometimes_ below the
    screen, at other times there is a grey area below the command line:
	:nmap <F11> :if &guioptions=~'m' \| set guioptions-=m \| else \| set guioptions+=m \| endif<cr>
-   GTK: When pasting a selection from Vim to xclipboard gvim crashes with a
    ABRT signal.  Probably an error in the file gdkselection.c, the assert
    always fails when XmbTextListToTextProperty() fails. (Tom Allard)
-   GTK 2: gives an assertion error for every non-builtin icon in the toolbar.
    This is a GTK 2.4.x bug, fixed in GTK 2.4.2. (Thomas de Grenier de Latour)
-   When using an xterm that supports the termresponse feature, and the 't_Co'
    termcap option was wrong when Vim started, it will be corrected when the
    termresponse is received.  Since the number of colors changes, the
    highlighting needs to be initialized again.  This may cause colors defined
    in the vimrc file to be lost.
-   On Windows NT 4.0 the number of files passed to Vim with drag&drop and
    "Edit with Vim" is limited.  The maximum command line length is 255 chars.

---------------------  extensions and improvements ----------------------
						    *extensions-improvements*

Most interesting new features to be added when all bugs have been fixed:
-   Using ":exe edit fname" has escaping problems.  Use ":edit ++(fname)".
    Thus use "++=" to give arguments as expressions, comma separated as if
    calling a function.
    With options: ":edit ++(['!', '++enc=abc'], ['+/pat'], fname)".
    Alternative: Make a function for Ex commands: cmd_edit().
-   Add COLUMN NUMBERS to ":" commands ":line1,line2[col1,col2]cmd".  Block
    can be selected with CTRL-V.  Allow '$' (end of line) for col2.
-   Add DEBUGGER INTERFACE.  Implementation for gdb by Xavier de Gaye.
    Should work like an IDE.  Try to keep it generic.  Now found here:
    http://clewn.sf.net.
    And the idevim plugin/script.
    To be able to start the debugger from inside Vim: For GUI run a program
    with a netbeans connection; for console: start a program that splits the
    terminal, runs the debugger in one window and reconnect Vim I/O to the
    other window.
    Wishes for NetBeans commands:
    - make it possible to have 'defineAnnoType' also handle terminal colors.
    - send 'balloonText' events for the cursor position (using CursorHold ?)
      in terminal mode.
-   ECLIPSE plugin.  Problem is: the interface is very complicated.  Need to
    implement part in Java and then connect to Vim.  Some hints from Alexandru
    Roman, 2004 Dec 15.  Should then also work with Oracle Jdeveloper, see JSR
    198 standard http://www.jcp.org/en/jsr/detail?id=198.
    Eclim does it: http://eclim.sourceforge.net/  (Eric Van Dewoestine)
    Plugin that uses a terminal emulator: http://vimplugin.sf.net
    And another one: http://www.satokar.com/viplugin/index.php
-   STICKY CURSOR: Add a way of scrolling that leaves the cursor where it is.
    Especially when using the scrollbar.  Typing a cursor-movement command
    scrolls back to where the cursor is.
-   Scroll commands by screen line. g CTRL-E and g CTRL-Y ?  Requires the
    first line to be able to start halfway.
-   Running a shell command from the GUI still has limitations.  Look into how
    the terminal emulator of the Vim shell project can help:
    http://vimshell.wana.at
8   Add a command to jump to a certain kind of tag.  Allow the user to specify
    values for the optional fields.  E.g., ":tag size type=m".
    Also allow specifying the file and command, so that the result of
    taglist() can be used.
-   X11: Make it possible to run Vim inside a window of another program.
    This can be done with XReparentWindow().  But how exactly?


Documentation:
8   List of Vim runtime directories.  dotvim.txt from Charles Campbell, 2007
    Feb 20.
8   The GUI help should explain the Find and Find/Replace dialogs.  Add a link
    to it from ":promptrepl" and ":promptfind".
8   List of options should mention whether environment variables are expanded
    or not.
8   Extend usr_27.txt a bit. (Adam Seyfarth)
9   Make the Reference Manual more precise.  For each command mention:
    - change to cursor position and curswant
    - if it can be undone (u/CTRL-R) and redone (.)
    - how it works for folded lines
    - how it works with multi-byte characters
9   In change.txt, remark about Javadoc isn't right.  Right alignment would
    work too.
8   Spread the windows commands over the other files.  For example, ":stag"
    should be with ":tag".  Cross-link with tags to avoid too much double
    text.
8   Add tags for all features, e.g. "gui_running".
7   MS-Windows: When a wrong command is typed with an ALT key, give a hint to
    look at the help for 'winaltkeys'.
7   Add a help.vim plugin that maps <Tab> to jump to the next tag in || and
    <C-Tab> (and <S-Tab>) to the previous tag.
    Patch by Balazs Kezes, 2007 Dec 30.  Remark from A. Politz.
-   Check text editor compendium for vi and Vim remarks.


Help:
-   First try using the ":help" argument literally, before using it as a
    pattern.  And then match it as part of a tag.
-   When a help item has multiple matches make it possible to use ":tn" to go
    to the other matches.
-   Support a way to view (and edit) .info files.
-   Implement a "sticky" help window, some help text lines that are always
    displayed in a window with fixed height. (Guckes)  Use "~/.vimhelp" file,
    user can edit it to insert his favorite commands, new account can contain a
    default contents.
-   Make 'winminheight' a local option, so that the user can set a minimal
    height for the help window (and other windows).
-   ":help :s^I" should expand to ":help :substitute".
-   Make the help key (<F1>) context sensitive?
-   Learn mode: show short help while typing commands.


User Friendlier:
8   Windows install with install.exe: Use .exe instead of .bat files for
    links, so that command line arguments are passed on unmodified? (Walter
    Briscoe)
8   Windows install: Be able to associate Vim with a selection of file types?
8   Windows uninstall: Have uninstal.c delete the vimfiles directories that
    dosinst.c creates.  List the contents of the directory (recursively) if
    the user asks for it.  Requires an implementation of "rm -rf".
8   Remember the name of the vimrc file that was used (~/.vimrc, $VIM/_vimrc,
    $HOME/_vimrc, etc.) and add "edit vimrc" to the File menu.
-   Add a way to save local settings and mappings into a new plugin file.
    ":mkplugin <file>"?
-   Add mappings local to a window: ":map <window> ..."?
9   Add buffer-local menu.  Should offer a choice between removing the menu or
    disabling it.  Be careful that tear-offs don't disappear (keep one empty
    item?).
    Alternative: use BufEnter and BufLeave autocommands.
8   make a vimtutor script for Amiga and other systems.
7   When Vim detects a file is being edited elsewhere and it's a gvim session
    of the same user it should offer a "Raise" button, so that the other gvim
    window can be displayed. (Eduard)
8   Support saving and restoring session for X windows?  It should work to do
    ":mksession" and use "-S fname" for the restart command.  The
    gui_x11_wm_protocol_handler() already takes care of the rest.
    global_event_filter() for GTK.


Tab pages:
9   GUI implementation for the tab pages line for other systems.
7   GUI: Control over the appearance of the text in the labels (bold, color,
    font, etc.)
8   Make GUI menu in tab pages line configurable.  Like the popup menu.
8   balloons for the tab page labels that are shortened to show the full path.
7   :tabdup	 duplicate the tab with all its windows.
7   Option to put tab line at the left or right?  Need an option to specify
    its width.  It's like a separate window with ":tabs" output.
8   Add local options for each tab page?  E.g., 'diffopt' could differ between
    tab pages.
7   Add local highlighting for each tab page?
7   Add local directory for tab pages?  How would this interfere with
    window-local directories?


Spell checking:
-   Support more regions? Caolan McNamara argues it's needed for es_XX.
    https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=219777    
-   Unicode defines another quote character: 0x2019.  Use it as an equivalent
    of a single quote, thus use it as a word character like a quote and match
    with words, replacing the curly quote with a single quote.
-   Could filter &eacute; things for HTML before doing spell checking.
    Similarly for TeX.
-   The Hungarian spell file uses four extra characters in the FOL/UPP/LOW
    items than other spell files with the ISO-8859-2 encoding, that causes
    problem when changing 'spelllang'.  There is no obvious way to fix this.
-   Considering Hunspell 1.1.4:
    What does MAXNGRAMSUGS do?
    Is COMPLEXPREFIXES necessary when we have flags for affixes?
-   Support spelling words in CamelCase as if they were two separate words.
    Requires some option to enable it. (Timothy Knox)
-   There is no Finnish spell checking file.  For openoffice Voikko is now
    used, which is based on Malaga: http://home.arcor.de/bjoern-beutel/malaga/
    (Teemu Likonen)
8   ":mkspell" still takes much too long in Hungarian dictionary from
    hunspell.  Only solution appears to be to postpone secondary suffixes.
8   Handle postponed prefix with COMPOUNDPERMITFLAG or COMPOUNDFORBIDFLAG.
    WFP_COMPPERMIT and WFP_COMPFORBID
8   implement use of <compoptions> in .spl file:
    implement CHECKCOMPOUNDREP: when a compound word seems to be OK apply REP
    items and check if the result is a valid word.
    implement CHECKCOMPOUNDDUP
    implement CHECKCOMPOUNDTRIPLE
    Add CHECKCOMPOUNDCASE: when compounding make leading capital lower case.
    How is it supposed to work?
-   Add a command the repeats ]s and z=, showing the misspelled word in its
    context.  Thus to spell-check a whole file.
-   suggestion for "KG" to "kg" when it's keepcase.
-   For flags on affixes: Use a "AFFCOMPSET" flag; means the compound flags of
    the word are not used.
-   Support breakpoint character ? 0xb7 and ignore it?  Makes it possible to
    use same wordlist for hyphenation.
-   Compound word is accepted if nr of words is <= COMPOUNDWORDMAX OR nr of
    syllables <= COMPOUNDSYLMAX.  Specify using AND in the affix file?
-   NEEDCOMPOUND also used for affix?  Or is this called ONLYINCOMPOUND now?
    Or is ONLYINCOMPOUND only for inside a compound, not at start or end?
-   Do we need a flag for the rule that when compounding is done the following
    word doesn't have a capital after a word character, even for Onecap words?
-   New hunspell home page: http://hunspell.sourceforge.net/
    - Version 1.1.0 is out now, look into that.
    - Lots of code depends on LANG, that isn't right.  Enable each mechanism
      in the affix file separately.
    - Example with compounding dash is bad, gets in the way of setting
      COMPOUNDMIN and COMPOUNDWORDMAX to a reasonable value.
    - PSEUDOROOT == NEEDAFFIX
    - COMPOUNDROOT -> COMPOUNDED?  For a word that already is a compound word
	    Or use COMPOUNDED2, COMPOUNDED3, etc.
-   CIRCUMFIX: when a word uses a prefix marked with the CIRCUMFIX flag, then
    the word must also have a suffix marked with the CIRCUMFIX flag.  It's a
    bit primitive, since only one flag is used, which doesn't allow matching
    specific prefixes with suffixes.
    Alternative:
	PSFX {flag} {pchop} {padd} {pcond} {schop} {sadd}[/flags] {scond}
    We might not need this at all, you can use the NEEDAFFIX flag and the
    affix which is required.
-   When a suffix has more than one syllable, it may count as a word for
    COMPOUNDWORDMAX.
-   Add flags to count extra syllables in a word.  SYLLABLEADD1 SYLLABLEADD2,
    etc.?  Or make it possible to specify the syllable count of a word
    directly, e.g., after another slash: /abc/3
-   MORPHO item in affix file: ignore TAB and morphological field after
    word/flags and affix.
-   Implement multiple flags for compound words and CMP item?
    Await comments from other spell checking authors.
-   Also see tklspell: http://tkltrans.sourceforge.net/
8   Charles Campbell asks for method to add "contained" groups to existing
    syntax items (to add @Spell).
    Add ":syntax contains {pattern} add=@Spell" command?  A bit like ":syn
    cluster" but change the contains list directly for matching syntax items.
-   References: MySpell library (in OpenOffice.org).
	http://spellchecker.mozdev.org/source.html
	http://whiteboard.openoffice.org/source/browse/whiteboard/lingucomponent/source/spellcheck/myspell/
      author: Kevin Hendricks <kevin.hendricks@sympatico.ca>
8   It is currently not possible to mark "can not" as rare, because "can" and
    "not" are good words.  Find a way to let "rare" overrule "good"?
8   Make "en-rare" spell file?  Ask Charles Campbell.
8   The English dictionaries for different regions are not consistent in their
    use of words with a dash.
7   Insert mode completion mechanism that uses the spell word lists.
8   Add hl groups to 'spelllang'?
	:set spelllang=en_us,en-rare/SpellRare,en-math/SpellMath
    More complicated: Regions with different languages?  E.g., comments
    in English, strings in German (po file).


Diff mode:
9   When making small changes, e.g. deleting a character, update the diff.
    Possibly without running diff.
9   Instead invoking an external diff program, use builtin code.  One can be
    found here: http://www.ioplex.com/~miallen/libmba/dl/src/diff.c
    It's quite big and badly documented though.
8   Also show difference with the file when editing started?  Should show what
    can be undone. (Tom Popovich)

Folding:
    (commands still available: zI zJ zK zp zP zq zQ zV zy zY;
    secondary: zB zS zT zZ, z=)
8   Vertical folds: looks like vertically split windows, but the cursor moves
    through the vertical separator, separator moves when scrolling.
8   Add "z/" and "z?" for searching in not folded text only.
8   When a closed fold is displayed open because of 'foldminlines', the
    behavior of commands is still like the fold is closed.  How to make the
    user aware of this?
8   Add an option 'foldskip' with values like 'foldopen' that specifies which
    commands skip over a closed fold.
8   "H" and "L" count buffer lines instead of window lines. (Servatius Brandt)
8   Add a way to add fold-plugins.  Johannes Zellner has one for VB.
7   When using manual folding, the undo command should also restore folds.
-   Allow completely hiding a closed fold.  E.g., by setting 'foldtext' to an
    empty string.  Require showing a character in 'foldcolumn' to avoid the
    missing line goes unnoticed.
    How to implement this?
-   When pressing the down arrow of a scrollbar, a closed fold doesn't scroll
    until after a long time.  How to make scrolling with closed folds
    smoother?
-   When creating a session, also store folds for buffers in the buffer list,
    using the wininfo in wi_folds.
-   When currently editing the first file in the argument list the session
    file can contain:
	args version.c main.c
	edit version.c
    Can editing version.c twice be avoided?
-   'foldmethod' "textobject": fold on sections and paragraph text objects.
-   "zuf": undo change in manual fold. "zUf" redo change in manual fold.  How
    to implement this?
-   "zJ" command: add the line or fold below the fold in the fold under the
    cursor.
-   'foldmethod' "syntax": "fold=3" argument: set fold level for a region or
    match.
-   Apply a new foldlevel to a range of lines. (Steve Litt)

Multi-byte characters:
-   When editing a file with both utf-8 and latin1 text Vim always falls back
    to latin1.  Add a command to convert the latin1 characters to utf-8?
	:unmix utf-8,latin1 filename
    Would only work when 'encoding' is utf-8.
9   When the tail byte of a double-byte character is illegal (e.g., a CR), the
    display is messed up (Yasuhiro Matsumoto).  Should check for illegal
    double-byte characters and display them differently (display each single
    byte).
9   'fenc' in modeline problem: add option to reload the file when 'fenc' is
    set to a different value in a modeline?  Option can be default on.  Could
    it be done with an autocommand?
8   Add an item in 'fileencodings' to check the first lines of a file for
    the encoding.  See Python PEP: http://www.python.org/peps/pep-0263.html.
    To avoid getting a wrong encoding only accept something Emacs-like:
    "-*- coding: enc-na_me.foo -*-" and "-*- coding= enc-na_me.foo -*-"
    Match with "-\*-\s*coding[:=]\s*\([::word::-_.]\+\)\s*-\*-" and use first
    item.
8   Add an item in 'fileencodings' to check the first line of an XML file for
    the encoding.  <?xml version="1.0" encoding="UTF-8"?>  Or "charset=UTF-8"?
    For HTML look for "charset=utf-8".
8   The quickfix file is read without conversion, thus in 'encoding'.  Add an
    option to specify the encoding of the errorfile and convert it.  Also for
    ":grep" and ":helpgrep".
    More generic solution: support a filter (e.g., by calling a function).
8   When a file was converted from 'fileencoding' to 'encoding', a tag search
    should also do this on the search pattern. (Andrzej M. Ostruszka)
8   When filtering changes the encoding 'fileencoding' may not work.  E.g.,
    when using xxd and 'fileencoding' is "utf-16".  Add an option to set a
    different fileencoding for filter output?
7   When converting a file fails, mention which byte could not be converted,
    so that the user can fix the problem.
8   Add configure option to be able to disable using the iconv library. (Udo
    Schweigert)
9   'aleph' should be set to 1488 for Unicode. (Zvi Har'El)
8   Should add test for using various commands with multi-byte characters.
8   'infercase' doesn't work with multi-byte characters.
8   toupper() function doesn't handle byte count changes.
7   Searching and composing characters:
    When searching, should order of composing characters be ignored?
    Add a special item to match with a composing character, so that composing
    characters can be manipulated.
8   Should implement 'delcombine' for command line editing.
8   Detect overlong UTF-8 sequences and handle them like illegal bytes.
8   ":s/x/\u\1/" doesn't work, making uppercase isn't done for multi-byte
    characters.
8   UTF-8: "r" in Visual mode doesn't take composing characters.
8   UTF-8: When there is a precomposed character in the font, use it instead
    of a character and a composing character.  See xterm for an example.
7   When a character can't be displayed, display its digraph instead.
    'display' option to specify this.
7   Use ideas for nl_langinfo() from Markus Kuhn in enc_default():
    (www.cl.cam.ac.uk/~mgk25/ucs/langinfo.c)
-   GTK and Win32: Allow selecting fonts for 'guifontset' with the
    fontselector somehow.
-   GTK and Win32: make it possible to set the font for the menu to make it
    possible to have 'encoding' different from the current locale.
-   dbcs_class() only works for Japanese and Korean.  Implement this for
    other encodings.  The "euc-jp" and "euc-kr" choices might be wrong.
-   Find some way to automatically select the right GUI font or fontset,
    depending on the default value of 'encoding'.
    Irrelevant in the GTK+ 2 GUI so long as UTF-8 is used.
    For Windows, the charset_pairs[] table could be used.  But how do we know
    if a font exists?
-   Do keyboard conversion from 'termencoding' to 'encoding' with
    convert_input() for Mac GUI.
-   Add mnemonics from RFC1345 longer than two characters.
    Support CTRL-K _{mnemonic}_
-   Make 'breakat' accept multi-byte characters.  Problem: can't use a lookup
    table anymore (breakat_flags[]).
    Simplistic solution: when 'formatoptions' contains "m" also break a line
    at a multi-byte character >= 0x100.
-   Add the possibility to enter mappings which are used whenever normal text
    could be entered.  E.g., for "f" command.  But not in Normal mode.  Sort
    of opposite of 'langmap'.  Use ":tmap" command?
-   When breaking a line, take properties of multi-byte characters into
    account.  The "linebreak" program from Bruno Haible can do it:
    ftp://ftp.ilog.fr/pub/Users/haible/gnu/linebreak-0.1.tar.gz
    But it's very complicated...


Printing:
7   Implement "undercurl" for printing.
-   Add "page width" to wrap long lines.
-   Win32: use a font dialog for setting 'printfont'.  Can reuse the code for
    the 'guifont' dialog, put the common code in a separate function.
-   Add the file timestamp to the page header (with an option). (George
    Reilly)
-   Win32: when 'printfont' is empty use 'guifont'.
-   Unix: Use some dialog box to do the obvious settings (paper size, printer
    name, portrait/landscape, etc).
-   PostScript: Only works for text that can be converted to an 8-bit
    character set.  How to support Unicode fully?
-   Allow specifying the paper size, instead of using a standard size.  Same
    units as for the margins.
-   Support right-to-left text?
8   Make the foreground color darkening function preserve the hue of the
    color.


Syntax highlighting:
8   Make ":syn off" use 'runtimepath' instead of $VIMRUNTIME. (Gary Johnson)
    Should do the same for ":syn on" and ":syn manual".
8   Support "containedin" argument for ":syn include", so that the defined
    cluster can be added to existing syntax items.
8   C syntax: Don't highlight {} as errors inside () when used like this:
    "({ something })", often used in GCC code.
7   Add a "startgroup" to a region.  Used like "nextgroup" inside the region,
    preferred item at the start of the region. (Charles Campbell)
8   When editing a new file without a name and giving it a name (by writing
    it) and 'filetype' is not set, detect the filetype.  Avoid doing it for
    ":wq file".
7   For "nextgroup" we have skipwhite, skipnl and skipempty.  It would be
    really nice to be able to skip with a pattern.  Or skip with a syntax
    group. (Nikolai Weibull, 2007 Feb 27)
8   Make conversion to HTML faster (Write it in C or pre-compile the script).
9   There is still a redraw bug somewhere.  Probably because a cached state is
    used in a wrong way.  I can't reproduce it...
7   Be able to change only the background highlighting.  Useful for Diff* and
    Search highlighting.
7   When 'number' is set highlight the number of the current line.
    Must be enabled with an option, because it slows down display updating.
8   Allow the user to add items to the Syntax menu sorted, without having to
    change this for each release.
8   Add a "matchcontains" for regions: items contained in the start or end
    pattern, but not in the body.
8   Add a "keepend-contained" argument: Don't change the end of an item this
    one is contained in.  Like "keepend" but specified on the contained item,
    instead of the containing item.
8   cpp.vim: In C++ it's allowed to use {} inside ().
8   Some syntax files set 'iskeyword', they should use "syn iskeyword".
    Also need a separate 'iskeyword' for the command line, e.g., in a help
    window ":e /asdf/asdf/" CTRL-W works different.
8   Add specific syntax item to match with parens/braces that don't have a
    "%" match.  :syntax nomatch cMatchError (,{,[,),},] [contained]
8   Highlight the text between two matching parens (e.g., with a grey
    background) when on one of the parens or in between them.
    Option for the matchparen plugin?
8   When using a cterm, and no ctermfg or ctermbg are defined, use start/stop
    sequences.	Add remark in docs that :if 'term' == "term-name" should be
    used.
8   Add @spell cluster to String and Comment groups for many languages.  Will
    allow spell checking. (Fleiner)
8   When listing syntax items, try to sort the keywords alphabetically.  And
    re-insert the [] if possible.
8   Make it possible to use color of text for Visual highlight group (like for
    the Cursor).
8   It would be useful to make the highlight group name an expression.  Then
    when there is a match, the expression would be evaluated to find out what
    highlight group to use.  Could be used to check if the shell used in a
    password file appears in /etc/shells. (Nikolai Weibull)
	syn match =s:checkShell(v:match) contained 'pattern'
8   Make it possible to only highlight a sub-expression of a match.  Like
    using "\1" in a ":s" command.
8   Support for deleting syntax items:
    :syn keyword cTodo remove this
    :syn match cTodo remove "pattern"
    :syn region cString remove start="this" end="that"
8   Add possibility to sync on something else, when the syncing in one way
    doesn't find match.  For HTML: When no {script} is found, try looking for
    a '<'.  (Fleiner)
7   Replace the synchronizing method with a state machine specification?
    Should be able to start at any line in the file, search forwards or
    backwards, and use the result of matching a pattern.
7   Use parsing like awk, so that e.g., a ( without a matching ) can be
    detected.
8   Make it possible to use "inverted" highlighting, invert the original
    character.  For Visual mode.  (xterm-selection already does this).
8   Highlight non-printable characters with "SpecialChar", linked to
    "Special".  Display them with the digraph characters, if possible.
8   Highlight the clipboard-selection with a highlight group.
8   Be able to reset highlighting to its original (default) values.
7   Be able to write current highlighting to a file as commands, similar to
    ":mkvimrc".
8   Improve c.vim:
    - Add check for unterminated strings, with a variable to switch it on:
      "c_strict_ansi".
    - Detect unbalanced "#endif".  Requires looking back a long way...
8   Add an option to restrict the updating of syntax highlighting to the
    current line while in Insert mode.
8   When guessing value of 'background', the syntax file has already been
    loaded (from the .gvimrc).	After changing 'background', load it again?
8   Add ":syn resync" command, to re-parse the whole file until the current
    display position.
8   Should support "me" offset for a region start pattern.  To be used to
    allow searching for the end pattern inside the match of the end pattern.
    Example: syn region pikeXX start="([^{]" end=")" should work on "()".
8   When using a regexp for "contains=", should delay matching with it until
    redrawing happens.  Set a flag when a group is added, check this flag when
    highlighting starts.
7   It's possible for an item to be transparent, so that the colors of an item
    lower on the stack is used.  Also do this with highlighting, so that the
    user can set transparent highlighting?  E.g. a number in a C comment would
    get the color of a comment, a number in an assignment Normal. (Nikolai
    Weibull)
7   Add "semitrans": Add highlighting.  E.g., make the text bold, but keep the
    colors.  And add colors, so that Green+Red becomes Yellow.
    E.g. for this html:
	<B> bold text <I> italic+bold text </B> italic text </I>
7   CTRL-] checks the highlight group for finding out what the tag is.
7   Add an explanation how a list of words can be used to highlight misspelled
    words.
8   Add more command line completion for :syntax.
8   Add more command line completion for :highlight.
7   Should find a better way to parse the :syntax and :highlight commands.
    Use tables or lists that can be shared by parsing for execution and
    completion?
8   Add ColorSchemePost autocommand event, so that scripts can set up their
    highlighting. (Salman Halim)
7   Add a few sets of colors (e.g. Borland Turbo C one).  With a menu to
    select one of the sets.
8   Add offsets to sub-matches: "\(a*\) *"he=e1-1
    'e' is end of match 'e1' is end of sub-match 1, 's2' is start of submatch
    2, etc.
8   In Insert mode, when there are typeahead characters, postpone the
    highlighting (for "." command).
8   Syncing on comments isn't 100% correct when / / lines mix with / * and * /.
    For example: What about a line that starts with / / and contains * /?
8   Ignore / * and  * / inside strings, when syncing.
7   Build a few more syntax files from the file "/usr/share/misc/vgrindefs":
    ISP, LDL, Icon, ratfor.  And check "nedit/source/highlight.c".
6   Add possibility to have background color continue until the right edge of
    the window.  Useful for comment blocks and function headings. (Rogall)
-   Make it possible to add "contains" items for all items in a group.	Useful
    when extending an already existing syntax file.
-   Add line-continuation pattern for non-syncing items too?
-   Add possibility to highlight the whole line, including the right margin
    (for comment blocks).
-   Add 'hlmatch' option: List of flags:
    'c': highlight match for character under the cursor.
    'b': highlight the previous (, and its match.
    'a': highlight all text from the previous ( until its match.
	 Also for {}, <>, etc.?
    'e': highlight all braces without a match (slow?)
    OR: add an argument "cursor" to the syntax command, which means that the
    region/match/keyword is only highlighted when the cursor is on it.
    (Campbell)
    Or do it like Elvis: define text objects and how to highlight them around
    the cursor. (Iain Truskett)
7   Make it possible to use all words in the tags files as Keyword.
    Can also be done with a script (but it's slow).
7   Make it possible to call a ":" command when a match is found.  Should
    allow for adding keywords from the text (e.g. variables that are set).
    And allows for sections with different highlighting.
7   Add highlight group for commandline: "Commandline".  Make sure it
    highlights the command line while typing a command, and any output from
    messages.  And external commands?
8   Make a version that works like less, but with highlighting: read stdin for
    text, exit at end of file, don't allow editing, etc.  moreim?  lessim?
7   SpecialKey highlighting overrules syntax highlighting.  Can't give an
    unprintable char another color.  Would be useful for ^M at end of line.


Vim script language:
8   Make the filename and line number available to script functions, so that
    they can give useful debugging info.  The whole call stack would be ideal.
    At least use this for error messages.
7   Execute a function with standard option values.  No need to save and
    restore option values.  Especially useful for new options.  Problem: how
    to avoid a performance penalty (esp. for string options)?
8   Add referring to key options with "&t_xx".  Both for "echo &t_xx" and
    ":let &t_xx =".  Useful for making portable mappings.
-   Add ":let var ?= value", conditional assignment.  Patch by Dave Eggum,
    2006 Dec 11.
-   range for ":exec", pass it on to the executed command.  (Webb)
8   ":{range}source": source the lines from the current file.
	You can already yank lines and use :@" to execute them.
	Most of do_source() would not be used, need a new function.
	It's easy when not doing breakpoints or profiling.
    Requires copying the lines into a list and then creating a function to
    execute lines from the list.  Similar to getnextac().
7   ":include" command: just like ":source" but doesn't start a new scriptID?
    Will be tricky for the list of script names.
8   Have a look at VSEL.  Would it be useful to include? (Bigham)
8   Have a prefix for a function to make it unique.  When using packages it
    can be the plugin name.
    Perhaps also have a way to remove everything that the package added?
    including autocommands.
7   Pre-parse or compile Vim scripts into a bytecode.
    1. Put the bytecode with the original script, with an ":if
       has('bytecode')" around it, so that it's only used with a Vim that
       supports it.  Update the code with a command, can be used in an
       autocommand.
    2. Use a ".vic" file (like Python use .pyc).  Create it when writing a
       .vim file.  Problem: distribution.
    3. Use a cache directory for each user.  How to recognize which cached
       file belongs to a sourced script?
7   Add argument to winwidth() to subtract the space taken by 'foldcolumn',
    signs and/or 'number'.
6   Add ++ and -- operators?  They only work on variables (lvals), how to
    implement this?
8   Add functions:
	has(":command")		Check if ":command" works.  compare function
				with "ex_ni".  E.g. for ":simalt".
	escape()		Add argument to specify what to escape with.
	modestack()		Instead of just the current mode return the
				stack of Insert / CTRL-O / :normal things.
	realname()		Get user name (first, last, full)
				user_fullname() patch by Nikolai Weibull, Nov
				3 2002
				Only add this when also implemented for
				non-Unix systems, otherwise a shell cmd could
				be used.
				get_user_name() gets login name.
	menuprop({name}, {idx}, {what})
				Get menu property of menu {name} item {idx}.
				menuprop("", 1, "name") returns "File".
				menuprop("File", 1, "n") returns "nmenu
				File.Open..." argument.
				Patch by Ilya Sher, 2004 Apr 22
				Return a list of menus and/or a dictionary
				with properties instead.
	mapname({idx}, mode)	return the name of the idx'th mapping.
				Patch by Ilya Sher, 2004 Mar 4.
				Return a list instead.
	char2hex()		convert char string to hex string.
	crypt()			encrypt string
	decrypt()		decrypt string
	base64enc()		base 64 encoding
	base64dec()		base 64 decoding
	attributes()		return file protection flags "drwxrwxrwx"
	filecopy(from, to)	Copy a file
	shorten(fname)		shorten a file name, like home_replace()
	perl(cmd)		call Perl and return string
	inputrl()		like input() but right-to-left
	typed()			return the characters typed and consumed (to
				find out what happened)
	virtualmode()		add argument to obtain whether "$" was used in
				Visual block mode.
	getacp()		Win32: get codepage (Glenn Maynard)
	deletebufline()		delete line in any buffer
	appendbufline()		append line in any buffer
	libcall()		Allow more than one argument.
	libcallext()		Like libcall(), but using a callback function
				to allow the library to execute a command or
				evaluate an expression.
7   Make bufname("'0") return the buffer name from mark '0.  How to get the
    column and line number?  col("'0") currently returns zero.
8   argc() returns 0 when using "vim -t tag".  How to detect that no file was
    specified in any way?  To be able to jump to the last edited file.
8   Pass the command line arguments to Vim scripts in some way.  As v:args
    List?  Or extra parameter to argv()?
8   Add command arguments with three dashes, passed on to Vim scripts.
9   Add optional arguments to user functions:
	:func myFunc(arg1, arg2, arg3 = "blah", arg4 = 17)
6   User functions: Functions local to buffer "b:func()"?
8   For Strings add ":let var[{expr}] = {expr}".  When past the end of "var"
    just ignore.
8   The "= register should be writable, if followed by the name of a variable,
    option or environment variable.
8   ":let &option" should list the value of the option.
8   ":let Func().foo = value" should work, also when "foo" doesn't exist.
    Also: ":let Func()[foo] = value" should work.  Same for a List.
7   Add synIDlist(), making the whole list of syntax items on the syntax stack
    available as a List.
8   Add autocommand-event for when a variable is changed:
	:au VarChanged {varname} {commands}
8   Add "has("gui_capable")", to check if the GUI can be started.
8   Add possibility to use variables like registers: characterwise (default),
    linewise (when ending in '\n'), blockwise (when ending in '\001').	reg0,
    rega, reg%, etc.  Add functions linewise({expr}), blockwise({expr}) and
    charwise({expr}).
7   Make it possible to do any command on a string variable (make a buffer
    with one line, containing the string).  Maybe add an (invisible) scratch
    buffer for this?
	result = scratch(string, command)
	result = apply(string, command)
	result = execute(string, command)
    "command" would use <> notation.
    Does scratch buffer have a number?  Or re-use same number?
7   Add function to generate unique number (date in milliseconds).


Robustness:
6   Add file locking.  Lock a file when starting to edit it with flock() or
    fcntl().  This patch has advisory file locking while reading/writing
    the file for Vim 5.4: ~/vim/patches/kahn_file_locking .
    The patch is incomplete (needs support for more systems, autoconf).
    Andy doesn't have time to work on it.
    Disadvantage: Need to find ways to gracefully handle failure to obtain a
    lock.  When to release a lock: When buffer is unloaded?


Performance:
7   For string variables up to 3 bytes don't allocate memory, use v_list
    itself as a character array.  Use VAR_SSTRING (short string).
7   Add 'lazysize' option: Above this size Vim doesn't load everything before
    starting to edit a file.  Things like 'fileencodings' only work up to this
    size, modelines only work at the top.  Useful for large log files where
    you only want to look at the first few pages.  Use zero to disable it.
8   move_lines() copies every line into allocated memory, making reloading a
    buffer a lot slower than re-editing the file.  Can the memline be locked
    so that we don't need to make a copy?  Or avoid invoking ml_updatechunk(),
    that is taking a lot of time.  (Ralf Wildenhues, 2008 Jul 7)
    With a patch, but does it work?
8   Turn b_syn_ic and b_syn_containedin into b_syn_flags.
9   Loading menu.vim still takes quite a bit of time.  How to make it faster?
8   in_id_list() takes much time for syntax highlighting.  Cache the result?
7   setpcmark() shifts the jumplist, this takes quite a bit of time when
    jumping around.  Instead use an index for the start?
8   When displaying a space with only foreground highlighting, it's the same
    as a space without attributes.  Avoid displaying spaces for the "~" lines
    when starting up in a color terminal.
8   Avoid alloc() for scratch buffer use, esp. in syntax.c.  It's very slow on
    Win16.
8   Profiling shows that in_id_list() is used very often for C code.  Can this
    function be improved?
8   For an existing file, the page size of the swap file is always the
    default, instead of using the block size of the device, because the swap
    file is created only after setting the block size in mf_open().  How can
    this be improved?
8   Set default for 'ttyscroll' to half a screen height?  Should speed up
    MS-DOS version. (Negri)
7   C syntax highlighting gets a lot slower after ":set foldmethod=syntax".
    (Charles Campbell)  Inserting a "{" is very slow. (dman)
7   HTML syntax highlighting is slow for long lines.  Try displaying
    http://www.theregister.co.uk/content/4/22908.html. (Andre Pang)
7   Check how performance of loading the wordlist can be improved (adding a
    lot of abbreviations).
7   Compile Ex commands to byte codes.  Store byte codes in a vim script file
    at the end, after "compiled:.  Make it look like a single comment line
    for old Vim versions.  Insert first line "Vim script compiled <timestamp>.
    Only used compiled code when timestamp matches the file stat.
    Add command to compile a vim script and add it to the file in-place.
    Split Ex command executing into a parsing and executing phase.
    Use compiled code for functions, while loops, etc.
8   When defining autocommands (e.g., from $VIMRUNTIME/filetype.vim), need to
    compare each pattern with all existing patterns.  Use a hash code to avoid
    using strcmp() too often?
7   Include turbo_loader patches, speeding up reading a file?
    Speed up reading a file by reading it into a fixed-size buffer, creating
    the list of indexes in another buffer, and then copying the result into a
    memfile block with two copies.  Then read the next block into another
    fixed-size buffer, create the second list of indexes and copy text from
    the two blocks to the memfile block.
7   do_cmdline(): Avoid that the command line is copied to allocated memory
    and freed again later all the time.  For while loops, and for when called
    with an argument that can be messed with.
    Generic solution: Make a struct that contains a pointer and a flag that
    indicates if the pointer should be freed when replaced.
7   Check that the file size is not more than "sizeof(long)".
-   Further improve finding mappings in maphash[] in vgetorpeek()
8   Syntax highlighting is slow when deleting lines.  Try in
    $VIMRUNTIME/filetype.vim.
-   "out of memory" after deleting (1,$d) and changing (:%s/^/> /) a lot of
    lines (27000) a few times.  Memory fragmentation?
-   Have a look at how pdksh does memory allocation (alloc.c). (Dalecki)
-   Do profiling on:
    - :g/pat/normal cmd
    - 1000ii<Esc>
    - deleting 10Mbyte worth of lines (netscape binary)
    - "[i" and "[d" (Yegappan Lakshmanan)
    - ":g/^/m0" on a 450Kbyte file.  And the "u".
    - highlighting "~/vim/test/longline.tex", "~/vim/test/scwoop.tcl" and
      "~/vim/test/lockup.pl".
    - loading a syntax file to highlight all words not from a dictionary.
    - editing a Vim script with syntax highlighting on (loading vim.vim).
7   Screen updating can be further improved by only redrawing lines that were
    changed (and lines after them, when syntax highlighting was used, and it
    changed).
    - On each change, remember start and end of the change.
    - When inserting/deleting lines, remember begin, end, and line count.
-   Use macros/duarte/capicua for profiling.  Nvi 1.71 is the fastest!
-   When using a file with one long line (1Mbyte), then do "$hhhh", is still
    very slow.  Avoid calling getvcol() for each "h"?
-   Executing a register, e.g. "10000@@" is slow, because ins_typebuf has to
    move the previous commands forward each time.  Pass count from
    normal_cmd() down to do_execreg().
-   Repeating insert "1000i-<Esc>" displays --INSERT-- all the time, because of
    the <Esc> at the end.  Make this work faster (disable redrawing).
-   Avoid calls to plines() for cursor line, use w_cline_height.
-   After ":set nowrap" remove superfluous redraw with wrong hor. offset if
    cursor is right of the screen.
8   Make CTRL-C on Unix generate a signal, avoid using select() to check for a
    CTRL-C (it's slow).


Code size:
8   GUI: When NO_CONSOLE is defined, more code can be excluded.
-   Put getline() and cookie in a struct, so only one argument has to be
    passed to do_cmdline() and other functions.
8   Make a GUI-only version for Unix?
8   In buf_write _() isn't needed when setting errmsg, do it once when using
    it.
7   When compiling with a GUI-only version, the code for cterm colors can be
    left out.
8   When compiled with a GUI-only version, the termcap entries for terminals
    can be removed.
8   Can the check for libelf in configure.ac be removed?


Messages:
8   When using ":q" in a changed file, the error says to "add !".  Add the
    command so that beginners understand it: "use :q!".
8   For 'verbose' level 12 prints commands from source'ed files.  How to skip
    lines that aren't executed?  Perhaps move the echoing to do_cmdline()?
8   Use 'report' for ":bdel"?  (Krishna)  To avoid these messages when using a
    script.
-   Delete message after new command has been entered and have waited for key.
    Perhaps after ten seconds?
-   Make message history available in "msg" variables: msg1, msg2, .. msg9.
8   When reading from stdin allow suppressing the "reading from stdin"
    message.
9   Check handling of overwriting of messages and delays:
    Very wrong: errors while redrawing cause endless loop.
    When switching to another file and screen scrolls because of the long
    message and return must be typed, don't scroll the screen back before
    redrawing.
8   When address range is wrong you only get "Invalid range".  Be a bit more
    specific: Negative, beyond last line, reverse range?  Include the text.
8   Make it possible to ignore errors for a moment ('errorignore'?).  Another
    option to switch off giving error messages ('errorquiet'?).  Also an option
    not to give any messages ('quiet')?  Or ":quiet on", ":quiet off".
    Careful: For a severe error (out of memory), and when the user starts
    typing, error messages must be switched back on.
    Also a flag to ignore error messages for shell commands (for mappings).
-   Option to set time for emsg() sleep.  Interrupt sleep when key is typed?
    Sleep before second message?
8   In Ex silent mode or when reading commands from a file, what exactly is
    not printed and what is?  Check ":print", ":set all", ":args", ":vers",
    etc.  At least there should be no prompt. (Smulders)  And don't clear the
    screen when reading commands from stdin. (Kendall)
    --> Make a difference between informative messages, prompts, etc. and
	error messages, printing text, etc.
8   Window should be redrawn when resizing at the hit-enter prompt.
    Also at the ":tselect" prompt.  Find a generic solution for redrawing when
    a prompt is present (with a callback function?).


Screen updating:
7   Add a string to the 'display' option to make CTRL-E and CTRL-Y scroll one
    screen line, also if this means the first line doesn't start with the
    first character (like what happens with a single line that doesn't fit).
-   screen_line():
    - insert/delete character stuff.
    - improve delete rest of line (spaces at end of line).
-   When moving or resizing window, try to avoid a complete redraw (esp. when
    dragging the status line with the mouse).
-   When 'lazyredraw' set, don't echo :ex commands?  Need a flag to redraw when
    waiting for a character.
8   Add a ":refresh [winnr]" command, to force updating a window.  Useful from
    an event handler where ":normal" can't be used.  Also useful when
    'lazyredraw' is set in a mapping.

Scrolling:
8   Add "zy" command: scroll horizontally to put the cursor in the middle.
6   Add option to set the overlap for CTRL-F and CTRL-B. (Garhi)
-   extend 'scrollbind' option: 'scrollopt' words "search", "relative", etc..
    Also 'e'xecute some commands (search, vertical movements) in all bound
    windows.
7   Add 'scrollbind' feature to make the offset of one window with the next
    one equal to the window height.  When editing one file in both windows it
    looks like each window displays a page of the buffer.
-   Allow scrolling by dragging with the mouse (grab a character and move it
    up/down).  Like the "hand" in Acrobat reader.  Use Alt-LeftMouse for this?
    (Goldfarb)
-   Add command to execute some commands (search, vertical movements) in all
    bound windows.
-   Add 'search' option to 'scrollopt' to allow 'scrollbind' windows to
    be bound by regexp searches
-   Add "z>" and "z<": scroll sideways one screenful. (Campbell)
-   Add option to set the number of lines when not to scroll, instead of the
    fixed number used now (for terminals that scroll slow with a large number
    of lines but not with a single line).


Autoconf:
8   Should use acconfig.h to define prototypes that are used by autoheader.
8   Some compilers don't give an error for "-OPT:Olimit" but a warning. (Webb)
    Add a check for the warning, so that "Olimit" can be added automatically?
-   Autoconf: Use @datadir@ for the system independent files.  Make sure the
    system dependent and system independent files are separated. (Leitner).
-   Add autoconf check for waitpid()/wait4().
-   Remove fcntl() from autoconf, all systems have it?
-   Set default for 'dictionary', add search for dictionary to autoconf.


Perl interface:
8   Rename typemap file to something else?
7   Make buffers accessed as Perl arrays. (Clark)
7   Make it possible to compile with non-ANSI C?
6   Tcl/Tk has the "load" command: load a shared library (.so or .dll).


Shared libraries:
6   Add support for loading shared libraries, and calling functions in it.
	:libload internal-name libname
	:libunload internal-name
	:liblist
	:libcall internal-name function(arg1, arg2, ...)
	:libcall function(arg1, arg2, ...)
    libcall() can have only one integer or String argument at the moment.
6   Have a look on how Perl handles loading dynamic libraries.


Tags:
9   With ":set tags=./tags,../tags" and a tag appears in both tags files it is
    added twice.  Requires figuring out the actual file name for each found
    match.  Remove tag_fname from the match and combine it with the fname in
    the match (without expanding or other things that take time).  When
    'tagrelative' is off tag_fname isn't needed at all.
8   For 'tags' wildcard in the file name is not supported, only in the path.
    This is due to it using |file-searching|. Suboptimal solution would be to
    make the filename or the whole option use |wildcards| globing, better
    would be to merge the 2 kinds of globing. originally (Erik Falor, 2008
    April 18), updated (Ian Kelling, 2008 July 4)
7   Can CTRL-] (jump to tag) include a following "." and "->" to restrict the
    number of possible matches? Check tags file for an item that has members.
    (Flemming Madsen)
8   Scope arguments for ":tag", e.g.: ":tag class:cPage open", like Elvis.
8   When output of ":tselect" is long, getting the more-prompt, should be able
    to type the tag number directly.
7   Add the possibility to use the "-t {tag}" argument multiple times.  Open a
    window for each tag.
7   Make output of ":tselect" a bit nicer.  Use highlighting?
7   Highlight the "tag 1 of >2" message.  New highlight group, or same as "hit
    bottom" search message.
7   When using ":tag" at the top of the tag stack, should add another entry,
    so CTRL-T can bring you back to where you are now AND to where you were
    before the previous ":tag" command. (Webb)
-   When doing "[^I" or "[^D" add position to tag stack.
-   Add command to put current position to tag stack: ":tpush".
-   Add functions to save and restore the tag stack?  Or a command to switch
    to another tag stack?  So that you can do something else and come back to
    what you were working on.
7   When using CTRL-] on someClass::someMethod, separate class from method and
    use ":ta class:someClass someMethod".
    Include C++ tags changes (Bertin).	Change "class::func" tag into "func"
    with "class=class"?  Docs in oldmail/bertin/in.xxx.
7   Add ":tagargs", to set values for fields:
	:tagargs class:someclass file:version.c
	:tagargs clear
    These are then the default values (changes the order of priority in tag
    matching).
7   Support for "gtags" and "global"?  With ":rtag" command?
    There is an example for how to do this in Nvi.
    Or do it like Elvis: 'tagprg' and 'tagprgonce' options. (Yamaguchi)
    The Elvis method is far more flexible, do it that way.
7   Support "col:99" extra field, to position the cursor in that column.  With
    a flag in 'cpoptions' to switch it off again.
7   Better support for jumping to where a function or variable is used.  Use
    the id-utils, with a connection to "gid" (Emacs can do it too).  Add
    ":idselect", which uses an "ID" database (made by "mkid") like "tselect".


Win32 GUI:
8   Make debug mode work while starting up (vim -D).  Open console window for
    the message and input?
7   GvimExt: when there are several existing Vims, move the list to a submenu.
    (Mike McCollister)
8   When using "Edit with Vim" for one file it changes directory, when several
    files are selected and using "Edit with single Vim" the directory isn't
    changed.  At least change directory when the path is the same for all
    files.  Perhaps just use the path of the first file or use the longest
    common part of the path.
8   Add font argument to set the lfCharSet. (Bobcik)
8   Somehow automatically detect the system language and set $LANG, so that
    gettext and menus work.
8   Could keep console open to run multiple commands, to avoid the need to hit
    return in every console.
    Also: Look at how Emacs does run external commands:
	http://www.cs.washington.edu/homes/voelker/ntemacs.html.
8   Need a separate PopUp menu for modeless selection.  Need two new commands:
    Copy selection to clipboard, Paste selection (as typed text).
8   Support copy/paste for other file formats.  At least HTML, perhaps RTF.
    Add "copy special" and "paste special" commands?
7   Use different default colors, to match the current Windows color scheme.
    Sys_WindowText, Sys_Window, etc. (Lionel Schaffhauser)
7   Use <C-Tab> to cycle through open windows (e.g., the find dialog).
7   <Esc> should close a dialog.
7   Keep the console for external commands open.  Don't wait for a key to be
    hit.  Re-open it when the user has closed it anyway.  Or use a prepended
    command: ":nowait {cmd}", or ":quiet", which executes {cmd} without any
    prompts.
7   Should be able to set an option so that when you double click a file that
    is associated with Vim, you can either get a new instance of Vim, or have
    the file added into an already running Vim.
7   The "-P" argument only works for the current codepage.  Use wide
    functions to find the window title.


GUI:
8   Make inputdialog() work for Photon, Amiga.
-   <C--> cannot be mapped.  Should be possible to recognize this as a
    normal "-" with the Ctrl modifier.
7   Implement ":popup" for other systems than Windows.
8   Implement ":tearoff" for other systems than Win32 GUI.
6   Implement ":untearoff": hide a torn-off menu.
8   When using the scrollbar to scroll, don't move the cursor position.  When
    moving the cursor: scroll to the cursor position.
9   Make <S-Insert> paste from the clipboard by default. (Kunze)
7   Menu local to a buffer, like mappings.  Or local to a filetype?
8   In Buffers menu, add a choice whether selecting a buffer opens it in the
    current window, splits the window or uses ":hide".
8   Dragging the mouse pointer outside of a Vim Window should make the text
    scroll.  Return a value from gui_send_mouse_event() to the machine
    specific code to indicate the time in which the event should be repeated.
8   Make it possible to ignore a mouse click when it's used to give Vim (gvim)
    window focus.  Also when a mouse click is used to bring a window to front.
8   Make the split into system independent code and system specific code more
    explicit.  There are too many #ifdefs in gui.c.
    If possible, separate the Vim code completely from the GUI code, to allow
    running them in separate processes.
7   X11: Support cursorColor resource and "-cr" argument.
8   X11 (and others): CTRL-; is not different from ';'.  Set the modifier mask
    to include CTRL for keys where CTRL produces the same ASCII code.
7   Add some code to handle proportional fonts on more systems?  Need to draw
    each character separately (like xterm).  Also for when a double-width font
    is not exactly double-width. (Maeda)
8   Should take font from xterm where gvim was started (if no other default).
8   Selecting font names in X11 is difficult, make a script or something to
    select one.
8   Visual highlighting should keep the same font (bold, italic, etc.).
8   Add flag to 'guioptions' to not put anything in the clipboard at all?
8   Should support a way to use keys that we don't recognize yet.  Add a
    command that adds entries to special_keys somehow.	How do we make this
    portable (X11, Win32, ..)?
7   Add a flag to 'guioptions' that tells not to remove inactive menu items.
    For systems where greying-out or removing menu items is very slow.  The
    menu items would remain visibly normally, but not do anything.
7   Add ":minimize" and ":maximize", which iconize the window and back.
    Useful when using gvim to run a script (e.g. 2html.vim).
7   X11: Is it possible to free allocated colors, so that other programs can
    use them again?  Otherwise, allow disabling allocating the default colors.
    Or allocate an own colormap (check UAE).  With an option to use it.  For
    the commandline, "-install" is mostly used for X11 programs.
7   Should support multi-column menus.
-   Should add option for where to put the "Help" menu: like Motif at the far
    right, or with the other menus (but still at the right).
-   Add menu item to "Keep Insert mode".
8   ":mkgvimrc" command, that includes menus.
6   Big change: Move GUI to separate program "vimgui", to make startup of vim a
    lot faster, but still be able to do "vim -g" or ":gui".
7   More explicit mouse button binding instead of 'mousemodel'?
7   Add option to set the position of the window on the screen.  'windowpos',
    which has a value of "123,456": <x>,<y>.
    Or add a command, like ":winsize"?
7   Add toolbar for more GUIs.
8   Make it possible to use "amenu icon=BuiltIn##", so that the toolbar item
    name can be chosen free.
7   Make it possible to put the toolbar on top, left, right and/or bottom of
    the window?  Allows for softkey-like use.
6   Separate the part of Vim that does the editing from the part that runs the
    GUI.  Communicate through a pseudo-tty.  Vim starts up, creates a
    pty that is connected to the terminal.  When the GUI starts, the pty is
    reconnected to the GUI process.  When the GUI stops, it is connected to
    the terminal again.  Also use the pty for external processes, it looks
    like a vt100 terminal to them.  Vim uses extra commands to communicate GUI
    things.
7   Motif: For a confirm() dialog <Enter> should be ignored when no default
    button selected, <Esc> should close the dialog.
7   When using a pseudo-tty Vim should behave like some terminal (vt52 looks
    simple enough).  Terminal codes to/from shell should be translated.
-   Would it be useful to be able to quit the GUI and go back to the terminal
    where it was started from?
7   Support "-visual <type>" command line argument.


Autocommands:
9   Rework the code from FEAT_OSFILETYPE for autocmd-osfiletypes to use
    'filetype'.  Only for when the current buffer is known.
-   Put autocommand event names in a hashtable for faster lookup?
8   When the SwapExists event is triggered, provide information about the
    swap file, e.g., whether the process is running, file was modified, etc.
    Must be possible to check the situation that it's probably OK to delete
    the swap file. (Marc Merlin)
8   When all the patterns for an event are "*" there is no need to expand
    buffer names to a full path.  This can be slow for NFS.
7   For autocommand events that trigger multiple times per buffer (e.g.,
    CursorHold), go through the list once and cache the result for a specific
    buffer.  Invalidate the cache when adding/deleting autocommands or
    changing the buffer name.
7   Add TagJump event: do something after jumping to a tag.
8   Add "TagJumpFile" autocommand: When jumping to another file for a tag.
    Can be used to open "main.c.gz" when "main.c" isn't found.
8   Use another option than 'updatetime' for the CursorHold event.  The two
    things are unrelated for the user (but the implementation is more
    difficult).
7   Add autocommand event for when a buffer cannot be abandoned.  So that the
    user can define the action taking (autowrite, dialog, fail) based on the
    kind of file. (Yakov Lerner)  Or is BufLeave sufficient?
8   Autocommand for when modified files have been found, when getting input
    focus again (e.g., FileChangedFocus).
    Check when: getting focus, jumping to another buffer, ...
8   Autocommands should not change registers.  And marks?  And the jumplist?
    And anything else?  Add a command to save and restore these things.
8   Add autocommands, user functions and user commands to ":mkvimrc".
6   Add KeymapChanged event, so that the effects of a different keymap can be
    handled (e.g., other font) (Ron Aaron)
7   When trying to open a directory, trigger an OpenDirectory event.
7   Add file type in front of file pattern: <d> for directory, <l> for link,
    <x> for executable, etc.  With commas to separate alternatives.  The
    autocommand is only executed when both the file type AND the file pattern
    match. (Leonard)
5   Add option that specifies extensions which are to be discarded from the
    file name.  E.g. 'ausuffix', with ".gz,.orig".  Such that file.c.gz will
    trigger the "*.c" autocommands.  (Belabas)
7   Add something to break the autocommands for the current event, and for
    what follows.  Useful for a "BufWritePre" that wants to avoid writing the
    file.
8   When editing "tt.gz", which is in DOS format, 'fileformat' stays at
    "unix", thus writing the file changes it.  Somehow detect that the read
    command used dos fileformat.  Same for 'fileencoding'.
-   Add events to autocommands:
    Error	    - When an error happens
    NormalEnter	    - Entering Normal mode
    ReplaceEnter    - Entering Replace mode
    CmdEnter	    - Entering Cmdline mode (with type of cmdline to allow
			different mapping)
    VisualEnter	    - Entering Visual mode
    *Leave	    - Leaving a mode (in pair with the above *Enter)
    VimLeaveCheck    - Before Vim decides to exit, so that it can be cancelled
		      when exiting isn't a good idea.
    CursorHoldC     - CursorHold while command-line editing
    WinMoved	    - when windows have been moved around, e.g, ":wincmd J"
    SearchPost	    - After doing a search command (e.g. to do "M")
    PreDirChanged/PostDirChanged
		    - Before/after ":cd" has been used (for changing the
		      window title)
    ShutDown	    - when the system is about to shut down
    InsertCharPost  - user typed a character in Insert mode, after inserting
		      the char.
    BufModified	    - When a buffer becomes modified, or unmodified (for
		      putting a [+] in the window title or checking out the
		      file from CVS).
    BufFirstChange  - When making a change, when 'modified' is set.  Can be
		      used to do a :preserve for remote files.
    BufChange	    - after a change was made.  Set some variables to indicate
		      the position and number of inserted/deleted lines, so
		      that marks can be updated.  HierAssist has patch to add
		      BufChangePre, BufChangePost and RevertBuf. (Shah)
    ViewChanged	    - triggered when the text scrolls and when the window size
		      changes.
    WinResized	    - After a window has been resized
    WinClose	    - Just before closing a window
-   Write the file now and then ('autosave'):
				  *'autosave'* *'as'* *'noautosave'* *'noas'*
    'autosave' 'as' number  (default 0)
	    Automatically write the current buffer to file N seconds after the
	    last change has been made and when |'modified'| is still set.
	    Default: 0 = do not autosave the buffer.
    Alternative: have 'autosave' use 'updatetime' and 'updatecount' but make
    them save the file itself besides the swapfile.


Omni completion:
-   Add a flag to 'complete' to be able to do omni completion with CTRL-N (and
    mix it with other kinds of completion).
-   Ideas from the Vim 7 BOF at SANE:
	- For interpreted languages, use the interpreter to obtain information.
	  Should work for Java (Eclipse does this), Python, Tcl, etc.
	  Richard Emberson mentioned working on an interface to Java.
	- Check Readline for its completion interface.
-   Ideas from others:
	http://www.wholetomato.com/
	http://www.vim.org/scripts/script.php?script_id=747
	    http://sourceforge.net/projects/insenvim
		or http://insenvim.sourceforge.net
	    Java, XML, HTML, C++, JSP, SQL, C#
	    MS-Windows only, lots of dependencies (e.g. Perl, Internet
		explorer), uses .dll shared libraries.
	    For C++ uses $INCLUDE environment var.
	    Uses Perl for C++.
	    Uses ctags to find the info:
		ctags -f $allTagsFile --fields=+aiKmnsSz --language-force=C++ --C++-kinds=+cefgmnpsut-dlux -u $files
	www.vim.org script 1213 (Java Development Environment) (Fuchuan Wang)
	IComplete: http://www.vim.org/scripts/script.php?script_id=1265
	    and http://stud4.tuwien.ac.at/~e0125672/icomplete/
	http://cedet.sourceforge.net/intellisense.shtml (for Emacs)
	Ivan Villanueva has something for Java.
	Emacs: http://www.xref-tech.com/xrefactory/more_c_completion.html
	Completion in .NET framework SharpDevelop: http://www.icsharpcode.net
-   Pre-expand abbreviations, show which abbrevs would match?


Insert mode completion/expansion:
-   GUI implementation of the popup menu.
7   When searching in other files the name flash by, too fast to read.  Only
    display a name every second or so, like with ":vimgrep".
7   When expanding file names with an environment variable, add the match with
    the unexpanded var.  So $HOME/tm expands to "/home/guy/tmp" and
    "$HOME/tmp"
8   When there is no word before the cursor but something like "sys." complete
    with "sys.".  Works well for C and similar languages.
9   ^X^L completion doesn't repeat correctly.  It uses the first match with
    the last added line, instead of continuing where the last match ended.
    (Webb)
8   Add option to set different behavior for Insert mode completion:
    - ignore/match case
    - different characters than 'iskeyword'
8   Add option 'isexpand', containing characters when doing expansion (so that
    "." and "\" can be included, without changing 'iskeyword'). (Goldfarb)
    Also: 'istagword': characters used for CTRL-].
    When 'isexpand' or 'istagword' are empty, use 'iskeyword'.
    Alternative: Use a pattern so that start and end of a keyword can be
    defined, only allow dash in the middle, etc.
8   Add a command to undo the completion, go back to the original text.
7   Completion of an abbreviation: Can leave letters out, like what Instant
    text does: www.textware.com
8   Use the class information in the tags file to do context-sensitive
    completion.  After "foo." complete all member functions/variables of
    "foo".  Need to search backwards for the class definition of foo.
    Should work for C++ and Java.
    Even more context would be nice: "import java.^N" -> "io", "lang", etc.
7   When expanding $HOME/dir with ^X^F keep the $HOME (with an option?).
7   Add CTRL-X command in Insert mode like CTRL-X CTRL-N, that completes WORDS
    instead of words.
8   Add CTRL-X CTRL-R: complete words from register contents.
8   Add completion of previously inserted texts (like what CTRL-A does).
    Requires remembering a number of insertions.
8   Add 'f' flag to 'complete': Expand file names.
    Also apply 'complete' to whole line completion.
-   Add a flag to 'complete' to only scan local header files, not system
    header files. (Andri Moell)
-   Make it possible to search include files in several places.  Use the
    'path' option?  Can this be done with the dictionary completion (use
    wildcards in the file name)?
-   Make CTRL-X CTRL-K do a binary search in the dictionary (if it's sorted).
-   Speed up CTRL-X CTRL-K dictionary searching (don't use a regexp?).
-   Set a mark at the position where the match was found (file mark, could
    be in another file).
-   Add CTRL-A command in CTRL-X mode: show all matches.
-   Make CTRL-X CTRL-L use the 'complete' option?
-   Add command in CTRL-X mode to add following words to the completed string
    (e.g. to complete "Pointer->element" with CTRL-X CTRL-P CTRL-W CTRL-W)
-   CTRL-X CTRL-F: Use 'path' to find completions.
-   CTRL-X CTRL-F: Option to use forward slashes on MS-Windows?
-   CTRL-X CTRL-F: Don't replace "$VIM" with the actual value. (Kelly)
-   Allow listing all matches in some way (and picking one from the list).


Command line editing:
7   Add commands (keys) to delete from the cursor to the end of the command
    line.
8   Custom completion of user commands can't use the standard completion
    functions.  Add a hook to invoke a user function that returns the type of
    completion to be done: "file", "tag", "custom", etc.
-   Add flags to 'whichwrap' for command line editing (cursor right at end of
    lines wraps to start of line).
-   Make editing the command line work like Insert mode in a single-line view
    on a buffer that contains the command line history.  But this has many
    disadvantages, only implement it when these can be solved.  Elvis has run
    into these, see remarks from Steve (~/Mail/oldmail/kirkendall/in.00012).
    - Going back in history and editing a line there would change the history.
      Would still need to keep a copy of the history elsewhere.  Like the
      cmdwin does now already.
    - Use CTRL-O to execute one Normal mode command.  How to switch to normal
      mode for more commands?  <Esc> should cancel the command line.  CTRL-T?
    - To allow "/" and "= need to recursively call getcmdline(), overwrite the
      cmdline.  But then we are editing a command-line again.  How to avoid
      that the user gets confused by the stack of command lines?
    - Use edit() for normal cmdline editing?  Would have to integrate
      getcmdline() into edit().  Need to solve conflicts between Insert mode
      and Command-line mode commands.  Make it work like Korn shell and tcsh.
      Problems:
	- Insert: completion with 'wildchar'
	- Insert: use cmdline abbreviations
	- Insert: CTRL-D deletes indent instead of listing matches
	- Normal: no CTRL-W commands
	- Normal: no ":" commands?
	- Normal: allow Visual mode only within one line.
    - where to show insert/normal mode message?  Change highlighting of
      character in first column?
    - Implementation ideas:
      - Set "curwin" and "curbuf" to the command line window and buffer.
      - curwin->w_topline is always equal to curwin->w_cursor.lnum.
      - never set 'number', no folding, etc.  No status line.
      - sync undo after entering a command line?
      - use NV_NOCL flag for commands that are not allowed in Command-line
	Mode.


Command line completion:
8   Change expand_interactively into a flag that is passed as an argument.
8   With command line completion after '%' and '#', expand current/alternate
    file name, so it can be edited.  Also with modifiers, such as "%:h".
8   When completing command names, either sort them on the long name, or list
    them with the optional part inside [].
8   Add an option to ignore case when doing interactive completion.  So that
    ":e file<Tab>" also lists "Filelist" (sorted after matching case matches).
7   Completion of ":map x ": fill in the current mapping, so that it can be
    edited. (Sven Guckes)
-   For 'wildmenu': Simplify "../bar" when possible.
-   When using <Up> in wildmenu mode for a submenu, should go back to the
    current menu, not the first one.  E.g., ":emenu File.Save<Up>".
8   When using backtick expansion, the external command may write a greeting
    message.  Add an option or commands to remove lines that match a regexp?
7   When listing matches of files, display the common path separately from the
    file names, if this makes the listing shorter. (Webb)
-   Add command line completion for ":ilist" and friends, show matching
    identifiers (Webb).
8   Add command line completion for "old value" of a command.  ":args <key>"
    would result in the current list of arguments, which you can then edit.
7   Add command line completion with CTRL-X, just like Insert mode completion.
    Useful for ":s/word/xx/".
-   Add command to go back to the text as it was before completion started.
    Also to be used for <Up> in the command line.
-   Add 'wildlongest' option: Key to use to find longest common match for
    command line completion (default CTRL-L), like 'wildchar'. (Cregut)
    Also: when there are several matches, show them line a CTRL-D.


Command line history:
-   Add "KeyWasTyped" flag: It's reset before each command and set when a
    character from the keyboard is consumed. Value is used to decide to put a
    command line in history or not. Put line in history if it didn't
    completely resulted from one mapping.
-   When using ":browse", also put the resulting edit command in the history,
    so that it can be repeated. (Demirel)


Insert mode:
9   When 'autoindent' is set, hitting <CR> twice, while there is text after
    the cursor, doesn't delete the autoindent in the resulting blank line.
    (Rich Wales) This is Vi compatible, but it looks like a bug.
8   When using CTRL-O in Insert mode, then executing an insert command
    "a" or "i", should we return to Insert mode after <Esc>? (Eggink)
    Perhaps it can be allowed a single time, to be able to do
    "<C-O>10axyz<Esc>".  Nesting this further is confusing.
    ":map <F2> 5aabc<Esc>" works only once from Insert mode.
8   When using CTRL-G CTRL-O do like CTRL-\ CTRL-O, but when returning with
    the cursor in the same position and the text didn't change continue the
    same change, so that "." repeats the whole insert.
7   Use CTRL-G <count> to repeat what follows.  Useful for inserting a
    character multiple times or repeating CTRL-Y.
-   Make 'revins' work in Replace mode.
7   Use 'matchpairs' for 'showmatch': When inserting a character check if it
    appears in the rhs of 'matchpairs'.
-   In Insert mode (and command line editing?): Allow undo of the last typed
    character.	This is useful for CTRL-U, CTRL-W, delete and backspace, and
    also for characters that wrap to the next line.
    Also: be able to undo CTRL-R (insert register).
    Possibly use 'backspace'="whole" for a mode where at least a <CR> that
    inserts autoindent is undone by a single <BS>.
-   Use CTRL-G in Insert mode for an extra range of commands, like "g" in
    Normal mode.
-   Make 'paste' work without resetting other options, but override their
    value.  Avoids problems when changing files and modelines or autocommands
    are used.
-   When typing CTRL-V and a digit higher than 2, only expect two digits.
-   Insert binary numbers with CTRL-V b.
-   Make it possible to undo <BS>, <C-W> and <C-U>.  Bash uses CTRL-Y.


'cindent', 'smartindent':
9   Wrapping a variable initialization should have extra indent:
	char * veryLongName =
		"very long string"
    Also check if "cino=+10" is used correctly.
8   Lisp indenting: "\\" confuses the indenter. (Dorai Sitaram, 2006 May 17)
8   Why are continuation lines outside of a {} block not indented?  E.g.:
	long_type foo =
	value;
8   Java: Inside an anonymous class, after an "else" or "try" the indent is
    too small. (Vincent Bergbauer)
    Problem of using {} inside (), 'cindent' doesn't work then.
8   In C++ it's possible to have {} inside (): (Kirshna)
		func(
			new String[] {
			    "asdf",
			    "asdf"
			}
		    );
8   In C++ a function isn't recognized inside a namespace:
    (Chow Loong Jin)
	namespace {
	    int
		 func(int arg) {
		 }
	}
6   Add 'cino' flag for this function argument layout: (Spencer Collyer)
	    func( arg1
	        , arg2
		, arg3
		);
7   Add separate "(0" option into inside/outside a function (Zellner):
	func(
	   int x)	// indent like "(4"
	{
	   if (a
	       && b)	// indent like "(0"
9   Using "{" in a comment: (Helmut Stiegler)
    if (a)
    {
	    if (b)
	    {
		    // {
	    }
	    } <-- this is indented incorrect
    Problem is that find_start_brace() checks for the matching brace to be in
    a comment, but not braces in between.  Requires adding a comment check to
    findmatchlimit().
-   Make smartindenting configurable.  Add 'sioptions', e.g. '#' setting the
    indent to 0 should be switched on/off.
7   Support ANSI style function header, with each argument on its own line.
-   "[p" and "]p" should use 'cindent' code if it's on (only for the first
    line).
-   Add option to 'cindent' to set indent for comments outside of {}?
-   Make a command to line up a comment after a code line with a previous
    comment after a code line.	Can 'cindent' do this automatically?
-   When 'cindent'ing a '}', showmatch is done before fixing the indent.  It
    looks better when the indent is fixed before the showmatch. (Webb)
-   Add option to make indenting work in comments too (for commented-out
    code), unless the line starts with "*".
-   Don't use 'cindent' when doing formatting with "gq"?
-   When formatting a comment after some text, insert the '*' for the new line
    (indent is correct if 'cindent' is set, but '*' doesn't get inserted).
8   When 'comments' has both "s1:/*,mb:*,ex:*/" and "s1:(*,mb:*,ex:*)", the
    'x' flag always uses the first match.  Need to continue looking for more
    matches of "*" and remember all characters that could end the comment.
-   For smartindent: When typing 'else' line it up with matching 'if'.
-   'smartindent': allow patterns in 'cinwords', for e.g. TeX files, where
    lines start with "\item".
-   Support this style of comments (with an option): (Brown)
	/* here is a comment that
	is just autoindented, and
	nothing else */
-   Add words to 'cinwords' to reduce the indent, e.g., "end" or "fi".
7   Use Tabs for the indent of starting lines, pad with spaces for
    continuation lines.  Allows changing 'tabstop' without messing up the
    indents.
    Patch by Lech Lorens, 2010 Mar.  Update by James McCoy, 2014 Mar 15.


Java:
8   Can have {} constructs inside parens.  Include changes from Steve
    Odendahl?
8   Recognize "import java.util.Vector" and use $CLASSPATH to find files for
    "[i" commands and friends.
-   For files found with 'include': handle "*" in included name, for Java.
    (Jason)
-   How to make a "package java.util" cause all classes in the package to be
    searched?  Also for "import java.util.*". (Mark Brophy)


'comments':
8   When formatting C comments that are after code, the "*" isn't repeated
    like it's done when there is no code.  And there is no automatic wrapping.
    Recognize comments that come after code.  Should insert the comment leader
    when it's "#" or "//".
    Other way around: when a C command starts with "* 4" the "*" is repeated
    while it should not.  Use syntax HL comment recognition?
7   When using "comments=fg:--", Vim inserts three spaces for a new line.
    When hitting a TAB, these spaces could be removed.
7   The 'n'esting flag doesn't do the indenting of the last (rightmost) item.
6   Make strings in 'comments' option a RE, to be able to match more
    complicated things. (Phillipps)  Use a special flag to indicate that a
    regexp is used.
8   Make the 'comments' option with "/* * */" lines only repeat the "*" line
    when there is a "/*" before it?  Or include this in 'cindent'?


Virtual edit:
8   Make the horizontal scrollbar work to move the text further left.
7   Allow specifying it separately for Tabs and beyond end-of-line?


Text objects:
8   Add text object for fold, so that it can be yanked when it's open.
8   Add test script for text object commands "aw", "iW", etc.
8   Add text object for part of a CamelHumpedWord and under_scored_word.
    (Scott Graham)  "ac" and "au"?
8   Add a text object for any kind of quoting, also with multi-byte
    characters.  Option to specify what quotes are recognized (default: all)
    use "aq" and "iq".  Use 'quotepairs' to define pairs of quotes, like
    'matchpairs'?
8   Add text object for any kind of parens, also multi-byte ones.
8   Add a way to make an ":omap" for a user-defined text object.  Requires
    changing the starting position in oap->start.
8   Add "gp" and "gP" commands: insert text and make sure there is a single
    space before it, unless at the start of the line, and after it, unless at
    the end of the line or before a ".".
7   Add objects with backwards extension?  Use "I" and "A".  Thus "2dAs"
    deletes the current and previous sentence. (Jens Paulus)
7   Add "g{" and "g}" to move to the first/last character of a paragraph
    (instead of the line just before/after a paragraph as with "{" and "}").
6   Ignore comment leaders for objects.  Make "das" work in reply-email.
5   Make it possible to use syntax group matches as a text object.  For
    example, define a "ccItem" group, then do "da<ccItem>" to delete one.
    Or, maybe just define "dai", delete-an-item, to delete the syntax item the
    cursor is on.


Select mode:
8   In blockwise mode, typed characters are inserted in front of the block,
    backspace deletes a column before the block. (Steve Hall)
7   Alt-leftmouse starts block mode selection in MS Word.
    See http://vim.wikia.com/wiki/Use_Alt-Mouse_to_select_blockwise.
7   Add Cmdline-select mode.  Like Select mode, but used on the command line.
    - Change gui_send_mouse_event() to pass on mouse events when 'mouse'
      contains 'C' or 'A'.
    - Catch mouse events in ex_getln.c.  Also shift-cursor, etc., like in
      normal_cmd().
    - remember start and end of selection in cmdline_info.
    - Typing text replaces the selection.


Visual mode:
8   Support using "." in Visual mode. Use the operator applied to the Visual
    selection, if possible.
-   When dragging the Visual selection with the mouse and 'scrolloff' is zero,
    behave like 'scrolloff' is one, so that the text scrolls when the pointer
    is in the top line.
-   Displaying size of Visual area: use 24-33 column display.
    When selecting multiple lines, up to about a screenful, also count the
    characters.
8   When using "I" or "A" in Visual block mode, short lines do not get the new
    text.  Make it possible to add the text to short lines too, with padding
    where needed.
7   With a Visual block selected, "2x" deletes a block of double the width,
    "3y" yanks a block of triple width, etc.
7   When selecting linewise, using "itext" should insert "text" at the start
    of each selected line.
8   What is "R" supposed to do in Visual mode?
8   Make Visual mode local to the buffer.  Allow changing to another buffer.
    When starting a new Visual selection, remove the Visual selection in any
    other buffer. (Ron Aaron)
8   Support dragging the Visual area to drop it somewhere else. (Ron Aaron,
    Ben Godfrey)
7   Support dragging the Visual area to drop it in another program, and
    receive dropped text from another program. (Ben Godfrey)
7   With blockwise Visual mode and "c", "C", "I", "A", etc., allow the use of
    a <CR>.  The entered lines are repeated over the Visual area.
7   Filtering a block should only apply to the block, not to the whole lines.
    When the number of lines is increased, add lines. When decreased, pad with
    spaces or delete? Use ":`<,`>" on the command line.
8   After filtering the Visual area, make "gv" select the filtered text?
    Currently "gv" only selects a single line, not useful.
7   Don't move the cursor when scrolling?  Needed when the selection should
    stay the same.  Scroll to the cursor at any movement command.  With an
    option!
7   In Visual block mode, need to be able to define a corner on a position
    that doesn't have text?  Also: when using the mouse, be able to select
    part of a TAB.  Even more: Add a mode where the cursor can be on a screen
    position where there is no text.  When typing, add spaces to fill the gap.
    Other solution: Always use curswant, so that you can move the cursor to
    the right column, and then use up/down movements to select the line,
    without changing the column.
6   ":left" and ":right" should work in Visual block mode.
7   CTRL-I and CTRL-O should work in Visual mode, but only jump to marks in the
    current buffer.
6   In non-Block mode, "I" should insert the same text in front of each line,
    before the first non-blank, "gI" in column 1.
6   In non-Block mode, "A" should append the same text after each line.
6   When in blockwise visual selection (CTRL-V), allow cursor to be placed
    right of the line.  Could also allow cursor to be placed anywhere on a TAB
    or other special character.
6   Add commands to move selected text, without deselecting.


More advanced repeating commands:
-   Add "." command for visual mode: redo last visual command (e.g. ":fmt").
-   Add command to repeat last movement.  Including count.
-   Add "." command after operator: repeat last command of same operator.  E.g.
    "c." will repeat last change, also when "x" used since then (Webb).
    "y." will repeat last yank.
    "c2." will repeat the last but one change?
    Also: keep history of Normal mode commands, add command to list the history
    and/or pick an older command.
-   History stack for . command?  Use "g." command.


Mappings and Abbreviations:
8   When "0" is mapped (it is a movement command) this mapping should not be
    used after typing another number, e.g. "20l". (Charles Campbell)
    Is this possible without disabling the mapping of the following command?
8   Should mapping <C-A> and <C-S-A> both work?
7   ":abbr b byte", append "b " to an existing word still expands to "byte".
    This is Vi compatible, but can we avoid it anyway?
8   To make a mapping work with a prepended "x to select a register, store the
    last _typed_ register name and access it with "&.
8   Add ":amap", like ":amenu".
7   Add a mapping that works always, for remapping the keyboard.
8   Add ":cab!", abbreviations that only apply to Command-line mode and not to
    entering search strings.
8   Add a flag to ":abbrev" to eat the character that triggers the
    abbreviation.  Thus "abb ab xxx" and typing "ab<Space>" inserts "xxx" and
    not the <Space>.
8   Give a warning when using CTRL-C in the lhs of a mapping.  It will never
    (?) work.
7   Add <0x8f> (hex), <033> (octal) and <123> (decimal) to <> notation?
7   When someone tries to unmap with a trailing space, and it fails, try
    unmapping without the trailing space.  Helps for ":unmap xx | unmap yy".
6   Context-sensitive abbreviations: Specify syntax group(s) in which the
    abbreviations are to be used.
-   Add mappings that take arguments.  Could work like the ":s" command.  For
    example, for a mouse escape sequence:
	:mapexp  <Esc>{\([0-9]*\),\([0-9]*\);	H\1j\2l
-   Add optional <Number> argument for mappings:
    :map <Number>q	     ^W^W<Number>G
    :map <Number>q<Number>t  ^W^W<Number1-1>G<Number2>l
    :map q<Char>	    :s/<Char>/\u\0/g
    Or implicit:
    :map q			<Register>d<Number>$
-   Add command to repeat a whole mapping ("." only repeats the last change in
    a mapping).  Also: Repeat a whole insert command, including any mappings
    that it included.  Sort-of automatic recording?
-   Include an option (or flag to 'cpoptions') that makes errors in mappings
    not flush the rest of the mapping (like nvi does).
-   Use context sensitiveness of completion to switch abbreviations and
    mappings off for :unab and :unmap.
6   When using mappings in Insert mode, insert characters for incomplete
    mappings first, then remove them again when a mapping matches.  Avoids
    that characters that are the start of some mapping are not shown until you
    hit another character.
-   Add mappings for replace mode: ":rmap".  How do we then enter mappings for
    non-replace Insert mode?
-   Add separate mappings for Visual-character/block/line mode?
-   Add 'mapstop' command, to stop recursive mappings.
-   List mappings that have a raw escape sequence both with the name of the key
    for that escape sequence (if there is one) and the sequence itself.
-   List mappings: Once with special keys listed as <>, once with meta chars as
    <M-a>, once with the byte values (octal?).  Sort of "spell mapping" command?
-   When entering mappings: Add the possibility to enter meta keys like they
    are displayed, within <>: <M-a>, <~@> or <|a>.
-   Allow multiple arguments to :unmap.
-   Command to show keys that are not used and available for mapping
    ":freekeys".
-   Allow any character except white space in abbreviations lhs (Riehm).


Incsearch:
-   Add a limit to the number of lines that are searched for 'incsearch'?
-   When no match is found and the user types more, the screen is redrawn
    anyway.  Could skip that.  Esp. if the line wraps and the text is scrolled
    up every time.
-   Temporarily open folds to show where the search ends up.  Restore the
    folds when going to another line.
-   When incsearch used and hitting return, no need to search again in many
    cases, saves a lot of time in big files. (Slootman wants to work on this?)
    When not using special characters, can continue search from the last match
    (or not at all, when there was no match).  See oldmail/webb/in.872.


Searching:
9   Should have an option for :vimgrep to find lines without a match.
8   Add "g/" and "gb" to search for a pattern in the Visually selected text?
    "g?" is already used for rot13.
    The vis.vim script has a ":S" command that does something like this.
    Can use "g/" in Normal mode, uses the '< to '> area.
    Use "&/" for searching the text in the Visual area?
9   Add "v" offset: "/pat/v": search for pattern and start Visual mode on the
    matching text.
8   Add a modifier to interpret a space like "\_s\+" to make it much easier to
    search for a phrase.
8   Add a mechanism for recursiveness: "\@(([^()]*\@g[^()]*)\)".  \@g stands
    for "go recursive here" and \@( \) marks the recursive part.
    Perl does it this way:
	    $paren = qr/ \(( [^()] | (??{ $paren }) )* \) /x;
    Here $paren is evaluated when it's encountered.  This is like a regexp
    inside a regexp.  In the above terms it would be:
	    \@((\([^()]\|\@g\)*)\)
8   Show the progress every second.  Could use the code that checks for CTRL-C
    to find out how much time has passed.  Or use SIGALRM.  Where to show the
    number?
7   Support for approximate-regexps to find similar words (agrep
    http://www.tgries.de/agrep/ tre: http://laurikari.net/tre/index.html).
8   Add an item for a big character range, so that one can search for a
    chinese character: \z[234-1234]  or \z[XX-YY] or \z[0x23-0x234].
7   Add an item stack to allow matching ().  One side is "push X on
    the stack if previous atom matched".  Other side is "match with top of
    stack, pop it when it matches".  Use "\@pX" and "\@m"?
	Example: \((\@p).\{-}\@m\)*
7   Add a flag to "/pat/" to discard an error.  Useful to continue a mapping
    when a search fails.  Could be "/pat/E" (e is already used for end offset).
7   Add pattern item to use properties of Unicode characters.  In Perl it's
    "\p{L}" for a letter.  See Regular Expression Pocket Reference.
8   Would it be possible to allow ":23,45/pat/flags" to search for "pat" in
    lines 23 to 45?  Or does this conflict with Ex range syntax?
8   Allow identical pairs in 'matchpairs'.  Restrict the search to the current
    line.
7   Allow longer pairs in 'matchpairs'.  Use matchit.vim as an
    example.
8   Make it possible to define the character that "%" checks for in
    #if/#endif.  For nmake it's !if/!endif.
-   For "%" command: set hierarchy for which things include other things that
    should be ignored (like "*/" or "#endif" inside /* */).
    Also: use "%" to jump from start to end of syntax region and back.
    Alternative: use matchit.vim
8   A pattern like "\([^a]\+\)\+" takes an awful long time.  Recognize that
    the recursive "\+" is meaningless and optimize for it.
    This one is also very slow on "/* some comment */": "^\/\*\(.*[^/]\)*$".
7   Recognize "[a-z]", "[0-9]", etc. and replace them with the faster "\l" and
    "\d".
7   Add a way to specify characters in <C-M> or <Key> form.  Could be
    \%<C-M>.
8   Add an argument after ":s/pat/str/" for a range of matches.  For example,
    ":s/pat/str/#3-4" to replace only the third and fourth "pat" in a line.
8   When 'iskeyword' is changed the matches from 'hlsearch' may change. (Benji
    Fisher)  redraw if some options are set while 'hlsearch' is set?
8   Add an option not to use 'hlsearch' highlighting for ":s" and ":g"
    commands. (Kahn)  It would work like ":noh" is used after that command.
    Also: An extra flag to do this once, and a flag to keep the existing
    search pattern.
-   Make 'hlsearch' a local/global option, so that it can be disabled in some
    of the windows.
-   Add \%h{group-name}; to search for a specific highlight group.
    Add \%s{syntax-group}; to search for a specific syntax group.
-   Support Perl regexp.  Use PCRE (Perl Compatible RE) package. (Shade)
    Or translate the pattern to a Vim one.
    Don't switch on with an option for typed commands/mappings/functions, it's
    too confusing.  Use "\@@" in the pattern, to avoid incompatibilities.
8   Add a way to access the last substitute text, what is used for ":s//~/".
    Can't use the ~ register, it's already used for drag & drop.
-   Remember flags for backreferenced items, so that "*" can be used after it.
    Check with "\(\S\)\1\{3}". (Hemmerling)
8   Flags that apply to the whole pattern.
    This works for all places where a regexp is used.
    Add "\q" to not store this pattern as the last search pattern?
-   Add flags to search command (also for ":s"?):
    i	ignore case
    I	use case
    p	use Perl regexp syntax (or POSIX?)
    v	use Vi regexp syntax
    f	forget pattern, don't keep it for "n" command
    F   remember pattern, keep it for "n" command
    Perl uses these too:
    e	evaluate the right side as an expression (Perl only)
    m	multiple line expression (we don't need it)
    o	compile only once (Perl only)
    s	single line expression (we don't need it)
    x	extended regexp (we don't need it)
    When used after ":g" command, backslash needed to avoid confusion with the
    following command.
    Add 'searchflags' for default flags (replaces 'gdefault').
-   Add command to display the last used substitute pattern and last used
    pattern. (Margo)  Maybe make it accessible through a register (like "/
    for search string)?
7   Use T-search algorithm, to speed up searching for strings without special
    characters.  See C't article, August 1997.
-   Add 'fuzzycase' option, so that case doesn't matter, and '-' and '_' are
    equivalent (for Unix filenames).
-   Add 'v' flag to search command: enter Visual mode, with the matching text
    as Visual area. (variation on idea from Bertin)
-   Searching: "/this//that/" should find "that" after "this".
-   Add global search commands: Instead of wrapping at the end of the buffer,
    they continue in another buffer.  Use flag after search pattern:
    a	for the next file in the argument list
    f	for file in the buffer list
    w	for file edited in a window.
    e.g. "/pat/f".  Then "n" and "N" work through files too.  "f" flag also for
    ":s/pat/foo/f"???  Then when 'autowrite' and 'hidden' are both not set, ask
    before saving files: "Save modified buffer "/path/file"? (Yes/Hide/No
    Save-all/hide-All/Quit) ".
-   ":s/pat/foo/3": find 3rd match of "pat", like sed. (Thomas Koehler)
7   When searching with 'n' give message when getting back where the search
    first started.  Remember start of search in '/ mark.
7   Add option that scrolls screen to put cursor in middle of screen after
    search always/when off-screen/never.  And after a ":tag" command.  Maybe
    specify how many lines below the screen causes a redraw with the cursor in
    the middle (default would be half a screen, zero means always).
6   Support multiple search buffers, so macros can be made without side
    effects.
7   From xvim: Allow a newline in search patterns (also for :s, can delete
    newline).  Add BOW, EOW, NEWL, NLORANY, NLBUTANY, magic 'n' and 'r', etc.
    [not in xvim:] Add option to switch on matches crossing ONE line boundary.
7   Add ":iselect", a combination of ":ilist" and ":tselect". (Aaron) (Zellner)
    Also ":dselect".


Undo:
9   ":gundo" command: global undo.  Undoes changes spread over multiple files
    in the order they were made.  Also ":gredo".  Both with a count.  Useful
    when tests fail after making changes and you forgot in which files.
9   After undo/redo, in the message show whether the buffer is modified or
    not.
8   Search for pattern in undo tree, showing when it happened and the text
    state, so that you can jump to it.
8   Undo tree: visually show the tree somehow (Damian Conway)
    Show only the leaves, indicating how many changed from the branch and the
    timestamp?
    Put branch with most recent change on the left, older changes get more
    indent?
-   Make it possible to undo all the commands from a mapping, including a
    trailing unfinished command, e.g. for ":map K iX^[r".
-   When accidentally hitting "R" instead of Ctrl-R, further Ctrl-R is not
    possible, even when typing <Esc> immediately. (Grahn)  Also for "i", "a",
    etc.  Postpone saving for undo until something is really inserted?
8   When Inserting a lot of text, it can only be undone as a whole.  Make undo
    sync points at every line or word.  Could recognize the start of a new
    word (white space and then non-white space) and backspacing.
    Can already use CTRL-G u, but that requires remapping a lot of things.
8   Make undo more memory-efficient: Compare text before and after change,
    only remember the lines that really changed.
7   Add undo for a range of lines.  Can change these back to a previous
    version without changing the rest of the file.  Stop doing this when a
    change includes only some of these lines and changes the line count.  Need
    to store these undo actions as a separate change that can be undone.
-   For u_save() include the column number. This can be used to set '[ and '].
    And in the future the undo can be made more efficient (Webb).
-   In out-of-memory situations: Free allocated space in undo, and reduce the
    number of undo levels (with confirmation).
-   Instead of [+], give the number of changes since the last write: [+123].
    When undoing to before the last write, change this to a negative number:
    [-99].
-   With undo with simple line delete/insert: optimize screen updating.
-   When executing macro's: Save each line for undo only once.
-   When doing a global substitute, causing almost all lines to be changed,
    undo info becomes very big.  Put undo info in swap file??


Buffer list:
7   Command to execute a command in another buffer: ":inbuf {bufname} {cmd}".
    Also for other windows: ":inwin {winnr} {cmd}".  How to make sure that
    this works properly for all commands, and still be able to return to the
    current buffer/window?  E.g.: ":inbuf xxx only".
8   Add File.{recent_files} menu entries: Recently edited files.
    Ron Aaron has a plugin for this: mru.vim.
8   Unix: Check all uses of fnamecmp() and fnamencmp() if they should check
    inode too.
7   Add another number for a buffer, which is visible for the user.  When
    creating a new buffer, use the lowest number not in use (or the highest
    number in use plus one?).
7   Offer some buffer selection from the command line?  Like using ":ls" and
    asking for a buffer number. (Zachmann)
-   When starting to edit a file that is already in the buffer list, use the
    file name argument for the new short file name. (Webb)
-   Add an option to make ":bnext" and ":bprev" wrap around the end of the
    buffer list.  Also for ":next" and ":prev"?
7   Add argument to ":ls" which is a pattern for buffers to list.
    E.g. ":ls *.c". (Thompson)
7   Add expansion of buffer names, so that "*.c" is expanded to all buffer
    names.  Needed for ":bdel *.c", ":bunload *.c", etc.
8   Support for <afile> where a buffer name is expected.
7   Add an option to mostly use slashes in file names.  Separately for
    internal use and for when executing an external program?
8   Some file systems are case-sensitive, some are not.  Besides
    'wildignorecase' there might be more parts inside
    CASE_INSENSITIVE_FILENAME that are useful on Unix.


Swap (.swp) files:
8   If writing to the swap file fails, should try to open one in another
    directory from 'dir'.  Useful in case the file system is full and when
    there are short file name problems.
8   Also use the code to try using a short file name for the backup and swap
    file for the Win32 and Dos 32 bit versions.
8   When a file is edited by root, add $LOGNAME to know who did su.
8   When the edited file is a symlink, try to put the swap file in the same
    dir as the actual file.  Adjust FullName().  Avoids editing the same file
    twice (e.g. when using quickfix).  Also try to make the name of the backup
    file the same as the actual file?
    Use the code for resolve()?
7   When using 64 bit inode numbers, also store the top 32 bits.  Add another
    field for this, using part of bo_fname[], to keep it compatible.
7   When editing a file on removable media, should put swap file somewhere
    else.  Use something like 'r' flag in 'viminfo'.  'diravoid'?
    Also: Be able to specify minimum disk space, skip directory when not
    enough room.
7   Add a configure check for which directory should be used: /tmp, /var/tmp
    or /var/preserve.
-   Add an option to create a swap file only when making the first change to
    the buffer.  (Liang)  Or only when the buffer is not read-only.
-   Add option to set "umask" for backup files and swap files (Antwerpen).
    'backupumask' and 'swapumask'?  Or 'umaskback' and 'umaskswap'?
-   When editing a readonly file, don't use a swap file but read parts from the
    original file.  Also do this when the file is huge (>'maxmem').  We do
    need to load the file once to count the number of lines?  Perhaps keep a
    cached list of which line is where.


Viminfo:
7   Can probably remove the code that checks for a writable viminfo file,
    because we now do the chown() for root, and others can't overwrite someone
    else's viminfo file.
8   When there is no .viminfo file and someone does "su", runs Vim, a
    root-owned .viminfo file is created.  Is there a good way to avoid this?
    Perhaps check the owner of the directory.  Only when root?
8   Add argument to keep the list of buffers when Vim is started with a file
    name. (Schild)
8   Keep the last used directory of the file browser (File/Open menu).
8   Remember the last used register for "@@".
8   Remember the redo buffer, so that "." works after restarting.
8   Remember a list of last accessed files.  To be used in the
    "File.Open Recent" menu.  Default is to remember 10 files or so.
    Also remember which files have been read and written.  How to display
    this?
7   Also store the ". register (last inserted text).
7   Make it possible to store buffer names in viminfo file relative to some
    directory, to make them portable over a network. (Aaron)
6   Store a snapshot of the currently opened windows.  So that when quitting
    Vim, and then starting again (without a file name argument), you see the
    same files in the windows.  Use ":mksession" code?
-   Make marks present in .viminfo usable as file marks: Display a list of
    "last visited files" and select one to jump to.


Modelines:
8   Before trying to execute a modeline, check that it looks like one (valid
    option names).  If it's very wrong, silently ignore it.
    Ignore a line that starts with "Subject: ".
-   Add an option to whitelist options that are allowed in a modeline.  This
    would allow careful users to use modelines, e.g., only allowing
    'shiftwidth'.
-   Add an option to let modelines only set local options, not global ones
    such as 'encoding'.
-   When an option value is coming from a modeline, do not carry it over to
    another edited file?  Would need to remember the value from before the
    modeline setting.
-   Allow setting a variable from a modeline?  Only allow using fixed strings,
    no function calls, to avoid a security problem.
-   Allow ":doauto BufRead x.cpp" in modelines, to execute autocommands for
    .cpp files.
-   Support the "abbreviate" command in modelines (Kearns).  Careful for
    characters after <Esc>, that is a security leak.
-   Add option setting to ask user if he wants to have the modelines executed
    or not.  Same for .exrc in local dir.


Sessions:
8   DOS/Windows: ":mksession" generates a "cd" command where "aa\#bb" means
    directory "#bb" in "aa", but it's used as "aa#bb". (Ronald Hoellwarth)
7   When there is a "help.txt" window in a session file, restoring that
    session will not get the "LOCAL ADDITIONS" back.
8   With ":mksession" always store the 'sessionoptions' option, even when
    "options" isn't in it. (St-Amant)
8   When using ":mksession", also store a command to reset all options to
    their default value, before setting the options that are not at their
    default value.
7   With ":mksession" also store the tag stack and jump history. (Michal
    Malecki)
7   Persistent variables: "p:var"; stored in viminfo file and sessions files.


Options:
7   ":with option=value | command": temporarily set an option value and
    restore it after the command has executed.
8   Make "old" number options that really give a number of effects into string
    options that are a comma separated list.  The old number values should
    also be supported.
8   Add commands to save and restore an option, which also preserves the flag
    that marks if the option was set.  Useful to keep the effect of setting
    'compatible' after ":syntax on" has been used.
7   There is 'titleold', why is there no 'iconold'? (Chazelas)
7   Make 'scrolloff' a global-local option, so that it can be different in the
    quickfix window, for example. (Gary Holloway)
    Also do 'sidescrolloff'.


External commands:
8   When filtering text, redirect stderr so that it can't mess up the screen
    and Vim doesn't need to redraw it.  Also for ":r !cmd".
4   Set separate shell for ":sh", piping "range!filter", reading text "r !ls"
    and writing text "w !wc". (Deutsche)  Allow arguments for fast start (e.g.
    -f).
4   Allow direct execution, without using a shell.
4   Run an external command in the background.  But how about I/O in the GUI?
    Careful: don't turn Vim into a shell!
4   Add feature to disable using a shell or external commands.


Multiple Windows:
7   "vim -oO file ..." use both horizontal and vertical splits.
8   Add CTRL-W T: go to the top window in the column of the current window.
    And CTRL-W B: go to bottom window.
7   Use CTRL-W <Tab>, like alt-tab, to switch between buffers.  Repeat <Tab>
    to select another buffer (only loaded ones?), <BS> to go back, <Enter> to
    select buffer, <Esc> to go back to original buffer.
7   Make it possible to edit a new buffer in the preview window.  A script can
    then fill it with something.  ":popen"?
7   Add a 'tool' window: behaves like a preview window but there can be
    several.  Don't count it in only_one_window(). (Alexei Alexandrov)
6   Add an option to resize the shell when splitting and/or closing a window.
    ":vsp" would make the shell wider by as many columns as needed for the new
    window.  Specify a maximum size (or use the screen size).  ":close" would
    shrink the shell by as many columns as come available. (Demirel)
7   When starting Vim several times, instantiate a Vim server, that allows
    communication between the different Vims.  Feels like one Vim running with
    multiple top-level windows.  Esp. useful when Vim is started from an IDE
    too.  Requires some form of inter process communication.
-   Support a connection to an external viewer.  Could call the viewer
    automatically after some seconds of non-activity, or with a command.
    Allow some way of reporting scrolling and cursor positioning in the viewer
    to Vim, so that the link between the viewed and edited text can be made.


Marks:
8   Add ten marks for last changed files: ':0, ':1, etc.  One mark per file.
8   When cursor is first moved because of scrolling, set a mark at this
    position.  (Rimon Barr)  Use '-.
8   Add a command to jump to a mark and make the motion inclusive.  g'm and g`m?
8   The '" mark is set to the first line, even when doing ":next" a few times.
    Only set the '" mark when the cursor was really moved in a file.
8   Make `` and '', which would position the new cursor position in the middle
    of the window, restore the old topline (or relative position) from when
    the mark was set.
7   Make a list of file marks in a separate window.  For listing all buffers,
    matching tags, errors, etc.  Normal commands to move around.  Add commands
    to jump to the mark (in current window or new window).  Start it with
    ":browse marks"?
6   Add a menu that lists the Marks like ":marks". (Amerige)
7   For ":jumps", ":tags" and ":marks", for not loaded buffers, remember the
    text at the mark.  Highlight the column with the mark.
7   Highlight each mark in some way (With "Mark" highlight group).
    Or display marks in a separate column, like 'number' does.
7   Use d"m to delete rectangular area from cursor to mark m (like Vile's \m
    command).
7   Try to keep marks in the same position when:
    - replacing with a line break, like in ":s/pat/^M/", move marks after the
      line break column to the next line. (Acevedo)
    - inserting/deleting characters in a line.
5   Include marks for start/end of the current word and section.  Useful in
    mappings.
6   Add "unnamed mark" feature: Like marks for the ":g" command, but place and
    unplace them with commands before doing something with the lines.
    Highlight the marked lines somehow.


Digraphs:
7   Make "ga" show the keymap for a character, if it exists.
    Also show the code of the character after conversion to 'fileencoding'.
-   Use digraph table to tell Vim about the collating sequence of special
    characters?
8   Add command to remove one or more (all) digraphs. (Brown)
7   Support different sets of digraphs (depending on the character set?).  At
    least Latin1/Unicode, Latin-2, MS-DOS (esp. for Win32).


Writing files:
-   In vim_rename(), should lock "from" file when deleting "to" file for
    systems other than Amiga.  Avoids problems with unexpected longname to
    shortname conversion.
8   write mch_isdevice() for Amiga, Mac, VMS, etc.
8   When appending to a file, Vim should also make a backup and a 'patchmode'
    file.
8   'backupskip' doesn't write a backup file at all, a bit dangerous for some
    applications.  Add 'backupelsewhere' to write a backup file in another
    directory?  Or add a flag to 'backupdir'?
6   Add an option to write a new, numbered, backup file each time.  Like
    'patchmode', e.g., 'backupmode'.
6   Make it possible to write 'patchmode' files to a different directory.
    E.g., ":set patchmode=~/backups/*.orig". (Thomas)
6   Add an option to prepend something to the backup file name.  E.g., "#".
    Or maybe allow a function to modify the backup file name?
8   Only make a backup when overwriting a file for the first time.  Avoids
    losing the original when writing twice. (Slootman)
7   On non-Unix machines, also overwrite the original file in some situations
    (file system full, it's a link on an NFS partition).
7   When editing a file, check that it has been change outside of Vim more
    often, not only when writing over it.  E.g., at the time the swap file is
    flushed.  Or every ten seconds or so (use the time of day, check it before
    waiting for a character to be typed).
8   When a file was changed since editing started, show this in the status
    line of the window, like "[time]".
    Make it easier to reload all outdated files that don't have changes.
    Automatic and/or with a command.


Substitute:
8   Substitute with hex/unicode number "\%xff" and "\%uabcd".  Just like
    "\%uabcd" in search pattern.
8   Make it easier to replace in all files in the argument list.  E.g.:
    ":argsub/oldword/newword/".  Works like ":argdo %s/oldword/newword/g|w".
-   :s///p prints the line after a substitution.
-   With :s///c replace \&, ~, etc. when showing the replacement pattern.
8   With :s///c allow scrolling horizontally when 'nowrap' is effective.
    Also allow a count before the scrolling keys.
-   Add number option to ":s//2": replace second occurrence of string?  Or:
    :s///N substitutes N times.
-   Add answers to ":substitute" with 'c' flag, used in a ":global", e.g.:
    ":g/pat1/s/pat2/pat3/cg": 'A' do all remaining replacements, 'Q' don't do
    any replacements, 'u' undo last substitution.
7   Substitute in a block of text.  Use {line}.{column} notation in an Ex
    range, e.g.: ":1.3,$.5s" means to substitute from line 1 column 3 to the
    last line column 5.
5   Add commands to bookmark lines, display bookmarks, remove bookmarks,
    operate on lines with bookmarks, etc.  Like ":global" but with the
    possibility to keep the bookmarks and use them with several commands.
    (Stanislav Sitar)


Mouse support:
8   Add 'o' flag to 'mouse'?
7   Be able to set a 'mouseshape' for the popup menu.
8   Add 'mouse' flag, which sets a behavior like Visual mode, but automatic
    yanking at the button-up event.  Or like Select mode, but typing gets you
    out of Select mode, instead of replacing the text. (Bhaskar)
-   Implement mouse support for the Amiga console.
-   Using right mouse button to extend a blockwise selection should attach to
    the nearest corner of the rectangle (four possible corners).
-   Precede mouse click by a number to simulate double clicks?!?
-   When mouse click after 'r' command, get character that was pointed to.


Argument list:
6   Add command to put all filenames from the tag files in the argument list.
    When given an argument, only use the files where that argument matches
    (like `grep -l ident`) and jump to the first match.
6   Add command to form an args list from all the buffers?


Registers:
8   Don't display empty registers with ":display". (Etienne)
8   Add put command that overwrites existing text.  Should also work for
    blocks.  Useful to move text around in a table.  Works like using "R ^R r"
    for every line.
6   When yanking into the unnamed registers several times, somehow make the
    previous contents also available (like it's done for deleting).  What
    register names to use?  g"1, g"2, etc.?
-   When appending to a register, also report the total resulting number of
    lines.  Or just say "99 more lines yanked", add the "more".
-   When inserting a register in Insert mode with CTRL-R, don't insert comment
    leader when line wraps?
-   The ":@r" commands should take a range and execute the register for each
    line in the range.
-   Add "P" command to insert contents of unnamed register, move selected text
	to position of previous deleted (to swap foo and bar in " + foo")
8   Should be able to yank and delete into the "/ register.
    How to take care of the flags (offset, magic)?


Debug mode:
8   Add breakpoints for setting an option
8   Add breakpoints for assigning to a variable.
7   Store the history from debug mode in viminfo.
7   Make the debug mode history available with histget() et al.


Various improvements:
7   Add plugins for formatting?  Should be able to make a choice depending on
    the language of a file (English/Korean/Japanese/etc.).
    Setting the 'langformat' option to "chinese" would load the
    "format/chinese.vim" plugin.
    The plugin would set 'formatexpr' and define the function being called.
    Edward L. Fox explains how it should be done for most Asian languages.
    (2005 Nov 24)
    Alternative: patch for utf-8 line breaking. (Yongwei Wu, 2008 Feb 23)
7   [t to move to previous xml/html tag (like "vatov"), ]t to move to next
    ("vatv").
7   [< to move to previous xml/html tag, e.g., previous <li>. ]< to move to
    next <li>, ]< to next </li>, [< to previous </li>.
8   Add ":rename" command: rename the file of the current buffer and rename
    the buffer.  Buffer may be modified.
7   Instead of filtering errors with a shell script it should be possible to
    do this with Vim script.  A function that filters the raw text that comes
    from the 'makeprg'?
-   Add %b to 'errorformat': buffer number. (Yegappan Lakshmanan / Suresh
    Govindachar)
7   Add a command that goes back to the position from before jumping to the
    first quickfix location.  ":cbefore"?
7   Allow a window not to have a statusline.  Makes it possible to use a
    window as a buffer-tab selection.
8   Allow non-active windows to have a different statusline. (Yakov Lerner)
7   Add an invisible buffer which can be edited.  For use in scripts that want
    to manipulate text without changing the window layout.
8   Add a command to revert to the saved version of file; undo or redo until
    all changes are gone.
6   "vim -q -" should read the list of errors from stdin. (Gautam Mudunuri)
8   Add "--remote-fail": When contacting the server fails, exit Vim.
    Add "--remote-self": When contacting the server fails, do it in this Vim.
    Overrules the default of "--remote-send" to fail and "--remote" to do it
    in this Vim.
8   When Vim was started without a server, make it possible to start one, as
    if the "--servername" argument was given.  ":startserver <name>"?
8   No address range can be used before the command modifiers.  This makes
    them difficult to use in a menu for Visual mode.  Accept the range and
    have it apply to the following command.
8   Add the possibility to set 'fileformats' to force a format and strip other
    CR characters.  For example, for "dos" files remove CR characters at the
    end of the line, so that a file with mixed line endings is cleaned up.
    To just not display the CR characters: Add a flag to 'display'?
7   Some compilers give error messages in which the file name does not have a
    path.  Be able to specify that 'path' is used for these files.
7   Xterm sends <Esc>O3F for <M-End>.  Similarly for other <M-Home>, <M-Left>,
    etc.  Combinations of Alt, Ctrl and Shift are also possible.  Recognize
    these to avoid inserting the raw byte sequence, handle like the key
    without modifier (unless mapped).
6   Add "gG": like what "gj" is to "j": go to the N'th window line.
8   Add command like ":normal" that accepts <Key> notation like ":map".
9   Support ACLs on more systems.
7   Add ModeMsgVisual, ModeMsgInsert, etc. so that each mode message can be
    highlighted differently.
7   Add a message area for the user.  Set some option to reserve space (above
    the command line?).  Use an ":echouser" command to display the message
    (truncated to fit in the space).
7   Add %s to 'keywordprg': replace with word under the cursor. (Zellner)
8   Support printing on Unix.  Can use "lpansi.c" as an example. (Bookout)
8   Add put command that replaces the text under it.  Esp. for blockwise
    Visual mode.
7   Enhance termresponse stuff: Add t_CV(?): pattern of term response, use
    regexp: "\e\[[>?][0-9;]*c", but only check just after sending t_RV.
7   Add "g|" command: move to N'th column from the left margin (after wrapping
    and applying 'leftcol').  Works as "|" like what "g0" is to "0".
7   Support setting 'equalprg' to a user function name.
7   Highlight the characters after the end-of-line differently.
7   When 'whichwrap' contains "l", "$dl" should join lines?
8   Add an argument to configure to use $CFLAGS and not modify it? (Mooney)
8   Enabling features is a mix of configure arguments and defines in
    feature.h.  How to make this consistent?  Feature.h is required for
    non-unix systems.  Perhaps let configure define CONF_XXX, and use #ifdef
    CONF_XXX in feature.h?  Then what should min-features and max-features do?
8   Add "g^E" and "g^Y", to scroll a screen-full line up and down.
8   Add ":confirm" handling in open_exfile(), for when file already exists.
8   When quitting with changed files, make the dialog list the changed file
    and allow "write all", "discard all", "write some".  The last one would
    then ask "write" or "discard" for each changed file.  Patch in HierAssist
    does something like this. (Shah)
7   Use growarray for replace stack.
7   Have a look at viH (Hellenic or Greek version of Vim).  But a solution
    outside of Vim might be satisfactory (Haritsis).
3   Make "2d%" work like "d%d%" instead of "d2%"?
7   "g CTRL-O" jumps back to last used buffer.	Skip CTRL-O jumps in the same
    buffer.  Make jumplist remember the last ten accessed buffers?
7   Make it possible to set the size of the jumplist (also to a smaller number
    than the default). (Nikolai Weibull)
-   Add code to disable the CAPS key when going from Insert to Normal mode.
-   Set date/protection/etc. of the patchfile the same as the original file.
-   Use growarray for termcodes[] in term.c
-   Add <window-99>, like <cword> but use filename of 99'th window.
7   Add a way to change an operator to always work characterwise-inclusive
    (like "v" makes the operator characterwise-exclusive).  "x" could be used.
-   Make a set of operations on list of names: expand wildcards, replace home
    dir, append a string, delete a string, etc.
-   Remove using mktemp() and use tmpname() only?  Ctags does this.
-   When replacing environment variables, and there is one that is not set,
    turn it into an empty string?  Only when expanding options? (Hiebert)
-   Option to set command to be executed instead of producing a beep (e.g. to
    call "play newbeep.au").
-   Add option to show the current function name in the status line.  More or
    less what you find with "[[k", like how 'cindent' recognizes a function.
    (Bhatt).
-   "[r" and "]r": like "p" and "P", but replace instead of insert (esp. for
    blockwise registers).
-   Add 'timecheck' option, on by default.  Makes it possible to switch off the
    timestamp warning and question. (Dodt).
-   Add an option to set the time after which Vim should check the timestamps
    of the files.  Only check when an event occurs (e.g., character typed,
    mouse moved).  Useful for non-GUI versions where keyboard focus isn't
    noticeable.
-   Make 'smartcase' work even though 'ic' isn't set (Webb).
7   When formatting text, allow to break the line at a number of characters.
    Use an option for this: 'breakchars'?  Useful for formatting Fortran code.
-   Add flag to 'formatoptions' to be able to format book-style paragraphs
    (first line of paragraph has larger indent, no empty lines between
    paragraphs).  Complements the '2' flag.  Use '>' flag when larger indent
    starts a new paragraph, use '<' flag when smaller indent starts a new
    paragraph.	Both start a new paragraph on any indent change.
8   The 'a' flag in 'formatoptions' is too dangerous.  In some way only do
    auto-formatting in specific regions, e.g. defined by syntax highlighting.
8   Allow using a trailing space to signal a paragraph that continues on the
    next line (MIME text/plain; format=flowed, RFC 2646).  Can be used for
    continuous formatting.  Could use 'autoformat' option, which specifies a
    regexp which triggers auto-formatting (for one line).
    ":set autoformat=\\s$".
-   Be able to redefine where a sentence stops.  Use a regexp pattern?
-   Support multi-byte characters for sentences.  Example from Ben Peterson.
7   Add command "g)" to go to the end of a sentence, "g(" to go back to the
    end of a sentence. (Servatius Brandt)
-   Be able to redefine where a paragraph starts.  For "[[" where the '{' is
    not in column 1.
6   Add ":cdprev": go back to the previous directory.  Need to remember a
    stack of previous directories.  We also need ":cdnext".
7   Should ":cd" for MS-DOS go to $HOME, when it's defined?
-   Make "gq<CR>" work on the last line in the file.  Maybe for every operator?
-   Add more redirecting of Ex commands:
	:redir #>  bufname
	:redir #>> bufname   (append)
-   Give error message when starting :redir: twice or using END when no
    redirection was active.
-   Setting of options, specifically for a buffer or window, with
    ":set window.option" or ":set buffer.option=val".  Or use ":buffer.set".
    Also: "buffer.map <F1> quit".
6   Would it be possible to change the color of the cursor in the Win32
    console?  (Klaus Hast)
-   Add :delcr command:
			    *:delcr*
     :[range]delcr[!]	Check [range] lines (default: whole buffer) for lines
			ending in <CR>.  If all lines end in <CR>, or [!] is
			used, remove the <CR> at the end of lines in [range].
			A CTRL-Z at the end of the file is removed.  If
			[range] is omitted, or it is the whole file, and all
			lines end in <CR> 'textmode' is set.  {not in Vi}
-   Should integrate addstar() and file_pat_to_reg_pat().
-   When working over a serial line with 7 bit characters, remove meta
    characters from 'isprint'.
-   Use fchdir() in init_homedir(), like in FullName().
-   In win_update(), when the GUI is active, always use the scrolling area.
    Avoid that the last status line is deleted and needs to be redrawn.
-   That "cTx" fails when the cursor is just after 'x' is Vi compatible, but
    may not be what you expect.  Add a flag in 'cpoptions' for this?  More
    general: Add an option to allow "c" to work with a null motion.
-   Give better error messages by using errno (strerror()).
-   Give "Usage:" error message when command used with wrong arguments (like
    Nvi).
-   Make 'restorescreen' option also work for xterm (and others), replaces the
    SAVE_XTERM_SCREEN define.
7   Support for ":winpos" In xterm: report the current window position.
-   Give warning message when using ":set t_xx=asdf" for a termcap code that
    Vim doesn't know about.  Add flag in 'shortmess'?
6   Add ":che <file>", list all the include paths which lead to this file.
-   For a commandline that has several commands (:s, :d, etc.) summarize the
    changes all together instead of for each command (e.g. for the rot13
    macro).
-   Add command like "[I" that also shows the tree of included files.
-   ":set sm^L" results in ":set s", because short names of options are also
    expanded.  Is there a better way to do this?
-   Add ":@!" command, to ":@" like what ":source!" is to ":source".
8   Add ":@:!": repeat last command with forceit set.
-   Add 't_normal': Used whenever t_me, t_se, t_ue or t_Zr is empty.
-   ":cab map test ^V| je", ":cunab map" doesn't work.	This is vi compatible!
-   CTRL-W CTRL-E and CTRL-W CTRL-Y should move the current window up or down
    if it is not the first or last window.
-   Include-file-search commands should look in the loaded buffer of a file (if
    there is one) instead of the file itself.
7   Change 'nrformats' to include the leader for each format.  Example:
	nrformats=hex:$,binary:b,octal:0
    Add setting of 'nrformats' to syntax files.
-   'path' can become very long, don't use NameBuff for expansion.
-   When unhiding a hidden buffer, put the same line at top of the window as
    the one before hiding it.  Or: keep the same relative cursor position (so
    many percent down the windows).
-   Make it possible for the 'showbreak' to be displayed at the end of the
    line.  Use a comma to separate the part at the end and the start of the
    line?  Highlight the linebreak characters, add flag in 'highlight'.
    Make 'showbreak' local to a window.
-   Some string options should be expanded if they have wildcards, e.g.
    'dictionary' when it is "*.h".
-   Use a specific type for number and boolean options, making it possible to
    change it for specific machines (e.g. when a long is 64 bit).
-   Add option for <Insert> in replace mode going to normal mode. (Nugent)
-   Add a next/previous possibility to "[^I" and friends.
-   Add possibility to change the HOME directory.  Use the directory from the
    passwd file? (Antwerpen)
8   Add commands to push and pop all or individual options. ":setpush tw",
    ":setpop tw", ":setpush all".  Maybe pushing/popping all options is
    sufficient.  ":setflush" resets the option stack?
    How to handle an aborted mapping?  Remember position in tag stack when
    mapping starts, restore it when an error aborts the mapping?
-   Change ":fixdel" into option 'fixdel', t_del will be adjusted each time
    t_bs is set? (Webb)
-   "gc": goto character, move absolute character positions forward, also
    counting newlines.  "gC" goes backwards (Weigert).
-   When doing CTRL-^, redraw buffer with the same topline. (Demirel)  Store
    cursor row and window height to redraw cursor at same percentage of window
    (Webb).
-   Besides remembering the last used line number of a file, also remember the
    column.  Use it with CTRL-^ et. al.
-   Check for non-digits when setting a number option (careful when entering
    hex codes like 0xff).
-   Add option to make "." redo the "@r" command, instead of the last command
    executed by it.  Also to make "." redo the whole mapping.  Basically: redo
    the last TYPED command.
-   Support URL links for ^X^F in Insert mode, like for "gf".
-   Support %name% expansion for "gf" on Windows.
-   Make "gf" work on "file://c:/path/name".  "file:/c:/" and "file:///c:/"
    should also work?
-   Add 'urlpath', used like 'path' for when "gf" used on an URL?
8   When using "gf" on an absolute file name, while editing a remote file
    (starts with scp:// or http://) should prepend the method and machine
    name.
-   When finding an URL or file name, and it doesn't exist, try removing a
    trailing '.'.
-   Add ":path" command modifier.  Should work for every command that takes a
    file name argument, to search for the file name in 'path'.	Use
    find_file_in_path().
-   Highlight control characters on the screen: Shows the difference between
    CTRL-X and "^" followed by "X" (Colon).
-   Integrate parsing of cmdline command and parsing for expansion.
-   Create a program that can translate a .swp file from any machine into a
    form usable by Vim on the current machine.
-   Add ":noro" command: Reset 'ro' flag for all buffers, except ones that have
    a readonly file.  ":noro!" will reset all 'ro' flags.
-   Add a variant of CTRL-V that stops interpretation of more than one
    character.	For entering mappings on the command line where a key contains
    several special characters, e.g. a trailing newline.
-   Make '2' option in 'formatoptions' also work inside comments.
-   Add 's' flag to 'formatoptions': Do not break when inside a string. (Dodt)
-   When window size changed (with the mouse) and made too small, set it back
    to the minimal size.
-   Add "]>" and "[<", shift comment at end of line (command;  /* comment */).
-   Should not call cursorcmd() for each vgetc() in getcmdline().
-   ":split file1 file2" adds two more windows (Webb).
-   Don't give message "Incomplete last line" when editing binary file.
-   Add ":a", ":i" for preloading of named buffers.
-   When entering text, keep other windows on same buffer updated (when a line
    entered)?
-   Check out how screen does output optimizing.  Apparently this is possible
    as an output filter.
-   In dosub() regexec is called twice for the same line.  Try to avoid this.
-   Window updating from memline.c: insert/delete/replace line.
-   Optimize ml_append() for speed, esp. for reading a file.
-   V..c should keep indent when 'ai' is set, just like [count]cc.
-   Updatescript() can be done faster with a string instead of a char.
-   Screen updating is inefficient with CTRL-F and CTRL-B when there are long
    lines.
-   Uppercase characters in Ex commands can be made lowercase?
8   Add option to show characters in text not as "|A" but as decimal ("^129"),
    hex ("\x81") or octal ("\201") or meta (M-x).  Nvi has the 'octal' option
    to switch from hex to octal.  Vile can show unprintable characters in hex
    or in octal.
7   Tighter integration with xxd to edit binary files.  Make it more
    easy/obvious to use.  Command line argument?
-   How does vi detect whether a filter has messed up the screen?  Check source.
    After ":w !command" a wait_return?
-   Improve screen updating code for doput() (use s_ins()).
-   With 'p' command on last line: scroll screen up (also for terminals without
    insert line command).
-   Use insert/delete char when terminal supports it.
-   Optimize screen redraw for slow terminals.
-   Optimize "dw" for long row of spaces (say, 30000).
-   Add "-d null" for editing from a script file without displaying.
-   In Insert mode: Remember the characters that were removed with backspace
    and re-insert them one at a time with <key1>, all together with <key2>.
-   Amiga: Add possibility to set a keymap.  The code in amiga.c does not work
    yet.
-   Implement 'redraw' option.
-   Add special code to 'sections' option to define something else but '{' or
    '}' as the start of a section (e.g. one shiftwidth to the right).
7   Allow using Vim in a pipe: "ls | vim -u xxx.vim - | yyy".  Only needs
    implementing ":w" to stdout in the buffer that was read from stdin.
    Perhaps writing to stdout will work, since stderr is used for the terminal
    I/O.
8   Allow opening an unnamed buffer with ":e !cmd" and ":sp !cmd".  Vile can
    do it.
-   Add commands like ]] and [[ that do not include the line jumped to.
-   When :unab without matching "from" part and several matching "to" parts,
    delete the entry that was used last, instead of the first in the list.
-   Add text justification option.
-   Set boolean options on/off with ":set paste=off", ":set paste=on".
-   After "inv"ing an option show the value: ":set invpaste" gives "paste is
    off".
-   Check handling of CTRL-V and '\' for ":" commands that do not have TRLBAR.
-   When a file cannot be opened but does exist, give error message.
-   Amiga: When 'r' protection bit is not set, file can still be opened but
    gives read errors.  Check protection before opening.
-   When writing check for file exists but no permission, "Permission denied".
-   If file does not exist, check if directory exists.
-   Settings edit mode: make file with ":set opt=xx", edit it, parse it as ex
    commands.
-   ":set -w all": list one option per line.
-   Amiga: test for 'w' flag when reading a file.
-   :table command (Webb)
-   Add new operator: clear, make area white (replace with spaces): "g ".
-   Add command to ":read" a file at a certain column (blockwise read?).
-   Add sort of replace mode where case is taken from the old text (Goldfarb).
-   Allow multiple arguments for ":read", read all the files.
-   Support for tabs in specific columns: ":set tabcol=8,20,34,56" (Demirel).
-   Add 'searchdir' option: Directories to search for file name being edited
    (Demirel).
-   Modifier for the put command: Change to linewise, charwise, blockwise, etc.
-   Add commands for saving and restoring options ":set save" "set restore",
    for use in macro's and the like.
-   Keep output from listings in a window, so you can have a look at it while
    working in another window.  Put cmdline in a separate window?
-   Add possibility to put output of Ex commands in a buffer or file, e.g. for
    ":set all".  ":r :set all"?
-   When the 'equalalways' option is set, creating a new window should not
    result in windows to become bigger.  Deleting a window should not result in
    a window to become smaller (Webb).
-   When resizing the whole Vim window, the windows inside should be resized
    proportionally (Webb).
-   Include options directly in option table, no indirect pointers.  Use
    mkopttab to make option table?
-   When doing ":w dir", where "dir" is a directory name, write the current
    file into that directory, with the current file name (without the path)?
-   Support for 'dictionary's that are sorted, makes access a lot faster
    (Haritsis).
-   Add "^Vrx" on the command line, replace with contents of register x.  Used
    instead of CTRL-R to make repeating possible. (Marinichev)
-   Add "^Vb" on the command line, replace with word before or under the
    cursor?
-   Support mapping for replace mode and "r" command (Vi doesn't do this)?
8   Sorting of filenames for completion is wrong on systems that ignore
    case of filenames.  Add 'ignorefncase' option.  When set, case in
    filenames is ignored for sorting them. Patch by Mike Williams:
    ~/vim/patches/ignorefncase.  Also change what matches?  Or use another
    option name.
8   Should be able to compile Vim in another directory, with $(srcdir) set to
    where the sources are. Add $(srcdir) in the Makefile in a lot of places.
    (Netherton)
6   Make it configurable when "J" inserts a space or not.  Should not add a
    space after "(", for example.
5   When inserting spaces after the end-of-line for 'virtualedit', use tabs
    when the user wants this (e.g., add a "tab" field to 'virtualedit').
    (Servatius Brandt)


From Elvis:
-   Use "instman.sh" to install manpages?
-   Add ":alias" command.
-   Search patterns:
      \@	match word under cursor.
    but do:
      \@w	match the word under the cursor?
      \@W	match the WORD under the cursor?
8   ":window" command:
    :win +	next window (up)
    :win ++	idem, wrapping
    :win -	previous window (down)
    :win --	idem, wrapping
    :win nr	to window number "nr"
    :win name	to window editing buffer "name"
7   ":cc" compiles a single file (default: current one).  'ccprg'   option is
    program to use with ":cc".  Use ":compile" instead of ":cc"?


From xvi:
-   CTRL-_ : swap 8th bit of character.
-   Add egrep-like regex type, like xvi (Ned Konz) or Perl (Emmanuel Mogenet)


From vile:
-   When horizontal scrolling, use '>' for lines continuing right of a window.
-   Support putting .swp files in /tmp: Command in rc.local to move .swp files
    from /tmp to some directory before deleting files.


Far future and "big" extensions:
-   Instead of using a Makefile and autoconf, use a simple shell script to
    find the C compiler and do everything with C code.  Translate something
    like an Aap recipe and configure.ac to C.  Avoids depending on Python,
    thus will work everywhere.  With batch file to find the C compiler it
    would also work on MS-Windows.
-   Make it easy to setup Vim for groups of users: novice vi users, novice
    Vim users, C programmers, xterm users, GUI users,...
-   Change layout of blocks in swap file: Text at the start, with '\n' in
    between lines (just load the file without changes, except for Mac).
    Indexes for lines are from the end of the block backwards.  It's the
    current layout mirrored.
-   Make it possible to edit a register, in a window, like a buffer.
-   Add stuff to syntax highlighting to change the text (upper-case keywords,
    set indent, define other highlighting, etc.).
-   Mode to keep C-code formatted all the time (sort of on-line indent).
-   Several top-level windows in one Vim session.  Be able to use a different
    font in each top-level window.
-   Allow editing above start and below end of buffer (flag in 'virtualedit').
-   Smart cut/paste: recognize words and adjust spaces before/after them.
-   Add open mode, use it when terminal has no cursor positioning.
-   Special "drawing mode": a line is drawn where the cursor is moved to.
    Backspace deletes along the line (from jvim).
-   Support for underlining (underscore-BS-char), bold (char-BS-char) and other
    standout modes switched on/off with , 'overstrike' option (Reiter).
-   Add vertical mode (Paul Jury, Demirel): "5vdw" deletes a word in five
    lines, "3vitextESC" will insert "text" in three lines, etc..
4   Recognize l, #, p as 'flags' to EX commands:
    :g/RE/#l shall print lines with line numbers and in list format.
    :g/RE/dp shall print lines that are deleted.
    POSIX: Commands where flags shall apply to all lines written: list,
    number, open, print, substitute, visual, &, z.  For other commands, flags
    shall apply to the current line after the command completes.  Examples:
    :7,10j #l Join the lines 7-10 and print the result in list
-   Allow two or more users to edit the same file at the same time.  Changes
    are reflected in each Vim immediately.  Could work with local files but
    also over the internet.  See http://www.codingmonkeys.de/subethaedit/.

vim:tw=78:sw=4:sts=4:ts=8:ft=help:norl:
vim: set fo+=n :
                                                                                                                                                                                                                                                                                                                                                                                                                      #include <asm-generic/ipcbuf.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #ifndef _UAPI_ASM_SIGNAL_H
#define _UAPI_ASM_SIGNAL_H

#include <linux/types.h>

#ifndef __KERNEL__
/* Here we must cater to libcs that poke about in kernel headers.  */

#define NSIG		32
typedef unsigned long sigset_t;

#endif /* !__KERNEL__ */

#define SA_RESTORER	0x04000000 /* to get struct sigaction correct */

#include <asm-generic/signal.h>

#ifndef __KERNEL__
/* Here we must cater to libcs that poke about in kernel headers.  */

struct sigaction {
	union {
	  __sighandler_t _sa_handler;
	  void (*_sa_sigaction)(int, struct siginfo *, void *);
	} _u;
	sigset_t sa_mask;
	unsigned long sa_flags;
	void (*sa_restorer)(void);
};

#define sa_handler	_u._sa_handler
#define sa_sigaction	_u._sa_sigaction

#endif /* __KERNEL__ */

#endif /* _UAPI_ASM_SIGNAL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #include <asm-generic/mman.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  # UAPI Header export list
include include/uapi/asm-generic/Kbuild.asm

header-y += auxvec.h
header-y += bitsperlong.h
header-y += byteorder.h
header-y += errno.h
header-y += fcntl.h
header-y += ioctl.h
header-y += ioctls.h
header-y += ipcbuf.h
header-y += kvm_para.h
header-y += mman.h
header-y += msgbuf.h
header-y += param.h
header-y += poll.h
header-y += posix_types.h
header-y += ptrace.h
header-y += registers.h
header-y += resource.h
header-y += sembuf.h
header-y += setup.h
header-y += shmbuf.h
header-y += sigcontext.h
header-y += siginfo.h
header-y += signal.h
header-y += socket.h
header-y += sockios.h
header-y += stat.h
header-y += statfs.h
header-y += swab.h
header-y += termbits.h
header-y += termios.h
header-y += types.h
header-y += unistd.h
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #include <asm-generic/kvm_para.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #ifndef _ASM_PARAM_H
#define _ASM_PARAM_H

#define EXEC_PAGESIZE	16384

#include <asm-generic/param.h>

#endif /* _ASM_PARAM_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #ifndef _ASM_STAT_H
#define _ASM_STAT_H

struct __old_kernel_stat {
	unsigned short st_dev;
	unsigned short st_ino;
	unsigned short st_mode;
	unsigned short st_nlink;
	unsigned short st_uid;
	unsigned short st_gid;
	unsigned short st_rdev;
	unsigned long  st_size;
	unsigned long  st_atime;
	unsigned long  st_mtime;
	unsigned long  st_ctime;
};

/* This matches struct stat in uClibc/glibc.  */
struct stat {
	unsigned char __pad1[6];
	unsigned short st_dev;

	unsigned long __pad2;
	unsigned long st_ino;

	unsigned short __pad3;
	unsigned short st_mode;
	unsigned short __pad4;
	unsigned short st_nlink;

	unsigned short __pad5;
	unsigned short st_uid;
	unsigned short __pad6;
	unsigned short st_gid;

	unsigned char __pad7[6];
	unsigned short st_rdev;

	unsigned long __pad8;
	unsigned long st_size;

	unsigned long __pad9;		/* align 64-bit st_blocks to 2-word */
	unsigned long st_blksize;

	unsigned long __pad10;	/* future possible st_blocks high bits */
	unsigned long st_blocks;	/* Number 512-byte blocks allocated. */

	unsigned long __unused1;
	unsigned long st_atime;

	unsigned long __unused2;
	unsigned long st_mtime;

	unsigned long __unused3;
	unsigned long st_ctime;

	unsigned long long __unused4;
};

/* This matches struct stat64 in uClibc/glibc.  The layout is exactly
   the same as that of struct stat above, with 64-bit types taking up
   space that was formerly used by padding.  stat syscalls are still
   different from stat64, though, in that the former tests for
   overflow.  */
struct stat64 {
	unsigned char __pad1[6];
	unsigned short st_dev;

	unsigned long long st_ino;

	unsigned int st_mode;
	unsigned int st_nlink;

	unsigned long st_uid;
	unsigned long st_gid;

	unsigned char __pad2[6];
	unsigned short st_rdev;

	long long st_size;

	unsigned long __pad3;		/* align 64-bit st_blocks to 2-word */
	unsigned long st_blksize;

	unsigned long __pad4;		/* future possible st_blocks high bits */
	unsigned long st_blocks;	/* Number 512-byte blocks allocated. */

	unsigned long st_atime_nsec;
	unsigned long st_atime;

	unsigned int st_mtime_nsec;
	unsigned long st_mtime;

	unsigned long st_ctime_nsec;
	unsigned long st_ctime;

	unsigned long long __unused4;
};

#endif /* _ASM_STAT_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /* ptrace.h: ptrace() relevant definitions
 *
 * Copyright (C) 2003 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */
#ifndef _UAPI_ASM_PTRACE_H
#define _UAPI_ASM_PTRACE_H

#include <asm/registers.h>


#define PT_PSR		0
#define	PT_ISR		1
#define PT_CCR		2
#define PT_CCCR		3
#define PT_LR		4
#define PT_LCR		5
#define PT_PC		6

#define PT__STATUS	7	/* exception status */
#define PT_SYSCALLNO	8	/* syscall number or -1 */
#define PT_ORIG_GR8	9	/* saved GR8 for signal handling */
#define PT_GNER0	10
#define PT_GNER1	11
#define PT_IACC0H	12
#define PT_IACC0L	13

#define PT_GR(j)	( 14 + (j))	/* GRj for 0<=j<=63 */
#define PT_FR(j)	( 78 + (j))	/* FRj for 0<=j<=63 */
#define PT_FNER(j)	(142 + (j))	/* FNERj for 0<=j<=1 */
#define PT_MSR(j)	(144 + (j))	/* MSRj for 0<=j<=2 */
#define PT_ACC(j)	(146 + (j))	/* ACCj for 0<=j<=7 */
#define PT_ACCG(jklm)	(154 + (jklm))	/* ACCGjklm for 0<=jklm<=1 (reads four regs per slot) */
#define PT_FSR(j)	(156 + (j))	/* FSRj for 0<=j<=0 */
#define PT__GPEND	78
#define PT__END		157

#define PT_TBR		PT_GR(0)
#define PT_SP		PT_GR(1)
#define PT_FP		PT_GR(2)
#define PT_PREV_FRAME	PT_GR(28)	/* previous exception frame pointer (old gr28 value) */
#define PT_CURR_TASK	PT_GR(29)	/* current task */


/* Arbitrarily choose the same ptrace numbers as used by the Sparc code. */
#define PTRACE_GETREGS		12
#define PTRACE_SETREGS		13
#define PTRACE_GETFPREGS	14
#define PTRACE_SETFPREGS	15
#define PTRACE_GETFDPIC		31	/* get the ELF fdpic loadmap address */

#define PTRACE_GETFDPIC_EXEC	0	/* [addr] request the executable loadmap */
#define PTRACE_GETFDPIC_INTERP	1	/* [addr] request the interpreter loadmap */

#endif /* _UAPI_ASM_PTRACE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #ifndef _ASM_POSIX_TYPES_H
#define _ASM_POSIX_TYPES_H

/*
 * This file is generally used by user-level software, so you need to
 * be a little careful about namespace pollution etc.  Also, we cannot
 * assume GCC is being used.
 */

typedef unsigned short	__kernel_mode_t;
#define __kernel_mode_t __kernel_mode_t

typedef unsigned short	__kernel_ipc_pid_t;
#define __kernel_ipc_pid_t __kernel_ipc_pid_t

typedef unsigned short	__kernel_uid_t;
typedef unsigned short	__kernel_gid_t;
#define __kernel_uid_t __kernel_uid_t

typedef unsigned short	__kernel_old_dev_t;
#define __kernel_old_dev_t __kernel_old_dev_t

#include <asm-generic/posix_types.h>

#endif

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #ifndef _ASM_TERMBITS_H__
#define _ASM_TERMBITS_H__

#include <linux/posix_types.h>

typedef unsigned char	cc_t;
typedef unsigned int	speed_t;
typedef unsigned int	tcflag_t;

#define NCCS 19
struct termios {
	tcflag_t c_iflag;		/* input mode flags */
	tcflag_t c_oflag;		/* output mode flags */
	tcflag_t c_cflag;		/* control mode flags */
	tcflag_t c_lflag;		/* local mode flags */
	cc_t c_line;			/* line discipline */
	cc_t c_cc[NCCS];		/* control characters */
};

struct termios2 {
	tcflag_t c_iflag;		/* input mode flags */
	tcflag_t c_oflag;		/* output mode flags */
	tcflag_t c_cflag;		/* control mode flags */
	tcflag_t c_lflag;		/* local mode flags */
	cc_t c_line;			/* line discipline */
	cc_t c_cc[NCCS];		/* control characters */
	speed_t c_ispeed;		/* input speed */
	speed_t c_ospeed;		/* output speed */
};

struct ktermios {
	tcflag_t c_iflag;		/* input mode flags */
	tcflag_t c_oflag;		/* output mode flags */
	tcflag_t c_cflag;		/* control mode flags */
	tcflag_t c_lflag;		/* local mode flags */
	cc_t c_line;			/* line discipline */
	cc_t c_cc[NCCS];		/* control characters */
	speed_t c_ispeed;		/* input speed */
	speed_t c_ospeed;		/* output speed */
};

/* c_cc characters */
#define VINTR 0
#define VQUIT 1
#define VERASE 2
#define VKILL 3
#define VEOF 4
#define VTIME 5
#define VMIN 6
#define VSWTC 7
#define VSTART 8
#define VSTOP 9
#define VSUSP 10
#define VEOL 11
#define VREPRINT 12
#define VDISCARD 13
#define VWERASE 14
#define VLNEXT 15
#define VEOL2 16


/* c_iflag bits */
#define IGNBRK	0000001
#define BRKINT	0000002
#define IGNPAR	0000004
#define PARMRK	0000010
#define INPCK	0000020
#define ISTRIP	0000040
#define INLCR	0000100
#define IGNCR	0000200
#define ICRNL	0000400
#define IUCLC	0001000
#define IXON	0002000
#define IXANY	0004000
#define IXOFF	0010000
#define IMAXBEL	0020000
#define IUTF8	0040000

/* c_oflag bits */
#define OPOST	0000001
#define OLCUC	0000002
#define ONLCR	0000004
#define OCRNL	0000010
#define ONOCR	0000020
#define ONLRET	0000040
#define OFILL	0000100
#define OFDEL	0000200
#define NLDLY	0000400
#define   NL0	0000000
#define   NL1	0000400
#define CRDLY	0003000
#define   CR0	0000000
#define   CR1	0001000
#define   CR2	0002000
#define   CR3	0003000
#define TABDLY	0014000
#define   TAB0	0000000
#define   TAB1	0004000
#define   TAB2	0010000
#define   TAB3	0014000
#define   XTABS	0014000
#define BSDLY	0020000
#define   BS0	0000000
#define   BS1	0020000
#define VTDLY	0040000
#define   VT0	0000000
#define   VT1	0040000
#define FFDLY	0100000
#define   FF0	0000000
#define   FF1	0100000

/* c_cflag bit meaning */
#define CBAUD	0010017
#define  B0	0000000		/* hang up */
#define  B50	0000001
#define  B75	0000002
#define  B110	0000003
#define  B134	0000004
#define  B150	0000005
#define  B200	0000006
#define  B300	0000007
#define  B600	0000010
#define  B1200	0000011
#define  B1800	0000012
#define  B2400	0000013
#define  B4800	0000014
#define  B9600	0000015
#define  B19200	0000016
#define  B38400	0000017
#define EXTA B19200
#define EXTB B38400
#define CSIZE	0000060
#define   CS5	0000000
#define   CS6	0000020
#define   CS7	0000040
#define   CS8	0000060
#define CSTOPB	0000100
#define CREAD	0000200
#define PARENB	0000400
#define PARODD	0001000
#define HUPCL	0002000
#define CLOCAL	0004000
#define CBAUDEX 0010000
#define    BOTHER 0010000
#define    B57600 0010001
#define   B115200 0010002
#define   B230400 0010003
#define   B460800 0010004
#define   B500000 0010005
#define   B576000 0010006
#define   B921600 0010007
#define  B1000000 0010010
#define  B1152000 0010011
#define  B1500000 0010012
#define  B2000000 0010013
#define  B2500000 0010014
#define  B3000000 0010015
#define  B3500000 0010016
#define  B4000000 0010017
#define CIBAUD	  002003600000		/* Input baud rate */
#define CTVB	  004000000000		/* VisioBraille Terminal flow control */
#define CMSPAR	  010000000000		/* mark or space (stick) parity */
#define CRTSCTS	  020000000000		/* flow control */

#define IBSHIFT	16			/* Shift from CBAUD to CIBAUD */

/* c_lflag bits */
#define ISIG	0000001
#define ICANON	0000002
#define XCASE	0000004
#define ECHO	0000010
#define ECHOE	0000020
#define ECHOK	0000040
#define ECHONL	0000100
#define NOFLSH	0000200
#define TOSTOP	0000400
#define ECHOCTL	0001000
#define ECHOPRT	0002000
#define ECHOKE	0004000
#define FLUSHO	0010000
#define PENDIN	0040000
#define IEXTEN	0100000
#define EXTPROC	0200000


/* tcflow() and TCXONC use these */
#define	TCOOFF		0
#define	TCOON		1
#define	TCIOFF		2
#define	TCION		3

/* tcflush() and TCFLSH use these */
#define	TCIFLUSH	0
#define	TCOFLUSH	1
#define	TCIOFLUSH	2

/* tcsetattr uses these */
#define	TCSANOW		0
#define	TCSADRAIN	1
#define	TCSAFLUSH	2

#endif /* _ASM_TERMBITS_H__ */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #ifndef _ASM_STATFS_H
#define _ASM_STATFS_H

#include <asm-generic/statfs.h>

#endif /* _ASM_STATFS_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /* setup.h: setup stuff
 *
 * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */

#ifndef _UAPI_ASM_SETUP_H
#define _UAPI_ASM_SETUP_H

#define COMMAND_LINE_SIZE       512


#endif /* _UAPI_ASM_SETUP_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /* registers.h: register frame declarations
 *
 * Copyright (C) 2003 Red Hat, Inc. All Rights Reserved.
 * Written by David Howells (dhowells@redhat.com)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 */

/*
 * notes:
 *
 * (1) that the members of all these structures are carefully aligned to permit
 *     usage of STD/STDF instructions
 *
 * (2) if you change these structures, you must change the code in
 *     arch/frvnommu/kernel/{break.S,entry.S,switch_to.S,gdb-stub.c}
 *
 *
 * the kernel stack space block looks like this:
 *
 *	+0x2000	+----------------------
 *		| union {
 *		|	struct frv_frame0 {
 *		|		struct user_context {
 *		|			struct user_int_regs
 *		|			struct user_fpmedia_regs
 *		|		}
 *		|		struct frv_debug_regs
 *		|	}
 *		|	struct pt_regs [user exception]
 *		| }
 *		+---------------------- <-- __kernel_frame0_ptr (maybe GR28)
 *		|
 *		| kernel stack
 *		|
 *		|......................
 *		| struct pt_regs [kernel exception]
 *		|...................... <-- __kernel_frame0_ptr (maybe GR28)
 *		|
 *		| kernel stack
 *		|
 *		|...................... <-- stack pointer (GR1)
 *		|
 *		| unused stack space
 *		|
 *		+----------------------
 *		| struct thread_info
 *	+0x0000	+---------------------- <-- __current_thread_info (GR15);
 *
 * note that GR28 points to the current exception frame
 */

#ifndef _ASM_REGISTERS_H
#define _ASM_REGISTERS_H

#ifndef __ASSEMBLY__
#define __OFFSET(X,N)	((X)+(N)*4)
#define __OFFSETC(X,N)	xxxxxxxxxxxxxxxxxxxxxxxx
#else
#define __OFFSET(X,N)	((X)+(N)*4)
#define __OFFSETC(X,N)	((X)+(N))
#endif

/*****************************************************************************/
/*
 * Exception/Interrupt frame
 * - held on kernel stack
 * - 8-byte aligned on stack (old SP is saved in frame)
 * - GR0 is fixed 0, so we don't save it
 */
#ifndef __ASSEMBLY__

struct pt_regs {
	unsigned long		psr;		/* Processor Status Register */
	unsigned long		isr;		/* Integer Status Register */
	unsigned long		ccr;		/* Condition Code Register */
	unsigned long		cccr;		/* Condition Code for Conditional Insns Register */
	unsigned long		lr;		/* Link Register */
	unsigned long		lcr;		/* Loop Count Register */
	unsigned long		pc;		/* Program Counter Register */
	unsigned long		__status;	/* exception status */
	unsigned long		syscallno;	/* syscall number or -1 */
	unsigned long		orig_gr8;	/* original syscall arg #1 */
	unsigned long		gner0;
	unsigned long		gner1;
	unsigned long long	iacc0;
	unsigned long		tbr;		/* GR0 is fixed zero, so we use this for TBR */
	unsigned long		sp;		/* GR1: USP/KSP */
	unsigned long		fp;		/* GR2: FP */
	unsigned long		gr3;
	unsigned long		gr4;
	unsigned long		gr5;
	unsigned long		gr6;
	unsigned long		gr7;		/* syscall number */
	unsigned long		gr8;		/* 1st syscall param; syscall return */
	unsigned long		gr9;		/* 2nd syscall param */
	unsigned long		gr10;		/* 3rd syscall param */
	unsigned long		gr11;		/* 4th syscall param */
	unsigned long		gr12;		/* 5th syscall param */
	unsigned long		gr13;		/* 6th syscall param */
	unsigned long		gr14;
	unsigned long		gr15;
	unsigned long		gr16;		/* GP pointer */
	unsigned long		gr17;		/* small data */
	unsigned long		gr18;		/* PIC/PID */
	unsigned long		gr19;
	unsigned long		gr20;
	unsigned long		gr21;
	unsigned long		gr22;
	unsigned long		gr23;
	unsigned long		gr24;
	unsigned long		gr25;
	unsigned long		gr26;
	unsigned long		gr27;
	struct pt_regs		*next_frame;	/* GR28 - next exception frame */
	unsigned long		gr29;		/* GR29 - OS reserved */
	unsigned long		gr30;		/* GR30 - OS reserved */
	unsigned long		gr31;		/* GR31 - OS reserved */
} __attribute__((aligned(8)));

#endif

#define REG__STATUS_STEP	0x00000001	/* - reenable single stepping on return */
#define REG__STATUS_STEPPED	0x00000002	/* - single step caused exception */
#define REG__STATUS_BROKE	0x00000004	/* - BREAK insn caused exception */
#define REG__STATUS_SYSC_ENTRY	0x40000000	/* - T on syscall entry (ptrace.c only) */
#define REG__STATUS_SYSC_EXIT	0x80000000	/* - T on syscall exit (ptrace.c only) */

#define REG_GR(R)	__OFFSET(REG_GR0, (R))

#define REG_SP		REG_GR(1)
#define REG_FP		REG_GR(2)
#define REG_PREV_FRAME	REG_GR(28)	/* previous exception frame pointer (old gr28 value) */
#define REG_CURR_TASK	REG_GR(29)	/* current task */

/*****************************************************************************/
/*
 * debugging registers
 */
#ifndef __ASSEMBLY__

struct frv_debug_regs
{
	unsigned long		dcr;
	unsigned long		ibar[4] __attribute__((aligned(8)));
	unsigned long		dbar[4] __attribute__((aligned(8)));
	unsigned long		dbdr[4][4] __attribute__((aligned(8)));
	unsigned long		dbmr[4][4] __attribute__((aligned(8)));
} __attribute__((aligned(8)));

#endif

/*****************************************************************************/
/*
 * userspace registers
 */
#ifndef __ASSEMBLY__

struct user_int_regs
{
	/* integer registers
	 * - up to gr[31] mirror pt_regs
	 * - total size must be multiple of 8 bytes
	 */
	unsigned long		psr;		/* Processor Status Register */
	unsigned long		isr;		/* Integer Status Register */
	unsigned long		ccr;		/* Condition Code Register */
	unsigned long		cccr;		/* Condition Code for Conditional Insns Register */
	unsigned long		lr;		/* Link Register */
	unsigned long		lcr;		/* Loop Count Register */
	unsigned long		pc;		/* Program Counter Register */
	unsigned long		__status;	/* exception status */
	unsigned long		syscallno;	/* syscall number or -1 */
	unsigned long		orig_gr8;	/* original syscall arg #1 */
	unsigned long		gner[2];
	unsigned long long	iacc[1];

	union {
		unsigned long	tbr;
		unsigned long	gr[64];
	};
};

struct user_fpmedia_regs
{
	/* FP/Media registers */
	unsigned long	fr[64];
	unsigned long	fner[2];
	unsigned long	msr[2];
	unsigned long	acc[8];
	unsigned char	accg[8];
	unsigned long	fsr[1];
};

struct user_context
{
	struct user_int_regs		i;
	struct user_fpmedia_regs	f;

	/* we provide a context extension so that we can save the regs for CPUs that
	 * implement many more of Fujitsu's lavish register spec
	 */
	void *extension;
} __attribute__((aligned(8)));

struct frv_frame0 {
	union {
		struct pt_regs		regs;
		struct user_context	uc;
	};

	struct frv_debug_regs		debug;

} __attribute__((aligned(32)));

#endif

#define __INT_GR(R)		__OFFSET(__INT_GR0,		(R))

#define __FPMEDIA_FR(R)		__OFFSET(__FPMEDIA_FR0,		(R))
#define __FPMEDIA_FNER(R)	__OFFSET(__FPMEDIA_FNER0,	(R))
#define __FPMEDIA_MSR(R)	__OFFSET(__FPMEDIA_MSR0,	(R))
#define __FPMEDIA_ACC(R)	__OFFSET(__FPMEDIA_ACC0,	(R))
#define __FPMEDIA_ACCG(R)	__OFFSETC(__FPMEDIA_ACCG0,	(R))
#define __FPMEDIA_FSR(R)	__OFFSET(__FPMEDIA_FSR0,	(R))

#define __THREAD_GR(R)		__OFFSET(__THREAD_GR16,		(R) - 16)

#endif /* _ASM_REGISTERS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #include <asm-generic/fcntl.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #include <asm-generic/ioctl.h>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef _UAPI_ASM_UNISTD_H_
#define _UAPI_ASM_UNISTD_H_

/*
 * This file contains the system call numbers.
 */

#define __NR_restart_syscall      0
#define __NR_exit		  1
#define __NR_fork		  2
#define __NR_read		  3
#define __NR_write		  4
#define __NR_open		  5
#define __NR_close		  6
#define __NR_waitpid		  7
#define __NR_creat		  8
#define __NR_link		  9
#define __NR_unlink		 10
#define __NR_execve		 11
#define __NR_chdir		 12
#define __NR_time		 13
#define __NR_mknod		 14
#define __NR_chmod		 15
#define __NR_lchown		 16
#define __NR_break		 17
#define __NR_oldstat		 18
#define __NR_lseek		 19
#define __NR_getpid		 20
#define __NR_mount		 21
#define __NR_umount		 22
#define __NR_setuid		 23
#define __NR_getuid		 24
#define __NR_stime		 25
#define __NR_ptrace		 26
#define __NR_alarm		 27
#define __NR_oldfstat		 28
#define __NR_pause		 29
#define __NR_utime		 30
#define __NR_stty		 31
#define __NR_gtty		 32
#define __NR_access		 33
#define __NR_nice		 34
#define __NR_ftime		 35
#define __NR_sync		 36
#define __NR_kill		 37
#define __NR_rename		 38
#define __NR_mkdir		 39
#define __NR_rmdir		 40
#define __NR_dup		 41
#define __NR_pipe		 42
#define __NR_times		 43
#define __NR_prof		 44
#define __NR_brk		 45
#define __NR_setgid		 46
#define __NR_getgid		 47
#define __NR_signal		 48
#define __NR_geteuid		 49
#define __NR_getegid		 50
#define __NR_acct		 51
#define __NR_umount2		 52
#define __NR_lock		 53
#define __NR_ioctl		 54
#define __NR_fcntl		 55
#define __NR_mpx		 56
#define __NR_setpgid		 57
#define __NR_ulimit		 58
// #define __NR_oldolduname	 /* 59 */ obsolete
#define __NR_umask		 60
#define __NR_chroot		 61
#define __NR_ustat		 62
#define __NR_dup2		 63
#define __NR_getppid		 64
#define __NR_getpgrp		 65
#define __NR_setsid		 66
#define __NR_sigaction		 67
#define __NR_sgetmask		 68
#define __NR_ssetmask		 69
#define __NR_setreuid		 70
#define __NR_setregid		 71
#define __NR_sigsuspend		 72
#define __NR_sigpending		 73
#define __NR_sethostname	 74
#define __NR_setrlimit		 75
#define __NR_getrlimit		 76	/* Back compatible 2Gig limited rlimit */
#define __NR_getrusage		 77
#define __NR_gettimeofday	 78
#define __NR_settimeofday	 79
#define __NR_getgroups		 80
#define __NR_setgroups		 81
#define __NR_select		 82
#define __NR_symlink		 83
#define __NR_oldlstat		 84
#define __NR_readlink		 85
#define __NR_uselib		 86
#define __NR_swapon		 87
#define __NR_reboot		 88
#define __NR_readdir		 89
// #define __NR_mmap		 90	/* obsolete - not implemented */
#define __NR_munmap		 91
#define __NR_truncate		 92
#define __NR_ftruncate		 93
#define __NR_fchmod		 94
#define __NR_fchown		 95
#define __NR_getpriority	 96
#define __NR_setpriority	 97
// #define __NR_profil		 /* 98 */ obsolete
#define __NR_statfs		 99
#define __NR_fstatfs		100
// #define __NR_ioperm		/* 101 */ not supported
#define __NR_socketcall		102
#define __NR_syslog		103
#define __NR_setitimer		104
#define __NR_getitimer		105
#define __NR_stat		106
#define __NR_lstat		107
#define __NR_fstat		108
// #define __NR_olduname		/* 109 */ obsolete
// #define __NR_iopl		/* 110 */ not supported
#define __NR_vhangup		111
// #define __NR_idle		/* 112 */ Obsolete
// #define __NR_vm86old		/* 113 */ not supported
#define __NR_wait4		114
#define __NR_swapoff		115
#define __NR_sysinfo		116
#define __NR_ipc		117
#define __NR_fsync		118
#define __NR_sigreturn		119
#define __NR_clone		120
#define __NR_setdomainname	121
#define __NR_uname		122
// #define __NR_modify_ldt	/* 123 */ not supported
#define __NR_cacheflush		123
#define __NR_adjtimex		124
#define __NR_mprotect		125
#define __NR_sigprocmask	126
#define __NR_create_module	127
#define __NR_init_module	128
#define __NR_delete_module	129
#define __NR_get_kernel_syms	130
#define __NR_quotactl		131
#define __NR_getpgid		132
#define __NR_fchdir		133
#define __NR_bdflush		134
#define __NR_sysfs		135
#define __NR_personality	136
#define __NR_afs_syscall	137 /* Syscall for Andrew File System */
#define __NR_setfsuid		138
#define __NR_setfsgid		139
#define __NR__llseek		140
#define __NR_getdents		141
#define __NR__newselect		142
#define __NR_flock		143
#define __NR_msync		144
#define __NR_readv		145
#define __NR_writev		146
#define __NR_getsid		147
#define __NR_fdatasync		148
#define __NR__sysctl		149
#define __NR_mlock		150
#define __NR_munlock		151
#define __NR_mlockall		152
#define __NR_munlockall		153
#define __NR_sched_setparam		154
#define __NR_sched_getparam		155
#define __NR_sched_setscheduler		156
#define __NR_sched_getscheduler		157
#define __NR_sched_yield		158
#define __NR_sched_get_priority_max	159
#define __NR_sched_get_priority_min	160
#define __NR_sched_rr_get_interval	161
#define __NR_nanosleep		162
#define __NR_mremap		163
#define __NR_setresuid		164
#define __NR_getresuid		165
// #define __NR_vm86		/* 166 */ not supported
#define __NR_query_module	167
#define __NR_poll		168
#define __NR_nfsservctl		169
#define __NR_setresgid		170
#define __NR_getresgid		171
#define __NR_prctl		172
#define __NR_rt_sigreturn	173
#define __NR_rt_sigaction	174
#define __NR_rt_sigprocmask	175
#define __NR_rt_sigpending	176
#define __NR_rt_sigtimedwait	177
#define __NR_rt_sigqueueinfo	178
#define __NR_rt_sigsuspend	179
#define __NR_pread64		180
#define __NR_pwrite64		181
#define __NR_chown		182
#define __NR_getcwd		183
#define __NR_capget		184
#define __NR_capset		185
#define __NR_sigaltstack	186
#define __NR_sendfile		187
#define __NR_getpmsg		188	/* some people actually want streams */
#define __NR_putpmsg		189	/* some people actually want streams */
#define __NR_vfork		190
#define __NR_ugetrlimit		191	/* SuS compliant getrlimit */
#define __NR_mmap2		192
#define __NR_truncate64		193
#define __NR_ftruncate64	194
#define __NR_stat64		195
#define __NR_lstat64		196
#define __NR_fstat64		197
#define __NR_lchown32		198
#define __NR_getuid32		199
#define __NR_getgid32		200
#define __NR_geteuid32		201
#define __NR_getegid32		202
#define __NR_setreuid32		203
#define __NR_setregid32		204
#define __NR_getgroups32	205
#define __NR_setgroups32	206
#define __NR_fchown32		207
#define __NR_setresuid32	208
#define __NR_getresuid32	209
#define __NR_setresgid32	210
#define __NR_getresgid32	211
#define __NR_chown32		212
#define __NR_setuid32		213
#define __NR_setgid32		214
#define __NR_setfsuid32		215
#define __NR_setfsgid32		216
#define __NR_pivot_root		217
#define __NR_mincore		218
#define __NR_madvise		219

#define __NR_getdents64		220
#define __NR_fcntl64		221
#define __NR_security		223	/* syscall for security modules */
#define __NR_gettid		224
#define __NR_readahead		225
#define __NR_setxattr		226
#define __NR_lsetxattr		227
#define __NR_fsetxattr		228
#define __NR_getxattr		229
#define __NR_lgetxattr		230
#define __NR_fgetxattr		231
#define __NR_listxattr		232
#define __NR_llistxattr		233
#define __NR_flistxattr		234
#define __NR_removexattr	235
#define __NR_lremovexattr	236
#define __NR_fremovexattr	237
#define __NR_tkill		238
#define __NR_sendfile64		239
#define __NR_futex		240
#define __NR_sched_setaffinity	241
#define __NR_sched_getaffinity	242
#define __NR_set_thread_area	243
#define __NR_get_thread_area	244
#define __NR_io_setup		245
#define __NR_io_destroy		246
#define __NR_io_getevents	247
#define __NR_io_submit		248
#define __NR_io_cancel		249
#define __NR_fadvise64		250

#define __NR_exit_group		252
#define __NR_lookup_dcookie	253
#define __NR_epoll_create	254
#define __NR_epoll_ctl		255
#define __NR_epoll_wait		256
#define __NR_remap_file_pages	257
#define __NR_set_tid_address	258
#define __NR_timer_create	259
#define __NR_timer_settime	(__NR_timer_create+1)
#define __NR_timer_gettime	(__NR_timer_create+2)
#define __NR_timer_getoverrun	(__NR_timer_create+3)
#define __NR_timer_delete	(__NR_timer_create+4)
#define __NR_clock_settime	(__NR_timer_create+5)
#define __NR_clock_gettime	(__NR_timer_create+6)
#define __NR_clock_getres	(__NR_timer_create+7)
#define __NR_clock_nanosleep	(__NR_timer_create+8)
#define __NR_statfs64		268
#define __NR_fstatfs64		269
#define __NR_tgkill		270
#define __NR_utimes		271
#define __NR_fadvise64_64	272
#define __NR_vserver		273
#define __NR_mbind		274
#define __NR_get_mempolicy	275
#define __NR_set_mempolicy	276
#define __NR_mq_open 		277
#define __NR_mq_unlink		(__NR_mq_open+1)
#define __NR_mq_timedsend	(__NR_mq_open+2)
#define __NR_mq_timedreceive	(__NR_mq_open+3)
#define __NR_mq_notify		(__NR_mq_open+4)
#define __NR_mq_getsetattr	(__NR_mq_open+5)
#define __NR_kexec_load		283
#define __NR_waitid		284
/* #define __NR_sys_setaltroot	285 */
#define __NR_add_key		286
#define __NR_request_key	287
#define __NR_keyctl		288
#define __NR_ioprio_set		289
#define __NR_ioprio_get		290
#define __NR_inotify_init	291
#define __NR_inotify_add_watch	292
#define __NR_inotify_rm_watch	293
#define __NR_migrate_pages	294
#define __NR_openat		295
#define __NR_mkdirat		296
#define __NR_mknodat		297
#define __NR_fchownat		298
#define __NR_futimesat		299
#define __NR_fstatat64		300
#define __NR_unlinkat		301
#define __NR_renameat		302
#define __NR_linkat		303
#define __NR_symlinkat		304
#define __NR_readlinkat		305
#define __NR_fchmodat		306
#define __NR_faccessat		307
#define __NR_pselect6		308
#define __NR_ppoll		309
#define __NR_unshare		310
#define __NR_set_robust_list	311
#define __NR_get_robust_list	312
#define __NR_splice		313
#define __NR_sync_file_range	314
#define __NR_tee		315
#define __NR_vmsplice		316
#define __NR_move_pages		317
#define __NR_getcpu		318
#define __NR_epoll_pwait	319
#define __NR_utimensat		320
#define __NR_signalfd		321
#define __NR_timerfd_create	322
#define __NR_eventfd		323
#define __NR_fallocate		324
#define __NR_timerfd_settime	325
#define __NR_timerfd_gettime	326
#define __NR_signalfd4		327
#define __NR_eventfd2		328
#define __NR_epoll_create1	329
#define __NR_dup3		330
#define __NR_pipe2		331
#define __NR_inotify_init1	332
#define __NR_preadv		333
#define __NR_pwritev		334
#define __NR_rt_tgsigqueueinfo	335
#define __NR_perf_event_open	336
#define __NR_setns		337

#endif /* _UAPI_ASM_UNISTD_H_ */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #ifndef _ASM_SHMBUF_H
#define _ASM_SHMBUF_H

/*
 * The shmid64_ds structure for FR-V architecture.
 * Note extra padding because this structure is passed back and forth
 * between kernel and user space.
 *
 * Pad space is left for:
 * - 64-bit time_t to solve y2038 problem
 * - 2 miscellaneous 32-bit values
 */

struct shmid64_ds {
	struct ipc64_perm	shm_perm;	/* operation perms */
	size_t			shm_segsz;	/* size of segment (bytes) */
	__kernel_time_t		shm_atime;	/* last attach time */
	unsigned long		__unused1;
	__kernel_time_t		shm_dtime;	/* last detach time */
	unsigned long		__unused2;
	__kernel_time_t		shm_ctime;	/* last change time */
	unsigned long		__unused3;
	__kernel_pid_t		shm_cpid;	/* pid of creator */
	__kernel_pid_t		shm_lpid;	/* pid of last operator */
	unsigned long		shm_nattch;	/* no. of current attaches */
	unsigned long		__unused4;
	unsigned long		__unused5;
};

struct shminfo64 {
	unsigned long	shmmax;
	unsigned long	shmmin;
	unsigned long	shmmni;
	unsigned long	shmseg;
	unsigned long	shmall;
	unsigned long	__unused1;
	unsigned long	__unused2;
	unsigned long	__unused3;
	unsigned long	__unused4;
};

#endif /* _ASM_SHMBUF_H */

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       #
# Makefile for the MB93090-MB00 motherboard stuff
#

ifeq "$(CONFIG_PCI)" "y"
obj-y := pci-frv.o pci-irq.o pci-vdk.o

ifeq "$(CONFIG_MMU)" "y"
obj-y += pci-dma.o
else
obj-y += pci-dma-nommu.o
endif
endif

obj-$(CONFIG_MTD) += flash.o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #
# Makefile for the arch-specific parts of the memory manager.
#

obj-y := init.o kmap.o

obj-$(CONFIG_MMU) += \
	pgalloc.o highmem.o fault.o extable.o cache-page.o tlb-flush.o tlb-miss.o \
	mmu-context.o dma-alloc.o elf-fdpic.o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #
# arch/arm/boot/Makefile
#
# This file is subject to the terms and conditions of the GNU General Public
# License.  See the file "COPYING" in the main directory of this archive
# for more details.
#
# Copyright (C) 1995-2000 Russell King
#

targets := Image zImage bootpImage

SYSTEM	=$(LINUX)

ZTEXTADDR	 = 0x02080000
PARAMS_PHYS	 = 0x0207c000
INITRD_PHYS	 = 0x02180000
INITRD_VIRT	 = 0x02180000

OBJCOPYFLAGS	:=-O binary -R .note -R .note.gnu.build-id -R .comment

#
# If you don't define ZRELADDR above,
# then it defaults to ZTEXTADDR
#
ifeq ($(ZRELADDR),)
ZRELADDR	= $(ZTEXTADDR)
endif

export	SYSTEM ZTEXTADDR ZBSSADDR ZRELADDR INITRD_PHYS INITRD_VIRT PARAMS_PHYS

Image: $(obj)/Image

targets: $(obj)/Image

$(obj)/Image: vmlinux FORCE
	$(OBJCOPY) $(OBJCOPYFLAGS) -S vmlinux $@

#$(obj)/Image:	$(CONFIGURE) $(SYSTEM)
#	$(OBJCOPY) $(OBJCOPYFLAGS) -g -S $(SYSTEM) $@

bzImage: zImage

zImage:	$(CONFIGURE) compressed/$(LINUX)
	$(OBJCOPY) $(OBJCOPYFLAGS) -S compressed/$(LINUX) $@

bootpImage: bootp/bootp
	$(OBJCOPY) $(OBJCOPYFLAGS) -S bootp/bootp $@

compressed/$(LINUX): $(LINUX) dep
	@$(MAKE) -C compressed $(LINUX)

bootp/bootp: zImage initrd
	@$(MAKE) -C bootp bootp

initrd:
	@test "$(INITRD_VIRT)" != "" || (echo This architecture does not support INITRD; exit -1)
	@test "$(INITRD)" != "" || (echo You must specify INITRD; exit -1)

#
# installation
#
install: $(CONFIGURE) Image
	sh ./install.sh $(KERNELRELEASE) Image System.map "$(INSTALL_PATH)"

zinstall: $(CONFIGURE) zImage
	sh ./install.sh $(KERNELRELEASE) zImage System.map "$(INSTALL_PATH)"

#
# miscellany
#
mrproper clean:
#	@$(MAKE) -C compressed clean
#	@$(MAKE) -C bootp clean

dep:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #
# Makefile for x86 specific library files.
#

# Produces uninteresting flaky coverage.
KCOV_INSTRUMENT_delay.o	:= n

inat_tables_script = $(srctree)/arch/x86/tools/gen-insn-attr-x86.awk
inat_tables_maps = $(srctree)/arch/x86/lib/x86-opcode-map.txt
quiet_cmd_inat_tables = GEN     $@
      cmd_inat_tables = $(AWK) -f $(inat_tables_script) $(inat_tables_maps) > $@ || rm -f $@

$(obj)/inat-tables.c: $(inat_tables_script) $(inat_tables_maps)
	$(call cmd,inat_tables)

$(obj)/inat.o: $(obj)/inat-tables.c

clean-files := inat-tables.c

obj-$(CONFIG_SMP) += msr-smp.o cache-smp.o

lib-y := delay.o misc.o cmdline.o cpu.o
lib-y += usercopy_$(BITS).o usercopy.o getuser.o putuser.o
lib-y += memcpy_$(BITS).o
lib-$(CONFIG_RWSEM_XCHGADD_ALGORITHM) += rwsem.o
lib-$(CONFIG_INSTRUCTION_DECODER) += insn.o inat.o
lib-$(CONFIG_RANDOMIZE_BASE) += kaslr.o
lib-$(CONFIG_RETPOLINE) += retpoline.o

obj-y += msr.o msr-reg.o msr-reg-export.o hweight.o

ifeq ($(CONFIG_X86_32),y)
        obj-y += atomic64_32.o
        lib-y += atomic64_cx8_32.o
        lib-y += checksum_32.o
        lib-y += strstr_32.o
        lib-y += string_32.o
ifneq ($(CONFIG_X86_CMPXCHG64),y)
        lib-y += cmpxchg8b_emu.o atomic64_386_32.o
endif
        lib-$(CONFIG_X86_USE_3DNOW) += mmx_32.o
else
        obj-y += iomap_copy_64.o
        lib-y += csum-partial_64.o csum-copy_64.o csum-wrappers_64.o
        lib-y += clear_page_64.o copy_page_64.o
        lib-y += memmove_64.o memset_64.o
        lib-y += copy_user_64.o
	lib-y += cmpxchg16b_emu.o
endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # __restore_processor_state() restores %gs after S3 resume and so should not
# itself be stack-protected
nostackp := $(call cc-option, -fno-stack-protector)
CFLAGS_cpu.o	:= $(nostackp)

obj-$(CONFIG_PM_SLEEP)		+= cpu.o
obj-$(CONFIG_HIBERNATION)	+= hibernate_$(BITS).o hibernate_asm_$(BITS).o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #
# Arch-specific CryptoAPI modules.
#

avx2_supported := $(call as-instr,vpgatherdd %ymm0$(comma)(%eax$(comma)%ymm1\
                                $(comma)4)$(comma)%ymm2,yes,no)
ifeq ($(avx2_supported),yes)
	obj-$(CONFIG_CRYPTO_SHA1_MB) += sha1-mb.o
	sha1-mb-y := sha1_mb.o sha1_mb_mgr_flush_avx2.o \
	     sha1_mb_mgr_init_avx2.o sha1_mb_mgr_submit_avx2.o sha1_x8_avx2.o
endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  " Vim support file to detect file types
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last Change:	2017 Jan 06

" Listen very carefully, I will say this only once
if exists("did_load_filetypes")
  finish
endif
let did_load_filetypes = 1

" Line continuation is used here, remove 'C' from 'cpoptions'
let s:cpo_save = &cpo
set cpo&vim

augroup filetypedetect

" Ignored extensions
if exists("*fnameescape")
au BufNewFile,BufRead ?\+.orig,?\+.bak,?\+.old,?\+.new,?\+.dpkg-dist,?\+.dpkg-old,?\+.dpkg-new,?\+.dpkg-bak,?\+.rpmsave,?\+.rpmnew,?\+.pacsave,?\+.pacnew
	\ exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
au BufNewFile,BufRead *~
	\ let s:name = expand("<afile>") |
	\ let s:short = substitute(s:name, '\~$', '', '') |
	\ if s:name != s:short && s:short != "" |
	\   exe "doau filetypedetect BufRead " . fnameescape(s:short) |
	\ endif |
	\ unlet! s:name s:short
au BufNewFile,BufRead ?\+.in
	\ if expand("<afile>:t") != "configure.in" |
	\   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) |
	\ endif
elseif &verbose > 0
  echomsg "Warning: some filetypes will not be recognized because this version of Vim does not have fnameescape()"
endif

" Pattern used to match file names which should not be inspected.
" Currently finds compressed files.
if !exists("g:ft_ignore_pat")
  let g:ft_ignore_pat = '\.\(Z\|gz\|bz2\|zip\|tgz\)$'
endif

" Function used for patterns that end in a star: don't set the filetype if the
" file name matches ft_ignore_pat.
func! s:StarSetf(ft)
  if expand("<amatch>") !~ g:ft_ignore_pat
    exe 'setf ' . a:ft
  endif
endfunc

" Abaqus or Trasys
au BufNewFile,BufRead *.inp			call s:Check_inp()

func! s:Check_inp()
  if getline(1) =~ '^\*'
    setf abaqus
  else
    let n = 1
    if line("$") > 500
      let nmax = 500
    else
      let nmax = line("$")
    endif
    while n <= nmax
      if getline(n) =~? "^header surface data"
	setf trasys
	break
      endif
      let n = n + 1
    endwhile
  endif
endfunc

" A-A-P recipe
au BufNewFile,BufRead *.aap			setf aap

" A2ps printing utility
au BufNewFile,BufRead */etc/a2ps.cfg,*/etc/a2ps/*.cfg,a2psrc,.a2psrc setf a2ps

" ABAB/4
au BufNewFile,BufRead *.abap			setf abap

" ABC music notation
au BufNewFile,BufRead *.abc			setf abc

" ABEL
au BufNewFile,BufRead *.abl			setf abel

" AceDB
au BufNewFile,BufRead *.wrm			setf acedb

" Ada (83, 9X, 95)
au BufNewFile,BufRead *.adb,*.ads,*.ada		setf ada
if has("vms")
  au BufNewFile,BufRead *.gpr,*.ada_m,*.adc	setf ada
else
  au BufNewFile,BufRead *.gpr			setf ada
endif

" AHDL
au BufNewFile,BufRead *.tdf			setf ahdl

" AMPL
au BufNewFile,BufRead *.run			setf ampl

" Ant
au BufNewFile,BufRead build.xml			setf ant

" Arduino
au BufNewFile,BufRead *.ino,*.pde		setf arduino

" Apache style config file
au BufNewFile,BufRead proftpd.conf*		call s:StarSetf('apachestyle')

" Apache config file
au BufNewFile,BufRead .htaccess,*/etc/httpd/*.conf		setf apache

" XA65 MOS6510 cross assembler
au BufNewFile,BufRead *.a65			setf a65

" Applescript
au BufNewFile,BufRead *.scpt			setf applescript

" Applix ELF
au BufNewFile,BufRead *.am
	\ if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif

" ALSA configuration
au BufNewFile,BufRead .asoundrc,*/usr/share/alsa/alsa.conf,*/etc/asound.conf setf alsaconf

" Arc Macro Language
au BufNewFile,BufRead *.aml			setf aml

" APT config file
au BufNewFile,BufRead apt.conf		       setf aptconf
au BufNewFile,BufRead */.aptitude/config       setf aptconf
au BufNewFile,BufRead */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf} setf aptconf

" Arch Inventory file
au BufNewFile,BufRead .arch-inventory,=tagging-method	setf arch

" ART*Enterprise (formerly ART-IM)
au BufNewFile,BufRead *.art			setf art

" AsciiDoc
au BufNewFile,BufRead *.asciidoc,*.adoc		setf asciidoc

" ASN.1
au BufNewFile,BufRead *.asn,*.asn1		setf asn

" Active Server Pages (with Visual Basic Script)
au BufNewFile,BufRead *.asa
	\ if exists("g:filetype_asa") |
	\   exe "setf " . g:filetype_asa |
	\ else |
	\   setf aspvbs |
	\ endif

" Active Server Pages (with Perl or Visual Basic Script)
au BufNewFile,BufRead *.asp
	\ if exists("g:filetype_asp") |
	\   exe "setf " . g:filetype_asp |
	\ elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |
	\   setf aspperl |
	\ else |
	\   setf aspvbs |
	\ endif

" Grub (must be before catch *.lst)
au BufNewFile,BufRead */boot/grub/menu.lst,*/boot/grub/grub.conf,*/etc/grub.conf setf grub

" Assembly (all kinds)
" *.lst is not pure assembly, it has two extra columns (address, byte codes)
au BufNewFile,BufRead *.asm,*.[sS],*.[aA],*.mac,*.lst	call s:FTasm()

" This function checks for the kind of assembly that is wanted by the user, or
" can be detected from the first five lines of the file.
func! s:FTasm()
  " make sure b:asmsyntax exists
  if !exists("b:asmsyntax")
    let b:asmsyntax = ""
  endif

  if b:asmsyntax == ""
    call s:FTasmsyntax()
  endif

  " if b:asmsyntax still isn't set, default to asmsyntax or GNU
  if b:asmsyntax == ""
    if exists("g:asmsyntax")
      let b:asmsyntax = g:asmsyntax
    else
      let b:asmsyntax = "asm"
    endif
  endif

  exe "setf " . fnameescape(b:asmsyntax)
endfunc

func! s:FTasmsyntax()
  " see if file contains any asmsyntax=foo overrides. If so, change
  " b:asmsyntax appropriately
  let head = " ".getline(1)." ".getline(2)." ".getline(3)." ".getline(4).
	\" ".getline(5)." "
  let match = matchstr(head, '\sasmsyntax=\zs[a-zA-Z0-9]\+\ze\s')
  if match != ''
    let b:asmsyntax = match
  elseif ((head =~? '\.title') || (head =~? '\.ident') || (head =~? '\.macro') || (head =~? '\.subtitle') || (head =~? '\.library'))
    let b:asmsyntax = "vmasm"
  endif
endfunc

" Macro (VAX)
au BufNewFile,BufRead *.mar			setf vmasm

" Atlas
au BufNewFile,BufRead *.atl,*.as		setf atlas

" Autoit v3
au BufNewFile,BufRead *.au3			setf autoit

" Autohotkey
au BufNewFile,BufRead *.ahk			setf autohotkey

" Automake
au BufNewFile,BufRead [mM]akefile.am,GNUmakefile.am	setf automake

" Autotest .at files are actually m4
au BufNewFile,BufRead *.at			setf m4

" Avenue
au BufNewFile,BufRead *.ave			setf ave

" Awk
au BufNewFile,BufRead *.awk			setf awk

" B
au BufNewFile,BufRead *.mch,*.ref,*.imp		setf b

" BASIC or Visual Basic
au BufNewFile,BufRead *.bas			call s:FTVB("basic")

" Check if one of the first five lines contains "VB_Name".  In that case it is
" probably a Visual Basic file.  Otherwise it's assumed to be "alt" filetype.
func! s:FTVB(alt)
  if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'VB_Name\|Begin VB\.\(Form\|MDIForm\|UserControl\)'
    setf vb
  else
    exe "setf " . a:alt
  endif
endfunc

" Visual Basic Script (close to Visual Basic) or Visual Basic .NET
au BufNewFile,BufRead *.vb,*.vbs,*.dsm,*.ctl	setf vb

" IBasic file (similar to QBasic)
au BufNewFile,BufRead *.iba,*.ibi		setf ibasic

" FreeBasic file (similar to QBasic)
au BufNewFile,BufRead *.fb,*.bi			setf freebasic

" Batch file for MSDOS.
au BufNewFile,BufRead *.bat,*.sys		setf dosbatch
" *.cmd is close to a Batch file, but on OS/2 Rexx files also use *.cmd.
au BufNewFile,BufRead *.cmd
	\ if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif

" Batch file for 4DOS
au BufNewFile,BufRead *.btm			call s:FTbtm()
func! s:FTbtm()
  if exists("g:dosbatch_syntax_for_btm") && g:dosbatch_syntax_for_btm
    setf dosbatch
  else
    setf btm
  endif
endfunc

" BC calculator
au BufNewFile,BufRead *.bc			setf bc

" BDF font
au BufNewFile,BufRead *.bdf			setf bdf

" BibTeX bibliography database file
au BufNewFile,BufRead *.bib			setf bib

" BibTeX Bibliography Style
au BufNewFile,BufRead *.bst			setf bst

" BIND configuration
au BufNewFile,BufRead named.conf,rndc.conf	setf named

" BIND zone
au BufNewFile,BufRead named.root		setf bindzone
au BufNewFile,BufRead *.db			call s:BindzoneCheck('')

func! s:BindzoneCheck(default)
  if getline(1).getline(2).getline(3).getline(4) =~ '^; <<>> DiG [0-9.]\+ <<>>\|BIND.*named\|$ORIGIN\|$TTL\|IN\s\+SOA'
    setf bindzone
  elseif a:default != ''
    exe 'setf ' . a:default
  endif
endfunc

" Blank
au BufNewFile,BufRead *.bl			setf blank

" Blkid cache file
au BufNewFile,BufRead */etc/blkid.tab,*/etc/blkid.tab.old   setf xml

" Bazel (http://bazel.io)
autocmd BufRead,BufNewFile *.bzl,WORKSPACE setfiletype bzl
if has("fname_case")
  autocmd BufRead,BufNewFile BUILD setfiletype bzl
endif

" C or lpc
au BufNewFile,BufRead *.c			call s:FTlpc()

func! s:FTlpc()
  if exists("g:lpc_syntax_for_c")
    let lnum = 1
    while lnum <= 12
      if getline(lnum) =~# '^\(//\|inherit\|private\|protected\|nosave\|string\|object\|mapping\|mixed\)'
	setf lpc
	return
      endif
      let lnum = lnum + 1
    endwhile
  endif
  setf c
endfunc

" Calendar
au BufNewFile,BufRead calendar			setf calendar

" C#
au BufNewFile,BufRead *.cs			setf cs

" CSDL
au BufNewFile,BufRead *.csdl			setf csdl

" Cabal
au BufNewFile,BufRead *.cabal			setf cabal

" Cdrdao TOC
au BufNewFile,BufRead *.toc			setf cdrtoc

" Cdrdao config
au BufNewFile,BufRead */etc/cdrdao.conf,*/etc/defaults/cdrdao,*/etc/default/cdrdao,.cdrdao	setf cdrdaoconf

" Cfengine
au BufNewFile,BufRead cfengine.conf		setf cfengine

" ChaiScript
au BufRead,BufNewFile *.chai			setf chaiscript

" Comshare Dimension Definition Language
au BufNewFile,BufRead *.cdl			setf cdl

" Conary Recipe
au BufNewFile,BufRead *.recipe			setf conaryrecipe

" Controllable Regex Mutilator
au BufNewFile,BufRead *.crm			setf crm

" Cyn++
au BufNewFile,BufRead *.cyn			setf cynpp

" Cynlib
" .cc and .cpp files can be C++ or Cynlib.
au BufNewFile,BufRead *.cc
	\ if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
au BufNewFile,BufRead *.cpp
	\ if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif

" C++
au BufNewFile,BufRead *.cxx,*.c++,*.hh,*.hxx,*.hpp,*.ipp,*.moc,*.tcc,*.inl setf cpp
if has("fname_case")
  au BufNewFile,BufRead *.C,*.H setf cpp
endif

" .h files can be C, Ch C++, ObjC or ObjC++.
" Set c_syntax_for_h if you want C, ch_syntax_for_h if you want Ch. ObjC is
" detected automatically.
au BufNewFile,BufRead *.h			call s:FTheader()

func! s:FTheader()
  if match(getline(1, min([line("$"), 200])), '^@\(interface\|end\|class\)') > -1
    if exists("g:c_syntax_for_h")
      setf objc
    else
      setf objcpp
    endif
  elseif exists("g:c_syntax_for_h")
    setf c
  elseif exists("g:ch_syntax_for_h")
    setf ch
  else
    setf cpp
  endif
endfunc

" Ch (CHscript)
au BufNewFile,BufRead *.chf			setf ch

" TLH files are C++ headers generated by Visual C++'s #import from typelibs
au BufNewFile,BufRead *.tlh			setf cpp

" Cascading Style Sheets
au BufNewFile,BufRead *.css			setf css

" Century Term Command Scripts (*.cmd too)
au BufNewFile,BufRead *.con			setf cterm

" Changelog
au BufNewFile,BufRead changelog.Debian,changelog.dch,NEWS.Debian,NEWS.dch
					\	setf debchangelog

au BufNewFile,BufRead [cC]hange[lL]og
	\  if getline(1) =~ '; urgency='
	\|   setf debchangelog
	\| else
	\|   setf changelog
	\| endif

au BufNewFile,BufRead NEWS
	\  if getline(1) =~ '; urgency='
	\|   setf debchangelog
	\| endif

" CHILL
au BufNewFile,BufRead *..ch			setf chill

" Changes for WEB and CWEB or CHILL
au BufNewFile,BufRead *.ch			call s:FTchange()

" This function checks if one of the first ten lines start with a '@'.  In
" that case it is probably a change file.
" If the first line starts with # or ! it's probably a ch file.
" If a line has "main", "include", "//" ir "/*" it's probably ch.
" Otherwise CHILL is assumed.
func! s:FTchange()
  let lnum = 1
  while lnum <= 10
    if getline(lnum)[0] == '@'
      setf change
      return
    endif
    if lnum == 1 && (getline(1)[0] == '#' || getline(1)[0] == '!')
      setf ch
      return
    endif
    if getline(lnum) =~ "MODULE"
      setf chill
      return
    endif
    if getline(lnum) =~ 'main\s*(\|#\s*include\|//'
      setf ch
      return
    endif
    let lnum = lnum + 1
  endwhile
  setf chill
endfunc

" ChordPro
au BufNewFile,BufRead *.chopro,*.crd,*.cho,*.crdpro,*.chordpro	setf chordpro

" Clean
au BufNewFile,BufRead *.dcl,*.icl		setf clean

" Clever
au BufNewFile,BufRead *.eni			setf cl

" Clever or dtd
au BufNewFile,BufRead *.ent			call s:FTent()

func! s:FTent()
  " This function checks for valid cl syntax in the first five lines.
  " Look for either an opening comment, '#', or a block start, '{".
  " If not found, assume SGML.
  let lnum = 1
  while lnum < 6
    let line = getline(lnum)
    if line =~ '^\s*[#{]'
      setf cl
      return
    elseif line !~ '^\s*$'
      " Not a blank line, not a comment, and not a block start,
      " so doesn't look like valid cl code.
      break
    endif
    let lnum = lnum + 1
  endw
  setf dtd
endfunc

" Clipper (or FoxPro; could also be eviews)
au BufNewFile,BufRead *.prg
	\ if exists("g:filetype_prg") |
	\   exe "setf " . g:filetype_prg |
	\ else |
	\   setf clipper |
	\ endif

" Clojure
au BufNewFile,BufRead *.clj,*.cljs,*.cljx,*.cljc		setf clojure

" Cmake
au BufNewFile,BufRead CMakeLists.txt,*.cmake,*.cmake.in		setf cmake

" Cmusrc
au BufNewFile,BufRead */.cmus/{autosave,rc,command-history,*.theme} setf cmusrc
au BufNewFile,BufRead */cmus/{rc,*.theme}			setf cmusrc

" Cobol
au BufNewFile,BufRead *.cbl,*.cob,*.lib	setf cobol
"   cobol or zope form controller python script? (heuristic)
au BufNewFile,BufRead *.cpy
	\ if getline(1) =~ '^##' |
	\   setf python |
	\ else |
	\   setf cobol |
	\ endif

" Coco/R
au BufNewFile,BufRead *.atg			setf coco

" Cold Fusion
au BufNewFile,BufRead *.cfm,*.cfi,*.cfc		setf cf

" Configure scripts
au BufNewFile,BufRead configure.in,configure.ac setf config

" CUDA  Cumpute Unified Device Architecture
au BufNewFile,BufRead *.cu			setf cuda

" Dockerfile
au BufNewFile,BufRead Dockerfile,*.Dockerfile	setf dockerfile

" WildPackets EtherPeek Decoder
au BufNewFile,BufRead *.dcd			setf dcd

" Enlightenment configuration files
au BufNewFile,BufRead *enlightenment/*.cfg	setf c

" Eterm
au BufNewFile,BufRead *Eterm/*.cfg		setf eterm

" Euphoria 3 or 4
au BufNewFile,BufRead *.eu,*.ew,*.ex,*.exu,*.exw  call s:EuphoriaCheck()
if has("fname_case")
   au BufNewFile,BufRead *.EU,*.EW,*.EX,*.EXU,*.EXW  call s:EuphoriaCheck()
endif

func! s:EuphoriaCheck()
  if exists('g:filetype_euphoria')
    exe 'setf ' . g:filetype_euphoria
  else
    setf euphoria3
  endif
endfunc

" Lynx config files
au BufNewFile,BufRead lynx.cfg			setf lynx

" Quake
au BufNewFile,BufRead *baseq[2-3]/*.cfg,*id1/*.cfg	setf quake
au BufNewFile,BufRead *quake[1-3]/*.cfg			setf quake

" Quake C
au BufNewFile,BufRead *.qc			setf c

" Configure files
au BufNewFile,BufRead *.cfg			setf cfg

" Cucumber
au BufNewFile,BufRead *.feature			setf cucumber

" Communicating Sequential Processes
au BufNewFile,BufRead *.csp,*.fdr		setf csp

" CUPL logic description and simulation
au BufNewFile,BufRead *.pld			setf cupl
au BufNewFile,BufRead *.si			setf cuplsim

" Debian Control
au BufNewFile,BufRead */debian/control		setf debcontrol
au BufNewFile,BufRead control
	\  if getline(1) =~ '^Source:'
	\|   setf debcontrol
	\| endif

" Debian Sources.list
au BufNewFile,BufRead */etc/apt/sources.list		setf debsources
au BufNewFile,BufRead */etc/apt/sources.list.d/*.list	setf debsources

" Deny hosts
au BufNewFile,BufRead denyhosts.conf		setf denyhosts

" dnsmasq(8) configuration files
au BufNewFile,BufRead */etc/dnsmasq.conf	setf dnsmasq

" ROCKLinux package description
au BufNewFile,BufRead *.desc			setf desc

" the D language or dtrace
au BufNewFile,BufRead *.d			call s:DtraceCheck()

func! s:DtraceCheck()
  let lines = getline(1, min([line("$"), 100]))
  if match(lines, '^module\>\|^import\>') > -1
    " D files often start with a module and/or import statement.
    setf d
  elseif match(lines, '^#!\S\+dtrace\|#pragma\s\+D\s\+option\|:\S\{-}:\S\{-}:') > -1
    setf dtrace
  else
    setf d
  endif
endfunc

" Desktop files
au BufNewFile,BufRead *.desktop,.directory	setf desktop

" Dict config
au BufNewFile,BufRead dict.conf,.dictrc		setf dictconf

" Dictd config
au BufNewFile,BufRead dictd.conf		setf dictdconf

" Diff files
au BufNewFile,BufRead *.diff,*.rej,*.patch	setf diff

" Dircolors
au BufNewFile,BufRead .dir_colors,.dircolors,*/etc/DIR_COLORS	setf dircolors

" Diva (with Skill) or InstallShield
au BufNewFile,BufRead *.rul
	\ if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |
	\   setf ishd |
	\ else |
	\   setf diva |
	\ endif

" DCL (Digital Command Language - vms) or DNS zone file
au BufNewFile,BufRead *.com			call s:BindzoneCheck('dcl')

" DOT
au BufNewFile,BufRead *.dot			setf dot

" Dylan - lid files
au BufNewFile,BufRead *.lid			setf dylanlid

" Dylan - intr files (melange)
au BufNewFile,BufRead *.intr			setf dylanintr

" Dylan
au BufNewFile,BufRead *.dylan			setf dylan

" Microsoft Module Definition
au BufNewFile,BufRead *.def			setf def

" Dracula
au BufNewFile,BufRead *.drac,*.drc,*lvs,*lpe	setf dracula

" Datascript
au BufNewFile,BufRead *.ds			setf datascript

" dsl
au BufNewFile,BufRead *.dsl			setf dsl

" DTD (Document Type Definition for XML)
au BufNewFile,BufRead *.dtd			setf dtd

" DTS/DSTI (device tree files)
au BufNewFile,BufRead *.dts,*.dtsi		setf dts

" EDIF (*.edf,*.edif,*.edn,*.edo)
au BufNewFile,BufRead *.ed\(f\|if\|n\|o\)	setf edif

" EditorConfig (close enough to dosini)
au BufNewFile,BufRead .editorconfig		setf dosini

" Embedix Component Description
au BufNewFile,BufRead *.ecd			setf ecd

" Eiffel or Specman or Euphoria
au BufNewFile,BufRead *.e,*.E			call s:FTe()

" Elinks configuration
au BufNewFile,BufRead */etc/elinks.conf,*/.elinks/elinks.conf	setf elinks

func! s:FTe()
  if exists('g:filetype_euphoria')
    exe 'setf ' . g:filetype_euphoria
  else
    let n = 1
    while n < 100 && n < line("$")
      if getline(n) =~ "^\\s*\\(<'\\|'>\\)\\s*$"
	setf specman
	return
      endif
      let n = n + 1
    endwhile
    setf eiffel
  endif
endfunc

" ERicsson LANGuage; Yaws is erlang too
au BufNewFile,BufRead *.erl,*.hrl,*.yaws	setf erlang

" Elm Filter Rules file
au BufNewFile,BufRead filter-rules		setf elmfilt

" ESMTP rc file
au BufNewFile,BufRead *esmtprc			setf esmtprc

" ESQL-C
au BufNewFile,BufRead *.ec,*.EC			setf esqlc

" Esterel
au BufNewFile,BufRead *.strl			setf esterel

" Essbase script
au BufNewFile,BufRead *.csc			setf csc

" Exim
au BufNewFile,BufRead exim.conf			setf exim

" Expect
au BufNewFile,BufRead *.exp			setf expect

" Exports
au BufNewFile,BufRead exports			setf exports

" Falcon
au BufNewFile,BufRead *.fal			setf falcon

" Fantom
au BufNewFile,BufRead *.fan,*.fwt		setf fan

" Factor
au BufNewFile,BufRead *.factor			setf factor

" Fetchmail RC file
au BufNewFile,BufRead .fetchmailrc		setf fetchmail

" FlexWiki - disabled, because it has side effects when a .wiki file
" is not actually FlexWiki
"au BufNewFile,BufRead *.wiki			setf flexwiki

" Focus Executable
au BufNewFile,BufRead *.fex,*.focexec		setf focexec

" Focus Master file (but not for auto.master)
au BufNewFile,BufRead auto.master		setf conf
au BufNewFile,BufRead *.mas,*.master		setf master

" Forth
au BufNewFile,BufRead *.fs,*.ft			setf forth

" Reva Forth
au BufNewFile,BufRead *.frt			setf reva

" Fortran
if has("fname_case")
  au BufNewFile,BufRead *.F,*.FOR,*.FPP,*.FTN,*.F77,*.F90,*.F95,*.F03,*.F08	 setf fortran
endif
au BufNewFile,BufRead   *.f,*.for,*.fortran,*.fpp,*.ftn,*.f77,*.f90,*.f95,*.f03,*.f08  setf fortran

" Framescript
au BufNewFile,BufRead *.fsl			setf framescript

" FStab
au BufNewFile,BufRead fstab,mtab		setf fstab

" GDB command files
au BufNewFile,BufRead .gdbinit			setf gdb

" GDMO
au BufNewFile,BufRead *.mo,*.gdmo		setf gdmo

" Gedcom
au BufNewFile,BufRead *.ged,lltxxxxx.txt	setf gedcom

" Git
au BufNewFile,BufRead COMMIT_EDITMSG,MERGE_MSG,TAG_EDITMSG setf gitcommit
au BufNewFile,BufRead *.git/config,.gitconfig,.gitmodules setf gitconfig
au BufNewFile,BufRead *.git/modules/*/config	setf gitconfig
au BufNewFile,BufRead */.config/git/config	setf gitconfig
if !empty($XDG_CONFIG_HOME)
  au BufNewFile,BufRead $XDG_CONFIG_HOME/git/config	setf gitconfig
endif
au BufNewFile,BufRead git-rebase-todo		setf gitrebase
au BufNewFile,BufRead .msg.[0-9]*
      \ if getline(1) =~ '^From.*# This line is ignored.$' |
      \   setf gitsendemail |
      \ endif
au BufNewFile,BufRead *.git/*
      \ if getline(1) =~ '^\x\{40\}\>\|^ref: ' |
      \   setf git |
      \ endif

" Gkrellmrc
au BufNewFile,BufRead gkrellmrc,gkrellmrc_?	setf gkrellmrc

" GP scripts (2.0 and onward)
au BufNewFile,BufRead *.gp,.gprc		setf gp

" GPG
au BufNewFile,BufRead */.gnupg/options		setf gpg
au BufNewFile,BufRead */.gnupg/gpg.conf		setf gpg
au BufNewFile,BufRead */usr/*/gnupg/options.skel setf gpg
if !empty($GNUPGHOME)
  au BufNewFile,BufRead $GNUPGHOME/options	setf gpg
  au BufNewFile,BufRead $GNUPGHOME/gpg.conf	setf gpg
endif

" gnash(1) configuration files
au BufNewFile,BufRead gnashrc,.gnashrc,gnashpluginrc,.gnashpluginrc setf gnash

" Gitolite
au BufNewFile,BufRead gitolite.conf		setf gitolite
au BufNewFile,BufRead */gitolite-admin/conf/*	call s:StarSetf('gitolite')
au BufNewFile,BufRead {,.}gitolite.rc,example.gitolite.rc	setf perl

" Gnuplot scripts
au BufNewFile,BufRead *.gpi			setf gnuplot

" Go (Google)
au BufNewFile,BufRead *.go			setf go

" GrADS scripts
au BufNewFile,BufRead *.gs			setf grads

" Gretl
au BufNewFile,BufRead *.gretl			setf gretl

" Groovy
au BufNewFile,BufRead *.gradle,*.groovy		setf groovy

" GNU Server Pages
au BufNewFile,BufRead *.gsp			setf gsp

" Group file
au BufNewFile,BufRead */etc/group,*/etc/group-,*/etc/group.edit,*/etc/gshadow,*/etc/gshadow-,*/etc/gshadow.edit,*/var/backups/group.bak,*/var/backups/gshadow.bak  setf group

" GTK RC
au BufNewFile,BufRead .gtkrc,gtkrc		setf gtkrc

" Haml
au BufNewFile,BufRead *.haml			setf haml

" Hamster Classic | Playground files
au BufNewFile,BufRead *.hsc,*.hsm		setf hamster

" Haskell
au BufNewFile,BufRead *.hs,*.hs-boot		setf haskell
au BufNewFile,BufRead *.lhs			setf lhaskell
au BufNewFile,BufRead *.chs			setf chaskell

" Haste
au BufNewFile,BufRead *.ht			setf haste
au BufNewFile,BufRead *.htpp			setf hastepreproc

" Hercules
au BufNewFile,BufRead *.vc,*.ev,*.sum,*.errsum	setf hercules

" HEX (Intel)
au BufNewFile,BufRead *.hex,*.h32		setf hex

" Tilde (must be before HTML)
au BufNewFile,BufRead *.t.html			setf tilde

" HTML (.shtml and .stm for server side)
au BufNewFile,BufRead *.html,*.htm,*.shtml,*.stm  call s:FThtml()

" Distinguish between HTML, XHTML and Django
func! s:FThtml()
  let n = 1
  while n < 10 && n < line("$")
    if getline(n) =~ '\<DTD\s\+XHTML\s'
      setf xhtml
      return
    endif
    if getline(n) =~ '{%\s*\(extends\|block\|load\)\>\|{#\s\+'
      setf htmldjango
      return
    endif
    let n = n + 1
  endwhile
  setf html
endfunc

" HTML with Ruby - eRuby
au BufNewFile,BufRead *.erb,*.rhtml		setf eruby

" HTML with M4
au BufNewFile,BufRead *.html.m4			setf htmlm4

" HTML Cheetah template
au BufNewFile,BufRead *.tmpl			setf htmlcheetah

" Host config
au BufNewFile,BufRead */etc/host.conf		setf hostconf

" Hosts access
au BufNewFile,BufRead */etc/hosts.allow,*/etc/hosts.deny  setf hostsaccess

" Hyper Builder
au BufNewFile,BufRead *.hb			setf hb

" Httest
au BufNewFile,BufRead *.htt,*.htb		setf httest

" Icon
au BufNewFile,BufRead *.icn			setf icon

" IDL (Interface Description Language)
au BufNewFile,BufRead *.idl			call s:FTidl()

" Distinguish between standard IDL and MS-IDL
func! s:FTidl()
  let n = 1
  while n < 50 && n < line("$")
    if getline(n) =~ '^\s*import\s\+"\(unknwn\|objidl\)\.idl"'
      setf msidl
      return
    endif
    let n = n + 1
  endwhile
  setf idl
endfunc

" Microsoft IDL (Interface Description Language)  Also *.idl
" MOF = WMI (Windows Management Instrumentation) Managed Object Format
au BufNewFile,BufRead *.odl,*.mof		setf msidl

" Icewm menu
au BufNewFile,BufRead */.icewm/menu		setf icemenu

" Indent profile (must come before IDL *.pro!)
au BufNewFile,BufRead .indent.pro		setf indent
au BufNewFile,BufRead indent.pro		call s:ProtoCheck('indent')

" IDL (Interactive Data Language)
au BufNewFile,BufRead *.pro			call s:ProtoCheck('idlang')

" Distinguish between "default" and Cproto prototype file. */
func! s:ProtoCheck(default)
  " Cproto files have a comment in the first line and a function prototype in
  " the second line, it always ends in ";".  Indent files may also have
  " comments, thus we can't match comments to see the difference.
  " IDL files can have a single ';' in the second line, require at least one
  " chacter before the ';'.
  if getline(2) =~ '.;$'
    setf cpp
  else
    exe 'setf ' . a:default
  endif
endfunc


" Indent RC
au BufNewFile,BufRead indentrc			setf indent

" Inform
au BufNewFile,BufRead *.inf,*.INF		setf inform

" Initng
au BufNewFile,BufRead */etc/initng/*/*.i,*.ii	setf initng

" Innovation Data Processing
au BufRead,BufNewFile upstream.dat\c,upstream.*.dat\c,*.upstream.dat\c 	setf upstreamdat
au BufRead,BufNewFile upstream.log\c,upstream.*.log\c,*.upstream.log\c 	setf upstreamlog
au BufRead,BufNewFile upstreaminstall.log\c,upstreaminstall.*.log\c,*.upstreaminstall.log\c setf upstreaminstalllog
au BufRead,BufNewFile usserver.log\c,usserver.*.log\c,*.usserver.log\c 	setf usserverlog
au BufRead,BufNewFile usw2kagt.log\c,usw2kagt.*.log\c,*.usw2kagt.log\c 	setf usw2kagtlog

" Ipfilter
au BufNewFile,BufRead ipf.conf,ipf6.conf,ipf.rules	setf ipfilter

" Informix 4GL (source - canonical, include file, I4GL+M4 preproc.)
au BufNewFile,BufRead *.4gl,*.4gh,*.m4gl	setf fgl

" .INI file for MSDOS
au BufNewFile,BufRead *.ini			setf dosini

" SysV Inittab
au BufNewFile,BufRead inittab			setf inittab

" Inno Setup
au BufNewFile,BufRead *.iss			setf iss

" J
au BufNewFile,BufRead *.ijs			setf j

" JAL
au BufNewFile,BufRead *.jal,*.JAL		setf jal

" Jam
au BufNewFile,BufRead *.jpl,*.jpr		setf jam

" Java
au BufNewFile,BufRead *.java,*.jav		setf java

" JavaCC
au BufNewFile,BufRead *.jj,*.jjt		setf javacc

" JavaScript, ECMAScript
au BufNewFile,BufRead *.js,*.javascript,*.es,*.jsx   setf javascript

" Java Server Pages
au BufNewFile,BufRead *.jsp			setf jsp

" Java Properties resource file (note: doesn't catch font.properties.pl)
au BufNewFile,BufRead *.properties,*.properties_??,*.properties_??_??	setf jproperties
au BufNewFile,BufRead *.properties_??_??_*	call s:StarSetf('jproperties')

" Jess
au BufNewFile,BufRead *.clp			setf jess

" Jgraph
au BufNewFile,BufRead *.jgr			setf jgraph

" Jovial
au BufNewFile,BufRead *.jov,*.j73,*.jovial	setf jovial

" JSON
au BufNewFile,BufRead *.json,*.jsonp,*.webmanifest	setf json

" Kixtart
au BufNewFile,BufRead *.kix			setf kix

" Kimwitu[++]
au BufNewFile,BufRead *.k			setf kwt

" Kivy
au BufNewFile,BufRead *.kv			setf kivy

" KDE script
au BufNewFile,BufRead *.ks			setf kscript

" Kconfig
au BufNewFile,BufRead Kconfig,Kconfig.debug	setf kconfig

" Lace (ISE)
au BufNewFile,BufRead *.ace,*.ACE		setf lace

" Latte
au BufNewFile,BufRead *.latte,*.lte		setf latte

" Limits
au BufNewFile,BufRead */etc/limits,*/etc/*limits.conf,*/etc/*limits.d/*.conf	setf limits

" LambdaProlog (*.mod too, see Modsim)
au BufNewFile,BufRead *.sig			setf lprolog

" LDAP LDIF
au BufNewFile,BufRead *.ldif			setf ldif

" Ld loader
au BufNewFile,BufRead *.ld			setf ld

" Less
au BufNewFile,BufRead *.less			setf less

" Lex
au BufNewFile,BufRead *.lex,*.l,*.lxx,*.l++	setf lex

" Libao
au BufNewFile,BufRead */etc/libao.conf,*/.libao	setf libao

" Libsensors
au BufNewFile,BufRead */etc/sensors.conf,*/etc/sensors3.conf	setf sensors

" LFTP
au BufNewFile,BufRead lftp.conf,.lftprc,*lftp/rc	setf lftp

" Lifelines (or Lex for C++!)
au BufNewFile,BufRead *.ll			setf lifelines

" Lilo: Linux loader
au BufNewFile,BufRead lilo.conf			setf lilo

" Lisp (*.el = ELisp, *.cl = Common Lisp, *.jl = librep Lisp)
if has("fname_case")
  au BufNewFile,BufRead *.lsp,*.lisp,*.el,*.cl,*.jl,*.L,.emacs,.sawfishrc setf lisp
else
  au BufNewFile,BufRead *.lsp,*.lisp,*.el,*.cl,*.jl,.emacs,.sawfishrc setf lisp
endif

" SBCL implementation of Common Lisp
au BufNewFile,BufRead sbclrc,.sbclrc		setf lisp

" Liquid
au BufNewFile,BufRead *.liquid			setf liquid

" Lite
au BufNewFile,BufRead *.lite,*.lt		setf lite

" LiteStep RC files
au BufNewFile,BufRead */LiteStep/*/*.rc		setf litestep

" Login access
au BufNewFile,BufRead */etc/login.access	setf loginaccess

" Login defs
au BufNewFile,BufRead */etc/login.defs		setf logindefs

" Logtalk
au BufNewFile,BufRead *.lgt			setf logtalk

" LOTOS
au BufNewFile,BufRead *.lot,*.lotos		setf lotos

" Lout (also: *.lt)
au BufNewFile,BufRead *.lou,*.lout		setf lout

" Lua
au BufNewFile,BufRead *.lua			setf lua

" Luarocks
au BufNewFile,BufRead *.rockspec		setf lua

" Linden Scripting Language (Second Life)
au BufNewFile,BufRead *.lsl			setf lsl

" Lynx style file (or LotusScript!)
au BufNewFile,BufRead *.lss			setf lss

" M4
au BufNewFile,BufRead *.m4
	\ if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif

" MaGic Point
au BufNewFile,BufRead *.mgp			setf mgp

" Mail (for Elm, trn, mutt, muttng, rn, slrn)
au BufNewFile,BufRead snd.\d\+,.letter,.letter.\d\+,.followup,.article,.article.\d\+,pico.\d\+,mutt{ng,}-*-\w\+,mutt[[:alnum:]_-]\\\{6\},ae\d\+.txt,/tmp/SLRN[0-9A-Z.]\+,*.eml setf mail

" Mail aliases
au BufNewFile,BufRead */etc/mail/aliases,*/etc/aliases	setf mailaliases

" Mailcap configuration file
au BufNewFile,BufRead .mailcap,mailcap		setf mailcap

" Makefile
au BufNewFile,BufRead *[mM]akefile,*.mk,*.mak,*.dsp setf make

" MakeIndex
au BufNewFile,BufRead *.ist,*.mst		setf ist

" Mallard
au BufNewFile,BufRead *.page			setf mallard

" Manpage
au BufNewFile,BufRead *.man			setf man

" Man config
au BufNewFile,BufRead */etc/man.conf,man.config	setf manconf

" Maple V
au BufNewFile,BufRead *.mv,*.mpl,*.mws		setf maple

" Map (UMN mapserver config file)
au BufNewFile,BufRead *.map			setf map

" Markdown
au BufNewFile,BufRead *.markdown,*.mdown,*.mkd,*.mkdn,*.mdwn,*.md  setf markdown

" Mason
au BufNewFile,BufRead *.mason,*.mhtml,*.comp	setf mason

" Matlab or Objective C
au BufNewFile,BufRead *.m			call s:FTm()

func! s:FTm()
  let n = 1
  while n < 10
    let line = getline(n)
    if line =~ '^\s*\(#\s*\(include\|import\)\>\|@import\>\|/\*\|//\)'
      setf objc
      return
    endif
    if line =~ '^\s*%'
      setf matlab
      return
    endif
    if line =~ '^\s*(\*'
      setf mma
      return
    endif
    let n = n + 1
  endwhile
  if exists("g:filetype_m")
    exe "setf " . g:filetype_m
  else
    setf matlab
  endif
endfunc

" Mathematica notebook
au BufNewFile,BufRead *.nb			setf mma

" Maya Extension Language
au BufNewFile,BufRead *.mel			setf mel

" Mercurial (hg) commit file
au BufNewFile,BufRead hg-editor-*.txt		setf hgcommit

" Mercurial config (looks like generic config file)
au BufNewFile,BufRead *.hgrc,*hgrc		setf cfg

" Messages (logs mostly)
au BufNewFile,BufRead */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*} setf messages

" Metafont
au BufNewFile,BufRead *.mf			setf mf

" MetaPost
au BufNewFile,BufRead *.mp			setf mp

" MGL
au BufNewFile,BufRead *.mgl			setf mgl

" MIX - Knuth assembly
au BufNewFile,BufRead *.mix,*.mixal		setf mix

" MMIX or VMS makefile
au BufNewFile,BufRead *.mms			call s:FTmms()

" Symbian meta-makefile definition (MMP)
au BufNewFile,BufRead *.mmp			setf mmp

func! s:FTmms()
  let n = 1
  while n < 10
    let line = getline(n)
    if line =~ '^\s*\(%\|//\)' || line =~ '^\*'
      setf mmix
      return
    endif
    if line =~ '^\s*#'
      setf make
      return
    endif
    let n = n + 1
  endwhile
  setf mmix
endfunc


" Modsim III (or LambdaProlog)
au BufNewFile,BufRead *.mod
	\ if getline(1) =~ '\<module\>' |
	\   setf lprolog |
	\ else |
	\   setf modsim3 |
	\ endif

" Modula 2  (.md removed in favor of Markdown)
au BufNewFile,BufRead *.m2,*.DEF,*.MOD,*.mi	setf modula2

" Modula 3 (.m3, .i3, .mg, .ig)
au BufNewFile,BufRead *.[mi][3g]		setf modula3

" Monk
au BufNewFile,BufRead *.isc,*.monk,*.ssc,*.tsc	setf monk

" MOO
au BufNewFile,BufRead *.moo			setf moo

" Modconf
au BufNewFile,BufRead */etc/modules.conf,*/etc/modules,*/etc/conf.modules setf modconf

" Mplayer config
au BufNewFile,BufRead mplayer.conf,*/.mplayer/config	setf mplayerconf

" Motorola S record
au BufNewFile,BufRead *.s19,*.s28,*.s37,*.mot,*.srec	setf srec

" Mrxvtrc
au BufNewFile,BufRead mrxvtrc,.mrxvtrc		setf mrxvtrc

" Msql
au BufNewFile,BufRead *.msql			setf msql

" Mysql
au BufNewFile,BufRead *.mysql			setf mysql

" Mutt setup files (must be before catch *.rc)
au BufNewFile,BufRead */etc/Muttrc.d/*		call s:StarSetf('muttrc')

" M$ Resource files
au BufNewFile,BufRead *.rc,*.rch		setf rc

" MuPAD source
au BufRead,BufNewFile *.mu			setf mupad

" Mush
au BufNewFile,BufRead *.mush			setf mush

" Mutt setup file (also for Muttng)
au BufNewFile,BufRead Mutt{ng,}rc		setf muttrc

" Nano
au BufNewFile,BufRead */etc/nanorc,*.nanorc  	setf nanorc

" Nastran input/DMAP
"au BufNewFile,BufRead *.dat			setf nastran

" Natural
au BufNewFile,BufRead *.NS[ACGLMNPS]		setf natural

" Netrc
au BufNewFile,BufRead .netrc			setf netrc

" Ninja file
au BufNewFile,BufRead *.ninja			setf ninja

" Novell netware batch files
au BufNewFile,BufRead *.ncf			setf ncf

" Nroff/Troff (*.ms and *.t are checked below)
au BufNewFile,BufRead *.me
	\ if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |
	\   setf nroff |
	\ endif
au BufNewFile,BufRead *.tr,*.nr,*.roff,*.tmac,*.mom	setf nroff
au BufNewFile,BufRead *.[1-9]			call s:FTnroff()

" This function checks if one of the first five lines start with a dot.  In
" that case it is probably an nroff file: 'filetype' is set and 1 is returned.
func! s:FTnroff()
  if getline(1)[0] . getline(2)[0] . getline(3)[0] . getline(4)[0] . getline(5)[0] =~ '\.'
    setf nroff
    return 1
  endif
  return 0
endfunc

" Nroff or Objective C++
au BufNewFile,BufRead *.mm			call s:FTmm()

func! s:FTmm()
  let n = 1
  while n < 10
    let line = getline(n)
    if line =~ '^\s*\(#\s*\(include\|import\)\>\|@import\>\|/\*\)'
      setf objcpp
      return
    endif
    let n = n + 1
  endwhile
  setf nroff
endfunc

" Not Quite C
au BufNewFile,BufRead *.nqc			setf nqc

" NSIS
au BufNewFile,BufRead *.nsi,*.nsh		setf nsis

" OCAML
au BufNewFile,BufRead *.ml,*.mli,*.mll,*.mly,.ocamlinit	setf ocaml

" Occam
au BufNewFile,BufRead *.occ			setf occam

" Omnimark
au BufNewFile,BufRead *.xom,*.xin		setf omnimark

" OpenROAD
au BufNewFile,BufRead *.or			setf openroad

" OPL
au BufNewFile,BufRead *.[Oo][Pp][Ll]		setf opl

" Oracle config file
au BufNewFile,BufRead *.ora			setf ora

" Packet filter conf
au BufNewFile,BufRead pf.conf			setf pf

" Pam conf
au BufNewFile,BufRead */etc/pam.conf		setf pamconf

" PApp
au BufNewFile,BufRead *.papp,*.pxml,*.pxsl	setf papp

" Password file
au BufNewFile,BufRead */etc/passwd,*/etc/passwd-,*/etc/passwd.edit,*/etc/shadow,*/etc/shadow-,*/etc/shadow.edit,*/var/backups/passwd.bak,*/var/backups/shadow.bak setf passwd

" Pascal (also *.p)
au BufNewFile,BufRead *.pas			setf pascal

" Delphi project file
au BufNewFile,BufRead *.dpr			setf pascal

" PDF
au BufNewFile,BufRead *.pdf			setf pdf

" Perl
if has("fname_case")
  au BufNewFile,BufRead *.pl,*.PL		call s:FTpl()
else
  au BufNewFile,BufRead *.pl			call s:FTpl()
endif
au BufNewFile,BufRead *.plx,*.al		setf perl
au BufNewFile,BufRead *.p6,*.pm6,*.pl6		setf perl6

func! s:FTpl()
  if exists("g:filetype_pl")
    exe "setf " . g:filetype_pl
  else
    " recognize Prolog by specific text in the first non-empty line
    " require a blank after the '%' because Perl uses "%list" and "%translate"
    let l = getline(nextnonblank(1))
    if l =~ '\<prolog\>' || l =~ '^\s*\(%\+\(\s\|$\)\|/\*\)' || l =~ ':-'
      setf prolog
    else
      setf perl
    endif
  endif
endfunc

" Perl, XPM or XPM2
au BufNewFile,BufRead *.pm
	\ if getline(1) =~ "XPM2" |
	\   setf xpm2 |
	\ elseif getline(1) =~ "XPM" |
	\   setf xpm |
	\ else |
	\   setf perl |
	\ endif

" Perl POD
au BufNewFile,BufRead *.pod			setf pod
au BufNewFile,BufRead *.pod6			setf pod6

" Php, php3, php4, etc.
" Also Phtml (was used for PHP 2 in the past)
" Also .ctp for Cake template file
au BufNewFile,BufRead *.php,*.php\d,*.phtml,*.ctp	setf php

" Pike
au BufNewFile,BufRead *.pike,*.lpc,*.ulpc,*.pmod setf pike

" Pinfo config
au BufNewFile,BufRead */etc/pinforc,*/.pinforc	setf pinfo

" Palm Resource compiler
au BufNewFile,BufRead *.rcp			setf pilrc

" Pine config
au BufNewFile,BufRead .pinerc,pinerc,.pinercex,pinercex		setf pine

" PL/1, PL/I
au BufNewFile,BufRead *.pli,*.pl1		setf pli

" PL/M (also: *.inp)
au BufNewFile,BufRead *.plm,*.p36,*.pac		setf plm

" PL/SQL
au BufNewFile,BufRead *.pls,*.plsql		setf plsql

" PLP
au BufNewFile,BufRead *.plp			setf plp

" PO and PO template (GNU gettext)
au BufNewFile,BufRead *.po,*.pot		setf po

" Postfix main config
au BufNewFile,BufRead main.cf			setf pfmain

" PostScript (+ font files, encapsulated PostScript, Adobe Illustrator)
au BufNewFile,BufRead *.ps,*.pfa,*.afm,*.eps,*.epsf,*.epsi,*.ai	  setf postscr

" PostScript Printer Description
au BufNewFile,BufRead *.ppd			setf ppd

" Povray
au BufNewFile,BufRead *.pov			setf pov

" Povray configuration
au BufNewFile,BufRead .povrayrc			setf povini

" Povray, PHP or assembly
au BufNewFile,BufRead *.inc			call s:FTinc()

func! s:FTinc()
  if exists("g:filetype_inc")
    exe "setf " . g:filetype_inc
  else
    let lines = getline(1).getline(2).getline(3)
    if lines =~? "perlscript"
      setf aspperl
    elseif lines =~ "<%"
      setf aspvbs
    elseif lines =~ "<?"
      setf php
    else
      call s:FTasmsyntax()
      if exists("b:asmsyntax")
	exe "setf " . fnameescape(b:asmsyntax)
      else
	setf pov
      endif
    endif
  endif
endfunc

" Printcap and Termcap
au BufNewFile,BufRead *printcap
	\ let b:ptcap_type = "print" | setf ptcap
au BufNewFile,BufRead *termcap
	\ let b:ptcap_type = "term" | setf ptcap

" PCCTS / ANTRL
"au BufNewFile,BufRead *.g			setf antrl
au BufNewFile,BufRead *.g			setf pccts

" PPWizard
au BufNewFile,BufRead *.it,*.ih			setf ppwiz

" Obj 3D file format
" TODO: is there a way to avoid MS-Windows Object files?
au BufNewFile,BufRead *.obj			setf obj

" Oracle Pro*C/C++
au BufNewFile,BufRead *.pc			setf proc

" Privoxy actions file
au BufNewFile,BufRead *.action			setf privoxy

" Procmail
au BufNewFile,BufRead .procmail,.procmailrc	setf procmail

" Progress or CWEB
au BufNewFile,BufRead *.w			call s:FTprogress_cweb()

func! s:FTprogress_cweb()
  if exists("g:filetype_w")
    exe "setf " . g:filetype_w
    return
  endif
  if getline(1) =~ '&ANALYZE' || getline(3) =~ '&GLOBAL-DEFINE'
    setf progress
  else
    setf cweb
  endif
endfunc

" Progress or assembly
au BufNewFile,BufRead *.i			call s:FTprogress_asm()

func! s:FTprogress_asm()
  if exists("g:filetype_i")
    exe "setf " . g:filetype_i
    return
  endif
  " This function checks for an assembly comment the first ten lines.
  " If not found, assume Progress.
  let lnum = 1
  while lnum <= 10 && lnum < line('$')
    let line = getline(lnum)
    if line =~ '^\s*;' || line =~ '^\*'
      call s:FTasm()
      return
    elseif line !~ '^\s*$' || line =~ '^/\*'
      " Not an empty line: Doesn't look like valid assembly code.
      " Or it looks like a Progress /* comment
      break
    endif
    let lnum = lnum + 1
  endw
  setf progress
endfunc

" Progress or Pascal
au BufNewFile,BufRead *.p			call s:FTprogress_pascal()

func! s:FTprogress_pascal()
  if exists("g:filetype_p")
    exe "setf " . g:filetype_p
    return
  endif
  " This function checks for valid Pascal syntax in the first ten lines.
  " Look for either an opening comment or a program start.
  " If not found, assume Progress.
  let lnum = 1
  while lnum <= 10 && lnum < line('$')
    let line = getline(lnum)
    if line =~ '^\s*\(program\|unit\|procedure\|function\|const\|type\|var\)\>'
	\ || line =~ '^\s*{' || line =~ '^\s*(\*'
      setf pascal
      return
    elseif line !~ '^\s*$' || line =~ '^/\*'
      " Not an empty line: Doesn't look like valid Pascal code.
      " Or it looks like a Progress /* comment
      break
    endif
    let lnum = lnum + 1
  endw
  setf progress
endfunc


" Software Distributor Product Specification File (POSIX 1387.2-1995)
au BufNewFile,BufRead *.psf			setf psf
au BufNewFile,BufRead INDEX,INFO
	\ if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |
	\   setf psf |
	\ endif

" Prolog
au BufNewFile,BufRead *.pdb			setf prolog

" Promela
au BufNewFile,BufRead *.pml			setf promela

" Google protocol buffers
au BufNewFile,BufRead *.proto			setf proto

" Protocols
au BufNewFile,BufRead */etc/protocols		setf protocols

" Pyrex
au BufNewFile,BufRead *.pyx,*.pxd		setf pyrex

" Python, Python Shell Startup Files
" Quixote (Python-based web framework)
au BufNewFile,BufRead *.py,*.pyw,.pythonstartup,.pythonrc,*.ptl  setf python

" Radiance
au BufNewFile,BufRead *.rad,*.mat		setf radiance

" Ratpoison config/command files
au BufNewFile,BufRead .ratpoisonrc,ratpoisonrc	setf ratpoison

" RCS file
au BufNewFile,BufRead *\,v			setf rcs

" Readline
au BufNewFile,BufRead .inputrc,inputrc		setf readline

" Registry for MS-Windows
au BufNewFile,BufRead *.reg
	\ if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif

" Renderman Interface Bytestream
au BufNewFile,BufRead *.rib			setf rib

" Rexx
au BufNewFile,BufRead *.rex,*.orx,*.rxo,*.rxj,*.jrexx,*.rexxj,*.rexx,*.testGroup,*.testUnit	setf rexx

" R (Splus)
if has("fname_case")
  au BufNewFile,BufRead *.s,*.S			setf r
else
  au BufNewFile,BufRead *.s			setf r
endif

" R Help file
if has("fname_case")
  au BufNewFile,BufRead *.rd,*.Rd		setf rhelp
else
  au BufNewFile,BufRead *.rd			setf rhelp
endif

" R noweb file
if has("fname_case")
  au BufNewFile,BufRead *.Rnw,*.rnw,*.Snw,*.snw		setf rnoweb
else
  au BufNewFile,BufRead *.rnw,*.snw			setf rnoweb
endif

" R Markdown file
if has("fname_case")
  au BufNewFile,BufRead *.Rmd,*.rmd,*.Smd,*.smd		setf rmd
else
  au BufNewFile,BufRead *.rmd,*.smd			setf rmd
endif

" R reStructuredText file
if has("fname_case")
  au BufNewFile,BufRead *.Rrst,*.rrst,*.Srst,*.srst	setf rrst
else
  au BufNewFile,BufRead *.rrst,*.srst			setf rrst
endif

" Rexx, Rebol or R
au BufNewFile,BufRead *.r,*.R			call s:FTr()

func! s:FTr()
  let max = line("$") > 50 ? 50 : line("$")

  for n in range(1, max)
    " Rebol is easy to recognize, check for that first
    if getline(n) =~? '\<REBOL\>'
      setf rebol
      return
    endif
  endfor

  for n in range(1, max)
    " R has # comments
    if getline(n) =~ '^\s*#'
      setf r
      return
    endif
    " Rexx has /* comments */
    if getline(n) =~ '^\s*/\*'
      setf rexx
      return
    endif
  endfor

  " Nothing recognized, use user default or assume Rexx
  if exists("g:filetype_r")
    exe "setf " . g:filetype_r
  else
    " Rexx used to be the default, but R appears to be much more popular.
    setf r
  endif
endfunc

" Remind
au BufNewFile,BufRead .reminders,*.remind,*.rem		setf remind

" Resolv.conf
au BufNewFile,BufRead resolv.conf		setf resolv

" Relax NG Compact
au BufNewFile,BufRead *.rnc			setf rnc

" Relax NG XML
au BufNewFile,BufRead *.rng			setf rng

" RPL/2
au BufNewFile,BufRead *.rpl			setf rpl

" Robots.txt
au BufNewFile,BufRead robots.txt		setf robots

" Rpcgen
au BufNewFile,BufRead *.x			setf rpcgen

" reStructuredText Documentation Format
au BufNewFile,BufRead *.rst			setf rst

" RTF
au BufNewFile,BufRead *.rtf			setf rtf

" Interactive Ruby shell
au BufNewFile,BufRead .irbrc,irbrc		setf ruby

" Ruby
au BufNewFile,BufRead *.rb,*.rbw		setf ruby

" RubyGems
au BufNewFile,BufRead *.gemspec			setf ruby

" Rust
au BufNewFile,BufRead *.rs			setf rust

" Rackup
au BufNewFile,BufRead *.ru			setf ruby

" Bundler
au BufNewFile,BufRead Gemfile			setf ruby

" Ruby on Rails
au BufNewFile,BufRead *.builder,*.rxml,*.rjs	setf ruby

" Rantfile and Rakefile is like Ruby
au BufNewFile,BufRead [rR]antfile,*.rant,[rR]akefile,*.rake	setf ruby

" S-lang (or shader language, or SmallLisp)
au BufNewFile,BufRead *.sl			setf slang

" Samba config
au BufNewFile,BufRead smb.conf			setf samba

" SAS script
au BufNewFile,BufRead *.sas			setf sas

" Sass
au BufNewFile,BufRead *.sass			setf sass

" Sather
au BufNewFile,BufRead *.sa			setf sather

" Scala
au BufNewFile,BufRead *.scala			setf scala

" Scilab
au BufNewFile,BufRead *.sci,*.sce		setf scilab

" SCSS
au BufNewFile,BufRead *.scss			setf scss

" SD: Streaming Descriptors
au BufNewFile,BufRead *.sd			setf sd

" SDL
au BufNewFile,BufRead *.sdl,*.pr		setf sdl

" sed
au BufNewFile,BufRead *.sed			setf sed

" Sieve (RFC 3028)
au BufNewFile,BufRead *.siv			setf sieve

" Sendmail
au BufNewFile,BufRead sendmail.cf		setf sm

" Sendmail .mc files are actually m4.  Could also be MS Message text file.
au BufNewFile,BufRead *.mc			call s:McSetf()

func! s:McSetf()
  " Rely on the file to start with a comment.
  " MS message text files use ';', Sendmail files use '#' or 'dnl'
  for lnum in range(1, min([line("$"), 20]))
    let line = getline(lnum)
    if line =~ '^\s*\(#\|dnl\)'
      setf m4  " Sendmail .mc file
      return
    elseif line =~ '^\s*;'
      setf msmessages  " MS Message text file
      return
    endif
  endfor
  setf m4  " Default: Sendmail .mc file
endfunc

" Services
au BufNewFile,BufRead */etc/services		setf services

" Service Location config
au BufNewFile,BufRead */etc/slp.conf		setf slpconf

" Service Location registration
au BufNewFile,BufRead */etc/slp.reg		setf slpreg

" Service Location SPI
au BufNewFile,BufRead */etc/slp.spi		setf slpspi

" Setserial config
au BufNewFile,BufRead */etc/serial.conf		setf setserial

" SGML
au BufNewFile,BufRead *.sgm,*.sgml
	\ if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |
	\   setf sgmllnx |
	\ elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |
	\   let b:docbk_type = "sgml" |
	\   let b:docbk_ver = 4 |
	\   setf docbk |
	\ else |
	\   setf sgml |
	\ endif

" SGMLDECL
au BufNewFile,BufRead *.decl,*.dcl,*.dec
	\ if getline(1).getline(2).getline(3) =~? '^<!SGML' |
	\    setf sgmldecl |
	\ endif

" SGML catalog file
au BufNewFile,BufRead catalog			setf catalog
au BufNewFile,BufRead sgml.catalog*		call s:StarSetf('catalog')

" Shell scripts (sh, ksh, bash, bash2, csh); Allow .profile_foo etc.
" Gentoo ebuilds and Arch Linux PKGBUILDs are actually bash scripts
au BufNewFile,BufRead .bashrc*,bashrc,bash.bashrc,.bash[_-]profile*,.bash[_-]logout*,.bash[_-]aliases*,*.bash,*/{,.}bash[_-]completion{,.d,.sh}{,/*},*.ebuild,*.eclass,PKGBUILD* call SetFileTypeSH("bash")
au BufNewFile,BufRead .kshrc*,*.ksh call SetFileTypeSH("ksh")
au BufNewFile,BufRead */etc/profile,.profile*,*.sh,*.env call SetFileTypeSH(getline(1))

" Shell script (Arch Linux) or PHP file (Drupal)
au BufNewFile,BufRead *.install
	\ if getline(1) =~ '<?php' |
	\   setf php |
	\ else |
	\   call SetFileTypeSH("bash") |
	\ endif

" Also called from scripts.vim.
func! SetFileTypeSH(name)
  if expand("<amatch>") =~ g:ft_ignore_pat
    return
  endif
  if a:name =~ '\<csh\>'
    " Some .sh scripts contain #!/bin/csh.
    call SetFileTypeShell("csh")
    return
  elseif a:name =~ '\<tcsh\>'
    " Some .sh scripts contain #!/bin/tcsh.
    call SetFileTypeShell("tcsh")
    return
  elseif a:name =~ '\<zsh\>'
    " Some .sh scripts contain #!/bin/zsh.
    call SetFileTypeShell("zsh")
    return
  elseif a:name =~ '\<ksh\>'
    let b:is_kornshell = 1
    if exists("b:is_bash")
      unlet b:is_bash
    endif
    if exists("b:is_sh")
      unlet b:is_sh
    endif
  elseif exists("g:bash_is_sh") || a:name =~ '\<bash\>' || a:name =~ '\<bash2\>'
    let b:is_bash = 1
    if exists("b:is_kornshell")
      unlet b:is_kornshell
    endif
    if exists("b:is_sh")
      unlet b:is_sh
    endif
  elseif a:name =~ '\<sh\>'
    let b:is_sh = 1
    if exists("b:is_kornshell")
      unlet b:is_kornshell
    endif
    if exists("b:is_bash")
      unlet b:is_bash
    endif
  endif
  call SetFileTypeShell("sh")
endfunc

" For shell-like file types, check for an "exec" command hidden in a comment,
" as used for Tcl.
" Also called from scripts.vim, thus can't be local to this script.
func! SetFileTypeShell(name)
  if expand("<amatch>") =~ g:ft_ignore_pat
    return
  endif
  let l = 2
  while l < 20 && l < line("$") && getline(l) =~ '^\s*\(#\|$\)'
    " Skip empty and comment lines.
    let l = l + 1
  endwhile
  if l < line("$") && getline(l) =~ '\s*exec\s' && getline(l - 1) =~ '^\s*#.*\\$'
    " Found an "exec" line after a comment with continuation
    let n = substitute(getline(l),'\s*exec\s\+\([^ ]*/\)\=', '', '')
    if n =~ '\<tclsh\|\<wish'
      setf tcl
      return
    endif
  endif
  exe "setf " . a:name
endfunc

" tcsh scripts
au BufNewFile,BufRead .tcshrc*,*.tcsh,tcsh.tcshrc,tcsh.login	call SetFileTypeShell("tcsh")

" csh scripts, but might also be tcsh scripts (on some systems csh is tcsh)
au BufNewFile,BufRead .login*,.cshrc*,csh.cshrc,csh.login,csh.logout,*.csh,.alias  call s:CSH()

func! s:CSH()
  if exists("g:filetype_csh")
    call SetFileTypeShell(g:filetype_csh)
  elseif &shell =~ "tcsh"
    call SetFileTypeShell("tcsh")
  else
    call SetFileTypeShell("csh")
  endif
endfunc

" Z-Shell script
au BufNewFile,BufRead .zprofile,*/etc/zprofile,.zfbfmarks  setf zsh
au BufNewFile,BufRead .zsh*,.zlog*,.zcompdump*  call s:StarSetf('zsh')
au BufNewFile,BufRead *.zsh			setf zsh

" Scheme
au BufNewFile,BufRead *.scm,*.ss,*.rkt		setf scheme

" Screen RC
au BufNewFile,BufRead .screenrc,screenrc	setf screen

" Simula
au BufNewFile,BufRead *.sim			setf simula

" SINDA
au BufNewFile,BufRead *.sin,*.s85		setf sinda

" SiSU
au BufNewFile,BufRead *.sst,*.ssm,*.ssi,*.-sst,*._sst setf sisu
au BufNewFile,BufRead *.sst.meta,*.-sst.meta,*._sst.meta setf sisu

" SKILL
au BufNewFile,BufRead *.il,*.ils,*.cdf		setf skill

" SLRN
au BufNewFile,BufRead .slrnrc			setf slrnrc
au BufNewFile,BufRead *.score			setf slrnsc

" Smalltalk (and TeX)
au BufNewFile,BufRead *.st			setf st
au BufNewFile,BufRead *.cls
	\ if getline(1) =~ '^%' |
	\  setf tex |
	\ elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |
	\  setf rexx |
	\ else |
	\  setf st |
	\ endif

" Smarty templates
au BufNewFile,BufRead *.tpl			setf smarty

" SMIL or XML
au BufNewFile,BufRead *.smil
	\ if getline(1) =~ '<?\s*xml.*?>' |
	\   setf xml |
	\ else |
	\   setf smil |
	\ endif

" SMIL or SNMP MIB file
au BufNewFile,BufRead *.smi
	\ if getline(1) =~ '\<smil\>' |
	\   setf smil |
	\ else |
	\   setf mib |
	\ endif

" SMITH
au BufNewFile,BufRead *.smt,*.smith		setf smith

" Snobol4 and spitbol
au BufNewFile,BufRead *.sno,*.spt		setf snobol4

" SNMP MIB files
au BufNewFile,BufRead *.mib,*.my		setf mib

" Snort Configuration
au BufNewFile,BufRead *.hog,snort.conf,vision.conf	setf hog
au BufNewFile,BufRead *.rules			call s:FTRules()

let s:ft_rules_udev_rules_pattern = '^\s*\cudev_rules\s*=\s*"\([^"]\{-1,}\)/*".*'
func! s:FTRules()
  let path = expand('<amatch>:p')
  if path =~ '^/\(etc/udev/\%(rules\.d/\)\=.*\.rules\|lib/udev/\%(rules\.d/\)\=.*\.rules\)$'
    setf udevrules
    return
  endif
  if path =~ '^/etc/ufw/'
    setf conf  " Better than hog
    return
  endif
  if path =~ '^/\(etc\|usr/share\)/polkit-1/rules\.d'
    setf javascript
    return
  endif
  try
    let config_lines = readfile('/etc/udev/udev.conf')
  catch /^Vim\%((\a\+)\)\=:E484/
    setf hog
    return
  endtry
  let dir = expand('<amatch>:p:h')
  for line in config_lines
    if line =~ s:ft_rules_udev_rules_pattern
      let udev_rules = substitute(line, s:ft_rules_udev_rules_pattern, '\1', "")
      if dir == udev_rules
	setf udevrules
      endif
      break
    endif
  endfor
  setf hog
endfunc


" Spec (Linux RPM)
au BufNewFile,BufRead *.spec			setf spec

" Speedup (AspenTech plant simulator)
au BufNewFile,BufRead *.speedup,*.spdata,*.spd	setf spup

" Slice
au BufNewFile,BufRead *.ice			setf slice

" Spice
au BufNewFile,BufRead *.sp,*.spice		setf spice

" Spyce
au BufNewFile,BufRead *.spy,*.spi		setf spyce

" Squid
au BufNewFile,BufRead squid.conf		setf squid

" SQL for Oracle Designer
au BufNewFile,BufRead *.tyb,*.typ,*.tyc,*.pkb,*.pks	setf sql

" SQL
au BufNewFile,BufRead *.sql			call s:SQL()

func! s:SQL()
  if exists("g:filetype_sql")
    exe "setf " . g:filetype_sql
  else
    setf sql
  endif
endfunc

" SQLJ
au BufNewFile,BufRead *.sqlj			setf sqlj

" SQR
au BufNewFile,BufRead *.sqr,*.sqi		setf sqr

" OpenSSH configuration
au BufNewFile,BufRead ssh_config,*/.ssh/config	setf sshconfig

" OpenSSH server configuration
au BufNewFile,BufRead sshd_config		setf sshdconfig

" Stata
au BufNewFile,BufRead *.ado,*.class,*.do,*.imata,*.mata   setf stata

" SMCL
au BufNewFile,BufRead *.hlp,*.ihlp,*.smcl	setf smcl

" Stored Procedures
au BufNewFile,BufRead *.stp			setf stp

" Standard ML
au BufNewFile,BufRead *.sml			setf sml

" Sratus VOS command macro
au BufNewFile,BufRead *.cm			setf voscm

" Sysctl
au BufNewFile,BufRead */etc/sysctl.conf,*/etc/sysctl.d/*.conf	setf sysctl

" Systemd unit files
au BufNewFile,BufRead */systemd/*.{automount,mount,path,service,socket,swap,target,timer}	setf systemd

" Synopsys Design Constraints
au BufNewFile,BufRead *.sdc			setf sdc

" Sudoers
au BufNewFile,BufRead */etc/sudoers,sudoers.tmp	setf sudoers

" SVG (Scalable Vector Graphics)
au BufNewFile,BufRead *.svg			setf svg

" If the file has an extension of 't' and is in a directory 't' or 'xt' then
" it is almost certainly a Perl test file.
" If the first line starts with '#' and contains 'perl' it's probably a Perl
" file.
" (Slow test) If a file contains a 'use' statement then it is almost certainly
" a Perl file.
func! s:FTperl()
  let dirname = expand("%:p:h:t")
  if expand("%:e") == 't' && (dirname == 't' || dirname == 'xt')
    setf perl
    return 1
  endif
  if getline(1)[0] == '#' && getline(1) =~ 'perl'
    setf perl
    return 1
  endif
  if search('^use\s\s*\k', 'nc', 30)
    setf perl
    return 1
  endif
  return 0
endfunc

" Tads (or Nroff or Perl test file)
au BufNewFile,BufRead *.t
	\ if !s:FTnroff() && !s:FTperl() | setf tads | endif

" Tags
au BufNewFile,BufRead tags			setf tags

" TAK
au BufNewFile,BufRead *.tak			setf tak

" Task
au BufRead,BufNewFile {pending,completed,undo}.data  setf taskdata
au BufRead,BufNewFile *.task			setf taskedit

" Tcl (JACL too)
au BufNewFile,BufRead *.tcl,*.tk,*.itcl,*.itk,*.jacl	setf tcl

" TealInfo
au BufNewFile,BufRead *.tli			setf tli

" Telix Salt
au BufNewFile,BufRead *.slt			setf tsalt

" Tera Term Language
au BufRead,BufNewFile *.ttl			setf teraterm

" Terminfo
au BufNewFile,BufRead *.ti			setf terminfo

" TeX
au BufNewFile,BufRead *.latex,*.sty,*.dtx,*.ltx,*.bbl	setf tex
au BufNewFile,BufRead *.tex			call s:FTtex()

" Choose context, plaintex, or tex (LaTeX) based on these rules:
" 1. Check the first line of the file for "%&<format>".
" 2. Check the first 1000 non-comment lines for LaTeX or ConTeXt keywords.
" 3. Default to "latex" or to g:tex_flavor, can be set in user's vimrc.
func! s:FTtex()
  let firstline = getline(1)
  if firstline =~ '^%&\s*\a\+'
    let format = tolower(matchstr(firstline, '\a\+'))
    let format = substitute(format, 'pdf', '', '')
    if format == 'tex'
      let format = 'plain'
    endif
  else
    " Default value, may be changed later:
    let format = exists("g:tex_flavor") ? g:tex_flavor : 'plain'
    " Save position, go to the top of the file, find first non-comment line.
    let save_cursor = getpos('.')
    call cursor(1,1)
    let firstNC = search('^\s*[^[:space:]%]', 'c', 1000)
    if firstNC " Check the next thousand lines for a LaTeX or ConTeXt keyword.
      let lpat = 'documentclass\>\|usepackage\>\|begin{\|newcommand\>\|renewcommand\>\|part\>\|chapter\>\|section\>\|subsection\>\|subsubsection\>\|paragraph\>\|subparagraph\>\|subsubparagraph'
      let cpat = 'start\a\+\|setup\a\+\|usemodule\|enablemode\|enableregime\|setvariables\|useencoding\|usesymbols\|stelle\a\+\|verwende\a\+\|stel\a\+\|gebruik\a\+\|usa\a\+\|imposta\a\+\|regle\a\+\|utilisemodule\>'
      let kwline = search('^\s*\\\%(' . lpat . '\)\|^\s*\\\(' . cpat . '\)',
			      \ 'cnp', firstNC + 1000)
      if kwline == 1	" lpat matched
	let format = 'latex'
      elseif kwline == 2	" cpat matched
	let format = 'context'
      endif		" If neither matched, keep default set above.
      " let lline = search('^\s*\\\%(' . lpat . '\)', 'cn', firstNC + 1000)
      " let cline = search('^\s*\\\%(' . cpat . '\)', 'cn', firstNC + 1000)
      " if cline > 0
      "   let format = 'context'
      " endif
      " if lline > 0 && (cline == 0 || cline > lline)
      "   let format = 'tex'
      " endif
    endif " firstNC
    call setpos('.', save_cursor)
  endif " firstline =~ '^%&\s*\a\+'

  " Translation from formats to file types.  TODO:  add AMSTeX, RevTex, others?
  if format == 'plain'
    setf plaintex
  elseif format == 'context'
    setf context
  else " probably LaTeX
    setf tex
  endif
  return
endfunc

" ConTeXt
au BufNewFile,BufRead tex/context/*/*.tex,*.mkii,*.mkiv,*.mkvi   setf context

" Texinfo
au BufNewFile,BufRead *.texinfo,*.texi,*.txi	setf texinfo

" TeX configuration
au BufNewFile,BufRead texmf.cnf			setf texmf

" Tidy config
au BufNewFile,BufRead .tidyrc,tidyrc		setf tidy

" TF mud client
au BufNewFile,BufRead *.tf,.tfrc,tfrc		setf tf

" TPP - Text Presentation Program
au BufNewFile,BufReadPost *.tpp			setf tpp

" Treetop
au BufRead,BufNewFile *.treetop			setf treetop

" Trustees
au BufNewFile,BufRead trustees.conf		setf trustees

" TSS - Geometry
au BufNewFile,BufReadPost *.tssgm		setf tssgm

" TSS - Optics
au BufNewFile,BufReadPost *.tssop		setf tssop

" TSS - Command Line (temporary)
au BufNewFile,BufReadPost *.tsscl		setf tsscl

" TWIG files
au BufNewFile,BufReadPost *.twig		setf twig

" Motif UIT/UIL files
au BufNewFile,BufRead *.uit,*.uil		setf uil

" Udev conf
au BufNewFile,BufRead */etc/udev/udev.conf	setf udevconf

" Udev permissions
au BufNewFile,BufRead */etc/udev/permissions.d/*.permissions setf udevperm
"
" Udev symlinks config
au BufNewFile,BufRead */etc/udev/cdsymlinks.conf	setf sh

" UnrealScript
au BufNewFile,BufRead *.uc			setf uc

" Updatedb
au BufNewFile,BufRead */etc/updatedb.conf	setf updatedb

" Upstart (init(8)) config files
au BufNewFile,BufRead */usr/share/upstart/*.conf	       setf upstart
au BufNewFile,BufRead */usr/share/upstart/*.override	       setf upstart
au BufNewFile,BufRead */etc/init/*.conf,*/etc/init/*.override  setf upstart
au BufNewFile,BufRead */.init/*.conf,*/.init/*.override	       setf upstart
au BufNewFile,BufRead */.config/upstart/*.conf		       setf upstart
au BufNewFile,BufRead */.config/upstart/*.override	       setf upstart

" Vera
au BufNewFile,BufRead *.vr,*.vri,*.vrh		setf vera

" Verilog HDL
au BufNewFile,BufRead *.v			setf verilog

" Verilog-AMS HDL
au BufNewFile,BufRead *.va,*.vams		setf verilogams

" SystemVerilog
au BufNewFile,BufRead *.sv,*.svh		setf systemverilog

" VHDL
au BufNewFile,BufRead *.hdl,*.vhd,*.vhdl,*.vbe,*.vst  setf vhdl
au BufNewFile,BufRead *.vhdl_[0-9]*		call s:StarSetf('vhdl')

" Vim script
au BufNewFile,BufRead *.vim,*.vba,.exrc,_exrc	setf vim

" Viminfo file
au BufNewFile,BufRead .viminfo,_viminfo		setf viminfo

" Virata Config Script File or Drupal module
au BufRead,BufNewFile *.hw,*.module,*.pkg
	\ if getline(1) =~ '<?php' |
	\   setf php |
	\ else |
	\   setf virata |
	\ endif

" Visual Basic (also uses *.bas) or FORM
au BufNewFile,BufRead *.frm			call s:FTVB("form")

" SaxBasic is close to Visual Basic
au BufNewFile,BufRead *.sba			setf vb

" Vgrindefs file
au BufNewFile,BufRead vgrindefs			setf vgrindefs

" VRML V1.0c
au BufNewFile,BufRead *.wrl			setf vrml

" Vroom (vim testing and executable documentation)
au BufNewFile,BufRead *.vroom			setf vroom

" Webmacro
au BufNewFile,BufRead *.wm			setf webmacro

" Wget config
au BufNewFile,BufRead .wgetrc,wgetrc		setf wget

" Website MetaLanguage
au BufNewFile,BufRead *.wml			setf wml

" Winbatch
au BufNewFile,BufRead *.wbt			setf winbatch

" WSML
au BufNewFile,BufRead *.wsml			setf wsml

" WvDial
au BufNewFile,BufRead wvdial.conf,.wvdialrc	setf wvdial

" CVS RC file
au BufNewFile,BufRead .cvsrc			setf cvsrc

" CVS commit file
au BufNewFile,BufRead cvs\d\+			setf cvs

" WEB (*.web is also used for Winbatch: Guess, based on expecting "%" comment
" lines in a WEB file).
au BufNewFile,BufRead *.web
	\ if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |
	\   setf web |
	\ else |
	\   setf winbatch |
	\ endif

" Windows Scripting Host and Windows Script Component
au BufNewFile,BufRead *.ws[fc]			setf wsh

" XHTML
au BufNewFile,BufRead *.xhtml,*.xht		setf xhtml

" X Pixmap (dynamically sets colors, use BufEnter to make it work better)
au BufEnter *.xpm
	\ if getline(1) =~ "XPM2" |
	\   setf xpm2 |
	\ else |
	\   setf xpm |
	\ endif
au BufEnter *.xpm2				setf xpm2

" XFree86 config
au BufNewFile,BufRead XF86Config
	\ if getline(1) =~ '\<XConfigurator\>' |
	\   let b:xf86conf_xfree86_version = 3 |
	\ endif |
	\ setf xf86conf
au BufNewFile,BufRead */xorg.conf.d/*.conf
	\ let b:xf86conf_xfree86_version = 4 |
	\ setf xf86conf

" Xorg config
au BufNewFile,BufRead xorg.conf,xorg.conf-4	let b:xf86conf_xfree86_version = 4 | setf xf86conf

" Xinetd conf
au BufNewFile,BufRead */etc/xinetd.conf		setf xinetd

" XS Perl extension interface language
au BufNewFile,BufRead *.xs			setf xs

" X resources file
au BufNewFile,BufRead .Xdefaults,.Xpdefaults,.Xresources,xdm-config,*.ad setf xdefaults

" Xmath
au BufNewFile,BufRead *.msc,*.msf		setf xmath
au BufNewFile,BufRead *.ms
	\ if !s:FTnroff() | setf xmath | endif

" XML  specific variants: docbk and xbl
au BufNewFile,BufRead *.xml			call s:FTxml()

func! s:FTxml()
  let n = 1
  while n < 100 && n < line("$")
    let line = getline(n)
    " DocBook 4 or DocBook 5.
    let is_docbook4 = line =~ '<!DOCTYPE.*DocBook'
    let is_docbook5 = line =~ ' xmlns="http://docbook.org/ns/docbook"'
    if is_docbook4 || is_docbook5
      let b:docbk_type = "xml"
      if is_docbook5
	let b:docbk_ver = 5
      else
	let b:docbk_ver = 4
      endif
      setf docbk
      return
    endif
    if line =~ 'xmlns:xbl="http://www.mozilla.org/xbl"'
      setf xbl
      return
    endif
    let n += 1
  endwhile
  setf xml
endfunc

" XMI (holding UML models) is also XML
au BufNewFile,BufRead *.xmi			setf xml

" CSPROJ files are Visual Studio.NET's XML-based project config files
au BufNewFile,BufRead *.csproj,*.csproj.user	setf xml

" Qt Linguist translation source and Qt User Interface Files are XML
au BufNewFile,BufRead *.ts,*.ui			setf xml

" TPM's are RDF-based descriptions of TeX packages (Nikolai Weibull)
au BufNewFile,BufRead *.tpm			setf xml

" Xdg menus
au BufNewFile,BufRead */etc/xdg/menus/*.menu	setf xml

" ATI graphics driver configuration
au BufNewFile,BufRead fglrxrc			setf xml

" XLIFF (XML Localisation Interchange File Format) is also XML
au BufNewFile,BufRead *.xlf			setf xml
au BufNewFile,BufRead *.xliff			setf xml

" XML User Interface Language
au BufNewFile,BufRead *.xul			setf xml

" X11 xmodmap (also see below)
au BufNewFile,BufRead *Xmodmap			setf xmodmap

" Xquery
au BufNewFile,BufRead *.xq,*.xql,*.xqm,*.xquery,*.xqy	setf xquery

" XSD
au BufNewFile,BufRead *.xsd			setf xsd

" Xslt
au BufNewFile,BufRead *.xsl,*.xslt		setf xslt

" Yacc
au BufNewFile,BufRead *.yy,*.yxx,*.y++		setf yacc

" Yacc or racc
au BufNewFile,BufRead *.y			call s:FTy()

func! s:FTy()
  let n = 1
  while n < 100 && n < line("$")
    let line = getline(n)
    if line =~ '^\s*%'
      setf yacc
      return
    endif
    if getline(n) =~ '^\s*\(#\|class\>\)' && getline(n) !~ '^\s*#\s*include'
      setf racc
      return
    endif
    let n = n + 1
  endwhile
  setf yacc
endfunc


" Yaml
au BufNewFile,BufRead *.yaml,*.yml		setf yaml

" yum conf (close enough to dosini)
au BufNewFile,BufRead */etc/yum.conf		setf dosini

" Zimbu
au BufNewFile,BufRead *.zu			setf zimbu
" Zimbu Templates
au BufNewFile,BufRead *.zut			setf zimbutempl

" Zope
"   dtml (zope dynamic template markup language), pt (zope page template),
"   cpt (zope form controller page template)
au BufNewFile,BufRead *.dtml,*.pt,*.cpt		call s:FThtml()
"   zsql (zope sql method)
au BufNewFile,BufRead *.zsql			call s:SQL()

" Z80 assembler asz80
au BufNewFile,BufRead *.z8a			setf z8a

augroup END


" Source the user-specified filetype file, for backwards compatibility with
" Vim 5.x.
if exists("myfiletypefile") && filereadable(expand(myfiletypefile))
  execute "source " . myfiletypefile
endif


" Check for "*" after loading myfiletypefile, so that scripts.vim is only used
" when there are no matching file name extensions.
" Don't do this for compressed files.
augroup filetypedetect
au BufNewFile,BufRead *
	\ if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat
	\ | runtime! scripts.vim | endif
au StdinReadPost * if !did_filetype() | runtime! scripts.vim | endif


" Extra checks for when no filetype has been detected now.  Mostly used for
" patterns that end in "*".  E.g., "zsh*" matches "zsh.vim", but that's a Vim
" script file.
" Most of these should call s:StarSetf() to avoid names ending in .gz and the
" like are used.

" More Apache config files
au BufNewFile,BufRead access.conf*,apache.conf*,apache2.conf*,httpd.conf*,srm.conf*	call s:StarSetf('apache')
au BufNewFile,BufRead */etc/apache2/*.conf*,*/etc/apache2/conf.*/*,*/etc/apache2/mods-*/*,*/etc/apache2/sites-*/*,*/etc/httpd/conf.d/*.conf*		call s:StarSetf('apache')

" Asterisk config file
au BufNewFile,BufRead *asterisk/*.conf*		call s:StarSetf('asterisk')
au BufNewFile,BufRead *asterisk*/*voicemail.conf* call s:StarSetf('asteriskvm')

" Bazaar version control
au BufNewFile,BufRead bzr_log.*			setf bzr

" BIND zone
au BufNewFile,BufRead */named/db.*,*/bind/db.*	call s:StarSetf('bindzone')

" Calendar
au BufNewFile,BufRead */.calendar/*,
	\*/share/calendar/*/calendar.*,*/share/calendar/calendar.*
	\					call s:StarSetf('calendar')

" Changelog
au BufNewFile,BufRead [cC]hange[lL]og*
	\ if getline(1) =~ '; urgency='
	\|  call s:StarSetf('debchangelog')
	\|else
	\|  call s:StarSetf('changelog')
	\|endif

" Crontab
au BufNewFile,BufRead crontab,crontab.*,*/etc/cron.d/*		call s:StarSetf('crontab')

" dnsmasq(8) configuration
au BufNewFile,BufRead */etc/dnsmasq.d/*		call s:StarSetf('dnsmasq')

" Dracula
au BufNewFile,BufRead drac.*			call s:StarSetf('dracula')

" Fvwm
au BufNewFile,BufRead */.fvwm/*			call s:StarSetf('fvwm')
au BufNewFile,BufRead *fvwmrc*,*fvwm95*.hook
	\ let b:fvwm_version = 1 | call s:StarSetf('fvwm')
au BufNewFile,BufRead *fvwm2rc*
	\ if expand("<afile>:e") == "m4"
	\|  call s:StarSetf('fvwm2m4')
	\|else
	\|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')
	\|endif

" Gedcom
au BufNewFile,BufRead */tmp/lltmp*		call s:StarSetf('gedcom')

" GTK RC
au BufNewFile,BufRead .gtkrc*,gtkrc*		call s:StarSetf('gtkrc')

" Jam
au BufNewFile,BufRead Prl*.*,JAM*.*		call s:StarSetf('jam')

" Jargon
au! BufNewFile,BufRead *jarg*
	\ if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'
	\|  call s:StarSetf('jargon')
	\|endif

" Kconfig
au BufNewFile,BufRead Kconfig.*			call s:StarSetf('kconfig')

" Lilo: Linux loader
au BufNewFile,BufRead lilo.conf*		call s:StarSetf('lilo')

" Logcheck
au BufNewFile,BufRead */etc/logcheck/*.d*/*	call s:StarSetf('logcheck')

" Makefile
au BufNewFile,BufRead [mM]akefile*		call s:StarSetf('make')

" Ruby Makefile
au BufNewFile,BufRead [rR]akefile*		call s:StarSetf('ruby')

" Mail (also matches muttrc.vim, so this is below the other checks)
au BufNewFile,BufRead mutt[[:alnum:]._-]\\\{6\}	setf mail

au BufNewFile,BufRead reportbug-*		call s:StarSetf('mail')

" Modconf
au BufNewFile,BufRead */etc/modutils/*
	\ if executable(expand("<afile>")) != 1
	\|  call s:StarSetf('modconf')
	\|endif
au BufNewFile,BufRead */etc/modprobe.*		call s:StarSetf('modconf')

" Mutt setup file
au BufNewFile,BufRead .mutt{ng,}rc*,*/.mutt{ng,}/mutt{ng,}rc*	call s:StarSetf('muttrc')
au BufNewFile,BufRead mutt{ng,}rc*,Mutt{ng,}rc*		call s:StarSetf('muttrc')

" Nroff macros
au BufNewFile,BufRead tmac.*			call s:StarSetf('nroff')

" OpenBSD hostname.if
au BufNewFile,BufRead /etc/hostname.*		call s:StarSetf('config')

" Pam conf
au BufNewFile,BufRead */etc/pam.d/*		call s:StarSetf('pamconf')

" Printcap and Termcap
au BufNewFile,BufRead *printcap*
	\ if !did_filetype()
	\|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')
	\|endif
au BufNewFile,BufRead *termcap*
	\ if !did_filetype()
	\|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')
	\|endif

" ReDIF
" Only used when the .rdf file was not detected to be XML.
au BufRead,BufNewFile *.rdf			call s:Redif()
func! s:Redif()
  let lnum = 1
  while lnum <= 5 && lnum < line('$')
    if getline(lnum) =~ "^\ctemplate-type:"
      setf redif
      return
    endif
    let lnum = lnum + 1
  endwhile
endfunc

" Remind
au BufNewFile,BufRead .reminders*		call s:StarSetf('remind')

" Vim script
au BufNewFile,BufRead *vimrc*			call s:StarSetf('vim')

" Subversion commit file
au BufNewFile,BufRead svn-commit*.tmp		setf svn

" X resources file
au BufNewFile,BufRead Xresources*,*/app-defaults/*,*/Xresources/* call s:StarSetf('xdefaults')

" XFree86 config
au BufNewFile,BufRead XF86Config-4*
	\ let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
au BufNewFile,BufRead XF86Config*
	\ if getline(1) =~ '\<XConfigurator\>'
	\|  let b:xf86conf_xfree86_version = 3
	\|endif
	\|call s:StarSetf('xf86conf')

" X11 xmodmap
au BufNewFile,BufRead *xmodmap*			call s:StarSetf('xmodmap')

" Xinetd conf
au BufNewFile,BufRead */etc/xinetd.d/*		call s:StarSetf('xinetd')

" yum conf (close enough to dosini)
au BufNewFile,BufRead */etc/yum.repos.d/*	call s:StarSetf('dosini')

" Z-Shell script
au BufNewFile,BufRead zsh*,zlog*		call s:StarSetf('zsh')


" Plain text files, needs to be far down to not override others.  This avoids
" the "conf" type being used if there is a line starting with '#'.
au BufNewFile,BufRead *.txt,*.text,README	setf text


" Use the filetype detect plugins.  They may overrule any of the previously
" detected filetypes.
runtime! ftdetect/*.vim

" NOTE: The above command could have ended the filetypedetect autocmd group
" and started another one. Let's make sure it has ended to get to a consistent
" state.
augroup END

" Generic configuration file (check this last, it's just guessing!)
au filetypedetect BufNewFile,BufRead,StdinReadPost *
	\ if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat
	\    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'
	\	|| getline(4) =~ '^#' || getline(5) =~ '^#') |
	\   setf conf |
	\ endif


" If the GUI is already running, may still need to install the Syntax menu.
" Don't do it when the 'M' flag is included in 'guioptions'.
if has("menu") && has("gui_running")
      \ && !exists("did_install_syntax_menu") && &guioptions !~# "M"
  source <sfile>:p:h/menu.vim
endif

" Function called for testing all functions defined here.  These are
" script-local, thus need to be executed here.
" Returns a string with error messages (hopefully empty).
func! TestFiletypeFuncs(testlist)
  let output = ''
  for f in a:testlist
    try
      exe f
    catch
      let output = output . "\n" . f . ": " . v:exception
    endtry
  endfor
  return output
endfunc

" Restore 'cpoptions'
let &cpo = s:cpo_save
unlet s:cpo_save
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #
# Arch-specific CryptoAPI modules.
#

avx_supported := $(call as-instr,vpxor %xmm0$(comma)%xmm0$(comma)%xmm0,yes,no)
avx2_supported := $(call as-instr,vpgatherdd %ymm0$(comma)(%eax$(comma)%ymm1\
				$(comma)4)$(comma)%ymm2,yes,no)
sha1_ni_supported :=$(call as-instr,sha1msg1 %xmm0$(comma)%xmm1,yes,no)
sha256_ni_supported :=$(call as-instr,sha256msg1 %xmm0$(comma)%xmm1,yes,no)

obj-$(CONFIG_CRYPTO_GLUE_HELPER_X86) += glue_helper.o

obj-$(CONFIG_CRYPTO_AES_586) += aes-i586.o
obj-$(CONFIG_CRYPTO_TWOFISH_586) += twofish-i586.o
obj-$(CONFIG_CRYPTO_SALSA20_586) += salsa20-i586.o
obj-$(CONFIG_CRYPTO_SERPENT_SSE2_586) += serpent-sse2-i586.o

obj-$(CONFIG_CRYPTO_AES_X86_64) += aes-x86_64.o
obj-$(CONFIG_CRYPTO_DES3_EDE_X86_64) += des3_ede-x86_64.o
obj-$(CONFIG_CRYPTO_CAMELLIA_X86_64) += camellia-x86_64.o
obj-$(CONFIG_CRYPTO_BLOWFISH_X86_64) += blowfish-x86_64.o
obj-$(CONFIG_CRYPTO_TWOFISH_X86_64) += twofish-x86_64.o
obj-$(CONFIG_CRYPTO_TWOFISH_X86_64_3WAY) += twofish-x86_64-3way.o
obj-$(CONFIG_CRYPTO_SALSA20_X86_64) += salsa20-x86_64.o
obj-$(CONFIG_CRYPTO_CHACHA20_X86_64) += chacha20-x86_64.o
obj-$(CONFIG_CRYPTO_SERPENT_SSE2_X86_64) += serpent-sse2-x86_64.o
obj-$(CONFIG_CRYPTO_AES_NI_INTEL) += aesni-intel.o
obj-$(CONFIG_CRYPTO_GHASH_CLMUL_NI_INTEL) += ghash-clmulni-intel.o

obj-$(CONFIG_CRYPTO_CRC32C_INTEL) += crc32c-intel.o
obj-$(CONFIG_CRYPTO_SHA1_SSSE3) += sha1-ssse3.o
obj-$(CONFIG_CRYPTO_CRC32_PCLMUL) += crc32-pclmul.o
obj-$(CONFIG_CRYPTO_SHA256_SSSE3) += sha256-ssse3.o
obj-$(CONFIG_CRYPTO_SHA512_SSSE3) += sha512-ssse3.o
obj-$(CONFIG_CRYPTO_CRCT10DIF_PCLMUL) += crct10dif-pclmul.o
obj-$(CONFIG_CRYPTO_POLY1305_X86_64) += poly1305-x86_64.o

# These modules require assembler to support AVX.
ifeq ($(avx_supported),yes)
	obj-$(CONFIG_CRYPTO_CAMELLIA_AESNI_AVX_X86_64) += \
						camellia-aesni-avx-x86_64.o
	obj-$(CONFIG_CRYPTO_CAST5_AVX_X86_64) += cast5-avx-x86_64.o
	obj-$(CONFIG_CRYPTO_CAST6_AVX_X86_64) += cast6-avx-x86_64.o
	obj-$(CONFIG_CRYPTO_TWOFISH_AVX_X86_64) += twofish-avx-x86_64.o
	obj-$(CONFIG_CRYPTO_SERPENT_AVX_X86_64) += serpent-avx-x86_64.o
endif

# These modules require assembler to support AVX2.
ifeq ($(avx2_supported),yes)
	obj-$(CONFIG_CRYPTO_CAMELLIA_AESNI_AVX2_X86_64) += camellia-aesni-avx2.o
	obj-$(CONFIG_CRYPTO_SERPENT_AVX2_X86_64) += serpent-avx2.o
	obj-$(CONFIG_CRYPTO_SHA1_MB) += sha1-mb/
	obj-$(CONFIG_CRYPTO_SHA256_MB) += sha256-mb/
	obj-$(CONFIG_CRYPTO_SHA512_MB) += sha512-mb/
endif

aes-i586-y := aes-i586-asm_32.o aes_glue.o
twofish-i586-y := twofish-i586-asm_32.o twofish_glue.o
salsa20-i586-y := salsa20-i586-asm_32.o salsa20_glue.o
serpent-sse2-i586-y := serpent-sse2-i586-asm_32.o serpent_sse2_glue.o

aes-x86_64-y := aes-x86_64-asm_64.o aes_glue.o
des3_ede-x86_64-y := des3_ede-asm_64.o des3_ede_glue.o
camellia-x86_64-y := camellia-x86_64-asm_64.o camellia_glue.o
blowfish-x86_64-y := blowfish-x86_64-asm_64.o blowfish_glue.o
twofish-x86_64-y := twofish-x86_64-asm_64.o twofish_glue.o
twofish-x86_64-3way-y := twofish-x86_64-asm_64-3way.o twofish_glue_3way.o
salsa20-x86_64-y := salsa20-x86_64-asm_64.o salsa20_glue.o
chacha20-x86_64-y := chacha20-ssse3-x86_64.o chacha20_glue.o
serpent-sse2-x86_64-y := serpent-sse2-x86_64-asm_64.o serpent_sse2_glue.o

ifeq ($(avx_supported),yes)
	camellia-aesni-avx-x86_64-y := camellia-aesni-avx-asm_64.o \
					camellia_aesni_avx_glue.o
	cast5-avx-x86_64-y := cast5-avx-x86_64-asm_64.o cast5_avx_glue.o
	cast6-avx-x86_64-y := cast6-avx-x86_64-asm_64.o cast6_avx_glue.o
	twofish-avx-x86_64-y := twofish-avx-x86_64-asm_64.o \
				twofish_avx_glue.o
	serpent-avx-x86_64-y := serpent-avx-x86_64-asm_64.o \
				serpent_avx_glue.o
endif

ifeq ($(avx2_supported),yes)
	camellia-aesni-avx2-y := camellia-aesni-avx2-asm_64.o camellia_aesni_avx2_glue.o
	chacha20-x86_64-y += chacha20-avx2-x86_64.o
	serpent-avx2-y := serpent-avx2-asm_64.o serpent_avx2_glue.o
endif

aesni-intel-y := aesni-intel_asm.o aesni-intel_glue.o fpu.o
aesni-intel-$(CONFIG_64BIT) += aesni-intel_avx-x86_64.o aes_ctrby8_avx-x86_64.o
ghash-clmulni-intel-y := ghash-clmulni-intel_asm.o ghash-clmulni-intel_glue.o
sha1-ssse3-y := sha1_ssse3_asm.o sha1_ssse3_glue.o
poly1305-x86_64-y := poly1305-sse2-x86_64.o poly1305_glue.o
ifeq ($(avx2_supported),yes)
sha1-ssse3-y += sha1_avx2_x86_64_asm.o
poly1305-x86_64-y += poly1305-avx2-x86_64.o
endif
ifeq ($(sha1_ni_supported),yes)
sha1-ssse3-y += sha1_ni_asm.o
endif
crc32c-intel-y := crc32c-intel_glue.o
crc32c-intel-$(CONFIG_64BIT) += crc32c-pcl-intel-asm_64.o
crc32-pclmul-y := crc32-pclmul_asm.o crc32-pclmul_glue.o
sha256-ssse3-y := sha256-ssse3-asm.o sha256-avx-asm.o sha256-avx2-asm.o sha256_ssse3_glue.o
ifeq ($(sha256_ni_supported),yes)
sha256-ssse3-y += sha256_ni_asm.o
endif
sha512-ssse3-y := sha512-ssse3-asm.o sha512-avx-asm.o sha512-avx2-asm.o sha512_ssse3_glue.o
crct10dif-pclmul-y := crct10dif-pcl-asm_64.o crct10dif-pclmul_glue.o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #
# Arch-specific CryptoAPI modules.
#

avx2_supported := $(call as-instr,vpgatherdd %ymm0$(comma)(%eax$(comma)%ymm1\
                                $(comma)4)$(comma)%ymm2,yes,no)
ifeq ($(avx2_supported),yes)
	obj-$(CONFIG_CRYPTO_SHA256_MB) += sha256-mb.o
	sha256-mb-y := sha256_mb.o sha256_mb_mgr_flush_avx2.o \
	     sha256_mb_mgr_init_avx2.o sha256_mb_mgr_submit_avx2.o sha256_x8_avx2.o
endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #
# Arch-specific CryptoAPI modules.
#

avx2_supported := $(call as-instr,vpgatherdd %ymm0$(comma)(%eax$(comma)%ymm1\
                                $(comma)4)$(comma)%ymm2,yes,no)
ifeq ($(avx2_supported),yes)
	obj-$(CONFIG_CRYPTO_SHA512_MB) += sha512-mb.o
	sha512-mb-y := sha512_mb.o sha512_mb_mgr_flush_avx2.o \
	     sha512_mb_mgr_init_avx2.o sha512_mb_mgr_submit_avx2.o sha512_x4_avx2.o
endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #
# Makefile for kernel probes
#

obj-$(CONFIG_KPROBES)		+= core.o
obj-$(CONFIG_OPTPROBES)		+= opt.o
obj-$(CONFIG_KPROBES_ON_FTRACE)	+= ftrace.o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #
# Makefile for the linux kernel.
#

extra-y	:= head_$(BITS).o
extra-y	+= head$(BITS).o
extra-y	+= ebda.o
extra-y	+= platform-quirks.o
extra-y	+= vmlinux.lds

CPPFLAGS_vmlinux.lds += -U$(UTS_MACHINE)

ifdef CONFIG_FUNCTION_TRACER
# Do not profile debug and lowlevel utilities
CFLAGS_REMOVE_tsc.o = -pg
CFLAGS_REMOVE_paravirt-spinlocks.o = -pg
CFLAGS_REMOVE_pvclock.o = -pg
CFLAGS_REMOVE_kvmclock.o = -pg
CFLAGS_REMOVE_ftrace.o = -pg
CFLAGS_REMOVE_early_printk.o = -pg
endif

KASAN_SANITIZE_head$(BITS).o				:= n
KASAN_SANITIZE_dumpstack.o				:= n
KASAN_SANITIZE_dumpstack_$(BITS).o			:= n
KASAN_SANITIZE_stacktrace.o := n

OBJECT_FILES_NON_STANDARD_head_$(BITS).o		:= y
OBJECT_FILES_NON_STANDARD_relocate_kernel_$(BITS).o	:= y
OBJECT_FILES_NON_STANDARD_mcount_$(BITS).o		:= y
OBJECT_FILES_NON_STANDARD_test_nx.o			:= y

# If instrumentation of this dir is enabled, boot hangs during first second.
# Probably could be more selective here, but note that files related to irqs,
# boot, dumpstack/stacktrace, etc are either non-interesting or can lead to
# non-deterministic coverage.
KCOV_INSTRUMENT		:= n

CFLAGS_irq.o := -I$(src)/../include/asm/trace

obj-y			:= process_$(BITS).o signal.o
obj-$(CONFIG_COMPAT)	+= signal_compat.o
obj-y			+= traps.o irq.o irq_$(BITS).o dumpstack_$(BITS).o
obj-y			+= time.o ioport.o dumpstack.o nmi.o
obj-$(CONFIG_MODIFY_LDT_SYSCALL)	+= ldt.o
obj-y			+= setup.o x86_init.o i8259.o irqinit.o jump_label.o
obj-$(CONFIG_IRQ_WORK)  += irq_work.o
obj-y			+= probe_roms.o
obj-$(CONFIG_X86_64)	+= sys_x86_64.o mcount_64.o
obj-$(CONFIG_X86_ESPFIX64)	+= espfix_64.o
obj-$(CONFIG_SYSFS)	+= ksysfs.o
obj-y			+= bootflag.o e820.o
obj-y			+= pci-dma.o quirks.o topology.o kdebugfs.o
obj-y			+= alternative.o i8253.o pci-nommu.o hw_breakpoint.o
obj-y			+= tsc.o tsc_msr.o io_delay.o rtc.o
obj-y			+= pci-iommu_table.o
obj-y			+= resource.o

obj-y				+= process.o
obj-y				+= fpu/
obj-y				+= ptrace.o
obj-$(CONFIG_X86_32)		+= tls.o
obj-$(CONFIG_IA32_EMULATION)	+= tls.o
obj-y				+= step.o
obj-$(CONFIG_INTEL_TXT)		+= tboot.o
obj-$(CONFIG_ISA_DMA_API)	+= i8237.o
obj-$(CONFIG_STACKTRACE)	+= stacktrace.o
obj-y				+= cpu/
obj-y				+= acpi/
obj-y				+= reboot.o
obj-$(CONFIG_X86_MSR)		+= msr.o
obj-$(CONFIG_X86_CPUID)		+= cpuid.o
obj-$(CONFIG_PCI)		+= early-quirks.o
apm-y				:= apm_32.o
obj-$(CONFIG_APM)		+= apm.o
obj-$(CONFIG_SMP)		+= smp.o
obj-$(CONFIG_SMP)		+= smpboot.o
obj-$(CONFIG_SMP)		+= tsc_sync.o
obj-$(CONFIG_SMP)		+= setup_percpu.o
obj-$(CONFIG_X86_MPPARSE)	+= mpparse.o
obj-y				+= apic/
obj-$(CONFIG_X86_REBOOTFIXUPS)	+= reboot_fixups_32.o
obj-$(CONFIG_DYNAMIC_FTRACE)	+= ftrace.o
obj-$(CONFIG_LIVEPATCH)	+= livepatch.o
obj-$(CONFIG_FUNCTION_GRAPH_TRACER) += ftrace.o
obj-$(CONFIG_FTRACE_SYSCALLS)	+= ftrace.o
obj-$(CONFIG_X86_TSC)		+= trace_clock.o
obj-$(CONFIG_KEXEC_CORE)	+= machine_kexec_$(BITS).o
obj-$(CONFIG_KEXEC_CORE)	+= relocate_kernel_$(BITS).o crash.o
obj-$(CONFIG_KEXEC_FILE)	+= kexec-bzimage64.o
obj-$(CONFIG_CRASH_DUMP)	+= crash_dump_$(BITS).o
obj-y				+= kprobes/
obj-$(CONFIG_MODULES)		+= module.o
obj-$(CONFIG_DOUBLEFAULT)	+= doublefault.o
obj-$(CONFIG_KGDB)		+= kgdb.o
obj-$(CONFIG_VM86)		+= vm86_32.o
obj-$(CONFIG_EARLY_PRINTK)	+= early_printk.o

obj-$(CONFIG_HPET_TIMER) 	+= hpet.o
obj-$(CONFIG_APB_TIMER)		+= apb_timer.o

obj-$(CONFIG_AMD_NB)		+= amd_nb.o
obj-$(CONFIG_DEBUG_RODATA_TEST)	+= test_rodata.o
obj-$(CONFIG_DEBUG_NX_TEST)	+= test_nx.o
obj-$(CONFIG_DEBUG_NMI_SELFTEST) += nmi_selftest.o

obj-$(CONFIG_KVM_GUEST)		+= kvm.o kvmclock.o
obj-$(CONFIG_PARAVIRT)		+= paravirt.o paravirt_patch_$(BITS).o
obj-$(CONFIG_PARAVIRT_SPINLOCKS)+= paravirt-spinlocks.o
obj-$(CONFIG_PARAVIRT_CLOCK)	+= pvclock.o
obj-$(CONFIG_X86_PMEM_LEGACY_DEVICE) += pmem.o

obj-$(CONFIG_PCSPKR_PLATFORM)	+= pcspeaker.o

obj-$(CONFIG_X86_CHECK_BIOS_CORRUPTION) += check.o

obj-$(CONFIG_SWIOTLB)			+= pci-swiotlb.o
obj-$(CONFIG_OF)			+= devicetree.o
obj-$(CONFIG_UPROBES)			+= uprobes.o
obj-y					+= sysfb.o
obj-$(CONFIG_X86_SYSFB)			+= sysfb_simplefb.o
obj-$(CONFIG_EFI)			+= sysfb_efi.o

obj-$(CONFIG_PERF_EVENTS)		+= perf_regs.o
obj-$(CONFIG_TRACING)			+= tracepoint.o

ifdef CONFIG_FRAME_POINTER
obj-y					+= unwind_frame.o
else
obj-y					+= unwind_guess.o
endif

###
# 64 bit specific files
ifeq ($(CONFIG_X86_64),y)
	obj-$(CONFIG_AUDIT)		+= audit_64.o

	obj-$(CONFIG_GART_IOMMU)	+= amd_gart_64.o aperture_64.o
	obj-$(CONFIG_CALGARY_IOMMU)	+= pci-calgary_64.o tce_64.o

	obj-$(CONFIG_PCI_MMCONFIG)	+= mmconf-fam10h_64.o
	obj-y				+= vsmp_64.o
endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #
# Build rules for the FPU support code:
#

obj-y				+= init.o bugs.o core.o regset.o signal.o xstate.o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       #
# Makefile for local APIC drivers and for the IO-APIC code
#

# Leads to non-deterministic coverage that is not a function of syscall inputs.
# In particualr, smp_apic_timer_interrupt() is called in random places.
KCOV_INSTRUMENT		:= n

obj-$(CONFIG_X86_LOCAL_APIC)	+= apic.o apic_noop.o ipi.o vector.o
obj-y				+= hw_nmi.o

obj-$(CONFIG_X86_IO_APIC)	+= io_apic.o
obj-$(CONFIG_PCI_MSI)		+= msi.o
obj-$(CONFIG_HT_IRQ)		+= htirq.o
obj-$(CONFIG_SMP)		+= ipi.o

ifeq ($(CONFIG_X86_64),y)
# APIC probe will depend on the listing order here
obj-$(CONFIG_X86_NUMACHIP)	+= apic_numachip.o
obj-$(CONFIG_X86_UV)		+= x2apic_uv_x.o
obj-$(CONFIG_X86_X2APIC)	+= x2apic_phys.o
obj-$(CONFIG_X86_X2APIC)	+= x2apic_cluster.o
obj-y				+= apic_flat_64.o
endif

# APIC probe will depend on the listing order here
obj-$(CONFIG_X86_BIGSMP)	+= bigsmp_32.o

# For 32bit, probe_32 need to be listed last
obj-$(CONFIG_X86_LOCAL_APIC)	+= probe_$(BITS).o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                obj-$(CONFIG_ACPI)		+= boot.o
obj-$(CONFIG_ACPI_SLEEP)	+= sleep.o wakeup_$(BITS).o
obj-$(CONFIG_ACPI_APEI)		+= apei.o
obj-$(CONFIG_ACPI_CPPC_LIB)	+= cppc_msr.o

ifneq ($(CONFIG_ACPI_PROCESSOR),)
obj-y				+= cstate.o
endif

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #
# Makefile for x86-compatible CPU details, features and quirks
#

# Don't trace early stages of a secondary CPU boot
ifdef CONFIG_FUNCTION_TRACER
CFLAGS_REMOVE_common.o = -pg
CFLAGS_REMOVE_perf_event.o = -pg
endif

# If these files are instrumented, boot hangs during the first second.
KCOV_INSTRUMENT_common.o := n
KCOV_INSTRUMENT_perf_event.o := n

# Make sure load_percpu_segment has no stackprotector
nostackp := $(call cc-option, -fno-stack-protector)
CFLAGS_common.o		:= $(nostackp)

obj-y			:= intel_cacheinfo.o scattered.o topology.o
obj-y			+= common.o
obj-y			+= rdrand.o
obj-y			+= match.o
obj-y			+= bugs.o

obj-$(CONFIG_PROC_FS)	+= proc.o
obj-$(CONFIG_X86_FEATURE_NAMES) += capflags.o powerflags.o

obj-$(CONFIG_CPU_SUP_INTEL)		+= intel.o
obj-$(CONFIG_CPU_SUP_AMD)		+= amd.o
obj-$(CONFIG_CPU_SUP_CYRIX_32)		+= cyrix.o
obj-$(CONFIG_CPU_SUP_CENTAUR)		+= centaur.o
obj-$(CONFIG_CPU_SUP_TRANSMETA_32)	+= transmeta.o
obj-$(CONFIG_CPU_SUP_UMC_32)		+= umc.o

obj-$(CONFIG_X86_MCE)			+= mcheck/
obj-$(CONFIG_MTRR)			+= mtrr/
obj-$(CONFIG_MICROCODE)			+= microcode/

obj-$(CONFIG_X86_LOCAL_APIC)		+= perfctr-watchdog.o

obj-$(CONFIG_HYPERVISOR_GUEST)		+= vmware.o hypervisor.o mshyperv.o

ifdef CONFIG_X86_FEATURE_NAMES
quiet_cmd_mkcapflags = MKCAP   $@
      cmd_mkcapflags = $(CONFIG_SHELL) $(srctree)/$(src)/mkcapflags.sh $< $@

cpufeature = $(src)/../../include/asm/cpufeatures.h

targets += capflags.c
$(obj)/capflags.c: $(cpufeature) $(src)/mkcapflags.sh FORCE
	$(call if_changed,mkcapflags)
endif
clean-files += capflags.c
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                obj-y				=  mce.o mce-severity.o mce-genpool.o

obj-$(CONFIG_X86_ANCIENT_MCE)	+= winchip.o p5.o
obj-$(CONFIG_X86_MCE_INTEL)	+= mce_intel.o
obj-$(CONFIG_X86_MCE_AMD)	+= mce_amd.o
obj-$(CONFIG_X86_MCE_THRESHOLD) += threshold.o
obj-$(CONFIG_X86_MCE_INJECT)	+= mce-inject.o

obj-$(CONFIG_X86_THERMAL_VECTOR) += therm_throt.o

obj-$(CONFIG_ACPI_APEI)		+= mce-apei.o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       obj-y		:= main.o if.o generic.o cleanup.o
obj-$(CONFIG_X86_32) += amd.o cyrix.o centaur.o

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     microcode-y				:= core.o
obj-$(CONFIG_MICROCODE)			+= microcode.o
microcode-$(CONFIG_MICROCODE_INTEL)	+= intel.o intel_lib.o
microcode-$(CONFIG_MICROCODE_AMD)	+= amd.o
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        